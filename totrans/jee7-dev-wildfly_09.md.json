["```java\njboss-cli.bat\n\n```", "```java\n./jboss-cli.sh\n\n```", "```java\n[disconnected /] connect\n[standalone@localhost:9990 /]\n\n```", "```java\n[disconnected /] connect 192.168.1.1\n[standalone@192.168.1.1:9990 /]\n\n```", "```java\n> jboss-cli.bat --connect command=:shutdown\n{\"outcome\" => \"success\"}\n\n```", "```java\n[disconnected /] connect 10.13.2.255\nAuthenticating against security realm: ManagementRealm\nUsername: administrator\nPassword:\n[standalone@10.13.2.255:9990 /]\n\n```", "```java\njboss-cli.bat --gui\n\n```", "```java\n/node-type=node-name\n\n```", "```java\n/subsystem=datasources/data-source=ExampleDS\n\n```", "```java\n:operation-name\n\n```", "```java\n/subsystem=datasources/:read-resource \n{\n    \"outcome\" => \"success\",\n    \"result\" => {\n        \"data-source\" => {\"ExampleDS\" => undefined},\n        \"jdbc-driver\" => {\"h2\" => undefined},\n        \"xa-data-source\" => undefined\n    }\n}\n```", "```java\n/subsystem=datasources/data-source=ExampleDS/:read-attribute(name=enabled) \n{\n    \"outcome\" => \"success\",\n    \"result\" => false\n}\n```", "```java\n/socket-binding-group=standard-sockets/socket-binding=http/:write-attribute(name=port,value=8080)\n{\n    \"outcome\" => \"success\",\"response-headers\" => {\n        \"operation-requires-reload\" => true,\n        \"process-state\" => \"reload-required\"\n    }\n}\n```", "```java\n/subsystem=naming/:jndi-view\n{\n    \"outcome\" => \"success\",\n    \"result\" => {\"java: contexts\" => {\n        \"java:\" => {\n            \"TransactionManager\" => {\n                \"class-name\" => \"com.arjuna.ats.jbossatx.jta.TransactionManagerDelegate\",\"value\" => \"com.arjuna.ats.jbossatx.jta.TransactionManagerDelegate@afd978\"\n            },\n     . . .\n}\n```", "```java\n[standalone@localhost:9990 /] /\ncore-service           extension              socket-binding-group\ndeployment             interface              subsystem\ndeployment-overlay     path                   system-property\n```", "```java\n[standalone@localhost:9990 /] /subsystem=\nbatch                jdr                  resource-adapters\ndatasources          jmx                  sar\ndeployment-scanner   jpa                  security\nee                   jsf                  threads\nejb3                 logging              transactions\ninfinispan           mail                 undertow\nio                   naming               webservices\njaxrs                pojo                 weld\njca                  remoting\n```", "```java\n[standalone@localhost:9990 /] /subsystem=deployment-scanner/scanner=default:\nadd                          read-resource\nread-attribute              read-resource-description\nread-children-names          remove\nread-children-resources      resolve-path\nread-children-types          undefine-attribute\nread-operation-description   whoami\nread-operation-names         write-attribute\n```", "```java\n[standalone@localhost:9990 /] /subsystem=deployment-scanner/scanner=default:read-attribute(\ninclude-defaults=   name=\n```", "```java\n[standalone@localhost:9990 /] /subsystem=deployment-scanner/scanner=default:read-attribute(name=\nruntime-failure-causes-rollback   scan-enabled\nrelative-to                       scan-interval\npath                              auto-deploy-zipped\nauto-deploy-exploded              deployment-timeout\nauto-deploy-xml\n```", "```java\n[standalone@localhost:9990 /] /subsystem=deployment-\nscanner/scanner=default:read-attribute(name=scan-enabled)\n{\n \"outcome\" => \"success\",\n \"result\" => true\n}\n\n```", "```java\n[disconnected /] connect\n[standalone@localhost:9990 /] deploy ExampleApp.war\n\n```", "```java\n[standalone@localhost:9990 /] deploy ../MyApp.war \n\n```", "```java\n[standalone@localhost:9990 /] deploy c:\\deployments\\MyApp.war\n\n```", "```java\n[standalone@localhost:9990 /] deploy -f ../MyApp.war\n\n```", "```java\n[standalone@localhost:9990 /] undeploy MyApp.war\n\n```", "```java\n[domain@localhost:9990 /] deploy ../application.ear --all-server-groups\n```", "```java\n[domain@localhost:9990 /] undeploy application.ear --all-relevant-server-groups\n\n```", "```java\n[domain@localhost:9990 /] deploy application.ear --server-groups=main-server-group\n\n```", "```java\n[domain@localhost:9990 /] deploy application.ear --server-groups=main-server-group,other-server-group\nSuccessfully deployed application.ear\n\n```", "```java\n[domain@localhost:9990 /] undeploy wflyproject.war --server-groups=main-server-group\n\n```", "```java\nUndeploy failed: {\"domain-failure-description\" => {\"Composite operation failed and was rolled back. Steps that failed:\" => {\"Operation step-3\" => \"Cannot remove deployment wflyproject.war from the domain as it is still used by server groups [other-server-group]\"}}}\n\n```", "```java\n[domain@localhost:9990 /] undeploy application.ear --server-groups=main-server-group --keep-content\n\n```", "```java\njboss-cli.bat --file=test.cli\n\n```", "```java\n./jboss-cli.sh --file=test.cli\n\n```", "```java\nconnect\ndeploy /usr/data/example.war\nconnect 127.0.0.1:10190\ndeploy /usr/data/example.war\n\n```", "```java\nconnect\n/server-group=main-server-group:start-servers\n/server-group=main-server-group:stop-servers\n\n```", "```java\nconnect\nif (result == \"STARTED\") of /host=master/server-config=server-one:read-attribute(name=status)\n/host=master/server-config=server-one:stop\nend-if\n\nif (result == \"STARTED\") of /host=master/server-config=server-two:read-attribute(name=status)\n/host=master/server-config=server-two:stop\nend-if\n/host=master/server-config=server-one:start\n\n/host=master/server-config=server-two:start\n\n```", "```java\nconnect\n\nmodule add --name=org.postgresql --resources= postgresql-9.3-1101.jdbc41.jar  --dependencies=javax.api,javax.transaction.api\n\n/subsystem=datasources/jdbc-driver=postgresql:add(driver-module-name=org.postgresql,driver-name=postgresql,driver-class-name=org.postgresql.Driver)\n\n/subsystem=datasources/data-source=PostgreSQLDS:add(jndi-name=java:jboss/datasources/PostgreSQLDS , driver-name=postgresql, connection-url=jdbc:postgresql://localhost:5432/ticketsystem,user-name=jboss,password=jboss)\n\n```", "```java\nconnect\njms-queue add  --queue-address=queue1 --entries=queues/queue1 \n\n```", "```java\nconnect\njms-topic add  --topic-address=topic1 --entries=topics/topic1\n\n```", "```java\njava -jar jython-installer-2.5.3.jar\n\n```", "```java\nset JYTHON_HOME= C:\\jython2.5.3\nset PATH=%PATH%;%JYTHON_HOME%\\bin\n\nset CLASSPATH=%CLASSPATH%;%JBOSS_HOME%\\bin\\client\\jboss-cli-client.jar;.\n\n```", "```java\nexport PATH=$PATH:/usr/data/jython2.5.3/bin\nexport CLASSPATH=$CLASSPATH$:%JBOSS_HOME%/bin/client/jboss-cli-client.jar\n\n```", "```java\nfrom org.jboss.as.cli.scriptsupport import CLI\n\ncli = CLI.newInstance()\ncli.connect()\n\ncli.cmd(\"cd /subsystem=naming\")\n\nresult = cli.cmd(\":jndi-view\")\nresponse = result.getResponse()\n\nprint 'JNDI VIEW ======================= '\nprint response\ncli.disconnect()\n```", "```java\njython script.py\n```", "```java\nfrom org.jboss.as.cli.scriptsupport import CLI\n\ncli = CLI.newInstance()\ncli.connect()\n\ncli.cmd(\"cd /core-service=platform-mbean/type=memory/\")\n\nresult = cli.cmd(\":read-resource(recursive=false,proxies=false,include-runtime=true,include-defaults=true)\")\n\nresponse = result.getResponse()\nenabled = response.get(\"result\").get(\"heap-memory-usage\")\n\nused = enabled.get(\"used\").asInt()\n\nif used > 512000000:\n    print \"Over 1/2 Gb Memory usage \"\nelse:\n    print 'Low usage!'\n\ncli.disconnect()\n```", "```java\n[standalone@localhost:9990 /] /core-service=platform-mbean/type=memory:read-resource(recursive=false,proxies=false,include-runtime=true,include-defaults=true)\n{\n    \"outcome\" => \"success\",\"result\" => {\n        \"heap-memory-usage\" => {\"init\" => 67108864L,\"used\" => 59572256L,\"committed\" => 170852352L,\"max\" => 477233152L},\n        \"non-heap-memory-usage\" => {\n            \"init\" => 24313856L,\"used\" => 90491328L,\"committed\" => 90701824L,\"max\" => 369098752L},\n        \"object-pending-finalization-count\" => 0,\"verbose\" => false\n    }\n}\n```", "```java\nDependencies: org.jboss-as-controller-client,org.jboss.dmr\n```", "```java\nModelControllerClient client = ModelControllerClient.Factory.create(InetAddress.getByName(\"localhost\"), 9990);\n\n```", "```java\nfinal ModelNode operation = new ModelNode();\noperation.get(\"operation\").set(\"jndi-view\");\n\nfinal ModelNode address = operation.get(\"address\");\naddress.add(\"subsystem\", \"naming\");\n\noperation.get(\"recursive\").set(true);\noperation.get(\"operations\").set(true);\n\nfinal ModelNode returnVal = client.execute(operation);\nlogger.info(returnVal.get(\"result\").toString());\n\n```", "```java\npackage com.packtpub.wflydevelopment.chapter9;\n\nimport org.jboss.as.controller.client.ModelControllerClient;\nimport org.jboss.dmr.ModelNode;\n\nimport javax.ejb.Schedule;\nimport javax.ejb.Stateless;\nimport java.io.Closeable;\nimport java.net.InetAddress;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\n@Stateless\npublic class WatchMyDB {\n\n    private final static Logger logger = Logger.getLogger(WatchMyDB.class.getName());\n\n    @Schedule(dayOfWeek = \"*\", hour = \"*\", minute = \"*\", second =\n            \"*/30\", year = \"*\", persistent = false)\n    public void backgroundProcessing() {\n        ModelControllerClient client = null;\n        try {\n            client = ModelControllerClient.Factory.create(InetAddress.getByName(\"localhost\"), 9990);\n            final ModelNode operation = new ModelNode();\n            operation.get(\"operation\").set(\"read-resource\");\n            operation.get(\"include-runtime\").set(true);\n            final ModelNode address = operation.get(\"address\");\n            address.add(\"subsystem\", \"datasources\");\n            address.add(\"data-source\", \"ExampleDS\");\n            address.add(\"statistics\", \"pool\");\n            final ModelNode returnVal = client.execute(operation);\n\n            final ModelNode node2 = returnVal.get(\"result\");\n            final String stringActiveCount = node2.get(\"ActiveCount\").asString();\n\n            if (stringActiveCount.equals(\"undefined\")) {\n                return; // Connection unused\n            }\n            int activeCount = Integer.parseInt(stringActiveCount);\n\n            if (activeCount > 50) {\n                alertAdministrator();\n            }\n        } catch (Exception exc) {\n            logger.log(Level.SEVERE, \"Exception !\", exc);\n        } finally {\n            safeClose(client);\n        }\n    }\n\n    public void safeClose(final Closeable closeable) {\n        if (closeable != null) {\n            try {\n                closeable.close();\n            } catch (Exception e) {\n                logger.log(Level.SEVERE, \"Exception closing the client! \", e);\n            }\n        }\n    }\n\n    private void alertAdministrator() {\n        // Implement it !\n    }\n}\n```", "```java\n/core-service=management/access=authorization:write-attribute(name=provider, value=rbac)\n\n```", "```java\n  <security-realm name=\"ManagementRealm\">\n    <authentication>\n <local default-user=\"$local\" allowed-users=\"*\"/>\n     <properties path=\"mgmt-users.properties\" relative-to=\"jboss.server.config.dir\"/>\n    </authentication>\n    <authorization map-groups-to-roles=\"false\">\n     <properties path=\"mgmt-groups.properties\" relative-to=\"jboss.server.config.dir\"/>\n    </authorization>\n </security-realm>\n```", "```java\n/core-service=management/access=audit/logger=audit-log:write-attribute(name=enabled, value=true)\n\n```"]