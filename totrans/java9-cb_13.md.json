["```java\n        class Employee{\n          private String empId;\n          public String getEmpId() {\n            return empId;\n          }\n          public void setEmpId ( String empId ) {\n            this.empId = empId;\n          }\n        }\n```", "```java\n        interface Employability { \n          public boolean employable();\n        }\n```", "```java\n        public Employee newEmployee(String empId ) {\n          Employee emp = new Employee();\n          emp.setEmpId(empId);\n          return emp;\n        }\n```", "```java\n        Employee e = newEmployee(\"1234\");\n```", "```java\npublic void newMethod(){\n  System.out.println(\"New  Method\");\n  undefinedMethod();\n}\n```", "```java\npublic void undefinedMethod(){\n  System.out.println(\"Now defined\");\n}\n```", "```java\n        \"Hello World\"\n        String msg = \"Hello, %s. Good Morning\"\n        System.out.println(String.format(msg, \"Friend\"))\n        int someInt = 10\n        boolean someBool = false\n        if ( someBool ) {\n          System.out.println(\"True block executed\");\n        }\n        if ( someBool ) {\n          System.out.println(\"True block executed\");\n        }else{\n          System.out.println(\"False block executed\");\n        }\n        for ( int i = 0; i < 10; i++ ){\n          System.out.println(\"I is : \" + i );\n        }\n```", "```java\n        module jshell{\n          requires jdk.jshell;\n        }\n```", "```java\n        JShell myShell = JShell.create();\n```", "```java\n        try(Scanner reader = new Scanner(System.in)){\n          while(true){\n            String snippet = reader.nextLine();\n            if ( \"EXIT\".equals(snippet)){\n              break;\n            }\n            //TODO: Code here for evaluating the snippet using JShell API\n          }\n        }\n```", "```java\n        List<SnippetEvent> events = myShell.eval(snippet);\n        events.stream().forEach(se -> {\n          System.out.print(\"Evaluation status: \" + se.status());\n          System.out.println(\" Evaluation result: \" + se.value());\n        });\n```", "```java\n        System.out.println(\"Snippets processed: \");\n        myShell.snippets().forEach(s -> {\n          String msg = String.format(\"%s -> %s\", s.kind(), s.source());\n          System.out.println(msg);\n        });\n```", "```java\n        System.out.println(\"Methods: \");\n        myShell.methods().forEach(m -> \n          System.out.println(m.name() + \" \" + m.signature()));\n\n        System.out.println(\"Variables: \");\n        myShell.variables().forEach(v -> \n          System.out.println(v.typeName() + \" \" + v.name()));\n```", "```java\n        myShell.close();\n```"]