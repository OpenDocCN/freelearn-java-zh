- en: Chapter 6. Building IcedTea with Other VM Implementations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章：使用其他VM实现构建IcedTea
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Configuring cross-compilation between ARM and x86
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置ARM和x86之间的交叉编译
- en: Building IcedTea for ARM with integrated CACAO VM
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用集成CACAO VM为ARM构建IcedTea
- en: Porting JamVM to use OpenJDK
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将JamVM移植到使用OpenJDK
- en: Configuring Zero assembler with the Shark compiler to use OpenJDK
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Shark编译器配置Zero汇编器以使用OpenJDK
- en: Building MIPS and other architectures using OpenEmbedded recipes
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenEmbedded食谱构建MIPS和其他架构
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Though various x86-compatible platforms are widespread and common to use, there
    are other architectures to think about. Java language itself is designed to be
    as cross-platform, as possible. In an x86-compatible world, it means that Java
    will work equally well and predictable for the vast majority of operating systems.
    Where more architectures are concerned, it should work on a great number of them.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然各种x86兼容平台广泛使用且常见，但还有其他架构需要考虑。Java语言本身被设计成尽可能的跨平台。在x86兼容的世界里，这意味着Java将在大多数操作系统上以相同的方式和可预测性工作。对于更多架构而言，它应该能在其中许多架构上运行。
- en: The ARM architecture is the second architecture among the most popular ones.
    It gives a great balance between power saving and performance, and is used mostly
    in embedded and portable devices. There are several operating systems, supporting
    ARM, such as various Linux distributions, Android, Symbian, MeeGo, and many Windows
    releases.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ARM架构是最受欢迎的架构中的第二位。它在省电和性能之间提供了很好的平衡，主要用于嵌入式和便携式设备。有几个操作系统支持ARM，例如各种Linux发行版、Android、Symbian、MeeGo以及许多Windows版本。
- en: In this chapter, we will speak about building IcedTea on ARM, using virtual
    Java machines, which are not official and aren't parts of the OpenJDK community.
    They are built for different purposes—academic, performance, and so on.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论在ARM上构建IcedTea，使用非官方的虚拟Java机器，它们不是OpenJDK社区的一部分。它们是为了不同的目的而构建的——学术、性能等。
- en: Unfortunately, these days, the only operating system that works with ARM and
    OpenJDK both, is Linux. Nuances of building IcedTea on Linux differ from distribution
    to distribution, though the main idea and philosophy is the same.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，如今，唯一同时支持ARM和OpenJDK的操作系统是Linux。在Linux上构建IcedTea的细微差别因发行版而异，尽管主要思想和哲学是相同的。
- en: 'In this chapter, we will try to use as many different distribution-based examples
    and device nuances, as possible, though the most thoroughly tested ones will be
    the following pairs:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将尽可能多地使用基于不同发行版和设备细微差别的不同示例，尽管最彻底测试的将是以下几对：
- en: Raspberry Pi and Raspbian
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树莓派和Raspbian
- en: Nexus 7 and Ubuntu touch
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nexus 7和Ubuntu touch
- en: This chapter will also cover a topic of cross-compilation with an x86-based
    system, because one may probably need a faster compilation that ARM processors
    are capable of, especially in the case of small computers of the Raspberry Pi
    class.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章还将涵盖使用基于x86的系统进行交叉编译的主题，因为可能需要比ARM处理器能够提供的更快的编译速度，尤其是在树莓派这类小型计算机的情况下。
- en: 'We will have three VMs in this chapter: ZeroVM, CACAO VM, and Jam VM. However,
    only the Zero assembler is a member of an OpenJDK project. The Zero assembler
    is an effort to get rid of platform-specific assembler languages and to build
    an interpreter-only virtual machine. It will make porting any Java executable
    to any operating system a remarkably easy task, but with a significant performance
    impact because of the absence of JIT. However, there is Shark, a JIT-compiler
    for Zero, which uses LLVM to compile the Zero-assembler to the platform-specific
    code. It''s obvious, though, that Shark works only for architectures that are
    supported by LLVM itself.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中我们将介绍三种虚拟机：ZeroVM、CACAO VM和Jam VM。然而，只有Zero汇编器是OpenJDK项目的一员。Zero汇编器是一个旨在消除平台特定汇编语言并构建仅包含解释器的虚拟机的努力。它将使任何Java可执行文件移植到任何操作系统变得异常简单，但由于缺乏JIT，性能会有显著影响。然而，有一个名为Shark的JIT编译器，它使用LLVM将Zero汇编器编译成特定平台的代码。但很明显，Shark只适用于LLVM本身支持的架构。
- en: JamVM is also famous because of its really small size, which is, depending on
    architectures, between 200 and 250 kilobytes. In this space, it implements the
    full JVM specification, published by Oracle, known as **blue book**.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: JamVM也因为其实际上非常小的尺寸而闻名，这个尺寸取决于架构，在200到250千字节之间。在这个空间内，它实现了Oracle发布的完整JVM规范，被称为**蓝皮书**。
- en: Configuring cross-compilation between ARM and x86
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置ARM和x86之间的交叉编译
- en: Though many of the recent ARM devices have great performance and the same core
    numbers, as their desktop fellows, there are always those whose performance is
    not sufficient enough to do complicated work in a reasonable amount of time. Don't
    want to be bored by endless hours of compilation? Use OpenEmbedded builds. **OpenEmbedded**
    is a build framework to create Linux distributions and can cross-compile for a
    large variety of architectures.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管许多最近的ARM设备具有出色的性能和与桌面设备相同的核心数量，但总有一些设备的性能不足以在合理的时间内完成复杂的工作。不想被无休止的编译时间无聊吗？使用OpenEmbedded构建。**OpenEmbedded**是一个构建框架，用于创建Linux发行版，并且可以为大量架构进行交叉编译。
- en: Getting ready
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will need a real or emulated ARM device with Linux installed on it. The following
    recipes are primarily for the deb-based distributions, but the general idea remains
    the same for any ARM-based device that runs Linux kernel with GNU-based tools.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个真实或模拟的ARM设备，上面安装了Linux。以下配方主要用于基于deb的发行版，但对于任何运行基于GNU工具的Linux内核的ARM设备，基本思想是相同的。
- en: Also, we will need another device with Linux, or Windows with Cygwin installed,
    to do the main compilation job.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还需要另一台装有Linux或安装了Cygwin的Windows设备，以执行主要的编译工作。
- en: This recipe also assumes that you will use the deb-based distributions. If you
    are using the ebuild-based distributions, use their own cross-compile tools. In
    the rpm-based distributions, the process is quite similar.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方还假设您将使用基于deb的发行版。如果您使用的是基于ebuild的发行版，请使用它们自己的交叉编译工具。在基于rpm的发行版中，过程相当类似。
- en: How to do it...
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'First, we need to make use of the OpenEmbedded project. OpenEmbedded is a project
    whose goal is to build a platform-specific environment and build various known
    packages. Take a look at the following procedure to build various packages using
    the OpenEmbedded project:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要利用OpenEmbedded项目。OpenEmbedded是一个旨在构建特定平台环境并构建各种已知包的项目。请查看以下步骤，了解如何使用OpenEmbedded项目构建各种包：
- en: 'In order to use it, we will install some packages:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使用它，我们将安装一些包：
- en: '[PRE0]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After that, we need to get an OpenEmbedded environment:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们需要获取一个OpenEmbedded环境：
- en: '[PRE1]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, we need to create three more projects in the `oe-core` directory:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们需要在`oe-core`目录中创建三个更多项目：
- en: '[PRE2]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Moving ahead, let''s clone some layers into our root directory:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们将一些层克隆到我们的根目录中：
- en: '[PRE3]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, initialize an OpenEmbedded environment:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，初始化一个OpenEmbedded环境：
- en: '[PRE4]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now we have a fully operational OpenEmbedded environment. All we have to do
    is to configure our build. There are two ways to do it: by editing the config
    files manually or through the Hob GUI.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经拥有了一个完全可操作的OpenEmbedded环境。我们只需配置我们的构建。有两种方法可以做到这一点：手动编辑配置文件或通过Hob GUI。
- en: Configuring OpenEmbedded build manually
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 手动配置OpenEmbedded构建
- en: 'You will need to edit two configuration files: the first configuration file
    is for Java layer and the second is generic and easy to include this layer in
    the build, as shown in the following steps:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要编辑两个配置文件：第一个配置文件是Java层，第二个是通用的，易于将其包含在构建中，如下面的步骤所示：
- en: First, edit the `conf/local.conf` file.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，编辑`conf/local.conf`文件。
- en: 'We will set JamVM as a preferred virtual machine:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将设置JamVM为首选虚拟机：
- en: '[PRE5]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Set other versions as you wish (Version 1.8.11, for example):'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需要设置其他版本（例如版本1.8.11）：
- en: '[PRE6]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We will need an ARM build, so we will select a qemu-arm machine as the target
    machine:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要一个ARM构建版本，因此我们将选择qemu-arm作为目标机器：
- en: '[PRE7]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We will also need to mention how many compilation processes can be in progress
    together:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要提到可以同时进行多少个编译过程：
- en: '[PRE8]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Also, we can reconfigure a number of threads for one compiling package. For
    a Quad-core computer, it will be `2`:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，我们可以为单个编译包重新配置多个线程。对于四核计算机，它将是`2`：
- en: '[PRE9]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Then, we will edit the `conf/bblayers.conf` file.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将编辑`conf/bblayers.conf`文件。
- en: 'The following parameter is a version of the file format. It means that there
    was 3 incompatible formats before this:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下参数是文件格式的版本。这意味着在此之前有3个不兼容的格式：
- en: '[PRE10]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We will then set layers to command OpenEmbedded system on what exactly to build:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将设置层以命令OpenEmbedded系统确切地构建什么：
- en: '[PRE11]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Using the Hob utility to configure the OpenEmbedded build
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Hob工具配置OpenEmbedded构建
- en: 'Hob is a graphical UI for BitBake. Please take a look at the following procedures
    to use the Hob utility to configure the OpenEmbedded build:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Hob是BitBake的图形用户界面。请查看以下步骤，了解如何使用Hob工具配置OpenEmbedded构建：
- en: 'Let''s run a `hob` executable from a build directory:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从构建目录中运行一个`hob`可执行文件：
- en: '[PRE12]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This can be done only after an environment initialization. You will have a command
    not found message otherwise.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这只能在环境初始化之后完成。否则，您将收到找不到命令的消息。
- en: '[PRE13]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: A starting screen will appear as shown:![Using the Hob utility to configure
    the OpenEmbedded build](img/8405_06_01.jpg)
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将出现一个启动屏幕，如图所示：![使用Hob工具配置OpenEmbedded构建](img/8405_06_01.jpg)
- en: First, we will select a virtual machine. For ARM processors, the most convenient
    is the qemu-arm machine.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将选择一个虚拟机。对于ARM处理器，最方便的是qemu-arm机器。
- en: After that, we will need to select two additional layers. One is the **meta-oe**
    layer and the second is **meta-java**.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们需要选择两个额外的层。一个是**meta-oe**层，另一个是**meta-java**。
- en: Tip
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: While the `meta-java` folder is in the root folder of OpenEmbedded, the path
    to `meta-oe` is `meta-openembedded/meta-oe/`.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然`meta-java`文件夹位于OpenEmbedded的根目录中，但`meta-oe`的路径是`meta-openembedded/meta-oe/`。
- en: When a machine is chosen, the tool will parse all recipes and compute all dependencies
    needed. Then, the window should look like this:![Using the Hob utility to configure
    the OpenEmbedded build](img/8405_06_02.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当选择了一台机器时，工具将解析所有配方并计算所有所需的依赖项。然后，窗口应如下所示：![使用Hob工具配置OpenEmbedded构建](img/8405_06_02.jpg)
- en: 'Then select a recipe. Here is one Java-related recipe: **java-test-image**.
    Although, it would be better not to choose it and choose **core-image-basic**
    instead.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后选择一个配方。这里有一个与Java相关的配方：**java-test-image**。尽管如此，最好不选择它，而是选择**core-image-basic**。
- en: Tip
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can try to assemble your image from scratch. You can select the package
    you want and dependencies will be automatically calculated.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以尝试从头开始组装您的镜像。您可以选择您想要的包，依赖项将自动计算。
- en: 'You can choose in an advanced configuration section, exactly what the output
    will be. You can even get it in a `.deb` form, as shown:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在高级配置部分，您可以选择输出的确切内容。您甚至可以以`.deb`格式获得它，如图所示：
- en: You need to edit recipes and add **openjdk-7-jre** to them as shown:![Using
    the Hob utility to configure the OpenEmbedded build](img/8405_06_03.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要编辑配方并将**openjdk-7-jre**添加到其中，如图所示：![使用Hob工具配置OpenEmbedded构建](img/8405_06_03.jpg)
- en: Also, you can add some dependencies that are necessary for the build.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，您还可以添加一些必要的依赖项以进行构建。
- en: When all is ready, press the **Build packages** button and the following screen
    will appear:![Using the Hob utility to configure the OpenEmbedded build](img/8405_06_04.jpg)
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当一切准备就绪时，请按**构建包**按钮，将出现以下屏幕：![使用Hob工具配置OpenEmbedded构建](img/8405_06_04.jpg)
- en: If something goes wrong, the **Issues** tab will not be empty.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现问题，**问题**标签页将不会为空。
- en: After the build
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建之后
- en: You will need to copy the build output from the **tmp-eglibc** folder to your
    ARM device.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要将构建输出从**tmp-eglibc**文件夹复制到您的ARM设备上。
- en: How it works…
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: OpenEmbedded is a stack of cross-compile recipes for various tools that needs
    a lot of time for compilation. OpenEmbedded will create a root filesystem from
    scratch. Then it will build the packages that you want to be built. OpenEmbedded
    provides a bunch of abstraction layers, from the developer to the core layer.
    These layers include recipes and tools to build an environment and a target project.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: OpenEmbedded是一系列针对各种工具的交叉编译配方，编译需要花费很多时间。OpenEmbedded将从头开始创建根文件系统。然后，它将构建您想要构建的包。OpenEmbedded提供了一组抽象层，从开发者到核心层。这些层包括构建环境和目标项目的配方和工具。
- en: So, after a performed configuration, the tool will build an environment and
    then some projects in it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在完成配置后，该工具将构建一个环境，并在其中构建一些项目。
- en: There's more...
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: Building OpenEmbedded recipes is not a trivial task. It often needs some problem
    solving skills. It's not unusual when your build, that literally takes hours to
    pass, is interrupted with some errors even when you are trying to build a stock
    Java-test image.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 构建OpenEmbedded配方不是一项简单任务。它通常需要一些问题解决技能。当您尝试构建一个标准的Java-test镜像时，即使花费数小时构建的构建过程被一些错误中断，这也是不寻常的。
- en: Though the basics of recipe-building and correcting will be given in the following
    recipes, we can provide a roadmap to deal with some problems right here, in this
    section.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然配方构建和纠正的基本知识将在以下配方中给出，但我们可以在本节中提供处理一些问题的路线图。
- en: Tip
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Some cases, which were found and overcome by authors, will be found in [Chapter
    8](ch08.html "Chapter 8. Hacking OpenJDK"), *Hacking OpenJDK*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 一些作者发现并克服的情况将在[第8章](ch08.html "第8章。黑客OpenJDK") *黑客OpenJDK* 中找到。
- en: Configure problems – when a header file is not found
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置问题 - 当找不到头文件时
- en: 'Though the building process is similar to creating a well-maintained Linux
    repository from scratch, it''s not so simple. It''s a task of building the whole
    thing from source, and some header movement in some minor package maybe a major
    problem that is fatal to your build, as shown:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然构建过程与从头开始创建一个维护良好的 Linux 仓库相似，但它并不简单。这是一个从源代码构建整个系统的任务，某些小包中的头文件移动可能是一个重大的问题，这对您的构建是致命的，如下所示：
- en: So, it's a dependency problem. At first, try to find out, do you need the package,
    which header is not found, at all.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，这是一个依赖问题。首先，尝试找出，您是否需要该包，是否找不到头文件。
- en: If so, find out whether you can disable it through the standard `./configure`
    properties (those which are specified before make).
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果是这样，找出您是否可以通过标准的 `./configure` 属性（在 `make` 之前指定的）来禁用它。
- en: If you can, you're lucky. Just find a recipe for your package and edit the `.bb`
    or `.inc` file. For OpenJDK, it's `openjdk-7-common.inc`.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您能这样做，那您很幸运。只需找到您包的配方并编辑 `.bb` 或 `.inc` 文件。对于 OpenJDK，它是 `openjdk-7-common.inc`。
- en: Add (or remove) the desired `./configure` property to (or from) `EXTRA_OECONF`.
    Don't forget the screening `\`. If you need that dependency or cannot disable
    it, it's another matter.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所需的 `./configure` 属性添加（或删除）到 `EXTRA_OECONF` 中。不要忘记筛选 `\`。如果您需要该依赖项或无法禁用它，那又是另一回事。
- en: First, consider switching to an older/newer version of the `.bb` files. It may
    solve some problems, but can easily add to them as well.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，考虑切换到 `.bb` 文件的较旧/较新版本。这可能会解决一些问题，但也可能轻易地增加问题。
- en: If this is impossible or will not help, try to find a patch to the source and
    apply it.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果这不可能或不会有所帮助，尝试找到源代码的补丁并应用它。
- en: Fetch problems – where your package is not accessible through any mirror available
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取问题 - 您的包无法通过任何可用的镜像访问
- en: First, try to check whether all the mirrors that are used are permanently offline.
    If not, just wait for a bit while one of those becomes accessible.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，尝试检查是否所有使用的镜像都永久离线。如果不是，只需等待一会儿，直到其中一个变得可访问。
- en: Compile problems – where a compile error occurs
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编译问题 - 发生编译错误的地方
- en: There is always a solution to this kind of problem, which is searchable through
    the Internet.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 总是有解决这类问题的方法，这可以通过互联网搜索找到。
- en: It may be a wrong dependency version or even a major compilation issue that
    slipped away from the maintainer's eye. The solution is to patch your build using
    some known patches or even your own patch, or change the source parameter of the
    package.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是一个错误的依赖版本，甚至是一个编译问题，这个问题从维护者的眼中溜走了。解决方案是使用一些已知的补丁或甚至您自己的补丁来修补您的构建，或者更改包的源参数。
- en: Parsing problems – where your recipes cannot be parsed
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解析问题 - 您的配方无法解析
- en: It is not a common problem but it was encountered, for example, in the `openjdk-7`
    branch of the `meta-java` repository. Often it doesn't mean that something is
    completely broken. Check the indicated lines of recipe files for missing \, partial
    comments, and other minor formatting issues. If the problem still appears, consider
    changing your current branch.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是一个常见问题，但确实遇到了，例如在 `meta-java` 仓库的 `openjdk-7` 分支中。通常这并不意味着某些东西完全损坏。检查配方文件中指示的行，以查找缺失的、部分注释和其他格式问题。如果问题仍然存在，考虑更改您当前的分支。
- en: Building IcedTea for ARM with integrated CACAO VM
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 ARM 版本的 IcedTea，集成了 CACAO 虚拟机
- en: This recipe promises to be quite simple, because the integration of CACAO VM
    is already a part of IcedTea itself. It will not require any patching or other
    complicated things.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方承诺相当简单，因为 CACAO 虚拟机的集成已经是 IcedTea 本身的一部分。它不需要任何修补或其他复杂的事情。
- en: Getting ready
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We may need a real or emulated ARM device, which has Linux and any Java environment
    installed. We need Java to perform a `javac` compilation, which is a necessary
    part of the IcedTea building process.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能需要一个真实或模拟的 ARM 设备，该设备已安装 Linux 和任何 Java 环境。我们需要 Java 来执行 `javac` 编译，这是 IcedTea
    构建过程的一个必要部分。
- en: How to do it...
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: We will download IcedTea, unpack it, and build it with the specified parameters,
    that's all.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将下载 IcedTea，解压它，并使用指定的参数构建它，仅此而已。
- en: 'First, let''s get the latest IcedTea source from the server:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们从服务器获取最新的 IcedTea 源代码：
- en: '[PRE14]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: It will download an archive.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它将下载一个存档。
- en: Perform a checksum check if required.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如有必要，执行校验和检查。
- en: 'Let''s unpack an archive and copy it into the `icedtea` directory:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们解压存档并将其复制到 `icedtea` 目录：
- en: '[PRE15]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Then, you might have to install some dependency packages needed to make your
    IcedTea.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您可能需要安装一些制作 IcedTea 所需的依赖包。
- en: 'The given packages are those that were missing on the authors'' machine during
    the first build:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给定的包是在作者第一次构建时在机器上缺失的包：
- en: '[PRE16]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Then, we will make a link for build configuration to find the Java home directory:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将为构建配置创建一个链接以找到 Java 主目录：
- en: '[PRE17]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Tip
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you have a distribution-recommended way to change the default Java home directory,
    please follow it instead.
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您有推荐的方式来更改默认的 Java 主目录，请按照它来做。
- en: 'Then we will enable the CACAO VM in our configuration. Also, we will configure
    the newly built IcedTea to use the CACAO VM not only as the build configuration,
    but as a default:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将在配置中启用 CACAO 虚拟机。此外，我们将配置新构建的 IcedTea 使用 CACAO 虚拟机，不仅作为构建配置，而且作为默认配置：
- en: '[PRE18]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: When running `configure`, you probably will encounter errors with messages indicating
    that some program or library is missing. It's okay, you just need to install them
    using your package manager.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当运行 `configure` 时，您可能会遇到一些错误，错误信息表明某些程序或库缺失。没关系，您只需使用您的包管理器安装它们即可。
- en: 'After doing that, we will build IcedTea using just one simple command:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在完成这些后，我们将使用一个简单的命令构建 IcedTea：
- en: '[PRE19]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: It is a long process, even using cross-compilation, so it's best to have a cup
    of tea or something.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个漫长的过程，即使使用交叉编译，所以最好喝杯茶或类似的东西。
- en: How it works…
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: IcedTea is now supporting CACAO VM as a build configuration just out of the
    box. We will only need to enable this option to configure and add missing dependencies.
    Normally, IcedTea uses a ZeroVM on ARM, but without Shark JIT compilation. Under
    the hood, however, it literally applies hundreds of patches and uses an amount
    of memory that is not acceptable on embedded devices.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: IcedTea 现在支持 CACAO 虚拟机作为默认的构建配置。我们只需要启用此选项来配置并添加缺失的依赖项。通常，IcedTea 在 ARM 上使用
    ZeroVM，但没有 Shark JIT 编译。然而，在底层，它实际上应用了数百个补丁，并使用了在嵌入式设备上不可接受的内存量。
- en: There's more...
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Since you may experience some difficulties with building IcedTea on some devices,
    you may need to use cross-compiling the way we used it before.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 由于您可能在某些设备上构建 IcedTea 时遇到一些困难，您可能需要使用我们之前使用过的交叉编译方式。
- en: 'You may need just to set a variable to the local configuration file:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能只需要设置一个变量到本地配置文件：
- en: '[PRE20]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Porting JamVM to use OpenJDK
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 JamVM 移植到使用 OpenJDK
- en: Another Zero HotSpot alternative for non-JIT supported platforms is JamVM—an
    extremely small VM, which is the smallest among those supporting the blue book
    specification (one that was published in the book form) for Java VMs.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不支持 JIT 的平台，另一个 Zero HotSpot 的替代方案是 JamVM——这是一个极小的虚拟机，在支持蓝皮书规范（以书籍形式发布的）的虚拟机中是最小的。
- en: Getting ready
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: We may need a real or emulated ARM device that has Linux and any Java environment
    installed. We need Java to perform a `javac` compilation, which is a necessary
    part of IcedTea building process.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能需要一个真实或模拟的具有 Linux 和任何 Java 环境安装的 ARM 设备。我们需要 Java 来执行 `javac` 编译，这是 IcedTea
    构建过程中的必要部分。
- en: How to do it...
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Though JamVM patches may be applied manually, we will use the more simple way:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管JamVM补丁可以手动应用，但我们将使用更简单的方法：
- en: 'First, let''s clone the source from the repository:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们从仓库克隆源代码：
- en: '[PRE21]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Then we configure it to use OpenJDK as Java runtime libraries:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将其配置为使用 OpenJDK 作为 Java 运行时库：
- en: '[PRE22]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then we will actually build it from source using the `make` command:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将使用 `make` 命令从源代码实际构建它：
- en: '[PRE23]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Next, we need to copy `libjvm` to `lib`:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要将 `libjvm` 复制到 `lib` 目录下：
- en: '[PRE24]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then let''s copy the OpenJDK contents:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，让我们复制 OpenJDK 内容：
- en: '[PRE25]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Then, let''s run our compiled Java:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，让我们运行我们的编译后的 Java：
- en: '[PRE26]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We will see the output like this:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将看到如下输出：
- en: '[PRE27]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: There's more
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容
- en: Also, the Jam M support is a part of an OpenEmbedded Java layer. In order to
    add it, you will remove the ZeroVM support and add a JamVM support. It's a simple
    task, though you may experience errors during configuration and building.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Jam M 支持 是 OpenEmbedded Java 层的一部分。为了添加它，您需要移除 ZeroVM 支持，并添加 JamVM 支持。虽然这可能是一个简单的任务，但在配置和构建过程中您可能会遇到错误。
- en: Also, you can run whatever Java program you choose with JamVM, even if your
    IcedTea build is not configured to use it.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以使用 JamVM 运行任何选择的 Java 程序，即使您的 IcedTea 构建未配置为使用它。
- en: 'Just type the following:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 只需输入以下命令：
- en: '[PRE28]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Configuring Zero-assembler with the Shark compiler to use OpenJDK
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Shark 编译器配置 Zero-assembler 以使用 OpenJDK
- en: Zero-assembler HotSpot port is the default Java VM for all newly-built OpenJDK
    instances on ARM prior to Java 8\. It is the default Java VM for quite a few JIT-unsupported
    platforms. However, there is an effort to bring JIT power to it, named Shark.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 零汇编器HotSpot端口是Java 8之前所有在ARM上新建的OpenJDK实例的默认Java虚拟机。它是许多JIT不支持平台的默认Java虚拟机。然而，有人正在努力将其JIT功能提升，名为Shark。
- en: Getting ready
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We may need a real or emulated ARM device, which has Linux and any Java environment
    installed. We need Java to perform a `javac` compilation, which is a necessary
    part of the IcedTea building process.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能需要一个真实的或模拟的ARM设备，该设备已安装Linux和任何Java环境。我们需要Java来执行`javac`编译，这是IcedTea构建过程的必要部分。
- en: How to do it...
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Let's download an IcedTea source.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们下载IcedTea源代码。
- en: '[PRE29]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: It will download an archive.
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它将下载一个存档。
- en: Then, you can check a checksum.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你可以检查校验和。
- en: 'Let''s unpack it and copy it into the `icedtea` directory:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们解压它并将其复制到`icedtea`目录中：
- en: '[PRE30]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Then, you may need to install some dependency packages needed to make your IcedTea.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你可能需要安装一些制作IcedTea所需的依赖包。
- en: The following packages are those that were missing on my machine during my first
    build.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是在我的机器上第一次构建时缺失的包。
- en: '[PRE31]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Then, we will make a link for the build configuration to find the Java home
    directory:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将为构建配置创建一个链接以找到Java主目录：
- en: '[PRE32]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Tip
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you have a distribution-recommended way to change the default Java home directory,
    please follow it instead.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你有一个推荐的更改默认Java主目录的发行版方式，请遵循它。
- en: 'Then we will enable Zero-Shark in our configuration. Also, we will configure
    the newly built IcedTea to use Shark VM not only as the build, but as the default:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将在配置中启用Zero-Shark。此外，我们将配置新构建的IcedTea，不仅用于构建，还作为默认使用Shark虚拟机：
- en: '[PRE33]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: When running `configure`, you probably will encounter errors with messages indicating
    that some program or library is missing. It's okay, you just need to install them
    using your package manager.
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当运行`configure`时，你可能会遇到错误，显示某些程序或库缺失。没关系，你只需要使用你的包管理器安装它们。
- en: 'After doing that, we will build IcedTea using just one simple command:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在完成这些之后，我们将使用一条简单的命令来构建IcedTea：
- en: '[PRE34]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: How it works…
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何工作…
- en: Normally, IcedTea uses a ZeroVM on ARM but without Shark JIT-compilation. All
    we need to do is to command it to use ZeroVM and Shark JIT compiler.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，IcedTea在ARM上使用ZeroVM，但没有Shark JIT编译。我们只需要命令它使用ZeroVM和Shark JIT编译器。
- en: Shark is a project that uses a famous list of LLVM-supported platforms to enable
    JIT support on all of them, which is quite impressive. It may not be as fast as
    native JIT but something is better than nothing.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Shark是一个项目，它使用一个著名的LLVM支持的平台列表，以在所有这些平台上启用JIT支持，这相当令人印象深刻。它可能不如本地JIT快，但总比没有好。
- en: Tip
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: On ARM, there is a workable OpenJDK that uses JIT-compilation in HotSpot out
    of the box. However, it's only in the early-access mode and since it's JDK 8,
    this support will not be ported any prior to it.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在ARM上，有一个可以使用HotSpot中的JIT编译的OpenJDK，但它是早期访问模式，并且由于它是JDK 8，因此在此之前的支持将不会移植。
- en: 'The LLVM project''s goal is to achieve the cross-platform compilation across
    as many languages and platforms as possible. It uses frontend and backend transforms
    to provide a flexibility of their tools as shown in the following figure:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: LLVM项目的目标是实现尽可能多的语言和平台的跨平台编译。它使用前端和后端转换来提供工具的灵活性，如下面的图所示：
- en: '![How it works…](img/8405OT_06_05.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作…](img/8405OT_06_05.jpg)'
- en: Because of this structure, LLVM can be used to compile the Java class methods'
    code to an intermediate language and then to a native code. It leaves the simplest
    features as reflection and so on to the VM.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这种结构，LLVM可以将Java类方法的代码编译成中间语言，然后再编译成本地代码。它将最简单的功能如反射等留给虚拟机。
- en: There's more
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多
- en: Also, you could always cross-compile IcedTea with Zero-Shark support. In order
    to do so, refer to the last recipe in this chapter.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你始终可以交叉编译具有Zero-Shark支持的IcedTea。为了做到这一点，请参考本章的最后一条配方。
- en: Building for MIPS and other architectures using OpenEmbedded recipes
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用OpenEmbedded配方为MIPS和其他架构构建
- en: When ARM-based devices are widespread and popular, there are always other architectures.
    The great power of Java is its cross-platformness, so let's try to have builds
    for some other architecture.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 当基于ARM的设备广泛流行时，总有其他架构。Java的强大之处在于其跨平台性，所以让我们尝试为其他一些架构构建。
- en: Getting ready
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need an Internet connection and Linux or Windows with Cygwin installed
    on your computer. Also, from the author's experience, you will need at least 4GB
    RAM.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个互联网连接，以及安装了Cygwin的Linux或Windows电脑。根据作者的实践经验，您至少需要4GB的RAM。
- en: For a comfortable build, it's recommended to have a powerful hardware and a
    fast HDD.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 为了舒适地构建，建议您拥有强大的硬件和快速的硬盘。
- en: Also, you may experience some lags or even OOM-kills during build, so make sure
    that all your data is saved.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您在构建过程中可能会遇到一些延迟，甚至OOM-kills，所以请确保您的所有数据都已保存。
- en: Also, you will need an OpenEmbedded project configured, as described in the
    first recipe of this chapter.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还需要配置一个OpenEmbedded项目，如本章第一道菜谱中所述。
- en: How to do it...
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'First, we will see how to add architectures and software to OpenEmbedded:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将了解如何将架构和软件添加到OpenEmbedded中：
- en: Open your browser, and go to [http://layers.openembedded.org/layerindex/branch/master/layers/](http://layers.openembedded.org/layerindex/branch/master/layers/).
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的浏览器，并访问[http://layers.openembedded.org/layerindex/branch/master/layers/](http://layers.openembedded.org/layerindex/branch/master/layers/)。
- en: You will find a list of architectures supported and a list of software that
    you can install.
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将找到支持的架构列表和您可以安装的软件列表。
- en: Do a Git clone of the repositories containing the code that you need (such as
    `meta-asus` or `meta-htc`).
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆包含您需要的代码的仓库（例如`meta-asus`或`meta-htc`）。
- en: Then prepare your build environment and open the Hob GUI as shown:![How to do
    it...](img/8405_06_06.jpg)
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，准备您的构建环境，并打开如图所示的Hob GUI：![如何操作...](img/8405_06_06.jpg)
- en: Select the machine from the drop-down list.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉列表中选择机器。
- en: Then, you will probably need to set some architecture-specific `./configure`
    options. In order to do that, you will need to change a `bitbake` file, adding
    or correcting the `EXTRA_OECONF` variable. Don't forget to add trailing \s.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您可能需要设置一些特定于架构的`./configure`选项。为了做到这一点，您需要更改一个`bitbake`文件，添加或纠正`EXTRA_OECONF`变量。别忘了添加尾随的\s。
- en: How it works…
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The main goal of this project is to create the repository and distribution from
    scratch, with precompiled images and dependencies. It consists of metadata, called
    the `.bb` files, and many dependencies between them.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的目标是从头开始创建仓库和发行版，包括预编译的镜像和依赖项。它由称为`.bb`文件的元数据组成，以及它们之间众多的依赖关系。
- en: 'If this project is not running very smoothly, and you may need to make some
    changes in order to make your way through. A `.bb` file is a file of the following
    structure:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个项目运行得不是很顺利，您可能需要做一些更改才能顺利通过。`.bb`文件是一个具有以下结构的文件：
- en: '[PRE35]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: This is a plain recipe template and you can add whatever dependency you want
    through it. Also, you can add patches into the recipe directory or even add sources
    to it.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个普通的配方模板，您可以通过它添加任何想要的依赖项。此外，您还可以将补丁添加到配方目录中，甚至将其添加到源代码中。
- en: There's more...
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'You always can build OpenJDK on other architectures using a standard HotSpot
    Zero port. It is fully interpretable and it can make your programs run very slowly,
    but it''s better than nothing. Just follow the standard procedure:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 您始终可以通过使用标准的HotSpot Zero端口在其他架构上构建OpenJDK。它是完全可解释的，可以使您的程序运行得非常慢，但总比没有好。只需遵循标准程序：
- en: '[PRE36]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This approach has its downsides, because most of the architectures aside from
    Intel and ARM are embedded, so you will not be able to make something fast, or
    even make it at all. For example, on Raspberry Pi with a newly-built Raspbian
    and 512 Mb RAM, building IcedTea will randomly crash because of lack of memory,
    even with large swapfiles.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法有其缺点，因为除了英特尔和ARM之外的大多数架构都是嵌入式架构，所以您可能无法制作出快速的产品，甚至可能根本无法制作出来。例如，在搭载新构建的Raspbian和512
    Mb RAM的树莓派上，由于内存不足，构建IcedTea会随机崩溃，即使有大的交换文件。
