["```java\n<dependency>    <groupId>one.microstream</groupId>\n    <artifactId>eclipse-store-integrations-cdi</artifactId>\n    <version>07.00.00-MS-GA</version>\n</dependency>\n<dependency>\n    <groupId>org.jboss.weld.se</groupId>\n    <artifactId>weld-se-shaded</artifactId>\n    <version>3.1.9.Final</version>\n</dependency>\n<dependency>\n    <groupId>io.smallrye.config</groupId>\n    <artifactId>smallrye-config</artifactId>\n    <version>2.7.0</version>\n</dependency>\n```", "```java\npublic class Car {    private final String plate;\n    private final Year year;\n    private final String make;\n    private final String model;\n    // add getters and setters\n// they are removed here for brevity\n}\n```", "```java\n@Storagepublic class Garage {\n    private List<Car> cars;\n    public Garage() {\n        this.cars = new ArrayList<>();\n    }\n    public void add(Car car) {\n        this.cars.add(car);\n    }\n    public List<Car> getCars() {\n        return this.cars.stream()\n          .collect(Collectors.toUnmodifiableList());\n    }\n    public Optional<Car> findByModel(String model) {\n        return this.cars.stream().filter(c ->\n          c.getModel().equals(model))\n                .findFirst();\n    }\n}\n```", "```java\n@ApplicationScopedpublic class CarService {\n    @Inject\n    private Garage garage;\n    @Store\n    public void add(Car car) {\n        Objects.requireNonNull(car, \"car is required\");\n        this.garage.add(car);\n    }\n    public List<Car> getCars() {\n        return this.garage.getCars();\n    }\n    public Optional<Car> findByModel(String model) {\n        Objects.requireNonNull(model, \"model is required\");\n        return this.garage.findByModel(model);\n    }\n}\n```", "```java\npublic static void main(final String[] args) {    try (SeContainer container =\n      SeContainerInitializer.newInstance().initialize()) {\n        final CarService service =\n          container.select(CarService.class).get();\n        System.out.println(\"The current car list: \" +\n          service.getCars());\n        Optional<Car> model =\n          service.findByModel(\"Corolla\");\n        System.out.println(\"Entity found: \" + model);\n        Car dodge = Car.builder()\n                .make(\"Dodge\")\n                .model(\"Wagon\")\n                .year(Year.of(1993))\n                .plate(\"JN8AE2KP7D9956349\").build();\n        Car ford = Car.builder()\n                .make(\"Ford\")\n                .model(\"F250\")\n                .year(Year.of(2005))\n                .plate(\"WBANE73577B200053\").build();\n        Car honda = Car.builder()\n                .make(\"Honda\")\n                .model(\"S2000\")\n                .year(Year.of(2005))\n                .plate(\"WBANE73577B200053\").build();\n        Car toyota = Car.builder()\n                .make(\"Toyota\")\n                .model(\"Corolla\")\n                .year(Year.of(2005))\n                .plate(\"WBANE73577B200053\").build();\n        service.add(ford);\n        service.add(honda);\n        service.add(toyota);\n        service.add(dodge);\n    }\n    System.exit(0);\n}\n```", "```java\none.Eclipse Store.storage.directory=target/dataone.Eclipse Store.channel.count=4\n```", "```java\n    <dependency>    <groupId>one.microstream</groupId>    <artifactId>eclipse-store-integrations-cdi</artifactId>    <version>07.00.00-MS-GA</version></dependency>\n    ```", "```java\n    public class Car {    private final String plate;    private final Integer year;    private final String make;    private final String model;    @JsonbCreator    public Car(@JsonbProperty(\"plate\") String plate,               @JsonbProperty(\"year\") Integer year,               @JsonbProperty(\"make\") String make,               @JsonbProperty(\"model\") String model) {        this.plate = plate;        this.year = year;        this.make = make;        this.model = model;    }}\n    ```", "```java\n@ApplicationScoped@Path(\"garage\")\npublic class GarageResource {\n    @Inject\n    private CarService service;\n    @GET\n    public List<Car> getCars() {\n        return this.service.getCars();\n    }\n    @Path(\"{model}\")\n    @GET\n    public Car findByModel(@PathParam(\"model\") String\n      model) {\n        return this.service.findByModel(model)\n                .orElseThrow(() -> new\n                  WebApplicationException(NOT_FOUND));\n    }\n    @POST\n    public Car add(Car car) {\n        this.service.add(car);\n        return car;\n    }\n}\n```", "```java\n mvn clean packagejava -jar target/garage.jar\n```", "```java\ncurl --location --request POST 'http://localhost:8080/garage' \\--header 'Content-Type: application/json' \\\n--data-raw '{\"make\": \"Dodge\", \"model\": \"Wagon\", \"year\": 1993, \"plate\": \"JN8AE2KP7D9956349\"}'\ncurl --location --request POST 'http://localhost:8080/garage' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\"make\": \"Ford\", \"model\": \"F250\", \"year\": 2005, \"plate\": \"WBANE73577B200053\"}'\ncurl --location --request POST 'http://localhost:8080/garage' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\"make\": \"Honda\", \"model\": \"S2000\", \"year\": 2005, \"plate\": \"WBANE73577B200053\"}'\ncurl --location --request POST 'http://localhost:8080/garage' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\"make\": \"Toyota\", \"model\": \"Corolla\", \"year\": 2005, \"plate\": \"WBANE73577B200053\"}'\ncurl --location --request GET 'http://localhost:8080/garage/Corolla'\ncurl --location --request GET 'http://localhost:8080/garage'\n```"]