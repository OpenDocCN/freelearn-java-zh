["```java\npackage uk.co.xenonique.digital.flows.control;\nimport javax.faces.flow.FlowScoped;\nimport javax.inject.Named;\nimport java.io.Serializable;\n\n@Named\n@FlowScoped(\"digitalFlow\")\npublic class DigitalFlow implements Serializable {\n    public String debugClassName() {\n        return this.getClass().getSimpleName();\n    }\n\n    public String gotoPage1() {\n        return \"digitalFlow.xhtml\";\n    }\n\n    public String gotoPage2() {\n        return \"digitalFlow-p2.xhtml\";\n    }\n\n    public String gotoPage3() {\n        return \"digitalFlow-p3.xhtml\";\n    }\n\n    public String gotoPage4() {\n        return \"digitalFlow-p4.xhtml\";\n    }\n\n    public String gotoEndFlow() {\n        return \"/digitalFlow-return.xhtml\";\n    }\n}\n```", "```java\n<!DOCTYPE html>\n<html \n\n       >\n\n  <ui:composition template=\"/basic_layout.xhtml\">\n    <ui:define name=\"mainContent\">\n      <h1> JSF Implicit Simple Flow</h1>\n\n      <p>\n        Welcome to a simple Faces Flow...\n      </p>\n\n      <div class=\"content-wrapper\">\n        <h:form>\n          <h:commandButton styleClass=\"btn btn-primary btn-lg\"\n            action=\"digitalFlow\" value=\"Enter Digital Flow\" />\n        </h:form>\n      </div>\n\n      <!-- ... -->\n\n    </ui:define> <!--name=\"mainContent\" -->\n  </ui:composition>\n</html>\n```", "```java\n<html  ...>\n<ui:composition template=\"/basic_layout.xhtml>\n  <ui:define name=\"mainContent\">\n    <!-- ... -->\n    <div class=\"content-wrapper\">\n      <h1>Page <code>digitalFlow.xhtml</code></h1>\n      <p>View is part of a flow scope? <code>\n      #{null != facesContext.application.flowHandler.currentFlow}\n      </code>.</p>\n\n      <table class=\"table table-bordered table-striped\">\n          <tr>\n              <th>Expression</th>\n              <th>Value</th>\n          </tr>\n          <tr>\n              <td>digitalFlow.debugClassName()</td>\n              <td>#{digitalFlow.debugClassName()}</td>\n          </tr>\n      </table>\n\n      <h:form prependId=\"false\">\n        <h:commandButton id=\"nextBtn1\"\n          styleClass=\"btn btn-primary btn-lg\"\n          value=\"Next Direct\" action=\"digitalFlow-2\" />\n        &#160;\n        <h:commandButton id=\"nextBtn2\"\n          styleClass=\"btn btn-primary btn-lg\"\n          value=\"Next Via Bean\" action=\"#{digitalFlow.gotoPage2()}\" />\n        &#160;\n        <h:commandButton id=\"exitFlowBtn1\"\n          styleClass=\"btn btn-primary btn-lg\"\n          value=\"Exit Direct\" action=\"/digitalFlow-return\" />\n        &#160;\n        <h:commandButton id=\"exitFlowBtn2\"\n          styleClass=\"btn btn-primary btn-lg\"\n          value=\"Exit Via Bean\" action=\"#{digitalFlow.gotoEndFlow()}\" />\n        &#160;\n      </h:form>\n    </div>\n\n  </ui:define> <!--name=\"mainContent\" -->\n</ui:composition>\n</html>\n```", "```java\n#{null != facesContext.application.flowHandler.currentFlow}\n```", "```java\nnull == FacesContext.getCurrentInstance().getApplication()\n   .getFlowHandler().getCurrentFlow()\n```", "```java\n<h:form prependId=\"false\">\n  <h:commandButton id=\"prevBtn1\"\n  styleClass=\"btn btn-primary btn-lg\"\n  value=\"Prev Direct\" action=\"digitalFlow-p3\" />\n  &#160;\n  <h:commandButton id=\"prevBtn2\"\n  styleClass=\"btn btn-primary btn-lg\"\n  value=\"Prev Via Bean\" action=\"#{digitalFlow.gotoPage3()}\" />\n  &#160;\n  <h:commandButton id=\"exitFlowBtn1\"\n  styleClass=\"btn btn-primary btn-lg\"\n  value=\"Exit Direct\" action=\"/digitalFlow-return\" />\n  &#160;\n  <h:commandButton id=\"exitFlowBtn2\"\n  styleClass=\"btn btn-primary btn-lg\"\n  value=\"Exit Via Bean\" action=\"#{digitalFlow.gotoEndFlow()}\" />\n  &#160;\n</h:form>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app  ...>\n  <!-- ... -->\n  <error-page>\n    <exception-type>\n    javax.faces.application.ViewExpiredException\n    </exception-type>\n    <location>/view-expired.xhtml</location>\n  </error-page>\n  <!-- ... -->\n</web-app>\n```", "```java\n<?xml version='1.0' encoding='UTF-8'?>\n<faces-config version=\"2.2\"\n\n  xsi:schemaLocation=\"\n  http://xmlns.jcp.org/xml/ns/javaee\n  http://xmlns.jcp.org/xml/ns/javaee/web-facesconfig_2_2.xsd\">\n  <flow-definition id=\"flow-id\">\n\n    <start-node>startPage</start-node>\n    <view id=\"startPage\">\n      <vdl-document>/flowname/start.xhtml</vdl-document>\n    </view>\n\n    <view id=\"inside-flow-id-1\"> <vdl-document>\n      /flowname/inside-flow-id-1.xhtml </vdl-document>\n    </view>\n    <view id=\"inside-flow-id-2\"> <vdl-document>\n      /flowname/inside-flow-id-2.xhtml </vdl-document>\n    </view>\n\n    <flow-return id=\"return-from-flow-id-1\">\n      <from-outcome>/outside-page-1</from-outcome>\n    </flow-return>\n    <flow-return id=\"return-from-flow-id-2\">\n      <from-outcome>/outside-page-21</from-outcome>\n    </flow-return>\n\n  </flow-definition>\n</faces-config>\n```", "```java\n<faces-config version=\"2.2\" ...>\n  <flow-definition id=\"flow-id\">\n    ...\n    <switch id=\"customerPaymentTab\">\n      <case>\n        <if>\n          #{controller.paymentType == 'CreditCard'}\n        </if>\n        <from-outcome>creditcard</from-outcome>\n      </case>\n      <case>\n        <if>\n          #{controller.paymentType == 'DebitCard'}\n        </if>\n        <from-outcome>debitcard</from-outcome>\n      </case>\n      <case>\n        <if>\n          #{controller.paymentType == 'PayPal'}\n        </if>\n        <from-outcome>PayPal</from-outcome>\n      </case>\n      <default-outcome>bacs-direct</default-outcome>\n    </switch>\n    ...\n  </flow-definition>\n</faces-config>\n```", "```java\npackage uk.co.xenonique.digital.flows.entity;\nimport javax.persistence.*;\nimport java.io.Serializable;\n\n@Entity\n@Table(name = \"CARBON_FOOTPRINT\")\n@NamedQueries({\n  @NamedQuery(name=\"CarbonFootprint.findAll\",\n    query = \"select c from CarbonFootprint c \"),\n  @NamedQuery(name=\"CarbonFootprint.findById\",\n    query = \"select c from CarbonFootprint c where c.id = :id\"),\n})\npublic class CarbonFootprint implements Serializable {\n  @Id\n  @GeneratedValue(strategy = GenerationType.AUTO)\n  private long id;\n\n  private String applicationId;\n  private String industryOrSector;\n  // KWh (main source)\n  private double electricity;\n  // KWh (main source)\n  private double naturalGas;\n  // Litres (travel commute costs)\n  private double diesel;\n  // Litres (travel commute costs)\n  private double petrol;\n\n  public CarbonFootprint() { }\n\n  // hashCode(), equals() and toString()\n  // Getters and setters omited\n}\n```", "```java\n<faces-config version=\"2.2\" ...>\n  <flow-definition id=\"sector-flow\">\n    <flow-return id=\"goHome\">\n      <from-outcome>/index</from-outcome>\n    </flow-return>\n    <flow-return id=\"endFlow\">\n      <from-outcome>#{sectorFlow.gotoEndFlow()}</from-outcome>\n    </flow-return>\n\n    <flow-call id=\"callFootprintFlow\">\n      <flow-reference>\n        <flow-id>footprint-flow</flow-id>\n      </flow-reference>\n      <outbound-parameter>\n        <name>param1FromSectorFlow</name>\n        <value>param1 sectorFlow value</value>\n      </outbound-parameter>\n      <outbound-parameter>\n        <name>param2FromSectorFlow</name>\n        <value>param2 sectorFlow value</value>\n      </outbound-parameter>\n      <outbound-parameter>\n        <name>param3FromSectorFlow</name>\n        <value>#{sectorFlow.footprint}</value>\n      </outbound-parameter>\n      <outbound-parameter>\n        <name>param4FromSectorFlow</name>\n        <value>#{sectorFlow.footprint.applicationId}</value>\n      </outbound-parameter>\n    </flow-call>\n  </flow-definition>\n</faces-config>\n```", "```java\n<faces-config version=\"2.2\" ...>\n  <flow-definition id=\"footprint-flow\">\n    <flow-return id=\"goHome\">\n      <from-outcome>/index</from-outcome>\n    </flow-return>\n    <flow-return id=\"exitFromFootprintFlow\">\n      <from-outcome>#{footprintFlow.exitFromFootprintFlow}</from-outcome>\n    </flow-return>\n    <flow-return id=\"exitToSectionFlow\">\n      <from-outcome>/section-flow</from-outcome>\n    </flow-return>\n\n    <inbound-parameter>\n      <name>param1FromSectorFlow</name>\n      <value>#{flowScope.param1Value}</value>\n    </inbound-parameter>\n    <inbound-parameter>\n      <name>param2FromSectorFlow</name>\n      <value>#{flowScope.param2Value}</value>\n    </inbound-parameter>\n    <inbound-parameter>\n      <name>param3FromSectorFlow</name>\n      <value>#{flowScope.param3Value}</value>\n    </inbound-parameter>\n    <inbound-parameter>\n      <name>param4FromSectorFlow</name>\n      <value>#{flowScope.param4Value}</value>\n    </inbound-parameter>\n\n  </flow-definition>\n</faces-config>\n```", "```java\n<outbound-parameter>\n  <name>param3FromSectorFlow</name>\n  <value>#{sectorFlow.footprint}</value>\n</outbound-parameter>\n```", "```java\n<inbound-parameter>\n  <name>param3FromSectorFlow</name>\n  <value>#{flowScope.param3Value}</value>\n</inbound-parameter>\n```", "```java\npackage uk.co.xenonique.digital.flows.control;\nimport uk.co.xenonique.digital.flows.boundary.*;\nimport uk.co.xenonique.digital.flows.entity.*;\nimport uk.co.xenonique.digital.flows.utils.UtilityHelper;\n// ...\n@Named\n@FlowScoped(\"sector-flow\")\npublic class SectorFlow implements Serializable {\n  @Inject UtilityHelper utilityHelper;\n  @Inject CarbonFootprintService service;\n\n  private CarbonFootprint footprint\n   = new CarbonFootprint();\n\n  public SectorFlow() {}\n\n  @PostConstruct\n  public void initialize() {\n    footprint.setApplicationId(\n      utilityHelper.getNextApplicationId());\n  }\n\n  public String gotoEndFlow() {\n    return \"/endflow.xhtml\";\n  }\n\n  public String debugClassName() {\n    return this.getClass().getSimpleName();\n  }\n\n  public String saveFootprintRecord() {\n    service.add(footprint);\n    return \"sector-flow-1c.xhtml\";\n  }\n\n  // Getters and setters ...\n}\n```", "```java\n@Named\n@FlowScoped(\"footprint-flow\")\npublic class FootprintFlow implements Serializable {\n  private CarbonFootprint footprint;\n  public FootprintFlow() { }\n\n  @PostConstruct\n  public void initialize() {}\n    Map<Object,Object> flowMap =\n      FacesContext.getCurrentInstance()\n        .getApplication().getFlowHandler()\n        .getCurrentFlowScope();\n    footprint = (CarbonFootprint) flowMap.get(\"param3Value\");\n  }\n\n  public String exitFromFootprintFlow() {\n    return \"/endflow.xhtml\";\n  }\n\n  public String gotoPage1() {\n    return \"footprint-flow\";\n  }\n\n  public String gotoPage2() {\n    return \"footprint-flow-1a\";\n  }\n\n  public String debugClassName() {\n    return this.getClass().getSimpleName();\n  }\n\n  // Getters and setters ...\n}\n```", "```java\n<h1>Page <code>sector-flow.xhtml</code></h1>\n...\n<table class=\"table table-bordered table-striped\">\n  <tr>\n    <th>Expression</th>\n    <th>Value</th>\n  </tr>\n  ...\n  <tr>\n    <td>sectorFlow.footprint.applicationId</td>\n    <td>#{sectorFlow.footprint.applicationId}</td>\n  </tr>\n  <tr>\n    <td>sectorFlow.footprint</td>\n    <td>#{sectorFlow.footprint}</td>\n  </tr>\n</table>\n\n<h:form prependId=\"false\">\n  <div class=\"form-group\">\n    <label jsf:for=\"exampleInputEmail1\">\n    Email address</label>\n    <input type=\"email\" class=\"form-control\"\n      jsf:id=\"exampleInputEmail1\" placeholder=\"Enter email\"\n      jsf:value=\"#{flowScope.email}\"/>\n  </div>\n  <div class=\"form-group\">\n    <h:outputLabel for=\"industryOrSector\">Industry or Sector</h:outputLabel>\n    <h:inputText type=\"text\" class=\"form-control\" id=\"industryOrSector\"\n       placeholder=\"Your industry sector\"\n       value=\"#{sectorFlow.footprint.industryOrSector}\"/>\n  </div>\n\n  <h:commandButton id=\"nextBtn\" styleClass=\"btn btn-primary btn-lg\" value=\"Next\" action=\"sector-flow-1a\" />\n  &#160;\n  <h:commandButton id=\"exitFlowBtn\" styleClass=\"btn btn-primary btn-lg\" value=\"Exit Flow\" action=\"endFlow\" />\n  &#160;\n  <h:commandButton id=\"homeBtn\" styleClass=\"btn btn-primary btn-lg\" value=\"Home\" action=\"goHome\" />\n  &#160;\n  <h:commandButton id=\"callFootPrintFlowBtn\" styleClass=\"btn btn-primary btn-lg\" value=\"Call Footprint\" action=\"callFootprintFlow\" />\n  &#160;\n  <h:commandButton id=\"saveBtn\" styleClass=\"btn btn-primary btn-lg\" value=\"Save Record\" action=\"#{sectorFlow.saveFootprintRecord()}\" />\n  &#160;\n</h:form>\n```", "```java\npackage uk.co.xenonique.digital.product.utils;\nimport javax.annotation.PostConstruct;\nimport javax.ejb.Singleton;\nimport javax.ejb.Startup;\nimport javax.inject.Inject;\n\n@Singleton\n@Startup\npublic class DataPopulator {\n  @Inject ExtendedPersistenceLoaderBean loaderBean;\n\n  @PostConstruct\n  public void populate() {\n    loaderBean.loadData();\n  }\n}\n```", "```java\npackage uk.co.xenonique.digital.product.utils;\nimport uk.co.xenonique.digital.product.boundary.*;\nimport uk.co.xenonique.digital.product.entity.*;\nimport uk.co.xenonique.digital.product.entity.*;\nimport javax.annotation.*;\nimport javax.ejb.*;\nimport javax.inject.Inject;\nimport java.io.Serializable;\nimport java.util.*;\n\n@TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)\n@javax.transaction.TransactionScoped\npublic class ExtendedPersistenceLoaderBean implements Serializable {\n  public static final String DEFAULT = \"digital\";\n\n  @Inject\n  UserProfileService service;\n\n  @PostConstruct\n  public void init() { /* ... */ }\n\n  @PreDestroy\n  public void destroy() { /* ... */ }\n\n  public void loadData() {\n    UserRole userRole = new UserRole(\"user\");\n    UserRole managerRole = new UserRole(\"manager\");\n\n    List<UserProfile> users = Arrays.asList(\n      new UserProfile(\"user@products.com\", DEFAULT, userRole),\n      new UserProfile(\"test@products.com\", DEFAULT, userRole),\n      new UserProfile(\"admin@products.com\", DEFAULT, managerRole),\n    );\n\n    for (UserProfile user: users) {\n      service.add(user);\n    }\n  }\n}\n```", "```java\n<security-constraint>\n  <web-resource-collection>\n    <web-resource-name>public</web-resource-name>\n    <url-pattern>/products/*</url-pattern>\n    <url-pattern>/cart/*</url-pattern>\n    <url-pattern>/checkout/*</url-pattern>\n    <url-pattern>/promotions/*</url-pattern>\n  </web-resource-collection>\n  <auth-constraint>\n    <role-name>*</role-name>\n  </auth-constraint>\n  <user-data-constraint>\n    <transport-guarantee>NONE</transport-guarantee>\n  </user-data-constraint>\n</security-constraint>\n\n<security-constraint>\n  <web-resource-collection>\n    <web-resource-name>admin</web-resource-name>\n    <url-pattern>/admin/*</url-pattern>\n  </web-resource-collection>\n  <auth-constraint>\n    <role-name>admin</role-name>\n  </auth-constraint>\n  <user-data-constraint>\n    <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n  </user-data-constraint>\n</security-constraint>\n```", "```java\npackage uk.co.xenonique.digital.product.security;\nimport uk.co.xenonique.digital.product.control.LoginController;\n\nimport javax.servlet.*;\nimport javax.servlet.annotation.WebFilter;\nimport javax.servlet.http.*;\nimport java.io.IOException;\n\n@WebFilter(urlPatterns={\"/protected/*\", \"/simple/*\"})\npublic class LoginAuthenticationFilter implements Filter {\n  private FilterConfig config;\n\n  public void doFilter(ServletRequest req,\n    ServletResponse resp, FilterChain chain)\n    throws IOException, ServletException\n  {\n    final HttpServletRequest request =\n      (HttpServletRequest)req;\n    final HttpServletResponse response =\n      (HttpServletResponse)resp;\n    if (request.getSession().getAttribute(\n      LoginController.LOGIN_KEY) == null) {\n      response.sendRedirect(\n      request.getContextPath()+LoginController.LOGIN_VIEW);\n    } else {\n      chain.doFilter(req, resp);\n    }\n  }\n\n  public void init(FilterConfig config)\n  throws ServletException {\n    this.config = config;\n  }\n\n  public void destroy() {\n      config = null;\n  }\n}\n```", "```java\npackage uk.co.xenonique.digital.product.control;\n// imports elided...\n\n@Named(\"loginController\") @RequestScoped\npublic class LoginController {\n  public final static String LOGIN_KEY=\"LOGIN_USERNAME\";\n  public final static String LOGIN_VIEW=\"/login.xhtml\";\n\n  private String username;\n  private String password;\n\n  @Inject UserProfileService userProfileService;\n\n  public boolean isLoggedIn() {\n    return FacesContext.getCurrentInstance()\n      .getExternalContext().getSessionMap()\n      .get(LOGIN_KEY) != null;\n  }\n\n  public String login() {\n      List<UserProfile> users =\n        userProfileService.findById(username);\n      if ( users.isEmpty()) {\n        throw new IllegalArgumentException(\"unknown user\");\n      }\n      if ( !users.get(0).getPassword().equals(password)) {\n        throw new IllegalArgumentException(\"invalid password\");\n      }\n\n      FacesContext.getCurrentInstance().getExternalContext()\n        .getSessionMap().put(LOGIN_KEY, username);\n      return \"/protected/index?faces-redirect=true\";\n  }\n\n  public String logout() {\n    FacesContext.getCurrentInstance().getExternalContext()\n      .getSessionMap().remove(LOGIN_KEY);\n    return \"/index?faces-redirect=true\";\n  }\n\n  // Getters and setter omitted ...\n}\n```", "```java\npackage uk.co.xenonique.digital.product.security;\nimport javax.faces.application.NavigationHandler;\n// other imports elided...\n\n@Named(\"loginViewAuthenticator\") @ApplicationScoped\npublic class LoginViewAuthenticator {\n  // ...\n\n  public void check() {\n    FacesContext facesContext = FacesContext.getCurrentInstance();\n    HttpSession session = (HttpSession)\n      facesContext.getExternalContext().getSession(true);\n    String currentUser = (String)session.getAttribute(\n      LoginController.LOGIN_KEY);\n    if (currentUser == null || currentUser.length() == 0) {\n      NavigationHandler navigationHandler =\n        facesContext.getApplication().getNavigationHandler();\n      navigationHandler.handleNavigation(\n        facesContext, null, LoginController.LOGIN_VIEW);\n    }\n  }\n}\n```", "```java\n<ui:composition template=\"/basic_layout.xhtml\">\n  <ui:define name=\"mainContent\">\n    <f:metadata>\n      <f:event type=\"preRenderView\"\n       listener=\"#{loginViewAuthenticator.check}\" />\n    </f:metadata>\n\n    <div class=\"login-username-box  pull-right\">\n      <b>#{sessionScope['LOGIN_USERNAME']}</b>\n    </div>\n    <h1> JSF Protected View </h1>\n\n    <!-- ... -->\n</ui:composition>\n```", "```java\n/src/main/webapp/contracts/\n/src/main/webapp/contracts/default/\n/src/main/webapp/contracts/default/template.xhtml\n/src/main/webapp/contracts/default/styles/app.css\n/src/main/webapp/contracts/default/images/\n/src/main/webapp/contracts/victoria/\n/src/main/webapp/contracts/victoria/template.xhtml\n/src/main/webapp/contracts/victoria/styles/app.css\n/src/main/webapp/contracts/victoria/images/\n```", "```java\n<h:head>\n  <!-- ...-->\n  <link href=\"#{request.contextPath}/contracts/default/\n    styles/app.css\" rel=\"stylesheet\"/>\n</h:head>\n```", "```java\n<link href=\"#{request.contextPath}/contracts/victoria/\n    styles/app.css\" rel=\"stylesheet\"/>\n```", "```java\n.fashion-headline {\n    color: #ff4227;\n    font-family: Consolas;\n    font-style: italic;\n    font-size: 22pt;\n    margin: 30px 10px;\n    padding: 15px 25px;\n    border: 2px solid #8b200c;\n    border-radius: 15px;\n}\n```", "```java\n.fashion-headline {\n    color: #22ff1e;\n    font-family: Verdana, sans-serif;\n    font-weight: bold;\n    font-size: 20pt;\n    margin: 30px 10px;\n    padding: 15px 25px;\n    border: 2px solid #31238b;\n    border-radius: 15px;\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<faces-config ... version=\"2.2\">\n  <application>\n    <resource-library-contracts>\n      <contract-mapping>\n        <url-pattern>/corporate/*</url-pattern>\n        <contracts>victoria</contracts>\n      </contract-mapping>\n\n      <contract-mapping>\n        <url-pattern>*</url-pattern>\n        <contracts>default</contracts>\n      </contract-mapping>\n    </resource-library-contracts>\n  </application>\n</faces-config>\n```", "```java\n<!DOCTYPE html>\n<html... >\n  <f:view >\n    <ui:composition template=\"/template.xhtml\">\n      <ui:define name=\"mainContent\">\n        <!-- ... -->\n        <p>This is <code>/corporate/index.xhtml</code></p>\n\n        <p class=\"fashion-headline\">\n        This is a fashion statement!</p>\n\n        <a class=\"btn btn-info\"\n          href=\"#{request.contextPath}/index.xhtml\">Go Home</a>\n        <!-- ... -->\n      </ui:define> <!--name=\"mainContent\" -->\n    </ui:composition>\n  </f:view>\n</html>\n```", "```java\n<!DOCTYPE html>\n<html ...>\n  <f:view contracts=\"#{fashionSelector.theme}\">\n    <ui:composition template=\"/template.xhtml\">\n      <ui:define name=\"mainContent\">\n        <!-- ... -->\n        <p> This is <code>/index.xhtml</code>. </p>\n\n        <p class=\"fashion-headline\">\n          This is a fashion statement!</p>\n\n        <!-- ... -->\n        <div class=\"content-wrapper\">\n          <h:form>\n            <div class=\"form-group\">\n              <label for=\"theme\">Disabled select menu</label>\n              <h:selectOneRadio id=\"theme\"\n                value=\"#{fashionSelector.theme}\"\n                styleClass=\"form-control peter-radio-box\"\n                required=\"true\" layout=\"lineDirection\">\n              <f:selectItem itemValue=\"default\" itemLabel=\"Default\"/>\n              <f:selectItem itemValue=\"victoria\" itemLabel=\"Victoria\"/>\n              </h:selectOneRadio>\n            </div>\n            <h:commandButton styleClass=\"btn btn-primary\"\n              action=\"#{fashionSelector.changeTheme()}\"\n              value=\"Change Theme\" />\n          </h:form>\n        </div>\n      </ui:define> <!--name=\"mainContent\" -->\n    </ui:composition>\n  </f:view>\n</html>\n```", "```java\npackage uk.co.xenonique.digital.flows.control;\nimport javax.enterprise.context.SessionScoped;\nimport javax.inject.Named;\nimport java.io.Serializable;\n\n@Named\n@SessionScoped\npublic class FashionSelector implements Serializable {\n  private String theme = \"default\";\n\n  public String changeTheme() {\n    return \"/index?faces-redirect=true\";\n  }\n\n  // Getters and setters omitted\n}\n```", "```java\n<html ...>\n  <f:view contracts=\"#{fashionSelector.theme}\">\n    <ui:composition template=\"/template.xhtml\">\n    ... </u:compoition>\n  </f:view>\n</html>\n```"]