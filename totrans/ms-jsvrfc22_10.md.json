["```java\n@FacesComponent(value = \"components.WelcomeComponent\", createTag = true)\npublic class WelcomeComponent extends UIComponentBase {\n\n    @Override\n    public String getFamily() {\n        return \"welcome.component\";\n    }\n\n    @Override\n    public void encodeBegin(FacesContext context) throws IOException {\n\n        String value = (String) getAttributes().get(\"value\");\n        String to = (String) getAttributes().get(\"to\");\n\n        if ((value != null) && (to != null)) {\n            ResponseWriter writer = context.getResponseWriter();\n            writer.writeAttribute(\"id\", getClientId(context), null);\n            writer.write(value + \", \" + to);\n        }\n    }\n}\n```", "```java\n<?xml version='1.0' encoding='UTF-8' ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html \n\n >\n    <h:head>\n        <title></title>\n    </h:head>\n    <h:body>       \n <t:welcomeComponent value=\"Welcome\" to=\"Rafael Nadal\"/>\n    </h:body>\n</html>\n```", "```java\n@FacesComponent(value = \"components.WelcomeComponent\", createTag = true, namespace = \"http://atp.welcome.org/welcome\", tagName = \"welcome\")\npublic class WelcomeComponent extends UIComponentBase {\n...\n}\n```", "```java\n<html \n\n      >\n...\n  <t:welcome value=\"Welcome\" to=\"Rafael Nadal\"/>\n```", "```java\npublic class WelcomeComponentHandler extends ComponentHandler {\n\n private static final Logger logger = \n         Logger.getLogger(WelcomeComponentHandler.class.getName());\n\n public WelcomeComponentHandler(ComponentConfig config) {\n  super(config);\n }\n\n @Override\n public UIComponent createComponent(FaceletContext ctx) {\n  logger.info(\"Inside 'createComponent' method\");\n  return null;\n }\n\n @Override\n public void onComponentCreated(FaceletContext ctx, \n             UIComponent c, UIComponent parent) {\n  logger.info(\"Inside 'onComponentCreated' method\");\n  super.onComponentCreated(ctx, c, parent);\n }\n\n @Override\n public void onComponentPopulated(FaceletContext ctx, \n             UIComponent c, UIComponent parent) {\n  logger.info(\"Inside 'onComponentPopulated' method\");\n  super.onComponentPopulated(ctx, c, parent);\n }\n}\n```", "```java\n<handler-class>book.beans.WelcomeComponentHandler</handler-class>\n```", "```java\n<t:temperature unitto=\"Celsius\" temp=\"100\" />\n```", "```java\n// Attribute name constant for unitto\nprivate static final String ATTR_UNITTO = \"unitto\";\n// Default value for the unitto attribute\nprivate static final String ATTR_UNITTO_DEFAULT = \"Fahrenheit\";\n// Attribute name constant for temp\nprivate static final String ATTR_TEMP = \"temp\";\n// Default value for the temp attribute\nprivate static final Float ATTR_TEMP_DEFAULT = 0f;\n```", "```java\npublic void setUnitto(String unitto) {\n getStateHelper().put(ATTR_UNITTO, unitto);\n}\n```", "```java\npublic String getUnitto() {\n return (String) getStateHelper().eval(ATTR_UNITTO, ATTR_UNITTO_DEFAULT);\n}\n```", "```java\n<t:temperature unitto=\"celsius/fahrenheit\" temp=\"*number_of_degrees*\" />\n```", "```java\npublic String callTempConvertService(String unitto, Float temp) {\n...\n}\n```", "```java\n@FacesComponent(value = TempConvertComponent.COMPONENT_TYPE, createTag = true, namespace = \"http://temp.converter/\", tagName = \"temperature\")\npublic class TempConvertComponent extends UIComponentBase {\n\n public TempConvertComponent() {\n  setRendererType(TempConvertRenderer.RENDERER_TYPE);\n }\n\n public static final String COMPONENT_FAMILY = \n                            \"components.TempConvertComponent\";\n public static final String COMPONENT_TYPE = \n                            \"book.beans.TempConvertComponent\";\n private static final String ATTR_UNITTO = \"unitto\";\n private static final String ATTR_UNITTO_DEFAULT = \"fahrenheit\";\n private static final String ATTR_TEMP = \"temp\";\n private static final Float ATTR_TEMP_DEFAULT = 0f;\n public String getUnitto() {\n  return (String) getStateHelper().\n          eval(ATTR_UNITTO, ATTR_UNITTO_DEFAULT);\n }\n\n public void setUnitto(String unitto) {\n  getStateHelper().put(ATTR_UNITTO, unitto);\n }\n\n public Float getTemp() {\n  return (Float) getStateHelper().eval(ATTR_TEMP, ATTR_TEMP_DEFAULT);\n }\n\n public void setTemp(Float temp) {\n  getStateHelper().put(ATTR_TEMP, temp);\n }\n\n public String getTempConvert() {\n  TempConvertClient tempConvertClient = new TempConvertClient();\n  return String.format(\"%.1f\", Float.valueOf(tempConvertClient.\n               callTempConvertService(getUnitto(), getTemp())));\n }\n\n @Override\n public String getFamily() {\n  return TempConvertComponent.COMPONENT_FAMILY;\n }\n}\n```", "```java\n@ResourceDependencies({\n @ResourceDependency(name=\"css/temp.css\",library=\"default\",target=\"head\")\n})\n@FacesRenderer(componentFamily = TempConvertComponent.COMPONENT_FAMILY, rendererType = TempConvertRenderer.RENDERER_TYPE)\npublic class TempConvertRenderer extends Renderer {\n\npublic static final String RENDERER_TYPE = \n                \"book.beans.TempConvertRenderer\";\n\npublic TempConvertRenderer() {\n}\n\n@Override\npublic void encodeEnd(FacesContext context, UIComponent uicomponent) \n                                                 throws IOException {\n\n ResponseWriter responseWriter = context.getResponseWriter();\n TempConvertComponent component = (TempConvertComponent) uicomponent;\n\n String unit = component.getUnitto();\n\n responseWriter.startElement(\"div\", component);\n responseWriter.writeAttribute(\"class\", \"tempClass\", null);\n responseWriter.writeAttribute(\"id\", component.getClientId(), \"id\");\n responseWriter.write(\"&deg;\");\n if (unit.equals(\"fahrenheit\")) {\n     responseWriter.write(\"F \");\n } else {\n     responseWriter.write(\"C \");\n }\n responseWriter.write(component.getTempConvert());\n responseWriter.endElement(\"div\");\n }\n}\n```", "```java\n<application>\n <render-kit>\n  <renderer>                    \n   <component-family>\n    components.TempConvertComponent\n   </component-family>\n   <renderer-type>book.beans.TempConvertRenderer</renderer-type>\n   <renderer-class>book.beans.TempConvertRenderer</renderer-class>\n  </renderer>\n </render-kit>\n</application>\n```", "```java\n<html \n\n      >\n...\n  <h:form>\n   Convert to:\n   <h:selectOneMenu value=\"#{tempBean.unitto}\">\n    <f:selectItem itemValue=\"fahrenheit\" itemLabel=\"fahrenheit\" />\n    <f:selectItem itemValue=\"celsius\" itemLabel=\"celsius\" />\n   </h:selectOneMenu>\n   Insert value:\n   <h:inputText value=\"#{tempBean.temp}\"/>\n   <h:commandButton value=\"Convert\">\n    <f:ajax execute=\"@form\" render=\":tempId\" />\n   </h:commandButton>\n  </h:form>     \n\n <t:temperature id=\"tempId\" \n unitto=\"#{tempBean.unitto}\" temp=\"#{tempBean.temp}\" />\n\n```", "```java\n  <t:temperature id=\"tempId\" unitto=\"celsius\" temp=\"10\" />\n```", "```java\n@Named\n@SessionScoped\npublic class TempBean implements Serializable {\n\n private String unitto = \"fahrenheit\";\n private Float temp = 0f;\n ...\n //getters and setters\n}\n```", "```java\n<t:temperature value=\"celsius/1\" />\n```", "```java\n@FacesComponent(createTag = true, namespace = \"http://temp.converter/\", tagName = \"temperature\")\npublic class TempConvertComponent extends UIInput \n                           implements NamingContainer {\n\n public TempConvertComponent() {\n  setRendererType(TempConvertRenderer.RENDERER_TYPE);\n }    \n\n public String getTempConvert(String unitto, float temp) {\n  TempConvertClient tempConvertClient = new TempConvertClient();\n  return String.format(\"%.1f\", \n   tempConvertClient.callTempConvertService(unitto, temp));\n  }\n}\n```", "```java\n@Override\npublic void encodeEnd(FacesContext context, UIComponent uicomponent) \n                                                    throws IOException {\n\n TempConvertComponent component = (TempConvertComponent) uicomponent;\n\n String clientId = component.getClientId(context);\n char separator = UINamingContainer.getSeparatorChar(context);\n encodeSelectOneMenu(context, \n                   component, clientId + separator + \"selectonemenu\");\n encodeInput(context, component, clientId + separator + \"inputfield\");\n encodeButton(context, component, clientId + separator + \"button\");\n encodeResult(context, component, clientId + separator + \"div\");\n }\n```", "```java\nprivate void encodeSelectOneMenu(FacesContext context, TempConvertComponent component, String clientId) throws IOException {\n\n String cv = String.valueOf(component.getValue());\n String unitto = cv.substring(0, cv.indexOf(\"/\"));\n\n ResponseWriter responseWriter = context.getResponseWriter();\n responseWriter.startElement(\"span\", component);\n responseWriter.write(\"Convert to:\");\n responseWriter.endElement(\"span\");\n responseWriter.startElement(\"select\", component);\n responseWriter.writeAttribute(\"name\", clientId, \"clientId\");\n responseWriter.writeAttribute(\"size\", 1, \"size\");\n responseWriter.startElement(\"option\", component);\n responseWriter.writeAttribute(\"value\", \"fahrenheit\", \"value\");\n if (unitto.equals(\"fahrenheit\")) {\n     responseWriter.writeAttribute(\"selected\", \"selected\", \"selected\");\n    }\n responseWriter.writeText(\"fahrenheit\", \"fahrenheit\");\n responseWriter.endElement(\"option\");\n responseWriter.startElement(\"option\", component);\n responseWriter.writeAttribute(\"value\", \"celsius\", \"value\");\n if (unitto.equals(\"celsius\")) {\n     responseWriter.writeAttribute(\"selected\", \"selected\", \"selected\");\n }\n responseWriter.writeText(\"celsius\", \"celsius\");\n responseWriter.endElement(\"option\");\n responseWriter.endElement(\"select\");\n}\n```", "```java\nprivate void encodeInput(FacesContext context, TempConvertComponent component, String clientId) throws IOException {\n\n String cv = String.valueOf(component.getValue());\n String temp = cv.substring(cv.indexOf(\"/\") + 1);\n\n ResponseWriter responseWriter = context.getResponseWriter();\n responseWriter.startElement(\"span\", component);\n responseWriter.write(\"Insert value:\");\n responseWriter.endElement(\"span\");\n responseWriter.startElement(\"input\", component);\n responseWriter.writeAttribute(\"name\", clientId, \"clientId\");\n responseWriter.writeAttribute(\"value\", temp, \"value\");\n responseWriter.writeAttribute(\"type\", \"text\", \"type\");\n responseWriter.endElement(\"input\");\n}\n```", "```java\nprivate void encodeButton(FacesContext context, TempConvertComponent component, String clientId) throws IOException {\n\n ResponseWriter responseWriter = context.getResponseWriter();\n responseWriter.startElement(\"input\", component);\n responseWriter.writeAttribute(\"type\", \"Submit\", null);\n responseWriter.writeAttribute(\"name\", clientId, \"clientId\");\n responseWriter.writeAttribute(\"value\", \"Convert\", null);\n responseWriter.writeAttribute(\"onclick\",\n   \"jsf.ajax.request(this,event,{execute:'\" + \"@form\" + \"',\"\n + \"render:'\" + \"@form\" + \"',\" + \"});\"\n + \"return false;\", null);\n responseWriter.endElement(\"input\");\n}\n```", "```java\nprivate void encodeResult(FacesContext context, TempConvertComponent component, String clientId) throws IOException {\n\n String cv = String.valueOf(component.getValue());\n String unitto = cv.substring(0, cv.indexOf(\"/\"));\n String temp = cv.substring(cv.indexOf(\"/\") + 1);\n String result = component.getTempConvert(unitto, Float.valueOf(temp));\n\n ResponseWriter responseWriter = context.getResponseWriter();\n responseWriter.startElement(\"div\", component);\n responseWriter.writeAttribute(\"class\", \"tempClass\", null);\n responseWriter.writeAttribute(\"name\", clientId, \"clientId\");\n responseWriter.write(\"&deg;\");\n if (unitto.equals(\"fahrenheit\")) {\n     responseWriter.write(\"F \");\n } else {\n     responseWriter.write(\"C \");\n }\n responseWriter.write(result);\n responseWriter.endElement(\"div\");\n}\n```", "```java\n@Named\n@SessionScoped\npublic class TempBean implements Serializable {\n\n private String value = \"celsius/0\";\n\n public String getValue() {\n  return value;\n }\n\n public void setValue(String value) {\n  this.value = value;\n }              \n}\n```", "```java\n@Override\npublic void decode(FacesContext context, UIComponent uicomponent) {\n\n TempConvertComponent component = (TempConvertComponent) uicomponent;\n Map requestMap = context.getExternalContext().getRequestParameterMap();\n String clientId = component.getClientId(context);\n char separator = UINamingContainer.getSeparatorChar(context);\n String temp = ((String) \n                requestMap.get(clientId+ separator + \"inputfield\"));\n String unitto = ((String) \n                requestMap.get(clientId + separator + \"selectonemenu\"));       \n component.setSubmittedValue(unitto+\"/\"+temp);       \n}\n```", "```java\nSpecified unit and temperature from bean:\n<h:form id=\"tempForm1\">            \n <t:temperature id=\"temp1\" value=\"#{tempBean.value}\" /> \n <h:message for=\"temp1\"/>\n</h:form>   \n<hr/>\nSpecified unit and temperature as constants:\n<h:form id=\"tempForm2\">           \n <t:temperature id=\"temp2\" value=\"celsius/1\" /> \n <h:message for=\"temp2\"/>\n</h:form>\n```", "```java\n<?xml version='1.0' encoding='UTF-8' ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html \n      >\n\n <!-- INTERFACE -->\n <cc:interface>\n </cc:interface>\n\n <!-- IMPLEMENTATION -->\n <cc:implementation>\n </cc:implementation>\n</html>\n```", "```java\n<?xml version='1.0' encoding='UTF-8' ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html \n      >\n\n <!-- INTERFACE -->\n <cc:interface>\n  <cc:attribute name=\"value\"/>\n  <cc:attribute name=\"to\"/>\n </cc:interface>\n\n <!-- IMPLEMENTATION -->\n <cc:implementation>\n  <p>#{cc.attrs.value}, #{cc.attrs.to}</p>\n </cc:implementation>\n</html>\n```", "```java\n<?xml version='1.0' encoding='UTF-8' ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html \n\n      >\n <h:head>\n  <title></title>\n </h:head>\n <h:body>\n **<t:welcome value=\"Welcome\" to=\"Rafael Nadal\"/>**\n </h:body>\n</html>\n```", "```java\n<?xml version='1.0' encoding='UTF-8' ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html \n\n      >\n\n <!-- INTERFACE -->\n <cc:interface componentType=\"book.beans.TempConvertComponent\">\n  <cc:attribute name=\"value\" type=\"java.lang.String\" \n                                          default=\"celsius/0\"/>\n </cc:interface>\n\n <!-- IMPLEMENTATION -->\n <cc:implementation>\n  <h:outputStylesheet name=\"temperature/temp.css\" />            \n  <div id=\"#{cc.clientId}\">\n   <h:outputLabel for=\"selectonemenu\" value=\"Convert to:\"/>\n   <h:selectOneMenu id=\"selectonemenu\" binding=\"#{cc.unittoI}\">\n    <f:selectItem itemValue=\"fahrenheit\" itemLabel=\"fahrenheit\" />\n    <f:selectItem itemValue=\"celsius\" itemLabel=\"celsius\" />\n   </h:selectOneMenu>\n   <h:outputLabel for=\"inputfield\" value=\"Insert value:\"/>\n   <h:inputText id=\"inputfield\" binding=\"#{cc.temptI}\"/>          \n   <h:commandButton id=\"button\" value=\"Convert\">\n    <f:ajax execute=\"@form\" render=\"@form\"/>\n   </h:commandButton>\n   <h:panelGroup id=\"div\" layout=\"block\" class=\"tempClass\">\n    <h:outputText value=\"&deg; #{cc.unittoI.value eq 'fahrenheit' ? 'F ': 'C ' } #{cc.getTempConvert()}\"/>\n   </h:panelGroup>\n  </div>\n </cc:implementation>\n</html>\n```", "```java\n      @Override\n      public String getFamily() {\n       return UINamingContainer.COMPONENT_FAMILY;\n      }\n    ```", "```java\n    @FacesComponent(value = \"*component type value*\")\n    ...\n    <cc:interface componentType=\"*component type value*\">\n    ```", "```java\n@FacesComponent(value = \"book.beans.TempConvertComponent\", \n                                           createTag = false)\npublic class TempConvertComponent extends UIInput implements NamingContainer {\n\n private UIInput unittoI;\n private UIInput temptI;\n\n public TempConvertComponent() {\n }\n\n public UIInput getUnittoI() {\n  return unittoI;\n }\n\n public void setUnittoI(UIInput unittoI) {\n  this.unittoI = unittoI;\n }\n\n public UIInput getTemptI() {\n  return temptI;\n }\n\n public void setTemptI(UIInput temptI) {\n  this.temptI = temptI;\n }\n\n public String getTempConvert() {\n  TempConvertClient tempConvertClient = new TempConvertClient();\n  return String.format(\"%.1f\", \n  tempConvertClient.callTempConvertService(String.valueOf(unittoI.getValue()), Float.valueOf(String.valueOf(temptI.getValue()))));\n}\n\n @Override\n public void decode(FacesContext context) {\n  this.setSubmittedValue(temptI.getSubmittedValue() + \"/\" + \n                                  unittoI.getSubmittedValue());\n }\n\n /*\n  * you can override getSubmittedValue instead of decode\n @Override\n public Object getSubmittedValue() {\n  return temptI.getSubmittedValue() + \"/\" + unittoI.getSubmittedValue();\n }\n */\n\n @Override\n public void encodeBegin(FacesContext context) throws IOException {\n\n  if (getValue() != null) {\n      String cv = String.valueOf(getValue());\n      String unitto = cv.substring(0, cv.indexOf(\"/\"));\n      String temp = cv.substring(cv.indexOf(\"/\") + 1);\n      if (temptI.getValue() == null) {\n          temptI.setValue(temp);\n      }\n      if (unittoI.getValue() == null) {\n          unittoI.setValue(unitto);\n      }\n    }\n   super.encodeBegin(context);\n  }\n\n @Override\n public String getFamily() {\n  return UINamingContainer.COMPONENT_FAMILY;\n }\n}\n```", "```java\n<!doctype html>\n<html lang=\"en-US\">\n <head>\n  <meta charset=\"utf-8\"> \n  <title>Range Slider with jQuery UI</title>  \n  <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" \n                                     href=\"css/styles.css\">\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/base/jquery-ui.css\">\n  <script type=\"text/javascript\" src=\"img/jquery.min.js\"></script>\n  <script type=\"text/javascript\" src=\"img/jquery-ui.min.js\"></script>\n </head>\n\n <body>\n  <div id=\"w\">\n   <div id=\"content\">     \n    <h2>Ranged Slider</h2>\n    <div id=\"rangedval\">\n     Range Value: <span id=\"rangeval\">90 - 290</span>\n    </div>      \n    <div id=\"rangeslider\"></div>      \n   </div>\n  </div>\n  <script type=\"text/javascript\">\n   $(function(){  \n   $('#rangeslider').slider({\n     range: true,\n     min: 0,\n     max: 100,\n     values: [ 5, 20 ],\n     slide: function( event, ui ) {\n      $('#rangeval').html(ui.values[0]+\" - \"+ui.values[1]);\n     }\n    });  \n   });\n  </script>\n </body>\n</html>\n```", "```java\n<h:form id=\"sliderFormId\">\n <h:panelGrid columns=\"1\">\n **<t:range-slider id=\"sliderId\" min=\"#{sliderBean.min}\"** \n **max=\"#{sliderBean.max}\" leftside=\"#{sliderBean.leftside}\"** \n **rightside=\"#{sliderBean.rightside}\"/>**\n  <h:commandButton value=\"Send\" action=\"#{sliderBean.sliderListener()}\">\n   <f:ajax execute=\"@form\" render=\"@form\"/>\n  </h:commandButton>\n </h:panelGrid>\n</h:form>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface>\n <cc:attribute name=\"min\" type=\"java.lang.Integer\" \n                          default=\"0\" required=\"true\"/>\n <cc:attribute name=\"max\" type=\"java.lang.Integer\" \n                          default=\"1000\" required=\"true\"/>\n <cc:attribute name=\"leftside\" type=\"java.lang.Integer\" \n                          default=\"450\" required=\"true\"/>\n <cc:attribute name=\"rightside\" type=\"java.lang.Integer\" \n                          default=\"550\" required=\"true\"/> \n</cc:interface>\n```", "```java\n<!-- IMPLEMENTATION -->\n<cc:implementation>\n <h:outputStylesheet name=\"range-slider/css/styles.css\"/>  \n <h:outputStylesheet name=\"range-slider/css/jquery-ui.css\"/>         \n <h:outputScript target=\"head\" name=\"range-slider/js/jquery.min.js\"/>\n <h:outputScript target=\"head\" name=\"range-slider/js/jquery-ui.min.js\"/>         \n ...\n```", "```java\n<div id=\"#{cc.clientId}:w\" class=\"w\">\n  <div id=\"#{cc.clientId}:content\" class=\"content\">\n   <div id=\"#{cc.clientId}:rangedval\" class=\"rangedval\">\n    Range Value: <span id=\"#{cc.clientId}:rangeval\">\n                 #{cc.attrs.leftside} - #{cc.attrs.rightside}</span>\n   </div>\n   <div id=\"#{cc.clientId}:slider\">\n   </div>\n  </div>\n  <h:inputHidden id=\"leftsideId\" value=\"#{cc.attrs.leftside}\"/>\n  <h:inputHidden id=\"rightsideId\" value=\"#{cc.attrs.rightside}\"/>\n</div>\n```", "```java\n<script type=\"text/javascript\">\n $(function() {\n   var rangeval = \"${cc.clientId}:rangeval\".replace(/:/g, \"\\\\:\");\n   var slider = \"${cc.clientId}:slider\".replace(/:/g, \"\\\\:\");\n   $('#' + slider).slider({\n     range: true,\n     min: #{cc.attrs.min},\n     max: #{cc.attrs.max},\n     values: [#{cc.attrs.leftside}, #{cc.attrs.rightside}],\n     slide: function(event, ui) {\n     $('#' + rangeval).html(ui.values[0] + \" - \" + ui.values[1]);\n     $(\"#${cc.clientId}:leftsideId\".\n          replace(/:/g, \"\\\\:\")).val(ui.values[0]);\n     $(\"#${cc.clientId}:rightsideId\".\n          replace(/:/g, \"\\\\:\")).val(ui.values[1]);\n     }\n   });\n  });\n </script>\n</cc:implementation>\n```", "```java\nescadpeClientId:function(a){return\"#\"+a.replace(/:/g,\"\\\\:\")}\n```", "```java\n var rangeslider = {\n  init: function(clientId, min, max, leftside, rightside) {\n  var rangeval = (clientId + \":rangeval\").replace(/:/g, \"\\\\:\");\n  var slider = (clientId + \":slider\").replace(/:/g, \"\\\\:\");\n   $('#' + slider).slider({\n    range: true,\n **min: min,**\n **max: max,**\n **values: [parseInt(leftside), parseInt(rightside)],**\n    slide: function(event, ui) {\n     $('#' + rangeval).html(ui.values[0] + \" - \" + ui.values[1]);\n     $(\"#\" + (clientId + \":leftsideId\").\n              replace(/:/g, \"\\\\:\")).val(ui.values[0]);\n     $(\"#\" + (clientId + \":rightsideId\").\n              replace(/:/g, \"\\\\:\")).val(ui.values[1]);\n    }\n   });\n  }\n };\n```", "```java\n<cc:implementation>\n ...\n <h:outputScript target=\"head\" name=\"range-slider/js/slider.js\"/>\n ...\n <script>\n  rangeslider.init('#{cc.clientId}', '#{cc.attrs.min}', \n   '#{cc.attrs.max}', '#{cc.attrs.leftside}', '#{cc.attrs.rightside}');\n </script>\n</cc:implementation>\n```", "```java\n    <input id=\"exId\" type=\"date\" value=\"\" />\n    ```", "```java\n    <input id=\"exId\" type=\"date\" value=\"2015-01-05\"\n                  min=\"2015-01-01\" max=\"2015-01-31\" />\n    ```", "```java\n    <input id=\"exId\" type=\"date\" value=\"\" list=\"listId\" />\n    <datalist id=\"listId\">\n     <option label=\"Day 1\" value=\"2015-01-01\"/>\n     <option label=\"Day 2\" value=\"2015-01-02\" />\n     <option label=\"Day 3\" value=\"2015-01-03\" />\n    </datalist>\n    ```", "```java\nDate-time without data-list:\n<h:form>             \n <t:datetime value=\"#{dateTimeBean.date}\" \n             min=\"#{dateTimeBean.min}\" max=\"#{dateTimeBean.max}\"> \n  <f:ajax event=\"change\" execute=\"@form\" \n                        listener=\"#{dateTimeBean.selectedDate()}\"/>                \n </t:datetime>            \n</h:form>\n```", "```java\nDate-time with data-list:\n<h:form>             \n <t:datetime list=\"listId\" value=\"#{dateTimeBean.date}\"> \n <f:ajax event=\"change\" execute=\"@form\" \n                 listener=\"#{dateTimeBean.selectedDate()}\"/>     \n</t:datetime>\n<t:datalist id=\"listId\">\n <t:option label=\"Day 1\" value=\"2015-01-01\"/>\n <t:option label=\"Day 2\" value=\"2015-01-02\"/>\n <t:option label=\"Day 3\" value=\"2015-01-03\"/>\n</t:datalist>\n```", "```java\n<cc:attribute name=\"value\" type=\"java.util.Date\" required=\"true\" />\n<cc:attribute name=\"list\" type=\"java.lang.String\" default=\"\" />\n<cc:attribute name=\"step\" type=\"java.lang.String\" default=\"1\" /> \n<cc:attribute name=\"required\" type=\"java.lang.String\"\n  default=\"false\" />\n<cc:attribute name=\"readonly\" type=\"java.lang.String\"\n  default=\"false\" />\n```", "```java\n@FacesComponent(value = \"datetime\")\npublic class DateTimeComponent extends UINamingContainer {\n\n private static final DateTimeFormatter HTML5_FORMAT =  \n                DateTimeFormat.forPattern(\"yyyy-MM-dd\");\n private String minHTML5Date = \"\";\n private String maxHTML5Date = \"\";\n\n public String getMinHTML5Date() {\n  return minHTML5Date;\n }\n\n public String getMaxHTML5Date() {\n  return maxHTML5Date;\n }\n\n @Override\n public void encodeBegin(FacesContext context) throws IOException {\n\n  Date min = (Date) getAttributes().get(\"min\");\n  if (min != null) {\n      DateTime minDateTime = new DateTime(min);\n      minHTML5Date = HTML5_FORMAT.print(minDateTime);\n  }\n  Date max = (Date) getAttributes().get(\"max\");\n  if (max != null) {\n      DateTime maxDateTime = new DateTime(max);\n      maxHTML5Date = HTML5_FORMAT.print(maxDateTime);\n  }\n super.encodeBegin(context);\n }\n}\n```", "```java\n<cc:interface componentType=\"datetime\">\n <cc:attribute name=\"min\" type=\"java.util.Date\" />\n <cc:attribute name=\"max\" type=\"java.util.Date\" />\n...\n```", "```java\n<cc:clientBehavior name=\"change\" targets=\"#{cc.id}\" event=\"change\" />\n```", "```java\n<cc:implementation>\n <div id=\"#{cc.clientId}:dt\">\n  <input jsf:id=\"#{cc.id}\" type=\"date\" jsf:value=\"#{cc.attrs.value}\" \n         jsf:readonly=\"#{cc.attrs.readonly != 'false' ? 'true': 'false'}\"\n         min=\"#{cc.minHTML5Date}\" max=\"#{cc.maxHTML5Date}\" \n         jsf:required=\"#{cc.attrs.required != 'false' ? 'true': 'false'}\" \n         step=\"#{cc.attrs.step}\" list=\"#{cc.attrs.list}\">\n  <f:convertDateTime pattern=\"yyyy-MM-dd\" />\n  </input>\n </div>\n</cc:implementation>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface>\n <cc:attribute name=\"label\" type=\"java.lang.String\" default=\"\" />\n <cc:attribute name=\"value\" type=\"java.lang.String\" default=\"\" />    \n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>\n <option value=\"#{cc.attrs.value}\" label=\"#{cc.attrs.label}\" />\n</cc:implementation>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface>  \n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>\n <datalist id=\"#{cc.id}\">\n  <cc:insertChildren />\n </datalist>\n</cc:implementation>\n```", "```java\n<cc:attribute name=\"src\" required=\"true\"/>\n```", "```java\n<cc:attribute name=\"action\" method-signature=\"void action()\"/>\n```", "```java\nmethod-signature=\"java.lang.String\nmyMethod(java.lang.Integer, java.lang.Integer)\" \n```", "```java\n<cc:actionSource name=\"imgActionListener\" targets=\"#{cc.clientId}:imgForm:imgAction\"/>\n```", "```java\n<cc:attribute name=\"item\" targets=\"#{cc.clientId}:\n      imgForm:imgAction\" required=\"true\"/>\n```", "```java\n<cc:attribute name=\"item\" targets=\"#{cc.clientId}:\n      imgForm:imgAction\" required=\"true\"/>\n```", "```java\n<cc:implementation>\n <h:outputStylesheet library=\"default\" name=\"css/styles.css\" />            \n <ui:param name=\"range\" value=\"#{cc.attrs.item}\" /> <!-- or c:set -->\n <ui:fragment rendered=\"#{range == 'item_1' or \n                      range == 'item_2' or range == 'item_3'}\">\n  <div id=\"#{cc.clientId}:img\">\n   <h:form id=\"imgForm\">\n    <h:commandLink id=\"imgAction\" immediate=\"true\" \n       action=\"#{cc.attrs.action}\" styleClass=\"linkopacity\">\n     <h:inputHidden id=\"itemId\" value=\"#{cc.attrs.item}\"/>\n     <h:graphicImage value=\"#{cc.attrs.src}\"/>\n    </h:commandLink>\n   </h:form>\n  </div>\n </ui:fragment>\n</cc:implementation>\n```", "```java\n<cc:facet name=\"name\" />\n<cc:facet name=\"surname\" />\n```", "```java\n<cc:renderFacet name=\"name\" required=\"true\"/>\n<cc:renderFacet name=\"surname\" required=\"true\"/> \n```", "```java\n<!-- INTERFACE -->\n<cc:interface>\n <cc:facet name=\"header\" />        \n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>              \n <cc:renderFacet name=\"header\"/>\n <!-- this will not render -->\n <!-- <cc:insertFacet name=\"header\"/> -->\n</cc:implementation>\n```", "```java\n...\n\n...\n<q:renderfacet>\n <f:facet name=\"header\">\n  Render Facet\n </f:facet>\n</q:renderfacet>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface>\n <cc:facet name=\"header\" />        \n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>\n <h:dataTable border=\"1\">\n  <cc:insertFacet name=\"header\"/>     \n  <!-- this will not render -->\n  <!-- <cc:renderFacet name=\"header\"/> -->\n </h:dataTable>  \n</cc:implementation>\n```", "```java\n<t:insertfacet>\n <f:facet name=\"header\">\n  Insert Facet\n </f:facet>          \n</t:insertfacet>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface>\n <cc:attribute name=\"name\" type=\"java.lang.String\" required=\"true\"/>\n <cc:attribute name=\"surname\" type=\"java.lang.String\"\n  required=\"true\" />\n **<cc:editableValueHolder name=\"playerId\" targets=\"nameId surnameId\"/>**\n <cc:attribute name=\"action\" \n               method-signature=\"void action()\" required=\"true\" />\n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>\n <h:messages/>\n <h:outputLabel for=\"**nameId**\" value=\"Player Name:\"/>\n <h:inputText id=\"nameId\" value=\"#{cc.attrs.name}\" />          \n <h:outputLabel for=\"**surnameId**\" value=\"Player Surname:\"/>\n <h:inputText id=\"surnameId\" value=\"#{cc.attrs.surname}\" />      \n <h:commandButton id=\"button\" value=\"Submit\" action=\"#{cc.attrs.action}\">\n  <f:ajax execute=\"@form\" render=\"@form\"/>\n </h:commandButton>  \n</cc:implementation>\n```", "```java\n<h:form id=\"playerFormId\">\n <t:player name=\"#{playerBean.name}\" surname=\"#{playerBean.surname}\" \n           action=\"#{playerBean.playerAction()}\">\n  <f:converter converterId=\"playerConverter\" **for=\"playerId\"**/>\n  <f:validator validatorId=\"playerValidator\" **for=\"playerId\"**/>    \n </t:player>\n</h:form>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface>\n <cc:attribute name=\"value\" required=\"true\"/>\n <cc:attribute name=\"mandatory\" type=\"java.lang.Boolean\"/>\n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>\n <h:panelGroup rendered=\"#{not empty cc.attrs.mandatory}\">\n  <h:inputText value=\"#{cc.attrs.value}\" \n               required=\"#{cc.attrs.mandatory}\"/>\n </h:panelGroup>\n</cc:implementation>\n```", "```java\n<t:attrcheck value=\"*some_text*\" mandatory=\"false\"/>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface>\n <cc:attribute name=\"value\"/>\n <cc:editableValueHolder name=\"test\"/>\n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>\n <h:inputText id=\"test\" value=\"#{cc.attrs.value}\"/>\n</cc:implementation>\n```", "```java\n<h:form>            \n <t:nullTest value=\"#{dummyBean.dummy}\">\n  <f:validator for=\"test\" binding=\"#{dummyBean.dummyValidator}\"/>\n </t:nullTest>\n <h:commandButton value=\"Send\"/>\n</h:form>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface componentType=\"book.beans.PtaComponent\">\n <cc:attribute name=\"value\"/>   \n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>       \n <h:inputText value=\"#{cc.attrs.value}\"/>                             \n</cc:implementation>\n```", "```java\n<h:form>\n <t:pta value=\"leoprivacy@yahoo.com\">\n  <f:passThroughAttribute name=\"placeholder\" \n                          value=\"Type an e-mail address\" />\n  <f:passThroughAttribute name=\"type\" value=\"email\" />\n </t:pta>\n <h:commandButton value=\"Submit\"/>\n</h:form>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface componentType=\"book.beans.PtaComponent\">\n <cc:attribute name=\"value\"/>   \n <cc:attribute name=\"placeholder\"/>\n <cc:attribute name=\"type\"/>\n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>       \n <h:inputText value=\"#{cc.attrs.value}\"> \n  <f:passThroughAttribute name=\"placeholder\" \n                          value=\"#{cc.attrs.placeholder}\" />\n  <f:passThroughAttribute name=\"type\" value=\"#{cc.attrs.type}\" />\n </h:inputText>\n</cc:implementation>\n```", "```java\n<h:form>\n <t:pta value=\"leoprivacy@yahoo.com\" \n        placeholder=\"Type an e-mail address\" type=\"email\" />                               \n <h:commandButton value=\"Submit\"/>\n</h:form>\n```", "```java\n<!-- IMPLEMENTATION -->\n<cc:implementation>\n <div id=\"#{cc.clientId}\">\n  <ul>           \n   <cc:insertChildren/>                \n   <h:panelGroup rendered=\"#{cc.childCount == 0}\">\n    The list of names is empty!\n   </h:panelGroup> \n  </ul>\n </div>\n</cc:implementation>\n```", "```java\n<t:iccc/>\n```", "```java\n<t:iccc>\n <li>Mike</li> \n <li>Andrew</li>\n</t:iccc>\n```", "```java\n<cc:implementation>\n <div id=\"#{cc.clientId}\">\n  <ul>           \n   <cc:insertChildren/>                \n **<c:if test=\"#{cc.childCount == 0}\">**\n **The list of names is empty!**\n **</c:if>**\n  </ul>\n </div>\n</cc:implementation>\n```", "```java\n<!-- INTERFACE -->\n<cc:interface>\n <cc:attribute name=\"labelvalue\"/>\n <cc:attribute name=\"imgvalue\"/>\n</cc:interface>\n\n<!-- IMPLEMENTATION -->\n<cc:implementation>\n <h:outputLabel for=\"img\" value=\"#{cc.attrs.labelvalue}\"/>\n <h:graphicImage id=\"img\" value=\"#{cc.attrs.imgvalue}\"/>\n</cc:implementation>\n```", "```java\n<h:panelGrid columns=\"2\" border=\"1\">\n <t:pg labelvalue=\"SMILEY\" \n       imgvalue=\"#{resource['default/images:smiley.gif']}\"/>              \n <t:pg labelvalue=\"SAD SMILE\" \n       imgvalue=\"#{resource['default/images:sad_smile.gif']}\"/>              \n</h:panelGrid>\n```", "```java\n<facelet-taglib version=\"2.0\">\n <namespace>**http://***some***/***namespace*</namespace>\n <composite-library-name>\n*library_name*\n </composite-library-name>\n</facelet-taglib>\n```", "```java\n    <?xml version=\"1.0\"?>\n    <faces-config \n\n           xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n           http://xmlns.jcp.org/xml/ns/javaee/web-facesconfig_2_2.xsd\"\n           version=\"2.2\">\n    </faces-config>\n    ```", "```java\n    <facelet-taglib version=\"2.2\"\n\n        xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaeehttp://xmlns.jcp.org/xml/ns/javaee/web-facelettaglibrary_2_2.xsd\"\n\n     <namespace>http://jsf/cc/packt/taglib</namespace>\n     <tag>    \n      <tag-name>range-slider</tag-name>\n       <component>\n        <resource-id>\n         resources/range-slider/range-slider.xhtml\n        </resource-id>      \n       </component>\n     </tag>  \n     <tag>\n      <tag-name>temperature</tag-name>\n       <component>\n        <resource-id>\n         resources/temperature/temperature.xhtml\n        </resource-id>\n       </component>\n     </tag>\n    </facelet-taglib>\n    ```", "```java\npublic UIComponent createComponent(FacesContext context, String taglibURI, String tagName, Map<String,Object> attributes)\n```", "```java\npublic void addWelcomeCompositeComponent() {\n FacesContext context = FacesContext.getCurrentInstance();\n ViewDeclarationLanguage vdl = context.getApplication().getViewHandler().getViewDeclarationLanguage(context,\n  context.getViewRoot().getViewId());\n\n Map<String, Object> attributes = new HashMap<>();\n attributes.put(\"value\", createValueExpression(\"#{welcomeBean.value}\",  \n  java.lang.String.class).getExpressionString());\n attributes.put(\"to\", createValueExpression(\"#{welcomeBean.to}\", \n  java.lang.String.class).getExpressionString());\n\n UINamingContainer welcomeComponent = (UINamingContainer) \n  vdl.createComponent(context, \"http://xmlns.jcp.org/jsf/composite/customs\", \"welcome\", attributes);\n UIComponent parent = context.getViewRoot().findComponent(\"welcomeId\");\n welcomeComponent.setId(parent.getClientId(context) + \"_\" + \"welcomeMsgId\");\n parent.getChildren().add(welcomeComponent);\n}\n```", "```java\npublic void addComponent() {\n FacesContext context = FacesContext.getCurrentInstance();\n ViewDeclarationLanguage vdl = context.getApplication().getViewHandler().getViewDeclarationLanguage(context,\n  context.getViewRoot().getViewId());\n\n Map<String, Object> attributes = new HashMap<>();       \n attributes.put(\"value\", createValueExpression(\"#{playersBean.player}\", java.lang.String.class).getExpressionString());\n UIOutput outputTextComponent = (UIOutput) vdl.createComponent(context, \n  \"http://java.sun.com/jsf/html\", \"outputText\", attributes);\n\n UIComponent parent = context.getViewRoot().findComponent(\"myPlayerId\");\n outputTextComponent.setId(parent.getClientId(context) + \n  \"_\" + \"nameId_\"+ new Date().getTime());\n parent.getChildren().clear();\n parent.getChildren().add(outputTextComponent);\n}\n```"]