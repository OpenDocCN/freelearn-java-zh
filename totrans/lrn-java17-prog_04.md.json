["```java\npackage com.packt.learnjava.ch03_fundamentals;\n```", "```java\nimport com.packt.learnjava.ch02_oop.hiding.C;\n```", "```java\nimport com.packt.learnjava.ch02_oop.hiding.D;\n```", "```java\npublic class Packages {\n```", "```java\n    public void method(){\n```", "```java\n        C c = new C();\n```", "```java\n        D d = new D();\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nimport com.packt.learnjava.ch02_oop.hiding.*;\n```", "```java\npackage com.packt.learnjava.ch03_fundamentals;\n```", "```java\nimport com.packt.learnjava.ch02_oop.*;\n```", "```java\nimport com.packt.learnjava.ch02_oop.hiding.*;\n```", "```java\npublic class Packages {\n```", "```java\n    public void method(){\n```", "```java\n        C c = new C();\n```", "```java\n        D d = new D();\n```", "```java\n    }\n```", "```java\n}\n```", "```java\npackage com.packt.learnjava.ch03_fundamentals;\n```", "```java\nimport com.packt.learnjava.ch02_oop.SomeInterface;\n```", "```java\npublic class Packages {\n```", "```java\n    public void method(){\n```", "```java\n        System.out.println(SomeInterface.NAME);\n```", "```java\n    }\n```", "```java\n}\n```", "```java\npackage com.packt.learnjava.ch03_fundamentals;\n```", "```java\nimport static com.packt.learnjava.ch02_oop.SomeInterface.NAME;\n```", "```java\npublic class Packages {\n```", "```java\n    public void method(){\n```", "```java\n        System.out.println(NAME);\n```", "```java\n    }\n```", "```java\n}\n```", "```java\npackage com.packt.learnjava.ch03_fundamentals;\n```", "```java\nimport com.packt.learnjava.ch02_oop.StaticMembers.SomeClass;\n```", "```java\nimport com.packt.learnjava.ch02_oop.hiding.C;\n```", "```java\nimport com.packt.learnjava.ch02_oop.hiding.D;\n```", "```java\nimport static com.packt.learnjava.ch02_oop.StaticMembers\n```", "```java\n                                         .SomeClass.someMethod;\n```", "```java\nimport static com.packt.learnjava.ch02_oop.StaticMembers\n```", "```java\n                                      .SomeClass.SOME_PROPERTY;\n```", "```java\npublic class Packages {\n```", "```java\n    public static void main(String... args){\n```", "```java\n        C c = new C();\n```", "```java\n        D d = new D();\n```", "```java\n        SomeClass obj = new SomeClass();\n```", "```java\n        someMethod(42);\n```", "```java\n        System.out.println(SOME_PROPERTY);    //prints: abc\n```", "```java\n    }\n```", "```java\n}\n```", "```java\npublic class AccessModifiers {\n```", "```java\n    String prop1;\n```", "```java\n    private String prop2;\n```", "```java\n    protected String prop3;\n```", "```java\n    public String prop4;\n```", "```java\n    void method1(){ }\n```", "```java\n    private void method2(){ }\n```", "```java\n    protected void method3(){ }\n```", "```java\n    public void method4(){ }\n```", "```java\n    class A1{ }\n```", "```java\n    private class A2{ }\n```", "```java\n    protected class A3{ }\n```", "```java\n    public class A4{ }\n```", "```java\n    interface I1 {}\n```", "```java\n    private interface I2 {}\n```", "```java\n    protected interface I3 {}\n```", "```java\n    public interface I4 {}\n```", "```java\n}\n```", "```java\npublic class AccessModifiers {\n```", "```java\n    private String topLevelPrivateProperty = \n```", "```java\n                                     \"Top-level private value\";\n```", "```java\n    private void topLevelPrivateMethod(){\n```", "```java\n        var inner = new InnerClass();\n```", "```java\n        System.out.println(inner.innerPrivateProperty);\n```", "```java\n        inner.innerPrivateMethod();\n```", "```java\n    }\n```", "```java\n    private class InnerClass {\n```", "```java\n        //private static String PROP = \"Inner static\"; //error\n```", "```java\n        private String innerPrivateProperty = \n```", "```java\n                                         \"Inner private value\";\n```", "```java\n        private void innerPrivateMethod(){\n```", "```java\n            System.out.println(topLevelPrivateProperty);\n```", "```java\n        }\n```", "```java\n    }\n```", "```java\n    private static class InnerStaticClass {\n```", "```java\n        private static String PROP = \"Inner private static\";\n```", "```java\n        private String innerPrivateProperty = \n```", "```java\n                                         \"Inner private value\";\n```", "```java\n        private void innerPrivateMethod(){\n```", "```java\n            var top = new AccessModifiers();\n```", "```java\n            System.out.println(top.topLevelPrivateProperty);\n```", "```java\n        }\n```", "```java\n    }\n```", "```java\n}\n```", "```java\npublic static void main(String... args){\n```", "```java\n    var top = new AccessModifiers();\n```", "```java\n    top.topLevelPrivateMethod();\n```", "```java\n    //var inner = new InnerClass();  //compiler error\n```", "```java\n    System.out.println(InnerStaticClass.PROP);\n```", "```java\n    var inner = new InnerStaticClass();\n```", "```java\n    System.out.println(inner.innerPrivateProperty);\n```", "```java\n    inner.innerPrivateMethod();\n```", "```java\n}\n```", "```java\n<Class name> identifier;\n```", "```java\nObject obj = new AnyClassName();\n```", "```java\nAnyClassName anyClassName = (AnyClassName)obj;\n```", "```java\ninterface C {}\n```", "```java\ninterface B extends C {}\n```", "```java\nclass A implements B { }\n```", "```java\nB b = new A();\n```", "```java\nC c = new A();\n```", "```java\nA a1 = (A)b;\n```", "```java\nA a2 = (A)c;\n```", "```java\nint[] intArray;\n```", "```java\nfloat[][] floatArray;\n```", "```java\nString[] stringArray;\n```", "```java\nSomeClass[][][] arr;\n```", "```java\nint[] intArray = new int[10];\n```", "```java\nfloat[][] floatArray = new float[3][4];\n```", "```java\nString[] stringArray = new String[2];\n```", "```java\nSomeClass[][][] arr = new SomeClass[3][5][2];\n```", "```java\nSystem.out.println(intArray[3]);      //prints: 0\n```", "```java\nSystem.out.println(floatArray[2][2]); //prints: 0.0\n```", "```java\nSystem.out.println(stringArray[1]);   //prints: null\n```", "```java\nint[] intArray = {1,2,3,4,5,6,7,8,9,10};\n```", "```java\nfloat[][] floatArray ={{1.1f,2.2f,3,2},{10,20.f,30.f,5},{1,2,3,4}};\n```", "```java\nString[] stringArray = {\"abc\", \"a23\"};\n```", "```java\nSystem.out.println(intArray[3]);      //prints: 4\n```", "```java\nSystem.out.println(floatArray[2][2]); //prints: 3.0\n```", "```java\nSystem.out.println(stringArray[1]);   //prints: a23\n```", "```java\nfloat[][] floatArray = new float[3][];\n```", "```java\nSystem.out.println(floatArray.length);  //prints: 3\n```", "```java\nSystem.out.println(floatArray[0]);      //prints: null\n```", "```java\nSystem.out.println(floatArray[1]);      //prints: null\n```", "```java\nSystem.out.println(floatArray[2]);      //prints: null\n```", "```java\n//System.out.println(floatArray[3]);    //error\n```", "```java\n//System.out.println(floatArray[2][2]); //error\n```", "```java\nfloat[][] floatArray = new float[3][];\n```", "```java\nfloatArray[0] = new float[4];\n```", "```java\nfloatArray[1] = new float[3];\n```", "```java\nfloatArray[2] = new float[7];\n```", "```java\nSystem.out.println(floatArray[2][5]);   //prints: 0.0\n```", "```java\nfloat[][] floatArray ={{1.1f},{10,5},{1,2,3,4}};\n```", "```java\nenum Season { SPRING, SUMMER, AUTUMN, WINTER }\n```", "```java\nenum Season { Spring, Summer, Autumn, Winter }\n```", "```java\nSeason season = Season.WINTER;\n```", "```java\nboolean b = season == Season.WINTER;\n```", "```java\nSystem.out.println(b);   //prints: true\n```", "```java\nenum Season { SPRING, SUMMER, AUTUMN, WINTER }\n```", "```java\nSystem.out.println(Season.SPRING.name());      //prints: SPRING\n```", "```java\nSystem.out.println(Season.WINTER.toString());  //prints: WINTER\n```", "```java\nSystem.out.println(Season.SUMMER.ordinal());        //prints: 1\n```", "```java\nSeason season = Enum.valueOf(Season.class, \"AUTUMN\");\n```", "```java\nSystem.out.println(season == Season.AUTUMN);     //prints: true\n```", "```java\nfor(Season s: Season.values()){\n```", "```java\n    System.out.print(s.name() + \" \"); \n```", "```java\n                          //prints: SPRING SUMMER AUTUMN WINTER\n```", "```java\n}\n```", "```java\nenum Season1 {\n```", "```java\n    SPRING, SUMMER, AUTUMN, WINTER;\n```", "```java\n    public String toString() {\n```", "```java\n        return this.name().charAt(0) + \n```", "```java\n               this.name().substring(1).toLowerCase();\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nfor(Season1 s: Season1.values()){\n```", "```java\n    System.out.print(s.toString() + \" \"); \n```", "```java\n                          //prints: Spring Summer Autumn Winter\n```", "```java\n}\n```", "```java\nEnum Season2 {\n```", "```java\n    SPRING(42), SUMMER(67), AUTUMN(32), WINTER(20);\n```", "```java\n    private int temperature;\n```", "```java\n    Season2(int temperature){\n```", "```java\n    this.temperature = temperature;\n```", "```java\n    }\n```", "```java\n    public int getTemperature(){\n```", "```java\n        return this.temperature;\n```", "```java\n    }\n```", "```java\n    public String toString() {\n```", "```java\n        return this.name().charAt(0) +\n```", "```java\n            this.name().substring(1).toLowerCase() +\n```", "```java\n                \"(\" + this.temperature + \")\";\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nfor(Season2 s: Season2.values()){\n```", "```java\n    System.out.print(s.toString() + \" \"); \n```", "```java\n          //prints: Spring(42) Summer(67) Autumn(32) Winter(20)\n```", "```java\n}\n```", "```java\nvoid modifyParameter(int x){\n```", "```java\n    x = 2;\n```", "```java\n}\n```", "```java\nint x = 1;\n```", "```java\nmodifyParameter(x);\n```", "```java\nSystem.out.println(x);  //prints: 1\n```", "```java\nclass DemoClass{\n```", "```java\n    private String prop;\n```", "```java\n    public DemoClass(String prop) { this.prop = prop; }\n```", "```java\n    public String getProp() { return prop; }\n```", "```java\n    public void setProp(String prop) { this.prop = prop; }\n```", "```java\n}\n```", "```java\nvoid modifyParameter(DemoClass obj){\n```", "```java\n    obj.setProp(\"Changed inside the method\");\n```", "```java\n}\n```", "```java\nDemoClass obj = new DemoClass(\"Is not changed\");\n```", "```java\nmodifyParameter(obj);\n```", "```java\nSystem.out.println(obj.getProp()); \n```", "```java\n                            //prints: Changed inside the method\n```", "```java\nclass DemoClass1{\n```", "```java\n    private Integer prop;\n```", "```java\n    public DemoClass1(Integer prop) { this.prop = prop; }\n```", "```java\n    public Integer getProp() { return prop; }\n```", "```java\n    public void setProp(Integer prop) { this.prop = prop; }\n```", "```java\n}\n```", "```java\nvoid modifyParameter(DemoClass1 obj){\n```", "```java\n    obj.setProp(Integer.valueOf(2));\n```", "```java\n}\n```", "```java\nDemoClass1 obj = new DemoClass1(Integer.valueOf(1));\n```", "```java\nmodifyParameter(obj);\n```", "```java\nSystem.out.println(obj.getProp());  //prints: 2\n```", "```java\nvoid modifyParameter(String obj){\n```", "```java\n    obj = \"Changed inside the method\";\n```", "```java\n}  \n```", "```java\nString obj = \"Is not changed\";\n```", "```java\nmodifyParameter(obj);\n```", "```java\nSystem.out.println(obj); //prints: Is not changed\n```", "```java\nobj = new String(\"Is not changed\");\n```", "```java\nmodifyParameter(obj);\n```", "```java\nSystem.out.println(obj); //prints: Is not changed\n```", "```java\n  public boolean equals(Object obj) {\n```", "```java\n       return (this == obj);\n```", "```java\n}\n```", "```java\nprivate final int value;\n```", "```java\npublic boolean equals(Object obj) {\n```", "```java\n    if (obj instanceof Integer) {\n```", "```java\n        return value == ((Integer)obj).intValue();\n```", "```java\n    }\n```", "```java\n    return false;\n```", "```java\n}\n```", "```java\nprivate final byte[] value;\n```", "```java\npublic boolean equals(Object anObject) {\n```", "```java\n      if (this == anObject) {\n```", "```java\n            return true;\n```", "```java\n      }\n```", "```java\n      if (anObject instanceof String) {\n```", "```java\n         String aString = (String)anObject;\n```", "```java\n         if (coder() == aString.coder()) {\n```", "```java\n           return isLatin1() ? StringLatin1.equals(value, \n```", "```java\n             aString.value)\n```", "```java\n                             : StringUTF16.equals(value, \n```", "```java\n             aString.value);\n```", "```java\n         }\n```", "```java\n      }\n```", "```java\n      return false;\n```", "```java\n}\n```", "```java\nclass DemoClass{\n```", "```java\n    private String prop;\n```", "```java\n    public DemoClass(String prop) { this.prop = prop; }\n```", "```java\n    public String getProp() { return prop; }\n```", "```java\n    public void setProp(String prop) { this.prop = prop; }\n```", "```java\n}\n```", "```java\n@Override\n```", "```java\npublic boolean equals(Object o) {\n```", "```java\n    if (this == o) return true;\n```", "```java\n    if (!(o instanceof DemoClass)) return false;\n```", "```java\n    DemoClass demoClass = (DemoClass) o;\n```", "```java\n    return Objects.equals(getProp(), demoClass.getProp());\n```", "```java\n}\n```", "```java\n@Override\n```", "```java\npublic int hashCode() {\n```", "```java\n    return Objects.hash(getProp());\n```", "```java\n}\n```", "```java\n         public static boolean equals(Object a, Object b) {\n             return (a == b) || (a != null && a.equals(b));\n         }\n    ```", "```java\nString to = \"To\";\n```", "```java\nString with = \"abc\";\n```", "```java\nclass A {\n```", "```java\n    private int count;\n```", "```java\n    public void setCount(int count) {\n```", "```java\n        count = count;         // 1\n```", "```java\n    }\n```", "```java\n    public int getCount(){\n```", "```java\n        return count;          // 2\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nA a = new A();\n```", "```java\na.setCount(2);\n```", "```java\nSystem.out.println(a.getCount());     //prints: 0\n```", "```java\nclass A {\n```", "```java\n    private int count;\n```", "```java\n    public void setCount(int count) {\n```", "```java\n        this.count = count;         // 1\n```", "```java\n    }\n```", "```java\n    public int getCount(){\n```", "```java\n        return this.count;          // 2\n```", "```java\n    }\n```", "```java\n}\n```", "```java\n@Override\n```", "```java\npublic boolean equals(Object o) {\n```", "```java\n    if (this == o) return true;\n```", "```java\n    if (!(o instanceof DemoClass)) return false;\n```", "```java\n    DemoClass demoClass = (DemoClass) o;\n```", "```java\n    return Objects.equals(getProp(), demoClass.getProp());\n```", "```java\n}\n```", "```java\nclass TheChildClass extends TheParentClass{\n```", "```java\n    private int x;\n```", "```java\n    private String prop;\n```", "```java\n    private String anotherProp = \"abc\";\n```", "```java\n    public TheChildClass(String prop){\n```", "```java\n        super(42);\n```", "```java\n        this.prop = prop;\n```", "```java\n    }\n```", "```java\n    public TheChildClass(int arg1, String arg2){\n```", "```java\n        super(arg1);\n```", "```java\n        this.prop = arg2;\n```", "```java\n    }\n```", "```java\n    // methods follow\n```", "```java\n}\n```", "```java\nclass B  {\n```", "```java\n    public void someMethod() {\n```", "```java\n        System.out.println(\"Method of B class\");\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nclass C extends B {\n```", "```java\n    public void someMethod() {\n```", "```java\n        System.out.println(\"Method of C class\");\n```", "```java\n    }\n```", "```java\n    public void anotherMethod() {\n```", "```java\n        this.someMethod();    //prints: Method of C class\n```", "```java\n        super.someMethod();   //prints: Method of B class\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nint i = 123456789;\n```", "```java\ndouble d = (double)i;\n```", "```java\nSystem.out.println(i - (int)d);       //prints: 0\n```", "```java\nlong l1 = 12345678L;\n```", "```java\nfloat f1 = (float)l1;\n```", "```java\nSystem.out.println(l1 - (long)f1);    //prints: 0\n```", "```java\nlong l2 = 123456789L;\n```", "```java\nfloat f2 = (float)l2;\n```", "```java\nSystem.out.println(l2 - (long)f2);    //prints: -3\n```", "```java\nlong l3 = 1234567891111111L;\n```", "```java\ndouble d3 = (double)l3;\n```", "```java\nSystem.out.println(l3 - (long)d3);    //prints: 0\n```", "```java\nlong l4 = 12345678999999999L;\n```", "```java\ndouble d4 = (double)l4;\n```", "```java\nSystem.out.println(l4 - (long)d4);    //prints: -1 \n```", "```java\nSystem.out.println(Integer.MAX_VALUE); //prints: 2147483647\n```", "```java\ndouble d1 = 1234567890.0;\n```", "```java\nSystem.out.println((int)d1);           //prints: 1234567890\n```", "```java\ndouble d2 = 12345678909999999999999.0;\n```", "```java\nSystem.out.println((int)d2);           //prints: 2147483647\n```", "```java\nint i = 123456789;\n```", "```java\ndouble d = Integer.valueOf(i).doubleValue();\n```", "```java\nSystem.out.println(i - (int)d);          //prints: 0\n```", "```java\nlong l1 = 12345678L;\n```", "```java\nfloat f1 = Long.valueOf(l1).floatValue();\n```", "```java\nSystem.out.println(l1 - (long)f1);       //prints: 0\n```", "```java\nlong l2 = 123456789L;\n```", "```java\nfloat f2 = Long.valueOf(l2).floatValue();\n```", "```java\nSystem.out.println(l2 - (long)f2);       //prints: -3\n```", "```java\nlong l3 = 1234567891111111L;\n```", "```java\ndouble d3 = Long.valueOf(l3).doubleValue();\n```", "```java\nSystem.out.println(l3 - (long)d3);       //prints: 0\n```", "```java\nlong l4 = 12345678999999999L;\n```", "```java\ndouble d4 = Long.valueOf(l4).doubleValue();\n```", "```java\nSystem.out.println(l4 - (long)d4);       //prints: -1\n```", "```java\ndouble d1 = 1234567890.0;\n```", "```java\nSystem.out.println(Double.valueOf(d1)\n```", "```java\n                         .intValue());   //prints: 1234567890\n```", "```java\ndouble d2 = 12345678909999999999999.0;\n```", "```java\nSystem.out.println(Double.valueOf(d2)\n```", "```java\n                         .intValue());   //prints: 2147483647\n```", "```java\nbyte b1 = Byte.parseByte(\"42\");\n```", "```java\nSystem.out.println(b1);             //prints: 42\n```", "```java\nByte b2 = Byte.decode(\"42\");\n```", "```java\nSystem.out.println(b2);             //prints: 42\n```", "```java\nboolean b3 = Boolean.getBoolean(\"property\");\n```", "```java\nSystem.out.println(b3);            //prints: false\n```", "```java\nBoolean b4 = Boolean.valueOf(\"false\");\n```", "```java\nSystem.out.println(b4);            //prints: false\n```", "```java\nint i1 = Integer.parseInt(\"42\");\n```", "```java\nSystem.out.println(i1);            //prints: 42\n```", "```java\nInteger i2 = Integer.getInteger(\"property\");\n```", "```java\nSystem.out.println(i2);            //prints: null\n```", "```java\ndouble d1 = Double.parseDouble(\"3.14\");\n```", "```java\nSystem.out.println(d1);            //prints: 3.14\n```", "```java\nDouble d2 = Double.valueOf(\"3.14\");\n```", "```java\nSystem.out.println(d2);            //prints: 3.14\n```", "```java\nString s1 = Integer.toString(42);\n```", "```java\nSystem.out.println(s1);            //prints: 42\n```", "```java\nString s2 = Double.toString(3.14);\n```", "```java\nSystem.out.println(s2);            //prints: 3.14\n```", "```java\nint i1 = 42;\n```", "```java\nInteger i2 = i1;              //autoboxing\n```", "```java\n//Long l2 = i1;               //error\n```", "```java\nSystem.out.println(i2);       //prints: 42\n```", "```java\ni2 = Integer.valueOf(i1);\n```", "```java\nSystem.out.println(i2);       //prints: 42\n```", "```java\nByte b = Byte.valueOf((byte)i1);\n```", "```java\nSystem.out.println(b);       //prints: 42\n```", "```java\nShort s = Short.valueOf((short)i1);\n```", "```java\nSystem.out.println(s);       //prints: 42\n```", "```java\nLong l = Long.valueOf(i1);\n```", "```java\nSystem.out.println(l);       //prints: 42\n```", "```java\nFloat f = Float.valueOf(i1);\n```", "```java\nSystem.out.println(f);       //prints: 42.0\n```", "```java\nDouble d = Double.valueOf(i1);\n```", "```java\nSystem.out.println(d);       //prints: 42.0 \n```", "```java\nInteger i1 = Integer.valueOf(42);\n```", "```java\nint i2 = i1.intValue();\n```", "```java\nSystem.out.println(i2);      //prints: 42\n```", "```java\nbyte b = i1.byteValue();\n```", "```java\nSystem.out.println(b);       //prints: 42\n```", "```java\nshort s = i1.shortValue();\n```", "```java\nSystem.out.println(s);       //prints: 42\n```", "```java\nlong l = i1.longValue();\n```", "```java\nSystem.out.println(l);       //prints: 42\n```", "```java\nfloat f = i1.floatValue();\n```", "```java\nSystem.out.println(f);       //prints: 42.0\n```", "```java\ndouble d = i1.doubleValue();\n```", "```java\nSystem.out.println(d);       //prints: 42.0\n```", "```java\nLong l1 = Long.valueOf(42L);\n```", "```java\nlong l2 = l1;                //implicit unboxing\n```", "```java\nSystem.out.println(l2);      //prints: 42\n```", "```java\ndouble d2 = l1;              //implicit unboxing\n```", "```java\nSystem.out.println(d2);      //prints: 42.0\n```", "```java\nlong l3 = i1;                //implicit unboxing\n```", "```java\nSystem.out.println(l3);      //prints: 42\n```", "```java\ndouble d3 = i1;              //implicit unboxing\n```", "```java\nSystem.out.println(d3);      //prints: 42.0\n```"]