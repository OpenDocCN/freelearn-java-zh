["```java\n<extension module=\"org.jboss.as.security\"/>\n```", "```java\n<subsystem >\n  <security-domains>\n    <security-domain name=\"other\" cache-type=\"default\">\n      <authentication>\n        <login-module code=\"Remoting\" flag=\"optional\">\n          <module-option name=\"password-stacking\"    value=\"useFirstPass\"/>\n        </login-module>\n        <login-module code=\"RealmDirect\" flag=\"required\">\n          <module-option name=\"password-stacking\" value=\"useFirstPass\"/>\n        </login-module>\n      </authentication>\n    </security-domain>\n    <security-domain name=\"jboss-web-policy\" cache-type=\"default\">\n      <authorization>\n        <policy-module code=\"Delegating\" flag=\"required\"/>\n      </authorization>\n    </security-domain>\n    <security-domain name=\"jboss-ejb-policy\" cache-type=\"default\">\n      <authorization>\n        <policy-module code=\"Delegating\" flag=\"required\"/>\n      </authorization>\n    </security-domain>\n  </security-domains>\n</subsystem>\n```", "```java\n<security-domain name=\"basic\" cache-type=\"default\">\n <authentication>\n   <login-module code=\"UsersRoles\" flag=\"required\">\n       <module-option name=\"usersProperties\" value=\"${jboss.server.config.dir}/users.properties\"/>\n       <module-option name=\"rolesProperties\" value=\"${jboss.server.config.dir}/roles.properties\"/>\n   </login-module>\n </authentication>\n</security-domain>\n```", "```java\nmyusername=mypassword\n```", "```java\nmyusername=myrole1,myrole2\nmyusername.MyRoleGroup1=myrole3,myrole4\n```", "```java\n<security-domain name=\"mysqldomain\" cache-type=\"default\">\n    <authentication>\n         <login-module code=\"Database\" flag=\"required\">\n               <module-option name=\"dsJndiName\" value=\"java:/MySqlDS\"/>\n               <module-option name=\"principalsQuery\" value=\"select passwd from USERS where user=?\"/>\n               <module-option name=\"rolesQuery\" value=\"select role, 'Roles' from USER_ROLES where user=?\"/>\n         </login-module>\n     </authentication>\n</security-domain>\n```", "```java\nCREATE TABLE USERS(user VARCHAR(64) PRIMARY KEY, passwd VARCHAR(64));\nCREATE TABLE USER_ROLES(user VARCHAR(64), role VARCHAR(32));\n\nINSERT INTO USERS VALUES('admin', 'admin');\nINSERT INTO USER_ROLES VALUES('admin', 'Manager');\n```", "```java\n<login-module code=\"Database\" flag=\"required\">\n    <module-option name=\"dsJndiName\" value=\"java:/MySqlDS\"/>\n    <module-option name=\"principalsQuery\" value=\"SELECT passwd FROMUSERS WHERE user=?\"/>\n    <module-option name=\"rolesQuery\" value=\"SELECT role, 'Roles' FROMUSER_ROLES WHERE user=?\"/>\n <module-option name=\"hashAlgorithm\" value=\"MD5\"/>\n <module-option name=\"hashEncoding\" value=\"BASE64\"/>\n <module-option name=\"hashStorePassword\" value=\"true\"/>\n</login-module>\n```", "```java\npublic class Hash {\n\n    public static void main(String[] args) throws Exception {\n        String password = args[0];\n\n        MessageDigest md = MessageDigest.getInstance(\"MD5\");\n\n        byte[] passwordBytes = password.getBytes();\n        byte[] hash = md.digest(passwordBytes);\n        String passwordHash = Base64.getEncoder().encodeToString(hash);\n        System.out.println(\"password hash: \"+passwordHash);\n    }\n}\n```", "```java\ndn: dc=example,dc=com\nobjectclass: top\nobjectclass: dcObject\nobjectclass: organization\ndc: example\no: MCC\n\ndn: ou=People,dc=example,dc=com\nobjectclass: top\nobjectclass: organizationalUnit\nou: People\n\ndn: uid=admin,ou=People,dc=example,dc=com\nobjectclass: top\nobjectclass: uidObject\nobjectclass: person\nuid: admin\ncn: Manager\nsn: Manager\nuserPassword: secret\n\ndn: ou=Roles,dc=example,dc=com\nobjectclass: top\nobjectclass: organizationalUnit\nou: Roles\n\ndn: cn=Manager,ou=Roles,dc=example,dc=com\nobjectClass: top\nobjectClass: groupOfNames\ncn: Manager\ndescription: the JBossAS7 group\nmember: uid=admin,ou=People,dc=example,dc=com\n```", "```java\n<login-module code=\"LdapExtended\" flag=\"required\">\n\n    <module-option name=\"java.naming.factory.initial\"  value=\"com.sun.jndi.ldap.LdapCtxFactory\"/>\n    <module-option name=\"java.naming.provider.url\" value=\"ldap://localhost:10389\"/>\n    <module-option name=\"java.naming.security.authentication\" value=\"simple\"/>\n    <module-option name=\"bindDN\" value=\"uid=admin,ou=system\"/>\n    <module-option name=\"bindCredential\" value=\"secret\"/>\n    <module-option name=\"baseCtxDN\" value=\"ou=People,dc=example,dc=com\"/>\n    <module-option name=\"baseFilter\" value=\"(uid={0})\"/>\n    <module-option name=\"rolesCtxDN\" value=\"ou=Roles,dc=example,dc=com\"/>\n    <module-option name=\"roleFilter\" value=\"(member={1})\"/>\n    <module-option name=\"roleAttributeID\" value=\"cn\"/>\n    <module-option name=\"searchScope\" value=\"ONELEVEL_SCOPE\"/>\n    <module-option name=\"allowEmptyPasswords\" value=\"true\"/>\n</login-module>\n```", "```java\n<web-app>\n...\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>HtmlAuth</web-resource-name>\n      <description>application security constraints\n      </description>\n <url-pattern>/*</url-pattern>\n      <http-method>GET</http-method>\n      <http-method>POST</http-method>\n      <http-method>PUT</http-method>\n      <http-method>DELETE</http-method>\n    </web-resource-collection>\n <auth-constraint>\n <role-name>Manager</role-name>\n </auth-constraint>\n  </security-constraint>\n  <login-config>\n     <auth-method>BASIC</auth-method>\n     <realm-name>Sample Realm</realm-name>\n  </login-config>\n\n <security-role>\n <role-name>Manager</role-name>\n </security-role>\n</web-app>\n```", "```java\n<jboss-web>\n <security-domain>java:/jboss/env/mysqldomain</security-domain>\n</jboss-web>\n```", "```java\nimport org.jboss.ejb3.annotation.SecurityDomain;\nimport javax.annotation.security.RolesAllowed;\n\n@Stateless\n@SecurityDomain(\"mysqldomain\")\n@RolesAllowed( { \"Manager\" })\npublic  class SecureEJB {\n  ...\n}\n```", "```java\n@RolesAllowed({\"SuperUser\"})\npublic void createUser(String country,String name) {\n    User customer = new User ();  \n    customer.setCountry(country);\n    customer.setName(name);\n    em.persist(customer);\n}\n```", "```java\n  JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();\n\n  factory.getInInterceptors().add(new LoggingInInterceptor());\n  factory.getOutInterceptors().add(new LoggingOutInterceptor());\n\n  factory.setServiceClass(POJOWebService.class);\n  factory.setAddress(\"http://localhost:8080/pojoService\");\n factory.setUsername(\"admin\");\n factory.setPassword(\"admin\");\n  POJOWebService client = (POJOWebService) factory.create();\n\n  client.doSomething();\n```", "```java\n@Stateless\n@WebService(targetNamespace = \"http://www.packtpub.com/\", \n    serviceName = \"SecureEJBService\")\n@WebContext(authMethod = \"BASIC\",\n secureWSDLAccess = false)\n@SecurityDomain(value = \"mysqldomain\")\npublic  class SecureEJB {\n  ...\n}\n```", "```java\n<management>\n    <security-realms>\n <security-realm name=\"ManagementRealm\">\n            <authentication>\n                <local default-user=\"$local\" skip-group-loading=\"true\"/>\n                <properties path=\"mgmt-users.properties\" relative-to=\"jboss.server.config.dir\"/>\n            </authentication>\n            <authorization map-groups-to-roles=\"false\">\n                <properties path=\"mgmt-groups.properties\" relative-to=\"jboss.server.config.dir\"/>\n            </authorization>\n        </security-realm>\n    </security-realms>\n    ...\n    <management-interfaces>\n <http-interface security-realm=\"ManagementRealm\" http-upgrade-enabled=\"true\">\n            <socket-binding http=\"management-http\"/>\n        </http-interface>\n    </management-interfaces>\n</management>\n```", "```java\nusername=HEX( MD5( username ':' realm ':' password))\n```", "```java\nchris=554dadf6fa222d6ea11a470f3dea7a94\n```", "```java\nadd-user.sh myuser mypassword realm1\n```", "```java\njboss-cli.sh --connect --command=\"/core-service=management/access=authorization:write-attribute(name=provider,value=rbac)\"\n\n```", "```java\njboss-cli.sh --connect --command=\":reload\"\n\n```", "```java\njboss-cli.sh --connect --command=\"/core-service=management/access=authorization/role-mapping=SuperUser/include=user-yevai:add(name=yevai,type=USER)\"\n\n```", "```java\nuser-add.sh -u tavonga -p mypassword -g MyGroup\n\n```", "```java\nkeytool -genkeypair -keystore wildfly.keystore -storepass mypassword -keypass mypassword -keyalg RSA -validity 180 -alias wildfly -dname \"cn=packtpub,o=PackPub,c=GB\"\n```", "```java\n<subsystem >\n    <buffer-cache name=\"default\"/>\n    <server name=\"default-server\">\n        <https-listener name=\"https\" socket-binding=\"https\" security-realm=\"CertificateRealm\"/>\n        <http-listener name=\"default\" socket-binding=\"http\"/>\n        <host name=\"default-host\" alias=\"localhost\">\n            <location name=\"/\" handler=\"welcome-content\"/>\n            <filter-ref name=\"server-header\"/>\n            <filter-ref name=\"x-powered-by-header\"/>\n        </host>\n    </server>\n</subsystem>\n```", "```java\n<management>\n    <security-realms>\n        <security-realm name=\"CertificateRealm\">\n            <server-identities>\n                <ssl>\n                   <keystore path=\"wildfly.keystore\" relative-to=\"jboss.server.config.dir\" keystore-password=\"mypassword\"/>  \n                </ssl>\n            <server-identities>\n        </security-realm>\n    </security-realms>\n</management>\n```", "```java\nkeytool -certreq -keystore wildfly.keystore -alias wildfly -storepass mypassword -keypass mypassword  -keyalg RSA  -file certreq.csr\n```", "```java\n-----BEGIN NEW CERTIFICATE REQUEST-----\n  ...\n-----END NEW CERTIFICATE REQUEST-----\n```", "```java\nkeytool -import -keystore wildfly.keystore -alias testkey1 -storepass mypassword -keypass mypassword -file signed_ca.txt\n```"]