["```java\njalcorn@Johns-MBP-8 StockTrader % git clone   https://github.com/IBMStockTrader/trader\nCloning into 'trader'...\nremote: Enumerating objects: 2840, done.\nremote: Counting objects: 100% (247/247), done.\nremote: Compressing objects: 100% (132/132), done.\nremote: Total 2840 (delta 58), reused 0 (delta 0), pack-  reused 2593\nReceiving objects: 100% (2840/2840), 28.25 MiB | 322.00   KiB/s, done.\nResolving deltas: 100% (1049/1049), done.\njalcorn@Johns-MBP-8 StockTrader % cd trader\njalcorn@Johns-MBP-8 trader % ls\nBUILD.md             Jenkinsfile             lab\nCONTRIBUTING.md      Jenkinsfiledemo         manifest.yml\nDockerfile           LICENSE                 manifests\nDockerfile-build     README.md           pipeline-template.yaml\nDockerfile-lang      build_parameters.sh     pom.xml\nDockerfile-tools     chart                   src\nDockerfile.basicregistry cli-config.yml\njalcorn@Johns-MBP-8 trader %\n```", "```java\n            <dependency>\n               <groupId>org.eclipse.microprofile</groupId>\n               <artifactId>microprofile</artifactId>\n               <version>4.0.1</version>\n               <type>pom</type>\n               <scope>provided</scope>\n            </dependency>\n    ```", "```java\n    jalcorn@Johns-MBP-8 trader % mvn compile\n    [INFO] Scanning for projects...\n    [INFO] \n    [INFO] --------< com.stocktrader:trader >-------------\n    [INFO] Building StockTrader - trader 1.0-SNAPSHOT\n    [INFO] ----------------[ war ]-----------------------\n    [INFO] --- maven-resources-plugin:2.6:resources   (default-resources) @ trader ---\n    [INFO] Using 'UTF-8' encoding to copy filtered   resources.\n    [INFO] Copying 1 resource\n    [INFO] \n    [INFO] --- maven-compiler-plugin:3.1:compile (default-  compile) @ trader ---\n    [INFO] Changes detected - recompiling the module!\n    [INFO] Compiling 15 source files to /Users/jalcorn   StockTrader/trader/target/classes\n    [INFO] -----------------------------------------------\n    [INFO] BUILD SUCCESS\n    [INFO] -----------------------------------------------\n    [INFO] Total time:  1.913 s\n    [INFO] Finished at: 2021-05-09T12:26:19-05:00\n    [INFO] -----------------------------------------------\n    jalcorn@Johns-MBP-8 trader %\n    ```", "```java\n    mvn package, which takes about half a minute due to starting and stopping the Open Liberty server, actually does run the compile as well, so you would only use the command mvn compile directly when wanting a very fast way to check for compile errors.\n    ```", "```java\n    404 errors, as tests sometimes start trying to hit URLs before the server is fully started; that's why it retries up to *5* times before giving up.\n    ```", "```java\n    <featureManager>\n        <feature>microProfile-4.1</feature>\n    </featureManager>\n```", "```java\n    <featureManager>\n        <feature>mpHealth-3.1</feature>\n        <feature>mpMetrics-3.1</feature>\n    </featureManager>\n```", "```java\n    <mpJwt id=\"stockTraderJWT\" audiences=\"${JWT_AUDIENCE}\"       issuer=\"${JWT_ISSUER}\" keyName=\"jwtSigner\"         ignoreApplicationAuthMethod=\"false\" expiry=\"12h\"           sslRef=\"defaultSSLConfig\"/>\n    <mpMetrics authentication=\"false\"/>\n```", "```java\n    docker pull of the image before running a build, to ensure you have the latest (as Docker would think you already have an image with such a tag, even though the one you have locally might be many months old). For example, do the following:\n\n    ```", "```java\n\n    ```", "```java\n    jalcorn@Johns-MBP-8 trader % docker build -t trader .[+] Building 45.7s (10/10) FINISHED \n     => [internal] load build definition from Dockerfile 0.0s\n     => => transferring dockerfile: 37B 0.0s\n     => [internal] load .dockerignore 0.0s\n     => => transferring context: 2B 0.0s\n     => [internal] load metadata for docker.io/openliberty /open-liberty:k  0.0s\n     => [1/5] FROM docker.io/openliberty/open-liberty:kernel-slim-java11-  0.0s\n     => [internal] load build context 0.3s\n     => => transferring context: 11.41MB 0.2s\n     => CACHED [2/5] COPY --chown=1001:0 src/main/liberty/config /config   0.0s\n     => CACHED [3/5] RUN features.sh 0.0s\n     => [4/5] COPY --chown=1001:0 target/TraderUI.war /config/apps/Trader  0.1s\n     => [5/5] RUN configure.sh 44.8s\n     => exporting to image 0.4s\n     => => exporting layers 0.4s\n     => => writing image sha256:d0a03e6e7fd2873a8361aa9c9c   ad22dd614686778  0.0s\n     => => naming to docker.io/library/trader 0.0s\n    jalcorn@Johns-MBP-8 trader %\n    ```", "```java\n    jalcorn@Johns-MBP-8 trader % docker tag trader:latest ibmstocktrader/trader:latest\n    jalcorn@Johns-MBP-8 trader % docker push ibmstocktrader/trader:latest\n    The push refers to repository [docker.io/ibmstocktrader/trader]\n    c139b5a83739: Pushing   13.9MB/62.74MB\n    dae5b07894dc: Pushing  2.888MB/11.4MB\n    0b797df05047: Pushing  5.893MB/69.17MB\n    7daae910987c: Pushed \n    3efa9ea44ae4: Layer already exists \n    7d02e9817200: Layer already exists \n    267522994240: Layer already exists \n    0db07c8859ff: Layer already exists \n    2b4eefc8e725: Layer already exists \n    8a9f64ec0b16: Layer already exists \n    9b61e11e8907: Layer already exists \n    09b9a9d4c9f4: Layer already exists \n    83713a30b4bb: Layer already exists \n    1e8cd6732429: Layer already exists \n    476579af086a: Layer already exists\n    jalcorn@Johns-MBP-8 trader %\n    ```", "```java\njalcorn@Johns-MBP-8 portfolio % docker run -p 9443:9443 -e JWT_AUDIENCE=test -e JWT_ISSUER=test -e TEST_MODE=true trader:latest\nLaunching defaultServer (Open Liberty 21.0.0.4/wlp-1.0.51.cl210420210407-0944) on Eclipse OpenJ9 VM, version 11.0.11+9 (en_US)\n[AUDIT] CWWKE0001I: The server defaultServer has been launched.\n<snip>\n[INFO] SRVE0169I: Loading Web Module: Trader UI.\n[INFO] SRVE0250I: Web Module Trader UI has been bound to default_host.\n[AUDIT] CWWKT0016I: Web application available (default_host): http://5708495d563b:9080/trader/\n[AUDIT] CWWKZ0001I: Application TraderUI started in 5.701 seconds.\n[AUDIT] CWWKF0012I: The server installed the following features: [appSecurity-2.0, appSecurity-3.0, cdi-2.0, distributedMap-1.0, el-3.0, federatedRegistry-1.0, jaxrs-2.1, jaxrsClient-2.1, jndi-1.0, json-1.0, jsonb-1.0, jsonp-1.1, jsp-2.3, jwt-1.0, jwtSso-1.0, ldapRegistry-3.0, microProfile-4.0, monitor-1.0, mpConfig-2.0, mpFaultTolerance-3.0, mpHealth-3.0, mpJwt-1.2, mpMetrics-3.0, mpOpenAPI-2.0, mpOpenTracing-2.0, mpRestClient-2.0, oauth-2.0, openidConnectClient-1.0, opentracing-2.0, servlet-4.0, ssl-1.0, transportSecurity-1.0].\n[INFO] CWWKF0008I: Feature update completed in 8.604 seconds.\n[AUDIT] CWWKF0011I: The defaultServer server is ready to run a smarter planet. The defaultServer server started in 9.631 seconds.\n```", "```java\njalcorn@Johns-MBP-8 StockTrader % curl -H \"Authorization: eyJraWQiOiJWeUltUHBWVG1RY0ZfeV9SdVdHZmh1YkRGd1cxYjQ1d3FO QU1mUWZmV3hBIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJ0b2tlbl 90eXBlIjoiQmVhcmVyIiwiYXVkIjoic3RvY2stdHJhZGVyIiwic3ViIjoic3R vY2siLCJ1cG4iOiJzdG9jayIsImdyb3VwcyI6WyJTdG9ja1RyYWRlciJdLCJy ZWFsbSI6IkJhc2ljUmVnaXN0cnkiLCJpc3MiOiJodHRwOi8vc3RvY2stdHJhZG VyLmlibS5jb20iLCJleHAiOjE2MjIxNTA0MDUsImlhdCI6MTYyMjE0MzIwNX0.k2z65b36MJU4fhpqq7S66pYV8rwZalT3aQK-hoOnINeVarg6k3AHIP6lN_ZHsT KX5W4b8q81o5gC0KSdEFN6VSi3qdC7a02aotICbuuZh459F7IuPOC5rWbwrUa kznNxh2I7s8Nurhcb2_UDq1WM0POyZYMpuDokys-CeH5w3QyLZ7tx_IS6czU9 yh17bX4pp3eNH0JLCZybB_i-rBHh8cwzKLk3q73CvPhHJ2jw_zw79viaSUs WOeIkF21S-iB2v4PYw7nTz54pp02pu_eHi8W-hRCebN0O7xsG_JNZUPEgloN b9O8b0d_7V8qyKD5m_YpSh45y_CZ9j82i_Ho_9A \" http://localhost:90 80/stock-quote/TEST \n{\"date\":\"2021-05-10\",\"price\":123.45,\"symbol\":\n\"TEST\",\"time\":0}% jalcorn@Johns-MBP-8 StockTrader %\n```", "```java\njalcorn@Johns-MBP-8 StockTrader % curl http://localhost:9080/health/started \n{\"checks\":[],\"status\":\"UP\"}\n% jalcorn@Johns-MBP-8 StockTrader % curl http://localhost:9080/health/ready\n{\"checks\":[],\"status\":\"UP\"}% \njalcorn@Johns-MBP-8 StockTrader % curl http://localhost:9080/health/live \n{\"checks\":[],\"status\":\"UP\"}% \njalcorn@Johns-MBP-8 StockTrader %\n```", "```java\njalcorn@Johns-MBP-8 StockTrader % curl http://localhost:9080/metrics\n# TYPE base_classloader_loadedClasses_count gauge\n# HELP base_classloader_loadedClasses_count Displays the number of classes that are currently loaded in the Java virtual machine.\nbase_classloader_loadedClasses_count 12491\n# TYPE base_thread_count gauge\n# HELP base_thread_count Displays the current number of live threads including both daemon and non-daemon threads.\nbase_thread_count 53\n# TYPE base_memory_usedHeap_bytes gauge\n# HELP base_memory_usedHeap_bytes Displays the amount of used heap memory in bytes.\nbase_memory_usedHeap_bytes 6.675884E7\n# TYPE vendor_servlet_request_total counter\n# HELP vendor_servlet_request_total The number of visits to this servlet since the start of the server.\nvendor_servlet_request_total{servlet=\"StockQuote_com_ibm_hybrid_cloud_sample_stocktrader_stockquote_StockQuote\"} 1\n# TYPE vendor_threadpool_size gauge\n# HELP vendor_threadpool_size The size of the thread pool.\nvendor_threadpool_size{pool=\"Default_Executor\"} 8\n# TYPE vendor_servlet_responseTime_total_seconds gauge\n# HELP vendor_servlet_responseTime_total_seconds The total response time of this servlet since the start of the server.\nvendor_servlet_responseTime_total_seconds{servlet=\"StockQuote_com_ibm_hybrid_cloud_sample_stocktrader_stockquote_StockQuote\"} 0.9500412\njalcorn@Johns-MBP-8 StockTrader %\n```", "```java\n[INFO] Initialized tracer=JaegerTracer(version=Java-1.5.0, serviceName=StockQuote, reporter=CompositeReporter(reporters=[RemoteReporter(sender=UdpSender(host=localhost, port=6831), closeEnqueueTimeout=1000), LoggingReporter(logger=org.slf4j.impl.JDK14LoggerAdapter(io.jaegertracing.internal.reporters.LoggingReporter))]), sampler=RemoteControlledSampler (maxOperations=2000, manager=HttpSamplingManager(hostPort=localhost:5778), sampler=ProbabilisticSampler(tags={sampler.type=probabilistic, sampler.param=0.001})), tags={hostname=5f0 6cf0b9a96, jaeger.version=Java-1.5.0, ip=172.17.0.2}, zipkinSharedRpcSpan=false, expandExceptionLogs=false, useTraceId128Bit=false)\n[INFO] CWMOT1001I: A JaegerTracer instance was created for the StockQuote application.  Tracing information is sent to localhost:6831.\n```", "```java\njalcorn@Johns-MBP-8 StockTrader % \ncurl -I http://localhost:9080/broker\nHTTP/1.1 403 Forbidden\nX-Powered-By: Servlet/4.0\nContent-Type: text/html;charset=ISO-8859-1\n$WSEP: \nContent-Language: en-US\nConnection: Close\nDate: Tue, 11 May 2021 05:27:45 GMT\njalcorn@Johns-MBP-8 StockTrader %\n```", "```java\n[ERROR] CWWKS5522E: The MicroProfile JWT feature cannot perform authentication because a MicroProfile JWT cannot be found in the request.\n```"]