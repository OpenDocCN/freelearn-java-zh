["```java\n<nifty \n\n        xsi:schemaLocation=\"http://nifty-gui.sourceforge.net/nifty-1.3.xsd http://nifty-gui.sourceforge.net/nifty-1.3.xsd\">\n  <useStyles filename=\"nifty-default-styles.xml\" />\n  <useControls filename=\"nifty-default-controls.xml\" />\n\n  <registerSound id=\"showWindow\" filename=\"Sound/Effects/Beep.ogg\" />\n\n  <screen id=\"main\" controller=\"gui.controller.MainScreenController\">\n    <layer id=\"layer0\" childLayout=\"absolute\" backgroundColor=\"#000f\">\n      <!-- add more content -->\n    </layer>\n  </screen>\n</nifty>\n```", "```java\nNiftyJmeDisplay niftyDisplay = new NiftyJmeDisplay(app.getAssetManager(),\n                app.getInputManager(),\n                app.getAudioRenderer(),\n                app.getRenderManager().getPostView(\"Gui Default\"));\n```", "```java\napp.getRenderManager().getPostView(\"Gui Default\").addProcessor(niftyDisplay);\n```", "```java\n    <panel id=\"optionsPanel\" childLayout=\"vertical\" width=\"40%\" height=\"60%\" align=\"center\" valign=\"center\" backgroundColor=\"#333f\">\n    ```", "```java\n    <control name=\"button\" id=\"closeButton\" align=\"right\" label=\"x\" height=\"30px\" width=\"30px\" >\n      <interact onClick=\"toggleOptionsMenu()\"/>\n    </control>\n    ```", "```java\n    nifty.getCurrentScreen().findElementByName(\"options\");\n    ```", "```java\n    app.getInputManager().deleteMapping(SimpleApplication.INPUT_MAPPING_EXIT);\n    ```", "```java\n    app.getInputManager().addMapping(\"TOGGLE_OPTIONS\", new KeyTrigger(KeyInput.KEY_ESCAPE));\n    app.getInputManager().addListener(this, \"TOGGLE_OPTIONS\");\n    ```", "```java\n    public void onAction(String name, boolean isPressed, float tpf) {\n      if(name.equals(TOGGLE_OPTIONS) && isPressed){\n     ((NiftyController)nifty.getCurrentScreen().getScreenController()).toggleOptionsMenu();\n      }\n    }\n    ```", "```java\n    <resourceBundle id=\"localization\" filename=\"packagename.filename\" />\n    ```", "```java\n    <control name=\"label\" text=\"${localization.STR_HELLO_WORLD}\"/>\n    ```", "```java\n    <screen id=\"loadingScreen\" controller=\"gui.controller.LoadingScreenController\">\n    ```", "```java\n    <layer id=\"layer0\" childLayout=\"center\" backgroundColor=\"#000f\">\n    ```", "```java\n    <panel id=\"loadingPanel\" childLayout=\"vertical\" visible=\"false\">\n    ```", "```java\n    <effect>\n      <onShow name=\"fade\" start=\"#00\" end=\"#ff\" length=\"500\" inherit=\"true\"/>\n      <onEndScreen name=\"fade\" start=\"#ff\" end=\"#00\" length=\"200\" inherit=\"true\"/>\n    </effect>\n    ```", "```java\n    <effect>\n      <onShow name=\"fade\" start=\"#00\" end=\"#ff\" length=\"1000\"/>\n      <onShow name=\"imageSizePulsate\" startSize=\"100%\" endSize=\"50%\" pulsator=\"SinusPulsator\" activated=\"true\" timeType=\"infinite\"/>\n    </effect>\n    ```", "```java\n    screen.findNiftyControl(\"caption\", Label.class).setText(loadingText); screen.findElementByName(\"centralPanel\").getRenderer(ImageRenderer.class).setImage(nifty.createImage(loadingScreen, true));\n    screen.findElementByName(\"loadingPanel\").setVisible(true);\n    ```", "```java\n    nifty.addXml(\"Interface/Screens/loadingScreen.xml\");\n    ```", "```java\n    ((LoadingScreenController)niftyState.getNifty().getScreen(\"loadingScreen\").getScreenController()).setLoadingText(\"Loading Test Scene\"); ((LoadingScreenController)niftyState.getNifty().getScreen(\"loadingScreen\").getScreenController()).setLoadingImage(\"Interface/Image/loadingScreen.png\");\n    ```", "```java\n    <screen id=\"dialogScreen\" controller=\"gui.controller.DialogScreenController\">\n    ```", "```java\n    <layer id=\"layer0\" childLayout=\"center\" backgroundColor=\"#0000\">\n    ```", "```java\n    <panel id=\"dialogPanel\" childLayout=\"vertical\" visible=\"false\">\n    ```", "```java\n    <effect>\n      <onShow name=\"fade\" start=\"#00\" end=\"#ff\" length=\"200\" inherit=\"true\"/>\n      <onEndScreen name=\"fade\" start=\"#ff\" end=\"#00\" length=\"200\" inherit=\"true\"/>\n    </effect>\n    ```", "```java\n    <control name=\"characterControl\" id=\"character\"/>\n    ```", "```java\n    <control id=\"dialogOptions\" name=\"listBox\" vertical=\"off\" horizontal=\"off\" displayItems=\"3\" selection=\"Single\"/>\n    ```", "```java\n    dialogOptions = screen.findNiftyControl(\"dialogOptions\", ListBox.class);\n    ```", "```java\n    screen.findNiftyControl(\"characterName\", Label.class).setText(dialogNode.getCharacterName());\n    ```", "```java\n    screen.findElementByName(\"characterImage\").getRenderer(ImageRenderer.class).setImage(nifty.createImage(dialogNode.getCharacterImage(), true));\n    ```", "```java\n    public void onDialogOptionSelected(final String id, final ListBoxSelectionChangedEvent event)\n    ```", "```java\n    @NiftyEventSubscriber(id=\"dialogOptions\")\n    ```", "```java\n    <control id=\"console\" name=\"nifty-console\" lines=\"10\" width=\"100%\" valign=\"bottom\" backgroundColor=\"#6874\" visible=\"true\">\n    ```", "```java\n    <effect>\n      <onShow name=\"move\" mode=\"fromOffset\" offsetY=\"100\" length=\"300\" inherit=\"true\"/>\n      <onHide name=\"move\" mode=\"toOffset\" offsetY=\"100\" length=\"200\" inherit=\"true\"/>\n    </effect>\n    ```", "```java\n    <layer id=\"consoleLayer\" childLayout=\"center\" backgroundColor=\"#0000\">\n      <control name=\"consoleControl\"/>\n    </layer>\n    ```", "```java\n    nifty.getScreen(\"main\").findNiftyControl(\"console\", Console.class);\n    ```", "```java\n    public void onConsoleCommand(final String id, final ConsoleExecuteCommandEvent command)\n    ```", "```java\n    <onShow name=\"move\" mode=\"fromOffset\" offsetX=\"1500\" length=\"100\" inherit=\"true\"/>\n    <onHide name=\"fade\" start=\"#ff\" end=\"#00\" length=\"100\" inherit=\"true\"/>\n    ```", "```java\n    messageBuilder = new ControlBuilder(\"gameMessage\") {{\n      id(\"message\"+messageIndex);\n      interactOnClick(\"removeMessage(\"+messageIndex+\")\");\n    }};\n    ```", "```java\nset(\"title\", \"Window\"+windowIndex);\n```", "```java\n    <control name=\"droppable\" backgroundColor=\"#fff5\" width=\"64px\" height=\"64px\" margin=\"1px\" childLayout=\"center\"/>\n    ```", "```java\n    <control name=\"draggable\" backgroundColor=\"#aaaf\" width=\"64px\" height=\"64px\" childLayout=\"center\" valign=\"top\">\n      <text id=\"#itemLabel\" text=\"\" color=\"#000f\" valign=\"center\" width=\"100%\" style=\"nifty-label\"/>\n    </control>\n    ```", "```java\n    <screen id=\"inventoryScreen\" controller=\"gui.controller.InventoryScreenController\">\n    ```", "```java\n    <layer id=\"layer0\" childLayout=\"center\" backgroundColor=\"#0000\">\n    ```", "```java\n    <panel id=\"inventoryPanel\" childLayout=\"horizontal\">\n    ```", "```java\n    <panel id=\"inventorySlots\" childLayout=\"horizontal\"/>\n    ```", "```java\n    <panel id=\"characterPanel\" childLayout=\"vertical\">\n    ```", "```java\n    <panel id=\"character\" backgroundColor=\"#000f\" childLayout=\"center\" align=\"center\" valign=\"top\">\n      <control name=\"itemSlot\" id=\"Head\"/>\n    </panel>\n    ```", "```java\n    <panel id=\"hands\" backgroundColor=\"#000f\" childLayout=\"horizontal\" width=\"25%\" align=\"center\" valign=\"bottom\">\n      <control name=\"itemSlot\" id=\"HandLeft\" align=\"left\" />\n      <panel width=\"*\" height=\"1px\"/>\n      <control name=\"itemSlot\" id=\"HandRight\" align=\"right\" />\n    </panel>\n    ```", "```java\n    <panel id=\"legs\" backgroundColor=\"#000f\" childLayout=\"horizontal\" align=\"center\" valign=\"bottom\">\n      <control name=\"itemSlot\" id=\"Foot\"/>\n    </panel>\n    ```", "```java\n    screen.findNiftyControl(\"HandLeft\", Droppable.class).addFilter(this);\n    ```", "```java\n    panelBuilder = new PanelBuilder(\"\") {{\n      id(\"inventoryColumn\"+posX);\n      childLayoutVertical();\n    }};\n    panelBuilder.build(nifty, screen, screen.findElementByName(\"inventorySlots\"));\n    ```", "```java\n    slotBuilder = new ControlBuilder(\"itemSlot\") {{\n      id(\"itemSlot\"+index);\n    }};\n    Element e = slotBuilder.build(nifty, screen, screen.findElementByName(\"inventoryColumn\"+posY));\n    ```", "```java\n    e.findNiftyControl(\"itemSlot\"+index, Droppable.class).addFilter(this);\n    ```", "```java\n    InventoryItem item = itemMap.get(drgbl.getId());\n    if(drpbl1.getId().startsWith(item.getType().name()) || drpbl1.getId().startsWith(\"itemSlot\")){\n      return true;\n    ```", "```java\n    itemBuilder = new ControlBuilder(\"item\") {{\n      id(\"item\"+index);\n      visibleToMouse(true);\n    }};\n    Element e = itemBuilder.build(nifty, screen, screen.findElementByName(\"itemSlot\"+index)); e.findElementByName(\"#itemLabel\").getRenderer(TextRenderer.class).setText(item.getName());\n    ```", "```java\n    <panel childLayout=\"horizontal\" width=\"80%\" height=\"25px\" backgroundColor=\"#666f\" marginLeft=\"10px\" marginRight=\"10px\" marginTop=\"4px\" align=\"center\" >\n    ```", "```java\n    <control name=\"label\" id=\"#command\" width=\"150px\" text=\"\"/>\n    ```", "```java\n    <control name=\"button\" id=\"#key\" width=\"100px\" valign=\"center\"/>\n    ```", "```java\n    <control name=\"keyBindingControl\" id=\"forwardKey\"/>\n    ```", "```java\n    forwardMapping = screen.findElementByName(\"forwardKey\");\n    forwardMapping.findNiftyControl(\"#command\", Label.class).setText(\"MoveForward\");\n    forwardMapping.findNiftyControl(\"#key\", Button.class).setText(Keyboard.getKeyName(KeyInput.KEY_W));\n    ```", "```java\n    selectedElement.findNiftyControl(\"#key\", Button.class).setText(Keyboard.getKeyName(evt.getKeyCode()));\n    ```", "```java\n    @NiftyEventSubscriber(pattern=\".*Key#key\")\n    ```", "```java\n    public static void createMiniMap(final SimpleApplication app, final Spatial scene, int width, int height)\n    ```", "```java\n    offScreenCamera.setParallelProjection(true);\n    offScreenCamera.setFrustum(1, 1000, -width, width, height, -height);\n    ```", "```java\n    offScreenCamera.setLocation(new Vector3f(0, 100f, 0));\n    offScreenCamera.setRotation(new Quaternion().fromAngles(new float[]{FastMath.HALF_PI,FastMath.PI,0}));\n    ```", "```java\n    final ViewPort offScreenView = app.getRenderManager().createPreView(scene.getName() + \"_View\", offScreenCamera);\n    offScreenView.setClearFlags(true, true, true);\n    offScreenView.setBackgroundColor(ColorRGBA.DarkGray.mult(ColorRGBA.Blue).mult(0.3f));\n    ```", "```java\n    final Texture2D offScreenTexture = new Texture2D(width, height, Image.Format.RGB8);\n    offScreenTexture.setMinFilter(Texture.MinFilter.Trilinear);\n    ```", "```java\n    FrameBuffer offScreenBuffer = new FrameBuffer(width, height, 1);\n    ```", "```java\n    offScreenBuffer.setDepthBuffer(Image.Format.Depth);\n    offScreenBuffer.setColorTexture(offScreenTexture);\n    ```", "```java\n    offScreenView.setOutputFrameBuffer(offScreenBuffer);\n    ```", "```java\n    offScreenView.attachScene(scene);\n    ```", "```java\n    ((DesktopAssetManager)app.getAssetManager()).addToCache( new TextureKey(scene.getName()+\"_mini.png\", true), offScreenTexture);\n    ```", "```java\n    app.getRenderManager().renderViewPort(offScreenView, 0);\n    ```", "```java\n    app.getRenderManager().removePreView(offScreenView);\n    ```", "```java\n    screen.findElementByName(\"minimap\").getRenderer(ImageRenderer.class).setImage(image);\n    ```"]