["```java\nkaraf@root()> feature:install http\n\n```", "```java\n78 | Active   |  30 | 2.2.0           | Apache ServiceMix :: Specs :: Activation API 1.4\n79 | Active   |  30 | 1.0            | Servlet 3.0\n80 | Active   |  30 | 1.4.4          | JavaMail API (compat)\n81 | Active   |  30 | 1.1.1          | geronimo-jta_1.1_spec\n82 | Active   |  30 | 1.0.1          | Annotation 1.1\n83 | Active   |  30 | 1.1            | Java Authentication SPI for Containers\n84 | Active   |  30 | 8.1.14         | Jetty :: Aggregate :: All Server\n85 | Active   |  30 | 1.6.0          | OPS4J Pax Swissbox :: OSGi Core\n86 | Active   |  30 | 1.6.0          | OPS4J Pax Swissbox :: Optional JCL\n87 | Active   |  20 | 3.16.0         | Apache XBean OSGI Bundle Utilities\n88 | Active   |  20 | 3.16.0         | Apache XBean :: ASM 4 shaded (repackaged)\n89 | Active   |  20 | 3.16           | Apache XBean :: Reflect\n90 | Active   |  20 | 3.16.0         | Apache XBean :: Finder shaded (repackaged)\n91 | Active   |  30 | 3.1.0          | OPS4J Pax Web - API\n92 | Active   |  30 | 3.1.0          | OPS4J Pax Web - Service SPI\n93 | Active   |  30 | 3.1.0          | OPS4J Pax Web - Runtime\n94 | Active   |  30 | 3.1.0          | OPS4J Pax Web - Jetty\n95 | Active   |  30 | 3.0.1          | Apache Karaf :: HTTP :: Core\n96 | Active   |  30 | 3.0.1          | Apache Karaf :: HTTP :: Commands\n\n```", "```java\nkaraf@root()> http:list\nID | Servlet | Servlet-Name | State | Alias | Url\n-------------------------------------------------\n\n```", "```java\n    karaf@root()> feature:install http-whiteboard\n\n    ```", "```java\n    karaf@root()> feature:install war\n\n    ```", "```java\n97 | Active   |  30 | 3.1.0       | OPS4J Pax Web - Jsp Support\n98 | Active   |  30 | 3.1.0       | OPS4J Pax Web - Extender - Whiteboard\n\n```", "```java\n99  | Active   |  30 | 3.1.0       | OPS4J Pax Web - Extender - WAR\n100 | Active   |  30 | 3.1.0       | OPS4J Pax Web - FileInstall Deployer\n101 | Active   |  30 | 1.4.2       | OPS4J Pax Url - war\n102 | Active   |  30 | 1.4.2       | OPS4J Pax Url - Commons\n103 | Active   |  30 | 1.6.0       | OPS4J Pax Swissbox :: Bnd Utils\n104 | Active   |  30 | 1.6.0       | OPS4J Pax Swissbox :: Property\n105 | Active   |  30 | 1.43.0      | aQute Bundle Tool Library\n106 | Active   |  30 | 3.0.1       | Apache Karaf :: Web :: Core\n107 | Active   |  30 | 3.0.1       | Apache Karaf :: Web :: Commands\n\n```", "```java\nkaraf@root()> web:list\nID | State | Web-State | Level | Web-ContextPath | Name\n-------------------------------------------------------\n\n```", "```java\nkaraf@root()> web:\nweb:list     web:start    web:stop\n\n```", "```java\njavax.servlet.context.tempdir = ${karaf.data}/pax-web-jsp\norg.ops4j.pax.web.config.file = ${karaf.home}/etc/jetty.xml\norg.osgi.service.http.port = 8181\n```", "```java\norg.osgi.service.http.enabled = true\norg.osgi.service.http.port = 8181\norg.osgi.service.http.connector.name = default\norg.osgi.service.http.useNIO = true\norg.osgi.service.http.secure.enabled = true\norg.osgi.service.http.port.secure = 8443\norg.osgi.service.http.secure.connector.name = secureDefault\njavax.servlet.context.tempdir = ${karaf.data}/pax-web-jsp\norg.ops4j.pax.web.config.file=${karaf.base}/etc/jetty.xml\n…\n```", "```java\norg.ops4j.pax.web.jsp.scratch.dir = \norg.ops4j.pax.web.jsp.check.interval = 300\n…\norg.ops4j.pax.web.jsp.precompilation = false\n…\n```", "```java\norg.ops4j.pax.web.log.ncsa.enabled = false\norg.ops4j.pax.web.log.ncsa.format = yyyy_mm_dd.request.log\norg.ops4j.pax.web.log.ncsa.retaindays = 90\norg.ops4j.pax.web.log.ncsa.append = true\norg.ops4j.pax.web.log.ncsa.extended = true\norg.ops4j.pax.web.log.ncsa.dispatch = false\norg.ops4j.pax.web.log.ncsa.logtimezone = GMT\norg.ops4j.pax.web.log.ncsa.directory = \norg.ops4j.pax.web.log.ncsa.latency = false\norg.ops4j.pax.web.log.ncsa.cookies = false\norg.ops4j.pax.web.log.ncsa.server = false\n```", "```java\norg.ops4j.pax.web.default.virtualhosts = \norg.ops4j.pax.web.default.connectors = \n```", "```java\nkaraf@root()> config:edit org.ops4j.pax.web\nkaraf@root()> config:property-set org.osgi.service.http.port 8080\nkaraf@root()> config:update\n\n```", "```java\norg.ops4j.pax.web.log.ncsa.directory = ${karaf.data}/ncsa-log/\n```", "```java\norg.ops4j.pax.web.jsp.scratch.dir = ${karaf.data}/jsp-compile\n```", "```java\ninstall -s mvn:com.packt/chapter4-recipe3/1.0.0-SNAPSHOT/jar\n\n```", "```java\n    public void start(BundleContext bc) throws Exception {\n      bundleContext = bc;\n      tracker = new ServiceTracker<HttpService, HttpService>(bc, HttpService.class, this);\n      tracker.open();\n    }\n    ```", "```java\n    HttpContext httpContext = httpService.createDefaultHttpContext();\n    Dictionary<String, Object> initParams = new Hashtable<String, Object>();\n    ```", "```java\n    httpService.registerServlet(\"/hello\",\n    new HelloServlet(), initParams, httpContext);\n    ```", "```java\nhttpService.registerResources(\"/images\", \"/images\", httpContext);\n```", "```java\nhttpService.registerServlet(\"/hello/logo\", new HelloImage(), initParams, httpContext);\n```", "```java\nout.println(\"<img src='/images/karaf-logo.png' border='0'/>\");\n```", "```java\n    Hashtable<String, String> props = new Hashtable<String, String>();\n    props.put(\"alias\", \"/whiteboard\");\n    ```", "```java\n    servletReg = bundleContext.registerService(Servlet.class, new HelloServlet(), props);\n    ```", "```java\n    DefaultResourceMapping resourceMapping = new DefaultResourceMapping();\n    resourceMapping.setAlias(\"/whiteboardresources\");\n    resourceMapping.setPath(\"/images\");\n    resourcesReg = bundleContext.registerService(ResourceMapping.class, resourceMapping, null);\n    ```", "```java\n    out.println(\"<img src='/whiteboardresources/karaf-logo.png' border='0'/>\");\n    ```", "```java\n    <service id=\"filteredServletService\" ref=\"filteredServlet\" interface=\"javax.servlet.Servlet\">\n      <service-properties>\n        <entry key=\"alias\" value=\"/filtered\"/>\n      </service-properties>\n      <bean class=\"com.packt.HelloServlet\"/>\n    </service>\n    ```", "```java\n    <service id=\"servletFilterService\" interface=\"javax.servlet.Filter\">\n      <service-properties>\n        <entry key=\"urlPatterns\" value=\"/filtered/*\"/>\n      </service-properties>\n      <bean class=\"com.packt.ServletFilter\"/>\n    </service>\n    ```", "```java\n<service interface=\" org.ops4j.pax.web.extender.whiteboard.ErrorPageMapping\">\n  <bean class=\" org.ops4j.pax.web.extender.whiteboard.runtime.DefaultErrorPageMapping\">\n    <property name=\"error\" value=\"java.lang.Exception\"/>\n    <property name=\"location\" value=\"/uncaughtException.html\"/>\n  </bean>\n</service>\n```", "```java\n<!-- 404 mapping -->\n<service id=\"errorPageMapping\" interface=\"org.ops4j.pax.web.extender.whiteboard.ErrorPageMapping\">\n  <bean class=\"org.ops4j.pax.web.extender.whiteboard.runtime.DefaultErrorPageMapping\">\n    <property name=\"error\" value=\"404\"/>\n    <property name=\"location\" value=\"/404.html\"/>\n  </bean>\n</service>\n```", "```java\n<service id=\"welcomeFileService\" interface=\"org.ops4j.pax.web.extender.whiteboard.WelcomeFileMapping\">\n  <bean class=\"org.ops4j.pax.web.extender.whiteboard.runtime.DefaultWelcomeFileMapping\">\n    <property name=\"redirect\" value=\"true\" />\n    <property name=\"welcomeFiles\">\n      <array>\n        <value>index.html</value>\n        <value>welcome.html</value>\n      </array>\n    </property>\n  </bean>\n</service>\n```", "```java\n<service id=\"jspMapping\" interface=\"org.ops4j.pax.web.extender.whiteboard.JspMapping\">\n  <bean class=\"org.ops4j.pax.web.extender.whiteboard.runtime.DefaultJspMapping\">\n    <property name=\"urlPatterns\">\n      <array>\n        <value type=\"java.lang.String\">/jsp</value>\n      </array>\n    </property>\n  </bean>\n</service>\n```", "```java\n    props = new Hashtable<String, String>();\n    props.put(ExtenderConstants.PROPERTY_HTTP_CONTEXT_ID, \"forbidden\");\n    ```", "```java\n    httpContextReg = bundleContext.registerService(HttpContext.class, new WhiteboardContext(), props);\n    ```", "```java\n    props = new Hashtable<String, String>();\n    props.put(ExtenderConstants.PROPERTY_ALIAS, \"/forbidden\");\n    props.put(ExtenderConstants.PROPERTY_HTTP_CONTEXT_ID, \"forbidden\");\n    forbiddenServletReg = bundleContext.registerService(Servlet.class, new HelloServlet(), props);\n    ```", "```java\n    public boolean handleSecurity(final HttpServletRequest request,final HttpServletResponse response) throws IOException {\n      // Forbidden access!\n      return false;\n    }\n    ```", "```java\n    WebContainer service = (WebContainer) context.getService(serviceReference);\n    HttpContext httpContext = service.getDefaultSharedHttpContext();\n    ```", "```java\n    props = new Hashtable<String, String>();\n    props.put(ExtenderConstants.PROPERTY_HTTP_CONTEXT_ID, \"shared\");\n    httpContextReg = context.registerService(HttpContext.class,httpContext, props);\n    ```", "```java\n    props = new Hashtable<String, String>();\n    props.put( ExtenderConstants.PROPERTY_ALIAS, \"/extfilter\" );\n    props.put(\"servlet-name\", \"FilteredServlet\");\n    props.put(ExtenderConstants.PROPERTY_HTTP_CONTEXT_ID, \"shared\");\n    registerService = context.registerService( Servlet.class, new HelloServlet(), props );\n    ```", "```java\n    Collection<ServiceReference<HttpContext>> serviceReferences = context.getServiceReferences(HttpContext.class, \"(httpContext.id=shared)\");\n\n    if (serviceReferences.size() > 1) {\n      throw new RuntimeException(\"should only be one http shared context\");\n    }\n\n    HttpContext httpContext = context.getService(serviceReferences.iterator().next());\n    ```", "```java\n    Dictionary<String, String> props;\n    props = new Hashtable<String, String>();\n    props.put(\"pattern\", \".*\");\n    props.put(ExtenderConstants.PROPERTY_HTTP_CONTEXT_ID, \"shared\");\n\n    service.registerFilter(new ServletFilter(), new String[] { \"/*\" }, null, props, httpContext);\n    ```", "```java\n<plugin>\n  <groupId>org.apache.felix</groupId>\n  <artifactId>maven-bundle-plugin</artifactId>\n  <version>2.4.0</version>\n  <extensions>true</extensions>\n  <configuration>\n    <instructions>\n <_wab>src/main/webapp</_wab>\n <Web-ContextPath>packt-sample</Web-ContextPath>\n    </instructions>\n  </configuration>\n</plugin>\n```", "```java\n…\n<executions>\n  <execution>\n    <id>bundle-manifest</id>\n    <phase>process-classes</phase>\n    <goals>\n <goal>manifest</goal>\n    </goals>\n  </execution>\n</executions>\n<configuration>\n  <supportedProjectTypes>\n    <supportedProjectType>jar</supportedProjectType>\n    <supportedProjectType>bundle</supportedProjectType>\n <supportedProjectType>war</supportedProjectType>\n  </supportedProjectTypes>\n…\n```", "```java\n<configuration>\n  <archive>\n    <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>\n  </archive>\n</configuration>\n```", "```java\n    karaf = karaf,_g_:admingroup\n    _g_\\:admingroup = group,admin,manager,viewer\n    ```", "```java\n    USER=PASSWORD, ROLE1, ROLE2, …\n    ```", "```java\n    USER=PASSWORD, _g_:GROUP, …\n    _g_\\:GROUP=ROLE1,ROLE2, …\n    ```", "```java\n    <Call name=\"addBean\">\n      <Arg>\n     <New class=\"org.eclipse.jetty.plus.jaas.JAASLoginService\">\n          <Set name=\"name\">default</Set>\n          <Set name=\"loginModuleName\">karaf</Set>\n          <Set name=\"roleClassNames\">\n            <Array type=\"java.lang.String\">\n              <Item>org.apache.karaf.jaas.boot.principal.RolePrincipal\n              </Item>\n            </Array>\n          </Set>\n        </New>\n      </Arg>\n    ```", "```java\n    <security-constraint>\n      <web-resource-collection>\n        <web-resource-name>Protected Area</web-resource-name>\n        <description>Protect the Example Servlet</description>\n     <url-pattern>/secured/*</url-pattern>\n        <http-method>GET</http-method>\n        <http-method>POST</http-method>\n      </web-resource-collection>\n      <auth-constraint>\n        <description>Authorized Users Group</description>\n     <role-name>admin</role-name>\n      </auth-constraint>\n    </security-constraint>\n    ```", "```java\n    <login-config>\n      <auth-method>BASIC</auth-method>\n      <realm-name>default</realm-name>\n    </login-config>\n    ```", "```java\norg.osgi.service.http.secure.enabled = true\norg.osgi.service.http.port.secure = 8443\norg.osgi.service.http.secure.connector.name = secureDefault\n\norg.ops4j.pax.web.ssl.keystore = ${karaf.base}/etc/keystore/.keystore\norg.ops4j.pax.web.ssl.password = password\norg.ops4j.pax.web.ssl.keypassword = password\norg.ops4j.pax.web.ssl.clientauthwanted = false\norg.ops4j.pax.web.ssl.clientauthneeded = false\n```", "```java\n    keytool -genkey -keyalg RSA -validity 1024 -alias serverkey -keypass password -storepass password -keystore server.jks\n\n    ```", "```java\n    keytool -import -trustcacerts -keystore server.jks -storepass password -alias clientkey -file client.cer\n\n    ```", "```java\n<Call name=\"addConnector\">\n  <Arg>\n    <New class=\"org.eclipse.jetty.server.nio.SelectChannelConnector\">\n      <Set name=\"host\"><Property name=\"jetty.host\" /></Set>\n <Set name=\"port\"><Property name=\"jetty.port\" default=\"8282\"/></Set>\n      <Set name=\"maxIdleTime\">300000</Set>\n      <Set name=\"Acceptors\">2</Set>\n      <Set name=\"statsOn\">false</Set>\n      <Set name=\"confidentialPort\">8443</Set>\n <Set name=\"name\">alternateConnector</Set>\n      <Set name=\"lowResourcesConnections\">20000</Set>\n      <Set name=\"lowResourcesMaxIdleTime\">5000</Set>\n    </New>\n  </Arg>\n```", "```java\n<plugin>\n  <groupId>org.apache.felix</groupId>\n  <artifactId>maven-bundle-plugin</artifactId>\n  <version>2.4.0</version>\n  <extensions>true</extensions>\n  <configuration>\n    <instructions>\n      <_wab>src/main/webapp</_wab>\n      <Web-ContextPath>packt-sample</Web-ContextPath>\n <Web-Connectors>alternateConnector</Web-Connectors>\n <Web-VirtualHosts>localhost</Web-VirtualHosts>\n    </instructions>\n  </configuration>\n</plugin>\n```", "```java\n//preparing special HTTP Context with HTTP Connector\nHashtable<String, String> props = new Hashtable<String, String>();\nprops.put( ExtenderConstants.PROPERTY_HTTP_CONTEXT_ID, \"httpConnector\" );\nHashMap<String,String> contextMappingParams = new HashMap<String,String>();\ncontextMappingParams.put(ExtenderConstants.PROPERTY_HTTP_VIRTUAL_HOSTS, \"localhost\");\ncontextMappingParams.put(ExtenderConstants.PROPERTY_HTTP_CONNECTORS, \"alternateConnector\");\ncontextMappingReg = bundleContext.registerService( HttpContextMapping.class, new WhiteboardHttpContextMapping(\"httpConnector\", \"whiteboard\", contextMappingParams), props );\n\n```", "```java\nprops.put(ExtenderConstants.PROPERTY_ALIAS, \"/connector\");\nprops.put( ExtenderConstants.PROPERTY_HTTP_CONTEXT_ID, \"httpConnector\" );\nservletReg = bundleContext.registerService(Servlet.class, new HelloServlet(), props);\n```", "```java\n    <web-app  \n        xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n        version=\"3.0\">\n\n        <welcome-file-list>\n          <welcome-file>welcome.html</welcome-file>\n        </welcome-file-list>\n\n    </web-app>\n    ```", "```java\n    @WebServlet (value=\"/test\", name=\"test\")\n    public class HelloServlet extends HttpServlet {\n    ```", "```java\n    @WebFilter(urlPatterns={\"/*\"}, servletNames = {\"test\"})\n    public class ServletFilter implements Filter {\n    ```", "```java\n<Web-ContextPath>packt-sample</Web-ContextPath>\n```", "```java\n@WebServlet (value=\"/test\", name=\"test\")\npublic class HelloServlet extends HttpServlet {\n```", "```java\nfeature:install war\nfeature:install pax-cdi-web-openwebbeans\n\n```", "```java\nfeature:install pax-cdi-web-weld\n\n```", "```java\n@WebServlet(urlPatterns = \"/sample\")\npublic class OsgiServiceServlet  extends HttpServlet {\n```", "```java\n@Inject\n@OsgiService (dynamic = true)\nprivate MessageService messageService;\n```", "```java\n<instructions>\n  <_wab>src/main/webapp/</_wab>\n  <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n  <Bundle-Version>${project.version}</Bundle-Version>\n  <Web-ContextPath>cdi-sample</Web-ContextPath>\n  <Pax-ManagedBeans>WEB-INF/beans.xml</Pax-ManagedBeans>\n <Require-Capability>\n org.ops4j.pax.cdi.extension;\n </Require-Capability>\n</instructions>\n```", "```java\n<Require-Capability>\n  org.ops4j.pax.cdi.extension;\n  filter:=\"(&amp;(extension=pax-cdi-extension)(version&gt;=${version;==;${pax.cdi.osgi.version.clean}})(!(version&gt;=${version;=+;${pax.cdi.osgi.version.clean}})))\",osgi.extender; filter:=\"(osgi.extender=pax.cdi)\"\n</Require-Capability>\n```"]