["```java\n# Each step creates a read-only layer of the image.\n# For Java 8\nFROM openjdk:8-jdk-alpine\n# cd /opt/app\nWORKDIR /opt/app\n# cp target/DockerExample-1.0-SNAPSHOT.jar /opt/app/app.jar\nCOPY target/DockerExample-1.0-SNAPSHOT.jar app.jar\n# exposing the port on which application runs\nEXPOSE 8080\n# java -jar /opt/app/app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n```", "```java\n    > mvn clean install\n    ```", "```java\n    > docker build --tag=hello-docker:latest .\n    ```", "```java\n    > minikube start\n    ```", "```java\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: hello-docker-service\n    spec:\n      selector:\n        app: hello-docker-app\n      ports:\n        - protocol: \"TCP\"\n          port: 8080\n          targetPort: 8080\n          nodePort: 30036\n      type: LoadBalancer\n    ---\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      name: hello-docker-app\n    spec:\n      selector:\n        matchLabels:\n          app: hello-docker-app\n      replicas: 5\n      template:\n        metadata:\n          labels:\n            app: hello-docker-app\n    spec:\n          containers:\n            - name: hello-docker-app\n              image: hello-docker-app\n              imagePullPolicy: Never\n              ports:\n                - containerPort: 8080\n    ```", "```java\n    > eval $(minikube docker-env)\n    > docker build --tag hello-docker-app:latest .\n    ```", "```java\n    > kubectl apply -f deployment.yaml\n    ```", "```java\n    > minikube dashboard\n    ```", "```java\n    > minikube start service: hello-docker-service\n    ```", "```java\n> minikube service --url hello-docker-service\n```"]