["```java\nmvn archetype:generate \\\n-DarchetypeGroupId=org.codehaus.mojo.archetypes \\\n-DarchetypeArtifactId=pom-root \\\n-DarchetypeVersion=RELEASE\n```", "```java\n<project  xsi:schemaLocation=\"â€¦\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>packt.vaadin.datacentric</groupId>\n    <artifactId>chapter-02</artifactId>\n    <version>1.0-SNAPSHOT</version>\n```", "```java\n    <packaging>pom</packaging>\n\n    <properties>\n        <vaadin.version>8.3.2</vaadin.version>\n    </properties>\n</project>\n```", "```java\ncd chapter-02\nmvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-quickstart\n```", "```java\n<project ...>\n    ...\n    <modules>\n        <module>api</module>\n    </modules>\n</project>\n```", "```java\npublic interface ApplicationLayout extends Component {\n\n void addHeaderComponent(Component component);\n\n void addWorkingAreaComponent(WorkingAreaComponent\n         component);\n\n Collection<Component> getHeaderComponents();\n\n Collection< WorkingAreaComponent> getWorkingAreaComponents();\n\n void addMenuOption(MenuOption menuOption,\n         SerializableConsumer<MenuOption> clickListener);\n\n}\n```", "```java\npublic interface ApplicationLayout extends Component {\n\n    public static class WorkingAreaComponent\n            implements Serializable {\n\n        private final String caption;\n        private final Component component;\n\n        public WorkingAreaComponent(String caption,\n                Component component) {\n            this.caption = caption;\n            this.component = component;\n        }\n\n       ... hashCode(), equals(), and getters \n    }\n    ...\n}\n```", "```java\nvoid addWorkingAreaComponent(String caption, Component component);\n```", "```java\nvoid addWorkingAreaComponent(String caption, Component component,\n        Resource icon);\n```", "```java\npublic interface ApplicationLayout extends Component {\n\n    public static class MenuOption implements Serializable {\n        private final String caption;\n\n        public MenuOption(String caption) {\n            this.caption = caption;\n        }\n\n        public String getCaption() {\n            return caption;\n        }\n    }\n}\n```", "```java\npublic class TabBasedApplicationLayout extends Composite {\n\n    private VerticalLayout mainLayout = new VerticalLayout();\n    private HorizontalLayout header = new HorizontalLayout();\n    private HorizontalSplitPanel splitPanel\n            = new HorizontalSplitPanel();\n    private VerticalLayout menuLayout = new VerticalLayout();\n    private TabSheet tabSheet = new TabSheet();\n\n    public TabBasedApplicationLayout(String caption) {\n        ... layout and components configuration\n    }\n}\n```", "```java\n@Override\npublic void addHeaderComponent(Component component) {\n    component.setWidth(null);\n    header.addComponent(component);\n    header.setComponentAlignment(component,\n            Alignment.MIDDLE_RIGHT);\n}\n```", "```java\npublic class TabBasedApplicationLayout extends CustomComponent\n        implements ApplicationLayout {\n    ...\n\n    private Collection<WorkingAreaComponent> workingAreaComponents\n            = new HashSet<>();\n\n    @Override\n    public void addWorkingAreaComponent(WorkingAreaComponent\n            component) {\n        addWorkingAreaComponent(component, true);\n    }\n\n    public void addWorkingAreaComponent(WorkingAreaComponent\n            component, boolean closable) {\n        if (!workingAreaComponents.contains(component)) {\n            TabSheet.Tab tab = tabSheet.addTab(\n                    component.getComponent(),\n                            component.getCaption());\n            tab.setClosable(closable);\n            tabSheet.setSelectedTab(tab);\n            workingAreaComponents.add(component);\n        } else {\n            showComponent(component.getCaption());\n        }\n    }\n\n    public void showComponent(String caption) {\n        IntStream.range(0, tabSheet.getComponentCount())\n                .mapToObj(tabSheet::getTab)\n                .filter(tab -> tab.getCaption().equals(caption))\n                .forEach(tabSheet::setSelectedTab);\n    }\n}\n```", "```java\npublic void showComponent(String caption) {\n   for(int i = 0; i < tabSheet.getComponentCount(); i++) {\n       TabSheet.Tab tab = tabSheet.getTab(i);\n\n       if(tab.getCaption().equals(caption)) {\n           tabSheet.setSelectedTab(tab);\n       }\n   }\n}\n```", "```java\n@Override\npublic Collection<Component> getHeaderComponents() {\n    return IntStream.range(0, header.getComponentCount())\n            .mapToObj(header::getComponent)\n            .collect(Collectors.toList());\n}\n```", "```java\n@Override\npublic Collection<WorkingAreaComponent> getWorkingAreaComponents() {\n    return workingAreaComponents;\n}\n```", "```java\npublic class TabBasedApplicationLayout ... {\n    ...\n    private Collection<String> menuButtonStyles = new HashSet<>();\n    ...\n\n    @Override\n    public void addMenuOption(MenuOption menuOption,\n            SerializableConsumer<MenuOption> clickListener) {\n        Button button = new Button(menuOption.getCaption(),\n                event -> clickListener.accept(menuOption));\n        menuButtonStyles.forEach(button::addStyleName);\n        menuLayout.addComponent(button);\n    }\n    ...\n}\n```", "```java\npublic void setHeaderStyleName(String styleName) {\n    header.setStyleName(styleName);\n}\n\npublic void addHeaderStyleName(String styleName) {\n    header.addStyleName(styleName);\n}\n\npublic void setMenuButtonsStyleName(String styleName) {\n    menuButtonStyles.clear();\n    menuButtonStyles.add(styleName);\n    updateMenuButtonsStyle(styleName,\n            Component::setStyleName);\n}\n\npublic void addMenuButtonsStyleName(String styleName) {\n    menuButtonStyles.add(styleName);\n    updateMenuButtonsStyle(styleName,\n            Component::addStyleName);\n}\n\nprivate void updateMenuButtonsStyle(String styleName,\n        BiConsumer<Component, String> setOrAddStyleMethod) {\n    IntStream.range(0, menuLayout.getComponentCount())\n            .mapToObj(menuLayout::getComponent)\n            .forEach(component ->\n                    setOrAddStyleMethod.accept(\n                            component, styleName));\n}\n```", "```java\nprotected void init(VaadinRequest request) {\n    TabBasedApplicationLayout layout =\n            new TabBasedApplicationLayout(\"Caption\");\n    IntStream.range(1, 4)\n            .mapToObj(i -> new Label(\"Component \" + i))\n            .map(l -> new ApplicationLayout.WorkingAreaComponent(\n                    l.getValue(), l))\n            .forEach(c -> layout.addMenuOption(\n                    new ApplicationLayout.MenuOption(\n                            c.getCaption()),\n                    (option) ->\n                            layout.addWorkingAreaComponent(\n                                    c, true)));\n    layout.setMenuButtonsStyleName(ValoTheme.BUTTON_LINK);\n    setContent(layout);\n}\n```", "```java\n<dependency>\n    <groupId>packt.vaadin.datacentric.chapter02</groupId>\n    <artifactId>api</artifactId>\n    <version>1.0-SNAPSHOT</version>\n</dependency>\n```", "```java\npublic interface MenuItemRegistration {\n    void addMenuItem(MenuBar menu);\n}\n```", "```java\npublic interface AppModule {\n    void register(ApplicationLayout layout);\n}\n```", "```java\npublic class VaadinUI extends UI {\n\n    protected void init(VaadinRequest vaadinRequest) {\n        TabBasedApplicationLayout layout\n              = new TabBasedApplicationLayout(\"Caption\");\n        setContent(layout);\n        loadModules(layout);\n    }\n\n    private void loadModules(\n            ApplicationLayout applicationLayout) {\n        ServiceLoader<AppModule> moduleLoader =\n                ServiceLoader.load(AppModule.class);\n        moduleLoader.forEach(\n                module -> module.register(applicationLayout));\n    }\n}\n```", "```java\npackage com.example;\n...\n\npublic class ExampleModule implements AppModule {\n\n    @Override\n    public void register(ApplicationLayout layout) {\n        ApplicationLayout.MenuOption menuOption\n            = new ApplicationLayout.MenuOption(\"Example module\");\n        layout.addMenuOption(menuOption, this::optionClicked);\n    }\n\n    private void optionClicked(\n                ApplicationLayout.MenuOption menuOption) {\n        Notification.show(\"It works!\",\n                Notification.Type.TRAY_NOTIFICATION);\n    }\n}\n```", "```java\npackt.vaadin.datacentric.chapter02.example.module.ExampleModule\n```"]