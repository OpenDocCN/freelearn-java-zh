["```java\n    <dependency>\n      <groupId>org.openjdk.jmh</groupId>\n      <artifactId>jmh-core</artifactId>\n      <version>0.1</version>\n    </dependency>\n```", "```java\n    package com.packt.benchmark.test.com.packt.benchmark.test;\n\n    import org.open.jdk.jmh.Main;\n\n    public class Test \n    {\n\n      public static void main(String[] args)\n      {\n        Main.main(args);\n      }\n    }\n```", "```java\nmvn archetype:generate -DinteractiveMode=false -DarchetypeGroupId=org.openjdk.jmh -DarchetypeArtifactId=jmh -java-benchmark-archetype -DgroupId=com.packt -DartifactId=chapter8-benchmark -Dversion=1.0\n```", "```java\n    /*\n     * Copyright (c) 2014, Oracle America, Inc.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or \n       without\n     * modification, are permitted provided that the following \n       conditions are met:\n     *\n     * * Redistributions of source code must retain the above\n         copyright notice,\n     * this list of conditions and the following disclaimer.\n     *\n     * * Redistributions in binary form must reproduce the above \n         copyright\n     * notice, this list of conditions and the following\n       disclaimer in the\n     * documentation and/or other materials provided with the \n       distribution.\n     *\n     * * Neither the name of Oracle nor the names of its \n         contributors may be used\n     * to endorse or promote products derived from this software \n       without\n     * specific prior written permission.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND \n       CONTRIBUTORS \"AS IS\"\n     * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \n       LIMITED TO, THE\n     * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n       PARTICULAR PURPOSE\n     * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR \n       CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n       EXEMPLARY, \n       OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, \n       PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n       OR BUSINESS\n     * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, \n       WHETHER IN\n     * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR \n       OTHERWISE)\n     * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF \n       ADVISED OF\n     * THE POSSIBILITY OF SUCH DAMAGE.\n     */\n\n    package com.packt;\n\n    import org.openjdk.jmh.annotations.Benchmark;\n\n    public class MyBenchmark \n    {\n      @Benchmark\n      public void testMethod() \n      {\n\n        // This is a demo/sample template for building your JMH \n           benchmarks. \n        //Edit as needed.\n        // Put your benchmark code here.\n      }\n    }\n```", "```java\n    @Benchmark\n    public void testMethod() \n    {\n      int total = 0;\n      for (int i=0; i<100000; i++)\n      {\n        total = total + (i * 2 );\n      }\n      System.out.println(\"Total: \" + total);\n    }\n```", "```java\n    @Benchmark @BenchmarkMode(Mode.All)\n    @Benchmark @BenchmarkMode(Mode.Average)\n    @Benchmark @BenchmarkMode(Mode.SamplmeTime)\n    @Benchmark @BenchmarkMode(Mode.SingleShotTime)\n    @Benchmark @BenchmarkMode(Mode.Throughput)\n```", "```java\n    @Benchmark @BenchmarkMode(Mode.Average) \n    @OutputTimeUnit(TimeUnit.NANOSECONDS)\n```", "```java\n    . . . \n\n    int value = 10;\n\n    if (value != null)\n    {\n      System.out.println(\"The value is \" + value + \".\");\n    } else \n      {\n         System.out.println(\"The value is null.\"); // This is\n         a line of Dead-Code\n    }\n\n    . . . \n```", "```java\n    . . . \n\n    static final int value = 10;\n\n    int newValue = 319 * value;\n\n    . . . \n```", "```java\n    int newValue = 3190;\n```"]