["```java\npackage net.ensode.javaee8book.simpleapp; \n\nimport java.io.IOException; \nimport java.io.PrintWriter; \n\nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@WebServlet(urlPatterns = {\"/simpleservlet\"}) \npublic class SimpleServlet extends HttpServlet { \n\n    @Override \n    protected void doGet(HttpServletRequest req,    \n     HttpServletResponse res) { \n        try { \n            res.setContentType(\"text/html\"); \n            PrintWriter printWriter = res.getWriter(); \n            printWriter.println(\"<h2>\"); \n            printWriter \n                    .println(\"Hello servlet world!\"); \n            printWriter.println(\"</h2>\"); \n        } catch (IOException ioException) { \n            ioException.printStackTrace(); \n        } \n    } \n} \n```", "```java\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"> \n<html> \n    <head> \n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> \n        <title>Data Entry Page</title> \n    </head> \n    <body> \n <form method=\"post\" action=\"formhandlerservlet\"> \n            <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\"> \n                <tr> \n                    <td>Please enter some text:</td> \n                    <td>\n                     <input type=\"text\" name=\"enteredValue\" />\n                    </td>\n                </tr> \n                <tr> \n                    <td></td> \n <td><input type=\"submit\" value=\"Submit\"></td> \n                </tr> \n            </table> \n        </form> \n    </body> \n</html> \n```", "```java\npackage net.ensode.javaee8book.formhandling; \n\nimport java.io.IOException; \nimport java.io.PrintWriter; \nimport javax.servlet.annotation.WebServlet; \n\nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@WebServlet(urlPatterns = {\"/formhandlerservlet\"}) \npublic class FormHandlerServlet extends HttpServlet { \n\n    @Override \n    protected void doPost(HttpServletRequest request,   \n     HttpServletResponse response) { \n        String enteredValue; \n\n enteredValue = request.getParameter(\"enteredValue\"); \n\n        response.setContentType(\"text/html\"); \n\n        PrintWriter printWriter; \n        try { \n            printWriter = response.getWriter(); \n\n            printWriter.println(\"<p>\"); \n            printWriter.print(\"You entered: \"); \n printWriter.print(enteredValue); \n            printWriter.print(\"</p>\"); \n        } catch (IOException e) { \n            e.printStackTrace(); \n        } \n    } \n} \n```", "```java\n    <input type=\"text\" name=\"enteredValue\" />\n```", "```java\n    enteredValue = request.getParameter(\"enteredValue\");\n```", "```java\n<form method=\"post\" action=\"multiplevaluefieldhandlerservlet\"> \n<p>Please enter one or more options.</p> \n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\"> \n  <tr> \n <td><input name=\"options\" type=\"checkbox\" value=\"option1\" /> \n    Option 1</td> \n  </tr> \n  <tr> \n <td><input name=\"options\" type=\"checkbox\" value=\"option2\" /> \n    Option 2</td> \n  </tr> \n  <tr> \n <td><input name=\"options\" type=\"checkbox\" value=\"option3\" /> \n    Option 3</td> \n  </tr> \n  <tr> \n    <td><input type=\"submit\" value=\"Submit\" /></td> \n  </tr> \n</table> \n</form> \n```", "```java\npackage net.ensode.javaee8book.multiplevaluefields; \n\nimport java.io.IOException; \nimport java.io.PrintWriter; \nimport javax.servlet.annotation.WebServlet; \n\nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@WebServlet(urlPatterns = {\"/multiplevaluefieldhandlerservlet\"}) \npublic class MultipleValueFieldHandlerServlet extends HttpServlet { \n\n    @Override \n    protected void doPost(HttpServletRequest request, \n        HttpServletResponse response) { \n String[] selectedOptions =  \n        request.getParameterValues(\"options\"); \n\n        response.setContentType(\"text/html\"); \n\n        try { \n            PrintWriter printWriter = response.getWriter(); \n\n            printWriter.println(\"<p>\"); \n            printWriter.print(\"The following options were\n            selected:\"); \n            printWriter.println(\"<br/>\"); \n\n if (selectedOptions != null) { for (String option : selectedOptions) { printWriter.print(option); printWriter.println(\"<br/>\"); } } else { printWriter.println(\"None\"); } \n            printWriter.println(\"</p>\"); \n        } catch (IOException e) { \n            e.printStackTrace(); \n        } \n    } \n} \n```", "```java\npackage net.ensode.javaee8book.formhandling; \n\nimport java.io.IOException; \nimport java.util.ArrayList; \n\nimport javax.servlet.ServletException; \nimport javax.servlet.annotation.WebServlet; \nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@WebServlet(urlPatterns = {\"/multiplevaluefieldhandlerservlet\"}) \npublic class MultipleValueFieldHandlerServlet extends HttpServlet { \n\n    protected void doPost(HttpServletRequest request,     \n    HttpServletResponse response) { \n        String[] selectedOptions =  \n        request.getParameterValues(\"options\"); \n        ArrayList<String> selectedOptionLabels = null; \n\n        if (selectedOptions != null) { \n            selectedOptionLabels = new ArrayList<String>  \n            (selectedOptions.length); \n\n            for (String selectedOption : selectedOptions) { \n                if (selectedOption.equals(\"option1\")) { \n                    selectedOptionLabels.add(\"Option 1\"); \n                } else if (selectedOption.equals(\"option2\")) { \n                    selectedOptionLabels.add(\"Option 2\"); \n                } else if (selectedOption.equals(\"option3\")) { \n                    selectedOptionLabels.add(\"Option 3\"); \n                } \n            } \n        } \n\n request.setAttribute(\"checkedLabels\", \n         selectedOptionLabels); \n\n        try { \n request.getRequestDispatcher(\"confirmationservlet\").\n              forward(\n              request, response); \n        } catch (ServletException e) { \n            e.printStackTrace(); \n        } catch (IOException e) { \n            e.printStackTrace(); \n        } \n    } \n} \n```", "```java\n    request.getRequestDispatcher(\"confirmationservlet\").forward(\n     request, response);\n```", "```java\npackage net.ensode.javaee8book.requestforward; \n\nimport java.io.IOException; \nimport java.io.PrintWriter; \nimport java.util.List; \nimport javax.servlet.annotation.WebServlet; \n\nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@WebServlet(urlPatterns = {\"/confirmationservlet\"}) \npublic class ConfirmationServlet extends HttpServlet { \n\n    @Override \n    protected void doPost(HttpServletRequest request,  \n    HttpServletResponse response) { \n        try { \n            PrintWriter printWriter; \n            List<String> checkedLabels = (List<String>) request \n                    .getAttribute(\"checkedLabels\"); \n\n            response.setContentType(\"text/html\"); \n            printWriter = response.getWriter(); \n            printWriter.println(\"<p>\"); \n            printWriter.print(\"The following options were  \n            selected:\"); \n            printWriter.println(\"<br/>\"); \n\n            if (checkedLabels != null) { \n                for (String optionLabel : checkedLabels) { \n                    printWriter.print(optionLabel); \n                    printWriter.println(\"<br/>\"); \n                } \n            } else { \n                printWriter.println(\"None\"); \n            } \n            printWriter.println(\"</p>\"); \n        } catch (IOException ioException) { \n            ioException.printStackTrace(); \n        } \n    } \n} \n```", "```java\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"> \n<html> \n    <head> \n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> \n        <title>Response Redirection Demo</title> \n    </head> \n    <body> \n <form method=\"post\" action=\"responseredirectionservlet\"> \n            <p>Please indicate your favorite search engine.</p> \n            <table> \n <tr> <td><input type=\"radio\" name=\"searchEngine\" value=\"http://www.google.com\">Google</td> </tr> <tr> <td><input type=\"radio\" name=\"searchEngine\" value=\"http://www.bing.com\">Bing</td> </tr> <tr> <td><input type=\"radio\" name=\"searchEngine\" value=\"http://www.yahoo.com\">Yahoo!</td> </tr> \n                <tr> \n                    <td><input type=\"submit\" value=\"Submit\" /></td> \n                </tr> \n            </table> \n        </form> \n    </body> \n</html> \n```", "```java\npackage net.ensode.javaee8book.responseredirection; \n\nimport java.io.IOException; \nimport java.io.PrintWriter; \nimport javax.servlet.annotation.WebServlet; \n\nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@WebServlet(urlPatterns = {\"/responseredirectionservlet\"}) \npublic class ResponseRedirectionServlet extends HttpServlet { \n\n    @Override \n    protected void doPost(HttpServletRequest request,  \n    HttpServletResponse response) \n            throws IOException { \n String url = request.getParameter(\"searchEngine\"); \n\n        if (url != null) { \n response.sendRedirect(url); \n        } else { \n            PrintWriter printWriter = response.getWriter(); \n\n            printWriter.println(\"No search engine was selected.\"); \n        } \n    } \n} \n```", "```java\nprotected void doPost(HttpServletRequest request, HttpServletResponse response) \n{ \n  . \n  . \n  . \n  Foo foo = new Foo(); //theoretical object \n HttpSession session = request.getSession(); session.setAttribute(\"foo\", foo); \n  . \n  . \n  . \n} \n```", "```java\nprotected void doPost(HttpServletRequest request, HttpServletResponse response) \n{ \n HttpSession session = request.getSession(); \n  Foo foo =\n  (Foo)session.getAttribute(\"foo\");\n} \n```", "```java\nprotected void doPost(HttpServletRequest request, HttpServletResponse response) \n{ \n  //The getServletContext() method is defined higher in \n  //the inheritance hierarchy. \n ServletContext servletContext = getServletContext(); \n\n  Foo foo = new Foo(); \n  servletContext.setAttribute(\"foo\", foo); \n  . \n  . \n  . \n} \n```", "```java\nprotected void doPost(HttpServletRequest request, HttpServletResponse response) \n{ \n ServletContext servletContext = getServletContext();\n  Foo foo = (Foo)servletContext.getAttribute(“foo”);\n  . \n  . \n  . \n} \n```", "```java\npackage net.ensode.javaee8book.initparam; \n\nimport java.io.IOException; \nimport java.io.PrintWriter; \nimport javax.servlet.ServletConfig; \nimport javax.servlet.ServletException; \nimport javax.servlet.annotation.WebInitParam; \nimport javax.servlet.annotation.WebServlet; \nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@WebServlet(name = \"InitParamsServlet\", urlPatterns = { \"/InitParamsServlet\"}, initParams = { @WebInitParam(name = \"param1\", value = \"value1\"), @WebInitParam(name = \"param2\", value = \"value2\")}) \npublic class InitParamsServlet extends HttpServlet { \n\n  @Override \n  protected void doGet(HttpServletRequest request, \n          HttpServletResponse response) \n          throws ServletException, IOException { \n ServletConfig servletConfig = getServletConfig(); String param1Val = servletConfig.getInitParameter(\"param1\"); String param2Val = servletConfig.getInitParameter(\"param2\"); \n    response.setContentType(\"text/html\"); \n    PrintWriter printWriter = response.getWriter(); \n\n    printWriter.println(\"<p>\"); \n    printWriter.println(\"Value of param1 is \" + param1Val); \n    printWriter.println(\"</p>\"); \n\n    printWriter.println(\"<p>\"); \n    printWriter.println(\"Value of param2 is \" + param2Val); \n    printWriter.println(\"</p>\"); \n  } \n} \n```", "```java\npackage net.ensode.javaee8book.simpleapp; \n\nimport java.io.IOException; \nimport java.util.Enumeration; \nimport javax.servlet.Filter; \nimport javax.servlet.FilterChain; \nimport javax.servlet.FilterConfig; \nimport javax.servlet.ServletContext; \nimport javax.servlet.ServletException; \nimport javax.servlet.ServletRequest; \nimport javax.servlet.ServletResponse; \nimport javax.servlet.annotation.WebFilter; \nimport javax.servlet.annotation.WebInitParam; \n\n@WebFilter(filterName = \"SimpleFilter\", initParams = { @WebInitParam(name = \"filterparam1\", value = \"filtervalue1\")}, urlPatterns = {\"/InitParamsServlet\"}) \npublic class SimpleFilter implements Filter { \n\n  private FilterConfig filterConfig; \n\n  @Override \n  public void init(FilterConfig filterConfig) throws \n          ServletException { \n    this.filterConfig = filterConfig; \n  } \n\n  @Override \n  public void doFilter(ServletRequest servletRequest, \n          ServletResponse servletResponse, FilterChain filterChain) \n          throws \n          IOException, ServletException { \n    ServletContext servletContext = \n     filterConfig.getServletContext(); \n    servletContext.log(\"Entering doFilter()\"); \n    servletContext.log(\"initialization parameters: \"); \n    Enumeration<String> initParameterNames = \n            filterConfig.getInitParameterNames(); \n    String parameterName; \n    String parameterValue; \n\n    while (initParameterNames.hasMoreElements()) { \n      parameterName = initParameterNames.nextElement(); \n      parameterValue = \n       filterConfig.getInitParameter(parameterName); \n      servletContext.log(parameterName + \" = \" + parameterValue); \n    } \n\n    servletContext.log(\"Invoking servlet...\"); \n    filterChain.doFilter(servletRequest, servletResponse); \n    servletContext.log(\"Back from servlet invocation\"); \n\n  } \n\n  @Override \n  public void destroy() { \n    filterConfig = null; \n  } \n} \n```", "```java\n    [2017-05-31T20:02:46.044-0400] [glassfish 5.0] [INFO] [] [javax.enterprise.web] [tid: _ThreadID=112 _ThreadName=http-listener-1(5)] [timeMillis: 1496275366044] [levelValue: 800] [[\n      WebModule[/servletfilter] ServletContext.log():Entering doFilter()]]\n\n    [2017-05-31T20:02:46.045-0400] [glassfish 5.0] [INFO] [] [javax.enterprise.web] [tid: _ThreadID=112 _ThreadName=http-listener-1(5)] [timeMillis: 1496275366045] [levelValue: 800] [[\n      WebModule[/servletfilter] ServletContext.log():initialization parameters: ]]\n\n    [2017-05-31T20:02:46.045-0400] [glassfish 5.0] [INFO] [] [javax.enterprise.web] [tid: _ThreadID=112 _ThreadName=http-listener-1(5)] [timeMillis: 1496275366045] [levelValue: 800] [[\n      WebModule[/servletfilter] ServletContext.log():filterparam1 = filtervalue1]]\n\n    [2017-05-31T20:02:46.045-0400] [glassfish 5.0] [INFO] [] [javax.enterprise.web] [tid: _ThreadID=112 _ThreadName=http-listener-1(5)] [timeMillis: 1496275366045] [levelValue: 800] [[\n      WebModule[/servletfilter] ServletContext.log():Invoking servlet...]]\n\n    [2017-05-31T20:02:46.046-0400] [glassfish 5.0] [INFO] [] [javax.enterprise.web] [tid: _ThreadID=112 _ThreadName=http-listener-1(5)] [timeMillis: 1496275366046] [levelValue: 800] [[\n      WebModule[/servletfilter] ServletContext.log():Back from servlet invocation]]\n```", "```java\n    package net.ensode.javaee8book.listener;\n    import javax.servlet.ServletContext;\n    import javax.servlet.ServletRequestEvent;\n    import javax.servlet.ServletRequestListener;\n    import javax.servlet.annotation.WebListener;\n    @WebListener() \n    public class HttpRequestListener implements ServletRequestListener   \n   {\n\n    @Override\n    public void requestInitialized(ServletRequestEvent  \n      servletRequestEvent) { \n\n    ServletContext servletContext =\n\n    servletRequestEvent.getServletContext();\n\n    servletContext.log(\"New request initialized\");\n\n    }\n\n    @Override\n    public void requestDestroyed(ServletRequestEvent   \n      servletRequestEvent) { \n\n    ServletContext servletContext =\n\n    servletRequestEvent.getServletContext();\n\n    servletContext.log(\"Request destroyed\");\n\n    }\n    }\n```", "```java\n    [2017-05-31T20:15:57.900-0400] [glassfish 5.0] [INFO] [] [javax.enterprise.web] [tid: _ThreadID=109 _ThreadName=http-listener-1(2)] [timeMillis: 1496276157900] [levelValue: 800] [[ \n    WebModule[/servletlistener] ServletContext.log():New request initialized]] \n\n    [2017-05-31T20:15:58.013-0400] [glassfish 5.0] [INFO] [] [javax.enterprise.web] [tid: _ThreadID=109 _ThreadName=http-listener-1(2)] [timeMillis: 1496276158013] [levelValue: 800] [[ \n\nWebModule[/servletlistener] ServletContext.log():Request destroyed]] \n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<web-fragment version=\"3.0\"  \n\n  xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee \n  http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd\"> \n  <servlet> \n    <servlet-name>WebFragment</servlet-name> \n    <servlet-class> \n      net.ensode.glassfishbook.webfragment.WebFragmentServlet \n    </servlet-class> \n  </servlet> \n  <servlet-mapping> \n    <servlet-name>WebFragment</servlet-name> \n    <url-pattern>/WebFragment</url-pattern> \n  </servlet-mapping> \n</web-fragment> \n```", "```java\npackage net.ensode.javaee8book.servlet; \n\nimport javax.servlet.ServletContext; \nimport javax.servlet.ServletContextEvent; \nimport javax.servlet.ServletContextListener; \nimport javax.servlet.ServletException; \nimport javax.servlet.ServletRegistration; \nimport javax.servlet.annotation.WebListener; \n\n@WebListener() \npublic class ServletContextListenerImpl implements \n        ServletContextListener { \n\n  @Override \n  public void contextInitialized( \n          ServletContextEvent servletContextEvent) { \n    ServletContext servletContext = servletContextEvent. \n            getServletContext(); \n    try { \n ProgrammaticallyConfiguredServlet servlet = servletContext. createServlet(ProgrammaticallyConfiguredServlet.class); servletContext.addServlet(\n       \"ProgrammaticallyConfiguredServlet\", servlet); ServletRegistration servletRegistration = servletContext. getServletRegistration( \"ProgrammaticallyConfiguredServlet\"); servletRegistration.addMapping( \"/ProgrammaticallyConfiguredServlet\"); \n    } catch (ServletException servletException) { \n      servletContext.log(servletException.getMessage()); \n    } \n  } \n\n  @Override \n  public void contextDestroyed( \n          ServletContextEvent servletContextEvent) { \n  } \n} \n```", "```java\npackage net.ensode.javaee8book.servlet; \n\nimport java.io.IOException; \nimport javax.servlet.ServletException; \nimport javax.servlet.ServletOutputStream; \nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\npublic class ProgrammaticallyConfiguredServlet extends HttpServlet { \n\n  @Override \n  protected void doGet(HttpServletRequest request, \n          HttpServletResponse response) \n          throws ServletException, IOException { \n    ServletOutputStream outputStream = response.getOutputStream(); \n\n    outputStream.println( \n            \"This message was generated from a servlet that was \" \n            + \"configured programmatically.\"); \n  } \n} \n```", "```java\nThis message was generated from a servlet that was configured programmatically.\n```", "```java\npackage net.ensode.javaee8book.asynchronousservlet; \n\nimport java.io.IOException; \nimport java.util.logging.Level; \nimport java.util.logging.Logger; \nimport javax.servlet.AsyncContext; \nimport javax.servlet.ServletException; \nimport javax.servlet.annotation.WebServlet; \nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@WebServlet(name = \"AsynchronousServlet\", urlPatterns = {\n \"/AsynchronousServlet\"}, asyncSupported = true) \npublic class AsynchronousServlet extends HttpServlet { \n\n  @Override \n  protected void doGet(HttpServletRequest request, \n          HttpServletResponse response) \n          throws ServletException, IOException { \n    final Logger logger = \n            Logger.getLogger(AsynchronousServlet.class.getName()); \n    logger.log(Level.INFO, \"--- Entering doGet()\"); \n final AsyncContext ac = request.startAsync(); \n    logger.log(Level.INFO, \"---- invoking ac.start()\"); \n ac.start(new Runnable() { \n\n      @Override \n      public void run() { \n        logger.log(Level.INFO, \"inside thread\"); \n        try { \n          //simulate a long running process. \n          Thread.sleep(10000); \n        } catch (InterruptedException ex) { \n          Logger.getLogger(AsynchronousServlet.class.getName()). \n                  log(Level.SEVERE, null, ex); \n        } \n        try { \n ac.getResponse().getWriter(). println(\"You should see this after a brief wait\"); ac.complete(); \n        } catch (IOException ex) { \n          Logger.getLogger(AsynchronousServlet.class.getName()). \n                  log(Level.SEVERE, null, ex); \n        } \n      } \n    }); \n    logger.log(Level.INFO, \"Leaving doGet()\"); \n  } \n} \n```", "```java\npackage net.ensode.javaee8book.servlet; \n\nimport java.io.IOException; \nimport java.io.PrintWriter; \nimport javax.servlet.ServletException; \nimport javax.servlet.annotation.WebServlet; \nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \nimport javax.servlet.http.PushBuilder; \n\n@WebServlet(name = \"ServletPushDemoServlet\", urlPatterns = {\"/ServletPushDemoServlet\"}) \npublic class ServletPushDemoServlet extends HttpServlet { \n    @Override \n    protected void doPost(HttpServletRequest request, \n     HttpServletResponse response) \n            throws ServletException, IOException { \n PushBuilder pushBuilder = request.newPushBuilder(); \n\n        if (pushBuilder != null) { \n            //We know the browser is going to need the image \n            //so we push it before it even requests it. \n            //We could do the same for Javascript files, CSS, etc. \n pushBuilder.path(\"images/david_heffelfinger.png\"). addHeader(\"content-type\", \"image/png\"). push(); \n            response.sendRedirect(\"response.html\"); \n        } else { \n           //Gracefully handle the case when the browser does not  \n           support HTTP/2\\. \n        } \n    } \n} \n```"]