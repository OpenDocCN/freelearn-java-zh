["```java\npublic int add(int num) {\n    return add(num + 1);\n}\n```", "```java\n    sourceCompatibility = 12\n    ```", "```java\n    public int add(int num) {\n        return add(num + 1);\n    }\n    ```", "```java\n    public class RunForever {\n        public static void main(String[] args) {\n            RunForever runForever = new RunForever();\n            System.out.println(runForever.add(1));\n        }\n    }\n    ```", "```java\n    Exception in thread \"main\" java.lang.StackOverflowError\n    at com.packtpub.recursion.RunForever.add(RunForever.java:11)\n    ```", "```java\n    package com.packtpub.recursion;\n    public class RunForever {\n        public int add(int num) {\n            return add(num + 1);\n        }\n        public static void main(String[] args) {\n            RunForever runForever = new RunForever();\n            System.out.println(runForever.add(1));\n        }\n    }\n    ```", "```java\n    package com.packtpub.recursion;\n    public class RunAndStop {\n        public int add(int num) {\n            if (num < 100) {\n                return add(num + 1);\n            }\n            return num;\n        }\n        public static void main(String[] args) {\n            RunAndStop runAndStop = new RunAndStop();\n            System.out.println( runAndStop.add(1) );\n        }\n    }\n    ```", "```java\n    100\n    ```", "```java\n    public static int factorial(int number) {\n        if (number == 1) {\n            return 1;\n        } else {\n            return number * factorial(number - 1);\n        }\n    }\n    ```", "```java\n    public static void main(String[] args) {\n        System.out.println( factorial(6) );\n    }\n    ```", "```java\n    720\n    ```", "```java\n    package com.packtpub.recursion;\n    public class Factorial {\n        public static int factorial(int number) {\n            if (number == 1) {\n                return 1;\n            } else {\n                return number * factorial(number - 1);\n            }\n        }\n        public static void main(String[] args) {\n            System.out.println( factorial(6) );\n        }\n    }\n    ```", "```java\ncities.xml\n1  <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n2  <cities>\n3    <city>\n4      <name>London</name>\n5      <country>United Kingdom</country>\n6      <summertime-high-temp>20.4 C</summertime-high-temp>\n7      <in-year-2100>\n8          <with-moderate-emission-cuts>\n9            <name>Paris</name>\n10          <country>France</country>\n11          <summertime-high-temp>22.7 C</summertime-high-temp>\n12        </with-moderate-emission-cuts>\nhttps://packt.live/2N4X4Rl\n```", "```java\ncities.xml\n2  <cities>\n3    <city>\n4      <name>London</name>\n5      <country>United Kingdom</country>\n6      <summertime-high-temp>20.4 C</summertime-high-temp>\n7      <in-year-2100>\n8          <with-moderate-emission-cuts>\n9            <name>Paris</name>\n10          <country>France</country>\n11          <summertime-high-temp>22.7 C</summertime-high-temp>\n12        </with-moderate-emission-cuts>\nhttps://packt.live/2N4X4Rl\n```", "```java\n<city>\n    <name>London</name>\n</city>\n```", "```java\nDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nDocumentBuilder builder = factory.newDocumentBuilder();\n```", "```java\nFile xmlFile = new File(\"src/main/resources/cities.xml\");\nDocument document = builder.parse(xmlFile);\n```", "```java\nNode node = document.getFirstChild();\nNodeList children = node.getChildNodes();\nfor (int i = 0; i < children.getLength(); i++) {\n    Node child = children.item(i);\n}\n```", "```java\nif (node.hasChildNodes()) {\n    indentation += 2;\n    NodeList children = node.getChildNodes();\n    for (int i = 0; i < children.getLength(); i++) {\n        Node child = children.item(i);\n        if (child.getNodeType() == Node.TEXT_NODE) {\n            printText(child.getTextContent() );\n        } else {            \n            traverseNode(child, indentation);\n        }\n    }\n}\n```", "```java\n    dependencies {\n        testCompile group: 'junit', name: 'junit', version: '4.12'\n        // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3\n        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'\n    }\n    ```", "```java\n    XmlTraverser.java\n    17 public Document loadXml() {\n    18   Document document = null;\n    19 \n    20   DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    21   try {\n    22     DocumentBuilder builder = factory.newDocumentBuilder();\n    23 \n    24     File xmlFile = new File(\"src/main/resources/cities.xml\");\n    25     document = builder.parse(xmlFile);\n    26 \n    27   } \n    https://packt.live/33MDhN2\n    ```", "```java\n    public void printText(String text) {\n        if (StringUtils.isNotBlank(text)) {\n            System.out.print(text);\n        }\n    }\n    ```", "```java\n    public void indent(int indentation) {\n        System.out.print( StringUtils.leftPad(\"\", indentation));\n    }\n    ```", "```java\n        public void traverseNode(Node node, int indentation) {\n            indent(indentation);\n            System.out.print(node.getNodeName() + \" \");\n            if (node.hasChildNodes()) {\n                indentation += 2;\n                NodeList children = node.getChildNodes();\n                for (int i = 0; i < children.getLength(); i++) {\n                    Node child = children.item(i);\n                    if (child.getNodeType() == Node.TEXT_NODE) {\n                        printText( child.getTextContent() );\n                    } else {\n                        System.out.println();       // previous line\n                        traverseNode(child, indentation);\n                    }\n                }\n            }\n        }\n    ```", "```java\n    public void traverseDocument(Document document) {\n        traverseNode(document.getFirstChild(), 0);\n    }\n    ```", "```java\n    public static void main(String[] args) {\n        XmlTraverser traverser = new XmlTraverser();\n        Document document = traverser.loadXml();\n        // Traverse XML document.\n        traverser.traverseDocument(document);\n    }\n    ```", "```java\n    cities \n      city \n        name London\n        country United Kingdom\n        summertime-high-temp 20.4 C\n        in-year-2100 \n          with-moderate-emission-cuts \n            name Paris\n            country France\n            summertime-high-temp 22.7 C\n          with-no-emission-cuts \n            name Milan\n            country Italy\n            summertime-high-temp 25.2 C\n    ```", "```java\nfibonacci(4) = \nfibonacci(3) + fibonacci(2) =\n{fibonacci(2) + fibonacci(1)} + {fibonacci(1) + fibonacci(0)} =\n{fibonacci(1) + fibonacci(0) + fibonacci(1) + fibonacci(0)} + {fibonacci(1) + fibonacci(0)} =\n1 + 0 + 1 + 0 + 1 + 0 = 3\n```", "```java\n0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n```"]