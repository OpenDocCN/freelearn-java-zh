["```java\npublic class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Hello there!\");\n    }\n}\n```", "```java\npublic class Main {\npublic static void main(String[] args) {\nSystem.out.println(\"Hello there!\");\n}\n}\n```", "```java\npublic void isEven\n        (Integer number) {if (number \n    % 2 == 0) {System.out\n        .println(\"Even number\");\n    } else {System.out.println(\"Odd number\");}}\n```", "```java\npublic void isEven(Integer number) {\n    if (number % 2 == 0) {\n        System.out.println(\"Even number\");\n    } else {\n        System.out.println(\"Odd number\");\n    }\n}\n```", "```java\nif (number % 2 == 0) {\n    System.out.println(\"Even number\");\n} else {\n    System.out.println(\"Odd number\");\n}\n```", "```java\npublic void isEven(Integer number) {\n    if (number % 2 == 0)\n    {\n        System.out.println(\"Even number\");\n    } else\n    {\n        System.out.println(\"Odd number\");\n    }\n}\n```", "```java\nint x = y + z;\n```", "```java\n    String carFeaturesFormatted = String.format(\"Make: %s, Model: %s, Version: %s, Price: %s\", \n            make, model, version, price);\n    ```", "```java\n    int totalPrice = priceFare1 * factor1 \n            + priceFare2 * factor2 \n            + priceFare3 * factor3;\n    ```", "```java\n    if (cond1 && someMethod(argument1, argument2, argument3) \n            || cond2 && anotherMethod(argument4, argument5)) { \n        // code \n    }\n    ```", "```java\n    String message = \"Dear \" + name + \",\\n\"\n            + \"Thank you for your subscription to \" + newsLetterName + \".\\n\"\n            + \"The price of your subscription was \" + price + \".\\n\"\n            + \"Regards,\\n\"\n            + \"The Newsletter Team\";\n    ```", "```java\n    String textBlock = \"\"\"\n        This is a\n        multiline\n        text block.\n        \"\"\";\n    ```", "```java\n    catalogue.stream()\n            .filter(film -> film.getGenre().equals(\"Sci-Fi\")\n                    && film.getLength() > 180)\n            .forEach(item -> System.out.println(item.getTitle()));\n    ```", "```java\n<dependency>\n    <groupId>org.springdoc</groupId>\n    <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\n    <version>2.2.0</version>\n</dependency>\n```", "```java\n@RestController\npublic class EmployeeController {\n    //fields and constructors...\n    @GetMapping(\"/employees\")\n    Collection<Employee> findAll() {\n        return repository.findAll();\n    }\n    @PostMapping(\"/\")\n    public ResponseEntity<Employee> create(@RequestBody CreateEmployee employee) {\n        Employee createdEmployee = repository.create(employee);\n        URI uri = buildResourceUri(createdEmployee);\n        return ResponseEntity.created(uri)\n        .body(createdEmployee);\n    }\n    // buildResourceUri method implementation...\n}\n```", "```java\n@Schema(name = \"Employee name\", example = \"John Doe\", required = true)\nprivate final String name;\n@Schema(name = \"Employee role\", example = \"Software engineer\", required = true)\nprivate final String role;\n```"]