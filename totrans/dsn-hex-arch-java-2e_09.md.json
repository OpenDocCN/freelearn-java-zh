["```java\nmodule domain {\n    exports dev.davivieira.topologyinventory.domain.entity;\n    exports dev.davivieira.topologyinventory.domain.entity\n      .factory;\n    exports dev.davivieira.topologyinventory.domain\n      .service;\n    exports dev.davivieira.topologyinventory.domain\n      .specification;\n    exports dev.davivieira.topologyinventory.domain.vo;\n    requires static lombok;\n}\n```", "```java\nmodule application {\n    requires domain;\n}\n```", "```java\nprivate RouterManagementUseCase;\npublic RouterManagementGenericAdapter(){\n    setPorts();\n}\nprivate void setPorts(){\n    this.routerManagementUseCase = new\n      RouterManagementInputPort(\n            RouterManagementH2Adapter.getInstance()\n    );\n}\n```", "```java\n    @NoArgsConstructor\n    public class RouterManagementInputPort implements\n      RouterManagementUseCase {\n    /** Code omitted **/\n    }\n    ```", "```java\n    public interface RouterManagementUseCase {\n        void setOutputPort(\n        RouterManagementOutputPort\n          routerManagementOutputPort);\n    }\n    ```", "```java\n    @Override\n    public void setOutputPort(RouterManagementOutputPort\n      routerManagementOutputPort) {\n        this.routerManagementOutputPort =\n        routerManagementOutputPort;\n    }\n    ```", "```java\nmodule application {\n    requires domain;\n    requires static lombok;\n    exports dev.davivieira.topologyinventory.application\n      .ports.\n    input;\n    exports dev.davivieira.topologyinventory.application\n      .ports.\n    output;\n    exports dev.davivieira.topologyinventory.application\n      .usecases;\n/** Code omitted **/\n}\n```", "```java\n    provides dev.davivieira.topologyinventory.application\n      .usecases.\n    RouterManagementUseCase\n    with dev.davivieira.topologyinventory.application.ports\n      .input.\n    RouterManagementInputPort;\n```", "```java\n    provides dev.davivieira.topologyinventory.application\n      .usecases.\n    SwitchManagementUseCase\n    with dev.davivieira.topologyinventory.application.ports\n      .input.\n    SwitchManagementInputPort;\n```", "```java\n    provides dev.davivieira.topologyinventory.application\n      .usecases.\n    NetworkManagementUseCase\n    with dev.davivieira.topologyinventory.application.ports\n      .input.\n    NetworkManagementInputPort;\n```", "```java\nprivate RouterManagementH2Adapter(){\n    setUpH2Database();\n}\n```", "```java\npublic RouterManagementH2Adapter(){\n    setUpH2Database();\n}\n```", "```java\nmodule framework {\n    requires domain;\n    requires application;\n    /** Code omitted **/\n    exports dev.davivieira.topologyinventory.framework\n      .adapters.\n    output.h2.data;\n    opens dev.davivieira.topologyinventory.framework\n      .adapters.\n    output.h2.data;\n    provides dev.davivieira.topologyinventory.application\n      .ports.\n    output.RouterManagementOutputPort\n    with dev.davivieira.topologyinventory.framework\n      .adapters.output.\n    h2.RouterManagementH2Adapter;\n    provides dev.davivieira.topologyinventory.application\n      .ports.\n    output.SwitchManagementOutputPort\n    with dev.davivieira.topologyinventory.framework\n      .adapters.output.\n    h2.SwitchManagementH2Adapter;\n}\n```", "```java\n    module framework {\n        /** Code omitted **/\n        uses dev.davivieira.topologyinventory.application\n          .usecases\n        .RouterManagementUseCase;\n        uses dev.davivieira.topologyinventory.application\n          .usecases\n        .SwitchManagementUseCase;\n        uses dev.davivieira.topologyinventory.application\n          .usecases\n        .NetworkManagementUseCase;\n        uses dev.davivieira.topologyinventory.application\n          .ports.output\n        .RouterManagementOutputPort;\n        uses dev.davivieira.topologyinventory.application\n          .ports.output\n        .SwitchManagementOutputPort;\n    }\n    ```", "```java\n    public class RouterManagementGenericAdapter {\n        private RouterManagementUseCase\n          routerManagementUseCase;\n        public RouterManagementGenericAdapter(\n        RouterManagementUseCase routerManagementUseCase) {\n            this.routerManagementUseCase =\n              routerManagementUseCase;\n        }\n        /** Code omitted **/\n    }\n    ```", "```java\n    public class SwitchManagementGenericAdapter {\n        private SwitchManagementUseCase\n          switchManagementUseCase;\n        private RouterManagementUseCase\n          routerManagementUseCase;\n        public SwitchManagementGenericAdapter (\n        RouterManagementUseCase,\n        SwitchManagementUseCase switchManagementUseCase){\n            this.routerManagementUseCase =\n              routerManagementUseCase;\n            this.switchManagementUseCase =\n              switchManagementUseCase;\n        }\n        /** Code omitted **/\n    }\n    ```", "```java\n    public class NetworkManagementGenericAdapter {\n        private SwitchManagementUseCase\n          switchManagementUseCase;\n        private NetworkManagementUseCase\n          networkManagementUseCase;\n        public NetworkManagementGenericAdapter(\n        SwitchManagementUseCase,\n        NetworkManagementUseCase networkManagementUseCase) {\n            this.switchManagementUseCase =\n              switchManagementUseCase;\n            this.networkManagementUseCase =\n              networkManagementUseCase;\n        }\n        /** Code omitted **/\n    }\n    ```", "```java\npublic class FrameworkTestData {\n  protected RouterManagementGenericAdapter\n  routerManagementGenericAdapter;\n  protected SwitchManagementGenericAdapter\n  switchManagementGenericAdapter;\n  protected NetworkManagementGenericAdapter\n  networkManagementGenericAdapter;\n  /** Code omitted **/\n}\n```", "```java\n    protected void loadPortsAndUseCases() {\n      // Load router implementations\n      ServiceLoader<RouterManagementUseCase>\n        loaderUseCaseRouter =\n      ServiceLoader.load(RouterManagementUseCase.class);\n      RouterManagementUseCase =\n      loaderUseCaseRouter.findFirst().get();\n      // Code omitted //\n    }\n    ```", "```java\n    ServiceLoader<RouterManagementOutputPort> loaderOutpu\n      tRouter =\n    ServiceLoader.load(RouterManagementOutputPort.class);\n    RouterManagementOutputPort = loaderOutputRouter.find\n      First().get();\n    ```", "```java\n    routerManagementUseCase.setOutputPort(routerManagemen\n      tOutputPort);\n    ```", "```java\n    this.routerManagementGenericAdapter =\n    new RouterManagementGenericAdapter(routerManagemen\n      tUseCase);\n    ```", "```java\n    ServiceLoader<SwitchManagementUseCase> loaderUseCas\n      eSwitch = ServiceLoader.load(SwitchManagementUse\n        Case.class);\n    SwitchManagementUseCase switchManagementUseCase =\n      loaderUseCaseSwitch.findFirst().get();\n    ```", "```java\n    ServiceLoader<SwitchManagementOutputPort> loaderOut\n      putSwitch = ServiceLoader.load(SwitchManagementOut\n        putPort.class);\n    SwitchManagementOutputPort = loaderOutputSwitch.find\n      First().get();\n    ```", "```java\n    switchManagementUseCase.setOutputPort(switchManagemen\n      tOutputPort);\n    ```", "```java\n    this.switchManagementGenericAdapter =\n    new SwitchManagementGenericAdapter(\n    routerManagementUseCase, switchManagementUseCase);\n    ```", "```java\n    ServiceLoader<NetworkManagementUseCase> load\n      erUseCaseNetwork = ServiceLoader.load(NetworkManage\n        mentUseCase.class);\n    NetworkManagementUseCase networkManagementUseCase =\n      loaderUseCaseNetwork.findFirst().get()\n    ```", "```java\n    networkManagementUseCase.setOutputPort(routerManage\n      mentOutputPort);\n    ```", "```java\n    this.networkManagementGenericAdapter = new NetworkMan\n      agementGenericAdapter(switchManagementUseCase, net\n        workManagementUseCase);\n    ```"]