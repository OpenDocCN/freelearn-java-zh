["```java\n    package net.ensode.javaee8book.jsonpobject; \n\n    //other imports omitted for brevity. \n    import javax.inject.Named; \n    import javax.json.Json; \n    import javax.json.JsonObject; \n    import javax.json.JsonReader; \n    import javax.json.JsonWriter; \n\n    @Named \n    @SessionScoped \n    public class JsonpBean implements Serializable{ \n\n      private String jsonStr; \n\n      @Inject \n      private Customer customer; \n\n      public String buildJson() { \n        JsonObjectBuilder jsonObjectBuilder =  \n            Json.createObjectBuilder(); \n        JsonObject jsonObject = jsonObjectBuilder. \n            add(\"firstName\", \"Scott\"). \n            add(\"lastName\", \"Gosling\"). \n            add(\"email\", \"sgosling@example.com\"). \n            build(); \n\n        StringWriter stringWriter = new StringWriter(); \n\n        try (JsonWriter jsonWriter = Json.createWriter(stringWriter)) \n         { \n           jsonWriter.writeObject(jsonObject); \n         }    \n\n        setJsonStr(stringWriter.toString()); \n\n        return \"display_json\"; \n\n     } \n    //getters and setters omitted for brevity \n    }  \n```", "```java\n    {\"firstName\":\"Scott\",\"lastName\":\"Gosling\",\"email\":\"\n    sgosling@example.com \"}\n```", "```java\n    package net.ensode.javaee8book.jsonpobject; \n\n    //other imports omitted \n    import javax.json.Json; \n    import javax.json.JsonObject; \n    import javax.json.JsonReader; \n    import javax.json.JsonWriter; \n\n    @Named \n    @SessionScoped \n    public class JsonpBean implements Serializable{ \n\n      private String jsonStr; \n\n      @Inject \n      private Customer customer; \n\n      public String parseJson() { \n        JsonObject jsonObject; \n        try (JsonReader jsonReader = Json.createReader( \n             new StringReader(jsonStr))) { \n               jsonObject = jsonReader.readObject(); \n             } \n\n        customer.setFirstName( \n          jsonObject.getString(\"firstName\")); \n        customer.setLastName( \n          jsonObject.getString(\"lastName\")); \n        customer.setEmail(jsonObject.getString(\"email\")); \n\n        return \"display_parsed_json\"; \n      } \n\n      //getters and setters omitted \n\n    } \n```", "```java\n    package net.ensode.javaee8book.jsonpstreaming; \n\n    //other imports omitted \n    import javax.json.Json; \n    import javax.json.stream.JsonGenerator; \n    import javax.json.stream.JsonParser; \n    import javax.json.stream.JsonParser.Event; \n\n    @Named \n    @SessionScoped \n    public class JsonpBean implements Serializable { \n\n      private String jsonStr; \n\n      @Inject \n      private Customer customer; \n\n      public String buildJson() { \n        StringWriter stringWriter = new StringWriter(); \n        try (JsonGenerator jsonGenerator = \n          Json.createGenerator(stringWriter)) { \n           jsonGenerator.writeStartObject(). \n             write(\"firstName\", \"Larry\"). \n             write(\"lastName\", \"Gates\"). \n             write(\"email\", \"lgates@example.com\"). \n             writeEnd(); \n         } \n\n         setJsonStr(stringWriter.toString()); \n         return \"display_json\"; \n     } \n\n     //getters and setters omitted \n    } \n```", "```java\n    package net.ensode.javaee8book.jsonpstreaming; \n\n    //other imports omitted \n    import javax.json.Json; \n    import javax.json.stream.JsonGenerator; \n    import javax.json.stream.JsonParser; \n    import javax.json.stream.JsonParser.Event; \n\n    @Named \n    @SessionScoped \n    public class JsonpBean implements Serializable { \n\n      private String jsonStr; \n\n      @Inject \n      private Customer customer; \n\n      public String parseJson() { \n\n        StringReader stringReader = new StringReader(jsonStr); \n\n        JsonParser jsonParser = Json.createParser(stringReader); \n\n        Map<String, String> keyValueMap = new HashMap<>(); \n        String key = null; \n        String value = null; \n\n        while (jsonParser.hasNext()) { \n            JsonParser.Event event = jsonParser.next(); \n\n            if (event.equals(Event.KEY_NAME)) { \n                key = jsonParser.getString(); \n            } else if (event.equals(Event.VALUE_STRING)) { \n                value = jsonParser.getString(); \n            } \n\n            keyValueMap.put(key, value); \n        } \n\n        customer.setFirstName(keyValueMap.get(\"firstName\")); \n        customer.setLastName(keyValueMap.get(\"lastName\")); \n        customer.setEmail(keyValueMap.get(\"email\")); \n\n        return \"display_parsed_json\"; \n      } \n\n      //getters and setters omitted \n\n    } \n```", "```java\n { \n  \"dateOfBirth\": \"1997-03-03\",\n  \"firstName\": \"David\",\n  \"lastName\": \"Heffelfinger\",\n  \"middleName\": \"Raymond\",\n  \"salutation\": \"Mr\" \n }\n```", "```java\n    [  \n     {  \n       \"dateOfBirth\": \"1997-01-01\", \n       \"firstName\": \"David\", \n       \"lastName\": \"Delabassee\", \n       \"salutation\": \"Mr\"  \n      }, \n     {  \n       \"dateOfBirth\": \"1997-03-03\", \n       \"firstName\": \"David\", \n       \"lastName\": \"Heffelfinger\", \n       \"middleName\": \"Raymond\", \n       \"salutation\": \"Mr\" \n     } \n    ] \n```", "```java\n    package net.ensode.javaee8book.jsonpointer; \n    //imports omitted \n\n    @Path(\"jsonpointer\") \n    public class JsonPointerDemoService { \n\n      private String jsonString; //initialization omitted \n\n      @GET \n      public String jsonPointerDemo() { \n        initializeJsonString(); //method body omitted for brevity \n        JsonReader jsonReader = Json.createReader\n (new StringReader(jsonString)); \n        JsonArray jsonArray = jsonReader.readArray(); \n        JsonPointer jsonPointer = Json.createPointer(\"/1/lastName\"); \n\n        return jsonPointer.getValue(jsonArray).toString(); \n      } \n    } \n```", "```java\n    package net.ensode.javaee8book.jsonpatch; \n\n    //imports omitted for brevity \n\n    @Path(\"jsonpatch\") \n    public class JsonPatchDemoService { \n\n      private String jsonString; \n\n      @GET \n      public Response jsonPatchDemo() { \n        initializeJsonString(); //method declaration omitted \n        JsonReader jsonReader = Json.createReader( \n            new StringReader(jsonString)); \n        JsonArray jsonArray = jsonReader.readArray(); \n        JsonPatch jsonPatch = Json.createPatchBuilder() \n                .replace(\"/1/dateOfBirth\", \"1977-01-01\") \n                .build(); \n        JsonArray modifiedJsonArray =jsonPatch.apply(jsonArray); \n\n        return Response.ok(modifiedJsonArray.toString(), \n        MediaType.APPLICATION_JSON).build(); \n      } \n    } \n```", "```java\n    package net.ensode.javaee8book.jaxrs21example.service; \n\n    import net.ensode.javaee8book.jaxrs21example.dto.Customer; \n    import java.util.logging.Level; \n    import java.util.logging.Logger; \n    import javax.json.bind.Jsonb; \n    import javax.json.bind.JsonbBuilder; \n    import javax.ws.rs.POST; \n    import javax.ws.rs.Consumes; \n    import javax.ws.rs.Path; \n    import javax.ws.rs.core.MediaType; \n    import javax.ws.rs.core.Response; \n\n    @Path(\"/customercontroller\") \n    public class CustomerControllerService { \n\n    private static final Logger LOG = \n    Logger.getLogger(CustomerControllerService.class.getName()); \n\n    @POST \n    @Consumes(MediaType.APPLICATION_JSON) \n    public Response addCustomer(String customerJson) { \n      Response response; \n      Jsonb jsonb = JsonbBuilder.create(); \n Customer customer = jsonb.fromJson(customerJson, \n          Customer.class); \n      LOG.log(Level.INFO, \"Customer object populated from JSON\"); \n      LOG.log(Level.INFO, String.format(\"%s %s %s %s %s\", \n      customer.getSalutation(), \n      customer.getFirstName(), \n      customer.getMiddleName(), \n      customer.getLastName(), \n      customer.getDateOfBirth())); \n      response = Response.ok(\"{}\").build(); \n      return response; \n     } \n\n    } \n```", "```java\n    package net.ensode.javaee8book.jsonbjavatojson.service; \n\n    //imports omitted for brevity \n\n    @Path(\"/customersearchcontroller\") \n    public class CustomerSearchControllerService { \n      private final List<Customer> customerList = new ArrayList<>(); \n\n      @GET \n      @Path(\"{firstName}\") \n      public Response getCustomerByFirstName(@PathParam(\"firstName\")   \n      String firstName) { \n        List<Customer> filteredCustomerList; \n        String jsonString; \n        initializeCustomerList(); //method declaration omitted \n\n        Jsonb jsonb = JsonbBuilder.create(); \n\n        filteredCustomerList = customerList.stream().filter( \n                customer -> customer.getFirstName().equals(firstName)). \n                collect(Collectors.toList()); \n\n        jsonString = jsonb.toJson(filteredCustomerList); \n\n        return Response.ok(jsonString).build(); \n     } \n   } \n```"]