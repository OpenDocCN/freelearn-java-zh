["```java\nPublic interface UserService {\n  public abstract List<User> findAll();\n  public abstract void addUser(User user);\n}\n```", "```java\npublic class UserServiceImpl implements UserService {\n  private List<User> userList = new LinkedList<User>();\n\n  public UserServiceImpl() {\n    User user1 = new User(\"Merlin\", 777);\n    userList.add(user1);\n\n    User user2 = new User(\"Arthur\", 123);\n    userList.add(user2);\n  }\n\n  public List<User> findAll() {\n    return userList;\n  }\n\n  public void addUser(User user) {\n    userList.add(user);\n  }  \n}\n```", "```java\npublic class User implements Serializable {    \n  private String name;\n  private int age;\n\n  public User(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  // ... getters and setters\n}\n```", "```java\n    @Bean\n    public UserService userService() {\n      return new UserServiceImpl();\n    }\n    ```", "```java\n    @Bean\n    public RmiServiceExporter rmiServiceExporter() {\n      RmiServiceExporter rmiServiceExporter = new RmiServiceExporter();\n      rmiServiceExporter.setServiceName(\"userService\");\n      rmiServiceExporter.setServiceInterface(UserService.class);\n      rmiServiceExporter.setService(userService());\n      return rmiServiceExporter;\n    }\n    ```", "```java\npublic interface UserService {\n  public abstract List<User> findAll();\n  public abstract void addUser(User user);\n}\n```", "```java\npublic class User implements Serializable {    \n  private String name;\n  private int age;\n\n  public User(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  // ... getters and setters\n}\n```", "```java\n    @Bean(name=\"userService\")\n    public RmiProxyFactoryBean rmiProxyFactoryBean() {\n      RmiProxyFactoryBean rmiProxyFactoryBean = new RmiProxyFactoryBean();\n      rmiProxyFactoryBean.setServiceUrl(\"rmi://localhost:1099/userService\");\n      rmiProxyFactoryBean.setServiceInterface(UserService.class);\n      return rmiProxyFactoryBean;\n    }\n    ```", "```java\n    @Controller\n    public class UserController {\n      @Autowired\n      private UserService userService;\n    ```", "```java\n    @RequestMapping(\"user_list\")\n    @ResponseBody\n    public void userList() {\n      List<User> userList = userService.findAll();\n    }\n    ```", "```java\npublic interface UserService {\n  public abstract List<User> findAll();\n  public abstract void addUser(User user);\n}\n```", "```java\npublic class UserServiceImpl implements UserService {\n  private List<User> userList = new LinkedList<User>();\n\n  public UserServiceImpl() {\n    User user1 = new User(\"Merlin\", 777);\n    userList.add(user1);\n\n    User user2 = new User(\"Arthur\", 123);\n    userList.add(user2);\n  }\n\n  public List<User> findAll() {\n    return userList;\n  }\n\n  public void addUser(User user) {\n    userList.add(user);\n  }  \n}\n```", "```java\npublic class User implements Serializable {    \n  private String name;\n  private int age;\n\n  public User(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  // ... getters and setters\n}\n```", "```java\n    @Bean\n    public UserService userService() {\n      return new UserServiceImpl();\n    }\n    ```", "```java\n    @Bean(name = \"/userService\")\n    public HttpInvokerServiceExporter httpInvokerServiceExporter() {\n      HttpInvokerServiceExporter exporter = new HttpInvokerServiceExporter();\n      exporter.setService(userService());\n      exporter.setServiceInterface(UserService.class);\n      return exporter;\n    }\n    ```", "```java\npublic interface UserService {\n  public abstract List<User> findAll();\n  public abstract void addUser(User user);\n}\n```", "```java\npublic class User implements Serializable {    \n  private String name;\n  private int age;\n\n  public User(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  // ... getters and setters\n}\n```", "```java\n    @Bean(name=\"userService\")\n    public HttpInvokerProxyFactoryBean userService() {\n      HttpInvokerProxyFactoryBean factory = new HttpInvokerProxyFactoryBean();\n      factory.setServiceUrl(\"http://localhost:8080/http_invoker_server/userService\");\n      factory.setServiceInterface(UserService.class);\n      return factory;\n    }\n    ```", "```java\n    @Controller\n    public class UserController {\n      @Autowired\n      private UserService userService;\n    ```", "```java\n    @RequestMapping(\"user_list\")\n    @ResponseBody\n    public void userList() {\n      List<User> userList = userService.findAll();\n      for (User user : userList) {\n        System.out.println(\"User \" + user.getAge() + \" is \" + user.getAge() + \" years old\");\n      }\n    }\n    ```", "```java\npublic interface UserService {\n  public abstract List<User> findAll();\n  public abstract void addUser(User user);\n}\n```", "```java\npublic class UserServiceImpl implements UserService {\n  private List<User> userList = new LinkedList<User>();\n\n  public UserServiceImpl() {\n    User user1 = new User(\"Merlin\", 777);\n    userList.add(user1);\n\n    User user2 = new User(\"Arthur\", 123);\n    userList.add(user2);\n  }\n\n  public List<User> findAll() {\n    return userList;\n  }\n\n  public void addUser(User user) {\n    userList.add(user);\n  }  \n}\n```", "```java\npublic class User {    \n  private String name;\n  private int age;\n\n  public User(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  // ... getters and setters\n}\n```", "```java\n    @Bean\n    public UserService userService() {\n      return new UserServiceImpl();\n    }\n    ```", "```java\n    @Bean(name = \"/userService\")\n    public HessianServiceExporter hessianServiceExporter () {\n      HessianServiceExporterexporter = new HessianServiceExporter ();\n      exporter.setService(userService());\n      exporter.setServiceInterface(UserService.class);\n      return exporter;\n    }\n    ```", "```java\npublic interface UserService {\n  public abstract List<User> findAll();\n  public abstract void addUser(User user);\n}\n```", "```java\npublic class User implements Serializable {    \n  private String name;\n  private int age;\n\n  public User(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  // ... getters and setters\n}\n```", "```java\n    @Bean(name=\"userService\")\n    public HessianProxyFactoryBean userService() {\n      HessianProxyFactoryBean factory = new HessianProxyFactoryBean();\n      factory.setServiceUrl(\"http://localhost:8080/hessian_server/userService\");\n      factory.setServiceInterface(UserService.class);\n      return factory;\n    }\n    ```", "```java\n    @Controller\n    public class UserController {\n      @Autowired\n      private UserService userService;\n    ```", "```java\n    @RequestMapping(\"user_list\")\n    @ResponseBody\n    public void userList() {\n      List<User> userList = userService.findAll();\n      for (User user : userList) {\n        System.out.println(\"User \" + user.getAge() + \" is \" + user.getAge() + \" years old\");\n      }\n    }\n    ```", "```java\npublic class User {\n\n  private Long id;\n  private String name;\n  private int age;\n\n  public User() {\n  }\n\n  public User(Long id, String name, int age) {\n    this.id = id;\n    this.name = name;\n    this.age = age;\n  }\n\n  // ... getters and setters\n}\n```", "```java\npublic class UserService {\n\n  List<User> userList = new LinkedList<User>();\n\n  public UserService() {\n    User user1 = new User(1L, \"Merlin\", 777);\n    userList.add(user1);\n\n    User user2 = new User(2L, \"Arthur\", 123);\n    userList.add(user2);\n  }\n\n  public List<User> findAll() {\n    return userList;\n  }\n\n  public User findUser(Long id) {\n    for (User user : userList) {\n      if(user.getId().equals(id)) {\n        return user;\n      }\n    }\n    return null;\n  }\n}\n```", "```java\n    <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-core</artifactId>\n      <version>2.4.2</version>\n    </dependency>\n\n    <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-databind</artifactId>\n      <version>2.4.2</version>\n    </dependency>\n    ```", "```java\n    @Bean\n    public UserService userService() {\n      return new UserService();\n    }\n    ```", "```java\n    @RestController\n    @RequestMapping(\"users*\")\n    public class UserController {\n    }\n    ```", "```java\n    @Autowired\n    private UserService userService;\n    ```", "```java\n    @RequestMapping\n    public List<User> userList() {\n      List<User> userList = userService.findAll();\n      return userList;\n    }\n    ```", "```java\n    @RequestMapping(\"/{id}\")\n    public User findUser(@PathVariable(\"id\") Long userId) {\n      User user = userService.findUser(userId);\n      return user;\n    }\n    ```", "```java\n@RequestMapping(value = \"/{id}\", method = RequestMethod.POST)\n```", "```java\npublic class User implements {    \n  private String name;\n  private int age;\n\n  // ... getters and setters\n}\n```", "```java\n    <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-core</artifactId>\n      <version>2.4.2</version>\n    </dependency>\n\n    <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-databind</artifactId>\n      <version>2.4.2</version>\n    </dependency>\n    ```", "```java\n    String url = \"http://localhost:8080/rest_server/users/2\";\n    ```", "```java\n    RestTemplate restTemplate = new RestTemplate();\n    User user = restTemplate.getForObject(url, User.class);\n    ```", "```java\nUser[] userList = restTemplate.getForObject(url, User[].class);\n```"]