["```java\n{\"Stacks\"\n   [{\"StackId\"\n     \"arn:aws:cloudformation:ap-southeast-2:337944750480:stack/DevStack-62031/1\",\n     \"StackStatus\" \"CREATE_IN_PROGRESS\",\n     \"StackName\" \"DevStack-62031\",\n     \"Parameters\" [{\"ParameterKey\" \"DevDB\", \"ParameterValue\" nil}]}]}\n```", "```java\n{\"StackResources\"\n   [{\"PhysicalResourceId\" \"EC2123\",\n     \"ResourceType\" \"AWS::EC2::Instance\"},\n    {\"PhysicalResourceId\" \"EC2456\",\n     \"ResourceType\" \"AWS::EC2::Instance\"}\n    {\"PhysicalResourceId\" \"EC2789\",\n     \"ResourceType\" \"AWS::EC2::Instance\"}\n    {\"PhysicalResourceId\" \"RDS123\",\n     \"ResourceType\" \"AWS::RDS::DBInstance\"}\n    {\"PhysicalResourceId\" \"RDS456\",\n     \"ResourceType\" \"AWS::RDS::DBInstance\"}]}\n```", "```java\n{\"Reservations\"\n   [{\"Instances\"\n     [{\"InstanceId\" \"EC2123\",\n       \"Tags\"\n       [{\"Key\" \"StackType\", \"Value\" \"Dev\"}\n        {\"Key\" \"junkTag\", \"Value\" \"should not be included\"}\n        {\"Key\" \"aws:cloudformation:logical-id\", \"Value\" \"theDude\"}],\n       \"State\" {\"Name\" \"running\"}}\n      {\"InstanceId\" \"EC2456\",\n       \"Tags\"\n       [{\"Key\" \"StackType\", \"Value\" \"Dev\"}\n        {\"Key\" \"junkTag\", \"Value\" \"should not be included\"}\n        {\"Key\" \"aws:cloudformation:logical-id\", \"Value\" \"theDude\"}],\n       \"State\" {\"Name\" \"running\"}}\n      {\"InstanceId\" \"EC2789\",\n       \"Tags\"\n       [{\"Key\" \"StackType\", \"Value\" \"Dev\"}\n        {\"Key\" \"junkTag\", \"Value\" \"should not be included\"}\n        {\"Key\" \"aws:cloudformation:logical-id\", \"Value\" \"theDude\"}],\n       \"State\" {\"Name\" \"running\"}}]}]}\n```", "```java\n{\"DBInstances\"\n   [{\"DBInstanceIdentifier\" \"RDS123\", \"DBInstanceStatus\" \"available\"}]}\n```", "```java\n$ git clone https://github.com/leonardoborges/ClojureReactiveProgramming\n$ cd ClojureReactiveProgramming/code/chapter09/aws-api-stub\n$ lein ring server-headless 3001\n2014-11-23 17:33:37.766:INFO:oejs.Server:jetty-7.6.8.v20121106\n2014-11-23 17:33:37.812:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:3001\nStarted server on port 3001\n\n```", "```java\n{\n    \"Stacks\": [\n        {\n            \"Parameters\": [\n                {\n                    \"ParameterKey\": \"DevDB\",\n                    \"ParameterValue\": null\n                }\n            ],\n            \"StackStatus\": \"CREATE_IN_PROGRESS\",\n            \"StackId\": \"arn:aws:cloudformation:ap-southeast-2:337944750480:stack/DevStack-62031/1\",\n            \"StackName\": \"DevStack-62031\"\n        }\n    ]\n}\n```", "```java\n$ lein new om-start aws-dash\n\n```", "```java\n...\n  :dependencies [[org.clojure/clojure \"1.6.0\"]\n                 [org.clojure/clojurescript \"0.0-2371\"]\n                 [org.clojure/core.async \"0.1.346.0-17112a-alpha\"]\n                 [om \"0.5.0\"]\n                 [com.facebook/react \"0.9.0\"]\n                 [cljs-http \"0.1.20\"]\n                 [com.cognitect/transit-cljs \"0.8.192\"]]\n   :plugins [[lein-cljsbuild \"1.0.3\"]]\n...\n```", "```java\n$ cd aws-dash/dev-resources/public/js/\n$ wget https://raw.githubusercontent.com/Reactive-Extensions/RxJS/master/dist/rx.all.js\n--2014-11-23 18:00:21--  https://raw.githubusercontent.com/Reactive-Extensions/RxJS/master/dist/rx.all.js\nResolving raw.githubusercontent.com... 103.245.222.133\nConnecting to raw.githubusercontent.com|103.245.222.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 355622 (347K) [text/plain]\nSaving to: 'rx.all.js'\n\n100%[========================>] 355,622      966KB/s   in 0.4s\n\n2014-11-23 18:00:24 (966 KB/s) - 'rx.all.js' saved [355622/355622]\n\n```", "```java\n<html>\n  <body>\n    <div id=\"app\"></div>\n    <script src=\"img/react-0.9.0.js\"></script>\n    <script src=\"img/rx.all.js\"></script>\n    <script src=\"img/aws_dash.js\"></script>\n  </body>\n</html>\n```", "```java\n$ cd aws-dash/\n$ lein cljsbuild auto\nCompiling ClojureScript.\nCompiling \"dev-resources/public/js/aws_dash.js\" from (\"src/cljs\" \"dev-resources/tools/repl\")...\nSuccessfully compiled \"dev-resources/public/js/aws_dash.js\" in 0.981 seconds.\n\n```", "```java\n(ns aws-dash.observables\n  (:require-macros [cljs.core.async.macros :refer [go]])\n  (:require [cljs-http.client :as http]\n            [cljs.core.async :refer [<!]]\n            [cognitect.transit :as t]))\n\n(def r (t/reader :json))\n\n(def  aws-endpoint \"http://localhost:3001\")\n(defn aws-uri [path]\n  (str aws-endpoint path))\n```", "```java\n(defn observable-seq [uri transform]\n  (.create js/Rx.Observable\n           (fn [observer]\n             (go (let [response      (<! (http/get uri {:with-credentials? false}))\n                       data          (t/read r (:body response))\n                       transformed   (transform data)]\n                   (doseq [x transformed]\n                     (.onNext observer x))\n                   (.onCompleted observer)))\n             (fn [] (.log js/console \"Disposed\")))))\n```", "```java\n(fn [observer]\n  (go (let [response      (<! (http/get uri \n                                        {:with-credentials? \n                                         false}))\n            data          (t/read r (:body response))\n            transformed   (transform data)]\n        (doseq [x transformed]\n          (.onNext observer x))\n        (.onCompleted observer))))\n```", "```java\n(defn describe-stacks []\n  (observable-seq (aws-uri \"/cloudFormation/describeStacks\")\n                  (fn [data]\n                    (map (fn [stack] {:stack-id   (stack \"StackId\")\n                                     :stack-name (stack \"StackName\")})\n                         (data \"Stacks\")))))\n```", "```java\n({:stack-id \"arn:aws:cloudformation:ap-southeast-2:337944750480:stack/DevStack-62031/1\", :stack-name \"DevStack-62031\"})\n```", "```java\n(defn describe-stack-resources [stack-name]\n  (observable-seq (aws-uri \"/cloudFormation/describeStackResources\")\n                  (fn [data]\n                    (map (fn [resource]\n                           {:resource-id (resource \"PhysicalResourceId\")\n                            :resource-type (resource \"ResourceType\")} )\n                         (data \"StackResources\")))))\n```", "```java\n({:resource-id \"EC2123\", :resource-type \"AWS::EC2::Instance\"}\n {:resource-id \"EC2456\", :resource-type \"AWS::EC2::Instance\"}\n {:resource-id \"EC2789\", :resource-type \"AWS::EC2::Instance\"}\n {:resource-id \"RDS123\", :resource-type \"AWS::RDS::DBInstance\"}\n {:resource-id \"RDS456\", :resource-type \"AWS::RDS::DBInstance\"})\n```", "```java\n(defn describe-instances [instance-ids]\n  (observable-seq (aws-uri \"/ec2/describeInstances\")\n                  (fn [data]\n                    (let [instances (mapcat (fn [reservation]\n                                              (reservation \"Instances\"))\n                                            (data \"Reservations\"))]\n                      (map (fn [instance]\n                             {:instance-id  (instance \"InstanceId\")\n                              :type        \"EC2\"\n                              :status      (get-in instance [\"State\" \"Name\"])})\n                           instances)))))\n\n(defn describe-db-instances [instance-id]\n  (observable-seq (aws-uri (str \"/rds/describeDBInstances/\" instance-id))\n                  (fn [data]\n                    (map (fn [instance]\n                           {:instance-id (instance \"DBInstanceIdentifier\")\n                            :type        \"RDS\"\n                            :status      (instance \"DBInstanceStatus\")})\n                         (data \"DBInstances\")))))\n```", "```java\n({:instance-id \"EC2123\", :type \"EC2\", :status \"running\"} ...)\n({:instance-id \"RDS123\", :type \"RDS\", :status \"available\"} ...)\n```", "```java\n(defn stack-resources []\n  (-> (describe-stacks)\n      (.map #(:stack-name %))\n      (.flatMap describe-stack-resources)))\n```", "```java\n(defn ec2-instance-status [resources]\n  (-> resources\n      (.filter #(= (:resource-type %) \"AWS::EC2::Instance\"))\n      (.map #(:resource-id %))\n      (.reduce conj [])\n      (.flatMap describe-instances)))\n\n(defn rds-instance-status [resources]\n  (-> resources\n      (.filter #(= (:resource-type %) \"AWS::RDS::DBInstance\"))\n      (.map #(:resource-id %))\n      (.flatMap describe-db-instances)))\n```", "```java\n(ns aws-dash.core\n  (:require [aws-dash.observables :as obs]\n            [om.core :as om :include-macros true]\n            [om.dom :as dom :include-macros true]))\n\n(enable-console-print!)\n\n(def app-state (atom {:instances []}))\n\n(defn instance-view [{:keys [instance-id type status]} owner]\n  (reify\n    om/IRender\n    (render [this]\n      (dom/tr nil\n              (dom/td nil instance-id)\n              (dom/td nil type)\n              (dom/td nil status)))))\n\n(defn instances-view [instances owner]\n  (reify\n    om/IRender\n    (render [this]\n      (apply dom/table #js {:style #js {:border \"1px solid black;\"}}\n             (dom/tr nil\n                     (dom/th nil \"Id\")\n                     (dom/th nil \"Type\")\n                     (dom/th nil \"Status\"))\n             (om/build-all instance-view instances)))))\n\n(om/root\n (fn [app owner]\n   (dom/div nil\n            (dom/h1 nil \"Stack Resource Statuses\")\n            (om/build instances-view (:instances app))))\n app-state\n {:target (. js/document (getElementById \"app\"))})\n```", "```java\nlein repl\nCompiling ClojureScript.\nnREPL server started on port 58209 on host 127.0.0.1 - nrepl://127.0.0.1:58209\nREPL-y 0.3.5, nREPL 0.2.6\nClojure 1.6.0\nJava HotSpot(TM) 64-Bit Server VM 1.8.0_25-b17\n Docs: (doc function-name-here)\n (find-doc \"part-of-name-here\")\n Source: (source function-name-here)\n Javadoc: (javadoc java-object-or-class-here)\n Exit: Control+D or (exit) or (quit)\n Results: Stored in vars *1, *2, *3, an exception in *e\n\nuser=> (run)\n2015-02-08 21:02:34.503:INFO:oejs.Server:jetty-7.6.8.v20121106\n2015-02-08 21:02:34.545:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:3000\n#<Server org.eclipse.jetty.server.Server@35bc3669>\n\n```", "```java\n(def resources (obs/stack-resources))\n\n(.subscribe (-> (.merge  (obs/rds-instance-status resources)\n                         (obs/ec2-instance-status resources))\n                (.reduce conj []))\n            #(swap! app-state assoc :instances %))\n```", "```java\n$ lein new library-design\n\n```", "```java\n...\n:dependencies [[org.clojure/clojure \"1.6.0\"]\n               [com.leonardoborges/imminent \"0.1.0\"]\n               [com.netflix.rxjava/rxjava-clojure \"0.20.7\"]\n               [org.clojure/core.async \"0.1.346.0-17112a-alpha\"]\n               [uncomplicate/fluokitten \"0.3.0\"]]\n...\n```", "```java\n$ lein repl\n\n```", "```java\n(require '[imminent.core :as i]\n '[rx.lang.clojure.core :as rx]\n '[clojure.core.async :as async])\n\n(def  repl-out *out*)\n(defn prn-to-repl [& args]\n (binding [*out* repl-out]\n (apply prn args)))\n(-> (i/const-future 31)\n (i/map #(* % 2))\n (i/on-success #(prn-to-repl (str \"Value: \" %))))\n\n(as-> (rx/return 31) obs\n (rx/map #(* % 2) obs)\n (rx/subscribe obs #(prn-to-repl (str \"Value: \" %))))\n\n(def c        (chan))\n(def mapped-c (async/map< #(* % 2) c))\n\n(async/go (async/>! c 31))\n(async/go (prn-to-repl (str \"Value: \" (async/<! mapped-c))))\n\n\"Value: 62\"\n\"Value: 62\"\n\"Value: 62\"\n\n```", "```java\n(defprotocol Functor\n  (fmap [fv g]))\n```", "```java\n(= (fmap a-functor identity)\n   (identity a-functor))\n```", "```java\n(= (fmap a-functor (comp f g))\n   (fmap (fmap a-functor g) f))\n```", "```java\n(count nil) ;; 0\n```", "```java\n(ns library-design.option\n  (:require [uncomplicate.fluokitten.protocols :as fkp]\n            [uncomplicate.fluokitten.core :as fkc]\n            [uncomplicate.fluokitten.jvm :as fkj]\n            [imminent.core :as I]))\n\n(def pirates [{:name \"Jack Sparrow\"    :born 1700 :died 1740 :ship \"Black Pearl\"}\n              {:name \"Blackbeard\"      :born 1680 :died 1750 :ship \"Queen Anne's Revenge\"}\n              {:name \"Hector Barbossa\" :born 1680 :died 1740 :ship nil}])\n\n(defn pirate-by-name [name]\n  (->> pirates\n       (filter #(= name (:name %)))\n       first))\n\n(defn age [{:keys [born died]}]\n  (- died born))\n```", "```java\n  (-> (pirate-by-name \"Jack Sparrow\")\n      age) ;; 40\n```", "```java\n(-> (pirate-by-name \"Davy Jones\")\n      age) ;; NullPointerException   clojure.lang.Numbers.ops (Numbers.java:961)\n```", "```java\n(defrecord Some [v])\n\n(defrecord None [])\n\n(defn option [v]\n  (if v\n    (Some. v)\n    (None.)))\n```", "```java\n(extend-protocol fkp/Functor\n  Some\n  (fmap [f g]\n    (Some. (g (:v f))))\n  None\n  (fmap [_ _]\n    (None.)))\n```", "```java\n(->> (option (pirate-by-name \"Jack Sparrow\"))\n     (fkc/fmap age)) ;; #library_design.option.Some{:v 40}\n\n(->> (option (pirate-by-name \"Davy Jones\"))\n     (fkc/fmap age)) ;; #library_design.option.None{}\n```", "```java\n(->> (option (pirate-by-name \"Jack Sparrow\"))\n     (fkc/fmap age)\n     (fkc/fmap inc)\n     (fkc/fmap #(* 2 %))) ;; #library_design.option.Some{:v 82}\n\n(->> (option (pirate-by-name \"Davy Jones\"))\n     (fkc/fmap age)\n     (fkc/fmap inc)\n     (fkc/fmap #(* 2 %))) ;; #library_design.option.None{}\n```", "```java\n(some-> (pirate-by-name \"Davy Jones\")\n        age\n        inc\n        (* 2)) ;; nil\n```", "```java\n(->> (i/future (pirate-by-name \"Jack Sparrow\"))\n     (fkc/fmap age)\n     (fkc/fmap inc)\n     (fkc/fmap #(* 2 %))) ;; #<Future@30518bfc: #<Success@39bd662c: 82>>\n```", "```java\n;; Identity\n(= (fkc/fmap identity (option 1))\n   (identity (option 1))) ;; true\n\n;; Composition\n(= (fkc/fmap (comp identity inc) (option 1))\n   (fkc/fmap identity (fkc/fmap inc (option 1)))) ;; true\n```", "```java\n(defn avg [& xs]\n  (float (/ (apply + xs) (count xs))))\n\n(let [a (some-> (pirate-by-name \"Jack Sparrow\") age)\n      b (some-> (pirate-by-name \"Blackbeard\") age)\n      c (some-> (pirate-by-name \"Hector Barbossa\") age)]\n  (avg a b c)) ;; 56.666668\n```", "```java\n(let [a (some-> (pirate-by-name \"Jack Sparrow\") age)\n      b (some-> (pirate-by-name \"Davy Jones\") age)\n      c (some-> (pirate-by-name \"Hector Barbossa\") age)]\n  (avg a b c)) ;; NullPointerException   clojure.lang.Numbers.ops (Numbers.java:961)\n```", "```java\n(let [a (some-> (pirate-by-name \"Jack Sparrow\") age)\n      b (some-> (pirate-by-name \"Davy Jones\") age)\n      c (some-> (pirate-by-name \"Hector Barbossa\") age)]\n  (when (and a b c)\n    (avg a b c))) ;; nil\n```", "```java\n(defprotocol Applicative\n  (pure [av v])\n  (fapply [ag av]))\n```", "```java\n(extend-protocol fkp/Applicative\n  Some\n  (pure [_ v]\n    (Some. v))\n\n  (fapply [ag av]\n    (if-let [v (:v av)]\n      (Some. ((:v ag) v))\n      (None.)))\n\n  None\n  (pure [_ v]\n    (Some. v))\n\n  (fapply [ag av]\n    (None.)))\n```", "```java\n(fkc/fapply (option inc) (option 2))\n;; #library_design.option.Some{:v 3}\n\n(fkc/fapply (option nil) (option 2))\n;; #library_design.option.None{}\n```", "```java\n(def age-option (comp (partial fkc/fmap age) option pirate-by-name))\n\n(let [a (age-option \"Jack Sparrow\")\n      b (age-option \"Blackbeard\")\n      c (age-option \"Hector Barbossa\")]\n  (fkc/<*> (option (fkj/curry avg 3))\n           a b c))\n;; #library_design.option.Some{:v 56.666668}\n```", "```java\n(def curried-1 (fkj/curry + 2))\n(def curried-2 (fn [a]\n                 (fn [b]\n                   (+ a b))))\n\n((curried-1 10) 20) ;; 30\n((curried-2 10) 20) ;; 30\n```", "```java\n (defn alift\n  \"Lifts a n-ary function `f` into a applicative context\"\n  [f]\n  (fn [& as]\n    {:pre  [(seq as)]}\n    (let [curried (fkj/curry f (count as))]\n      (apply fkc/<*>\n             (fkc/fmap curried (first as))\n             (rest as)))))\n```", "```java\n(let [a (age-option \"Jack Sparrow\")\n      b (age-option \"Blackbeard\")\n      c (age-option \"Hector Barbossa\")]\n  ((alift avg) a b c))\n;; #library_design.option.Some{:v 56.666668}\n```", "```java\n((alift avg) (age-option \"Jack Sparrow\")\n             (age-option \"Blackbeard\")\n             (age-option \"Hector Barbossa\"))\n;; #library_design.option.Some{:v 56.666668}\n\n((alift avg) (age-option \"Jack Sparrow\")\n             (age-option \"Davy Jones\")\n             (age-option \"Hector Barbossa\"))\n;; #library_design.option.None{}\n```", "```java\n((alift avg) (i/future (some-> (pirate-by-name \"Jack Sparrow\") age))\n             (i/future (some-> (pirate-by-name \"Blackbeard\") age))\n             (i/future (some-> (pirate-by-name \"Hector Barbossa\") age)))\n;; #<Future@17b1be96: #<Success@16577601: 56.666668>>\n```", "```java\n(defn median [& ns]\n  (let [ns (sort ns)\n        cnt (count ns)\n        mid (bit-shift-right cnt 1)]\n    (if (odd? cnt)\n      (nth ns mid)\n      (/ (+ (nth ns mid) (nth ns (dec mid))) 2))))\n\n(defn std-dev [& samples]\n  (let [n (count samples)\n\tmean (/ (reduce + samples) n)\n\tintermediate (map #(Math/pow (- %1 mean) 2) samples)]\n    (Math/sqrt\n     (/ (reduce + intermediate) n))))\n```", "```java\n  (let  [a       (some-> (pirate-by-name \"Jack Sparrow\")    age)\n         b       (some-> (pirate-by-name \"Blackbeard\")      age)\n         c       (some-> (pirate-by-name \"Hector Barbossa\") age)\n         avg     (avg a b c)\n         median  (median a b c)\n         std-dev (std-dev a b c)]\n    {:avg avg\n     :median median\n     :std-dev std-dev})\n\n  ;; {:avg 56.666668,\n  ;;  :median 60,\n  ;;  :std-dev 12.472191289246473}\n```", "```java\n  (let  [a       (some-> (pirate-by-name \"Jack Sparrow\")    age)\n         b       (some-> (pirate-by-name \"Davy Jones\")      age)\n         c       (some-> (pirate-by-name \"Hector Barbossa\") age)\n         avg     (avg a b c)\n         median  (median a b c)\n         std-dev (std-dev a b c)]\n    {:avg avg\n     :median median\n     :std-dev std-dev})\n  ;; NullPointerException   clojure.lang.Numbers.ops (Numbers.java:961)\n```", "```java\n  (let  [a       (some-> (pirate-by-name \"Jack Sparrow\")    age)\n         b       (some-> (pirate-by-name \"Davy Jones\")      age)\n         c       (some-> (pirate-by-name \"Hector Barbossa\") age)\n         avg     (when (and a b c) (avg a b c))\n         median  (when (and a b c) (median a b c))\n         std-dev (when (and a b c) (std-dev a b c))]\n    (when (and a b c)\n      {:avg avg\n       :median median\n       :std-dev std-dev}))\n  ;; nil\n```", "```java\n(defprotocol Monad\n  (bind [mv g]))\n```", "```java\n(extend-protocol fkp/Monad\n  Some\n  (bind [mv g]\n    (g (:v mv)))\n\n  None\n  (bind [_ _]\n    (None.)))\n```", "```java\n(def opt-ctx (None.))\n\n(fkc/bind (age-option \"Jack Sparrow\")\n          (fn [a]\n            (fkc/bind (age-option \"Blackbeard\")\n                      (fn [b]\n                        (fkc/bind (age-option \"Hector Barbossa\")\n                                  (fn [c]\n                                    (fkc/pure opt-ctx \n                                              (+ a b c))))))))\n;; #library_design.option.Some{:v 170.0}\n```", "```java\n(fkc/mdo [a (age-option \"Jack Sparrow\")\n          b (age-option \"Blackbeard\")\n          c (age-option \"Hector Barbossa\")]\n         (fkc/pure opt-ctx  (+ a b c)))\n;; #library_design.option.Some{:v 170.0}\n```", "```java\n(require '[clojure.walk :as w])\n\n(w/macroexpand-all '(fkc/mdo [a (age-option \"Jack Sparrow\")\n                              b (age-option \"Blackbeard\")\n                              c (age-option \"Hector Barbossa\")]\n                             (option  (+ a b c))))\n;; (uncomplicate.fluokitten.core/bind\n;;  (age-option \"Jack Sparrow\")\n;;  (fn*\n;;   ([a]\n;;    (uncomplicate.fluokitten.core/bind\n;;     (age-option \"Blackbeard\")\n;;     (fn*\n;;      ([b]\n;;       (uncomplicate.fluokitten.core/bind\n;;        (age-option \"Hector Barbossa\")\n;;        (fn* ([c] (fkc/pure opt-ctx (+ a b c)))))))))))\n```", "```java\n(def avg-opt     (comp option avg))\n(def median-opt  (comp option median))\n(def std-dev-opt (comp option std-dev))\n```", "```java\n(fkc/mdo [a       (age-option \"Jack Sparrow\")\n          b       (age-option \"Blackbeard\")\n          c       (age-option \"Hector Barbossa\")\n          avg     (avg-opt a b c)\n          median  (median-opt a b c)\n          std-dev (std-dev-opt a b c)]\n         (option {:avg avg\n                  :median median\n                  :std-dev std-dev}))\n;; #library_design.option.Some{:v {:avg 56.666668,\n;;                                 :median 60,\n;;                                 :std-dev 12.472191289246473}}\n```", "```java\n(fkc/mdo [a       (age-option \"Jack Sparrow\")\n          b       (age-option \"Blackbeard\")\n          c       (age-option \"Hector Barbossa\")\n          avg     (avg-opt a b c)\n          median  (median-opt a b c)\n          std-dev (std-dev-opt a b c)]\n         (fkc/pure opt-ctx {:avg avg\n                  :median median\n                  :std-dev std-dev}))\n;; #library_design.option.None{}\n```", "```java\n(def avg-fut     (comp i/future-call avg))\n(def median-fut  (comp i/future-call median))\n(def std-dev-fut (comp i/future-call std-dev))\n\n(fkc/mdo [a       (i/future (some-> (pirate-by-name \"Jack Sparrow\") age))\n          b       (i/future (some-> (pirate-by-name \"Blackbeard\") age))\n          c       (i/future (some-> (pirate-by-name \"Hector Barbossa\") age))\n          avg     (avg-fut a b c)\n          median  (median-fut a b c)\n          std-dev (std-dev-fut a b c)]\n         (i/const-future {:avg avg\n                          :median median\n                          :std-dev std-dev}))\n;; #<Future@3fd0b0d0: #<Success@1e08486b: {:avg 56.666668,\n;;                                         :median 60,\n;;                                         :std-dev 12.472191289246473}>>\n```"]