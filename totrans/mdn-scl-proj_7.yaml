- en: Building a Recommendation Engine
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建推荐引擎
- en: Millions of people order items from Amazon, where they save money and time.
    Recommendation algorithms are learned from customers, ordering preferences and
    bring them tailored you may also like recommendations, which are suggestions that
    help the customer update their cart or add interesting items to a wishlist for
    later.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数百万人在亚马逊上订购商品，在那里他们可以节省金钱和时间。推荐算法是从客户的订单偏好中学习得来的，它们为你提供个性化的你可能也会喜欢的推荐，这些建议有助于客户更新购物车或添加有趣的商品到愿望清单以备将来使用。
- en: Building our own recommendations engine is a learning journey, where we hit
    several objectives along the way. At the problem formulation stage, we learn that
    recommendations are a collaborative filtering machine learning problem. We will
    take advantage of the Spark ML collaborative filtering algorithm to implement
    a recommendations engine that will generate ratings-based recommendations.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 构建我们自己的推荐引擎是一个学习之旅，在这个过程中，我们会达到几个目标。在问题定义阶段，我们了解到推荐是一个协同过滤的机器学习问题。我们将利用Spark
    ML协同过滤算法来实现一个基于评分的推荐引擎。
- en: Netflix is famous for its movies where you might enjoy the recommendation feature.
    Back in 2006, Netflix announced a prize of $1 million for the best enhancement
    over their aging **CineMatch** movie recommendation algorithm. This trendsetting competition
    spawned some of the best advances in machine learning. Working on a treasure trove
    of Netflix-released movie ratings, several crack teams of coders across the world
    battled for the top prize. Their goal—to build an algorithm that would predict
    user ratings (and hence better recommendations) up to 10% better than CineMatch.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Netflix因其电影推荐功能而闻名，你可能喜欢它的推荐功能。回到2006年，Netflix宣布了一项100万美元的奖金，用于对其老化的**CineMatch**电影推荐算法的最佳改进。这场开创性的比赛催生了机器学习领域的一些最佳进展。在全球各地，几个顶尖的编码团队在Netflix发布的电影评分宝库中竞争最高奖项。他们的目标是构建一个算法，该算法能够预测用户评分（从而提供更好的推荐），比CineMatch高出10%。
- en: Since then, algorithms that make recommendations about **items** to users have
    come a long way. In this chapter, we set out to build a recommendation system
    with Scala and Apache Spark. What problem is this recommendation system going
    to solve? This and other questions are going to be answered shortly.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 自那时起，为用户推荐**商品**的算法已经取得了长足的进步。在本章中，我们将使用Scala和Apache Spark构建一个推荐系统。这个推荐系统将要解决什么问题？这个问题以及其他问题将很快得到解答。
- en: 'The overarching learning objective of this chapter is to implement a recommendations
    engine. The following list is a comprehensive breakdown of individual learning
    objectives:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要学习目标是实现一个推荐引擎。以下列表是对各个学习目标的全面分解：
- en: Learning the ropes of recommendations; recommendation systems are also known
    as **recommender systems**.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习推荐的入门知识；推荐系统也被称为**推荐器系统**。
- en: Learning by example—understand (with screenshots) that Amazon's on-site recommendations
    are double-edged; they enhance customer satisfaction and ramp up sales revenue
    for Amazon.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以例学习——通过截图了解亚马逊的现场推荐是双刃剑；它们提高了客户满意度，并为亚马逊增加了销售收益。
- en: Given the plethora of product choices on offer on an online store, customers
    need all the help they can get. In this chapter, we will learn that recommendations
    can help people make these choices better and faster. This is good for customers
    and good for an online retailer that wants to convert prospects to clients.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线商店提供的众多产品选择中，顾客需要尽可能多的帮助。在本章中，我们将学习到推荐可以帮助人们更好地、更快地做出选择。这对顾客和想要将潜在客户转化为客户的在线零售商都有好处。
- en: The next tangible learning objective is understanding which types of recommendations
    are implicit and which ones are not.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下一个可衡量的学习目标是理解哪些推荐是隐式的，哪些不是。
- en: Learning about the different kinds of recommendations and what they can do is
    good. We want to go further by learning what kinds of data do not need many details.
    Why? We want to set up datasets to model a recommendation system and match this
    dataset with a suitable algorithm that only needs a relationship between users
    and products. Nothing more, nothing less. Such an algorithm that fits the bill
    is the collaborative filtering algorithm.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解不同类型的推荐及其功能是好的。我们希望通过学习哪些类型的数据不需要太多细节。为什么？我们想要建立数据集来模拟推荐系统，并将这个数据集与一个只需要用户和产品之间关系的合适算法相匹配。不多也不少。符合这一要求的算法就是协同过滤算法。
- en: What collaborative filtering can achieve is a work in progress. We will only
    learn more about the algorithm if we create custom datasets, build a collaborative
    filtering algorithm trained on the data, and see what the outcome is.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协同过滤可以实现的是什么，这是一个正在进行中的工作。只有当我们创建自定义数据集，构建基于数据的协同过滤算法，并查看结果时，我们才能更多地了解该算法。
- en: We will learn how to leverage the model-based collaborative filtering algorithm
    provided by Spark ML to build a recommendation system. We will learn that our
    implemented recommendation system, like others in its class, helps recommend products
    based on other customers preferences.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将学习如何利用Spark ML提供的基于模型的协同过滤算法来构建推荐系统。我们将了解到，我们实现的推荐系统，就像其同类系统一样，基于其他客户的偏好来推荐产品。
- en: We will start with the *Problem overviews* section.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从*问题概述*部分开始。
- en: 'In this chapter we will cover the following topics:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Problem overviews
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题概述
- en: Detailed overview
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 详细概述
- en: Implementation and deployment
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施和部署
- en: Problem overviews
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题概述
- en: 'We will organize this section into overviews on select topics in a sequential
    order. Here are the topics we are going to cover:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按顺序组织本节，涵盖选定主题的概述。以下是我们要讨论的主题：
- en: Recommendations on Amazon
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊的推荐
- en: Recommendation systems, also known as recommender systems or recommendation
    engines
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐系统，也称为推荐系统或推荐引擎
- en: 'Categorizing recommendations, such as:'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对推荐进行分类，例如：
- en: Implicit recommendations
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式推荐
- en: Explicit recommendations
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确推荐
- en: Recommendations for machine learning
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习的推荐
- en: Problem formulation for explicit recommendations—the details
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确推荐的公式化问题——细节
- en: Weapon sales leads and past sales data—the details
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 武器销售线索和过去销售数据——细节
- en: Each topic will be reviewed with an explanation. We will start with the first
    topic—*Recommendations on Amazon*.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 每个主题都将进行回顾和解释。我们将从第一个主题——*亚马逊的推荐*开始。
- en: Recommendations on Amazon
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 亚马逊的推荐
- en: This topic is presented in two parts—a *Brief overview* and a *Detailed overview*.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这个主题分为两部分——*简要概述*和*详细概述*。
- en: Brief overview
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简要概述
- en: This topic (details are laid out in the *Detailed overview* section) will lay
    out a roadmap, starting with a generalized understanding of recommendations from
    a non-machine learning perspective. We will show you what recommendations on Amazon
    look like with supporting illustrations. Not only that, we will highlight the
    fact that powerful machine learning algorithms power Amazon's recommendation systems
    to help users make products choices more easily.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这个主题（细节在*详细概述*部分中展开）将制定一个路线图，从非机器学习角度对推荐的一般理解开始。我们将通过支持插图向你展示亚马逊的推荐看起来是什么样子。不仅如此，我们还将强调强大的机器学习算法如何为亚马逊的推荐系统提供动力，帮助用户更轻松地做出产品选择。
- en: The brief overview of this topic is behind us now. Its detailed overview follows.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这个主题的简要概述已经过去了。其详细概述如下。
- en: Detailed overview
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 详细概述
- en: 'To build a recommendation system, the approach we must take focuses on understanding
    recommendations at a conceptual level. Examples of questions providing insights
    into recommendations are as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建推荐系统，我们必须采取的方法是专注于在概念层面上理解推荐。以下是一些提供对推荐洞察的问题示例：
- en: What are the recommendations?
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐是什么？
- en: What are two important recommendation types?
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两种重要的推荐类型是什么？
- en: Whether you are an online retailer looking to make a recommendation engine work
    for you in profitable ways, or someone exploring Spark ML's powerful recommendation
    algorithms from up close, this section will get you started.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是希望以盈利方式使推荐引擎为你服务的在线零售商，还是希望近距离探索Spark ML强大的推荐算法的人，本节将帮助你入门。
- en: We will then zero in on suitable machine learning techniques that we can leverage
    to build a recommendation system.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将专注于适合的机器学习技术，以便我们可以利用这些技术构建一个推荐系统。
- en: Jeff Bezos, multi-billion dollar business, [Amazon.com](http://Amazon.com),
    continues to report healthy sales numbers. Recommendation systems have always
    facilitated increasing streams of revenue for Amazon. These systems are backed
    by machine learning recommendation algorithms that help deliver customer-specific
    recommendations in real time. Without question, recommendations are an integral
    part of the Amazon landscape, playing a part in every aspect of a customer's purchase
    process.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 杰夫·贝索斯，拥有数十亿美元的商业帝国，[Amazon.com](http://Amazon.com)，继续报告健康的销售数字。推荐系统始终为亚马逊带来了增加的收入流。这些系统由机器学习推荐算法支持，帮助实时提供针对特定客户的推荐。毫无疑问，推荐是亚马逊景观的一个组成部分，在客户购买过程的各个方面都发挥着作用。
- en: 'There are two categories of Amazon recommendations:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊的推荐分为两大类：
- en: On-site recommendations
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 站内推荐
- en: Off-site recommendations
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 站外推荐
- en: We will only focus on on-site recommendations. Both on-site and off-site recommendations
    are big revenue earners for Amazon. Off-site recommendations are not covered in
    this chapter, however, the reader is encouraged to probe this side of Amazon's
    recommendations landscape. We have a question or two regarding off-site recommendations
    in the very last section of this chapter.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将只关注站内推荐。站内和站外推荐都是亚马逊的大收入来源。然而，本章不涵盖站外推荐，但鼓励读者探索亚马逊推荐景观的这一方面。在本章的最后部分，我们有两个关于站外推荐的问题。
- en: On-site recommendations
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 站内推荐
- en: 'Two main flavors of on-site recommendations are readily available by simply
    clicking on the link XYZ''s Amazon.com. These are:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通过简单地点击XYZ的Amazon.com链接，可以轻松获得两种主要的站内推荐类型。这些是：
- en: '**Recommended for you, XYZ**:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为您推荐，XYZ**：'
- en: 'The Recommended for you**,** **XYZ** link looks like this:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: “为您推荐，XYZ”链接看起来是这样的：
- en: '![](img/3a9f5769-066b-4049-9138-054da4120fef.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a9f5769-066b-4049-9138-054da4120fef.jpg)'
- en: Observe the Recommended for you, XYZ link
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 观察“为您推荐，XYZ”链接下的推荐内容
- en: It contains Amazon's recommendations of products that it thinks you are likely
    to click on and buy. How did these recommendations come to you? This question
    has a two-part answer. First, recommendation algorithms tracked your browsing
    history. Secondly, this will take you to a page showing a list of products from
    various categories.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这包含了亚马逊认为您可能会点击并购买的产品推荐。这些推荐是如何到达您的呢？这个问题有两个答案。首先，推荐算法跟踪了您的浏览历史。其次，这将带您到一个显示来自各个类别产品列表的页面。
- en: '**Your recently viewed items and featured recommendations**:'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**您最近查看的商品和特色推荐**：'
- en: 'Another related example of recommendations is shown as follows. These recommendations,
    according to Amazon''s machine learning recommendations system, are in several
    categories, such as:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个相关的推荐示例如下。根据亚马逊的机器学习推荐系统，这些推荐分布在几个类别中，例如：
- en: '**Inspired by your browsing history**:'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**根据您的浏览历史**：'
- en: 'The following page is reflective of the Inspired by your browsing history type
    of recommendations. We can see the power of Amazon''s recommendation systems at
    work:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下页面反映了“根据您的浏览历史”类型的推荐。我们可以看到亚马逊推荐系统的强大作用：
- en: '![](img/e0ca6623-ec07-4e2c-a427-7a3681c16b36.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0ca6623-ec07-4e2c-a427-7a3681c16b36.jpg)'
- en: Observe the items under Inspired by your browsing history link
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 观察在“根据您的浏览历史”链接下的商品
- en: '**Inspired by your purchases**:'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**根据您的购买**：'
- en: 'Once again, the goal is simple—place a palette of products in front of the
    customer. This makes it easy for the customer to buy a different product, in this
    case, a book that is closely related to books falling under a category of interest.
    How did Amazon come up with the palette of books under the Inspired by your browsing
    history category? The recommendation system brings you products that you showed
    an interest in, at some point in time:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，目标很简单——将一系列产品摆放在客户面前。这使得客户能够轻松地购买不同产品，在这种情况下，是一本与兴趣类别下的书籍密切相关的新书。亚马逊是如何在“根据您的浏览历史”类别下提出这些书籍的系列的呢？推荐系统在某个时间点向您推荐了您可能感兴趣的产品：
- en: '![](img/61bce2f3-3e11-49ae-bfb1-1f8bc7a561f8.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/61bce2f3-3e11-49ae-bfb1-1f8bc7a561f8.jpg)'
- en: Observe the items under Inspired by your purchases link
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 观察在“根据您的购买”链接下的商品
- en: '**Frequently bought together**:'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**经常一起购买**：'
- en: This type of recommendation is even more interesting. Say you click on the *Lego
    Mindstorms* book, the one featured in the following screenshot. We are taken to
    a new page that has **Frequently bought together** recommendation.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的推荐更有趣。比如说，您点击了*Lego Mindstorms*书籍，如下截图所示。我们被带到一个新的页面，该页面有**经常一起购买**的推荐。
- en: 'The following screenshot displays the Frequently bought together recommendation:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了**经常一起购买**的推荐：
- en: '![](img/c5ee1f36-d976-49cd-a41b-a9ec8311184c.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5ee1f36-d976-49cd-a41b-a9ec8311184c.jpg)'
- en: Observe the Frequently bought together link
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 观察经常一起购买链接
- en: '**Customers who also bought this item**:'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**购买此商品的用户**：'
- en: 'This type of recommendation is Amazon''s up-sell and cross-sell recommendation
    feature at work. The recommendation system is offering products that other customers
    bought together when they clicked on the *Lego Mindstorm* book you just clicked:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的推荐是亚马逊的向上销售和交叉销售推荐功能。当您点击刚刚点击的*Lego Mindstorm*书籍时，推荐系统会提供其他客户一起购买的产品：
- en: '![](img/6172b4f2-1ddf-4167-8ff5-5250c21d16ce.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6172b4f2-1ddf-4167-8ff5-5250c21d16ce.jpg)'
- en: Observe the items under Customer who bought this item also bought link
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 观察客户购买此商品也购买了链接
- en: The next *Problem overviews* section that follows is *Recommendations with machine
    learning*. Recommendations on Amazon are tied to powerful machine learning-based
    recommendation systems. The topic that follows is an attempt at describing a recommendation
    system from a high-level, non-machine learning perspective. Therefore, we want
    to know what a recommendations system looks like at a high-level and the different
    types of recommendations that such a system may or may not handle.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个*问题概述*部分是*基于机器学习的推荐*。亚马逊的推荐与基于强大机器学习推荐系统相关联。接下来的主题是尝试从高级、非机器学习角度描述推荐系统。因此，我们想知道在高级层面，这样的系统可能或可能不处理的推荐类型。
- en: Attaining this level of understanding of recommendations, and recommendation
    systems will pave the way for a further exploration into the realm of recommendations
    as a problem in some subset of the machine learning space.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对推荐以及推荐系统达到这种理解水平，将为进一步探索机器学习空间中某些子集的推荐问题领域铺平道路。
- en: 'All the flavors of recommendation share the following goals:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 所有类型的推荐都共享以下目标：
- en: Customer satisfaction
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户满意度
- en: Increasing sales revenue for Amazon
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高亚马逊的销售收入
- en: We will take up each recommendation flavor in turn. We will take up the most
    important on-site recommendation first, which is the **Recommended for you, XYZ**
    page.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将依次介绍每种推荐类型。首先介绍最重要的现场推荐，即**为您推荐，XYZ**页面。
- en: That said, we will step into the next topic, *Recommendation systems*.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，我们将进入下一个主题，*推荐系统*。
- en: Recommendation systems
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐系统
- en: In the previous overview topic, we explored the salient aspects of recommendation
    and recommendation systems at Amazon. Let's attempt to bring some of that together
    and put together a definition of recommendation systems.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的概述主题中，我们探讨了亚马逊推荐和推荐系统的显著方面。让我们尝试将其中一些内容结合起来，并给出推荐系统的定义。
- en: Definition
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义
- en: Recommendation systems can be defined as software applications that draw out
    and learn from data like such as preferences, their actions (clicks, for example),
    browsing history, and generated recommendations, which are products that the system
    determines are appealing to the user in the immediate future.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统可以被定义为从数据中提取并学习，如偏好、他们的行为（例如点击）、浏览历史和生成的推荐，这些是系统认为用户在近期内可能感兴趣的产品。
- en: 'The following diagram is representative of a typical recommendation system:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图示代表了一个典型的推荐系统：
- en: '![](img/e61fff20-b59d-49d3-9a25-0980d2c2d1de.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e61fff20-b59d-49d3-9a25-0980d2c2d1de.png)'
- en: Recommendation system
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统
- en: 'In the preceding diagram, can be thought of as a recommendation ecosystem,
    where the recommendation system is at the heart of it. This system needs three
    entities:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，可以将其视为一个推荐生态系统，其中推荐系统是其核心。这个系统需要三个实体：
- en: '**Users**'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户**'
- en: '**Products**'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品**'
- en: '**Transactions between users and products where transactions contain feedback
    from users about products**'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户和产品之间的交易，其中交易包含用户对产品的反馈**'
- en: A transaction can be thought of in terms of the following action—a user provides
    a rating for a product. That is not all, though. The nature of the transaction
    implies that the user is providing feedback about the product(s). This explains
    the solid arrow starting from the **Users** box and extending into the **Products**
    box. As is evident from the diagram, the **Recommendations system** generates
    a recommendation after collecting all of the user-product interactions, that is,
    feedback data.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将交易视为以下行为——用户对一个产品进行评分。但这还不止这些。交易的性质意味着用户正在提供关于产品（们）的反馈。这解释了从**用户**框开始并延伸到**产品**框的坚实箭头。正如从图中明显看出，**推荐系统**在收集所有用户-产品交互，即反馈数据后，生成一个推荐。
- en: There are different types of transactions, which brings us to look at the different
    types of recommendations.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 存在着不同类型的交易，这让我们来看看不同类型的推荐。
- en: Categorizing recommendations
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐分类
- en: This topic will draw on from the previous topic. In particular, we made more
    than a mention of user-product interactions or feedback data. Indeed, there can
    be two types of such interactions. User feedback is a better term.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这个主题将借鉴前一个主题。特别是，我们提到了用户-产品交互或反馈数据。实际上，可能存在两种这样的交互。用户反馈是一个更好的术语。
- en: 'Based on the types of user feedback, we can identify two types of recommendations,
    as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 根据用户反馈的类型，我们可以识别出两种类型的推荐，如下所示：
- en: Implicit
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式
- en: Explicit
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显式
- en: Each type of recommendation follows. We will first explain recommendations using
    feedback of the implicit kind.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 每种类型的推荐将依次介绍。我们将首先解释使用隐式反馈的推荐。
- en: Implicit recommendations
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隐式推荐
- en: A good example of such data is implicit information, such as user preferences,
    their clicks, browsing history, purchase history, search terms, and so on.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这种数据的一个好例子是隐式信息，例如用户偏好、他们的点击、浏览历史、购买历史、搜索词等等。
- en: This scenario represents an example of an implicit feedback-based recommendation
    system at work. The key characteristic of such a system is this—what did the user
    do? Some examples of implicit user feedback, in reference to a user on Amazon,
    is—what did the user buy? What book did they click on? What was their search phrase?
    All of these questions bear answers that reflect on a user's **behavior**. That
    said, we will get right down to a problem formulation phase, where we will document
    what is needed to build a recommendation problem with collaborative filtering.
    Whether this recommendation system is implicit or explicit will be decided when
    we get to that point.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这种场景代表了一个基于隐式反馈的推荐系统在工作中的例子。这种系统的关键特征是——用户做了什么？以亚马逊上的用户为例，一些隐式用户反馈的例子包括——用户买了什么？他们点击了哪本书？他们的搜索词是什么？所有这些问题都反映了用户的行为。因此，我们将直接进入问题定义阶段，在那里我们将记录构建协同过滤推荐问题所需的内容。这个推荐系统是隐式还是显式将在那个阶段决定。
- en: Explicit recommendations
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显式推荐
- en: This is a collaborative filtering problem that requires explicit data to model
    the relationship between each user (customer) and product (item). A good example
    of such data is an explicit rating.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个需要显式数据来建模每个用户（客户）与产品（项目）之间关系的协同过滤问题。这种数据的一个好例子是显式评分。
- en: Recommendations for machine learning
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习推荐
- en: We discussed the role played by recommendations at Amazon. This gives us a good
    idea of what recommendations are, and what recommendation systems are, from a
    layperson's point of view. We provided examples for each flavor of recommendations.
    Machine learning algorithms generated these Amazon recommendations, and that is
    the common denominator here.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了在亚马逊中推荐所起的作用。这让我们对推荐是什么，以及推荐系统是什么，从普通人的角度来看有了很好的理解。我们为每种类型的推荐提供了例子。亚马逊的推荐是由机器学习算法生成的，这是这里的共同点。
- en: 'With that said, this topic is presented with the clear purpose of explaining
    the role played by machine learning in the context of recommendations. As always,
    this topic is approached in two parts: a brief overview part giving a summarized
    view of what to expect from the topic, and a detailed overview part. Here is the
    brief overview.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，这个主题的目的是明确地解释机器学习在推荐背景下的作用。像往常一样，这个主题分为两部分：一个简要概述部分，给出对主题的总结性看法，以及一个详细概述部分。以下是简要概述。
- en: Collaborative filtering algorithms
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 协同过滤算法
- en: 'Recommendations are a collaborative filtering problem in the machine learning
    space. Two underlying principles define how collaborative filtering algorithms
    work:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐是机器学习空间中的协同过滤问题。两个基本原理定义了协同过滤算法的工作方式：
- en: Filtering
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过滤
- en: Collaborative
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协同
- en: The filtering part is associated with the act of recommending. The algorithm
    makes recommendations happen by ingesting preferences information from many users. A
    simple example will go a long way in illustrating how collaborative filtering
    algorithms work. Imagine that our algorithm is working off of a pool of three
    users (countries) *U1*, *U2*, and *U3*. However trivial this case may be, it will
    explain how collaborative filtering algorithms work. Say, at a recent global air
    show, countries looking for new fighter aircraft were asked to provide ratings
    for three front-line fighter aircraft. The **Rafaele** is a French fighter. The
    **SU-35** is Russian and the **F-35** is American, and arguably the world's foremost
    air-superiority fighter.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤部分与推荐行为相关。算法通过从许多用户那里获取偏好信息来促成推荐的发生。一个简单的例子可以很好地说明协同过滤算法是如何工作的。想象一下，我们的算法正在基于三个用户（国家）*U1*、*U2*
    和 *U3* 的一个池子中工作。尽管这个案例可能很微不足道，但它将解释协同过滤算法是如何工作的。比如说，在最近的一次全球航空展上，寻找新型战斗机的国家被要求对三种一线战斗机进行评分。**拉法埃尔**是法国战斗机。**苏-35**是俄罗斯战斗机，**F-35**是美国战斗机，可以说是世界上最先进的空中优势战斗机。
- en: 'The aircraft-countries tables are listed as follows, which is a recommendation
    algorithm based on collaborative filtering and a user-product matrix:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 飞机-国家表如下所示，这是一个基于协同过滤和用户-产品矩阵的推荐算法：
- en: '![](img/20ebd7bd-1129-40ff-8920-e4a5da7230ca.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/20ebd7bd-1129-40ff-8920-e4a5da7230ca.jpg)'
- en: User-product matrix
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 用户-产品矩阵
- en: Looking at the preceding table, each country rated a certain aircraft in slightly
    different ways. India gave all three fighter aircraft reasonably good ratings,
    with the Flanker receiving the highest rating. The second country, Turkey, assigned
    good ratings only to the Rafaele and the F-35, and no rating at all for the SU-35\.
    It is assumed that when no rating is provided that that country received a negative
    rating of –1\. Lastly, Saudi Arabia liked the Rafaele and F-35, whereas they did
    not have anything to say about the SU-35\. There are empty squares in the matrix.
    They are left empty for a reason.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 观察前面的表格，每个国家对某种飞机的评分略有不同。印度对三种战斗机给出了相当好的评分，其中侧卫获得了最高的评分。第二个国家土耳其只对拉法埃尔和 F-35
    给出了好的评分，对苏-35 没有给出任何评分。假设没有提供评分的国家得到了负评分 -1。最后，沙特阿拉伯喜欢拉法埃尔和 F-35，而对苏-35 没有发表任何意见。矩阵中有空位。它们留空是有原因的。
- en: 'Let''s say we have a collaborative algorithm called **CF**. We want CF to work
    on this matrix with a plan. The first part of the plan is to tell the algorithm
    to find out which users like the same products. The algorithm will get to work
    and make the following observations:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个名为 **CF** 的协同算法。我们希望 CF 能够按照计划在这个矩阵上工作。计划的第一部分是告诉算法找出哪些用户喜欢相同的产品。算法将开始工作并得出以下观察结果：
- en: 'User U1 (India) liked the following:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户 U1（印度）喜欢以下产品：
- en: Product 1 (Rafaele)
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品 1（拉法埃尔）
- en: Product 2 (Flanker)
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品 2（侧卫）
- en: Product 3 (F-35)
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品 3（F-35）
- en: 'User U2 (Turkey) liked the following:'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户 U2（土耳其）喜欢以下产品：
- en: Product 1 (Rafaele)
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品 1（拉法埃尔）
- en: Product 3 (F-35)
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品 3（F-35）
- en: 'User U3 (Saudi Arabia) liked the following:'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户 U3（沙特阿拉伯）喜欢以下产品：
- en: Product 1 (Rafaele)
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品 1（拉法埃尔）
- en: The algorithm has a greater mandate. It needs to look closer at the matrix and
    make a recommendation for Saudi Arabia regarding an aircraft.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 算法有更大的权限。它需要更仔细地查看矩阵，并为沙特阿拉伯关于飞机的推荐做出判断。
- en: 'The collaborative filtering algorithm comes up with a recommendation for Saudi
    Arabia with the following reasoning:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 协同过滤算法为沙特阿拉伯提出了以下推理的推荐：
- en: 'India likes all three aircraft (the Rafaele, the Flanker, and the F-35) while
    Turkey like two (the Rafaele and the F-35). Countries that liked the Rafaele **ALSO**
    liked the F-35\. Note the capitalized word ALSO. Based on India and Turkey having
    similar likes, the algorithm decides that Saudi Arabia will like what India and
    Turkey liked—in this case, the F-35. To make sense of the final recommendation,
    we will draw a Venn diagram-like structure:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 印度喜欢所有三种飞机（拉法埃尔、侧卫和 F-35），而土耳其喜欢两种（拉法埃尔和 F-35）。喜欢拉法埃尔的**国家**也喜欢 F-35。注意大写的单词**也**。基于印度和土耳其有相似的喜好，算法决定沙特阿拉伯会喜欢印度和土耳其喜欢的——在这种情况下，就是
    F-35。为了理解最终的推荐，我们将绘制一个类似维恩图的图形：
- en: '![](img/69c584e6-1765-45d2-92e8-6c6881abf1e0.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/69c584e6-1765-45d2-92e8-6c6881abf1e0.png)'
- en: Venn diagram
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 文氏图
- en: We just demonstrated what recommendations can do for us. What we have done so
    far is a step in the right direction regarding implementation.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚展示了推荐能为我们做什么。到目前为止我们所做的是朝着正确方向迈出的一步，关于实施方面。
- en: We have not said yet what kind of data that's available in these datasets would
    either qualify them as explicit or implicit. Data in these datasets describe interactions
    between users and products. We have seen evidence of those interactions from the
    preceding discussion. We also went so far as to make a recommendation for Saudi
    Arabia. We predicted what weapons system Saudi Arabia is likely to buy in the
    future. The user-product matrix was our go-to resource for arriving at this recommendation
    for Saudi Arabia. This matrix boasted of one feature—a user-product interaction.
    This is a hard number, and a rating, which makes this data explicit.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有说明这些数据集中可用的数据类型是明确还是隐式。这些数据集描述了用户和产品之间的交互。我们从先前的讨论中看到了这些交互的证据。我们还就沙特阿拉伯提出了建议。我们预测沙特阿拉伯未来可能购买的武器系统。用户-产品矩阵是我们得出对沙特阿拉伯这一建议的依据。这个矩阵有一个特点——用户-产品交互。这是一个硬性数字和评分，这使得这些数据是明确的。
- en: This is a collaborative filtering problem that requires implicit data to model
    the relationship between each user (customer) and product (item).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个需要隐式数据来建模每个用户（客户）与产品（项目）之间关系的协同过滤问题。
- en: It's time to move on to the next topic, which happens to be a brief overview
    of the formulation of an explicit recommendations problem.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候进入下一个主题了，这个主题恰好是对明确推荐问题表述的简要概述。
- en: Recommendations problem formulation
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐问题表述
- en: This topic, as its title suggests, will provide a (recommendation) problem formulation.
    In other words, it would build the contours of a recommendation system based on explicit
    (user) feedback.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如其标题所示，这个主题将提供一个（推荐）问题表述。换句话说，它将基于明确的（用户）反馈构建推荐系统的轮廓。
- en: The problem formulation topic represents a critical stage in the implementation
    of one type of recommendation system. Coming up next is a topic that deals with
    weapons sales lead data and past weapons sales data, respectively.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 问题表述主题代表了实施一种推荐系统过程中的一个关键阶段。接下来要讨论的主题将涉及武器销售线索数据和过往武器销售数据。
- en: Understanding datasets
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解数据集
- en: Taking off from where the previous topic left us, this important talk proposes
    two datasets, a weapon sales leads dataset and a past sales data dataset, respectively.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 从上一个主题留下的地方继续，这次重要的讨论提出了两个数据集，分别是武器销售线索数据集和过往销售数据集。
- en: At this point, we are done with the brief overview of topics we want to cover,
    which we decided are relevant toward the implementation of a recommendation system.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经完成了对我们要覆盖的主题的简要概述，我们决定这些主题与推荐系统的实施相关。
- en: 'Thus far, we have given overviews of topics that are essential to the implementation
    of a recommendations system. These topics were as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经概述了实施推荐系统所必需的主题。这些主题如下：
- en: Recommendations
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐
- en: Implicit recommendations
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式推荐
- en: Explicit recommendations
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确推荐
- en: Recommendation problem formulation
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐问题表述
- en: Weapon sales leads and past sales data
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 武器销售线索和过往销售数据
- en: Recommendations and ML
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐与机器学习
- en: Detailed overview
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 详细概述
- en: The detailed overview section for this topic is the most important section of
    this chapter.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 本主题的详细概述部分是本章最重要的部分。
- en: Recommendations regarding problem formulation
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于问题表述的推荐
- en: 'In the detailed version of this topic, we will build a narrative (or story),
    in which the following features dominate:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个主题的详细版本中，我们将构建一个叙事（或故事），其中以下特征占主导地位：
- en: Users
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户
- en: Products
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品
- en: Understanding of sales leads and past sales
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对销售线索和过往销售的理解
- en: Backing up data that's been built with an understanding of sales leads and past
    sales
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在理解销售线索和过往销售的基础上备份数据
- en: 'Where data is concerned, we will compile custom sales leads data and past sales
    data that is related to weapons systems. In this phase, we will take up the formal
    formulation and support descriptions of a recommendation system based on explicit
    feedback from users. Such a formulation is broken down into two tasks:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据方面，我们将汇编与武器系统相关的定制销售线索数据和过往销售数据。在这个阶段，我们将着手正式表述和支撑描述基于用户明确反馈的推荐系统。这种表述被分解为两个任务：
- en: Defining what explicit feedback is
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义什么是明确的反馈
- en: Building a narrative (a story) around the recommendation problem involving explicit
    feedback
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 围绕涉及明确反馈的推荐问题构建叙事（故事）
- en: What kinds of data constitutes explicit feedback? We set out to answer this
    question right away.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 哪些数据构成明确的反馈？我们立即着手回答这个问题。
- en: Defining explicit feedback
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义明确的反馈
- en: 'Explicit feedback, like its implicit counterpart, depends on user preferences.
    The machine learning model we will be building later is based on such explicit
    feedback. The datasets we are about to describe contains explicit feedback. Such
    explicit feedback data is a compilation of user/customer/client preferences concerning
    their choice of some weapon system (the product/item). It turns out that we are
    building a recommendation system that will predict what ratings users might leave
    for products they loved (or not). Indeed, ratings are a great example of feedback.
    We are all familiar with what star ratings look like. We generated the following
    start rating graphic using a little CSS and HTML. This is similar to a **Star
    Rating** seen on restaurant portal [yelp.com](https://www.yelp.com/):'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 明确反馈，就像其隐含对应物一样，取决于用户偏好。我们稍后将要构建的机器学习模型基于此类明确反馈。我们即将描述的数据集包含明确反馈。此类明确反馈数据是用户/客户/客户对其选择的某些武器系统（产品/项目）偏好的汇编。结果是我们正在构建一个推荐系统，该系统将预测用户可能会为喜爱的产品（或不喜爱的产品）留下的评分。确实，评级是反馈的一个很好的例子。我们都熟悉星级评级的模样。我们使用一点CSS和HTML生成了以下星级评分图形。这与餐厅门户[https://www.yelp.com/](https://www.yelp.com/)上看到的**星级评分**类似：
- en: '![](img/8637f5a4-a8e1-4a96-898c-ee8920e9532f.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8637f5a4-a8e1-4a96-898c-ee8920e9532f.jpg)'
- en: Restaurant ratings
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 餐厅评级
- en: We will not actually generate a star rating graphic for the impending explicit
    feedback-based recommendation system. However, the point here is that ratings
    have a central place in this chapter.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上不会为即将推出的基于明确反馈的推荐系统生成星级评分图形。然而，这里的关键点是评级在本章中占有核心地位。
- en: Building a narrative
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建叙事
- en: 'Weapons maker X is a weapons manufacturer that caters to the defense needs
    of client nations across the globe. To us, this weapons maker is simply **WMX**.
    Government customer IEX is a typical WMX customer, identified simply as IEX. IEX
    wants to phase out its aging fighter aircraft with modern fifth-generation replacements. IEX
    figures are prominently on WMX''s past sales data records. Therefore, WMX views
    IEX as more than just a prospective client. In this scenario, two kinds of actors
    are evident:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 武器制造商X是一个满足全球各国国防需求的武器制造商。对我们来说，这个武器制造商就是**WMX**。政府客户IEX是典型的WMX客户，简单地被称为IEX。IEX希望用现代第五代战斗机逐步淘汰其老化的战斗机。IEX的数据在WMX的过去销售数据记录中非常突出。因此，WMX认为IEX不仅仅是一个潜在客户。在这种情况下，有两种类型的参与者明显存在：
- en: WMX—supplier of weapons systems products
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WMX—武器系统产品供应商
- en: Customers like IEX—these are countries that buy X's weapons systems and allocate
    ratings to them
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像IEX这样的客户—这些是购买X的武器系统并对它们进行评分的国家
- en: 'We now have the contours of an interesting use case. Actors 1 and 2 are useless
    without data. We plan on making two datasets available:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有一个有趣用例的轮廓。参与者1和2没有数据就毫无用处。我们计划提供两个数据集：
- en: Weapon sales leads—data from a leads campaign
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 武器销售线索—来自销售线索活动的数据
- en: Past weapon sales data—data from the past describing which customer purchased
    what weapons system (the item or product)
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过去武器销售数据—描述哪些客户购买了哪些武器系统（项目或产品）的数据
- en: Before proceeding further with a deeper discussion on the later use case, we
    will take a necessary detour. We want to explain the sales leads part in weapon
    sales leads. What are leads, anyway? What is the role of past sales data? Both
    questions are answered in the next phase.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在进一步深入讨论后续用例之前，我们将进行必要的迂回。我们想要解释武器销售线索中的销售线索部分。那么，线索究竟是什么？过去销售数据的作用是什么？这两个问题将在下一阶段得到解答。
- en: Sales leads and past sales
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 销售线索和过去销售
- en: A business needs a product or products (or services) to sell and make money,
    of course. A familiar business strategy is a practice of generating sales leads.
    What is a sales lead? A **lead** is like a clue or a break that investigators
    stumble upon in a criminal investigation case. This lead is identifying the helpful
    information that may lead investigators to pursue a certain line of investigation.
    Such a lead, in the hands of a skilled, seasoned investigator might help potentially
    crack the case, nailing the culprit, or getting a fix on a potential suspect.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，一个企业需要销售产品或服务来赚钱。一个熟悉的企业策略是生成销售线索。什么是销售线索？**线索**就像调查人员在刑事调查案件中偶然发现的线索或突破。这个线索是识别可能引导调查人员追踪特定调查线索的有用信息。这样的线索，在熟练、经验丰富的调查人员手中，可能会帮助潜在地破解案件，锁定罪犯，或锁定潜在嫌疑人。
- en: Applying the criminal investigation analogy back to our sales use case, a sales
    lead is a sort of identifier in the sense that it represents identifying data
    early on in the sales process. Naturally, a lead generates the anticipation that
    a certain person or company will be a potential client down the road. A sales
    lead does not necessarily have to nail down a potential customer. However, a well-planned
    sales lead generation campaign can take advantage of “past sales data” to help
    the business identify a person or other business as a near or long-term prospect.
    A paying customer that shows up in past sales data may point to a future prospective
    client, which may be a repeat paying customer. Therefore, the business is not
    shooting in the dark, as it can use this information to figure out which customer
    to reach out to.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 将刑事调查的类比应用到我们的销售用例中，销售线索在销售过程中的早期阶段是一种标识符，因为它代表了识别数据。自然地，线索会产生某种预期，即某个个人或公司将来可能成为潜在客户。销售线索不一定必须锁定潜在客户。然而，一个精心策划的销售线索生成活动可以利用“过往销售数据”帮助业务识别个人或其他企业作为近或长期潜在客户。在过往销售数据中出现的付费客户可能指向未来的潜在客户，这可能是重复付费的客户。因此，企业不是在黑暗中射击，因为它可以使用这些信息来确定要联系哪个客户。
- en: Our detour ends here. Moving into the next phase, we will apply our recently
    acquired knowledge of sales leads and past sales data to actual weapon sales leads
    and past sales data datasets.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的绕行到此结束。进入下一阶段，我们将应用我们最近获得的销售线索和过往销售数据的知识，将其应用于实际的武器销售线索和过往销售数据集。
- en: Weapon sales leads and past sales data
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 武器销售线索和过往销售数据
- en: To get started, download the following files from the `ModernScalaProjects` folder.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请从 `ModernScalaProjects` 文件夹下载以下文件。
- en: '`PastWeaponSalesOrders.csv`, compiled from scratch, requiring no citation'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PastWeaponSalesOrders.csv`，从头开始编制，无需引用'
- en: '`WeaponSalesLeads.csv`, compiled from scratch, requiring no citation'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WeaponSalesLeads.csv`，从头开始编制，无需引用'
- en: '`PastWeaponSalesOrders.csv` is representative of WMX''s past weapons sales
    data, while `WeaponSalesLeads.csv` of WMX weapons sales leads data. Both datasets
    are designed to build a recommendation engine.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '`PastWeaponSalesOrders.csv` 代表 WMX 的过往武器销售数据，而 `WeaponSalesLeads.csv` 代表 WMX
    武器销售线索数据。这两个数据集都是为了构建推荐引擎而设计的。'
- en: 'Let''s assume that our weapons corporation WMX stores its past sales data records
    in `PastWeaponSalesOrders.csv`. This dataset''s records are depicted as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们的武器公司 WMX 将其过往销售数据记录存储在 `PastWeaponSalesOrders.csv` 中。此数据集的记录如下所示：
- en: '![](img/2de5d1a3-22c4-4e97-ad0e-a0c1e4abf794.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2de5d1a3-22c4-4e97-ad0e-a0c1e4abf794.jpg)'
- en: Past sales data records
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 过往销售数据记录
- en: 'Before we get into a description of data in the fields, we need a schema that
    is representative of the fields in this dataset:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们描述字段中的数据之前，我们需要一个代表该数据集中字段的模式：
- en: '![](img/2b88397e-494c-4eb3-b2e0-4f855bae3a1c.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2b88397e-494c-4eb3-b2e0-4f855bae3a1c.jpg)'
- en: Representation of the field in dataset
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集中字段的表示
- en: 'Seven columns exist, of which the first two columns represent customer data.
    Eight customers are listed in alphabetical order, as follows:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 有七个列，其中前两列代表客户数据。以下按字母顺序列出八个客户：
- en: '**Australia**—Customer #1'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**澳大利亚**—客户 #1'
- en: '**Seychelles**—Customer #2'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**塞舌尔**—客户 #2'
- en: '**Fiji**—Customer #3'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**斐济**—客户 #3'
- en: '**Turkey**—Customer #4'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**土耳其**—客户 #4'
- en: '**Jordan**—Customer #5'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**约旦**—客户 #5'
- en: '**South Korea**—Customer #6'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**韩国**—客户 #6'
- en: '**Djibouti**—Customer #7'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**吉布提**—客户 #7'
- en: '**India**—Customer #8'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**印度**—客户 #8'
- en: The next two columns, **ItemId**, followed by **ItemName**, represent a weapons
    system. The fifth column stores the price in millions of dollars per weapons system
    unit. Each cell of data in the sixth **OrderSize** column represents the number
    of units of a certain weapons system ordered by a certain customer. For example,
    Australia had, sometime in the past, ordered 25 units of **WeaponsSystem217**
    at a price of 2 million dollars per unit.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的两列，**ItemId**，然后是**ItemName**，代表一个武器系统。第五列存储每个武器系统单位的单价（以百万美元计）。第六列**OrderSize**中的每个数据单元格代表某个客户订购的某个武器系统的单位数量。例如，澳大利亚在过去某个时候订购了25单位的**WeaponsSystem217**，单价为每单位200万美元。
- en: While both datasets are by no means comprehensive, they are a representative
    sampling, which is enough to create our recommendation system.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这两个数据集远非全面，但它们是具有代表性的样本，足以创建我们的推荐系统。
- en: In our case, we are building a sample sales lead prediction model based on past
    sales orders.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，我们正在构建一个基于过去销售订单的样本销售线索预测模型。
- en: 'Here are few sample records from both datasets:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是两个数据集的一些样本记录：
- en: '![](img/2f7a3730-cbfe-4cc5-bd0d-3e97b8fd0ce6.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2f7a3730-cbfe-4cc5-bd0d-3e97b8fd0ce6.jpg)'
- en: Sample datasets
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 样本数据集
- en: 'Both datasets are ready. We want to know what to make of this data and where
    to go from here. We set about putting together the data with one immediate goal—creating
    a model that would somehow help us make predictions. That goal wasn''t so clear-cut
    then. Now that we have two datasets, we want a clear goal. The key lies in the
    weapons sales leads dataset. What if we want to build a weapons sales lead model
    drawing on data from purchase history? Our past weapons sales dataset represents
    that purchase history. That then brings us to a sharper goal implementing a weapons
    sales prediction rating model. In other words, we want our model to do the following:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个数据集都已准备好。我们想知道如何处理这些数据，以及从这里开始下一步。我们着手整理数据，有一个直接的目标——创建一个模型，以某种方式帮助我们做出预测。当时这个目标并不那么明确。现在我们有了两个数据集，我们希望有一个明确的目标。关键在于武器销售线索数据集。如果我们想建立一个基于购买历史数据的武器销售线索模型，那会怎么样？我们过去的武器销售数据集代表了购买历史。那么，我们就有了更明确的目标——实施武器销售预测评级模型。换句话说，我们希望我们的模型能够做到以下几方面：
- en: Predict what recommendation to make for each customer. There are 8 customers,
    ranging from Australia to India. We want our model to only recommend a weapons
    system that is right for a certain customer. The right weapons system for a customer
    is based on what they ordered in the past.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预测为每位客户推荐什么。有8个客户，从澳大利亚到印度不等。我们希望我们的模型只推荐适合特定客户的武器系统。适合客户的正确武器系统基于他们过去的订购情况。
- en: In making a recommendation to each customer, the model is also producing a rating
    that it believes the customer would give a certain product he/she did not purchase
    before a new product or products.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在向每位客户提供建议时，该模型还在生成一个评级，它认为客户会给予他/她之前未购买的新产品或产品的评级。
- en: 'Let''s reiterate what both datasets have in common. The first is simple—there''s
    a customer, which in this case is a nation. Then, there is a product an (item),
    which in this case is a weapons system. The first dataset has this much to say:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们重申一下这两个数据集的共同点。第一个很简单——有一个客户，在这个案例中是一个国家。然后，有一个产品（项目），在这个案例中是武器系统。第一个数据集有如下说明：
- en: There is a nation that ordered a certain number of weapons systems, each such
    system costing a certain unit price in millions of dollars.
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个国家订购了一定数量的武器系统，每个这样的系统以百万美元为单位的价格。
- en: The second dataset doesn't reveal much beyond its stated brief, which is to
    provide a listing of potential prospects. The company manufacturing these systems
    decides that some of these prospects are more than prospects.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个数据集并没有在其声明的简要说明之外揭示太多，其简要说明是提供潜在客户的列表。制造这些系统的公司决定，其中一些潜在客户不仅仅是潜在客户。
- en: The point we are trying to make here is that even though it is not that apparent,
    it is clear now that the data did not have to reveal many details. The customer
    is a nation that purchased a certain weapons system at a certain price. That's
    it, but that's enough. On the other hand, the weapons sales lead data tells a
    different kind of story, a likely scenario of a future scenario, where a certain
    company, in the company's estimates, is said to be likely to show interest in
    a certain type of weapons system.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里试图说明的是，尽管这并不那么明显，但现在很清楚，数据不必揭示太多细节。客户是一个以特定价格购买了一定武器系统的国家。就是这样，但这也足够了。另一方面，武器销售线索数据讲述了一个不同类型的故事，一个未来情景的可能情景，其中一家公司，据公司估计，可能会对某种类型的武器系统表示出兴趣。
- en: We have data about users and products. Not detailed information, but apparently
    enough. This kind of data requires an algorithm that only needs to extract the
    relationship between users and products. It simply needs to see evidence of an
    interaction between the two. Both datasets at hand appear to be a fit for a collaborative
    filtering algorithm. That is why we can, in the next section, initiate a discussion
    on the basic mechanism driving the workings of a collaborative filtering algorithm.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有关于用户和产品的数据。不是详细的信息，但显然足够。这类数据需要一个只需要提取用户和产品之间关系的算法。它只需要看到两者之间互动的证据。手头的两个数据集似乎都适合协同过滤算法。这就是为什么我们可以在下一节中开始讨论驱动协同过滤算法运作的基本机制。
- en: Implementation and deployment
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现和部署
- en: 'The following are implementation objectives that are required to implement
    the recommendations system:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是需要实现推荐系统所需的目标：
- en: Download the past weapons sales order and weapon lead sales datasets from the `ModernScalaProjects` data
    folder.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`ModernScalaProjects`数据文件夹下载过去的武器销售订单和武器销售线索数据集。
- en: 'You may develop the pipeline in three ways:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过三种方式开发管道：
- en: Incrementally in your local Spark Shell.
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的本地Spark Shell中逐步进行。
- en: 'Recommended: Flesh out your code in IntelliJ and wire up all necessary dependencies
    in the `build.sbt` file. Set SBT up to generate a fat JAR by wiring in an assembly
    plugin. The resultant self-contained SBT application is then deployed to your
    local spark cluster using `spark-submit`.'
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐：在IntelliJ中完善你的代码，并在`build.sbt`文件中连接所有必要的依赖项。通过连接assembly插件来设置SBT以生成胖JAR。然后，将生成的自包含SBT应用程序部署到您的本地Spark集群，使用`spark-submit`。
- en: Run the application and interpret the results.
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行应用程序并解释结果。
- en: In the next section, *Implementation*, we will document step-by-step instructions
    for implementing the project.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一节“实现”中，我们将逐步记录实现项目的指令。
- en: Implementation
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现
- en: Implementation is documented in the following subsections. All code is developed
    in an Intellij code editor. The very first step is to create an empty Scala project
    called `Chapter7`.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 实现将在以下子节中记录。所有代码都在IntelliJ代码编辑器中开发。第一步是创建一个名为`Chapter7`的空Scala项目。
- en: Step 1 – creating the Scala project
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1步 – 创建Scala项目
- en: 'Let''s create a Scala project called `Chapter7` with the following artifacts:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个名为`Chapter7`的Scala项目，并具有以下工件：
- en: '`RecommendationSystem.scala`'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RecommendationSystem.scala`'
- en: '`RecommendationWrapper.scala`'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RecommendationWrapper.scala`'
- en: 'Let''s break down the project''s structure:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下项目的结构：
- en: '`.idea`: Generated IntelliJ configuration files.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.idea`：生成的IntelliJ配置文件。'
- en: '`project`: Contains `build.properties` and `plugins.sbt`.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`project`：包含`build.properties`和`plugins.sbt`。'
- en: '`project`/`assembly.sbt`: This file specifies the `sbt-assembly` plugin needed
    to build a fat JAR for deployment.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`project/assembly.sbt`：此文件指定了构建部署的胖JAR所需的`sbt-assembly`插件。'
- en: '`src/main/scala`: This is a folder that houses Scala source files in the `com.packt.modern.chapter7`
    package.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src/main/scala`：这是一个包含`com.packt.modern.chapter7`包中Scala源文件的文件夹。'
- en: '`target`: This is where artifacts of the compile process are stored. The generated
    assembly JAR file goes here.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target`：这是编译过程生成的工件存储的地方。生成的assembly JAR文件将在这里。'
- en: '`build.sbt`: This is the main SBT configuration file. Spark and its dependencies
    are specified here.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`build.sbt`：这是主要的SBT配置文件。在这里指定了Spark及其依赖项。'
- en: At this point, we will start developing code in the IntelliJ code editor. We
    will start with the `AirlineWrapper` Scala file and end with the deployment of
    the final application JAR into Spark with `spark-submit`.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们将开始在IntelliJ代码编辑器中开发代码。我们将从`AirlineWrapper` Scala文件开始，并以使用`spark-submit`将最终应用程序JAR部署到Spark结束。
- en: Step 2 – creating the AirlineWrapper definition
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2步 – 创建AirlineWrapper定义
- en: 'Let''s create the `trait` definition. The trait will hold the `SparkSession`
    variable, schema definitions for the datasets, and methods to build a dataframe:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建`trait`定义。这个trait将包含`SparkSession`变量、数据集的模式定义以及构建dataframe的方法：
- en: '[PRE0]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, let's create a schema for past weapon sales orders.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们为过去的武器销售订单创建一个模式。
- en: Step 3 – creating a weapon sales orders schema
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3步 – 创建武器销售订单模式
- en: 'Let''s create a schema for the past sales order dataset:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为过去的销售订单数据集创建一个模式：
- en: '[PRE1]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, let's create a schema for weapon sales leads.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们为武器销售线索创建一个模式。
- en: Step 4 – creating a weapon sales leads schema
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4步 – 创建武器销售线索模式
- en: 'Here is a schema definition for the weapon sales lead dataset:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是武器销售线索数据集的模式定义：
- en: '[PRE2]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Next, let's build a weapon sales order dataframe.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们构建一个武器销售订单dataframe。
- en: Step 5 – building a weapon sales order dataframe
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5步 – 构建武器销售订单dataframe
- en: 'Let''s invoke the `read` method on our `SparkSession` instance and `cache`
    it. We will call this method later from the `RecSystem` object:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在`SparkSession`实例上调用`read`方法并将其缓存。我们将在`RecSystem`对象中稍后调用此方法：
- en: '[PRE3]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Next up, let''s build a sales leads dataframe:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们构建一个销售线索dataframe：
- en: '[PRE4]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This completes the `trait`. Overall, it looks like this:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了`trait`。总体来看，它看起来是这样的：
- en: '[PRE5]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Bring in the following imports:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 引入以下导入：
- en: '[PRE6]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create a Scala object called `RecSystem`:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`RecSystem`的Scala对象：
- en: '[PRE7]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Before going any further, bring in the following imports:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，引入以下导入：
- en: '[PRE8]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Inside this object, start by loading the past sales order data. This will be
    our training data. Load the sales order dataset, as follows:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个对象内部，首先加载过去的销售订单数据。这将是我们训练数据。按照以下方式加载销售订单数据集：
- en: '[PRE9]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Verify the schema. This is what the schema looks like:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 验证模式。模式看起来是这样的：
- en: '[PRE10]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here is a partial view of a dataframe displaying past weapon sales order data:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是显示过去武器销售订单数据的dataframe的部分视图：
- en: '![](img/7c435ac9-2ac8-49fc-9eae-a6f8a24af57f.jpg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7c435ac9-2ac8-49fc-9eae-a6f8a24af57f.jpg)'
- en: Partial view of dataframe displaying past weapon sales order data
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 显示过去武器销售订单数据dataframe的部分视图
- en: 'Now, we have what we need to create a dataframe of ratings:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经有了创建评分dataframe所需的所有内容：
- en: '[PRE11]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Save all and compile the project at the command line:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行中保存所有内容并编译项目：
- en: '[PRE12]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You are likely to run into the following error:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 你很可能会遇到以下错误：
- en: '[PRE13]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To fix this, place the following statement at the top of the declarations of
    the rating dataframe. It should look like this:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，将以下语句放置在评分dataframe声明的顶部。它应该看起来像这样：
- en: '[PRE14]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Save and recompile the project. This time, it compiles just fine. Next, import
    the `Rating` class from the `org.apache.spark.mllib.recommendation` package. This
    transforms the rating dataframe that we obtained previously to its RDD equivalent:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并重新编译项目。这次，它编译得很好。接下来，从`org.apache.spark.mllib.recommendation`包中导入`Rating`类。这会将我们之前获得的评分dataframe转换为它的RDD等价物：
- en: '[PRE15]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The following few lines of code are very important. We will be using the ALS
    algorithm from Spark MLlib to create and train a `MatrixFactorizationModel`, which
    takes an `RDD[Rating]` object as input. The ALS train method may require a combination
    of the following training hyperparameters:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 以下几行代码非常重要。我们将使用Spark MLlib中的ALS算法来创建和训练一个`MatrixFactorizationModel`，它需要一个`RDD[Rating]`对象作为输入。ALS训练方法可能需要以下训练超参数的组合：
- en: '`numBlocks`: Preset to `-1` in an auto-configuration setting. This parameter
    is meant to parallelize computation.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numBlocks`：在自动配置设置中预设为`-1`。这个参数旨在并行化计算。'
- en: '`custRank`: The number of features, otherwise known as latent factors.'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`custRank`：特征的数量，也称为潜在因子。'
- en: '`iterations`: This parameter represents the number of iterations for ALS to
    execute. For a reasonable solution to converge on, this algorithm needs roughly
    20 iterations or less.'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iterations`：这个参数代表ALS执行迭代的次数。为了得到一个合理的解决方案，这个算法大约需要20次或更少的迭代。'
- en: '`regParam`: The regularization parameter.'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`regParam`：正则化参数。'
- en: '`implicitPrefs`: This hyperparameter is a specifier. It lets us use either
    of the following:'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`implicitPrefs`：这个超参数是一个指定器。它允许我们使用以下任何一个：'
- en: Explicit feedback
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显式反馈
- en: Implicit feedback
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式反馈
- en: '`alpha`: This is a hyperparameter connected to an implicit feedback variant
    of the ALS algorithm. Its role is to govern the baseline confidence in preference
    observations.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alpha`：这是一个与ALS算法的隐式反馈变体相关的超参数。它的作用是控制对偏好观察的基线信心。'
- en: We just explained the role played by each parameter needed by the ALS algorithm's
    train method.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚解释了ALS算法的train方法所需的每个参数的作用。
- en: 'Let''s get started by bringing in the following imports:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始引入以下导入：
- en: '[PRE16]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Now, let's get down to training the matrix factorization model using the ALS
    algorithm.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用ALS算法开始训练矩阵分解模型。
- en: 'Let''s train a matrix factorization model given an RDD of ratings by customers
    (users) for certain items (products). Our train method on the ALS algorithm will
    take the following four parameters:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们根据客户（用户）对某些物品（产品）的评分RDD（弹性分布式数据集）训练一个矩阵分解模型。我们的基于ALS算法的train方法将接受以下四个参数：
- en: Ratings.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评级。
- en: A rank.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个排名。
- en: A number of iterations.
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迭代次数。
- en: 'A Lambda value or regularization parameter:'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Lambda值或正则化参数：
- en: '[PRE17]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Next, we load the sales lead file and convert it into a tuple format:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们加载销售线索文件并将其转换为元组格式：
- en: '[PRE18]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In the next section, we will display the new weapon sales lead dataframe.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将显示新的武器销售线索数据框。
- en: Step 6 – displaying the weapons sales dataframe
  id: totrans-295
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6步 – 显示武器销售数据框
- en: 'First, we must invoke the `show` method:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须调用`show`方法：
- en: '[PRE19]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here is a view of the weapon sales lead dataframe:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是武器销售线索数据框的视图：
- en: '![](img/45ba3943-ccd9-4196-8a5d-9227c6e27df6.jpg)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/45ba3943-ccd9-4196-8a5d-9227c6e27df6.jpg)'
- en: View of weapon sales lead dataframe
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 武器销售线索数据框的视图
- en: 'Next, create a version of the sales lead dataframe structured as (customer,
    item) tuples:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，创建一个结构为（客户，项目）元组的数据框版本：
- en: '[PRE20]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In the next section, let's display the dataframe that we just created.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，让我们显示我们刚刚创建的数据框。
- en: Step 7 – displaying the customer-weapons-system dataframe
  id: totrans-304
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7步 – 显示客户-武器-系统数据框
- en: 'Let''s the `show` method, as follows:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用以下方式调用`show`方法：
- en: '[PRE21]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Here is a screenshot of the new customer-weapons-system dataframe as tuple
    pairs:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是新的客户-武器-系统数据框作为元组对的截图：
- en: '![](img/4567169f-8231-466d-aaea-bbb2932e1f14.jpg)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4567169f-8231-466d-aaea-bbb2932e1f14.jpg)'
- en: New customer-weapons-system dataframe as tuple pairs
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 新的客户-武器-系统数据框作为元组对
- en: 'Next, we will convert the preceding dataframe into an RDD:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将前面的数据框转换为RDD：
- en: '[PRE22]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: We previously created a `MatrixFactorization` model that we trained with the
    weapons system sales orders dataset. We are in a position to predict how each
    customer country may rate a weapon system in the future. In the next section,
    we will generate predictions.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前创建了一个`MatrixFactorization`模型，我们使用武器系统销售订单数据集对其进行训练。我们现在可以预测每个客户国家未来可能会如何评价一个武器系统。在下一节中，我们将生成预测。
- en: Step 8 – generating predictions
  id: totrans-313
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8步 – 生成预测
- en: 'Here is how we will generate predictions. The `predict` method of our model
    is designed to do just that. It will generate a predictions RDD that we call `weaponRecs`.
    It represents the ratings of weapons systems that were not rated by customer nations
    (listed in the past sales order data) previously:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们将如何生成预测。我们的模型中的`predict`方法就是为了这个目的设计的。它将生成一个名为`weaponRecs`的预测RDD。它代表了客户国家（在过去的销售订单数据中列出）之前未评价的武器系统的评级：
- en: '[PRE23]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Next up, we will display the final predictions.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将显示最终的预测。
- en: Step 9 – displaying predictions
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9步 – 显示预测
- en: 'Here is how to display the predictions, lined up in tabular format:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是如何以表格格式显示预测结果的方法：
- en: '[PRE24]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The following table displays how each nation is expected to rate a certain
    system in the future, that is, a weapon system that they did not rate earlier:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的表格显示了未来每个国家预期将如何评价某个系统，即他们之前未评价的武器系统：
- en: '![](img/4ed1bc7d-c253-47dd-a12a-40468b258f5c.jpg)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4ed1bc7d-c253-47dd-a12a-40468b258f5c.jpg)'
- en: System rating by each nation
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 各国对系统的评级
- en: Our recommendation system proved itself capable of generating future predictions.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的推荐系统证明了其生成未来预测的能力。
- en: Up until now, we did not say how all of the preceding code is compiled and deployed. We
    will look at this in the next section.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们还没有说明如何编译和部署所有前面的代码。我们将在下一节中探讨这个问题。
- en: Compilation and deployment
  id: totrans-325
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编译和部署
- en: 'The steps regarding compilation and deployment are as follows:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 编译和部署的步骤如下：
- en: Compile
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编译
- en: Build an assembly JAR file of the recommendation system application
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建推荐系统应用程序的assembly JAR文件
- en: Use the `spark-submit` command to deploy the recommendation system application
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`spark-submit`命令部署推荐系统应用程序
- en: We will compile the project first.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先编译项目。
- en: Compiling the project
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编译项目
- en: 'Invoke the `sbt compile` project at the root folder of your `Chapter7` project.
    You should get the following output:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Chapter7`项目的根目录中调用`sbt compile`项目。你应该会得到以下输出：
- en: '![](img/35dfd742-8525-49cd-84c6-f70d67fa88d6.jpg)'
  id: totrans-333
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/35dfd742-8525-49cd-84c6-f70d67fa88d6.jpg)'
- en: Output on compiling the project
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 编译项目的输出
- en: Besides loading `build.sbt`, the compile task is also loading settings from
    `assembly.sbt`, a file we have not talked about yet, but which we will create
    soon.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 除了加载`build.sbt`，编译任务还从`assembly.sbt`加载设置，这是我们尚未讨论过的文件，但我们将很快创建它。
- en: What is an assembly.sbt file?
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是`assembly.sbt`文件？
- en: We have not yet talked about the `assembly.sbt` file. Our scala-based Spark
    application is a Spark job that will be submitted to a (local) Spark cluster as
    a JAR file. This file, apart from Spark libraries, also needs other dependencies
    in it for our recommendation system job to successfully complete. The name fat
    JAR is from all dependencies bundled in one JAR. To build such a fat JAR, we need
    an `sbt-assembly` plugin. This explains the need for creating a new `assembly.sbt`
    and the assembly plugin.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 我们尚未讨论`assembly.sbt`文件。我们的基于Scala的Spark应用程序是一个Spark作业，它将被提交到（本地）Spark集群作为一个JAR文件。除了Spark库之外，这个文件还需要包含我们的推荐系统作业成功完成所需的其他依赖项。所谓的胖JAR（fat
    JAR）是指将所有依赖项捆绑在一个JAR文件中。为了构建这样的胖JAR，我们需要一个`sbt-assembly`插件。这解释了为什么需要创建一个新的`assembly.sbt`和组装插件。
- en: Creating assembly.sbt
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建`assembly.sbt`
- en: 'Create a new `assembly.sbt` in your IntelliJ project view and save it under
    your `project` folder, as follows:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的IntelliJ项目视图中创建一个新的`assembly.sbt`，并将其保存在你的`project`文件夹下，如下所示：
- en: '![](img/411d8fd6-ef46-4460-b503-b51a66651f70.jpg)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/411d8fd6-ef46-4460-b503-b51a66651f70.jpg)'
- en: Creating assembly.sbt
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`assembly.sbt`
- en: What will `assembly.sbt` contain? We will explore this next.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '`assembly.sbt`将包含什么内容？我们将在下一节中探讨。'
- en: Contents of assembly.sbt
  id: totrans-343
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`assembly.sbt`的内容'
- en: 'Paste the following contents into the newly created `assembly.sbt` (under the
    project folder). The output should look like this:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下内容粘贴到新创建的`assembly.sbt`文件中（位于项目文件夹下）。输出应如下所示：
- en: '![](img/28902218-14be-4b75-aebf-e2b0879a9ff7.jpg)'
  id: totrans-345
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/28902218-14be-4b75-aebf-e2b0879a9ff7.jpg)'
- en: Output on placing contents of assembly.sbt
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 将`assembly.sbt`内容放置后的输出
- en: The `sbt-assembly` plugin, version 0.14.7, gives us the ability to run an `sbt-assembly`
    task. With that, we are one step closer to building a fat or Uber JAR. This action
    is documented in the next step.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '`sbt-assembly`插件，版本0.14.7，为我们提供了运行`sbt-assembly`任务的能力。有了这个，我们就更接近于构建一个胖JAR或Uber
    JAR了。这一操作将在下一步中记录。'
- en: Running the sbt assembly task
  id: totrans-348
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行`sbt assembly`任务
- en: 'Issue the `sbt assembly` command, as follows:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 发出`sbt assembly`命令，如下所示：
- en: '![](img/746b947a-ac7a-4ee5-b873-6a5d21190903.jpg)'
  id: totrans-350
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/746b947a-ac7a-4ee5-b873-6a5d21190903.jpg)'
- en: Running the sbt assembly command
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`sbt assembly`命令
- en: This time, the assembly task loads the assembly-plugin in `assembly.sbt`. However,
    further assembly halts because of a common duplicate error. This error arises
    due to several duplicates, multiple copies of dependency files that need removal
    before the assembly task can successfully complete. To address this situation,
    `build.sbt` needs an upgrade.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，组装任务在`assembly.sbt`中加载了`assembly-plugin`。然而，由于一个常见的重复错误，进一步的组装操作停止了。这个错误是由于几个重复项引起的，需要移除多个依赖文件的副本，组装任务才能成功完成。为了解决这个问题，需要升级`build.sbt`。
- en: Upgrading the build.sbt file
  id: totrans-353
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级`build.sbt`文件
- en: 'The following lines of code need to be added in, as follows:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 需要在以下代码行中添加，如下所示：
- en: '![](img/ee6e63fc-fa9c-45a7-bf8a-d1f84a1da6e5.jpg)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ee6e63fc-fa9c-45a7-bf8a-d1f84a1da6e5.jpg)'
- en: Code lines for upgrading the build.sbt file
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 升级`build.sbt`文件的代码行
- en: To test the effect of your changes, save this and go to the command line to
    reissue the `sbt assembly` task.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试更改的效果，保存此文件并转到命令行重新执行`sbt assembly`任务。
- en: Rerunning the assembly command
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重新运行组装命令
- en: 'Run the assembly task, as follows:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 按如下方式运行组装任务：
- en: '![](img/640a521c-e81b-4395-b123-7f583084f6ee.jpg)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/640a521c-e81b-4395-b123-7f583084f6ee.jpg)'
- en: Rerunning the assembly task
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 重新运行组装任务
- en: 'This time, the settings in the `assembly.sbt` file are loaded. The task completes
    successfully. To verify, drill down to the `target` folder. If everything went
    well, you should see a fat JAR, as follows:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，`assembly.sbt`文件中的设置被加载。任务成功完成。为了验证，深入到`target`文件夹。如果一切顺利，你应该看到一个胖JAR，如下所示：
- en: '![](img/790792c9-1c8a-4e73-a453-9dbd891f1461.jpg)'
  id: totrans-363
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/790792c9-1c8a-4e73-a453-9dbd891f1461.jpg)'
- en: Output as a JAR file
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 作为JAR文件的输出
- en: Our JAR file under the `target` folder is the recommendation system application's
    JAR file that needs to be deployed into Spark. This is documented in the next
    step.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`target`文件夹下的JAR文件是需要部署到Spark的推荐系统应用的JAR文件。这将在下一步中说明。
- en: Deploying the recommendation application
  id: totrans-366
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署推荐应用
- en: 'The `spark-submit` command is how we will deploy the application into Spark.
    Here are two formats for the `spark-submit` command. The first one is a long one
    which sets more parameters than the second one:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '`spark-submit`命令是我们将应用程序部署到Spark的方式。以下是`spark-submit`命令的两种格式。第一个是一个较长的格式，它设置的参数比第二个多：'
- en: '[PRE25]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Leaning on the preceding format, let''s submit our Spark job, supplying various
    parameters to it:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 借助于前面的格式，让我们提交我们的Spark作业，向其提供各种参数：
- en: '![](img/add330e9-f59e-4921-be71-832b45c3edc4.jpg)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/add330e9-f59e-4921-be71-832b45c3edc4.jpg)'
- en: Parameters for Spark
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: Spark的参数
- en: 'The different parameters are explained as follows:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的参数解释如下：
- en: '![](img/98043e56-0ea3-462b-9d98-be3567914ec3.jpg)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/98043e56-0ea3-462b-9d98-be3567914ec3.jpg)'
- en: Tabular explanation of parameters for Spark Job
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: Spark作业参数的表格说明
- en: Summary
  id: totrans-375
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We learned how to build an explicit feedback type recommendation system. We
    implemented a predictions model with the Spark MLlib collaborative filtering algorithm
    that learns from past sales data and makes ratings-based recommendations about
    products to customers. The algorithm, as we have come to know, made its tailored
    product predictions on unknown customer-product interactions.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何构建显式反馈类型的推荐系统。我们使用Spark MLlib协同过滤算法实现了一个预测模型，该模型从历史销售数据中学习，并为顾客提供基于评分的产品推荐。正如我们所知，该算法根据未知顾客-产品交互定制了其产品预测。
- en: We used Spark's support for recommendations to build a prediction model that
    generated recommendations for unknown customer-product interactions in terms of
    sales leads and past weapons sales data. We leveraged Spark's alternating least
    squares algorithm to implement our collaborative filtering recommendation system.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 我们利用Spark对推荐的支持构建了一个预测模型，该模型根据销售线索和过去武器销售数据为未知顾客-产品交互生成推荐。我们利用Spark的交替最小二乘算法实现我们的协同过滤推荐系统。
