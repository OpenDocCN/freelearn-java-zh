- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GraalVM is a universal virtual machine that allows programmers to embed, compile,
    interoperate, and run applications written in JVM languages such as Java, Kotlin,
    and Groovy; non-JVM languages such as JavaScript, Python, WebAssembly, Ruby, and
    R; and LLVM languages such as C and C++.
  prefs: []
  type: TYPE_NORMAL
- en: GraalVM provides the Graal **just-in-time** (**JIT**) compiler, an implementation
    of the Java Virtual Machine Compiler Interface (**JVMCI**), which is completely
    built on Java and uses Java JIT compiler (C2 compiler) optimization techniques
    as the baseline and builds on top of them. The Graal JIT compiler is much more
    sophisticated than the Java C2 JIT compiler. GraalVM is a drop-in replacement
    for the JDK, which means that all the applications that are currently running
    on the JDK should run on GraalVM without any application code changes.
  prefs: []
  type: TYPE_NORMAL
- en: GraalVM also provides **ahead-of-time** (**AOT**) compilation to build native
    images with static linking. GraalVM AOT compilation helps build native images
    that have a very small footprint and faster startup and execution, which is ideal
    for modern-day microservices architectures.
  prefs: []
  type: TYPE_NORMAL
- en: While GraalVM is built on Java, it not only supports Java, but also enables
    polyglot development with JavaScript, Python, R, Ruby, C, and C++. It provides
    an extensible framework called Truffle that allows any language to be built and
    run on the platform.
  prefs: []
  type: TYPE_NORMAL
- en: GraalVM is becoming the default runtime for running cloud-native Java microservices.
    Soon, all Java developers will be using GraalVM to run their cloud-native Java
    microservices. There are already a lot of microservices frameworks that are emerging
    in the market, such as Quarkus, Micronaut, Spring Native, and so on, that are
    built on GraalVM.
  prefs: []
  type: TYPE_NORMAL
- en: Developers working with Java will be able to put their knowledge to work with
    this practical guide to GraalVM and cloud-native microservice Java frameworks.
    The book provides a hands-on approach to implementation and associated methodologies
    that will have you up and running, and productive in no time. The book also provides
    step-by-step explanations of essential concepts with simple and easy-to-understand
    examples.
  prefs: []
  type: TYPE_NORMAL
- en: This book is a hands-on guide for developers who wish to optimize their apps'
    performance and are looking for solutions. We will start by giving a quick introduction
    to the GraalVM architecture and how things work under the hood. Developers will
    quickly move on to explore the performance benefits they can gain by running their
    Java applications on GraalVM. We'll learn how to create native images and understand
    how AOT can improve application performance significantly. We'll then move on
    to explore examples of building polyglot applications and explore the interoperability
    between languages running on the same VM. We'll explore the Truffle framework
    to implement our own languages to run optimally on GraalVM. Finally, we'll also
    learn how GraalVM is specifically beneficial in cloud-native and microservices
    development.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The primary audience for this book is JVM developers looking to optimize their
    application's performance. This book would also be useful to JVM developers who
    are exploring options to develop polyglot applications by using tooling from the
    Python/R/Ruby/Node.js ecosystem. Since this book is for experienced developers/programmers,
    readers must be well-versed in software development concepts and should have good
    knowledge of working with programming languages.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B16878_01_Final_SK_ePub.xhtml#_idTextAnchor014), *Evolution of
    Java Virtual Machine,* walks through the evolution of JVM and how it optimized
    the interpreter and compiler. It will walk through C1 and C2 compilers, and the
    kind of code optimizations that JVM performs to run Java programs faster.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B16878_02_Final_SK_ePub.xhtml#_idTextAnchor028), *JIT, HotSpot,
    and GraalJIT,* takes a deep dive into how JIT compilers and Java HotSpot work
    and how JVM optimizes code at runtime.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B16878_03_Final_SK_ePub.xhtml#_idTextAnchor054), *GraalVM Architecture,*
    provides an architecture overview of Graal and the various architecture components.
    The chapter goes into details on how GraalVM works and how it provides a single
    VM for multiple language implementations. This chapter also covers the optimizations
    GraalVM brings on top of standard JVM.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B16878_04_Final_SK_ePub.xhtml#_idTextAnchor077), *Graal Just-In-Time
    Compiler**,* talks about the JIT compilation option of GraalVM. It goes through
    the various optimizations the Graal JIT compiler performs in detail. This is followed
    by a hands-on tutorial to use various compiler options to optimize the execution.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B16878_05_Final_SK_ePub.xhtml#_idTextAnchor097), *Graal Ahead-of-Time
    Compiler and Native Image,* is a hands-on tutorial that walks through how to build
    native images and optimize and run these images with profile-guided optimization
    techniques.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B16878_06_Final_SK_ePub.xhtml#_idTextAnchor120), *Truffle – An
    Overview,* introduces the Truffle polyglot interoperability capabilities and high-level
    framework components. It also covers how data can be transferred between applications
    that are written in different languages that are running on GraalVM.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B16878_07_Final_SK_ePub.xhtml#_idTextAnchor138), *GraalVM Polyglot
    – JavaScript and Node.js,* introduces the JavaScript and NodeJs. This is followed
    by a tutorial on how to use the Polyglot API for interoperability to interoperate
    between an example JavaScript and NodeJS application and a Python application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B16878_08_Final_SK_ePub.xhtml#_idTextAnchor151), *GraalVM Polyglot
    – Java on Truffle, Python, and R,* introduces Python, R, and Java on Truffle (Espresso).
    This is followed by a tutorial on how to use the Polyglot API for interoperability
    between various languages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B16878_09_Final_SK_ePub.xhtml#_idTextAnchor169), *GraalVM Polyglot
    – LLVM, Ruby, and WASM**,* introduces JavaScript and Node.js. This is followed
    by a tutorial on how to use the Polyglot API to interoperate between an example
    JavaScript/Node.js applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B16878_10_Final_SK_ePub.xhtml#_idTextAnchor187), *Microservices
    Architecture with GraalVM,* covers the modern microservices architecture and how
    new frameworks such as Quarkus and Micronaut implement Graal for the most optimum
    microservices architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is a hands-on guide, with step-by-step instructions on how to work
    with GraalVM. Throughout the book, the author has used very simple, easy-to-understand
    code samples that will help you to understand the core concepts of GraalVM. All
    the code samples are provided in a Git repository. You are expected to have good
    knowledge of the Java programming language. The book also touches upon Python,
    JavaScript, Node.js, Ruby, and R – but the examples are intentionally kept simple,
    for understanding, while focusing on demonstrating the polyglot interoperability
    concepts.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16878_Preface_Table_AM.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Supercharge-Your-Applications-with-GraalVM](https://github.com/PacktPublishing/Supercharge-Your-Applications-with-GraalVM).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Code in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Code in Action videos for this book can be viewed at [https://bit.ly/3eM5ewO](https://bit.ly/3eM5ewO).
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781800564909_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781800564909_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "In Truffle, it is a Java class derived from `com.oracle.truffle.api.nodes.Node`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select **System info** from the **Administration** panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '`customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '`copyright@packt.com` with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  prefs: []
  type: TYPE_NORMAL
