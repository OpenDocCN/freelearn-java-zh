["```java\n@Bean\npublic DataSource dataSource() {\n        DriverManagerDataSource dataSource = new DriverManagerDataSource();\n\n        dataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n        dataSource.setUrl(\"jdbc:mysql://localhost:3306/db1\");\n        dataSource.setUsername(\"root\");\n        dataSource.setPassword(\"123\");\n\n        return dataSource;\n}\n```", "```java\n@Bean(name=\"theSource\")\npublic DataSource dataSource() {\n...\n```", "```java\n@Bean\n@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)\npublic DataSource dataSource() {\n...\n```", "```java\n@Bean\npublic UserService userService() {\n        return new UserService();\n}\n```", "```java\npublic class UserService {\n  public int findNumberOfUsers() {\n    return 10;\n  }\n}\n```", "```java\n    @Configuration\n    @EnableWebMvc\n    @ComponentScan(basePackages = {\"com.springcookbook.controller\", \"com.springcookbook.service\"})\n    public class AppConfig {  \n    }\n    ```", "```java\n    @Component\n    public class UserService {\n      public int findNumberOfUsers() {\n        return 10;\n      }\n    }\n    ```", "```java\n@Component('anAmazingUserService')\npublic class UserService {\n```", "```java\n    @Autowired\n    UserService userService;\n    ```", "```java\n    @RequestMapping(\"hi\")\n    @ResponseBody\n    public String hi() {\n      return \"nb of users: \" + userService.findNumberOfUsers();\n    }\n    ```", "```java\n@Autowired(\"myUserService\")\nUserService userService;\n```", "```java\n    @Autowired\n    private ApplicationContext applicationContext;\n    ```", "```java\n    UserService userService = (UserService)applicationContext.getBean(\"userService\");        \n    ```", "```java\napplicationContext.getBean(UserService.class);  \n```", "```java\n    @Autowired\n    private ApplicationContext applicationContext;\n    ```", "```java\n    String[] beans = applicationContext.getBeanDefinitionNames();\n    for (String bean : beans) {\n      System.out.println(bean);\n    }  \n    ```", "```java\napplicationContext.getBean(\"aBeanName\");\n```", "```java\n    @Configuration\n    public class DatabaseConfig {\n    …\n    ```", "```java\n    @Override\n    protected Class<?>[] getServletConfigClasses() {\n        return new Class<?>[]{AppConfig.class, DatabaseConfig.class};\n    }\n    ```", "```java\n@Configuration\n@Import({ DatabaseConfig.class, SecurityConfig.class })\npublic class AppConfig {\n…\n}\n```"]