["```java\n<beans \n\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n    <!-- Bean Definition -->\n    <bean id=\"myBean\" class=\"com.example.MyBean\">\n        <property name=\"propertyName\" value=\"value\"/>\n    </bean>\n    <!-- Data Source Configuration -->\n    <bean id=\"dataSource\" class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n        <property name=\"url\" value=\"jdbc:mysql://localhost:3306/mydb\"/>\n        <property name=\"username\" value=\"user\"/>\n        <property name=\"password\" value=\"password\"/>\n    </bean>\n</beans>\n```", "```java\n@Service\npublic class MyBean {\n    private String propertyName = \"value\";\n    // ...\n}\n```", "```java\nspring.datasource.url=jdbc:mysql://localhost:3306/mydb\nspring.datasource.username=user\nspring.datasource.password=password\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\n```", "```java\npublic sealed class Animal permits Dog, Cat, Rabbit {\n    // class body\n}\nfinal class Dog extends Animal {\n    // class body\n}\nfinal class Cat extends Animal {\n    // class body\n}\nfinal class Rabbit extends Animal {\n    // class body\n}\n```", "```java\n@RestControllerAdvice\npublic class GlobalExceptionHandler extends ResponseEntityExceptionHandler {\n  @ExceptionHandler(Exception.class)\n  public ResponseEntity<ProblemDetail> handleException(Exception ex, WebRequest request) {\n    ProblemDetail problemDetail = new ProblemDetail();\n    problemDetail.setTitle(\"Internal Server Error\");\n    problemDetail.setDetail(ex.getMessage());\n    problemDetail.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());\n    return new ResponseEntity<>(problemDetail, HttpStatus.INTERNAL_SERVER_ERROR);\n  }\n  @ExceptionHandler(ResourceNotFoundException.class)\n  public ResponseEntity<ProblemDetail> handleResourceNotFoundException(ResourceNotFoundException ex, WebRequest request) {\n    ProblemDetail problemDetail = new ProblemDetail();\n    problemDetail.setTitle(\"Resource Not Found\");\n    problemDetail.setDetail(ex.getMessage());\n    problemDetail.setStatus(HttpStatus.NOT_FOUND.value());\n    return new ResponseEntity<>(problemDetail, HttpStatus.NOT_FOUND);\n  }\n  // other exception handlers\n}\n```"]