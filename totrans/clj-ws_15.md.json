["```java\n[:div \n  {:style {:color \"white\"\n           :background-color \"blue\" }}\n   \"Hello Hiccup\"] \n```", "```java\n<div style=\"color: white; background-color: blue;\">Hello Hiccup</div>\n```", "```java\n[:div \"Hello \" \"my \" \"friends!\"]\n```", "```java\n<div>Hello my friends</div>\n```", "```java\n[:div \n [:img {:src \"https://picsum.photos/id/10/2500/1667\"}]\n   [:div \"A beautiful image\"]]\n```", "```java\n<div>\n  <img src=\"img/1667\"> </img>\n  <div>A beautiful image </div>\n</div>\n```", "```java\n    [:div {:class \"myClass\"} \"Life is beautiful\"]\n    ```", "```java\n    [:div.myClass \"Life is beautiful\"]\n    ```", "```java\n[:ul\n [:li \"todo 1\"]\n [:li \"todo 2\"]\n [:li \"todo 3\"]\n...]\n```", "```java\n  (into [:ul] \n     (map (fn [num] [:li (str \"todo \" num)]) (range 10)))\n```", "```java\n    lein new figwheel packt-clj.reagent-sandbox -- --reagent\n    ```", "```java\n    lein figwheel\n    ```", "```java\n    (reagent/render-component [hello-world]\n                              (. js/document (getElementById \"app\")))\n    ```", "```java\n    (defn hello-world []\n      [:div\n       [:h1 (:text @app-state)]\n       [:h3 \"Edit this and watch it change!\"]])\n    ```", "```java\n    dev:cljs.user =>\n    ```", "```java\n    dev:packt-clj.reagent-sandbox.core=> (require 'packt-clj.reagent-sandbox.core)\n    nil\n    dev:packt-clj.reagent-sandbox.core=> (in-ns 'packt-clj.reagent-sandbox.core)\n    dev:packt-clj.reagent-sandbox.core=> \n    ```", "```java\n    dev:packt-clj.reagent-sandbox.core!{:conn 2}=> app-state\n    #<Atom: {:text \"Hello world!\"}>\n    ```", "```java\n    dev:packt-clj.reagent-sandbox.core=> (swap! app-state assoc-in [:text] \"Hello Reagent!\")\n    {:text \"Hello Reagent!\"}\n    ```", "```java\n    (defn image [url]\n      [:img {:src url\n             :style {:width \"500px\" \n                     :border \"solid gray 3px\"\n                     :border-radius \"10px\"}}])\n    (defn hello-world []\n      [:div\n       [:h1 (:text @app-state)]\n       [:div [image «https://picsum.photos/id/0/5616/3744»]]\n       [:h3 \"Edit this and watch it change!\"]])\n    ```", "```java\n    (defonce app-state (atom {:text \"Hello world!\"\n                              :button-on? true}))\n    ```", "```java\n    (defn button []\n      (let [text (if (get-in @app-state [:button-on?]) \"ON\" \"OFF\")]\n        [:button\n         {:on-click #(swap! app-state update-in [:button-on?] not)}\n         text]))\n    ```", "```java\n    (defn hello-world []\n      [:div\n       [:h1 (:text @app-state)]\n       [button]\n       [:div [image \"https://picsum.photos/id/0/5616/3744\"]]\n       [:h3 \"Edit this and watch it change!\"]])\n    ```", "```java\n    dev:packt-clj.reagent-sandbox.core=> (swap! app-state assoc-in [:button-on?] true)\n    {:text \"Hello world!\", :button-on? true}\n    ```", "```java\n    (defn image-with-width [url width]\n      [:img {:src url\n                  :style {:width width\n                          :border \"solid gray 3px\"\n                          :border-radius \"10px\"}}])\n    ```", "```java\n    (defn image-grid [images]\n      (into [:div]\n            (map (fn [image-data] \n                   [:div {:style {:float \"left\" \n                                  :margin-left \"20px\"}}\n                    [image-with-width image-data \"50px\"]])\n                 images)))\n    ```", "```java\n    (def my-images\n      [\"https://picsum.photos/id/0/5616/3744\"\n       \"https://picsum.photos/id/1/5616/3744\"\n       \"https://picsum.photos/id/10/2500/1667\"\n       \"https://picsum.photos/id/100/2500/1656\"\n       \"https://picsum.photos/id/1000/5626/3635\"\n       \"https://picsum.photos/id/1001/5616/3744\"\n       \"https://picsum.photos/id/1002/4312/2868\"\n       \"https://picsum.photos/id/1003/1181/1772\"\n       \"https://picsum.photos/id/1004/5616/3744\"\n       \"https://picsum.photos/id/1005/5760/3840\"])\n    ```", "```java\n    (defn hello-world []\n      [:div\n        [:h1 (:text @app-state)]\n        [image-grid my-images]])\n    ```", "```java\n    dev:packt-clj.reagent-sandbox.core=> (image-grid (take 3 my-images))\n    ```", "```java\n    [:div\n     [:div\n      {:style {:float \"left\", :margin-left \"20px\"}}\n      [#object[packt_clj$reagent_sandbox$core$image_with_width]\n       «https://picsum.photos/id/0/5616/3744»\n       «50px»]]\n     [:div\n      {:style {:float \"left\", :margin-left \"20px\"}}\n      [#object[packt_clj$reagent_sandbox$core$image_with_width]\n       «https://picsum.photos/id/1/5616/3744»\n       «50px»]]\n     [:div\n      {:style {:float \"left\", :margin-left \"20px\"}}\n      [#object[packt_clj$reagent_sandbox$core$image_with_width]\n       «https://picsum.photos/id/10/2500/1667»\n       «50px»]]]\n    ```", "```java\n(defonce a 1)\n(defonce a 2)\n```", "```java\n(reagent/render-component [hello-world]\n                          (. js/document (getElementById \"app\")))\n```", "```java\n(clj->js {\"total\" 42}) \n```", "```java\n(clj->js {:total 42})\n```", "```java\n(clj->js {\"total\" 42\n                \"days\" [\"monday\" \"tuesday\"]})\n```", "```java\n{total: 42, \n  days: [\"monday\" \"tuesday\"]}\n```", "```java\n(js->clj #js {\"total\" 42} :keywordize-keys true)\n```", "```java\n    fetch(\"https://picsum.photos/v2/list?limit=3\")\n    .then((function (response){\n      return response.json();\n    }))\n    .then((function (json){\n      return console.log(json);\n    }))\n    ```", "```java\n    (-> (js/fetch \"https://picsum.photos/v2/list?limit=3\")\n        (.then (fn [response] (.json response)))\n        (.then (fn [json] (println  (js->clj json :keywordize-keys true)))))\n    ```", "```java\n    [{:id \"0\",\n      :author \"Alejandro Escamilla\",\n      :width 5616,\n      :height 3744,\n      :url \"https://unsplash.com/photos/yC-Yzbqy7PY\",\n      :download_url \"https://picsum.photos/id/0/5616/3744\"}\n     {:id \"1\",\n      :author \"Alejandro Escamilla\",\n      :width 5616,\n      :height 3744,\n      :url \"https://unsplash.com/photos/LNRyGwIJr5c\",\n      :download_url \"https://picsum.photos/id/1/5616/3744\"}\n     {:id \"10\",\n      :author \"Paul Jarvis\",\n      :width 2500,\n      :height 1667,\n      :url \"https://unsplash.com/photos/6J--NXulQCs\",\n      :download_url \"https://picsum.photos/id/10/2500/1667\"}]\n    ```", "```java\n    jumblerg/ring-cors {:mvn/version \"2.0.0\"}\n    ```", "```java\n    [jumblerg.middleware.cors :refer [wrap-cors]]\n    ```", "```java\n    (wrap-cors \".*\")\n    (wrap-cors identity)\n    ```", "```java\n    (defn run\n      []\n      (run-jetty\n        (-> routes\n            middleware/wrap-format\n            params/wrap-params\n            (wrap-cors \".*\")\n            (wrap-cors identity))\n        {:port  8080\n         :join? false}))\n    ```"]