["```java\nkubectl get deployment sample-deployment -o yaml | istioctl kube-inject -f - | kubectl apply -f - \n```", "```java\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: hands-on\n  labels:\n    istio-injection: enabled \n```", "```java\nannotations:\n  sidecar.istio.io/inject: \"false\" \n```", "```java\n    implementation 'io.micrometer:micrometer-tracing-bridge-otel'\n    implementation 'io.opentelemetry:opentelemetry-exporter-zipkin' \n    ```", "```java\n    implementation 'io.micrometer:micrometer-tracing-bridge-brave'\n    implementation 'io.zipkin.reporter2:zipkin-reporter-brave' \n    ```", "```java\n    minikube status \n    ```", "```java\n    istioctl experimental precheck \n    ```", "```java\n    cd $BOOK_HOME/Chapter18\n    istioctl install --skip-confirmation \\\n      --set profile=demo \\\n      --set meshConfig.accessLogFile=/dev/stdout \\\n      --set meshConfig.accessLogEncoding=JSON \\\n      --set values.pilot.env.PILOT_JWT_PUB_KEY_REFRESH_INTERVAL=15s \\\n      -f kubernetes/istio-tracing.yml \n    ```", "```java\n    apiVersion: install.istio.io/v1alpha1\n    kind: IstioOperator\n    spec:\n      meshConfig:\n        enableTracing: true\n        defaultConfig:\n          tracing:\n            sampling: 100 \n    ```", "```java\n    kubectl -n istio-system wait --timeout=600s --for=condition=available deployment --all \n    ```", "```java\n    istio_version=$(istioctl version --short --remote=false)\n    echo \"Installing integrations for Istio v$istio_version\"\n    kubectl apply -n istio-system -f https://raw.githubusercontent.com/istio/istio/${istio_version}/samples/addons/kiali.yaml\n    kubectl apply -n istio-system -f https://raw.githubusercontent.com/istio/istio/${istio_version}/samples/addons/jaeger.yaml\n    kubectl apply -n istio-system -f https://raw.githubusercontent.com/istio/istio/${istio_version}/samples/addons/prometheus.yaml\n    kubectl apply -n istio-system -f https://raw.githubusercontent.com/istio/istio/${istio_version}/samples/addons/grafana.yaml \n    ```", "```java\n    kubectl -n istio-system wait --timeout=600s --for=condition=available deployment --all \n    ```", "```java\n    kubectl -n istio-system get deploy \n    ```", "```java\nhelm upgrade --install istio-hands-on-addons kubernetes/helm/environments/istio-system -n istio-system --wait \n```", "```java\nkubectl -n istio-system get secret hands-on-certificate\nkubectl -n istio-system get certificate  hands-on-certificate \n```", "```java\n    minikube tunnel \n    ```", "```java\n    INGRESS_IP=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n    echo $INGRESS_IP \n    ```", "```java\n    MINIKUBE_HOSTS=\"minikube.me grafana.minikube.me kiali.minikube.me prometheus.minikube.me tracing.minikube.me kibana.minikube.me elasticsearch.minikube.me mail.minikube.me health.minikube.me\"\n    echo `127.0.0.1` $MINIKUBE_HOSTS\" | sudo tee -a /etc/hosts \n    ```", "```java\n        code C:\\Windows\\System32\\drivers\\etc\\hosts \n        ```", "```java\n        127.0.0.1 minikube.me grafana.minikube.me kiali.minikube.me prometheus.minikube.me tracing.minikube.me kibana.minikube.me elasticsearch.minikube.me mail.minikube.me health.minikube.me \n        ```", "```java\n        cat C:\\Windows\\System32\\drivers\\etc\\hosts \n        ```", "```java\n    curl -o /dev/null -sk -L -w \"%{http_code}\\n\" https://kiali.minikube.me/kiali/\n    curl -o /dev/null -sk -L -w \"%{http_code}\\n\" https://tracing.minikube.me\n    curl -o /dev/null -sk -L -w \"%{http_code}\\n\" https://grafana.minikube.me\n    curl -o /dev/null -sk -L -w \"%{http_code}\\n\" https://prometheus.minikube.me/graph#/ \n    ```", "```java\napiVersion: networking.istio.io/v1beta1\nkind: Gateway\nmetadata:\n  name: hands-on-gw\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - minikube.me\n    port:\n      name: https\n      number: 443\n      protocol: HTTPS\n    tls:\n      credentialName: hands-on-certificate\n      mode: SIMPLE \n```", "```java\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: hands-on-vs\nspec:\n  gateways:\n  - hands-on-gw\n  hosts:\n  - minikube.me\n  http:\n  - match:\n    - uri:\n        prefix: /oauth2\n    route:\n    - destination:\n        host: auth-server\n  â€“ match:\n    ... \n```", "```java\n{{- define \"common.istio_dr_mutual_tls\" -}}\n{{- range $idx, $dr := .Values.destinationRules }}\napiVersion: networking.istio.io/v1beta1\nkind: DestinationRule\nmetadata:\n  name: {{ $dr.name }}\nspec:\n  host: {{ $dr.name }}\n{{- if $dr.subsets }}\n{{- with $dr.subsets }}\n  subsets:\n{{ toYaml . | indent 2 }}\n{{- end }}\n{{- end }}\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n---\n{{- end -}}\n{{- end -}} \n```", "```java\ndestinationRules:\n  - name: product-composite\n  - name: auth-server\n  - name: product\n  - name: recommendation\n  - name: review \n```", "```java\n    cd $BOOK_HOME/Chapter18\n    eval $(minikube docker-env -u)\n    ./gradlew build\n    eval $(minikube docker-env)\n    docker-compose build \n    ```", "```java\n    kubectl delete namespace hands-on\n    kubectl apply -f kubernetes/hands-on-namespace.yml\n    kubectl config set-context $(kubectl config current-context) --namespace=hands-on \n    ```", "```java\n        for f in kubernetes/helm/components/*; do helm dep up $f; done \n        ```", "```java\n        for f in kubernetes/helm/environments/*; do helm dep up $f; done \n        ```", "```java\n    helm install hands-on-dev-env \\\n      kubernetes/helm/environments/dev-env \\\n      -n hands-on --wait \n    ```", "```java\n    kubectl get pods \n    ```", "```java\n    ./test-em-all.bash \n    ```", "```java\n    kubectl edit cm product-composite \n    ```", "```java\n    # To see tracing headers, uncomment the following two lines and restart the product-composite service\n    # spring.codec.log-request-details: true\n    # logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions: TRACE \n    ```", "```java\n    kubectl delete pod -l app=product-composite \n    ```", "```java\n    kubectl logs -f -l app=product-composite \n    ```", "```java\n    unset ACCESS_TOKEN\n    ACCESS_TOKEN=$(curl -k https://writer:secret-writer@minikube.me/oauth2/token -d grant_type=client_credentials -d scope=\"product:read product:write\" -s | jq -r .access_token)\n    echo $ACCESS_TOKEN\n    curl -H \"Authorization: Bearer $ACCESS_TOKEN\" -k https://minikube.me/product-composite/1 -w \"%{http_code}\\n\" -o /dev/null -s \n    ```", "```java\n    2023-05-15T15:39:25.919Z TRACE [product-composite,01bd9fb5815a7889dea69ec33afee5c5,94d9157ae179554c] 1 --- [     parallel-1] o.s.w.r.f.client.ExchangeFunctions       : [14b00bcd] HTTP GET http://product/\n    product/1?delay=0&faultPercent=0, headers=[X-B3-TraceId:\"01bd9fb5815a7889dea69ec33afee5c5\", X-B3-SpanId:\"94d9157ae179554c\", X-B3-ParentSpanId:\"aa3e97771ef9155e\", X-B3-Sampled:\"1\"] \n    ```", "```java\nmanagement.server.port: 4004 \n```", "```java\nmanagement.server.port: 8443 \n```", "```java\nACCESS_TOKEN=$(curl https://writer:secret-writer@minikube.me/oauth2/token -d grant_type=client_credentials -d scope=\"product:read product:write\" -ks | jq .access_token -r)\necho ACCESS_TOKEN=$ACCESS_TOKEN\nsiege https://minikube.me/product-composite/1 -H \"Authorization: Bearer $ACCESS_TOKEN\" -c1 -d1 -v \n```", "```java\napiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: selfsigned-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ca-cert\nspec:\n  isCA: true\n  commonName: hands-on-ca\n  secretName: ca-secret\n  issuerRef:\n    name: selfsigned-issuer\n---\napiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: ca-issuer\nspec:\n  ca:\n    secretName: ca-secret \n```", "```java\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: hands-on-certificate\nspec:\n  commonName: minikube.me\n  subject:\n    ...\n  dnsNames:\n  - minikube.me\n  - health.minikube.m\n  - dashboard.minikube.me\n  - kiali.minikube.me\n  - tracing.minikube.me\n  - prometheus.minikube.me\n  - grafana.minikube.me\n  - kibana.minikube.me\n  - elasticsearch.minikube.me\n  - mail.minikube.me\n  issuerRef:\n    name: ca-issuer\n  secretName: hands-on-certificate \n```", "```java\nkeytool -printcert -sslserver minikube.me | grep -E \"Owner:|Issuer:\" \n```", "```java\napiVersion: security.istio.io/v1beta1\nkind: RequestAuthentication\nmetadata:\n  name: product-composite-request-authentication\nspec:\n  jwtRules:\n  - forwardOriginalToken: true\n    issuer: http://auth-server\n    jwksUri: http://auth-server.hands-on.svc.cluster.local/oauth2/jwks\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: product-composite\n---\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: product-composite-require-jwt\nspec:\n  action: ALLOW\n  rules:\n  - {}\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: product-composite \n```", "```java\n    ACCESS_TOKEN=$(curl https://writer:secret-writer@minikube.me/oauth2/token  -d grant_type=client_credentials -d scope=\"product:read product:write\" -ks | jq .access_token -r)\n    echo ACCESS_TOKEN=$ACCESS_TOKEN\n    curl -k https://minikube.me/product-composite/1 -H \"Authorization: Bearer $ACCESS_TOKEN\" -i \n    ```", "```java\n    kubectl edit RequestAuthentication product-composite-request-authentication \n    ```", "```java\n    kubectl get RequestAuthentication product-composite-request-authentication -o yaml \n    ```", "```java\n    curl -k https://minikube.me/product-composite/1 -H \"Authorization: Bearer $ACCESS_TOKEN\" -i \n    ```", "```java\n    kubectl edit RequestAuthentication product-composite-request-authentication \n    ```", "```java\n    curl -k https://minikube.me/product-composite/1 -H \"Authorization: Bearer $ACCESS_TOKEN\" \n    ```", "```java\n - jwtRules:\n      issuer: \"https://dev-magnus.eu.auth0.com/\" \n      jwksUri: \"https://dev-magnus.eu.auth0.com/.well-known/jwks.json\" \n```", "```java\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: default\nspec:\n  mtls:\n    mode: PERMISSIVE \n```", "```java\n trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL \n```", "```java\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: product\nspec:\n  hosts:\n    - product\n  http:\n  - route:\n    - destination:\n        host: product\n    fault:\n      abort:\n        httpStatus: 500\n        percentage:\n          value: 20 \n```", "```java\n    kubectl apply -f kubernetes/resilience-tests/product-virtual-service-with-faults.yml \n    ```", "```java\n    kubectl delete -f kubernetes/resilience-tests/product-virtual-service-with-faults.yml \n    ```", "```java\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: product\nspec:\n  hosts:\n    - product\n  http:\n  - route:\n    - destination:\n        host: product\n    fault:\n      delay:\n        fixedDelay: 3s\n        percent: 100 \n```", "```java\n    kubectl apply -f kubernetes/resilience-tests/product-virtual-service-with-delay.yml \n    ```", "```java\n    ACCESS_TOKEN=$(curl https://writer:secret-writer@minikube.me/oauth2/token  -d grant_type=client_credentials -d scope=\"product:read product:write\" -ks | jq .access_token -r)\n    echo ACCESS_TOKEN=$ACCESS_TOKEN \n    ```", "```java\n    for i in {1..6}; do time curl -k https://minikube.me/product-composite/1 -H \"Authorization: Bearer $ACCESS_TOKEN\"; done \n    ```", "```java\n    kubectl delete -f kubernetes/resilience-tests/product-virtual-service-with-delay.yml \n    ```", "```java\ncurl -ks https://health.minikube.me/actuator/health | jq -r .components.circuitBreakers.details.product.details.state \n```", "```java\n{{- define \"common.istio_vs_green_blue_deploy\" -}}\n{{- range $name := .Values.virtualServices }}\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: {{ $name }}\nspec:\n  hosts:\n  - {{ $name }}\n  http:\n  - match:\n    - headers:\n        X-group:\n          exact: test\n    route:\n    - destination:\n        host: {{ $name }}\n        subset: new\n  - route:\n    - destination:\n        host: {{ $name }}\n        subset: old\n      weight: 100\n    - destination:\n        host: {{ $name }}\n        subset: new\n      weight: 0\n---\n{{- end -}}\n{{- end -}} \n```", "```java\n version: {{ .Values.image.tag }} \n```", "```java\nproduct:\n  fullnameOverride: product-v1\nrecommendation:\n  fullnameOverride: recommendation-v1\nreview:\n  fullnameOverride: review-v1 \n```", "```java\nproduct-green:\n  fullnameOverride: product-v2\n  image:\n    tag: v2 \n```", "```java\nvirtualServices:\n  - product\n  - recommendation\n  - review \n```", "```java\ndestinationRules:\n  - ...\n  - name: product\n    subsets:\n    - labels:\n        version: v1\n      name: old\n    - labels:\n        version: v2\n      name: new\n... \n```", "```java\n    helm uninstall hands-on-dev-env \n    ```", "```java\n    kubectl get pods \n    ```", "```java\n    eval $(minikube docker-env)\n    docker-compose up -d mongodb mysql rabbitmq \n    ```", "```java\n    docker tag hands-on/auth-server hands-on/auth-server:v1\n    docker tag hands-on/product-composite-service hands-on/product-composite-service:v1\n    docker tag hands-on/product-service hands-on/product-service:v1\n    docker tag hands-on/recommendation-service hands-on/recommendation-service:v1\n    docker tag hands-on/review-service hands-on/review-service:v1\n    docker tag hands-on/product-service hands-on/product-service:v2\n    docker tag hands-on/recommendation-service hands-on/recommendation-service:v2\n    docker tag hands-on/review-service hands-on/review-service:v2 \n    ```", "```java\n    helm install hands-on-prod-env \\\n      kubernetes/helm/environments/prod-env \\\n      -n hands-on --wait \n    ```", "```java\n    kubectl get pods \n    ```", "```java\n    ./test-em-all.bash \n    ```", "```java\n    - Response Body: Jwks doesn't have key to match kid or alg from Jwt \n    ```", "```java\nTest FAILED, EXPECTED VALUE: 3, ACTUAL VALUE: 0, WILL ABORT \n```", "```java\n    ACCESS_TOKEN=$(curl https://writer:secret-writer@minikube.me/oauth2/token -d grant_type=client_credentials -d scope=\"product:read product:write\" -ks | jq .access_token -r)\n    echo ACCESS_TOKEN=$ACCESS_TOKEN\n    siege https://minikube.me/product-composite/1 -H \"Authorization: Bearer $ACCESS_TOKEN\" -c1 -d1 -v \n    ```", "```java\n    ACCESS_TOKEN=$(curl https://writer:secret-writer@minikube.me/oauth2/token  -d grant_type=client_credentials -d scope=\"product:read product:write\" -ks | jq .access_token -r)\n    echo ACCESS_TOKEN=$ACCESS_TOKEN\n    curl -ks https://minikube.me/product-composite/1 -H \"Authorization: Bearer $ACCESS_TOKEN\" | jq .serviceAddresses \n    ```", "```java\n    curl -ks https://minikube.me/product-composite/1 -H \"Authorization: Bearer $ACCESS_TOKEN\" -H \"X-group: test\" | jq .serviceAddresses \n    ```", "```java\nspec:\n  http:\n  - match:\n    ...\n  - route:\n    - destination:\n        host: review\n        subset: old\n      weight: 100\n    - destination:\n        host: review\n        subset: new\n      weight: 0 \n```", "```java\nkubectl patch virtualservice review --type=json -p='[\n  {\"op\": \"add\", \"path\": \"/spec/http/1/route/0/weight\", \"value\": 80},\n  {\"op\": \"add\", \"path\": \"/spec/http/1/route/1/weight\", \"value\": 20}\n]' \n```", "```java\n    kubectl patch virtualservice review --type=json -p='[\n      {\"op\": \"add\", \"path\": \"/spec/http/1/route/0/weight\", \"value\":  \n      80},\n      {\"op\": \"add\", \"path\": \"/spec/http/1/route/1/weight\", \"value\":  \n      20}\n    ]' \n    ```", "```java\n./kubernetes/routing-tests/split-traffic-between-old-and-new-services.bash 0 100 \n```", "```java\n./kubernetes/routing-tests/split-traffic-between-old-and-new-services.bash 100 0 \n```", "```java\nUSE_K8S=false HOST=localhost PORT=8443 HEALTH_URL=https://localhost:8443 ./test-em-all.bash start stop \n```"]