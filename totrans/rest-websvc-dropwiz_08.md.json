["```java\n<dependency><groupId>io.dropwizard</groupId><artifactId>dropwizard-client</artifactId><version>0.7.0-SNAPSHOT</version></dependency>\n```", "```java\n      package com.dwbook.phonebook.resources;\n\n      import javax.ws.rs.*;\n      import javax.ws.rs.core.*;\n      import com.dwbook.phonebook.representations.Contact;\n      import com.sun.jersey.api.client.*;\n\n      public class ClientResource { }\n    ```", "```java\n      @Path(\"/client/\") \n      public class ClientResource { }\n    ```", "```java\n      @Produces(MediaType.TEXT_PLAIN)\n      @Path(\"/client/\")\n      public class ClientResource { }\n    ```", "```java\n    private Client client;\n      public ClientResource(Client client) {\n        this.client = client;\n      }\n    ```", "```java\n      // build the client and add the resource to the environment\n      final Client client = new JerseyClientBuilder(e).build(\"REST Client\");\n      e.jersey().register(new ClientResource(client));\n    ```", "```java\n      @GET\n      @Path(\"showContact\")\n      public String showContact(@QueryParam(\"id\") int id) {\n        WebResource contactResource = client.resource(\"http://localhost:8080/contact/\"+id);\n        Contact c = contactResource.get(Contact.class);\n        String output = \"ID: \"+ id \n            +\"\\nFirst name: \" + c.getFirstName() \n            + \"\\nLast name: \" + c.getLastName() \n            + \"\\nPhone: \" + c.getPhone();\n        return output;\n      }\n    ```", "```java\n      @GET\n      @Path(\"newContact\")\n      public Response newContact(@QueryParam(\"firstName\") String firstName, @QueryParam(\"lastName\") String lastName, @QueryParam(\"phone\") String phone) {\n        WebResource contactResource = client.resource(\"http://localhost:8080/contact\");\n        ClientResponse response = contactResource.type(MediaType.APPLICATION_JSON).post(ClientResponse.class, new Contact(0, firstName, lastName, phone));\n        if (response.getStatus() == 201) {\n          // Created\n          return Response.status(302).entity(\"The contact was created successfully! The new contact can be found at \" + response.getHeaders().getFirst(\"Location\")).build();\n        }\n        else {\n          // Other Status code, indicates an error\n          return Response.status(422).entity(response.getEntity(String.class)).build();\n        }\n      }\n    ```", "```java\n    @GET\n      @Path(\"updateContact\")\n      public Response updateContact(@QueryParam(\"id\") int id, @QueryParam(\"firstName\") String firstName, @QueryParam(\"lastName\") String lastName, @QueryParam(\"phone\") String phone) {\n        WebResource contactResource = client.resource(\"http://localhost:8080/contact/\" + id);\n        ClientResponse response = contactResource.type(MediaType.APPLICATION_JSON).put(ClientResponse.class, new Contact(id, firstName, lastName, phone));\n        if (response.getStatus() == 200) {\n          // Created\n          return Response.status(302).entity(\"The contact was updated successfully!\").build();\n        }\n        else {\n          // Other Status code, indicates an error\n          return Response.status(422).entity(response.getEntity(String.class)).build();\n        }\n      }\n    ```", "```java\n    @GET\n      @Path(\"deleteContact\")\n      public Response deleteContact(@QueryParam(\"id\") int id) {\n        WebResource contactResource = client.resource(\"http://localhost:8080/contact/\"+id);\n        contactResource.delete();\n        return Response.noContent().entity(\"Contact was deleted!\").build();\n      }\n    ```"]