["```java\ntype Query {  me: LogginInUser\n  # You can add other queries here\n}\ntype LoggedInUser {\n  id: ID\n  accessToken: String\n  refreshToken: String\n  username: String\n}\n```", "```java\n# Request input{\n  me {\n    id\n    username\n  }\n}\n#JSON response\n{\n  \"data\": {\n    \"me\": {\n      \"id\": \"asdf90asdkqwe09kl\",\n      \"username\": \"scott\"\n    }\n  }\n}\n```", "```java\nquery {  me {\n    id\n    username\n  }\n}\n```", "```java\ntype Mutation {  addItemInCart(productId: ID, qty: Int): [Item]\n  # You can add other mutations here\n}\ntype Item {\n  id: ID!\n  productId: ID\n  qty: Int\n}\n```", "```java\n# Request inputmutation {\n  addItemInCart(productId: \"qwer90asdkqwe09kl\", qty: 2) {\n    id\n    productId\n  }\n}\n```", "```java\n#JSON response{\n  \"data\": {\n    addItemInCart: [\n      {\n        \"id\": \"zxcv90asdkqwe09kl\",\n        \"productId\": \"qwer90asdkqwe09kl\"\n      }\n    ]\n  }\n}\n```", "```java\ntype Subscription {  orderShipped(customerID: ID!): Order\n  # You can add other subscriptions here\n}\n# Order type contains order information and another object\n# Shipping. Shipping contains id and estDeliveryDate and\n# carrier fields\ntype Order {\n  # other fields omitted for brevity\n  shipping: Shipping\n}\ntype Shipping {\n  Id: ID!\n  estDeliveryDate: String\n  carrier: String\n}\n```", "```java\n# Request Inputsubscription {\n  orderShipped(customerID: \"customer90asdkqwe09kl\") {\n    shipping {\n      estDeliveryDate\n      trackingId\n    }\n  }\n}\n# JSON Output\n{\n  \"data\": {\n    \"orderShipped\": {\n      \"estDeliveryDate\": \"13-Aug-2022\",\n      \"trackingId\": \"tracking90asdkqwe09kl\"\n    }\n  }\n}\n```", "```java\n scalar Date\n```", "```java\nenum OrderStatus {  CREATED\n  CONFIRMED\n  SHIPPED\n  DELIVERED\n  CANCELLED\n}\n```", "```java\nquery HomeAndBillingAddress {  home: getAddress(type: \"home\") {\n    number\n    residency\n    street\n    city\n    pincode\n  }\n  billing: getAddress(type: \"home\") {\n    number\n    residency\n    street\n    city\n    pincode\n  }\n}\n```", "```java\n query HomeAndBillingAddress {   home: getAddress(type: \"home\") {\n     ...addressFragment\n   }\n   billing: getAddress(type: \"home\") {\n     ...addressFragment\n   }\n }\n fragment addressFragment on Address {\n   number\n   residency\n   street\n   city\n   pincode\n }\n```", "```java\ninterface Product {   id: ID!\n   name: String!\n   description: string\n }\n type Book implements Product {\n   id: ID!\n   name: String!\n   description: string\n   author: String!\n   publisher: String\n   noOfPages: Int\n }\n type Bookcase implements Product {\n   id: ID!\n   name: String!\n   description: string\n   material: [String!]!\n   width: Int\n   height: Int\n   depth: Int\n }\n```", "```java\n type query {   allProducts: [Product]\n }\n```", "```java\n query getProducts {   allProducts {\n     id\n     name\n     description\n   }\n }\n```", "```java\n query getProducts {   allProducts {\n     id\n     name\n     description\n     ... on Book {\n       author\n       publisher\n     }\n     ... on BookCase {\n       material\n       height\n     }\n   }\n }\n```", "```java\nunion SearchResult = Book | Author type Book {\n   id: ID!\n   name: String!\n   publisher: String\n }\n type Author {\n   id: ID!\n   name: String!\n }\n type Query {\n  search(text: String): [SearchResult]\n }\n```", "```java\n # Request Input {\n   search(text: \"Malcolm Gladwell\") {\n     __typename\n     ... on Book {\n       name\n       publisher\n     }\n     ... on Author {\n       name\n     }\n   }\n }\n Response JSON\n {\n   \"data\": {\n     \"search\": [\n       {\n         \"__typename\": \"Book\",\n         \"name\": \"Blink\",\n         \"publisher\": \"Back Bay Books\"\n       },\n       {\n         \"__typename\": \"Author\",\n         \"name\": \" Malcolm Gladwell \",\n       }\n     ]\n   }\n }\n```", "```java\n type Mutation {   addProduct(prodInput: ProductInput): Product\n }\n input ProductInput {\n   name: String!\n   description: String\n   price: Float!\n   # other fields…\n }\n type Product {\n   # Product Input fields. Truncated for brevity.\n }\n```", "```java\n # Request Input mutation AddProduct ($input: ProductInput) {\n   addProduct(prodInput: $input) {\n     name\n   }\n }\n #---- Variable Section ----\n {\n   \"input\": {\n     name: \"Blink\",\n     description: \"a book\",\n     \"price\": 10.00\n   }\n }\n # JSON Output\n {\n   \"data\": {\n     addProduct {\n       \"name\": \"Blink\"\n     }\n   }\n }\n```", "```java\n    {  repository(    name: \"Modern-API-Development-with-Spring-6-and-Spring-Boot-3\"    owner: \"PacktPublishing\"  ) {    id    owner {      id      login    }    name    description    viewerHasStarred    stargazerCount  }}\n    ```", "```java\n    {  \"data\": {    \"repository\": {      \"id\": \"R_kgDOHzYNwg\",      \"owner\": {        \"id\": \"MDEyOk9yZ2FuaXphdGlvbjEwOTc0OTA2\",        \"login\": \"PacktPublishing\"      },      \"name\": \"Modern-API-Development-with-Spring-6-        and-Spring-Boot-3\",      \"description\": \"Modern API Development with      Spring 6 and Spring Boot 3, Published by Packt\",      \"viewerHasStarred\": false,      \"stargazerCount\": 1    }  }}\n    ```", "```java\n    mutation {  addStar(input: {starrableId: \"R_kgDOHzYNwg\"}) {    clientMutationId  }}\n    ```", "```java\n SELECT * FROM ecomm.user; SELECT * FROM ecomm.orders WHERE customer_id in (1);\n SELECT * FROM ecomm.orders WHERE customer_id in (2);\n ...\n ...\n SELECT * FROM ecomm.orders WHERE customer_id in (n);\n```", "```java\n type Mutation {   getUsersOrders: [User]\n }\n type User {\n   name: String\n   orders: [Order]\n }\n type Order {\n   id: Int\n   status: Status\n }\n```", "```java\n {   getUsersOrders {\n     name\n     orders {\n       id\n       status\n     }\n   }\n }\n```", "```java\n    mutation {  addStar(input: {starrableId: $repoId }) {    clientMutationId  }}\n    ```", "```java\n{  \"repoId\": \"R_kgDOHzYNwg\"\n}\n```"]