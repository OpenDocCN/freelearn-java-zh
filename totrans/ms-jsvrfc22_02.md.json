["```java\n<context-param>\n  <param-name>number.one.in.ATP</param-name>\n  <param-value>Rafael Nadal</param-value>\n</context-param>\n```", "```java\n<h:outputText value=\"#{initParam['number.one.in.ATP']}\"/>\n<h:outputText value=\"#{facesContext.externalContext.initParameterMap['number.one.in.ATP']}\"/>\n```", "```java\nfacesContext.getExternalContext().getInitParameter(\"number.one.in.ATP\");\n```", "```java\n<h:form>\n  Click to send name, 'Rafael' surname, 'Nadal', with f:param:\n  <h:commandButton value=\"Send Rafael Nadal\"  action=\"#{playersBean.parametersAction()}\">\n  <f:param id=\"playerName\" name=\"playerNameParam\" value=\"Rafael\"/>\n  <f:param id=\"playerSurname\" name=\"playerSurnameParam\" value=\"Nadal\"/>\n  </h:commandButton>\n</h:form>\n```", "```java\nprivate String playerName;\nprivate String playerSurname;\n...\n//getter and setter\n...\n\npublic String parametersAction() {\n\n  FacesContext fc = FacesContext.getCurrentInstance();\n  Map<String, String> params = fc.getExternalContext().getRequestParameterMap();\n  playerName = params.get(\"playerNameParam\");\n  playerSurname = params.get(\"playerSurnameParam\");\n\n  return \"some_page\";\n}\n```", "```java\nName: #{param.playerNameParam} \nSurname: #{param.playerSurnameParam}\n```", "```java\n<h:outputFormat value=\"Name: {0} Surname: {1}\">\n  <f:param value=\"#{playersBean.playerName}\" />\n  <f:param value=\"#{playersBean.playerSurname}\" /> \n</h:outputFormat>\n```", "```java\n@PostConstruct\npublic void init(){\n  //do something with playerNameParam and playerSurnameParam\n}\n```", "```java\n@ManagedProperty(value = \"#{param.playerNameParam}\")\nprivate String playerName;\n@ManagedProperty(value = \"#{param.playerSurnameParam}\")\nprivate String playerSurname;\n```", "```java\n<h:link value=\"Send Rafael Nadal\" outcome=\"result\">\n  <f:param id=\"playerName\" name=\"playerNameParam\" value=\"Rafael\"/>\n  <f:param id=\"playerSurname\" name=\"playerSurnameParam\" value=\"Nadal\"/>               \n</h:link>\n```", "```java\nName: #{param.playerNameParam} \nSurname: #{param.playerSurnameParam}\n```", "```java\n<f:metadata>\n  <f:viewParam name=\"playernameparam\" value=\"#{playersBean.playerName}\"/>\n  <f:viewParam name=\"playersurnameparam\"  value=\"#{playersBean.playerSurname}\"/> \n</f:metadata>\n...\n<h:body>\n  You requested name: <h:outputText value=\"#{playersBean.playerName}\"/><br/>\n  You requested surname: <h:outputText value=\"#{playersBean.playerSurname}\"/>\n</h:body>\n```", "```java\n<f:metadata>\n  <f:viewParam name=\"playernameparam\" value=\"#{playersBean.playerName}\"/>\n  <f:viewParam name=\"playersurnameparam\" value=\"#{playersBean.playerSurname}\"/> \n</f:metadata>\n...\n<h:body>        \n  <h:form>\n    Enter name:<h:inputText value=\"#{playersBean.playerName}\"/>\n    Enter name:<h:inputText value=\"#{playersBean.playerSurname}\"/>\n  <h:commandButton value=\"Submit\" action=\"results?faces-redirect=true&amp;includeViewParams=true\"/>\n  </h:form>               \n</h:body>\n```", "```java\n<f:metadata>\n  <f:viewParam name=\"playernameparam\" value=\"#{playersBean.playerName}\"/>\n  <f:viewParam name=\"playersurnameparam\" value=\"#{playersBean.playerSurname}\"/> \n</f:metadata>\n...\n<h:body>        \n  You requested name: <h:outputTextvalue=\"#{playersBean.playerName}\"/><br/>\n  You requested surname: <h:outputText value=\"#{playersBean.playerSurname}\"/>       \n</h:body>\n```", "```java\n<f:metadata>\n  <f:viewParam name=\"playernameparam\" value=\"#{playersBean.playerName}\"/>            \n <f:viewParam name=\"playersurnameparam\" value=\"#{playersBean.playerSurname}\"/> \n</f:metadata>\n...\n<h:body>        \n  <h:link value=\"Send\"outcome=\"results?faces-redirect=true\" includeViewParams=\"true\"/>\n</h:body>\n```", "```java\n<f:metadata>\n  <f:viewParam name=\"playernameparam\" value=\"#{playersBean.playerName}\"/>            \n  <f:viewParam name=\"playersurnameparam\" value=\"#{playersBean.playerSurname}\"/> \n</f:metadata>\n...\n<h:body>\n  <h:form>\n    Enter name:<h:inputText value=\"#{playersBean.playerName}\"/>\n    Enter name:<h:inputText value=\"#{playersBean.playerSurname}\"/>\n    <h:commandButton value=\"Submit\" action=\"#{playersBean.toUpperCase()}\"/>\n  </h:form>\n</h:body>\n```", "```java\npublic String toUpperCase(){\n  playerName=playerName.toUpperCase();\n  playerSurname=playerSurname.toUpperCase();\n\n  return \"results?faces-redirect=true&includeViewParams=true\";\n}\n```", "```java\n<f:metadata>\n  <f:viewParam name=\"playernameparam\" required=\"true\" requiredMessage=\"Player name required!\" value=\"#{playersBean.playerName}\"/>            \n  <f:viewParam name=\"playersurnameparam\" required=\"true\" requiredMessage=\"Player surname required!\" value=\"#{playersBean.playerSurname}\"/> \n</f:metadata>\n```", "```java\n@FacesValidator(\"playerValidator\")\npublic class PlayerValidator implements Validator {\n\n  @Override\n  public void validate(FacesContext context, UIComponent component, \n  Object value) throws ValidatorException {\n    //validation conditions\n   ...\n```", "```java\n<f:metadata>\n  <f:viewParam id=\"nameId\" name=\"playernameparam\"  validator=\"playerValidator\" value=\"#{playersBean.playerName}\"/>            \n  <f:viewParam id=\"surnameId\" name=\"playersurnameparam\" validator=\"playerValidator\"value=\"#{playersBean.playerSurname}\"/>         \n</f:metadata>  \n```", "```java\nprivate Date date = new Date();\n...  \npublic String sendDate() {\n  String dateAsString = new SimpleDateFormat(\"dd-MM-yyyy\").format(date);\n  return \"date.xhtml?faces-redirect=true&date=\" + dateAsString;\n}\n```", "```java\n<f:viewParam name=\"date\" value=\"#{dateBean.date}\">\n  <f:convertDateTime pattern=\"dd-MM-yyyy\" />\n</f:viewParam>\n```", "```java\n<f:metadata>\n  <f:viewParam name=\"playernameparam\" value=\"#{playersBean.playerName}\"/>            \n  <f:viewParam name=\"playersurnameparam\" value=\"#{playersBean.playerSurname}\"/> \n <f:event type=\"preRenderView\" listener=\"#{playersBean.init()}\"/>\n</f:metadata>\n```", "```java\npublic void init() {        \n  // do something with playerName and playerSurname \n}\n```", "```java\npublic void init() {        \n  if (!FacesContext.getCurrentInstance().isPostback()) {\n    // do something with playerName and playerSurname \n  }\n}\n```", "```java\n<f:metadata>\n  <f:viewParam id=\"nameId\" name=\"playernameparam\" value=\"#{playersBean.playerName}\"/>            \n  <f:viewParam id=\"surnameId\" name=\"playersurnameparam\" value=\"#{playersBean.playerSurname}\"/>   \n <f:viewAction action=\"#{playersBean.validateData()}\"/>\n</f:metadata>\n```", "```java\npublic String validateData() {\n  //validation conditions\n  return \"index\"; //or other page\n}\n```", "```java\n    if (!FacesContext.getCurrentInstance().isPostback()) {\n      // code that should not be executed in postback phase\n    }\n    ```", "```java\n    <f:metadata>\n      <f:viewParam name=\"playernameparam\" value=\"#{playersBean.playerName}\"/>\n      <f:viewParam name=\"playersurnameparam\" value=\"#{playersBean.playerSurname}\"/> \n      <f:event type=\"preRenderView\" listener=\"#{playersBean.init()}\"/>\n    </f:metadata>\n    ```", "```java\n    public void init() {\n      if (playerName != null) {\n        playerName = playerName.toUpperCase();\n      }\n      if (playerSurname != null) {\n        playerSurname = playerSurname.toUpperCase();\n      }\n    }\n    ```", "```java\n    public void init() {\n      if (!FacesContext.getCurrentInstance().isPostback()) {\n        if (playerName != null) {\n          playerName = playerName.toUpperCase();\n        }\n        if (playerSurname != null) {\n          playerSurname = playerSurname.toUpperCase();\n        }\n       }\n    }\n    ```", "```java\n    <f:metadata>\n      <f:viewParam name=\"playernameparam\" value=\"#{playersBean.playerName}\"/>\n      <f:viewParam name=\"playersurnameparam\" value=\"#{playersBean.playerSurname}\"/> \n      <f:viewAction action=\"#{playersBean.init()}\"/>\n    </f:metadata>\n    ```", "```java\n    <f:viewAction action=\"#{playersBean.init()}\" onPostback=\"true\"/>\n    ```", "```java\n    public String init() {\n      if (playerName != null) {\n        playerName = playerName.toUpperCase();\n      }\n      if (playerSurname != null) {\n        playerSurname = playerSurname.toUpperCase();\n      }\n      return \"start\";\n    }\n    ```", "```java\n    ConfigurableNavigationHandler handler = (ConfigurableNavigationHandler) FacesContext.getCurrentInstance().getApplication().getNavigationHandler();\n    handler.performNavigation(\"start\");\n    ```", "```java\n    <navigation-rule>\n      <from-view-id>index.xhtml</from-view-id>\n      <navigation-case>\n        <from-action>#{playersBean.init()}</from-action> \n        <from-outcome>start</from-outcome>\n        <to-view-id>rafa.xhtml</to-view-id>\n        <redirect/>\n      </navigation-case>\n    </navigation-rule>\n    ```", "```java\n    <f:viewAction action=\"#{playersBean.init()}\" immediate=\"true\"/>\n    ```", "```java\n    <f:viewAction action=\"#{playersBean.init()}\" phase=\"UPDATE_MODEL_VALUES\"/>\n    ```", "```java\n<h:commandButton actionListener=\"#{playersBean.parametersAction}\">\n  <f:attribute name=\"value\" value=\"Send Rafael Nadal\" />\n</h:commandButton>\n```", "```java\n<h:commandButton value=\"Send Rafael Nadal\" actionListener=\"#{playersBean.parametersAction}\">\n```", "```java\n<h:commandButton actionListener=\"#{playersBean.parametersAction}\">\n  <f:attribute id=\"playerName\" name=\"playerNameAttr\" value=\"Rafael\"/>               \n  <f:attribute id=\"playerSurname\" name=\"playerSurnameAttr\" value=\"Nadal\"/>\n</h:commandButton>\n```", "```java\nprivate final static Logger logger = Logger.getLogger(PlayersBean.class.getName());\nprivate String playerName;\nprivate String playerSurname;\n...\n//getters and setters\n...\npublic void parametersAction(ActionEvent evt) {     \n\n  playerName = (String) evt.getComponent().getAttributes().get(\"playerNameAttr\");\n  playerSurname = (String) evt.getComponent().getAttributes().get(\"playerSurnameAttr\");\n\n  logger.log(Level.INFO, \"Name: {0} Surname: {1}\", new Object[]{playerName, playerSurname});\n}\n```", "```java\n<h:form>  \n  <p:fileUpload \n    fileUploadListener=\"#{fileUploadController.handleFileUpload}\" \n    mode=\"advanced\" dragDropSupport=\"false\"  \n    update=\"messages\" sizeLimit=\"100000\" fileLimit=\"3\"   \n    allowTypes=\"/(\\.|\\/)(gif|jpe?g|png)$/\">  \n  <f:attribute id=\"playerName\" name=\"playerNameAttr\" value=\"Rafael\"/>               \n  <f:attribute id=\"playerSurname\" name=\"playerSurnameAttr\" value=\"Nadal\"/> \n  </p:fileUpload>\n  <p:growl id=\"messages\" showDetail=\"true\"/>  \n</h:form>\n```", "```java\npublic void handleFileUpload(FileUploadEvent evt) {\n\n  //upload specific tasks, see PrimeFaces documentation\n\n  String playerName = (String) evt.getComponent().getAttributes().get(\"playerNameAttr\");\n  String playerSurname = (String) evt.getComponent().getAttributes().get(\"playerSurnameAttr\");\n\n  FacesMessage msg = new FacesMessage(\"Successful\", evt.getFile().getFileName() + \" is uploaded for \" + playerName + \" \" + playerSurname);\n\n  FacesContext.getCurrentInstance().addMessage(null, msg);\n}\n```", "```java\n<h:form>\n  <h:inputText binding=\"#{playersBean.htmlInputText}\" value=\"#{playersBean.playerNameSurname}\">\n    <f:attribute name=\"playerNameAttr\" value=\"Rafael Nadal\"/>\n  </h:inputText>\n</h:form>\n```", "```java\n@Named\n@RequestScoped\npublic class PlayersBean {\n\n  private UIInput htmlInputText= null;    \n\n  public PlayersBean() {\n  }\n\n  public UIInput getHtmlInputText() {\n    return htmlInputText;\n  }\n\n  public void setHtmlInputText(UIInput htmlInputText) {\n    this.htmlInputText = htmlInputText;\n  }    \n\n  public String getPlayerNameSurname() {\n return (String) htmlInputText.getAttributes().get(\"playerNameAttr\");\n  }    \n}\n```", "```java\n<h:commandButton value=\"Send Rafael Nadal 1\">\n  <f:setPropertyActionListener id=\"playerName\"  target=\"#{playersBean.playerName}\" value=\"Rafael\"/>\n  <f:setPropertyActionListener  id=\"playerSurname\" target=\"#{playersBean.playerSurname}\" value=\"Nadal\"/>\n</h:commandButton>\n```", "```java\nprivate final static Logger logger =Logger.getLogger(PlayersBean.class.getName());\nprivate String playerName;\nprivate String playerSurname;\n\npublic void setPlayerName(String playerName) {\n  this.playerName = playerName;\n  logger.log(Level.INFO, \"Player name (from setPlayerName() method: {0}\", playerName);\n}\n\npublic void setPlayerSurname(String playerSurname) {\n  this.playerSurname = playerSurname;\n  logger.log(Level.INFO, \"Player surname (from setPlayerSurname() method: {0}\", playerSurname);\n}\n```", "```java\nINFO:   Player name (from setPlayerName() method: Rafael\nINFO:   Player surname (from setPlayerSurname() method: Nadal\n```", "```java\n<h:commandButton value=\"Send Rafael Nadal 2\" actionListener=\"#{playersBean.parametersAction}\">\n  <f:setPropertyActionListener id=\"playerName\" target=\"#{playersBean.playerName}\" value=\"Rafael\"/>\n  <f:setPropertyActionListener  id=\"playerSurname\" target=\"#{playersBean.playerSurname}\" value=\"Nadal\"/>\n</h:commandButton>\n```", "```java\npublic void parametersAction(ActionEvent e) {        \n  logger.log(Level.INFO, \"Player name (from parametersAction(ActionEvent) method: {0}\", playerName);\n  logger.log(Level.INFO, \"Player surname (from parametersAction(ActionEvent) method: {0}\", playerSurname);\n}\n```", "```java\nINFO:   Player name (from parametersAction() method: null\nINFO:   Player surname (from parametersAction() method: null\nINFO:   Player name (from setPlayerName() method: Rafael\nINFO:   Player surname (from setPlayerSurname() method: Nadal\n```", "```java\n<h:commandButton value=\"Send Rafael Nadal 3\" action=\"#{playersBean.parametersAction()}\">\n  <f:setPropertyActionListener id=\"playerName\" target=\"#{playersBean.playerName}\" value=\"Rafael\"/>\n  <f:setPropertyActionListener  id=\"playerSurname\" target=\"#{playersBean.playerSurname}\" value=\"Nadal\"/>\n</h:commandButton>\n```", "```java\npublic void parametersAction() {        \n  logger.log(Level.INFO, \"Player name (from parametersAction() method: {0}\", playerName);\n  logger.log(Level.INFO, \"Player surname (from parametersAction() method: {0}\", playerSurname);\n}\n```", "```java\nINFO:   Player name (from setPlayerName() method: Rafael\nINFO:   Player surname (from setPlayerSurname() method: Nadal\nINFO:   Player name (from parametersAction() method: Rafael\nINFO:   Player surname (from parametersAction() method: Nadal\n```", "```java\n@Named\n@RequestScoped\npublic class PlayersBean {\n\n  private final static Logger logger = Logger.getLogger(PlayersBean.class.getName());\n  private String playerName;\n  private String playerSurname;\n\n...\n\n  public String addValuesToFlashAction() {\n\n    Flash flash = FacesContext.getCurrentInstance().getExternalContext().getFlash();\n    flash.put(\"playerName\", playerName);\n    flash.put(\"playerSurname\", playerSurname);\n\n    return \"terms?faces-redirect=true\";\n  }\n\n  public void pullValuesFromFlashAction(ComponentSystemEvent e) {\n\n    Flash flash = FacesContext.getCurrentInstance().getExternalContext().getFlash();\n    playerName = (String) flash.get(\"playerName\");\n    playerSurname = (String) flash.get(\"playerSurname\");\n  }\n\n  public String termsAcceptedAction() {\n\n    Flash flash = FacesContext.getCurrentInstance().getExternalContext().getFlash();\n\n    flash.setKeepMessages(true);\n    pullValuesFromFlashAction(null);\n\n    //do something with firstName, lastName \n    logger.log(Level.INFO, \"First name: {0}\", playerName);\n    logger.log(Level.INFO, \"Last name: {0}\", playerSurname);\n\n    FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(\"Terms accepted and player registered!\"));\n    return \"done?faces-redirect=true\";\n  }\n\n  public String termsRejectedAction() {\n\n    Flash flash = FacesContext.getCurrentInstance().getExternalContext().getFlash();\n\n    flash.setKeepMessages(true);\n    pullValuesFromFlashAction(null);\n\n    FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(\"Terms rejected! Player not registered!\"));\n    return \"index?faces-redirect=true\";\n  }\n}\n```", "```java\n  <h:body>\n    <f:metadata> \n      <f:event type=\"preRenderView\" listener=\"#{playersBean.pullValuesFromFlashAction}\"/> \n    </f:metadata>\n    <h:messages />  \n    <h:form>                       \n      Name: <h:inputText value=\"#{playersBean.playerName}\"/>\n      Surname: <h:inputText value=\"#{playersBean.playerSurname}\"/>\n     <h:commandButton value=\"Register\" action=\"#{playersBean.addValuesToFlashAction()}\"/>          \n    </h:form>\n  </h:body>\n```", "```java\n  <h:body>\n    <h:messages />  \n      Hello, <h:outputText value=\"#{flash.keep.playerName} #{flash.keep.playerSurname}\"/>    \n    <br/><br/>Terms &amp; Conditions ... ... ... ... ...\n    <h:form>\n    <h:commandButton value=\"Reject\" action=\"#{playersBean.termsRejectedAction()}\" />\n    <h:commandButton value=\"Accept\" action=\"#{playersBean.termsAcceptedAction()}\" />\n    </h:form>\n  </h:body>\n```", "```java\n#{flash.keep.playerName}\n#{flash.keep.playerSurname}\n```", "```java\n    #{flash.playerName}\n    #{flash.playerSurname}\n    ```", "```java\n  <h:body>\n    <f:metadata> \n     <f:event type=\"preRenderView\" listener=\"#{playersBean.pullValuesFromFlashAction}\"/> \n    </f:metadata>\n    <h:messages />  \n    <h:outputText value=\"#{playersBean.playerName} #{playersBean.playerSurname}\"/> successfully registered!\n  </h:body>\n```", "```java\n<ui:include src=\"img/rafa.xhtml\">\n  <f:param name=\"rafa\" value=\"Rafael Nadal Page\"/>,\n</ui:include>\n```", "```java\n<ui:include src=\"img/rafa.xhtml\">\n  <c:set var=\"rafa\" value=\"Rafael Nadal Page\" scope=\"request\"/>,\n</ui:include>\n```", "```java\npublic ConstructorMethod(){\n  FacesContext facesContext = FacesContext.getCurrentInstance();\n  HttpServletRequest httpServletRequest  = (HttpServletRequest) facesContext.getExternalContext().getRequest();\n  String rafa = (String) request.getAttribute(\"rafa\");\n}\n```", "```java\n    function setCookie(cookie_name, value, expiration_days)\n    {\n      var expiration_date = new Date();\n      expiration_date.setDate(expiration_date.getDate() + expiration_days);\n      var c_value = escape(value) + ((expiration_days == null) ? \"\" : \"; \n      expires=\" + expiration_date.toUTCString());\n      document.cookie = cookie_name + \"=\" + c_value;\n    }\n    ```", "```java\n    function deleteCookie(cookie_name) {\n      document.cookie = encodeURIComponent(cookie_name) + \"=deleted; expires=\" + new Date(0).toUTCString();\n    }\n    ```", "```java\n    function getCookie(cookie_name) {\n      var i, part_1, part_2;\n      var cookieslist = document.cookie.split(\";\");\n      //<![CDATA[\n      for (i = 0; i < cookieslist.length; i++)\n      {\n        part_1 = cookieslist[i].substr(0, cookieslist[i].indexOf(\"=\"));\n        part_2 = cookieslist[i].substr(cookieslist[i].indexOf(\"=\") + 1);\n        part_1 = part_1.replace(/^\\s+|\\s+$/g, \"\");\n        if (part_1 == cookie_name)\n        {\n          return unescape(part_2);\n        }\n      }\n      //]]>\n      return \"nocookie\";\n    }\n    ```", "```java\nsetCookie('name', 'Rafael', 1);\nsetCookie('surname', 'Nadal', 1);\n```", "```java\nObject name_cookie = FacesContext.getCurrentInstance().getExternalContext().getRequestCookieMap().get(\"name\");\nObject surname_cookie = FacesContext.getCurrentInstance().getExternalContext().getRequestCookieMap().get(\"surname\");\n\n//set playerName property \nif (name_cookie != null) {\n  playerName = (((Cookie) name_cookie).getValue());\n}\n\n//set playerSurname property \nif (surname_cookie != null) {\n  playerSurname = (((Cookie) surname_cookie).getValue());\n}\n```", "```java\n<h:form id=\"hiddenFormId\">\n  <h:commandButton value=\"Send Rafael Nadal\" onclick=\"setHiddenValues();\" action=\"#{playersBean.parametersAction()}\"/>\n  <h:inputHidden id=\"playerName\" value=\"#{playersBean.playerName}\"/>\n <h:inputHidden id=\"playerSurname\" value=\"#{playersBean.playerSurname}\"/>\n</h:form>\n```", "```java\n<script type=\"text/javascript\">\n  function setHiddenValues() {\n    document.getElementById('hiddenFormId:playerName').value = \"Rafael\";\n    document.getElementById('hiddenFormId:playerSurname').value = \"Nadal\";\n  }\n</script>\n```", "```java\n<input type=\"password\">\n```", "```java\n<h:form>\n  <h:inputSecret value=\"#{playersBean.playerPassword}\"/>\n  <h:commandButton value=\"Send Password\" action=\"#{playersBean.passwordAction()}\"/>\n</h:form>\n```", "```java\n<h:form id=\"playerFormId\">\n  <h:inputText id=\"playerNameId\" value=\"#{playersBean.playerName}\"/> \n  <h:inputText id=\"playerSurnameId\" value=\"#{playersBean.playerSurname}\"/>\n  <h:commandButton value=\"Process\" action=\"#{playersBean.processAction()}\"/>\n</h:form>\n```", "```java\npublic void processAction() {\n\n  UIViewRoot view = FacesContext.getCurrentInstance().getViewRoot();\n  UIComponent uinc = view.findComponent(\"playerFormId:playerNameId\");\n  Object prev = ((UIInput) uinc).getAttributes().put(\"value\", \"RAFAEL\");\n\n  UIComponent uisc = view.findComponent(\"playerFormId:playerSurnameId\");\n  Object current = ((UIInput) uisc).getAttributes().get(\"value\");\n}\n```", "```java\n<h:form>\n <h:commandButton value=\"Send Rafael Nadal\"  action=\"#{playersBean.parametersAction('Rafael','Nadal')}\"/>\n</h:form>\n```", "```java\nprivate String playerName;\nprivate String playerSurname;\n\n//getters and setters\n\npublic String parametersAction(String playerNameArg, String playerSurnameArg) {       \n\n  playerName = playerNameArg;\n  playerSurname = playerSurnameArg;\n\n  return \"result\";\n}\n```", "```java\n<h:dataTable value=\"#{playersBean.dataArrayList}\" binding=\"#{table}\" var=\"t\">\n```", "```java\n#{table.rows = 3;''}\n```", "```java\n<h:outputText value=\"#{table.rowCount}\"/>\n<h:outputText value=\"#{table.first}\"/>\n```", "```java\n<h:dataTable value=\"#{playersBean.dataArrayList}\" binding=\"#{playersBean.table}\" var=\"t\">\n```", "```java\nprivate HtmlDataTable table;\n...\n//getter and setter\n...\npublic void tableAction() {\n  logger.log(Level.INFO, \"First:{0}\", table.getFirst());\n  logger.log(Level.INFO, \"Row count: {0}\", table.getRowCount());\n  table.setRows(3);\n}\n```", "```java\n@Named\n@SessionScoped\npublic class PlayersBean implements Serializable{\n\n  private String playerName;\n  private String playerSurname;\n\n  public PlayersBean() {\n    playerName = \"Rafael\";\n    playerSurname = \"Nadal\";\n  }\n\n//getters and setters\n}\n```", "```java\n@ManagedBean //cannot be @Named\n@ViewScoped\npublic class ProfileBean implements Serializable{\n\n  private final static Logger logger = Logger.getLogger(PlayersBean.class.getName());\n  @ManagedProperty(\"#{playersBean}\")\n  private PlayersBean playersBean;\n  private String greetings;\n\n  public ProfileBean() {     \n  }   \n\n  public void setPlayersBean(PlayersBean playersBean) {\n    this.playersBean = playersBean;\n  }        \n\n  @PostConstruct\n  public void init(){\n    greetings = \"Hello, \" + playersBean.getPlayerName() + \" \" +playersBean.getPlayerSurname() + \" !\";\n  }\n\n  public void greetingsAction(){\n    logger.info(greetings);\n  }\n\n}\n```", "```java\nINFO:   Hello, Rafael Nadal !\n```", "```java\n@Named\n@ViewScoped\npublic class ProfileBean implements Serializable{\n\n  @Inject\n  private PlayersBean playersBean;\n  private String greetings;\n  ...\n```", "```java\npublic class ApplicationMapHelper {\n\n  public static Object getValueFromApplicationMap(String key) {\n    return FacesContext.getCurrentInstance().getExternalContext().getApplicationMap().get(key);\n  }  \n\n  public static void setValueInApplicationMap(String key, Object value) {\n    FacesContext.getCurrentInstance().getExternalContext().getApplicationMap().put(key, value);\n  }    \n}\n```", "```java\n@Named\n@RequestScoped\npublic class PlayersBeanSet {  \n\n  public void playerSetAction() {     \n    ApplicationMapHelper.setValueInApplicationMap(\"PlayersBeanSet.name\", \"Rafael\");\n    ApplicationMapHelper.setValueInApplicationMap(\"PlayersBeanSet.surname\", \"Nadal\");\n  }\n}\n```", "```java\n@Named\n@SessionScoped\npublic class PlayersBeanGet implements Serializable{  \n\n  private final static Logger logger = Logger.getLogger(PlayersBeanGet.class.getName());\n\n  public void playerGetAction() {    \n    String name = String.valueOf(ApplicationMapHelper.getValueFromApplicationMap(\"PlayersBeanSet.name\"));\n    String surname = String.valueOf(ApplicationMapHelper.getValueFromApplicationMap(\"PlayersBeanSet.surname\"));\n\n    logger.log(Level.INFO, \"Name: {0} Surname: {1}\", new Object[]{name, surname});\n  }\n}\n```", "```java\n    FacesContext context = FacesContext.getCurrentInstance();\n    PlayersBean playersBean = (PlayersBean) context.getApplication().evaluateExpressionGet(context, \"#{playersBean}\", PlayersBean.class);\n\n    if (playersBean != null) {\n      //call the PlayersBean method   \n    } else {\n      logger.info(\"SESSION BEAN NOT FOUND!\");\n    }\n    ```", "```java\n    FacesContext context = FacesContext.getCurrentInstance();\n    ELContext elcontext = context.getELContext();\n\n    PlayersBean playersBean = (PlayersBean) context.getApplication().getExpressionFactory().createValueExpression(elcontext, \"#{playersBean}\", PlayersBean.class).getValue(elcontext);\n\n    if (playersBean != null) {\n      //call the PlayersBean method   \n    } else {\n      logger.info(\"SESSION BEAN NOT FOUND!\");\n    }\n    ```", "```java\n    private ValueExpression createValueExpression(String exp, Class<?> cls) {\n      FacesContext facesContext = FacesContext.getCurrentInstance();\n      ELContext elContext = facesContext.getELContext();\n      return facesContext.getApplication().getExpressionFactory().createValueExpression(elContext, exp, cls);\n    }\n    ```", "```java\n    FacesContext context = FacesContext.getCurrentInstance();\n    ELContext elcontext = context.getELContext();\n\n    PlayersBean playersBean = (PlayersBean) elcontext.getELResolver().getValue(elcontext, null, \"playersBean\");\n\n    if (playersBean != null) {\n      //call the PlayersBean method   \n    } else {\n      logger.info(\"SESSION BEAN NOT FOUND!\");\n    }\n    ```"]