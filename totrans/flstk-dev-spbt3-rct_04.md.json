["```java\ndependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    **implementation** **'org.springframework.boot:spring-boot-starter-data-jpa'**\n    developmentOnly 'org.springframework.boot:spring-boot-devtools'\n    **runtimeOnly** **'com.h2database:h2'**\n    testImplementation 'org.springframework.boot:spring-boot-starter-test'\n} \n```", "```java\n    package com.packt.cardatabase.domain;\n    **import** **jakarta.persistence.Entity;**\n    **@Entity**\n    public class Car {\n    } \n    ```", "```java\n    package com.packt.cardatabase.domain;\n    import jakarta.persistence.Entity;\n    **import** **jakarta.persistence.GeneratedValue;**\n    **import** **jakarta.persistence.GenerationType;**\n    **import** **jakarta.persistence.Id;**\n    @Entity\n    public class Car {\n        **@Id**\n        **@GeneratedValue(strategy=GenerationType.AUTO)**\n        **private** **Long id;**\n        **private** **String brand, model, color, registrationNumber;**\n        **private****int modelYear, price;**\n    } \n    ```", "```java\n    @Column(name=\"explanation\", nullable=false, length=512)\n    private String description \n    ```", "```java\n    // Car.java constructors\n    public Car() {\n    }\n    public Car(String brand, String model, String color,\n        String registrationNumber, int modelYear, int price) {\n            super();\n            this.brand = brand;\n            this.model = model;\n            this.color = color;\n            this.registrationNumber = registrationNumber;\n            this.modelYear = modelYear;\n            this.price = price;\n    } \n    ```", "```java\n     public Long getId() {\n                return id;\n        }\n        public String getBrand() {\n                return brand;\n        }\n        public void setBrand(String brand) {\n                this.brand = brand;\n        }\n        public String getModel() {\n                return model;\n        }\n        public void setModel(String model) {\n                this.model = model;\n        }\n    // Rest of the setters and getters. See the whole source code from GitHub \n    ```", "```java\n    spring.datasource.url=jdbc:h2:mem:testdb\n    spring.jpa.show-sql=true \n    ```", "```java\n    spring.h2.console.enabled=true\n    spring.h2.console.path=/h2-console \n    ```", "```java\n    package com.packt.cardatabase.domain;\n    import org.springframework.data.repository.CrudRepository;\n    public interface CarRepository extends CrudRepository<Car,Long> {\n    } \n    ```", "```java\n    package com.packt.cardatabase;\n    **import** **org.springframework.boot.CommandLineRunner;**\n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    @SpringBootApplication\n    public class CardatabaseApplication **implements****CommandLineRunner** **{**\n        public static void main(String[] args) {\n            SpringApplication.run\n                (CardatabaseApplication.class, args);\n        }\n        **@Override**\n        **public** **void** **run****(String... args)** **throws** **Exception {**\n            **// Place your code here**\n        **}**\n    **}** \n    ```", "```java\n    package com.packt.cardatabase;\n    **import** **org.slf4j.Logger;**\n    **import** **org.slf4j.LoggerFactory;**\n    import org.springframework.boot.CommandLineRunner;\n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    **import** **com.packt.cardatabase.domain.Car;**\n    **import** **com.packt.cardatabase.domain.CarRepository;**\n    @SpringBootApplication\n    public class CardatabaseApplication implements CommandLineRunner {\n        **private static final****Logger****logger** **=**\n            **LoggerFactory.getLogger(**\n                **CardatabaseApplication.class**\n            **);**\n        **private final** **CarRepository repository;**\n        **public****CardatabaseApplication****(CarRepository repository) {**\n            **this****.repository = repository;**\n        **}**\n        public static void main(String[] args) {\n            SpringApplication.run\n                (CardatabaseApplication.class, args);\n        }\n        @Override\n        public void run(String... args) throws Exception {\n          // Place your code here\n        }\n    } \n    ```", "```java\n     // CardataseApplication.java run method\n        @Override\n        public void run(String... args) throws Exception {\n            **repository.save(****new****Car****(****\"Ford\"****,** **\"Mustang\"****,** **\"Red\"****,**\n                      **\"ADF-1121\"****,** **2023****,** **59000****));**\n            **repository.save(****new****Car****(****\"Nissan\"****,** **\"Leaf\"****,** **\"White\"****,**\n                      **\"SSJ-3002\"****,** **2020****,** **29000****));**\n            **repository.save(****new****Car****(****\"Toyota\"****,** **\"Prius\"****,**\n                      **\"Silver\"****,** **\"KKO-0212\"****,** **2022****,** **39000****));**\n            **// Fetch all cars and log to console**\n            **for (Car car : repository.findAll()) {**\n                **logger.info(****\"****brand: {}, model:****{}\"****,**\n                    **car.getBrand(), car.getModel());**\n            **}**\n        } \n    ```", "```java\npackage com.packt.cardatabase.domain;\nimport java.util.List;\nimport org.springframework.data.repository.CrudRepository;\npublic interface CarRepository extends CrudRepository <Car, Long> {\n    **// Fetch cars by brand**\n    **List<Car>** **findByBrand****(String brand);**\n    **// Fetch cars by color**\n    **List<Car>** **findByColor****(String color);**\n    **// Fetch cars by model year**\n    **List<Car>** **findByModelYear****(int modelYear);**\n} \n```", "```java\npackage com.packt.cardatabase.domain;\nimport java.util.List;\nimport org.springframework.data.repository.CrudRepository;\npublic interface CarRepository extends CrudRepository <Car, Long> {\n    **// Fetch cars by brand and model**\n    **List<Car>** **findByBrandAndModel****(String brand, String model);**\n    **// Fetch cars by brand or color**\n    **List<Car>** **findByBrandOrColor****(String brand, String color);**\n} \n```", "```java\npackage com.packt.cardatabase.domain;\nimport java.util.List;\nimport org.springframework.data.repository.CrudRepository;\npublic interface CarRepository extends CrudRepository <Car, Long> {\n    **// Fetch cars by brand and sort by year**\n    **List<Car>** **findByBrandOrderByModelYearAsc****(String brand);**\n} \n```", "```java\npackage com.packt.cardatabase.domain;\nimport java.util.List;\n**import** **org.springframework.data.jpa.repository.Query;**\nimport org.springframework.data.repository.CrudRepository;\npublic interface CarRepository extends CrudRepository <Car, Long> {\n    **// Fetch cars by brand using SQL**\n    **@Query(\"select c from Car c where c.brand = ?1\")**\n    **List<Car>** **findByBrand****(String brand);**\n} \n```", "```java\npackage com.packt.cardatabase.domain;\nimport java.util.List;\n**import** **org.springframework.data.jpa.repository.Query;**\nimport org.springframework.data.repository.CrudRepository;\npublic interface CarRepository extends CrudRepository <Car, Long> {\n    **// Fetch cars by brand using SQL**\n    **@Query(\"select c from Car c where c.brand like %?1\")**\n    List<Car> findByBrandEndsWith(String brand);\n} \n```", "```java\npackage com.packt.cardatabase.domain;\nimport org.springframework.data.repository.PagingAndSortingRepository;\npublic interface CarRepository extends\n    PagingAndSortingRepository <Car, Long> {\n    } \n```", "```java\n    // Owner.java\n    package com.packt.cardatabase.domain;\n    import jakarta.persistence.Entity;\n    import jakarta.persistence.GeneratedValue;\n    import jakarta.persistence.GenerationType;\n    import jakarta.persistence.Id;\n    @Entity\n    public class Owner {\n        @Id\n        @GeneratedValue(strategy = GenerationType.AUTO)\n        private Long ownerid;\n        private String firstname, lastname;\n        public Owner() {\n        }\n        public Owner(String firstname, String lastname) {\n            super();\n            this.firstname = firstname;\n            this.lastname = lastname;\n        }\n        public Long getOwnerid() {\n            return ownerid;\n        }\n        public String getFirstname() {\n            return firstname;\n        }\n        public void setFirstname(String firstname) {\n            this.firstname = firstname;\n        }\n        public String getLastname() {\n            return lastname;\n        }\n        public void setLastname(String lastname) {\n            this.lastname = lastname;\n        }\n    } \n    ```", "```java\n    // OwnerRepository.java\n    package com.packt.cardatabase.domain;\n    import org.springframework.data.repository.CrudRepository;\n    public interface OwnerRepository extends \n        CrudRepository<Owner, Long> {\n        } \n    ```", "```java\n    // Car.java\n    @ManyToOne(fetch=FetchType.LAZY)\n    @JoinColumn(name=\"owner\")\n    private Owner owner;\n    // Getter and setter\n    public Owner getOwner() {\n        return owner;\n    }\n    public void setOwner(Owner owner) {\n        this.owner = owner;\n    } \n    ```", "```java\n    // Owner.java\n    @OneToMany(cascade=CascadeType.ALL, mappedBy=\"owner\")\n    private List<Car> cars;\n\n    public List<Car> getCars() {\n        return cars;\n    }\n    public void setCars(List<Car> cars) {\n        this.cars = cars;\n    } \n    ```", "```java\n    // Car.java constructor\n    public Car(String brand, String model, String color, \n               String registrationNumber, int modelYear, int price,\n               **Owner owner**) \n    {\n        super();\n        this.brand = brand;\n        this.model = model;\n        this.color = color;\n        this.registrationNumber = registrationNumber;\n        this.modelYear = modelYear;\n        this.price = price;\n        **this****.owner = owner;**\n    } \n    ```", "```java\n    // CardatabaseApplication.java\n    **import** **com.packt.cardatabase.domain.Owner;**\n    **import** **com.packt.cardatabase.domain.OwnerRepository;** \n    ```", "```java\n    private final CarRepository repository;\n    **private** **final** **OwnerRepository orepository;**\n    public CardatabaseApplication(CarRepository repository,\n                                  **OwnerRepository orepository)** \n    {\n        this.repository = repository;\n        **this****.orepository = orepository;**\n    } \n    ```", "```java\n    @Override\n    public void run(String... args) throws Exception {\n        **// Add owner objects and save these to db**\n        **Owner owner1** **=** **new** **Owner****(****\"John\"** **,** **\"Johnson\"****);**\n        **Owner owner2** **=** **new** **Owner****(****\"Mary\"** **,** **\"Robinson\"****);**\n        **orepository.saveAll(Arrays.asList(owner1, owner2));**\n        repository.save(new Car(\"Ford\", \"Mustang\", \"Red\",\n                                \"ADF-1121\", 2023, 59000**, owner1**));\n        repository.save(new Car(\"Nissan\", \"Leaf\", \"White\",\n                                \"SSJ-3002\", 2020, 29000**, owner2**));\n        repository.save(new Car(\"Toyota\", \"Prius\", \"Silver\",\n                                \"KKO-0212\", 2022, 39000**, owner2**));\n        // Fetch all cars and log to console\n        for (Car car : repository.findAll()) \n          {\n            logger.info(\"brand: {}, model: {}\", car.getBrand(), \n            car.getModel());\n          }\n    } \n    ```", "```java\n    // Car.java\n    @ManyToMany(mappedBy=\"cars\")\n    private Set<Owner> owners = new HashSet<Owner>();\n    public Set<Owner> getOwners() {\n        return owners;\n    }\n    public void setOwners(Set<Owner> owners) {\n        this.owners = owners;\n    } \n    ```", "```java\n    // Owner.java\n    @ManyToMany(cascade=CascadeType.PERSIST)\n    @JoinTable(name=\"car_owner\",joinColumns = \n            {\n            @JoinColumn(name=\"ownerid\") },\n            inverseJoinColumns = \n            {\n            @JoinColumn(name=\"id\") }\n    )\n    private Set<Car> cars = new HashSet<Car>();\n    public Set<Car> getCars() {\n        return cars;\n    }\n    public void setCars(Set<Car> cars) {\n        this.cars = cars;\n    } \n    ```", "```java\n    dependencies {\n        implementation 'org.springframework.boot:spring-boot-starter-web'\n        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n        developmentOnly 'org.springframework.boot:spring-boot-devtools'\n        **runtimeOnly** **'org.mariadb.jdbc:mariadb-java-client'**\n        testImplementation 'org.springframework.boot:spring-boot-starter-test'\n    } \n    ```", "```java\n    spring.datasource.url=jdbc:mariadb://localhost:3306/cardb\n    spring.datasource.username=root\n    spring.datasource.password=YOUR_PASSWORD\n    spring.datasource.driver-class-name=org.mariadb.jdbc.Driver \n    ```", "```java\n    spring.datasource.url=jdbc:mariadb://localhost:3306/cardb\n    spring.datasource.username=root\n    spring.datasource.password=YOUR_PASSWORD\n    spring.datasource.driver-class-name=org.mariadb.jdbc.Driver\n    **spring.jpa.generate-ddl****=****true**\n    **spring.jpa.hibernate.ddl-auto****=****create-drop** \n    ```"]