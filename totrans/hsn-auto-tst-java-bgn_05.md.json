["```java\npublic void getData()\n{\n}\n```", "```java\npackage demopack;\n\npublic interface CentralTraffic {\n\n    public void greenGo();\n    public void redStop();\n    public void FlashYellow();\n\n}\n```", "```java\npublic class AustralianTraffic implements CentralTraffic {\n```", "```java\npackage coreJava;\nimport demopack.CentralTraffic;\npublic class AustralianTraffic implements CentralTraffic {\n\n    public static void main(String[] args) {\n\n    }\n    @Override\n    public void greenGo() {\n        // TODO Auto-generated method stub\n        System.out.println(\" greengo implementation\")\n    }\n    @Override\n    public void redStop() {\n        // TODO Auto-generated method stub\n        System.out.println(\" redstop implementation\")\n    }    \n    @Override\n    public void FlashingYellow() {\n        // TODO Auto-generated method stub\n        System.out.println(\" flash yellow implementation\")\n    }\n\n}\n```", "```java\n        CentralTraffic a= new AustralianTraffic();\n```", "```java\npublic class AustralianTraffic implements CentralTraffic {\n\n    public static void main(String[] args) {\n    CentralTraffic a= new AustralianTraffic();\n    a.redStop();\n    a.FlashYellow();\n    a.greenGo();    \n    }\n```", "```java\npublic void walkonsymbol()\n{\n    System.out.println(\"walking\");\n} \n```", "```java\n        AustralianTraffic at=new AustralianTraffic();\n        at.walkonsymbol();\n```", "```java\npublic class AustralianTraffic implements CentralTraffic, ContinentalTraffic {\n```", "```java\npackage coreJava;\npublic class parentClassdemo {\n\n    String color = \"red\";\n\n    public void Gear()\n    {\n        System.out.println(\"gear code is implemented\");\n    }\n    public void Brakes()\n    {\n        System.out.println(\"brakes code is implemented\");\n    }\n    public void audiosystem()\n    {\n        System.out.println(\"audiosystem code is implemented\");\n    }\n}\n```", "```java\npackage coreJava;\npublic class childClassDemo extends parentClassdemo {\n\n    public void engine()\n    {\n        System.out.println(\"new engine\");\n    }\n    public void color\n    {\n        System.out.println(color);\n    }\n\n    public static void main(String[] args) {\n        childClassDemo cd=new childClassDemo();\n        cd.color();\n    }\n```", "```java\nclass X\n{\n    //Class X members\n}\n\nclass Y\n{\n    //Class Y members\n}\n\nclass Z extends X, Y\n{\n    //Class Z members\n}\nX and Y class and some data fields or methods inside it. The Z class inherits the X and Y classes. Is this allowed? The answer is no. Java does not allows multiple inheritances, whereas it is allowed in C++. So here, we can conclude that the preceding code snippet is not right and will throw an error.\n```", "```java\nclass A\n{\n    int i = 10;\n}\n\nclass B extends A\n{\n    int i = 20;\n}\n\npublic class MainClass\n{\n    public static void main(String[] args)\n    {\n        A a = new B();\n        System.out.println(a.i);\n    }\n}\n```", "```java\npackage coreJava;\n//function overloading\npublic class childlevel extends childClassDemo {\n\n    public void getData(int a)\n    {\n\n    }\n    public void getData(String a)\n    {\n\n    }\n\n    public static void main(String[] args) {\n        childlevel cl=new childlevel();\n        cl.getData(2);\n        cl.getData(\"hello\")\n    }\n}\n```", "```java\n    public void getData(int a, int b)\n    {\n\n    }\n```", "```java\npackage coreJava;\npublic class childClassDemo extends parentClassdemo {\n\n    public void engine()\n    {\n        System.out.println(\"new engine\");\n    }\n\n    public static void main(String[] args) {\n        childClassDemo cd=new childClassDemo();\n        cd.color();\n    }\n```", "```java\n    public void color()\n    {\n        System.out.println(\"update color\");\n    }\n```"]