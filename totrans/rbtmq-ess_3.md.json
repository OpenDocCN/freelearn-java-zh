["```java\nrequire \"bunny\"\nconnection = Bunny.new ENV[\"RABBITMQ_URI\"]\n\nconnection.start\nchannel = connection.create_channel \nchannel.prefetch(1)\n```", "```java\nqueue.subscribe(block: true, manual_ack: true) \n```", "```java\nchannel.acknowledge(delivery_info.delivery_tag, false)\n```", "```java\n# 1\\. Require client library\nrequire \"bunny\"\n\n# 2\\. Read RABBITMQ_URI from ENV\nconnection = Bunny.new ENV[\"RABBITMQ_URI\"]\n\n# 3\\. Communication session with RabbitMQ\nconnection.start\nchannel = connection.create_channel\n\n# 4\\. Declare queues for taxis\nqueue1 = channel.queue(\"taxi-inbox.1\", durable: true)\n\nqueue2 = channel.queue(\"taxi-inbox.2\", durable: true)\n\n# 5\\. Declare a fanout exchange\nexchange = channel.fanout(\"taxi-fanout\")\n\n# 6\\. Bind the queue \nqueue1.bind(exchange, routing_key: \"\")\nqueue2.bind(exchange, routing_key: \"\")\n\n# 7\\. Publish a message\nexchange.publish(\"Hello everybody! This is an information message from the crew!\", key: \"\")\n\n# 8\\. Close the connection\nconnection.close \n```"]