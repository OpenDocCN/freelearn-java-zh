- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Knowing that experienced hackers are itching to test your skills makes security
    one of the most difficult and high-pressured concerns of creating an application.
    The complexity of properly securing an application is compounded when you must
    also integrate this factor with existing code, new technologies, and other frameworks.
    Use this book to easily secure your Java application with the tried and trusted
    **Spring Security** framework, a powerful and highly customizable authentication
    and access-control framework.
  prefs: []
  type: TYPE_NORMAL
- en: The book starts by integrating a variety of authentication mechanisms. It then
    demonstrates how to properly restrict access to your application. It also covers
    tips on integrating with some of the more popular web frameworks. An example of
    how Spring Security defends against session fixation, moves into concurrency control,
    and how you can utilize session management for administrative functions is also
    included.
  prefs: []
  type: TYPE_NORMAL
- en: It concludes with advanced security scenarios for RESTful web services and microservices,
    detailing the issues surrounding stateless authentication, and demonstrates a
    concise, step-by-step approach to solving those issues.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a Java Web and/or RESTful web service developer and have a basic
    understanding of creating Java 17/21, Java Web and/or RESTful web service applications,
    XML, and the Spring Security framework, this book is for you.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B21757_01.xhtml#_idTextAnchor015), *Anatomy of an Unsafe Application*,
    covers a hypothetical security audit of our calendar application, illustrating
    common issues that can be resolved through the proper application of Spring Security.
    You will learn about some basic security terminology and review some prerequisites
    for getting the sample application up and running.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B21757_02.xhtml#_idTextAnchor043), *Getting Started with Spring
    Security*, demonstrates the `"Hello World"` installation of Spring Security. After
    that, the chapter walks you through some of the most common customizations of
    Spring Security.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B21757_03.xhtml#_idTextAnchor068), *Custom Authentication*, incrementally
    explains Spring Security’s authentication architecture by customizing key pieces
    of the authentication infrastructure to address real-world problems. Through these
    customizations, you will gain an understanding of how Spring Security authentication
    works and how you can integrate with existing and new authentication mechanisms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B21757_04.xhtml#_idTextAnchor106), *JDBC-based Authentication*,
    covers authenticating against a database using Spring Security’s built-in **Java
    Database Connectivity** (**JDBC**) support. We then discuss how we can secure
    our passwords using Spring Security’s new cryptography module.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B21757_05.xhtml#_idTextAnchor150), *Authentication with Spring
    Data*, looks at the Spring Data project, and how to leverage **Jakarta Persistence**
    (**JPA**) to perform authentication against a relational database. We will also
    explore how to perform authentication against a document database using MongoDB.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B21757_06.xhtml#_idTextAnchor180), *LDAP Directory Services*,
    will review the **Lightweight Directory Access Protocol** (**LDAP**) and learn
    how it can be integrated into a Spring-Security-enabled application to provide
    authentication, authorization, and user information services to interested constituents.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B21757_07.xhtml#_idTextAnchor220), *Remember-me Services*, demonstrates
    the use of the remember-me feature in Spring Security and how to configure it.
    We also explore additional considerations to bear in mind when using it. We’ll
    add the ability for an application to remember a user even after their session
    has expired and the browser is closed.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B21757_08.xhtml#_idTextAnchor261), *Client Certificate Authentication
    with TLS*, demonstrates that, although username and password authentication is
    extremely common, as we discussed in [*Chapter 1*](B21757_01.xhtml#_idTextAnchor015),
    *Anatomy of an Unsafe Application*, and in [*Chapter 2*](B21757_02.xhtml#_idTextAnchor043),
    *Getting Started with Spring Security*, forms of authentication exist that allow
    users to present different types of credentials. Spring Security caters to these
    requirements as well. In this chapter, we’ll move beyond form-based authentication
    to explore authentication using trusted client-side certificates.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B21757_09.xhtml#_idTextAnchor295), *Opening up to OAuth 2*, explains
    that OAuth 2 is a very popular form of trusted identity management that allows
    users to manage their identity through a single trusted provider. This convenient
    feature provides users with the security of storing their password and personal
    information with the trusted OAuth 2 provider, optionally disclosing personal
    information upon request. Additionally, the OAuth-2-enabled website offers the
    confidence that the users providing OAuth 2 credentials are who they say they
    are.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B21757_10.xhtml#_idTextAnchor314), *SAML 2 Support*, will deep
    dive into the world of **Security Assertion Markup Language** (**SAML 2.0**) support
    and how it can be seamlessly integrated into their Spring Security applications.
    SAML 2.0 is an XML-based standard for exchanging authentication and authorization
    data between **identity providers** (**IdPs**) and **service** **providers** (**SPs**).'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B21757_11.xhtml#_idTextAnchor332), *Fine-Grained Access Control*,
    will first examine two ways to implement fine-grained authorization—authorization
    that may affect portions of a page of the application. Next, we will look at Spring
    Security’s approach to securing the business tier through method annotation and
    the use of interface-based proxies to accomplish **Aspect-Oriented** **Programming**
    (**AOP**). Then, we will review an interesting capability of annotation-based
    security that allows for role-based filtering on collections of data. Last, we
    will look at how class-based proxies differ from interface-based proxies.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B21757_12.xhtml#_idTextAnchor375), *Access Control Lists*, will
    address the complex topic of **Access Control Lists** (**ACLs**), which can provide
    a rich model of domain object instance-level authorization. Spring Security ships
    with a robust, but complicated, ACL module that can serve the needs of small-
    to medium-sized implementations reasonably well.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B21757_13.xhtml#_idTextAnchor415), *Custom Authorization*, will
    include some custom implementations for Spring Security’s key authorization APIs.
    Once we have done this, we will use the understanding of the custom implementations
    to understand how Spring Security’s authorization architecture works.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B21757_14.xhtml#_idTextAnchor445), *Session Management*, discusses
    how Spring Security manages and secures user sessions. The chapter starts by explaining
    session fixation attacks and how Spring Security defends against them. It then
    discusses how you can manage logged-in users and restrict the number of concurrent
    sessions a single user has. Finally, we describe how Spring Security associates
    a user with `HttpSession` and how to customize this behavior.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B21757_15.xhtml#_idTextAnchor479), *Additional Spring Security
    Features*, covers other Spring Security features, including common security vulnerabilities
    such as **cross-site scripting** (**XSS**), **cross-site request forgery** (**CSRF**),
    **synchronizer tokens**, and **clickjacking**, and how to protect against them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 16*](B21757_16.xhtml#_idTextAnchor512), *Migration to Spring Security
    6*, provides a migration path from Spring Security 5, including notable configuration
    changes, class and package migrations, and important new features, including Java
    17 support and new authentication mechanisms with OAuth 2.1.'
  prefs: []
  type: TYPE_NORMAL
- en: It also highlights the new features that can be found in Spring Security 6.1
    and provides references to examples of the features in the book.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 17*](B21757_17.xhtml#_idTextAnchor537), *Microservice Security with
    OAuth 2 and JSON Web Tokens*, looks at microservices-based architectures and how
    OAuth 2 with **JSON Web Tokens** (**JWT**) plays a role in securing microservices
    in a Spring-based application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 18*](B21757_18.xhtml#_idTextAnchor591), *Single Sign-On with the
    Central Authentication Service*, shows how integrating with a **Central Authentication
    Service** (**CAS**) can provide single sign-on and single logout support to your
    Spring-Security-enabled applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 19*](B21757_19.xhtml#_idTextAnchor625), *Build GraalVM Native Images*,
    looks at Spring Security 6 support for building native images using GraalVM. This
    can be a great way to improve the performance and security of your Spring Security
    applications.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The primary method for integrating with the sample code is providing **Gradle**-
    and **Maven**-compatible projects. Since many **Integrated Development Environments**
    (**IDEs**). have rich integration with Gradle and Maven, users should be able
    to import the code into any IDE that supports either Gradle or Maven. As many
    developers use Gradle and Maven, we felt this was the most straightforward method
    of packaging the examples. Whatever development environment you are familiar with,
    hopefully, you will find a way to work through the examples in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Many IDEs provide Gradle or Maven tooling that can automatically download the
    Spring and **Spring Security 6** Javadoc and source code for you. However, there
    may be times when this is not possible. In such cases, you’ll want to download
    the full releases of both **Spring 6** and Spring Security 6\. The Javadoc and
    source code are top notch. If you get confused or want more information, the samples
    can provide an additional level of support or reassurance for your learning.
  prefs: []
  type: TYPE_NORMAL
- en: 'To run the sample application, you will need an IDE such as **IntelliJ IDEA**
    or **Eclipse** and build it with **Gradle** or **Maven**, which don’t have strict
    hardware requirements. However, these are some general recommendations to ensure
    a smooth development experience:'
  prefs: []
  type: TYPE_NORMAL
- en: 'System Requirements:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A modern computer with at least 4GB of RAM (8GB or more is recommended).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A multi-core processor for faster build and development.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Operating System:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Spring applications can be developed on Windows, macOS, or Linux. Choose the
    one that you are most comfortable with.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Disk Space:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will need disk space for your project files, dependencies, and any databases
    you might use. At least 10GB of free disk space is advisable.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Network Connection:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A stable internet connection may be needed for downloading dependencies, plugins,
    and libraries during project setup.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Software/hardware covered in** **the book** | **Operating** **system requirements**
    |'
  prefs: []
  type: TYPE_TB
- en: '| IntelliJ IDEA and Eclipse are both popular choices for Spring development
    | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| JDK versions: 17 or 21 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Spring- Security 6. |  |'
  prefs: []
  type: TYPE_TB
- en: '| Spring- Boot 3. |  |'
  prefs: []
  type: TYPE_TB
- en: '| Thymeleaf 6. |  |'
  prefs: []
  type: TYPE_TB
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: From [*Chapter 3*](B21757_03.xhtml#_idTextAnchor068), *Custom Authentication*
    onwards, the book shifts its emphasis to delve deeper into Spring Security, particularly
    in conjunction with the Spring Boot framework.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Spring-Security-Fourth-Edition/](https://github.com/PacktPublishing/Spring-Security-Fourth-Edition/).
    If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Code in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Code in Action videos for this book can be viewed at [https://packt.link/Om1ow](https://packt.link/Om1ow).
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “We are loading the `calendar.ldif` file from `classpath`,
    and using it to populate the LDAP server.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The first line, `//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java`,
    indicates the location of the file to be modified.
  prefs: []
  type: TYPE_NORMAL
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “Right-click on **World** and select **Search**.”'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packtpub.com](mailto:copyright@packtpub.com)
    with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Spring Security*, we’d love to hear your thoughts! Please
    [click here to go straight to the Amazon review page](https://packt.link/r/1-835-46050-X)
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  prefs: []
  type: TYPE_NORMAL
- en: Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Scan the QR code or visit the link below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B21757_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/9781835460504](https://packt.link/free-ebook/9781835460504)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Part 1: Fundamentals of Application Security'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This part delves into the foundational aspects of application security, laying
    the groundwork for understanding potential vulnerabilities. We embark on a comprehensive
    exploration of application security using Spring Security. This part introduces
    you to the process of conducting a security audit on a hypothetical calendar application.
    Through this audit, we uncover common security vulnerabilities and lay the groundwork
    for implementing robust security measures.
  prefs: []
  type: TYPE_NORMAL
- en: Building upon this foundation, this part guides you through the installation
    and configuration of Spring Security. We start with a basic `"Hello World"` example,
    gradually customizing Spring Security to suit the specific needs of our application.
  prefs: []
  type: TYPE_NORMAL
- en: We will also delve deeper into the authentication process within Spring Security.
    By customizing key components of the authentication infrastructure, we address
    real-world authentication challenges and gain a comprehensive understanding of
    Spring Security’s authentication mechanisms. Through practical examples and hands-on
    exercises, we learn how to integrate custom authentication solutions seamlessly
    into our applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B21757_01.xhtml#_idTextAnchor015), *Anatomy of an Unsafe Application*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B21757_02.xhtml#_idTextAnchor043), *Getting Started with Spring
    Security*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B21757_03.xhtml#_idTextAnchor068), *Custom Authentication*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
