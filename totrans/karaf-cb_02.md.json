["```java\n    karaf@root()> feature:repo-add mvn:org.apache.camel.karaf/apache-camel/2.12.2/xml/features\n     Adding feature url mvn:org.apache.camel.karaf/apache-camel/2.12.2/xml/features\n    karaf@root()>\n\n    ```", "```java\n    karaf@root()>  feature:install camel\n\n    ```", "```java\nkaraf@root()> camel:context-list\n Context               Status         Uptime \n -------               ------         ------ \n CamelCommandContext   Started        1 hour 44 minutes \nkaraf@root()>\n\n```", "```java\nkaraf@root()> camel:context-info CamelCommandContext \n\n```", "```java\nCamel Context CamelCommandContext\n Name: CamelCommandContext\n ManagementName: 123-CamelCommandContext\n Version: 2.12.2\n Status: Started\n Uptime: 1 hour 50 minutes\nStatistics\n Exchanges Total: 1321\n Exchanges Completed: 1321\n Exchanges Failed: 0\n Min Processing Time: 0ms\n Max Processing Time: 6ms\n Mean Processing Time: 0ms\n Total Processing Time: 1110ms\n Last Processing Time: 1ms\n Delta Processing Time: 0ms\n Load Avg: 0.00, 0.00, 0.00\n Reset Statistics Date: 2014-02-27 16:01:41\n First Exchange Date: 2014-02-27 16:01:42\n Last Exchange Completed Date: 2014-02-27 17:51:43\n Number of running routes: 1\n Number of not running routes: 0\n\nMiscellaneous\n Auto Startup: true\n Starting Routes: false\n Suspended: false\n Shutdown timeout: 300 sec.\n Message History: true\n Tracing: false\n\nProperties\n\nAdvanced\n ClassResolver: org.apache.camel.core.osgi.OsgiClassResolver@2ffd5a29\n PackageScanClassResolver: org.apache.camel.core.osgi.OsgiPackageScanClassResolver@222a525c\n ApplicationContextClassLoader: BundleDelegatingClassLoader(sample [123])\nComponents\n mock\n bean\n timer\n properties\n\nDataformats\n\nLanguages\n simple\n\nRoutes\n CamelRoute-timerToLog\n\n```", "```java\nkaraf@root()> camel:context-list\n Context               Status         Uptime \n -------               ------         ------ \n CamelCommandContext   Started        3.139 seconds \nkaraf@root()> camel:context-stop CamelCommandContext \nkaraf@root()> camel:context-list\nkaraf@root()>\n\n```", "```java\nkaraf@root()> camel:route-list \n Context               Route                   Status \n -------               -----                   ------ \n CamelCommandContext   CamelRoute-timerToLog   Started \n\n```", "```java\nkaraf@root()> camel:route-info CamelRoute-timerToLog \nCamel Route CamelRoute-timerToLog\n Camel Context: CamelCommandContext\n\nProperties\n id = CamelRoute-timerToLog\n parent = 20443040\n\nStatistics\n Inflight Exchanges: 0\n Exchanges Total: 44\n Exchanges Completed: 44\n Exchanges Failed: 0\n Min Processing Time: 0 ms\n Max Processing Time: 2 ms\n Mean Processing Time: 0 ms\n Total Processing Time: 38 ms\n Last Processing Time: 1 ms\n Delta Processing Time: 0 ms\n Load Avg: 0.00, 0.00, 0.00\n Reset Statistics Date: 2014-02-27 17:59:46\n First Exchange Date: 2014-02-27 17:59:47\n Last Exchange Completed Date: 2014-02-27 18:03:22\n\nDefinition\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<route customId=\"true\" id=\"CamelRoute-timerToLog\" >\n <from uri=\"timer:foo?period=5000\"/>\n <setBody id=\"setBody8\">\n <method ref=\"helloBean\" method=\"hello\"></method>\n </setBody>\n <log message=\"The message contains ${body}\" id=\"log8\"/>\n <to uri=\"mock:result\" id=\"to8\"/>\n</route>\n\nkaraf@root()>\n\n```", "```java\nkaraf@root()> camel:route-list\n Context               Route                   Status \n -------               -----                   ------ \n CamelCommandContext   CamelRoute-timerToLog   Started \nkaraf@root()> camel:route-stop CamelRoute-timerToLog\nkaraf@root()> camel:route-list\n Context               Route                   Status \n -------               -----                   ------ \n CamelCommandContext   CamelRoute-timerToLog   Stopped \n\n```", "```java\nkaraf@root()> camel:route-start CamelRoute-timerToLog \nkaraf@root()> camel:route-list\n Context               Route                   Status \n -------               -----                   ------ \n CamelCommandContext   CamelRoute-timerToLog   Started \n\n```", "```java\nkaraf@root()> camel:route-suspend CamelRoute-timerToLog \nkaraf@root()> camel:route-list\n Context               Route                   Status \n -------               -----                   ------ \n CamelCommandContext   CamelRoute-timerToLog   Suspended \n\n```", "```java\nkaraf@root()> camel:route-resume CamelRoute-timerToLog \nkaraf@root()> camel:route-list\n Context               Route                   Status \n -------               -----                   ------ \n CamelCommandContext   CamelRoute-timerToLog   Started \nkaraf@root()>\n\n```", "```java\nkaraf@root()> camel:endpoint-list \n Context               Uri                       Status \n -------               ---                       ------ \n CamelCommandContext   mock://result             Started \n CamelCommandContext   timer://foo?period=5000   Started \n\n```", "```java\n    <dependencies>\n        <dependency>\n            <groupId>org.apache.camel</groupId>\n            <artifactId>camel-core</artifactId>\n            <version>${camel.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.osgi</groupId>\n            <artifactId>org.osgi.core</artifactId>\n            <version>${osgi.version}</version>\n            <scope>provided</scope>\n        </dependency>\n    </dependencies>\n    ```", "```java\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.felix</groupId>\n                <artifactId>maven-bundle-plugin</artifactId>\n                <version>${maven-bundle-plugin.version}</version>\n                <extensions>true</extensions>\n                <configuration>\n                    <instructions>\n                        <Bundle-SymbolicName>\n                        ${project.artifactId}\n                        </Bundle-SymbolicName>\n                        <Bundle-Version>\n                        ${project.version}\n                        </Bundle-Version>\n     <Bundle-Activator>\n     com.packt.Activator\n     </Bundle-Activator>\n                        <Export-Package>\n                        com.packt*;version=${project.version}\n                        </Export-Package>\n                        <Import-Package>*</Import-Package>\n                    </instructions>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n    ```", "```java\n    public void start(BundleContext context) {\n        System.out.println(\"Starting the bundle\");\n     camelContext = new DefaultCamelContext();\n        try {\n     camelContext.addRoutes(new MyRouteBuilder());\n     camelContext.start();\n        }\n        catch (Exception ex) {\n            // Use logging subsystem in non-sample code.\n            System.out.println(\"Exception occured! \" + ex.getMessage());\n        }\n    }\n    ```", "```java\n    public void stop(BundleContext context) {\n        System.out.println(\"Stopping the bundle\");\n        if (camelContext != null) {\n            try { \n     camelContext.stop();\n            }\n            catch (Exception ex) {\n                System.out.println(\"Exception occurred during stop context.\");\n            }\n        }\n    }\n    ```", "```java\n    public class MyRouteBuilder extends RouteBuilder {\n\n        public void configure() {\n\n            from(\"file:src/data?noop=true\")\n                .choice()\n                    .when(xpath(\"/recipe = 'cookie'\"))\n                        .log(\"Cookie  message\")\n                        .to(\"file:target/messages/cookies\")\n                    .otherwise()\n                        .log(\"Other message\")\n                        .to(\"file:target/messages/others\");\n        }\n\n    }\n    ```", "```java\n    mvn archetype:generate \\\n     -DarchetypeGroupId=org.apache.camel.archetypes \\\n     -DarchetypeArtifactId=camel-archetype-blueprint \\\n     -DarchetypeVersion=2.12.2 \\\n     -DarchetypeRepository=https://repository.apache.org/content/groups/snapshots-group\n\n    ```", "```java\n    karaf@root()> bundle:install â€“s mvn:com.packt/bp/1.0.0-SNAPSHOT\n\n    ```", "```java\n    2014-02-06 10:00:49,074 | INFO  | Local user karaf | BlueprintCamelContext            | 85 - org.apache.camel.camel-core - 2.12.2 | Total 1 routes, of which 1 is started.\n    2014-02-06 10:00:49,075 | INFO  | Local user karaf | BlueprintCamelContext            | 85 - org.apache.camel.camel-core - 2.12.2 | Apache Camel 2.12.2 (CamelContext: blueprintContext) started in 0.357 seconds\n    2014-02-06 10:00:50,075 | INFO  | 12 - timer://foo | timerToLog       | 85 - org.apache.camel.camel-core - 2.12.2 | The message contains Hi from Camel at 2014-02-06 10:00:50\n    ```", "```java\n    mvn archetype:generate \\\n     -DarchetypeGroupId=org.apache.camel.archetypes \\\n     -DarchetypeArtifactId=camel-archetype-blueprint \\\n     -DarchetypeVersion=2.12.2 \\ \n     -DarchetypeRepository=https://repository.apache.org/content/groups/snapshots-group\n\n    ```", "```java\n    <blueprint \n\n            xsi:schemaLocation=\"\n            http://www.osgi.org/xmlns/blueprint/v1.0.0\n            http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd\n     http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0\n            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd\">\n    ```", "```java\n    <bean id=\"helloBean\" class=\"com.packt.HelloBean\">\n     <property name=\"say\" value=\"${greeting}\"/>\n    </bean>\n    ```", "```java\n    <!-- OSGI blueprint property placeholder -->\n    <!-- etc/recipe.cfg -->\n    <cm:property-placeholder persistent-id=\"recipe\" update-strategy=\"reload\">\n\n        <!-- list some properties for this test -->\n     <cm:default-properties>\n     <cm:property name=\"greeting\" \n     value=\"Hello World\"/>\n     <cm:property name=\"result\" \n     value=\"mock:result\"/>\n        </cm:default-properties>\n    </cm:property-placeholder>\n    ```", "```java\n    <camelContext id=\"blueprintContext\" trace=\"false\" >\n        <route id=\"timerToLog\">\n            <from uri=\"timer:foo?period=5000\"/>\n            <setBody>\n     <method ref=\"helloBean\" method=\"hello\"/>\n            </setBody>\n            <log message=\"The message contains ${body}\"/>\n     <to uri=\"{{result}}\"/>\n        </route>\n    </camelContext>\n    ```", "```java\n    karaf@root()> bundle:install â€“s mvn:com.packt/bp-configadmin/1.0.0-SNAPSHOT\n\n    ```", "```java\n    2014-02-06 13:36:01,892 | INFO  | Local user karaf | BlueprintCamelContext | 85 - org.apache.camel.camel-core - 2.12.2 | Total 1 routes, of which 1 is started.\n    2014-02-06 13:36:01,892 | INFO  | Local user karaf | BlueprintCamelContext | 85 - org.apache.camel.camel-core - 2.12.2 | Apache Camel 2.12.2 (CamelCon: blueprintContext) started in 0.272 seconds\n    2014-02-06 13:36:02,891 text| INFO  | 15 - timer://foo | timerToLog | 85 - org.apache.camel.camel-core - 2.12.2 |   The message contains Hello World at2014-02-06 13:36:02 \n    ```", "```java\n    <dependency>\n        <groupId>org.osgi</groupId>\n        <artifactId>org.osgi.core</artifactId>\n        <version>${osgi-core-version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.osgi</groupId>\n        <artifactId>org.osgi.compendium</artifactId>\n        <version>${osgi-compendium-version}</version>\n    </dependency>\n    ```", "```java\n    <blueprint \n\n        xsi:schemaLocation=\"\n        http://www.osgi.org/xmlns/blueprint/v1.0.0\n        http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd\n        http://camel.apache.org/schema/blueprint \n        http://camel.apache.org/schema/blueprint/camel-blueprint.xsd\">\n\n      <!â€”- Setup process Id name for configuration file -->\n      <cm:property-placeholder persistent-id=\"com.packt.hellofactory\" update-strategy=\"reload\">\n        <cm:default-properties>\n            <cm:property name=\"com.packt.hellofactory.pid\" value=\"com.packt.hellofactory\"/>\n        </cm:default-properties>\n      </cm:property-placeholder>\n\n      <!â€”- Create Camel Context -->\n      <camelContext id=\"helloContext\"  autoStartup=\"true\">\n      </camelContext>\n\n      <!â€”- Setup Bean, wiring in contexts, andconfiguration data  -->\n      <bean id=\"apacheKarafCookbook\" class=\"com.packt.HelloFactory\" init-method=\"init\" destroy-method=\"destroy\">\n        <property name=\"bundleContext\" ref=\"blueprintBundleContext\"/>\n        <property name=\"configurationPid\"       value=\"${com.packt.hellofactory.pid}\"/>\n        <property name=\"camelContext\" ref=\"helloContext\"/>\n      </bean>\n\n    </blueprint>\n    ```", "```java\n    karaf@root()> install -s mvn:commons-lang/commons-lang/2.6\n    karaf@root()> install -s mvn:com.packt/msf/1.0.0-SNAPSHOT\n\n    ```", "```java\n    HELLO_GREETING=hello \n    HELLO_NAME=Jamie\n    ```", "```java\n    HELLO_GREETING=hi \n    HELLO_NAME=Laura \n    ```", "```java\n    karaf@root()> camel:route-list \n     Context        Route          Status \n     -------        -----          ------ \n     helloContext   Hello Jamie    Started \n     helloContext   Hello Laura    Started \n    karaf@root()> log:display\n    hello Jamie\n    hi Laura\n\n    ```", "```java\n@Override\npublic String getName() {\n    return configurationPid;\n}\n```", "```java\n@Override\npublic void updated(String pid, Dictionary dict) \n        throws ConfigurationException {\n        log.info(\"updated \" + pid + \" with \" + dict.toString());\n        HelloDispatcher engine = null;\n\n        if (dispatchEngines.containsKey(pid)) {\n            engine = dispatchEngines.get(pid);\n\n            if (engine != null) {\n                destroyEngine(engine);\n            }\n            dispatchEngines.remove(pid);\n        }\n```", "```java\n    //Verify dictionary contents before applying them to Hello\nif (dict.get(HelloConstants.HELLO_GREETING) != null && !StringUtils.isEmpty(dict.get(HelloConstants.HELLO_GREETING).toString())) {\n  log.info(\"HELLO_GREETING set to \" + dict.get(HelloConstants.HELLO_GREETING));\n} else {\n  throw new IllegalArgumentException(\"Missing HELLO_GREETING\");\n}\n\nif (dict.get(HelloConstants.HELLO_NAME) != null && !StringUtils.isEmpty(dict.get(HelloConstants.HELLO_NAME).toString())) {\n  log.info(\"HELLO_NAME set to \" + dict.get(HelloConstants.HELLO_NAME));\n} else {\n  throw new IllegalArgumentException(\"Missing HELLO_NAME\");\n}\n```", "```java\n    //Configuration was verified above, now create engine.\nengine = new HelloDispatcher();\nengine.setCamelContext(camelContext);\nengine.setGreeting(dict.get(HelloConstants.HELLO_GREETING).toString());\nengine.setName(dict.get(HelloConstants.HELLO_NAME).toString());\n\ndispatchEngines.put(pid, engine);\nlog.debug(\"Start the engine...\");\nif (engine == null) {\n    log.debug(\"Engine was null, check configuration.\");\n}\n engine.start();\n}\n```", "```java\n@Override\npublic void deleted(String pid) {\n    if (dispatchEngines.containsKey(pid)) {\n        HelloDispatcher engine = dispatchEngines.get(pid);\n\n        if (engine != null) {\n            destroyEngine(engine);\n    }\n        dispatchEngines.remove(pid);\n    }\n    log.info(\"deleted \" + pid);\n}\n```", "```java\nprotected RouteBuilder buildHelloRouter() throws Exception {\n\n    return new RouteBuilder() {\n\n        @Override\n        public void configure() throws Exception {\n\n from(\"timer://helloTimer?fixedRate=true&period=10000\").\n routeId(\"Hello \" + name).\n log(greeting + \" \" + name);\n    }\n};\n```", "```java\n<cm:property-placeholder persistent-id=\"com.packt.hellofactory\" update-strategy=\"reload\">\n  <cm:default-properties>\n <cm:property name=\"com.packt.hellofactory.pid\" value=\"com.packt.hellofactory\"/>\n  </cm:default-properties>\n</cm:property-placeholder>\n```", "```java\n<camelContext id=\"helloContext\"autoStartup=\"true\">\n</camelContext>\n```", "```java\n<bean id=\"apacheKarafCookbook\" class=\"com.packt.HelloFactory\" init-method=\"init\" destroy-method=\"destroy\">\n  <property name=\"bundleContext\"\n ref=\"blueprintBundleContext\"/>\n  <property name=\"configurationPid\"\n value=\"${com.packt.hellofactory.pid}\"/>\n  <property name=\"camelContext\" ref=\"helloContext\"/>\n</bean>\n```"]