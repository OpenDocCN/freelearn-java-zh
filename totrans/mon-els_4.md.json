["```java\n    index.routing.allocation.disable_allocation: false\n    cluster.routing.allocation.enable : all\n    marvel.agent.enabled: false\n    cluster.name: my_monitoring_cluster\n    node.name: elasticsearch-marvel-01\n    bootstrap.mlockall: true\n    discovery.zen.ping.multicast.enabled: false\n\n    ```", "```java\n     sudo /usr/share/elasticsearch/bin/plugin \n     install mobz/elasticsearch-head\n\n    ```", "```java\n     sudo /usr/share/elasticsearch/bin/plugin install license\n     sudo /usr/share/elasticsearch/bin/plugin install marvel-agent\n\n    ```", "```java\n    marvel.agent.exporters:\n     my_monitoring_cluster:\n     type: http\n     host: [\"http://elasticsearch-marvel-01:9200\"]\n\n    ```", "```java\n    marvel.agent.exporters:\n     my_monitoring_cluster:\n     type: http\n     host: [\"elasticsearch-marvel-01:9200\", \"elasticsearch-marvel-02:9200\", \"elasticsearch-marvel-03:9200\"]\n\n    ```", "```java\n    server.port: 5601\n    server.host: \"0.0.0.0\"\n    elasticsearch.url: http://elasticsearch-marvel-01:9200\n\n    ```", "```java\n    bin/kibana\n\n    ```", "```java\nsudo ntpupdate pool.ntp.org\n\n```", "```java\n    curl -XPUT elasticsearch-host-01:9200/_cluster/settings \n    -d '{\n     \"transient\" : {\n     \"cluster.routing.allocation.enable\" : \"none\"\n     }\n     }' \n\n    ```", "```java\n    sudo /etc/init.d/elasticsearch stop\n\n    ```", "```java\n    bin/plugin remove marvel-agent\n\n    ```", "```java\n    plugin install marvel-agent \n\n    ```", "```java\n    sudo /etc/init.d/elasticsearch start \n\n    ```", "```java\n    tail -f /var/log/elasticsearch/*\n\n    ```", "```java\n    curl -XPUT elasticsearch-host-01:9200/_cluster/settings -d '{ \n     \"transient\" : { \n     \"cluster.routing.allocation.enable\" : \"all\" \n     } \n    }'\n\n    ```", "```java\n    bin/kibana plugin --remove marvel\n\n    ```", "```java\n    bin/kibana plugin install marvel\n    /2.3.2\n\n    ```", "```java\nmarvel.agent.exporters:\n  my_monitoring_cluster:\n    type: http\n    host: [\"http://elasticsearch-marvel-01:9200\"]\n```", "```java\nmarvel.agent.exporters:\n  your_exporter_name:\n    type: http # Set to local or http\n    host: [ \"http://host-01:9200\", \"http://host-02:9200\" ]\n    # List of hosts to send data to over http or https\n\n    auth:\n      username: basic_auth_username # optional           \n      password: basic_auth_password # optional\n\n    connection:\n      timeout: 6s # optional: connection timeout \n      read_timeout: 60s # optional: response timeout.\n      keep_alive: true # persistent connections \n\n    ssl:\n      hostname_verification: true # https only: verify host certificate\n      protocol: TLSv1.2 # https only: protocol\n      truststore.path: /path/to/file # https only:  \n.jks truststore\n      truststore.password: password # https only: .jks truststore password\n      truststore.algorithm: SunX509 # https only: .jks truststore algorithm\n\n    index:\n      name:\n        time_format: YYYY.MM.dd \n        # marvel index suffix.  \n        # Set to a value like YYYY.MM to create new \n        # indices monthly instead of daily\n```", "```java\nsudo /etc/init.d/elasticsearch restart\n\n```", "```java\n    curl -XGET \"http://elasticsearch-marvel-01:9200/_template/marvel?pretty\"\n\n    ```", "```java\n    {\n     \"marvel\" : {\n     \"order\" : 0,\n     \"template\" : \".marvel*\",\n     \"settings\" : {\n     \"index.mapper.dynamic\" : \"true\",\n     \"index.marvel.index_format\" : \"6\",\n     \"index.analysis.analyzer.default.type\" : \"standard\",\n     \"index.number_of_replicas\" : \"1\",\n     \"index.number_of_shards\" : \"1\",\n     \"index.analysis.analyzer.default.stopwords\" : \"_none_\"\n     },\n     ...\n    }\n\n    ```", "```java\n    curl -XPOST  \"http://elasticsearch-marvel-01:9200/_template/marvel_01?pretty\" -d '{\n     \"template\": \".marvel*\",\n     \"order\": 1,\n     \"settings\": {\n     \"number_of_shards\": 4\n     }\n    }'\n\n    ```", "```java\ncurl -XGET \"http://elasticsearch-marvel-01:9200/_template/marvel_01?pretty\"\n{\n \"marvel_01\" : {\n \"order\" : 1,\n \"template\" : \".marvel*\",\n \"settings\" : {\n \"index.number_of_shards\" : \"4\"\n },\n \"mappings\" : { },\n \"aliases\" : { }\n\n}\n}\n\n```", "```java\n./stream2es twitter --target http://elasticsearch-node-01:9200/twitter/status\n\n```", "```java\n#!/bin/sh\n\n# Path to dictionary file\nDICTIONARY_PATH=/usr/share/dict/words\nELASTICSEARCH_URI=http://elasticsearch-node-01:9200/twitter\n\n# Total dictionary words\nTOTAL_WORDS=`wc -l $DICTIONARY_PATH | awk '{print $1}'`\n\nwhile :\ndo\n    # Pick a random word\n    WORD_INDEX=`python -c \"import random;print random.randint(1,$TOTAL_WORDS)\"`\n    WORD=`sed \"${WORD_INDEX}q;d\" $DICTIONARY_PATH`\n\n    # Run query\n    echo \"Querying elasticsearch $ELASTICSEARCH_URI for $WORD \"\n    curl -XGET \"${ELASTICSEARCH_URI}/_search?q=$WORD\"\n\n    # Sleep for one second before running the next query\n    echo\n    echo \"Press [CTRL+C] to stop..\"\n    sleep 1\ndone\n```", "```java\nsudo apt-get install wamerican\n\n```", "```java\nsudo apt-get install wbritish\n\n```", "```java\nchmod +x run_queries.sh\n\n```", "```java\n./run_queries.sh\n\n```", "```java\n# From elasticsearch-node-01\nsudo service elasticsearch stop\n\n```"]