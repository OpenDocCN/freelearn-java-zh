["```java\n@ApplicationScoped // (1)\n@Path(\"/properties\") // (2)\npublic class PropertyController {\n    @GET // (3)\n    @Produces(MediaType.APPLICATION_JSON) // (4)\n    public Properties getProperties() {\n        return System.getProperties();\n    }\n}\n```", "```java\n@RegisterRestClient(baseUri=\"http://localhost:9081/system\")  // (1)\npublic interface PropertiesClient {\n    @GET // (2)\n    @Produces(MediaType.APPLICATION_JSON) // (3)\n    @Path(\"/properties\") // (4)\n    public Properties getProperities();\n}\n```", "```java\n@Path(\"/client\")\n@ApplicationScoped\npublic class ClientController {\n@Inject @RestClient \nprivate PropertiesClient; // (1)\n    @GET \n    @Path(\"/props\") \n    @Produces(MediaType.APPLICATION_JSON) \n    public Properties displayProps() throws       IllegalStateException, RestClientDefinitionException, \n        URISyntaxException {\n        return propertiesClient.getProperities(); // (2)\n    }\n}\n```", "```java\n    @Inject @ConfigProperty(name=\"customer.name\") String customerName;\n    ```", "```java\n    Config = ConfigProvider.getConfig();\n    String customerName = config.getValue(\"customer.name\",   String.class);\n    ```", "```java\ncustomer.name=Bob\n```", "```java\n@GET\n@Path(\"/getGroups\")\npublic Set<String> getGroups(@Context SecurityContext sec) {\n    Set<String> groups = null;\n    Principal user = sec.getUserPrincipal();\n    if (user instanceof JsonWebToken) {\n        JsonWebToken jwt = (JsonWebToken) user;\n        groups= = jwt.getGroups();\n    }\n    return groups;\n} \n```", "```java\n@Inject private JsonWebToken jwt;\n@Inject @Claim(standard= Claims.raw_token) private String   rawToken;\n@Inject @Claim(\"iat\") private Long dupIssuedAt;\n@Inject @Claim(\"sub\") private ClaimValue<Optional<String>>   optSubject;\n```", "```java\ncurl 'https://start.microprofile.io/api'\n```"]