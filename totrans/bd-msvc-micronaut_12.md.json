["```java\nmicronaut:\n  application:\n    name: pet-owner\n  server:\n    port: 32581\n  router:\n    static-resources:\n      swagger:\n        paths: classpath:META-INF/swagger\n        mapping: /swagger/**\ndatasources:\n  default:\n    url: \"jdbc:postgresql://host.docker.internal:5432/postgres\"\n    username: postgres\n    password: postgres\n    driverClassName: org.postgresql.Driver\n\nconsul:\n  client:\n    default-zone: \"consul:8500\"\n    registration:\n      enabled: true\n\njpa:\n…\n```", "```java\n<build>\n  <plugins>\n    ...\n    <plugin>\n      <groupId>com.google.cloud.tools</groupId>\n      <artifactId>jib-maven-plugin</artifactId>\n      <version>2.8.0</version>\n      <configuration>\n        <from>\n          <image>openjdk:13-jdk-slim</image>\n        </from>\n        <to>\n          <image>pet-owner-0.1-image</image>\n        </to>\n        <container>\n          <creationTime>${maven.build.timestamp}</creationTime>\n        </container>\n      </configuration>\n    </plugin>\n  </plugins>\n</build>\n```", "```java\nmicronaut:\n  application:\n    name: pet-clinic\n  server:\n    port: 32582\nkafka:\n  bootstrap:\n    servers: kafka:9092\ndatasources:\n  default:\n    url: \n     «jdbc:postgresql://host.docker.internal:5432/postgres»\n    username: postgres\n    password: postgres\n    driverClassName: org.postgresql.Driver\nconsul:\n  client:\n    default-zone: \"consul:8500\"\n    registration:\n      enabled: true\n…\n```", "```java\n<build>\n  <plugins>\n    ...\n    <plugin>\n      <groupId>com.google.cloud.tools</groupId>\n      <artifactId>jib-maven-plugin</artifactId>\n      <version>2.8.0</version>\n      <configuration>\n        <from>\n          <image>openjdk:13-jdk-slim</image>\n        </from>\n        <to>\n          <image>pet-clinic-0.1-image</image>\n        </to>\n        <container>\n          <creationTime>${maven.build.timestamp}</creationTime>\n        </container>\n      </configuration>\n    </plugin>\n  </plugins>\n</build>\n```", "```java\nmicronaut:\n  application:\n    name: pet-clinic-reviews\n  server:\n    port: 32583\nkafka:\n  bootstrap:\n    servers: kafka:9092\nmongodb:\n  uri: mongodb://mongodb:mongodb@host.docker.internal:27017/pet-clinic-reviews\n  databaseName: pet-clinic-reviews\n  collectionName: vet-reviews\nconsul:\n  client:\n    default-zone: «consul:8500»\n    registration:\n      enabled: true\n…\n```", "```java\n<build>\n  <plugins>\n    ...\n    <plugin>\n      <groupId>com.google.cloud.tools</groupId>\n      <artifactId>jib-maven-plugin</artifactId>\n      <version>2.8.0</version>\n      <configuration>\n        <from>\n          <image>openjdk:13-jdk-slim</image>\n        </from>\n        <to>\n          <image>pet-clinic-reviews-0.1-image</image>\n        </to>\n        <container>\n          <creationTime>${maven.build.timestamp}</creationTime>\n        </container>\n      </configuration>\n    </plugin>\n  </plugins>\n</build>\n```", "```java\nmicronaut:\n  application:\n    name: pet-clinic-concierge\n  server:\n    port: 32584\n  config-client:\n    enabled: true\nconsul:\n  client:\n    default-zone: \"consul:8500\"\n    registration:\n      enabled: true\n…\n```", "```java\n<build>\n  <plugins>\n    ...\n    <plugin>\n      <groupId>com.google.cloud.tools</groupId>\n      <artifactId>jib-maven-plugin</artifactId>\n      <version>2.8.0</version>\n      <configuration>\n        <from>\n          <image>openjdk:13-jdk-slim</image>\n        </from>\n        <to>\n          <image>pet-clinic-concierge-0.1-image</image>\n        </to>\n        <container>\n          <creationTime>${maven.build.timestamp}</creationTime>\n        </container>\n      </configuration>\n    </plugin>\n  </plugins>\n</build>\n```", "```java\nversion: '3'\nservices:\n  consul:\n    image: bitnami/consul:latest\n    ports:\n      - '8500:8500'\n\n  zookeeper:\n    image: bitnami/zookeeper:3-debian-10\n    ports:\n      - 2181:2181\n    volumes:\n      - zookeeper_data:/pet-clinic-reviews\n    environment:\n      - ALLOW_ANONYMOUS_LOGIN=yes  \n  kafka:\n    image: bitnami/kafka:2-debian-10\n    ports:\n      - 9094:9094\n    volumes:\n      - kafka_data:/pet-clinic-reviews\n    environment:\n      - KAFKA_BROKER_ID=1\n      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181\n      - ALLOW_PLAINTEXT_LISTENER=yes\n      - KAFKA_LISTENERS=INTERNAL://kafka:9092,OUTSIDE://\nkafka:9094\n      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,OUTSIDE://localhost:9094\n      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT\n      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL\n    depends_on:\n      - zookeeper\n  kafdrop:\n    image: obsidiandynamics/kafdrop\n    ports:\n      - 9100:9000\n    environment:\n      - KAFKA_BROKERCONNECT=kafka:9092\n      - JVM_OPTS=-Xms32M -Xmx64M\n    depends_on:\n      - kafka\n…\n```", "```java\n…  \npet-owner:\n    image: \"pet-owner-0.1-image\"\n    ports:\n        - \"32581:32581\"\n    depends_on:\n        - consul\n\n  pet-clinic:\n    image: \"pet-clinic-0.1-image\"\n    ports:\n        - \"32582:32582\"\n    depends_on:\n        - kafka\n        - consul\n\n  pet-clinic-reviews:\n    image: \"pet-clinic-reviews-0.1-image\"\n    ports:\n        - \"32583:32583\"\n    depends_on:\n        - kafka\n        - consul\n\n  pet-clinic-concierge:\n    image: \"pet-clinic-concierge-0.1-image\"\n    ports:\n        - \"32584:32584\"\n    depends_on:\n        - consul    \n…\n```"]