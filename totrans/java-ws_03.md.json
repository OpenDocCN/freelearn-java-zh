["```java\nclass <name> {\n    fields;\n    methods;\n}\n```", "```java\nExample01.java\n1  class Computer {\n2      // variables\n3      double cpuSpeed;  // in GHz\n4  \n5      // constructor\n6      Computer() {\n7          cpuSpeed = 0;\n8      }\n9  \n10     //methods\n11     void setCpuSpeed ( double _cpuSpeed ) {\n12         cpuSpeed = _cpuSpeed;\n13     }\nhttps://packt.live/32w1ffg\n```", "```java\n2.5\nProcess finished with exit code 0\n```", "```java\n// constructor\nComputer() {\n    cpuSpeed = 0;\n}\n```", "```java\n// constructor\nComputer( double _c ) {\n    cpuSpeed = _c;\n}\n```", "```java\nComputer myPC = new Computer( 2.5 );\n```", "```java\nComputer myPC = new Computer( 2.5 );\n```", "```java\nmyPC.setCpuSpeed( 2.5 );\n```", "```java\nmyPC.cpuSpeed = 2.5;\n```", "```java\nExample02.java\n1  class Computer {\n2      // variables\n3      private double cpuSpeed;  // in GHz\n4  \n5      // constructor\n6      Computer() {\n7          cpuSpeed = 0;\n8      }\n9  \n10     // methods\n11     void setCpuSpeed ( double _cpuSpeed ) {\n12         cpuSpeed = _cpuSpeed;\n13     }\n14 \n15     double getCpuSpeed () {\n16         return cpuSpeed;\n17     }\n18 }\nhttps://packt.live/2pBgWTS\n```", "```java\n2.5\nProcess finished with exit code 0\n```", "```java\nExample03.java\n20 public class Example03 {\n21     public static void main(String[] args) {\n22         Computer myPC = new Computer();\n23         myPC.setCpuSpeed( 2.5 );\n24         System.out.println( myPC.cpuSpeed );\n25     }\n26 }\nhttps://packt.live/2pvLu9Q\n```", "```java\nExample03.java:23: error: cpuSpeed has private access in Computer\n        System.out.println( myPC.cpuSpeed );\n1 error\nProcess finished with exit code 1.\n```", "```java\npublic class Example04 {\n    public static void checkNumber(Number val) {\n        if( val instanceof Integer )\n            System.out.println(\"it is an Integer\");\n        if( val instanceof Double )\n            System.out.println(\"it is a Double\");\n    }\n    public static void main(String[] args) {\n        int val1 = 3;\n        double val2 = 2.7;\n        checkNumber( val1 );\n        checkNumber( val2 );\n    }\n}\n```", "```java\nit is an Integer\nit is a Double\nProcess finished with exit code 0\n```", "```java\n    WordTool() {};\n    ```", "```java\n        public int wordCount ( String s ) {\n            int count = 0;    // variable to count words\n            // if the entry is empty or is null, count is zero\n            // therefore we evaluate it only otherwise\n            if ( !(s == null || s.isEmpty()) ) {\n                // use the split method from the String class to\n                // separate the words having the whitespace as separator\n                String[] w = s.split(\"\\\\s+\");\n                count = w.length;\n            }\n            return count;\n        }\n    ```", "```java\n        public int symbolCount ( String s, boolean withSpaces ) {\n            int count = 0;  // variable to count symbols\n            // if the entry is empty or is null, count is zero\n            // therefore we evaluate it only otherwise\n            if ( !(s == null || s.isEmpty()) ) {\n                if (withSpaces) {\n                    // with whitespaces return the full length\n                    count = s.length();\n                } else {\n                    // without whitespaces, eliminate whitespaces\n                    // and get the length on the fly\n                    count = s.replace(\" \", \"\").length();\n                }\n            }\n            return count;\n        }\n    ```", "```java\n    WordTool wt = new WordTool();\n    String text = \"The river carried the memories from her childhood.\";\n    ```", "```java\n    System.out.println( \"Analyzing the text: \\n\" + text );\n    System.out.println( \"Total words: \" + wt.wordCount(text) );\n    System.out.println( \"Total symbols (w. spaces): \" + wt.symbolCount(text, true) );\n    System.out.println( \"Total symbols (wo. spaces): \" + wt.symbolCount(text, false) );\n    ```", "```java\n    Analyzing the text: \n    The river carried the memories from her childhood.\n    Total words: 8\n    Total symbols (w. spaces): 50\n    Total symbols (wo. spaces): 43\n    Process finished with exit code 0\n    ```", "```java\n    Analyzing the text: \n    The river carried the memories from her childhood.\n    Total words: 8\n    Total symbols (w. spaces): 50\n    Total symbols (wo. spaces): 43\n    Total amount of e: 7\n    Process finished with exit code 0\n    ```", "```java\nExample05.java\n20 class Tablet extends Computer {\n21     // variables\n22     private double screenSize;  // in inches\n23 \n24     // methods\n25     void setScreenSize ( double _screenSize ) {\n26         screenSize = _screenSize;\n27     }\n28 \n29     double getScreenSize () {\n30         return screenSize;\n31     }\n32 }\n33 \n34 public class Example05 {\n35     public static void main(String[] args) {\n36         Tablet myTab = new Tablet();\n37         myTab.setCpuSpeed( 2.5 );\n38         myTab.setScreenSize( 10 );\n39         System.out.println( myTab.getCpuSpeed() );\n40         System.out.println( myTab.getScreenSize() );\n41     }\n42 }\nhttps://packt.live/2o3NaqE\n```", "```java\nclass Computer {\n    public void whatIsIt() {\n        System.out.println( \"it is a PC\");\n    }\n}\nclass Tablet extends Computer {\n    public void whatIsIt() {\n        System.out.println( \"it is a tablet\");\n    }\n}\nclass Example06 {\n    public static void main(String[] args) {\n        Tablet myTab = new Tablet();\n        myTab.whatIsIt();\n    }\n}\n```", "```java\nclass Example06 {\n    public static void main(String[] args) {\n        Computer myTab = new Tablet();\n        myTab.whatIsIt();\n    }\n}\n```", "```java\nit is a tablet\nProcess finished with exit code 0\n```", "```java\nclass Computer {\n    public static void whatIsIt() {\n        System.out.println( \"it is a PC\");\n    }\n}\nclass Tablet extends Computer {\n    public static void whatIsIt() {\n        System.out.println( \"it is a tablet\");\n    }\n}\nclass Example07 {\n    public static void main(String[] args) {\n        Computer myTab = new Tablet();\n        myTab.whatIsIt();\n    }\n}\n```", "```java\nit is a PC\nProcess finished with exit code 0\n```", "```java\nclass Example07 {\n    public static void main(String[] args) {\n        Computer myTab = new Tablet();\n        Tablet.whatIsIt();\n    }\n}\n```", "```java\nit is a tablet\nProcess finished with exit code 0\n```", "```java\nclass Temperature {\n    public double t = 25;\n    public double getCelsius() {\n        return t;\n    }\n    final public double getFahrenheit() {\n        return t * 9/5 + 32;\n    }\n}\nclass Example08 {\n    public static void main(String[] args) {\n        Temperature temp = new Temperature();\n        System.out.println( temp.getCelsius() );\n        System.out.println( temp.getFahrenheit() );\n    }\n}\n```", "```java\n25.0\n77.0\nProcess finished with exit code 0\n```", "```java\nclass Age {\n    public double a = 0;\n    public void setAge ( double _a ) {\n        a = _a;\n    }\n    public void setAge ( int year, int month ) {\n        a = year + (double) month / 12;\n    }\n    public double getAge () {\n        return a;\n    }\n}\nclass Example09 {\n    public static void main(String[] args) {\n        Age age = new Age();\n        age.setAge(12.5);\n        System.out.println(age.getAge());\n        age.setAge(9, 3);\n        System.out.println(age.getAge());\n    }\n}\n```", "```java\n12.5\n9.25\nProcess finished with exit code 0\n```", "```java\nclass Age {\n    public double a = 0;\n    Age ( double _a ) {\n        a = _a;\n    }\n    Age ( int year, int month ) {\n        a = year + (double) month / 12;\n    }\n    public double getAge () {\n        return a;\n    }\n}\nclass Example10 {\n    public static void main(String[] args) {\n        Age age1 = new Age(12.5);\n        Age age2 = new Age(9, 3);\n        System.out.println(age1.getAge());\n        System.out.println(age2.getAge());\n    }\n}\n```", "```java\nclass Example11 {\n    public static long fact ( int n ) {\n        if ( n == 1 ) return 1;\n        return n * fact ( n – 1 );\n    }\n    public static void main(String[] args) {\n        int input = Integer.parseInt(args[0]);\n        long factorial = fact ( input );\n        System.out.println(factorial);\n    }\n}\n```", "```java\nusr@localhost:~/IdeaProjects/chapter03/[...]production/Example11$ java Example11 5\n120\n```", "```java\nusr@localhost:~/IdeaProjects/chapter03/[...]production/Example11$ java Example11 3\n6\n```", "```java\npublic static long fact ( int n ) {\n    if ( n == 1 ) return 1;\n    return n * fact ( n – 1 );\n}\n```", "```java\n    if ( n == 1 ) return 1;\n    ```", "```java\n    return n * fact ( n – 1 );\n    ```", "```java\nclass Computer {\n    public void whatIsIt() {\n        System.out.println( \"it is a PC\");\n    }\n}\nclass Tablet extends Computer {\n    @Override\n    public void whatIsIt() {\n        System.out.println( \"it is a tablet\");\n    }\n}\nclass Example12 {\n    public static void main(String[] args) {\n        Tablet myTab = new Tablet();\n        myTab.whatIsIt();\n    }\n}\n```", "```java\nExample13.java\n1  class Computer {\n2      @Deprecated\n3      public void whatIsIt() {\n4          System.out.println( \"it is a PC\");\n5      }\n6  \n7      public void getDeviceType() {\n8          System.out.println( \"it is a PC\");\n9      }\n10 }\n11 \n12 class Tablet extends Computer {\n13     @Override\n14     public void whatIsIt() {\n15         System.out.println( \"it is a tablet\");\n16     }\n17 }\nhttps://packt.live/35NGCgG\n```", "```java\nWarning:(13, 17) java: whatIsIt() in Computer has been deprecated\n```", "```java\nExample14.java\n1  class Computer {\n2      @Deprecated\n3      public void whatIsIt() {\n4          System.out.println( \"it is a PC\");\n5      }\n6  \n7      public void getDeviceType() {\n8          System.out.println( \"it is a PC\");\n9      }\n10 }\n11 \n12 @SuppressWarnings(\"deprecation\")\n13 class Tablet extends Computer {\n14     @Override\n15     public void whatIsIt() {\n16         System.out.println( \"it is a tablet\");\n17     }\n18 }\nhttps://packt.live/33GKnTt\n```", "```java\ninterface Computer {\n    public String getDeviceType();\n    public String getSpeed();  \n}\nclass Tablet implements Computer {\n    public String getDeviceType() {\n        return \"it is a tablet\";\n    }\n    public String getSpeed() {\n        return \"1GHz\";\n    }\n}\nclass Example15 {\n    public static void main(String[] args) {\n        Tablet myTab = new Tablet();\n        System.out.println( myTab.getDeviceType() );\n        System.out.println( myTab.getSpeed() );\n    }\n}\n```", "```java\nit is a tablet\n1GHz\nProcess finished with exit code 0\n```", "```java\nExample16.java\n1  class Container {\n2      // inner class\n3      private class Continent {\n4      public void print() {\n5              System.out.println(\"This is an inner class\");\n6          }\n7      }\n8  \n9      // method to give access to the private inner class' method\n10     void printContinent() {\n11         Continent continent = new Continent();\n12         continent.print();\n13     }\n14 }\nhttps://packt.live/2P2vc30\n```", "```java\nThis is an inner class\nProcess finished with exit code 0\n```", "```java\nclass Container {\n    int c = 17;\n    public void print() {\n        System.out.println(\"This is an outer class\");\n    }\n}\nclass Example17 {\n    public static void main(String[] args) {\n        // inner class\n        Container container = new Container() {\n            @Override\n            public void print() {\n                System.out.println(\"This is an inner class\");\n            }\n        };\n        container.print();\n        System.out.println( container.c );\n    }\n}\n```", "```java\nThis is an inner class\n17\nProcess finished with exit code 0\n```", "```java\nExample18.java\n1  /**\n2   * Anonymous class example\n3   * This example shows the declaration of an inner class extending\n4   * an existing class and overriding a method. It can be used as a\n5   * technique to modify an existing method for something more suitable\n6   * to our purpose.\n7   *\n8   * @author Joe Smith\n9   * @version 0.1\n10  * @since 20190305\n11  */\nhttps://packt.live/2J5u4aT\n```", "```java\n/**\n * <H1>Anonymous class example</H1>\n * This example shows the declaration of an <b>inner class</b> extending\n * an existing class and overriding a method. It can be used as a\n * technique to modify an existing method for something more suitable\n * to our purpose.\n *\n * @author Joe Smith\n * @version 0.1\n * @since 20190305\n */\n```"]