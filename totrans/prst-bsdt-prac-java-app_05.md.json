["```java\nquarkus.datasource.db-kind=h2quarkus.datasource.username=username-default\nquarkus.datasource.jdbc.url=jdbc:h2:mem:default\nquarkus.datasource.jdbc.max-size=13\nquarkus.hibernate-\n  orm.dialect=org.hibernate.dialect.H2Dialect\nquarkus.hibernate-orm.database.generation=create\nquarkus.hibernate-orm.log.sql=true\n```", "```java\n@Entitypublic class Book extends PanacheEntity {\n    public String name;\n    public int release;\n    public int edition;\n    public static List<Book> findByName(String name) {\n        return list(\"name\", name);\n    }\n    public static List<Book> findByRelease(int year) {\n        return list(\"release\", year);\n    }\n}\n```", "```java\n@Entitypublic class Magazine {\n    @Id\n    @GeneratedValue\n    public Long id;\n    public String name;\n    public int release;\n    public int edition;\n}\n```", "```java\n@ApplicationScopedpublic class MagazineRepository implements\n  PanacheRepository<Magazine> {\n    public List<Magazine> findByName(String name) {\n        return list(\"name\", name);\n    }\n    public List<Magazine> findByRelease(int year) {\n        return list(\"release\", year);\n    }\n}\n```", "```java\n@Path(\"/library\")@Consumes(MediaType.APPLICATION_JSON)\n@Produces(MediaType.APPLICATION_JSON)\npublic class BookResource {\n    @GET\n    public List<Book> findAll() {\n        return Book.listAll();\n    }\n    @GET\n    @Path(\"name/{name}\")\n    public List<Book> findByName(@PathParam(\"name\") String\n      name) {\n        return Book.findByName(name);\n    }\n    @GET\n    @Path(\"release/{year}\")\n    public List<Book> findByYear(@PathParam(\"year\") int\n      year) {\n        return Book.findByRelease(year);\n    }\n    @POST\n@Transactional\n    public Book insert(Book book) {\n        book.persist();\n        return book;\n    }\n    @DELETE\n    @Path(\"{id}\")\n    @Transactional\n    public void delete(@PathParam(\"id\") Long id) {\n        Book.deleteById(id);\n    }\n}\n```", "```java\n@Path(\"/magazines\")@Consumes(MediaType.APPLICATION_JSON)\n@Produces(MediaType.APPLICATION_JSON)\npublic class MagazineResource {\n    @Inject\n    MagazineRepository repository;\n    @GET\n    public List<Magazine> findAll() {\n        return repository.listAll();\n    }\n    @GET\n    @Path(\"name/{name}\")\n    public List<Magazine> findByName(@PathParam(\"name\")\n      String name) {\n        return repository.findByName(name);\n    }\n    @GET\n    @Path(\"release/{year}\")\n    public List<Magazine> findByYear(@PathParam(\"year\") int\n      year) {\n        return repository.findByRelease(year);\n    }\n    @POST\n    @Transactional\n    public Magazine insert(Magazine magazine) {\n        this.repository.persist(magazine);\n        return magazine;\n    }\n    @DELETE\n    @Path(\"{id}\")\n    @Transactional\n    public void delete(@PathParam(\"id\") Long id) {\n        repository.deleteById(id);\n    }\n}\n```", "```java\n@Entitypublic class Newsletter extends PanacheEntity {\n   public String author;\n   public String headline;\n}\n```", "```java\nimport io.quarkus.hibernate.orm.rest.data.panache.PanacheEntityResource;public interface NewsletterResource extends PanacheEntityResource<Newsletter, Long> {\n}\n```", "```java\nquarkus.hibernate-orm.log.sql=truequarkus.hibernate-orm.statistics=true\nquarkus.hibernate-orm.metrics.enabled=true\nquarkus.log.level=DEBUG\n```"]