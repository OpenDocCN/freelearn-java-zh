["```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.packt.camel</groupId>\n    <artifactId>chapter4a</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.apache.camel</groupId>\n            <artifactId>camel-core</artifactId>\n            <version>2.12.4</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>exec-maven-plugin</artifactId>\n                <version>1.3.2</version>\n                <executions>\n                    <execution>\n                        <id>launch</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>java</goal>\n                        </goals>\n                        <configuration>\n                            <mainClass>com.packt.camel.chapter4a.Main</mainClass>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n```", "```java\npackage com.packt.camel.chapter4a;\n\npublic class SimpleBean {\n\n    public String hello(String message) {\n        System.out.println(\"***** Hello \" + message + \" *****\");\n        return \"Hello\" + message;\n    }\n}\n```", "```java\npackage com.packt.camel.chapter4a;\n\nimport org.apache.camel.CamelContext;\nimport org.apache.camel.ProducerTemplate;\nimport org.apache.camel.builder.RouteBuilder;\nimport org.apache.camel.impl.DefaultCamelContext;\nimport org.apache.camel.impl.SimpleRegistry;\n\npublic final class Main {\n\n  public static void main(String[] args) throws Exception {\n    SimpleRegistry registry = new SimpleRegistry();\n    registry.put(\"simpleBean\", new SimpleBean());\n\n    CamelContext camelContext = new DefaultCamelContext(registry);\n    camelContext.addRoutes(new RouteBuilder() {\n      @Override\n      public void configure() throws Exception {\n        from(\"direct:start\").to(\"bean:simpleBean\").to(\"mock:stop\");\n      }\n    }\n    );\n\n  camelContext.start();\n\n   ProducerTemplate producerTemplate = camelContext.createProducerTemplate();\n  producerTemplate.sendBody(\"direct:start\", \"Packt\");\n  camelContext.stop();\n  }\n}\n```", "```java\nmvn clean install\n\n```", "```java\n[INFO] --- exec-maven-plugin:1.3.2:java (launch) @ chapter4a ---\nHello Packt\n[INFO] \n\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.packt.camel</groupId>\n  <artifactId>chapter4b</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <dependencies>\n      <dependency>\n          <groupId>org.apache.camel</groupId>\n          <artifactId>camel-core</artifactId>\n          <version>2.12.4</version>\n      </dependency>\n  </dependencies>\n\n  <build>\n      <plugins>\n          <plugin>\n              <groupId>org.codehaus.mojo</groupId>\n              <artifactId>exec-maven-plugin</artifactId>\n              <version>1.3.2</version>\n              <executions>\n                  <execution>\n                      <id>launch</id>\n                      <phase>verify</phase>\n                      <goals>\n                          <goal>java</goal>\n                      </goals>\n                      <configuration>\n                          <mainClass>com.packt.camel.chapter4b.Main</mainClass>\n                      </configuration>\n                  </execution>\n              </executions>\n          </plugin>\n      </plugins>\n  </build>\n\n</project>\n```", "```java\npackage com.packt.camel.chapter4b;\n\npublic class SimpleBean {\n\n  public String hello(String message) {\n    System.out.println(\"Hello \" + message);\n    return \"Hello\" + message;\n  }\n}\n```", "```java\npackage com.packt.camel.chapter4b;\n\nimport org.apache.camel.CamelContext;\nimport org.apache.camel.ProducerTemplate;\nimport org.apache.camel.builder.RouteBuilder;\nimport org.apache.camel.impl.DefaultCamelContext;\nimport org.apache.camel.impl.JndiRegistry;\nimport org.apache.camel.util.jndi.JndiContext;\n\npublic final class Main {\n\n  public static void main(String[] args) throws Exception {\n    JndiRegistry registry = new JndiRegistry(new JndiContext());\n    registry.bind(\"simpleBean\", new SimpleBean());\n\n    CamelContext camelContext = new DefaultCamelContext(registry);\n    camelContext.addRoutes(new RouteBuilder() {\n      @Override\n      public void configure() throws Exception {\n             from(\"direct:start\").to(\"bean:simpleBean\").to(\"mock:stop\");\n      }\n    }\n    );\n\n  camelContext.start();\n\n    ProducerTemplate producerTemplate = camelContext.createProducerTemplate();\n    producerTemplate.sendBody(\"direct:start\", \"Packt\");\n\n    camelContext.stop();\n  }\n}\n```", "```java\nmvn clean install\n\n```", "```java\n[INFO] --- exec-maven-plugin:1.3.2:java (launch) @ chapter4b ---\n[WARNING] Warning: killAfter is now deprecated. Do you need it ? Please comment on MEXEC-6.\n\nHello Packt\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.packt.camel</groupId>\n    <artifactId>chapter4c</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.apache.camel</groupId>\n            <artifactId>camel-core</artifactId>\n            <version>2.12.4</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>exec-maven-plugin</artifactId>\n                <version>1.3.2</version>\n                <executions>\n                    <execution>\n                        <id>launch</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>java</goal>\n                        </goals>\n                        <configuration>\n                            <mainClass>com.packt.camel.chapter4c.Main</mainClass>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n```", "```java\npackage com.packt.camel.chapter4c;\n\npublic class SimpleBean {\n\n    public static String hello(String message) {\n        System.out.println(\"Hello \" + message);\n        return \"Hello\" + message;\n    }\n}\n```", "```java\npackage com.packt.camel.chapter4c;\n\nimport org.apache.camel.CamelContext;\nimport org.apache.camel.ProducerTemplate;\nimport org.apache.camel.builder.RouteBuilder;\nimport org.apache.camel.impl.CompositeRegistry;\nimport org.apache.camel.impl.DefaultCamelContext;\nimport org.apache.camel.impl.JndiRegistry;\nimport org.apache.camel.impl.SimpleRegistry;\nimport org.apache.camel.util.jndi.JndiContext;\n\npublic final class Main {\n\n  public static void main(String[] args) throws Exception {\n    SimpleRegistry simpleRegistry = new SimpleRegistry();\n    simpleRegistry.put(\"simpleBean\", new SimpleBean());\n    JndiRegistry jndiRegistry = new JndiRegistry(new JndiContext());\n    jndiRegistry.bind(\"otherBean\", new SimpleBean());\n    CompositeRegistry registry = new CompositeRegistry();\n    registry.addRegistry(simpleRegistry);\n    registry.addRegistry(jndiRegistry);\n\n    CamelContext camelContext = new DefaultCamelContext(registry);\n    camelContext.addRoutes(new RouteBuilder() {\n      @Override\n      public void configure() throws Exception {\n        from(\"direct:start\").to(\"bean:simpleBean\").to(\"mock:stop\");\n        from(\"direct:other\").to(\"bean:otherBean\").to(\"mock:stop\");\n      }\n    }\n    );\n\n    camelContext.start();\n\n    ProducerTemplate producerTemplate = camelContext.createProducerTemplate();\n    producerTemplate.sendBody(\"direct:start\", \"Packt\");\n    producerTemplate.sendBody(\"direct:other\", \"Other\");\n\n    camelContext.stop();\n  }\n}\n```", "```java\nmvn clean install\n\n```", "```java\n[INFO] --- exec-maven-plugin:1.3.2:java (launch) @ chapter4c ---\n[WARNING] Warning: killAfter is now deprecated. Do you need it ? Please comment on MEXEC-6.\n\nHello Packt\nHello Other\n\n```", "```java\npublic void doMyStuff(Exchange exchange);\n```", "```java\npublic class MyBean {\n  public void other(String class) {  }\n\npublic void doMyStuff(String class) { ... }\n}\n```", "```java\npublic class MyBean {\n  public void other(String class) { … }\n  @Handler\npublic void doMyStuff(String class) { ... }\n}\n```", "```java\n@Handler\npublic void doMyLogic(@Body MyPojo pojo) { … }\n```", "```java\npublic void doMyLogic(@Body String body, @ExchangeException Exception exception) {\n  if (exception != null) { … } else { … }\n}\n```", "```java\npublic void doMyLogic(@Body String body, @Header(\"FirstHeader\") String firstHeader, @Header(\"SecondHeader\") String second header) { … }\n```", "```java\npublic void doMyLogic(@Body String body, @Headers Map headers) { … }\n```", "```java\npublic void doMyLogic(@Body String body, @Headers Map inHeaders, @OutHeaders Map outHeaders) { … }\n```", "```java\npublic void doMyLogic(@Body String body, @Property(\"TheProperty\") String exProperty) { … }\n```", "```java\npublic void doMyLogic(@Body String body, @Properties Map exProperties) { … }\n```", "```java\n    public void doMyLogic(@Body String body, @Bean(\"anotherBean\") AnotherBean anotherBean) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @BeanShell(\"myBean.thisIsMyMethod()\") methodResult) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @Constant(\"It doesn't change\") String myConstant) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @EL(\"in.header.myHeader == 'expectedValue') boolean matched) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @Groovy(\"request.attribute\") String attributeValue) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @JavaScript(in.headers.get('myHeader') == 'expectedValue') boolean matched) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @MVEL(\"in.headers.myHeader == 'expectedValue'\") boolean matched) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @OGNL(\"in.headers.myHeader == 'expectedValue'\") boolean matched) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @PHP(\"in.headers.myHeader == 'expectedValue'\") boolean matched) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @Python(\"in.headers.myHeader == 'expectedValue'\") boolean matched) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @Ruby(\"$request.headers['myHeader'] == 'expectedValue'\") boolean matched) { … }\n    ```", "```java\n    public void doMyLogic(@Body String body, @Simple(\"${in.header.myHeader}\") String myHeader) { … }\n    ```", "```java\n    public void doMyLogic(@XPath(\"//person/name\") String name) { … }\n    ```", "```java\n    public void doMyLogic(@XQuery(\"/person/@name\") String name) { … }\n    ```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.packt.camel</groupId>\n  <artifactId>chapter4</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <packaging>bundle</packaging>\n\n  <dependencies>\n      <dependency>\n          <groupId>org.apache.camel</groupId>\n          <artifactId>camel-core</artifactId>\n          <version>2.12.4</version>\n      </dependency>\n  </dependencies>\n\n  <build>\n      <plugins>\n          <plugin>\n              <groupId>org.apache.felix</groupId>\n              <artifactId>maven-bundle-plugin</artifactId>\n              <version>2.3.7</version>\n              <extensions>true</extensions>\n              <configuration>\n                  <instructions>\n                      <Import-Package>*</Import-Package>\n                  </instructions>\n              </configuration>\n          </plugin>\n      </plugins>\n  </build>\n\n</project>\n```", "```java\npackage com.packt.camel.chapter4;\n\nimport org.apache.camel.Body;\nimport org.apache.camel.Handler;\n\npublic class MyBean {\n\n  @Handler\n  public String doMyLogic(@Body String body) {\n      return \"My Logic got \" + body;\n  }\n\n  public String setMyHeader() {\n      return \"Here's my header definition, whatever the logic is\";\n  }\n\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<blueprint >\n\n  <bean id=\"myBean\" class=\"com.packt.camel.chapter4.MyBean\"/>\n\n  <camelContext >\n      <route>\n          <from uri=\"timer:fire?period=5000\"/>\n          <setBody><constant>Hello Chapter4</constant></setBody>\n          <to uri=\"bean:myBean\"/>\n          <setHeader headerName=\"myHeaderSetByTheBean\">\n              <method bean=\"myBean\" method=\"setMyHeader\"/>\n          </setHeader>\n          <to uri=\"log:blueprintRoute\"/>\n      </route>\n  </camelContext>\n\n</blueprint>\n```", "```java\n$ mvn clean install\n[INFO] Scanning for projects...\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] Building chapter4 1.0-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ chapter4 ---\n[INFO] Deleting /home/jbonofre/Workspace/sample/chapter4/target\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ chapter4 ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 1 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ chapter4 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /home/jbonofre/Workspace/sample/chapter4/target/classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ chapter4 ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /home/jbonofre/Workspace/sample/chapter4/src/test/resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ chapter4 ---\n[INFO] No sources to compile\n[INFO]\n[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ chapter4 ---\n[INFO] No tests to run.\n[INFO]\n[INFO] --- maven-bundle-plugin:2.3.7:bundle (default-bundle) @ chapter4 ---\n[INFO]\n[INFO] --- maven-install-plugin:2.5.1:install (default-install) @ chapter4 ---\n[INFO] Installing /home/jbonofre/Workspace/sample/chapter4/target/chapter4-1.0-SNAPSHOT.jar to /home/jbonofre/.m2/repository/com/packt/camel/chapter4/1.0-SNAPSHOT/chapter4-1.0-SNAPSHOT.jar\n[INFO] Installing /home/jbonofre/Workspace/sample/chapter4/pom.xml to /home/jbonofre/.m2/repository/com/packt/camel/chapter4/1.0-SNAPSHOT/chapter4-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --- maven-bundle-plugin:2.3.7:install (default-install) @ chapter4 ---\n[INFO] Installing com/packt/camel/chapter4/1.0-SNAPSHOT/chapter4-1.0-SNAPSHOT.jar\n[INFO] Writing OBR metadata\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 7.037s\n[INFO] Finished at: Sun Nov 30 23:07:59 CET 2014\n[INFO] Final Memory: 32M/1343M\n[INFO] ------------------------------------------------------------------------\n\n```", "```java\nkaraf@root()> feature:repo-add camel 2.12.4\nAdding feature url mvn:org.apache.camel.karaf/apache-camel/2.12.4/xml/features\n\n```", "```java\nkaraf@root()> feature:install -v camel-blueprint\nInstalling feature camel-blueprint 2.12.4\nInstalling feature camel-core 2.12.4\nInstalling feature xml-specs-api 2.2.0\nFound installed bundle: org.apache.servicemix.specs.activation-api-1.1 [64]\nFound installed bundle: org.apache.servicemix.specs.stax-api-1.0 [65]\nFound installed bundle: org.apache.servicemix.specs.jaxb-api-2.2 [66]\nFound installed bundle: stax2-api [67]\nFound installed bundle: woodstox-core-asl [68]\nFound installed bundle: org.apache.servicemix.bundles.jaxb-impl [69]\nFound installed bundle: org.apache.camel.camel-core [70]\nFound installed bundle: org.apache.camel.karaf.camel-karaf-commands [71]\nFound installed bundle: org.apache.camel.camel-blueprint [72]\n\n```", "```java\nkaraf@root()> bundle:install mvn:com.packt.camel/chapter4/1.0-SNAPSHOT\nBundle ID: 73\nkaraf@root()> bundle:start 73\n\n```", "```java\nkaraf@root()> log:display\n...\n2014-11-30 23:13:52,944 | INFO  | 1 - timer://fire | blueprintRoute                 | 70 - org.apache.camel.camel-core - 2.12.4 | Exchange[ExchangePattern: InOnly, BodyType: String, Body: My Logic got Hello Chapter4]\n2014-11-30 23:13:57,943 | INFO  | 1 - timer://fire | blueprintRoute                 | 70 - org.apache.camel.camel-core - 2.12.4 | Exchange[ExchangePattern: InOnly, BodyType: String, Body: My Logic got Hello Chapter4]\n2014-11-30 23:14:02,945 | INFO  | 1 - timer://fire | blueprintRoute                 | 70 - org.apache.camel.camel-core - 2.12.4 | Exchange[ExchangePattern: InOnly, BodyType: String, Body: My Logic got Hello Chapter4]\n2014-11-30 23:14:07,944 | INFO  | 1 - timer://fire | blueprintRoute                 | 70 - org.apache.camel.camel-core - 2.12.4 | Exchange[ExchangePattern: InOnly, BodyType: String, Body: My Logic got Hello Chapter4]\n\n```", "```java\nkaraf@root()> camel:route-list\n Context      Route        Status \n -------      -----        ------ \n 73-camel-3   route1       Started \n\n```", "```java\nkaraf@root()> camel:route-info route1\nCamel Route route1\n Camel Context: 73-camel-3\n\nProperties\n id = route1\n parent = 58a5a53e\n\nStatistics\n Inflight Exchanges: 0\n Exchanges Total: 32\n Exchanges Completed: 32\n Exchanges Failed: 0\n Min Processing Time: 1 ms\n Max Processing Time: 13 ms\n Mean Processing Time: 2 ms\n Total Processing Time: 92 ms\n Last Processing Time: 3 ms\n Delta Processing Time: 0 ms\n Load Avg: 0.00, 0.00, 0.00\n Reset Statistics Date: 2014-11-30 23:13:36\n First Exchange Date: 2014-11-30 23:13:37\n Last Exchange Completed Date: 2014-11-30 23:16:12\n\nDefinition\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<route id=\"route1\" >\n <from uri=\"timer:fire?period=5000\"/>\n <setBody id=\"setBody1\">\n <constant>Hello Chapter4</constant>\n </setBody>\n <to uri=\"bean:myBean\" id=\"to1\"/>\n <setHeader headerName=\"myHeaderSetByTheBean\" id=\"setHeader1\">\n <method bean=\"myBean\" method=\"setMyHeader\"></method>\n </setHeader>\n <to uri=\"log:blueprintRoute\" id=\"to2\"/>\n</route>\n\n```"]