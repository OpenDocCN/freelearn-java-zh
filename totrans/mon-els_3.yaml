- en: Chapter 3. Elasticsearch-head and Bigdesk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter talks about the Elasticsearch monitoring plugins Elasticsearch-head
    and Bigdesk, along with the Elasticsearch cat API. These utilities are used to
    assess the status of your cluster and to diagnose issues:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Elasticsearch-head**: This is used to get an idea of your overall cluster
    health, individual node status, and an understanding of your indices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bigdesk**: This is used to look into the memory, disk, and CPU usage of individual
    nodes in your cluster'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Elasticsearch cat API**: This lets you access many of Elasticsearch''s internal
    metrics without installing any plugins'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Specifically, this chapter explores the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring an Elasticsearch cluster
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading sample data into Elasticsearch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Elasticsearch-head
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Bigdesk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Elasticsearch cat API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cluster setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section covers configuring a three-node Elasticsearch cluster and loading
    it with Twitter data.
  prefs: []
  type: TYPE_NORMAL
- en: Cluster configuration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Setting up an Elasticsearch cluster is simple. All nodes in the cluster should
    be on the same local network and have the same version of Java and Elasticsearch
    installed. For our cluster, we''ll use three Ubuntu Linux 14.04 virtual hosts:
    `elasticsearch-node-01`, `elasticsearch-node-02`, and `elasticsearch-node-03`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'After installing Elasticsearch on all hosts, update the `elasticsearch.yml`
    configuration file on each, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The configuration for `elasticsearch-node-01` is as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The configuration for `elasticsearch-node-02` is as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The configuration for `elasticsearch-node-03` is as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Next, install Elasticsearch-head on all nodes in this cluster using the instructions
    found in the previous chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Now, restart all nodes and verify that the cluster is properly formed by visiting
    Elasticsearch-head at `http://elasticsearch-node-01:9200/_plugin/head/`.
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see something like this, with all of your cluster''s nodes listed
    in the leftmost column:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Cluster configuration](img/B03798_03_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Sample data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have a cluster up and running, let's populate it with Twitter data.
    We use Twitter data as an example because it is easy to acquire in large quantities
    and because it is a continuously-flowing stream of information, which is similar
    to a lot of real-world datasets.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the Elasticsearch `stream2es` utility to get the Twitter data. This utility
    is available at [https://github.com/elastic/stream2es](https://github.com/elastic/stream2es):'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new Twitter account or log into your Twitter account if you already
    have one.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Associate your mobile phone number with the account at [https://support.twitter.com/articles/110250](https://support.twitter.com/articles/110250).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new Twitter application at [https://apps.twitter.com/app/new](https://apps.twitter.com/app/new).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: For *website*, you can put a placeholder value such as `http://example.com`
    if you don't have a domain name.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Make a note of your **Consumer Key (API Ke****y)** and **Consumer Secret (API
    Secret)** in the **Ke****ys and Access Tokens** tab:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Authorize the app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the verification code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a Twitter mapping:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Collect tweets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Take a look at the tweets coming in:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'After letting `stream2es` run for a while, we get the following:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now that we have populated our cluster with some sample data, we can discuss
    how to use Elasticsearch-head, Bigdesk, and the Elasticsearch cat API.
  prefs: []
  type: TYPE_NORMAL
- en: Elasticsearch-head
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 2](ch02.html "Chapter 2. Installation and the Requirements for Elasticsearch"),
    *Installation and the Requirements for Elasticsearch*, we introduced and installed
    Elasticsearch-head, and now we will begin examining its features.
  prefs: []
  type: TYPE_NORMAL
- en: The Overview tab
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The first tab in Elasticsearch-head is the **Overview** tab. This tab answers
    questions such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: How many nodes are in the cluster?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is the cluster in a healthy state?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is all of the cluster's data available?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How many indices are in the cluster, and how big are they?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How much data is in the cluster?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Users can also use this tab to perform some basic administrative actions (creating
    indices, deleting indices, and so on).
  prefs: []
  type: TYPE_NORMAL
- en: 'After loading in sample Twitter data from the previous section, our **Overview**
    tab looks like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Overview tab](img/B03798__03_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We can see that three nodes are up and running:'
  prefs: []
  type: TYPE_NORMAL
- en: '`elasticsearch-node-01`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`elasticsearch-node-02`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`elasticsearch-node-03`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We also have one active index that contains our newly loaded Twitter data.
    From this page, we can tell the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The Twitter index takes up 456 MB
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Twitter index contains 150,765 documents
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cluster states
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'An Elasticsearch cluster can be in any of these three states:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Green**: All data is available and all shard replicas are assigned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: The previous screenshot tells that we are currently in a `green` state.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yellow**: All data is available, but not all replicas are assigned:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This usually happens in a one-node cluster when you have a replica size of *>
    0*, or in a multi node cluster right after a node goes down.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If a node in your cluster goes down, a `yellow` state will resolve itself after
    all replica shards are re-assigned.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Elasticsearch will automatically try to reassign shards after a default 1-minute
    wait time to see if the problematic node reappears.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Red**: Not all data is available, and not all shards are assigned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This state deserves immediate attention. This is usually caused by multiple
    node failures at once due to a simultaneous restart, power failure, or network
    failure in your cluster.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The best way to resolve this state is to bring all of the down nodes in your
    cluster back up.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that even in a `red` state, Elasticsearch will still return query results.
    However, query counts will be inaccurate.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For the purposes of demonstration, we''ll shut down `elasticsearch-node-02`
    and `elasticsearch-node-03` to get a sense of what the cluster looks like in different
    states:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Shut down `elasticsearch-node-02`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Refresh Elasticsearch-head. We should see something like this:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Cluster states](img/B03798__03_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note that `elasticsearch-node-02` is no longer present, and that the cluster
    is in a `yellow` state.
  prefs: []
  type: TYPE_NORMAL
- en: Remember that a `yellow` state means that all data is still available. More
    node failures may result in a `red` state or data being unavailable.
  prefs: []
  type: TYPE_NORMAL
- en: 'After waiting a few minutes, Elasticsearch will start to reassign these shards
    to the remaining hosts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Cluster states](img/B03798__03_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'After reassignment is complete; the cluster will be back in a `green` state:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Cluster states](img/B03798__03_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s experiment and turn the cluster into a `red` state:'
  prefs: []
  type: TYPE_NORMAL
- en: Turn `elasticsearch-node-02` back on and wait until `elasticsearch-node-02`
    has a few shards assigned to it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once this happens, shut down both `elasticsearch-node-02` and `elasticsearch-node-03`
    without giving the cluster time to reassign shards.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can do this on Elasticsearch-head by selecting **Shutdown** from **Actions**
    next to each respective node or on the command line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: After shutting down these nodes and refreshing Elasticsearch-head, we'll see
    something like this:![Cluster states](img/B03798__03_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note that only shards `1` and `2` in the Twitter index are assigned, and shard
    `0` is unassigned. As a result, the index size and document counts have decreased
    from 456 MB to 305 MB and 150,765 to 100,573, respectively.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once we restart `elasticsearch-node-02` and `elasticsearch-node-03`, the cluster
    will recover and return to a `green` state.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Node and index actions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Next to the name of each node and index, you''ll see dropdowns labeled **Info**
    and **Actions**. Each of the links in these dropdowns corresponds to various Elasticsearch
    API calls:'
  prefs: []
  type: TYPE_NORMAL
- en: The **Info** links all return **JSON** documents with details about the status
    of your index or node
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Actions** links provide convenience methods to manipulate your cluster
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following table goes into more detail about each of these links:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Target (Index or Node) | Type (action or info) | Name (for example, "Node
    Stats") | Elasticsearch API methods | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Node | **Info** | **Cluster Node Info** | `GET /_nodes` | This provides the
    node''s Elasticsearch configuration, installed plugins, and the server''s available
    memory, CPU, and disk space. |'
  prefs: []
  type: TYPE_TB
- en: '| Node | **Info** | **Node Stat** **s** | `GET /_nodes/stats?all=true` | This
    provides counts and statistics of the number of Elasticsearch documents stored
    on the node. Also provides JVM, network, and filesystem metrics. |'
  prefs: []
  type: TYPE_TB
- en: '| Node | **Action** | **Shutdown** | `POST /_cluster/nodes/<NODE_ID>/_shutdown`
    | This shuts down the Elasticsearch process on the specified node. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Info** | **Index Status** | `GET /_status` | This provides information
    about the specified index, such as the state, number of documents, size, and various
    other metrics. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Info** | **Index Metadata** | `GET /_cluster/state` | This provides
    the index''s mapping, aliases, and settings. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Actions** | **New Alias...** | `POST /_aliases` | This creates
    a new index alias. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Actions** | **Refresh** | `POST /<INDEX_NAME>/_refresh` | This
    refreshes the index. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Actions** | **Flush** | `POST /<INDEX_NAME>/_flush` | This flushes
    the index. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Actions** | **Optimize...** | `POST /<INDEX_NAME>/_optimize` |
    This optimizes the index. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Actions** | **Gateway Snapshot** | `POST /<INDEX_NAME>/_gateway/snapshot`
    | This takes a snapshot of the index. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Actions** | **Test Analyzer** | `GET /<INDEX_NAME>/_analyze?text=TEXT`
    | This analyzes the passed in text using the index''s default text analyzer. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Actions** | **Close** | `POST /<INDEX_NAME>/_analyze` | This closes
    an open index. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Actions** | **Open** | `POST /<INDEX_NAME>/_open` | This opens
    a closed index. |'
  prefs: []
  type: TYPE_TB
- en: '| Index | **Actions** | **Delete** | `POST /<INDEX_NAME>/_delete` | This deletes
    an index. |'
  prefs: []
  type: TYPE_TB
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **Info** actions just listed (**Cluster Node Info**, **Node Stats**, **Index
    Status**, and **Index Metadata**) provide a plethora of information about the
    state of your cluster and data holdings. However, looking at the JSON responses
    for these items can be a little overwhelming.
  prefs: []
  type: TYPE_NORMAL
- en: Bigdesk is the next tool that we'll look at in this chapter. Both Bigdesk and
    Marvel, a tool that we'll examine in the next chapter, take many of these metrics
    and display them in easy-to-read charts and graphs.
  prefs: []
  type: TYPE_NORMAL
- en: The Indices tab
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Indices** tab provides a list of the indices in your cluster, their disk
    size usage, and the number of documents in each. It is also a way to create a
    new index.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This tab doesn't offer any additional information about an index beyond what
    is provided in the **Overview** tab.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Indices tab](img/B03798__03_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Browser tab
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This tab lets you browse, view, and run basic filter queries against the documents
    in your indices. The following screenshot is an example of what a document view
    will look like in the **Browser** tab:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Browser tab](img/B03798__03_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Structured Query tab
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Structured Query** tab is an advanced query builder to explore the documents
    in your index. This tab is useful when you want to build a complex query without
    writing out the full JSON request body.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows a sample query and results created using this
    interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Structured Query tab](img/B03798__03_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Any Request tab
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **Any Request** tab allows you to run arbitrary **API** calls against your
    cluster and view the results in **JSON**. The following screenshot shows a sample
    aggregation query:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Any Request tab](img/B03798__03_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The official website
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For more information about Elasticsearch-head, visit the plugin's website at
    [https://mobz.github.io/elasticsearch-head/](https://mobz.github.io/elasticsearch-head/).
  prefs: []
  type: TYPE_NORMAL
- en: Bigdesk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bigdesk is a tool to look into various JVM and operating-system level metrics
    about your cluster. If your cluster runs slowly or experiences unusual errors,
    Bigdesk is a good place to check for anything out of the ordinary.
  prefs: []
  type: TYPE_NORMAL
- en: 'After following the installation instructions from the previous chapter, access
    Bigdesk by visiting `http://elasticsearch-node-01:9200/plugin/bigdesk/`. The initial
    landing page looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bigdesk](img/B03798__03_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Like Elasticsearch-head, this page shows the nodes in your cluster and the
    cluster health. Click on any of the nodes listed in the top row to display its
    individual metrics:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bigdesk](img/B03798__03_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In this screenshot, we selected `elasticsearch-node-02` and are looking at **JVM**
    metrics. A notable chart in this section is the **Heap Mem** figure. If you are
    using close to the maximum amount of committed heap memory, you will want to increase
    your heap memory by setting `ES_HEAP_SIZE` to at the most half of your total available
    memory.
  prefs: []
  type: TYPE_NORMAL
- en: 'Further down, we see operating system metrics, namely:'
  prefs: []
  type: TYPE_NORMAL
- en: CPU usage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Memory usage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Swap space usage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Load average
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Bigdesk](img/B03798__03_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Below operating system metrics, we come to process level metrics, including
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Open file descriptors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Process memory usage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CPU usage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Bigdesk](img/B03798__03_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Refer to the operating system and process metrics charts if you are experiencing
    slow queries or slow data index operations to get a sense of the performance bottleneck.
  prefs: []
  type: TYPE_NORMAL
- en: 'Continuing down the page, we''ll see some more notable charts, including:'
  prefs: []
  type: TYPE_NORMAL
- en: Cache size
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filesystem activity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Bigdesk](img/B03798__03_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The **Cache size** chart is an important figure in this screenshot. The **ID**,
    **Filter**, and **Field** caches can fill up based on the type of queries you
    run. If they get too large, look at your queries for possible modifications to
    keep cache sizes down.
  prefs: []
  type: TYPE_NORMAL
- en: The Bigdesk charts are also useful for finding configuration errors. For example,
    if we meant to configure our node to use `32GB` of memory and a maximum of `65535`
    open file descriptors, but the **JVM Heap Mem** chart shows only show `247MB`
    of committed memory and the **Process File Descriptors** chart shows a limit of
    `1024` files, we'll know we didn't configure the node correctly.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For more information about Bigdesk, visit the plugin's website at [http://bigdesk.org/](http://bigdesk.org/).
  prefs: []
  type: TYPE_NORMAL
- en: The Elasticsearch cat API
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Think of the **Elasticsearch cat API** as a simpler version of the **Elasticsearch
    Cluster** and **Indices APIs** mentioned earlier. The cat API returns results
    in an easy-to-read, tab-separated format, unlike the JSON returned by the Cluster
    and Indices APIs.
  prefs: []
  type: TYPE_NORMAL
- en: A complete list of API methods is available at [https://www.elastic.co/blog/introducing-cat-api](https://www.elastic.co/blog/introducing-cat-api),
    but there are some highlights, which we cover in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Background
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Elasticsearch-head and Bigdesk are, for the most part, powered by the Elasticsearch
    APIs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cluster** **API**: [https://www.elastic.co/guide/en/elasticsearch/reference/1.7/cluster.html](https://www.elastic.co/guide/en/elasticsearch/reference/1.7/cluster.html).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Indices** **API**: [https://www.elastic.co/guide/en/elasticsearch/reference/1.7/indices.html](https://www.elastic.co/guide/en/elasticsearch/reference/1.7/indices.html).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These two APIs provide a plethora of information about the inner workings of
    Elasticsearch. However, they also return large *JSON* documents that are complicated
    to interpret quickly. For example, here''s a snippet from calling the Indices
    Stats API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: It's probably not immediately clear that the `size_in_bytes` value of `477638305`
    translates to 455 MB.
  prefs: []
  type: TYPE_NORMAL
- en: Count
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This endpoint provides a document count for the entire cluster:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Passing the `v` option to the cat API shows a header row.
  prefs: []
  type: TYPE_NORMAL
- en: 'The output columns represent the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`epoch`: This represents a Unix timestamp'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestamp`: This represents the time of day'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`count`: This represents the number of documents in the cluster'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Health
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This endpoint shows the health color code for the cluster:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'These columns represent the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`epoch`: This represents a Unix timestamp'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestamp`: This represents the time of day'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cluster`: This represents a cluster name'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`status`: This represents a cluster status (`green`, `yellow`, or `red`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`node.total`: This represents the number of nodes in the cluster'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`node.data`: This represents the number of data nodes in the cluster'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`shards`: This represents the number of total shards in the cluster'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pri`: This represents the number of primary shards (as opposed to replica
    shards)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`relo`: This represents the number of shards currently relocating'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`init`: This represents the number of shards currently initializing'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`unassign`: This represents the number of unassigned shards'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pending_tasks`: This represents the number of cluster tasks in the backlog'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indices
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This endpoint provides a list of all indices, their document count, and size
    in your cluster:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'This output has one line for each index in the cluster. The output columns
    represent the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`health`: This is index health (`green`, `yellow`, or `red`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`status`: This indicates whether the index is open or closed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`index`: This is the index name'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pri`: This is the number of primary shards'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rep`: This is the replication level (`1` means all shards are replicated once)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docs.count`: This is the number of documents in this index'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docs.deleted`: This is the number of deleted documents'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`store.size`: This is the total index size'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pri.store.size`: This is the size of index without replicas'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shards
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This endpoint provides a list of index shards and how they are distributed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Each row in this output is for a single shard in the cluster. The columns represent
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`index`: This is the index name'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`shard`: This is the shard number'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`prirep`: This is `p` if a primary shard, `r` if a replica'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`state`: This is the availability of the shard'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docs`: This is the number of documents in this shard'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`store`: This is the size of the shard on disk'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ip`: This is the IP address where the shard is located'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`node`: This is the node name where the shard is located'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter discussed how to configure and load data into a three-node Elasticsearch
    cluster. Additionally, it covered how to monitor a cluster using Elasticsearch-head,
    Bigdesk, and the cat API.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will discuss Marvel—the official Elasticsearch monitoring tool.
  prefs: []
  type: TYPE_NORMAL
