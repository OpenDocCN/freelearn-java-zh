["```java\npackage com.ensode.jakartaeebook.ptpproducer;\n//imports omitted for brevity\n@JMSDestinationDefinition(\n    name = \"java:global/queue/JakartaEEBookQueue\",\n    interfaceName = \"jakarta.jms.Queue\"\n)\n@Named\n@RequestScoped\npublic class MessageSender {\n  @Resource\n  private ConnectionFactory connectionFactory;\n  @Resource(mappedName = \"java:global/queue/JakartaEEBookQueue\")\n  private Queue queue;\n  public void produceMessages() {\n    JMSContext jmsContext = connectionFactory.createContext();\n    JMSProducer jmsProducer = jmsContext.createProducer();\n    String msg1 = \"Testing, 1, 2, 3\\. Can you hear me?\";\n    String msg2 = \"Do you copy?\";\n    String msg3 = \"Good bye!\";\n    jmsProducer.send(queue, msg1);\n    jmsProducer.send(queue, msg2);\n    jmsProducer.send(queue, msg3);\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.ptpconsumer;\n//imports omitted for brevity\n@JMSDestinationDefinition(\n  name = \"java:global/queue/JakartaEEBookQueue\",\n  interfaceName = \"jakarta.jms.Queue\"\n)\n@Named\n@RequestScoped\npublic class MessageReceiver implements Serializable {\n  @Resource\n  private ConnectionFactory connectionFactory;\n  @Resource(mappedName =\n    \"java:global/queue/JakartaEEBookQueue\")\nprivate Queue queue;\n  private static final Logger LOG =\n    Logger.getLogger(MessageReceiver.class.getName());\n  public void receiveMessages() {\n    String message;\n    boolean goodByeReceived = false;\n    JMSContext jmsContext = connectionFactory.\n      createContext();\n    JMSConsumer jMSConsumer =\n      jmsContext.createConsumer(queue);\n    while (!goodByeReceived) {\n      message = jMSConsumer.receiveBody(String.class);\n      LOG.log(Level.INFO, \"Received message: {0}\", message);\n      if (message.equals(\"Good bye!\")) {\n        goodByeReceived = true;\n      }\n    }\n  }\n}\n```", "```java\nWaiting for messages...\nReceived the following message: Testing, 1, 2, 3\\. Can you hear me?\nReceived the following message: Do you copy?\nReceived the following message: Good bye!\n```", "```java\npackage com.ensode.jakartaeebook.queuebrowser;\n//imports omitted for brevity\n//Messaging destination definition annotation omitted\n@Named\n@RequestScoped\npublic class MessageQueueBrowser {\n  @Resource\n  private ConnectionFactory connectionFactory;\n  @Resource(mappedName =\n    \"java:global/queue/JakartaEEBookQueue\")\n  private Queue queue;\n  private static final Logger LOG =\n    Logger.getLogger(MessageQueueBrowser.class.getName());\n  public void browseMessages() throws JMSException {\n    Enumeration messageEnumeration;\n    TextMessage textMessage;\n    JMSContext jmsContext =\n      connectionFactory.createContext();\n    QueueBrowser browser = jmsContext.createBrowser(queue);\n    messageEnumeration = browser.getEnumeration();\n    LOG.log(Level.INFO, \"messages in the queue:\");\n    while (messageEnumeration.hasMoreElements()) {\n      textMessage = (TextMessage) messageEnumeration.\n        nextElement();\n      LOG.log(Level.INFO, textMessage.getText());\n    }\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.pubsubproducer;\n//imports omitted\n@JMSDestinationDefinition(\n    name = \"java:global/topic/JakartaEEBookTopic\",\n    interfaceName = \"jakarta.jms.Topic\"\n)\n@Named\n@RequestScoped\npublic class MessageSender {\n  @Resource\n  private ConnectionFactory connectionFactory;\n  @Resource(mappedName =\n    \"java:global/topic/JakartaEEBookTopic\")\n  private Topic topic;\n  public void produceMessages() {\n    JMSContext jmsContext =\n      connectionFactory.createContext();\n    JMSProducer jmsProducer = jmsContext.createProducer();\n    String msg1 = \"Testing, 1, 2, 3\\. Can you hear me?\";\n    String msg2 = \"Do you copy?\";\n    String msg3 = \"Good bye!\";\n    jmsProducer.send(topic, msg1);\n    jmsProducer.send(topic, msg2);\n    jmsProducer.send(topic, msg3);\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.pubsubconsumer;\n//imports omitted\n@JMSDestinationDefinition(\n    name = \"java:global/topic/JakartaEEBookTopic\",\n    interfaceName = \"jakarta.jms.Topic\"\n)\n@Named\n@RequestScoped\npublic class MessageReceiver {\n  @Resource\n  private ConnectionFactory connectionFactory;\n  @Resource(mappedName = \"java:global/topic/JakartaEEBookTopic\")\n  private Topic topic;\n  private static final Logger LOG =\n    Logger.getLogger(MessageReceiver.class.getName());\n  public void receiveMessages() {\n    String message;\n    boolean goodByeReceived = false;\n    JMSContext jmsContext = connectionFactory.createContext();\n    JMSConsumer jMSConsumer = jmsContext.createConsumer(topic);\n    while (!goodByeReceived) {\n      message = jMSConsumer.receiveBody(String.class);\n      LOG.log(Level.INFO, \"Received message: {0}\", message);\n      if (message.equals(\"Good bye!\")) {\n        goodByeReceived = true;\n      }\n    }\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.pubsubdurablesubscriber;\n//imports omitted for brevity\n@JMSConnectionFactoryDefinition(\n    name = \"java:global/messaging/DurableConnectionFactory\",\n    clientId = \"DurableConnectionFactoryClientId\"\n)\n//Messaging destination definition annotation omitted\n@Named\n@ApplicationScoped\npublic class MessageReceiver {\n  @Resource(mappedName =\n   \"java:global/messaging/DurableConnectionFactory\")\n  private ConnectionFactory connectionFactory;\n  @Resource(mappedName =\n    \"java:global/topic/JakartaEEBookTopic\")\n  private Topic topic;\n  private static final Logger LOG =\n   Logger.getLogger(MessageReceiver.class.getName());\n  public void receiveMessages() {\n    String message;\n    boolean goodByeReceived = false;\n    JMSContext jmsContext =\n      connectionFactory.createContext();\n    JMSConsumer jMSConsumer =\n      jmsContext.createDurableConsumer(topic,\"Subscriber1\");\n    while (!goodByeReceived) {\n      message = jMSConsumer.receiveBody(String.class);\n      LOG.log(Level.INFO, \"Received message: {0}\", message);\n      if (message.equals(\"Good bye!\")) {\n        goodByeReceived = true;\n      }\n    }\n  }\n}\n```"]