["```java\n<subsystem >\n    <buffer-cache name=\"default\"/>\n    <server name=\"default-server\">\n        <http-listener name=\"default\" socket-binding=\"http\"/>\n        <host name=\"default-host\" alias=\"localhost\">\n            <location name=\"/\" handler=\"welcome-content\"/>\n            <filter-ref name=\"server-header\"/>\n            <filter-ref name=\"x-powered-by-header\"/>\n        </host>\n    </server>\n    <servlet-container name=\"default\">\n        <jsp-config/>\n    </servlet-container>\n    <handlers>\n        <file name=\"welcome-content\" path=\"${jboss.home.dir}/welcome-content\"/>\n    </handlers>\n    ...\n</subsystem>\n```", "```java\n<server name=\"default-server\">\n    <http-listener name=\"default\" socket-binding=\"http\"/>\n    <host name=\"default-host\" alias=\"localhost\">\n        <location name=\"/\" handler=\"welcome-content\"/>\n        <filter-ref name=\"server-header\"/>\n        <filter-ref name=\"x-powered-by-header\"/>\n    </host>\n</server>\n```", "```java\n<socket-binding-group name=\"standard-sockets\" default-interface=\"public\">\n    <socket-binding name=\"http\" port=\"8080\"/>\n</socket-binding-group>\n```", "```java\n<server name=\"default-server\">\n    ...\n    <host name=\"default-host\" alias=\"localhost\">\n        <location name=\"/\" handler=\"welcome-content\"/>\n        <filter-ref name=\"server-header\"/>\n        <filter-ref name=\"x-powered-by-header\"/>\n    </host>\n</server>\n```", "```java\n<access-log directory=\"${jboss.server.log.dir}\" pattern=\"common\" prefix=\"access_log\" rotate=\"true\" suffix=\".log\" worker=\"default\"/>\n```", "```java\n<server name=\"default-server\">\n    <host name=\"default-host\" alias=\"localhost\">\n        <location name=\"/\" handler=\"welcome-content\"/>\n        <filter-ref name=\"server-header\"/>\n        <filter-ref name=\"x-powered-by-header\"/>\n    </host>\n</server>\n<filters>\n    <response-header name=\"server-header\" header-name=\"Server\" header-value=\"Wildfly 8\"/>\n    <response-header name=\"x-powered-by-header\" header-name=\"X-Powered-By\" header-value=\"Undertow 1\"/>\n</filters>\n```", "```java\n<server name=\"default-server\">\n    <http-listener name=\"default\" socket-binding=\"http\"/>\n    <host name=\"default-host\" alias=\"localhost\">\n        <location name=\"/\" handler=\"welcome-content\"/>\n        <location name=\"/img\" handler=\"images\"/>\n    </host>\n</server>\n<handlers>\n    <file name=\"welcome-content\" path=\"${jboss.home.dir}/welcome-content\" directory-listing=\"true\"/>\n    <file name=\"images\" path=\"/var/images\" directory-listing=\"true\"/>\n</handlers>\n```", "```java\n<servlet-container name=\"default\">\n    <jsp-config/>\n</servlet-container>\n```", "```java\n<jsp-config \ncheck-interval=\"0\" \ndevelopment=\"false\" \ndisabled=\"false\" \ndisplay-source-fragment=\"true\" \ndump-smap=\"false\" \nerror-on-use-bean-invalid-class-attribute=\"false\" \ngenerate-strings-as-char-arrays=\"false\" \njava-encoding=\"UTF8\" \nkeep-generated=\"true\" \nmapped-file=\"true\" \nmodification-test-interval=\"4\" \nrecompile-on-fail=\"false\" \nsmap=\"true\" \nsource-vm=\"1.6\" \ntag-pooling=\"true\" \ntarget-vm=\"1.6\" \ntrim-spaces=\"false\" \nx-powered-by=\"true\"/>\n```", "```java\n<servlet-container name=\"default\">\n    <jsp-config/>\n    <session-cookie name=\"default\" domain=\"yourdomain.com\" http-only=\"true\" max-age=\"60\" secure=\"true\"/>\n</servlet-container>\n```", "```java\n<servlet-container name=\"default\">\n    <jsp-config/>\n    <persistent-sessions path=\"/session\" relative-to=\"${jboss.server.tmp.dir}\"/>\n</servlet-container>\n```", "```java\n<subsystem >\n    <buffer-cache name=\"default\" buffer-size=\"1024\" buffers-per-region=\"2048\" max-regions=\"10\" />\n    ...\n</subsystem>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app    xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\" id=\"WebApp_ID\" version=\"3.1\">\n  <display-name>Java EE 7 - WildFly 8</display-name>\n  <welcome-file-list>\n    <welcome-file>index.xhtml</welcome-file>\n  </welcome-file-list>\n  <context-param>\n    <param-name>\n      com.sun.faces.enableRestoreView11Compatibility\n    </param-name>\n    <param-value>true</param-value>\n  </context-param>\n  <servlet>\n    <servlet-name>Faces Servlet</servlet-name>\n    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n    <load-on-startup>1</load-on-startup>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>Faces Servlet</servlet-name>\n    <url-pattern>*.xhtml</url-pattern>\n  </servlet-mapping>\n  <context-param>\n    <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>\n    <param-value>resources.application</param-value>\n  </context-param>\n  <listener>\n    <listener-class>com.sun.faces.config.ConfigureListener</listener-class>\n  </listener>\n</web-app>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<faces-config   xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-facesconfig_2_2.xsd\" version=\"2.2\">\n</faces-config>\n```", "```java\n<project  \n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.packtpub</groupId>\n    <artifactId>chapter4</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <packaging>war</packaging>\n    <description>Simple Java EE 7 example using WildFly</description>\n\n    <repositories>\n        <repository>\n            <id>JBoss Repository</id>\n            <url>https://repository.jboss.org/nexus/content/groups/public/</url>\n        </repository>\n    </repositories>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.jboss.spec</groupId>\n            <artifactId>jboss-javaee-7.0</artifactId>\n            <version>1.0.1.Final</version>\n            <type>pom</type>\n            <scope>provided</scope>\n        </dependency>\n    </dependencies>\n    <!-- build plugins removed for brevity -->\n</project>\n```", "```java\n<!DOCTYPE html>\n<html \n\n    >\n\n<h:head>\n    <link href=\"main.css\" rel=\"stylesheet\" type=\"text/css\" />\n</h:head>\n<h:body>\n    <h2>JSF 2 example on WildFly 8</h2>\n    <h:form id=\"jsfexample\">\n        <h:messages />\n        <h:panelGrid columns=\"2\" styleClass=\"default\">\n            <h:outputText value=\"Enter key:\" />\n            <h:inputText value=\"#{manager.key}\" />\n\n            <h:outputText value=\"Enter value:\" />\n            <h:inputText value=\"#{manager.value}\" />\n\n            <h:commandButton actionListener=\"#{manager.save}\"\n                styleClass=\"buttons\" value=\"Save key/value\" />\n            <h:commandButton actionListener=\"#{manager.clear}\"\n                styleClass=\"buttons\" value=\"Clear cache\" />\n        </h:panelGrid>\n\n        <h:dataTable value=\"#{manager.cacheList}\" var=\"item\"\n            styleClass=\"table\" headerClass=\"table-header\"\n            rowClasses=\"table-odd-row,table-even-row\">\n            <h:column>\n                <f:facet name=\"header\">Key</f:facet>\n                <h:outputText value=\"#{item.key}\" />\n            </h:column>\n            <h:column>\n                <f:facet name=\"header\">Value</f:facet>\n                <h:outputText value=\"#{item.value}\" />\n            </h:column>\n        </h:dataTable>\n    </h:form>\n</h:body>\n</html>\n```", "```java\npackage com.packtpub.chapter4.bean;\nimport java.util.List;\nimport javax.ejb.EJB;\nimport javax.enterprise.context.RequestScoped;\nimport javax.faces.application.FacesMessage;\nimport javax.faces.context.FacesContext;\nimport javax.faces.event.ActionEvent;\nimport javax.inject.Named;\nimport org.jboss.logging.Logger;\nimport com.packtpub.chapter4.ejb.SingletonBean;\nimport com.packtpub.chapter4.entity.Property;\n\n@Named(\"manager\") \n@RequestScoped \npublic class PropertyManager { \n\n    private Logger logger = Logger.getLogger(getClass());\n\n    @EJB \n    private SingletonBean ejb;\n    private String key;\n    private String value;\n\n    public void save(ActionEvent e) { \n        try { \n            ejb.save(key, value);\n            FacesContext.getCurrentInstance().addMessage( \n                    null, \n                    new FacesMessage(FacesMessage.SEVERITY_INFO, \n                            \"Property Saved!\", null));\n        } catch (Exception ex) { \n            logger.error(\"Error saving property\", ex);\n            FacesContext.getCurrentInstance().addMessage( \n                    null, \n                    new FacesMessage(FacesMessage.SEVERITY_ERROR, \n                            \"Error Saving!\", ex.getMessage()));\n        }\n    }\n    public void clear(ActionEvent e) { \n        logger.info(\"Called clear\");\n        ejb.deleteAll();\n    }\n    public List<Property> getCacheList() { \n        return ejb.getProperties();\n    }\n// getters and setters removed for brevity\n}\n```", "```java\npackage com.packtpub.chapter4.ejb;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.annotation.PostConstruct;\nimport javax.ejb.LocalBean;\nimport javax.ejb.Remote;\nimport javax.ejb.Singleton;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport javax.persistence.Query;\nimport javax.persistence.TypedQuery;\n\nimport com.packtpub.chapter4.entity.Property;\n\n@Singleton\n@LocalBean\npublic class SingletonBean {\n\n    private List<Property> cache = new ArrayList<>();\n\n    @PostConstruct\n    public void initCache() {\n        this.cache = queryCache();\n        if (cache == null) {\n            cache = new ArrayList<Property>();\n        }\n    }\n\n    public void deleteAll() {\n        this.cache.clear();\n    }\n\n    public void save(String key, String value) {\n        Property property = new Property(key, value);\n        this.cache.add(property);\n    }\n\n    public List<Property> getProperties() {\n        return cache;\n    }\n}\n```", "```java\npackage com.packtpub.chapter4.entity;\n\npublic class Property {\n    private String key;\n    private String value;\n    // GETTERS & SETTERS omitted for brevity \n}\n```", "```java\n<jboss-web>\n  <context-root>chapter4</context-root>\n</jboss-web>\n```", "```java\n    <location name=\"/\" handler=\"welcome-content\"/>\n    ```", "```java\n    <jboss-web>\n        <context-root>/</context-root>\n    </jboss-web>\n    ```", "```java\n<!-- this is required for a security -->\n<dependency>\n    <groupId>org.jboss.sasl</groupId>\n    <artifactId>jboss-sasl</artifactId>\n    <version>1.0.4.Final</version>\n    <scope>provided</scope>\n</dependency>\n<!-- this is required for the RemoteEJBClient.java to compile -->\n<dependency>\n    <groupId>org.jboss</groupId>\n    <artifactId>jboss-ejb-client</artifactId>\n    <version>2.0.2.Final</version>\n    <scope>provided</scope>\n</dependency>\n```", "```java\npackage com.packtpub.chapter4.ejb;\n\nimport java.util.List;\nimport com.packtpub.chapter4.entity.Property;\n\npublic interface SingletonBeanRemote {\n    public void deleteAll();\n    public void save(String key, String value);\n    public List<Property> getProperties();\n}\n```", "```java\n@Singleton\n@LocalBean\n@Remote(SingletonBeanRemote.class)\npublic class  SingletonBean implements SingletonBeanRemote  {\n// Bean class unchanged\n}\n```", "```java\nstatic {\n  Security.addProvider(new JBossSaslProvider());\n}\n```", "```java\npackage com.packtpub.chapter4.client;\n\nimport java.security.Security;\nimport java.util.*;\nimport javax.naming.*;\nimport org.jboss.ejb.client.*;\nimport org.jboss.sasl.JBossSaslProvider;\nimport com.packtpub.chapter4.ejb.SingletonBean;\nimport com.packtpub.chapter4.ejb.SingletonBeanRemote;\nimport com.packtpub.chapter4.entity.Property;\n\npublic class RemoteEJBClient { \n    static { \n        Security.addProvider(new JBossSaslProvider());\n    }\n    public static void main(String[] args) throws Exception { \n        testRemoteEJB();\n    }\n    private static void testRemoteEJB() throws NamingException { \n        final SingletonBeanRemote ejb = lookupEJB();\n        ejb.save(\"entry\", \"value\");\n        List<Property> list = ejb.getProperties();\n        System.out.println(list);\n    }\n    private static SingletonBeanRemote lookupEJB() throws NamingException { \n\n        Properties clientProperties = new Properties();\n        clientProperties.put(\"endpoint.name\", \"client-endpoint\");\n        clientProperties.put(\"remote.connections\", \"default\");\n        clientProperties.put(\"remote.connection.default.port\", \"8080\");\n        clientProperties.put(\"remote.connection.default.host\", \"localhost\");\n        clientProperties.put(\"remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED\", \"false\");\n        clientProperties.put(\"remote.connection.default.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS\", \"false\");\n\n        EJBClientConfiguration ejbClientConfiguration = new PropertiesBasedEJBClientConfiguration(clientProperties);\n        ContextSelector<EJBClientContext> ejbContextSelector = new ConfigBasedEJBClientContextSelector(ejbClientConfiguration);\n\n        EJBClientContext.setSelector(ejbContextSelector);\n\n        final Hashtable<String, String> jndiProperties =           new Hashtable<>();\n        jndiProperties.put(Context.URL_PKG_PREFIXES, \"org.jboss.ejb.client.naming\");\n        final Context context = new InitialContext(jndiProperties);\n        final String appName = \"\";\n        final String moduleName = \"chapter4-webapp-example-0.0.1-SNAPSHOT\";\n        final String distinctName = \"\";\n\n        final String beanName = SingletonBean.class.getSimpleName();\n        final String viewClassName = SingletonBeanRemote.class.getName();\n        return (SingletonBeanRemote) context.lookup(\"ejb:\" + appName + \"/\" + moduleName + \"/\" + distinctName + \"/\" + beanName + \"!\" + viewClassName);\n    }\n}\n```", "```java\nremote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED=false\nremote.connections=default\nremote.connection.default.host=localhost\nremote.connection.default.port = 8080\nremote.connection.default.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false\n```", "```java\nprivate static SingletonBeanRemote lookupEJB() throws NamingException {\n    Properties clientProperties = new Properties();\n    clientProperties.put(\"endpoint.name\", \"client-endpoint\");\n    clientProperties.put(\"remote.connections\", \"default\");\n    clientProperties.put(\"remote.connection.default.port\", \"8080\");\n    clientProperties.put(\"remote.connection.default.host\", \"localhost\");\n    clientProperties.put(\"remote.connectionprovider.\ncreate.options.org.xnio.Options.SSL_ENABLED\", \"false\");\n    clientProperties.put(\"remote.connection.default.\nconnect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS\", \"false\");\n\n    EJBClientConfiguration ejbClientConfiguration = new PropertiesBasedEJBClientConfiguration(clientProperties);\n        ContextSelector<EJBClientContext> ejbContextSelector = new ConfigBasedEJBClientContextSelector(ejbClientConfiguration);\n\n    EJBClientContext.setSelector(ejbContextSelector);\n\n    final Hashtable<String, String> jndiProperties = new Hashtable<>();\n    jndiProperties.put(Context.URL_PKG_PREFIXES, \"org.jboss.ejb.client.naming\");\n    final Context context = new InitialContext(jndiProperties);\n    final String appName = \"\";\n    final String moduleName = \"chapter4-webapp-example-0.0.1-SNAPSHOT\";\n    final String distinctName = \"\";\n\n    final String beanName = SingletonBean.class.getSimpleName();\n    final String viewClassName = SingletonBeanRemote.class.getName();\n    return (SingletonBeanRemote) context.lookup(\"ejb:\" + appName + \"/\" + moduleName + \"/\" + distinctName + \"/\" + beanName + \"!\" + viewClassName);\n    }\n```", "```java\n<extension module=\"org.jboss.as.jpa\"/>\n<subsystem ></subsystem>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence \n\n    xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/persistence/persistence_2_1.xsd\"\n    version=\"2.1\">\n    <persistence-unit name=\"persistenceUnit\" transaction-type=\"JTA\">\n        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>\n        <jta-data-source>java:jboss/datasources/MySqlDS</jta-data-source>  \n        <properties>\n            <property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.MySQLDialect\" />\n        </properties>\n    </persistence-unit>\n</persistence>\n```", "```java\n<subsystem >\n  <jpa default-datasource=\"java:jboss/datasources/MySqlDS\"/>\n</subsystem>\n```", "```java\npackage com.packtpub.chapter4.entity;\nimport java.io.Serializable;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\n\n@Entity\npublic class Property implements Serializable {\n    @Id\n    @Column(name = \"id\")\n    private String key;\n    @Column(name = \"value\")\n    private String value;\n    //getters and setters omitted for brevity\n}\n```", "```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.annotation.PostConstruct;\nimport javax.ejb.Singleton;\nimport javax.persistence.*;\nimport com.packtpub.chapter4.entity.Property;\n\n@Singleton\npublic class  SingletonBean   {\n  private  List<Property> cache;\n  @PersistenceContext(unitName = \"persistenceUnit\")\n  private EntityManager em;\n\n  @PostConstruct\n  public void initCache(){\n    this.cache = queryCache();\n    if (cache == null) cache = new ArrayList<Property>();\n  }\n\n  public void delete(){\n    Query query = em.createQuery(\"delete FROM \ncom.packtpub.chapter4.entity.Property\");\n    query.executeUpdate();\n    this.cache.clear();\n  }\n\n  public void put(String key,String value){\n    Property p = new Property();\n    p.setKey(key);\n    p.setValue(value);\n    em.persist(p);\n    this.cache.add(p);\n  }\n\npackage com.packtpub.chapter4.ejb;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.annotation.PostConstruct;\nimport javax.ejb.LocalBean;\nimport javax.ejb.Remote;\nimport javax.ejb.Singleton;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport javax.persistence.Query;\nimport javax.persistence.TypedQuery;\n\nimport com.packtpub.chapter4.entity.Property;\n\n@Singleton \n@LocalBean \npublic class SingletonBean { \n\n    private List<Property> cache = new ArrayList<>();\n\n    @PersistenceContext(unitName = \"persistenceUnit\")\n    private EntityManager em;\n\n    @PostConstruct \n    public void initCache() { \n        this.cache = queryCache();\n        if (cache == null) { \n            cache = new ArrayList<Property>();\n        }\n    }\n\n    public void deleteAll() { \n        Query query = em.createQuery(\"DELETE FROM Property\");\n        query.executeUpdate();\n    }\n\n    public void save(String key, String value) { \n        Property property = new Property(key, value);\n        em.persist(property);\n        this.cache.add(property);\n    }\n\n    private List<Property> queryCache() { \n        TypedQuery<Property> query = em.createQuery(\"FROM Property\", Property.class);\n        List<Property> list = query.getResultList();\n        return list;\n    }\n\n    public List<Property> getProperties() { \n        return cache;\n    }\n}\n```", "```java\n@PersistenceContext(unitName=\"wildflyapp.jar#unitName\")\n```", "```java\n<dependency>\n    <groupId>org.hibernate</groupId>\n    <artifactId>hibernate-core</artifactId>\n    <version>3.5.0-Final</version>\n    <scope>runtime</scope>\n</dependency>\n```", "```java\n<persistence-unit>\n    <properties>\n        <property name=\"jboss.as.jpa.providerModule\" value=\"hibernate3-bundled\" />\n    </properties>\n</persistence-unit>\n```", "```java\n<dependency>\n  <groupId>org.jipijapa</groupId>\n  <artifactId>jipijapa-hibernate3</artifactId>\n  <version>1.0.1.Final</version>\n</dependency>\n```"]