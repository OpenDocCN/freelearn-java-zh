["```java\n<plugin>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-maven-plugin</artifactId>\n    <version>${spring-boot-maven-plugin.version}</version>\n    <configuration>\n       <jvmArguments>\n         -Dspring.application.admin.enabled=true\n\n       </jvmArguments>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>start</goal>\n                <goal>stop</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n```", "```java\n<plugin>\n    <groupId>org.springdoc</groupId>\n    <artifactId>springdoc-openapi-maven-plugin</artifactId>\n    <version>1.4</version>\n    <executions>\n        <execution>\n            <id>integration-test</id>\n            <goals>\n                <goal>generate</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n```", "```java\n<plugin>\n <groupId>org.springdoc</groupId>\n <artifactId>springdoc-openapi-maven-plugin</artifactId>\n <version>${version}</version>\n <executions>\n  <execution>\n   <id>integration-test</id>\n   <goals>\n    <goal>generate</goal>\n   </goals>\n  </execution>\n </executions>\n <configuration>\n  <apiDocsUrl>\n    http://localhost:8080/v3/api-docs</apiDocsUrl>\n  <outputFileName>openapi.json</outputFileName>\n  <outputDir>/home/springdoc/output-folder</outputDir>\n  <skip>false</skip>\n  <headers>\n    <header1-key>header1-value</header1-key>\n  </headers>\n </configuration>\n</plugin>\n```", "```java\nplugins {\n      id \"org.springframework.boot\" version \"${version}\"\n      id \"org.springdoc.openapi-gradle-plugin\"\n          version \"${version}\"\n}\n```", "```java\nopenApi {\n    apiDocsUrl.set(\"https://localhost:4000/api/docs\")\n    outputDir.set(file(\"$buildDir/docs\"))\n    outputFileName.set(\"swagger-test.json\")\n    waitTimeInSeconds.set310)\n    forkProperties.set(\"-Dspring.profiles.active=special\")\n    groupedApiMappings.set(\n      [\"https://localhost:8000/v3/api-docs/group-1\" to\n       \"swagger-group-1.json\",\n       \"https://localhost:8000/v3/api-docs/group-2\" to\n       \"swagger-group-2.json\"])\n}\n```", "```java\n <dependency>\n      <groupId>org.springdoc</groupId>\n <artifactId>springdoc-openapi-ui</artifactId>         <version>1.6.4</version>\n</dependency>\n```", "```java\n{\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:8080/\",\n      \"description\": \"Generated server url\"\n    }\n  ],\n  \"paths\": {\n    \"/api/v1/anti-heroes/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"anti-hero-controller\"\n        ],\n        \"operationId\": \"getAntiHeroById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AntiHeroDto\" …… // other created paths UPDATE DELETE and CREATE Inputs\n```", "```java\n<dependency>\n      <groupId>org.springdoc</groupId>\n      <artifactId>springdoc-openapi-ui</artifactId>\n      <version>1.6.4</version>\n</dependency>\n```", "```java\n{\n  \"id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"house\": \"string\",\n  \"knownAs\": \"string\"\n}\n```", "```java\n<dependency>\n   <groupId>org.springdoc</groupId>\n   <artifactId>springdoc-openapi-data-rest</artifactId>\n     <version>1.6.4</version>\n</dependency>\t\n```", "```java\n…. import org.springframework.data.domain.Pageable;\n@GetMapping\npublic List<AntiHeroDto> getAntiHeroes(Pageable pageable) {\n    int toSkip = pageable.getPageSize() *\n                 pageable.getPageNumber();\n    var antiHeroList = StreamSupport\n            .stream(service.findAllAntiHeroes().spliterator(), false)\n            .skip(toSkip).limit(pageable.getPageSize())\n            .collect(Collectors.toList());\n    return antiHeroList\n            .stream()\n            .map(this::convertToDto)\n            .collect(Collectors.toList());\n}\n```"]