["```java\nString s7 = \"42\";\n```", "```java\nSystem.out.println(s7.length());    //prints: 2\n```", "```java\nSystem.out.println(\"0 0\".length()); //prints: 3\n```", "```java\nSystem.out.println(\"\".isEmpty());   //prints: true\n```", "```java\nSystem.out.println(\" \".isEmpty());  //prints: false\n```", "```java\nString s6 = \"abc42t%\";\n```", "```java\nSystem.out.println(s6.indexOf(s7));            //prints: 3\n```", "```java\nSystem.out.println(s6.indexOf(\"a\"));           //prints: 0\n```", "```java\nSystem.out.println(s6.indexOf(\"xyz\"));         //prints: -1\n```", "```java\nSystem.out.println(\"ababa\".lastIndexOf(\"ba\")); //prints: 3\n```", "```java\nSystem.out.println(\"abc\".matches(\"[a-z]+\"));   //prints: true\n```", "```java\nSystem.out.println(\"ab1\".matches(\"[a-z]+\"));   //prints: false\n```", "```java\nString s1 = \"abc\";\n```", "```java\nString s2 = \"abc\";\n```", "```java\nString s3 = \"acb\";\n```", "```java\nSystem.out.println(s1.equals(s2));     //prints: true\n```", "```java\nSystem.out.println(s1.equals(s3));     //prints: false\n```", "```java\nSystem.out.println(\"abc\".equals(s2));  //prints: true\n```", "```java\nSystem.out.println(\"abc\".equals(s3));  //prints: false\n```", "```java\nString s4 = \"aBc\";\n```", "```java\nString s5 = \"Abc\";\n```", "```java\nSystem.out.println(s4.equals(s5));           //prints: false\n```", "```java\nSystem.out.println(s4.equalsIgnoreCase(s5)); //prints: true\n```", "```java\nString s1 = \"abc\";\n```", "```java\nString s2 = \"abc\";\n```", "```java\nSystem.out.println(s1.contentEquals(s2));    //prints: true\n```", "```java\nSystem.out.println(\"abc\".contentEquals(s2)); //prints: true \n```", "```java\nString s6 = \"abc42t%\";\n```", "```java\nString s7 = \"42\";\n```", "```java\nString s8 = \"xyz\";\n```", "```java\nSystem.out.println(s6.contains(s7));    //prints: true\n```", "```java\nSystem.out.println(s6.contains(s8));    //prints: false\n```", "```java\nString s6 = \"abc42t%\";\n```", "```java\nString s7 = \"42\";\n```", "```java\nSystem.out.println(s6.startsWith(s7));      //prints: false\n```", "```java\nSystem.out.println(s6.startsWith(\"ab\"));    //prints: true\n```", "```java\nSystem.out.println(s6.startsWith(\"42\", 3)); //prints: true\n```", "```java\nSystem.out.println(s6.endsWith(s7));        //prints: false\n```", "```java\nSystem.out.println(s6.endsWith(\"t%\"));      //prints: true\n```", "```java\nString s4 = \"aBc\";\n```", "```java\nString s5 = \"Abc\";\n```", "```java\nSystem.out.println(s4.compareTo(s5));             //prints: 32\n```", "```java\nSystem.out.println(s4.compareToIgnoreCase(s5));   //prints: 0\n```", "```java\nSystem.out.println(s4.codePointAt(0));            //prints: 97\n```", "```java\nSystem.out.println(s5.codePointAt(0));            //prints: 65\n```", "```java\nSystem.out.println(\"42\".substring(0));   //prints: 42\n```", "```java\nSystem.out.println(\"42\".substring(1));   //prints: 2\n```", "```java\nSystem.out.println(\"42\".substring(2));   //prints:\n```", "```java\nSystem.out.println(\"42\".substring(3)); \n```", "```java\n                                //error: index out of range: -1\n```", "```java\nString s6 = \"abc42t%\";\n```", "```java\nSystem.out.println(s6.substring(3));     //prints: 42t%\n```", "```java\nSystem.out.println(s6.substring(3, 5));  //prints: 42\n```", "```java\nString t = \"Hey, %s! Give me %d apples, please!\";\n```", "```java\nSystem.out.println(String.format(t, \"Nick\", 2));\n```", "```java\nString t1 = String.format(t, \"Nick\", 2);\n```", "```java\nSystem.out.println(t1);\n```", "```java\nSystem.out.println(String.format(\"Hey, \n```", "```java\n                  %s! Give me %d apples, please!\", \"Nick\", 2));\n```", "```java\nString s7 = \"42\";\n```", "```java\nString s8 = \"xyz\";\n```", "```java\nString newStr1 = s7.concat(s8);\n```", "```java\nSystem.out.println(newStr1);    //prints: 42xyz\n```", "```java\nString newStr2 = s7 + s8;\n```", "```java\nSystem.out.println(newStr2);    //prints: 42xyz\n```", "```java\nString newStr1 = String.join(\",\", \"abc\", \"xyz\");\n```", "```java\nSystem.out.println(newStr1);        //prints: abc,xyz\n```", "```java\nList<String> list = List.of(\"abc\",\"xyz\");\n```", "```java\nString newStr2 = String.join(\",\", list);\n```", "```java\nSystem.out.println(newStr2);        //prints: abc,xyz\n```", "```java\nSystem.out.println(\"abcbc\".replace(\"bc\",\"42\"));\n```", "```java\n                                                //prints: a4242\n```", "```java\nSystem.out.println(\"abcbc\".replaceFirst(\"bc\", \"42\"));\n```", "```java\n                                                //prints: a42bc\n```", "```java\nSystem.out.println(\"ab11bcd\".replaceAll(\"[a-z]+\", \"42\"));\n```", "```java\n                                               //prints: 421142\n```", "```java\nSystem.out.println(\"aBc\".toLowerCase());   //prints: abc\n```", "```java\nSystem.out.println(\"aBc\".toUpperCase());   //prints: ABC\n```", "```java\nString[] arr = \"abcbc\".split(\"b\");\n```", "```java\nSystem.out.println(arr[0]);   //prints: a\n```", "```java\nSystem.out.println(arr[1]);   //prints: c\n```", "```java\nSystem.out.println(arr[2]);   //prints: c\n```", "```java\nfloat f = 23.42f;\n```", "```java\nString sf = String.valueOf(f);\n```", "```java\nSystem.out.println(sf);         //prints: 23.42\n```", "```java\nSystem.out.println(\"ab\".repeat(3)); //prints: ababab\n```", "```java\nSystem.out.println(\"ab\".repeat(1)); //prints: ab\n```", "```java\nSystem.out.println(\"ab\".repeat(0)); //prints:\n```", "```java\nSystem.out.println(\"\".isBlank());     //prints: true\n```", "```java\nSystem.out.println(\"   \".isBlank());  //prints: true\n```", "```java\nSystem.out.println(\" a \".isBlank());  //prints: false\n```", "```java\nString sp = \"   abc   \";\n```", "```java\nSystem.out.println(\"'\" + sp + \"'\");                 \n```", "```java\n                                          //prints: '   abc   '\n```", "```java\nSystem.out.println(\"'\" + sp.stripLeading() + \"'\");  \n```", "```java\n                                             //prints: 'abc   '\n```", "```java\nSystem.out.println(\"'\" + sp.stripTrailing() + \"'\"); \n```", "```java\n                                              //prints: '  abc'\n```", "```java\nSystem.out.println(\"'\" + sp.strip() + \"'\");\n```", "```java\n                                                //prints: 'abc'\n```", "```java\nString line = \"Line 1\\nLine 2\\rLine 3\\r\\nLine 4\";\n```", "```java\nline.lines().forEach(System.out::println); \n```", "```java\n<dependency>\n```", "```java\n    <groupId>org.apache.commons</groupId>\n```", "```java\n    <artifactId>commons-lang3</artifactId>\n```", "```java\n    <version>3.8.1</version>\n```", "```java\n</dependency>\n```", "```java\n    System.out.println(\"'\" + StringUtils.trim(\" x \")+\"'\");\n                                                //prints: 'x'\n    System.out.println(StringUtils.trim(null));\n                                               //prints: null\n    System.out.println(\"'\" + StringUtils.trim(\"\") + \"'\");\n                                                 //prints: ''\n    System.out.println(\"'\" + StringUtils.trim(\"   \")+\"'\"); \n                                                 //prints: ''\n    ```", "```java\n    System.out.println(\"'\"+StringUtils.trimToNull(\" x \")+\"'\");  \n                                               // prints: 'x'\n    System.out.println(StringUtils.trimToNull(null));\n                                               //prints: null\n    System.out.println(StringUtils.trimToNull(\"\"));\n                                               //prints: null\n    System.out.println(StringUtils.trimToNull(\"   \"));\n                                               //prints: null\n    ```", "```java\n    System.out.println(\"'\" + \n              StringUtils.trimToEmpty(\" x \") + \"'\");   // 'x'\n    System.out.println(\"'\" + \n              StringUtils.trimToEmpty(null) + \"'\");    // ''\n    System.out.println(\"'\" + \n              StringUtils.trimToEmpty(\"\") + \"'\");      // ''\n    System.out.println(\"'\" + \n              StringUtils.trimToEmpty(\"   \") + \"'\");   // ''\n    ```", "```java\nbyte[] bytesSource(){\n```", "```java\n    return new byte[]{42, 43, 44};\n```", "```java\n}\n```", "```java\nbyte[] buffer = bytesSource();\n```", "```java\ntry(ByteArrayInputStream bais = new ByteArrayInputStream(buffer)){\n```", "```java\n    int data = bais.read();\n```", "```java\n    while(data != -1) {\n```", "```java\n        System.out.print(data + \" \");   //prints: 42 43 44\n```", "```java\n        data = bais.read();\n```", "```java\n    }\n```", "```java\n} catch (Exception ex){\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nbyte[] buffer = bytesSource();\n```", "```java\ntry(ByteArrayInputStream bais = new ByteArrayInputStream(buffer)){\n```", "```java\n    int data;\n```", "```java\n    while ((data = bais.read()) != -1) {\n```", "```java\n        System.out.print(data + \" \");   //prints: 42 43 44\n```", "```java\n    }\n```", "```java\n} catch (Exception ex){\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nbyte[] buffer = bytesSource();\n```", "```java\ntry(ByteArrayInputStream bais = \n```", "```java\n                             new ByteArrayInputStream(buffer)){\n```", "```java\n  int data;\n```", "```java\n  while ((data = bais.read()) != -1) {\n```", "```java\n      System.out.print(((char)data) + \" \");   //prints: * + ,\n```", "```java\n  }\n```", "```java\n} catch (Exception ex){\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nString file =  classLoader.getResource(\"hello.txt\").getFile();\n```", "```java\ntry(FileInputStream fis = new FileInputStream(file)){\n```", "```java\n    int data;\n```", "```java\n    while ((data = fis.read()) != -1) {\n```", "```java\n        System.out.print(((char)data) + \" \");   \n```", "```java\n                                          //prints: H e l l o !\n```", "```java\n    }\n```", "```java\n} catch (Exception ex){\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nSystem.out.print((data) + \" \");   \n```", "```java\n                                //prints: 72 101 108 108 111 33\n```", "```java\ntry(InputStream is = InputOutputStream.class.getResourceAsStream(\"/hello.txt\")){\n```", "```java\n    int data;\n```", "```java\n    while ((data = is.read()) != -1) {\n```", "```java\n        System.out.print((data) + \" \");   \n```", "```java\n             //prints: 72 101 108 108 111 33\n```", "```java\n    }\n```", "```java\n} catch (Exception ex){\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nclass SomeClass implements Serializable {\n```", "```java\n    private int field1 = 42;\n```", "```java\n    private String field2 = \"abc\";\n```", "```java\n}\n```", "```java\nString fileName = \"someClass.bin\";\n```", "```java\ntry (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fileName));\n```", "```java\n     ObjectInputStream ois = new ObjectInputStream(new \n```", "```java\n                             FileInputStream(fileName))){\n```", "```java\n    SomeClass obj = new SomeClass();\n```", "```java\n    oos.writeObject(obj);\n```", "```java\n    SomeClass objRead = (SomeClass) ois.readObject();\n```", "```java\n    System.out.println(objRead.field1);  //prints: 42\n```", "```java\n    System.out.println(objRead.field2);  //prints: abc\n```", "```java\n} catch (Exception ex){\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nPipedInputStream pis = new PipedInputStream();\n```", "```java\nPipedOutputStream pos = new PipedOutputStream(pis);\n```", "```java\nPipedOutputStream pos = new PipedOutputStream();\n```", "```java\nPipedInputStream pis = new PipedInputStream(pos);\n```", "```java\nPipedInputStream pis = new PipedInputStream();\n```", "```java\nPipedOutputStream pos = new PipedOutputStream();\n```", "```java\npos.connect(pis); \n```", "```java\nclass PipedOutputWorker implements Runnable{\n```", "```java\n    private PipedOutputStream pos;\n```", "```java\n    public PipedOutputWorker(PipedOutputStream pos) {\n```", "```java\n        this.pos = pos;\n```", "```java\n    }\n```", "```java\n    @Override\n```", "```java\n    public void run() {\n```", "```java\n        try {\n```", "```java\n            for(int i = 1; i < 4; i++){\n```", "```java\n                pos.write(i);\n```", "```java\n            }\n```", "```java\n            pos.close();\n```", "```java\n        } catch (Exception ex) {\n```", "```java\n            ex.printStackTrace();\n```", "```java\n        }\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nclass PipedInputWorker implements Runnable{\n```", "```java\n    private PipedInputStream pis;\n```", "```java\n    public PipedInputWorker(PipedInputStream pis) {\n```", "```java\n        this.pis = pis;\n```", "```java\n    }\n```", "```java\n    @Override\n```", "```java\n    public void run() {\n```", "```java\n        try {\n```", "```java\n            int i;\n```", "```java\n            while((i = pis.read()) > -1){\n```", "```java\n                System.out.print(i + \" \");  \n```", "```java\n            }\n```", "```java\n            pis.close();\n```", "```java\n        } catch (Exception ex) {\n```", "```java\n            ex.printStackTrace();\n```", "```java\n        }\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nPipedOutputStream pos = new PipedOutputStream();\n```", "```java\nPipedInputStream pis = new PipedInputStream();\n```", "```java\ntry {\n```", "```java\n    pos.connect(pis);\n```", "```java\n    new Thread(new PipedOutputWorker(pos)).start();\n```", "```java\n    new Thread(new PipedInputWorker(pis)).start(); \n```", "```java\n                                                //prints: 1 2 3\n```", "```java\n} catch (Exception ex) {\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nString file1 = classLoader.getResource(\"hello.txt\").getFile();\n```", "```java\nString file2 = classLoader.getResource(\"howAreYou.txt\").getFile();\n```", "```java\ntry(FileInputStream fis1 = \n```", "```java\n                    new FileInputStream(file1);\n```", "```java\n    FileInputStream fis2 = \n```", "```java\n                    new FileInputStream(file2);\n```", "```java\n    SequenceInputStream sis=\n```", "```java\n            new SequenceInputStream(fis1, fis2)){\n```", "```java\n    int i;\n```", "```java\n    while((i = sis.read()) > -1){\n```", "```java\n        System.out.print((char)i);       \n```", "```java\n                                   //prints: Hello!How are you?\n```", "```java\n    }\n```", "```java\n} catch (Exception ex) {\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nprotected volatile InputStream in;\n```", "```java\nprotected FilterInputStream(InputStream in) { this.in = in; }\n```", "```java\npublic int read() throws IOException { return in.read(); }\n```", "```java\npublic int read(byte b[]) throws IOException { \n```", "```java\n    return read(b, 0, b.length);\n```", "```java\n}\n```", "```java\nString file = classLoader.getResource(\"hello.txt\").getFile();\n```", "```java\ntry(FileInputStream  fis = new FileInputStream(file);\n```", "```java\n    FilterInputStream filter = new BufferedInputStream(fis)){\n```", "```java\n    int i;\n```", "```java\n    while((i = filter.read()) > -1){\n```", "```java\n        System.out.print((char)i);     //prints: Hello!\n```", "```java\n    }\n```", "```java\n} catch (Exception ex) {\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nSystem.out.println(\"Printing a line\");\n```", "```java\nString fileName = \"output.txt\";\n```", "```java\ntry(FileOutputStream  fos = new FileOutputStream(fileName);\n```", "```java\n    PrintStream ps = new PrintStream(fos)){\n```", "```java\n    ps.println(\"Hi there!\");\n```", "```java\n} catch (Exception ex) {\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nString fileName = \"output.txt\";\n```", "```java\nFile file = new File(fileName);\n```", "```java\ntry(PrintStream ps = new PrintStream(file)){\n```", "```java\n    ps.println(\"Hi there!\");\n```", "```java\n} catch (Exception ex) {\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nString fileName = \"output.txt\";\n```", "```java\ntry(PrintStream ps = new PrintStream(fileName)){\n```", "```java\n    ps.println(\"Hi there!\");\n```", "```java\n} catch (Exception ex) {\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nfor (String chs : Charset.availableCharsets().keySet()) {\n```", "```java\n    System.out.println(chs);\n```", "```java\n}\n```", "```java\n    System.out.printf(\"Hi, %s!%n\", \"dear reader\"); \n                                   //prints: Hi, dear reader!\n    System.out.format(\"Hi, %s!%n\", \"dear reader\"); \n                                   //prints: Hi, dear reader!\n    ```", "```java\n    System.out.printf(\"Hi %s\", \"there\").append(\"!\\n\");  \n                                          //prints: Hi there!\n    System.out.printf(\"Hi \")\n                   .append(\"one there!\\n two\", 4, 11);  \n                                          //prints: Hi there!\n    ```", "```java\npackage com.packt.learnjava.ch05_stringsIoStreams;\n```", "```java\nimport java.io.Console;\n```", "```java\npublic class ConsoleDemo {\n```", "```java\n    public static void main(String... args)  {\n```", "```java\n        Console console = System.console();\n```", "```java\n        System.out.println(console);\n```", "```java\n    }\n```", "```java\n}\n```", "```java\njava -cp ./target/examples-1.0-SNAPSHOT.jar  \n          com.packt.learnjava.ch05_stringsIoStreams.ConsoleDemo\n```", "```java\nConsole console = System.console();\n```", "```java\nSystem.out.print(\"Enter something 1: \"); \n```", "```java\nString line = console.readLine();\n```", "```java\nSystem.out.println(\"Entered 1: \" + line);\n```", "```java\nline = console.readLine(\"Enter something 2: \");\n```", "```java\nSystem.out.println(\"Entered 2: \" + line);\n```", "```java\nline = console.readLine(\"Enter some%s\", \"thing 3: \");\n```", "```java\nSystem.out.println(\"Entered 3: \" + line);\n```", "```java\nSystem.out.print(\"Enter password: \");\n```", "```java\nchar[] password = console.readPassword();\n```", "```java\nSystem.out.println(\"Entered 4: \" + new String(password));\n```", "```java\npassword = console.readPassword(\"Enter password 5: \");\n```", "```java\nSystem.out.println(\"Entered 5: \" + new String(password));\n```", "```java\npassword = console.readPassword(\"Enter pass%s\", \"word 6: \");\n```", "```java\nSystem.out.println(\"Entered 6: \" + new String(password));\n```", "```java\nString line = console.format(\"Enter some%s\", \"thing:\").readLine();\n```", "```java\nString line = console.readLine(\"Enter some%s\", \"thing:\");\n```", "```java\ntry (Reader reader = console.reader()){\n```", "```java\n    char[] chars = new char[10];\n```", "```java\n    System.out.print(\"Enter something: \");\n```", "```java\n    reader.read(chars);\n```", "```java\n    System.out.print(\"Entered: \" + new String(chars));\n```", "```java\n} catch (IOException e) {\n```", "```java\n    e.printStackTrace();\n```", "```java\n}\n```", "```java\nPrintWriter out = console.writer();\n```", "```java\nout.println(\"Hello!\");\n```", "```java\nconsole.flush();\n```", "```java\nThere\n```", "```java\nhappened\n```", "```java\n42\n```", "```java\nevents.\n```", "```java\nString file =  classLoader.\n```", "```java\n                           getResource(\"tokens.txt\").getFile();\n```", "```java\ntry(FileReader fr = new FileReader(file);\n```", "```java\n   BufferedReader br = new BufferedReader(fr)){\n```", "```java\n  StreamTokenizer st = new StreamTokenizer(br);\n```", "```java\n  st.eolIsSignificant(true);\n```", "```java\n  st.commentChar('e');\n```", "```java\n  System.out.println(\"Line \" + st.lineno() + \":\");\n```", "```java\n  int i;\n```", "```java\n  while ((i = st.nextToken()) != StreamTokenizer.TT_EOF) {\n```", "```java\n    switch (i) {\n```", "```java\n       case StreamTokenizer.TT_EOL:\n```", "```java\n            System.out.println(\"\\nLine \" + st.lineno() + \":\");\n```", "```java\n            break;\n```", "```java\n       case StreamTokenizer.TT_WORD:\n```", "```java\n            System.out.println(\"TT_WORD => \" + st.sval);\n```", "```java\n            break;\n```", "```java\n       case StreamTokenizer.TT_NUMBER:\n```", "```java\n            System.out.println(\"TT_NUMBER => \" + st.nval);\n```", "```java\n            break;\n```", "```java\n       default:\n```", "```java\n            System.out.println(\"Unexpected => \" + st.ttype);\n```", "```java\n       }\n```", "```java\n  }         \n```", "```java\n} catch (Exception ex){\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\n FileReader fr = new FileReader(filePath);\n```", "```java\n StreamTokenizer st = new StreamTokenizer(fr);\n```", "```java\nvoid printInfo(ObjectStreamClass osc) {\n```", "```java\n    System.out.println(osc.forClass());\n```", "```java\n    System.out.println(\"Class name: \" + osc.getName());\n```", "```java\n    System.out.println(\"SerialVersionUID: \" +\n```", "```java\n                                   osc.getSerialVersionUID());\n```", "```java\n    ObjectStreamField[] fields = osc.getFields();\n```", "```java\n    System.out.println(\"Serialized fields:\");\n```", "```java\n    for (ObjectStreamField osf : fields) {\n```", "```java\n        System.out.println(osf.getName() + \": \");\n```", "```java\n        System.out.println(\"\\t\" + osf.getType());\n```", "```java\n        System.out.println(\"\\t\" + osf.getTypeCode());\n```", "```java\n        System.out.println(\"\\t\" + osf.getTypeString());\n```", "```java\n    }\n```", "```java\n}\n```", "```java\npackage com.packt.learnjava.ch05_stringsIoStreams;\n```", "```java\nimport java.io.Serializable;\n```", "```java\npublic class Person1 implements Serializable {\n```", "```java\n    private int age;\n```", "```java\n    private String name;\n```", "```java\n    public Person1(int age, String name) {\n```", "```java\n        this.age = age;\n```", "```java\n        this.name = name;\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nObjectStreamClass osc1 = \n```", "```java\n        ObjectStreamClass.lookup(Person1.class);\n```", "```java\nprintInfo(osc1);\n```", "```java\npackage com.packt.learnjava.ch05_stringsIoStreams;\n```", "```java\npublic class Person2 {\n```", "```java\n    private int age;\n```", "```java\n    private String name;\n```", "```java\n    public Person2(int age, String name) {\n```", "```java\n        this.age = age;\n```", "```java\n        this.name = name;\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nObjectStreamClass osc2 = \n```", "```java\n             ObjectStreamClass.lookup(Person2.class);\n```", "```java\nSystem.out.println(\"osc2: \" + osc2);    //prints: null\n```", "```java\nObjectStreamClass osc3 = \n```", "```java\n           ObjectStreamClass.lookupAny(Person2.class);\n```", "```java\nprintInfo(osc3);\n```", "```java\nScanner sc = new Scanner(System.in);\n```", "```java\nSystem.out.print(\"Enter something: \");\n```", "```java\nwhile(sc.hasNext()){\n```", "```java\n    String line = sc.nextLine();\n```", "```java\n    if(\"end\".equals(line)){\n```", "```java\n        System.exit(0);\n```", "```java\n    }\n```", "```java\n    System.out.println(line);\n```", "```java\n}\n```", "```java\nString file =  classLoader.getResource(\"tokens.txt\").getFile();\n```", "```java\ntry(Scanner sc = new Scanner(new File(file))){\n```", "```java\n    while(sc.hasNextLine()){\n```", "```java\n        System.out.println(sc.nextLine());\n```", "```java\n    }\n```", "```java\n} catch (Exception ex){\n```", "```java\n    ex.printStackTrace();\n```", "```java\n}\n```", "```java\nString input = \"One two three\";\n```", "```java\nScanner sc = new Scanner(input);\n```", "```java\nwhile(sc.hasNext()){\n```", "```java\n    System.out.println(sc.next());\n```", "```java\n}\n```", "```java\nString input = \"One,two,three\";\n```", "```java\nScanner sc = new Scanner(input).useDelimiter(\",\");\n```", "```java\nwhile(sc.hasNext()){\n```", "```java\n    System.out.println(sc.next());\n```", "```java\n}\n```", "```java\nString path = \"demo1\" + File.separator + \n```", "```java\n                            \"demo2\" + File.separator;\n```", "```java\nString fileName = \"FileName.txt\";\n```", "```java\nFile f = new File(path + fileName);\n```", "```java\nString path = \"demo1\" + File.separator + \n```", "```java\n                            \"demo2\" + File.separator;\n```", "```java\nString fileName = \"FileName.txt\";\n```", "```java\nFile f = new File(path, fileName);\n```", "```java\nString path = \"demo1\" + File.separator + \n```", "```java\n                            \"demo2\" + File.separator;\n```", "```java\nString fileName = \"FileName.txt\";\n```", "```java\nFile f = new File(new File(path), fileName);\n```", "```java\nString path = \"demo1\" + File.separator + \n```", "```java\n                            \"demo2\" + File.separator;\n```", "```java\nString fileName = \"FileName.txt\";\n```", "```java\nURI uri = new File(path + fileName).toURI();\n```", "```java\nFile f = new File(uri);\n```", "```java\n    String path = \"demo1\" + File.separator + \n                                \"demo2\" + File.separator;\n    String fileName = \"FileName.txt\";\n    File f = new File(path + fileName);\n    f.delete();\n    ```", "```java\nString path = \"demo1\" + File.separator + \n```", "```java\n                            \"demo2\" + File.separator;\n```", "```java\nString fileName = \"FileName.txt\";\n```", "```java\nFile f = new File(path + fileName);\n```", "```java\ntry {\n```", "```java\n    new File(path).mkdirs();\n```", "```java\n    f.createNewFile();\n```", "```java\n    f.delete();\n```", "```java\n    path = StringUtils\n```", "```java\n            .substringBeforeLast(path, File.separator);\n```", "```java\n    while (new File(path).delete()) {\n```", "```java\n        path = StringUtils\n```", "```java\n             .substringBeforeLast(path, File.separator);\n```", "```java\n    }\n```", "```java\n} catch (Exception e) {\n```", "```java\n    e.printStackTrace();\n```", "```java\n}\n```", "```java\nString path1 = \"demo1\" + File.separator;\n```", "```java\nString path2 = \"demo2\" + File.separator;\n```", "```java\nString path = path1 + path2;\n```", "```java\nFile f1 = new File(path + \"file1.txt\");\n```", "```java\nFile f2 = new File(path + \"file2.txt\");\n```", "```java\nFile dir1 = new File(path1);\n```", "```java\nFile dir = new File(path);\n```", "```java\ndir.mkdirs();\n```", "```java\nf1.createNewFile();\n```", "```java\nf2.createNewFile();\n```", "```java\nSystem.out.print(\"\\ndir1.list(): \");\n```", "```java\nfor(String d: dir1.list()){\n```", "```java\n    System.out.print(d + \" \");\n```", "```java\n}\n```", "```java\nSystem.out.print(\"\\ndir1.listFiles(): \");\n```", "```java\nfor(File f: dir1.listFiles()){\n```", "```java\n    System.out.print(f + \" \");\n```", "```java\n}\n```", "```java\nSystem.out.print(\"\\ndir.list(): \");\n```", "```java\nfor(String d: dir.list()){\n```", "```java\n    System.out.print(d + \" \");\n```", "```java\n}\n```", "```java\nSystem.out.print(\"\\ndir.listFiles(): \");\n```", "```java\nfor(File f: dir.listFiles()){\n```", "```java\n    System.out.print(f + \" \");\n```", "```java\n}\n```", "```java\nSystem.out.print(\"\\nFile.listRoots(): \");\n```", "```java\nfor(File f: File.listRoots()){\n```", "```java\n    System.out.print(f + \" \");\n```", "```java\n}\n```", "```java\n    String str = \"&8a!L\";\n    System.out.println(str.indexOf(\"a!L\"));\n    ```", "```java\n    String s1 = \"x12\";\n    String s2 = new String(\"x12\");\n    System.out.println(s1.equals(s2)); \n    ```", "```java\n    System.out.println(\"%wx6\".substring(2));\n    ```", "```java\n    System.out.println(\"ab\"+\"42\".repeat(2));\n    ```", "```java\n    String s = \"  \";\n    System.out.println(s.isBlank()+\" \"+s.isEmpty());\n    ```", "```java\n    String path = \"demo1\" + File.separator + \"demo2\" + File.separator;\n    String fileName = \"FileName.txt\";\n    File f = new File(path, fileName);\n    try {\n        new File(path).mkdir();\n        f.createNewFile();\n    } catch (Exception e) {\n        e.printStackTrace();\n    } \n    ```"]