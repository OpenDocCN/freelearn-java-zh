["```java\nfrom pathlib import Path\n\n# Munge our sys path so libs can be found\nCWD = Path(__file__).resolve().cwd() / 'lib'\nsys.path.insert(0, str(CWD))\n```", "```java\nfrom pathlib import Path\n\nCWD = Path(__file__).resolve().parent\ncode_dir = CWD / '../serverless'\nlib_dir = CWD / '../serverless/lib'\n\nsys.path.append(str(code_dir))\nsys.path.append(str(lib_dir))\n\nENV = os.environ['ENV']\nos.environ.update({\n    'CUPPING_DB_PASSWORD': '',\n    'CUPPING_DB_USERNAME': 'postgres',\n    'CUPPING_DB_HOST': 'cupping-%s-postgres' % ENV,\n})\n\nif os.environ.get('CIRCLECI'):\n    os.environ['CUPPING_DB_HOST'] = 'localhost'\n```", "```java\nversion: 2 \njobs:\n\n  build:\n    docker:\n      - image: verypossible/serverless:1.25.0-python3\n      - image: postgres\n    environment:\n      - ENV: circleci\n    steps:\n      - checkout\n      - restore_cache:\n          key: dependency-cache-{{ checksum \"ch2/requirements.txt\" }}\n      - run:\n          name: Install python requirements\n          working_directory: ch2 \n          command: make libs\n      - save_cache:\n          key: dependency-cache-{{ checksum \"ch2/requirements.txt\" }}\n          paths:\n            - ch2/lib\n      - run:\n          name: py.test\n          working_directory: ch2 \n          command: make tests\n      - store_artifacts:\n          path: ch2/htmlcov/\n          destination: coverage\n```", "```java\nprovider:\n  environment:\n    CUPPING_DB_USERNAME: ${env:CUPPING_DB_USERNAME}\n    CUPPING_DB_PASSWORD: ${env:CUPPING_DB_PASSWORD}\n    CUPPING_DB_NAME: ${env:CUPPING_DB_NAME}\n\nresources:\n  Resources:    \n    RDSPostgresInstance:\n      Type: AWS::RDS::DBInstance\n      Properties:\n        DBName: ${env:CUPPING_DB_NAME}\n        MasterUsername: ${env:CUPPING_DB_USERNAME}\n        MasterUserPassword: ${env:CUPPING_DB_PASSWORD} \n```", "```java\njobs:\n\n  build:\n    # build steps\n\n  deploy:\n    docker:\n      - image: verypossible/serverless:1.25.0-python3\n    environment:\n      - ENV: production\n      - AWS_REGION: us-west-2\n      - VPC_ID: vpc-abc12345\n      - SUBNET_ID_A: subnet-11111111\n      - SUBNET_ID_B: subnet-22222222\n      - SUBNET_ID_C: subnet-33333333\n      - CUPPING_DB_USERNAME: root\n      - CUPPING_DB_NAME: cupping_log\n    steps:\n      - checkout\n      - run:\n          name: Build libs\n          working_directory: ch2 \n          command: make libs\n      - run:\n          name: Production deploy if tests pass and branch is production\n          working_directory: ch2 \n          command: make deploy\n\nworkflows:\n  version: 2\n  build-deploy:\n    jobs:\n      - build\n      - deploy:\n          requires:\n            - build\n          filters:\n            branches:\n              only: production \n```"]