["```java\nCipher cipher = Cipher.getInstance(<transformation>);\ncipher.init(Cipher.ENCRYPT_MODE, <key>);\n```", "```java\nKeyPair keyPair = KeyPairGenerator.getInstance(algorithm).generateKeyPair();\n```", "```java\nKey key = KeyGenerator.getInstance(<algorithm>).generateKey();\n```", "```java\n    package com.packt.java.chapter10;\n\n    public class Exercise1 {\n\n        public static void main(String[] args) {\n        // write your code here\n        }\n    }\n    ```", "```java\n    package com.packt.java.chapter10;\n\n    import javax.crypto.KeyGenerator;\n    import java.security.Key;\n    import java.security.NoSuchAlgorithmException;\n\n    public class Exercise1{\n\n        public static void main(String[] args) {\n            try {\n                String algorithm = \"AES\";\n                Key privateKey = KeyGenerator.getInstance(algorithm)              .generateKey();\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    ```", "```java\n    package com.packt.java.chapter10;\n\n    import javax.crypto.KeyGenerator;\n    import java.security.Key;\n    import java.security.NoSuchAlgorithmException;\n\n    public class Exercise1 {\n\n        public static void main(String[] args) {\n            try {\n                String algorithm = \"AES\";\n                Key privateKey = KeyGenerator.getInstance                           (algorithm).generateKey();\n                String transformation = algorithm + \"/ECB/NoPadding\";\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    ```", "```java\n        public static void main(String[] args) {\n            try {\n                String algorithm = \"AES\";\n                Key privateKey = KeyGenerator.getInstance(algorithm)              .generateKey();\n                String transformation = algorithm + \"/ECB/NoPadding\";\n                Cipher cipher = Cipher.getInstance(transformation);\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            } catch (NoSuchPaddingException e) {\n                e.printStackTrace();\n            }\n        }\n    ```", "```java\n        public static void main(String[] args) {\n            try {\n                String algorithm = \"AES\";\n                Key privateKey = KeyGenerator.getInstance(algorithm)              .generateKey();\n                String transformation = algorithm + \"/ECB/NoPadding\";\n                Cipher cipher = Cipher.getInstance(transformation);\n                cipher.init(Cipher.ENCRYPT_MODE, privateKey);\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            } catch (NoSuchPaddingException e) {\n                e.printStackTrace();\n            } catch (InvalidKeyException e) {\n                e.printStackTrace();\n            }\n        }\n    ```", "```java\n    Exercise1.java\n    1 package com.packt.java.chapter10;\n    2 \n    3 import javax.crypto.*;\n    4 import java.security.InvalidKeyException;\n    5 import java.security.Key;\n    6 import java.security.NoSuchAlgorithmException;\n    7 \n    8 public class Exercise1 {\n    9 \n    10     public static void main(String[] args) {\n    11         try {\n    12         String algorithm = \"AES\";\n    13         Key privateKey = KeyGenerator.getInstance(algorithm)             .generateKey();\n    14         String transformation = algorithm + \"/ECB/PKCS5Padding\";\n    15         Cipher cipher = Cipher.getInstance(transformation);\n    16         cipher.init(Cipher.ENCRYPT_MODE, privateKey);\n    https://packt.live/32veWeE\n    ```", "```java\n    package com.packt.java.chapter10;\n    public class Exercise2 {\n    }\n    ```", "```java\n    package com.packt.java.chapter10;\n    public class Exercise2 {\n        public static void main(String[] args) {\n        }\n    }\n    ```", "```java\n    package com.packt.java.chapter10;\n    public class Exercise2 {\n        public static void main(String[] args) {\n            String plaintext = \"My secret message\";\n        }\n    }\n    ```", "```java\n    package com.packt.java.chapter10;\n    public class Exercise2 {\n        public static void main(String[] args) {\n            String plaintext = \"My secret message\";\n            String algorithm = \"RSA\";\n        }\n    }\n    ```", "```java\n    public class Exercise2 {\n        public static void main(String[] args) {\n            try {\n                String plaintext = \"My secret message\";\n                String algorithm = \"RSA\";\n                KeyPair keyPair = KeyPairGenerator.getInstance(algorithm)              .generateKeyPair();\n            } catch (NoSuchAlgorithmException e) {\n                 e.printStackTrace();\n            }\n        }\n    }\n    ```", "```java\n    public class Exercise2 {\n        public static void main(String[] args) {\n            try{\n                String plaintext = \"My secret message\";\n                String algorithm = \"RSA\";\n                KeyPair keyPair = KeyPairGenerator.getInstance(algorithm)              .generateKeyPair();\n                String transformation = algorithm + \"/ECB/PKCS1Padding\";\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    ```", "```java\n            try{\n                String plaintext = \"My secret message\";\n                String algorithm = \"RSA\";\n                KeyPair keyPair = KeyPairGenerator.getInstance(algorithm)              .generateKeyPair();\n                String transformation = algorithm + \"/ECB/PKCS1Padding\";\n                Cipher cipher = Cipher.getInstance(transformation);\n                cipher.init(Cipher.ENCRYPT_MODE, keyPair.getPublic());\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            } catch (NoSuchPaddingException e) {\n                e.printStackTrace();\n            } catch (InvalidKeyException e) {\n                e.printStackTrace();\n            }\n        }\n    ```", "```java\nExercise2.java\n1  package com.packt.java.chapter10;\n2  \n3  import javax.crypto.*;\n4  import java.security.InvalidKeyException;\n5  import java.security.KeyPair;\n6  import java.security.KeyPairGenerator;\n7  import java.security.NoSuchAlgorithmException;\n8  \n9  public class Exercise2 {\n10 \n11     public static void main(String[] args) {\n12         try {\n13             String plaintext = \"My secret message\";\n14             String algorithm = \"RSA\";\n15             KeyPair keyPair = KeyPairGenerator.getInstance(algorithm)              .generateKeyPair();\n16             String transformation = algorithm + \"/ECB/PKCS1Padding\";\n17             Cipher cipher = Cipher.getInstance(transformation);\n18             cipher.init(Cipher.ENCRYPT_MODE, keyPair.getPublic());\nhttps://packt.live/2MvdL9x\n```", "```java\n    package com.packt.java.chapter10;\n    public class Exercise3 {\n    }\n    ```", "```java\n    package com.packt.java.chapter10;\n\n    public class Exercise3 {\n        public static void main(String[] args) {\n        }\n    }\n    ```", "```java\n        public static void main(String[] args) {\n            try {\n                String algorithm = \"AES\";\n                Key secretKey = KeyGenerator.getInstance(algorithm)              .generateKey();\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    ```", "```java\n            try{\n                String algorithm = \"AES\";\n                Key secretKey = KeyGenerator.getInstance(algorithm)              .generateKey();\n                String transformation = algorithm + \"/CBC/NoPadding\";\n                Cipher cipher = Cipher.getInstance(transformation);\n                cipher.init(Cipher.ENCRYPT_MODE, secretKey);\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            } catch (NoSuchPaddingException e) {\n                e.printStackTrace();\n            } catch (InvalidKeyException e) {\n                e.printStackTrace();\n            }\n        }\n    ```", "```java\n            try {\n                String algorithm = \"AES\";\n                Key secretKey = KeyGenerator.getInstance(algorithm)              .generateKey();\n                String transformation = algorithm + \"/CBC/NoPadding\";\n                Cipher cipher = Cipher.getInstance(transformation);\n                cipher.init(Cipher.ENCRYPT_MODE, secretKey);\n                Path pathToFile = Path.of(\"res/plaintext.txt\");\n                File plaintext = pathToFile.toFile();\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            } catch (NoSuchPaddingException e) {\n                e.printStackTrace();\n            }catch (InvalidKeyException e){\n                e.printStackTrace();\n            }\n        }\n    ```", "```java\n                File ciphertext = Path.of(\"res/ciphertext.txt\").toFile();\n                if (ciphertext.exists()) {\n                    ciphertext.delete();\n                }\n            } catch (NoSuchAlgorithmException e) {\n                e.printStackTrace();\n            } catch (NoSuchPaddingException e) {\n                e.printStackTrace();\n            } catch (InvalidKeyException e) {\n                e.printStackTrace();\n            }\n    ```", "```java\n                try (FileInputStream fileInputStream = new               FileInputStream(plaintext);\n                    FileOutputStream fileOutputStream = new                   FileOutputStream(ciphertext);\n                    CipherOutputStream cipherOutputStream = new                   CipherOutputStream(fileOutputStream, cipher)); {\n    }\n                } catch (NoSuchAlgorithmException e) {\n                    e.printStackTrace();\n                } catch (NoSuchPaddingException e) {\n                    e.printStackTrace();\n                } catch (InvalidKeyException e) {\n                    e.printStackTrace();\n                } catch (FileNotFoundException e) {\n                    e.printStackTrace();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    ```", "```java\n                try (FileInputStream fileInputStream = new               FileInputStream(plaintext);\n                    FileOutputStream fileOutputStream = new                   FileOutputStream(ciphertext);\n                    CipherOutputStream cipherOutputStream =                   new CipherOutputStream(fileOutputStream,  cipher))  {\n                    fileOutputStream.write(cipher.getIV());\n    }\n                } catch (NoSuchAlgorithmException e) {\n                    e.printStackTrace();\n                } catch (NoSuchPaddingException e) {\n                    e.printStackTrace();\n                } catch (InvalidKeyException e) {\n                    e.printStackTrace();\n                } catch (FileNotFoundException e) {\n                    e.printStackTrace();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n    ```", "```java\n    Exercise3.java\n    1  package com.packt.java.chapter10;\n    2  \n    3  import javax.crypto.Cipher;\n    4  import javax.crypto.CipherOutputStream;\n    5  import javax.crypto.KeyGenerator;\n    6  import javax.crypto.NoSuchPaddingException;\n    7  import java.io.*;\n    8  import java.nio.file.Path;\n    9  import java.security.InvalidKeyException;\n    10 import java.security.Key;\n    11 import java.security.NoSuchAlgorithmException;\n    12 \n    13 public class Exercise3 {\n    14 \n    15     public static void main(String[] args) {\n    https://packt.live/2J4nKjI\n    ```"]