["```java\n    attachment.setPhysicsLocation(new Vector3f(-5f, 1.52f, 0f));\n    bulletAppState.getPhysicsSpace().add(attachment);\n    ```", "```java\n    Geometry doorGeometry = new Geometry(\"Door\", new Box(0.6f, 1.5f, 0.1f));\n    ```", "```java\n    RigidBodyControl doorPhysicsBody = new RigidBodyControl(new BoxCollisionShape(new Vector3f(.6f, 1.5f, .1f)), 1);\n    bulletAppState.getPhysicsSpace().add(doorPhysicsBody);\n    doorGeometry.addControl(doorPhysicsBody);\n    ```", "```java\n    new HingeJoint(attachment, doorPhysicsBody, new Vector3f(0f, 0f, 0f), new Vector3f(-1f, 0f, 0f), Vector3f.UNIT_Y, Vector3f.UNIT_Y);\n    ```", "```java\n    joint.setLimit(-FastMath.HALF_PI - 0.1f, FastMath.HALF_PI + 0.1f);\n    bulletAppState.getPhysicsSpace().add(joint);\n    ```", "```java\n    float angle = joint.getHingeAngle();\n    ```", "```java\n    if(angle > 0.1f || angle < -0.1f) timeOpen += tpf;\n    else timeOpen = 0f;\n    ```", "```java\n    if(timeOpen > 5) {\n      float speed = angle > 0 ? -0.9f : 0.9f;\n      joint.enableMotor(true, speed, 0.1f);\n      spatial.getControl(RigidBodyControl.class).activate();\n    }\n    ```", "```java\n    joint.enableMotor(true, 0, 1);\n    ```", "```java\n    DoorCloseControl doorControl = new DoorCloseControl();\n    doorControl.setHingeJoint(joint);\n    doorGeometry.addControl(doorControl);\n    ```", "```java\n    RigidBodyControl floorControl = new RigidBodyControl(new PlaneCollisionShape(new Plane(new Vector3f(0, 1, 0), 0)), 0);\n    ground.addControl(floorControl);\n    floorControl.setPhysicsLocation(new Vector3f(0f, -10, 0f));\n    ```", "```java\n    inputManager.addListener(this, \"boost\");\n    inputManager.addMapping(\"boost\", new KeyTrigger(KeyInput.KEY_SPACE));\n    ```", "```java\n    RigidBodyControl control = new RigidBodyControl(new BoxCollisionShape(new Vector3f(1, 1, 1)), 1);\n    spaceShip.addControl(control);\n    ```", "```java\n    Node thruster = new Node(\"Thruster\");\n    ```", "```java\n    thruster.setLocalTranslation(0, -1, 0);\n    ```", "```java\n    Vector3f direction = spatial.getWorldTranslation().subtract(thruster.getWorldTranslation());\n    ```", "```java\n    spatial.getControl(RigidBodyControl.class).applyImpulse(direction, direction.negate());\n    ```", "```java\n    if(name.equals(\"boost\") && value > 0){\n      spaceShip.getControl(ThrusterControl.class).fireBooster();\n    }\n    ```", "```java\n    public Arrow(Vector3f location, Vector3f velocity)\n    ```", "```java\n    Box arrowBody = new Box(0.3f, 4f, 0.3f);\n    Geometry geometry = new Geometry(\"bullet\", arrowBody);\n    ```", "```java\n    geometry.setLocalTranslation(0f, -4f, 0f);\n    ```", "```java\n    SphereCollisionShape arrowHeadCollision = new SphereCollisionShape(0.5f);\n    ```", "```java\n    RigidBodyControl rigidBody = new RigidBodyControl(arrowHeadCollision, 1f);\n    ```", "```java\n    rigidBody.setLinearVelocity(velocity);\n    addControl(rigidBody);\n    ```", "```java\n    direction = spatial.getControl(RigidBodyControl.class).getLinearVelocity().normalize();\n    ```", "```java\n    spatial.rotateUpTo(direction);\n    ```", "```java\n    addControl(new ArrowFacingControl());\n    ```", "```java\n    inputManager.addListener(this, \"fire\");\n    inputManager.addMapping(\"fire\", new KeyTrigger(KeyInput.KEY_SPACE));\n    ```", "```java\n    if (action.equals(\"fire\") && !isPressed) fireArrow();\n    ```", "```java\n    Arrow arrow = new Arrow(new Vector3f(0f, 6f, -10f), new Vector3f(0.5f, 0.5f, 0.0f).mult(50));\n    arrow.setMaterial(matBullet);\n    ```", "```java\n    rootNode.attachChild(arrow);\n    getPhysicsSpace().add(arrow);\n    ```", "```java\n    RigidBodyControl control = new RigidBodyControl(new BoxCollisionShape(new Vector3f(1, 1, 1)), 1);\n    shipNode.addControl(control);\n    ```", "```java\n    Node thruster = new Node(\"Thruster\");\n    ```", "```java\n    thruster.setLocalTranslation(-1, 0, 0);\n    shipNode.attachChild(thruster);\n    ```", "```java\n    shipNode.rotate(0, FastMath.PI, 0);\n    ```", "```java\n    public StellarBody(float orbit, float speed, float size)\n    ```", "```java\n    RigidBodyControl rigidBody = new RigidBodyControl(new SphereCollisionShape(size), 0f);\n    rigidBody.setGravity(Vector3f.ZERO);\n    spatial.addControl(rigidBody);\n    ```", "```java\n    cycle += (speed * tpf)  % FastMath.TWO_PI;\n    ```", "```java\n    float x = FastMath.sin(cycle);\n    float z = FastMath.cos(cycle);\n    ```", "```java\n    spatial.setLocalTranslation(x * orbit, 0, z * orbit);\n    ```", "```java\n    Vector3f relativePosition = spatial.getWorldTranslation().subtract(position);\n    ```", "```java\n    relativePosition.normalizeLocal();\n    return relativePosition.multLocal(size * 1000 / relativePosition.lengthSquared());\n    ```", "```java\n    String[] mappings = new String[]{\"rotateLeft\", \"rotateRight\", \"boost\"};\n    inputManager.addListener(this, mappings);\n    inputManager.addMapping(\"boost\", new KeyTrigger(KeyInput.KEY_SPACE));\n    inputManager.addMapping(\"rotateLeft\", new KeyTrigger(KeyInput.KEY_LEFT));\n    inputManager.addMapping(\"rotateRight\", new KeyTrigger(KeyInput.KEY_RIGHT));\n    ```", "```java\n    cam.setLocation(new Vector3f(0, 300f, 0));\n    cam.lookAt(Vector3f.ZERO, Vector3f.UNIT_Y);\n    ```", "```java\n    combinedGravity.addLocal(body.getGravity(ship.getSpatial().getWorldTranslation()));\n    ```", "```java\n    torso = new Geometry(\"Torso\", new Box(0.25f, 2f, 0.25f);\n    RigidBodyControl torsoRigidBody = new RigidBodyControl(new BoxCollisionShape(...), 1f);\n    ...\n    torsoRigidBody.setPhysicsLocation(new Vector3f(0, 4.25f, 0));\n    ```", "```java\n    SixDofJoint waistJoint =  new SixDofJoint(waistRigidBody, torsoRigidBody, new Vector3f(0, 0.25f, 0), new Vector3f(0, -2.25f, 0f), true);\n    ```", "```java\n    waistJoint.setAngularLowerLimit(new Vector3f(-FastMath.QUARTER_PI * 0.3f, 0, 0));\n    waistJoint.setAngularUpperLimit(new Vector3f(FastMath.QUARTER_PI * 0.3f, 0, 0));\n    ```", "```java\n    leftArm = new Geometry(\"Left Arm\", new Box(0.25f, 0.25f, 2f);\n    RigidBodyControl leftArmRigidBody = new RigidBodyControl(new BoxCollisionShape(...), 1f);\n    ...\n    leftArmRigidBody.setPhysicsLocation(new Vector3f(0, 4.25f, 0));\n    ```", "```java\n    motorX = joint.getRotationalLimitMotor(0);\n    ```", "```java\n    PhysicsRigidBody bodyA = joint.getBodyA();\n    ```", "```java\n    float[] anglesA = new float[3];\n    bodyA.getPhysicsRotation().toAngles(anglesA);\n    ```", "```java\n    motorX.setEnableMotor(true);\n    motorX.setTargetVelocity(x*1.1f);\n    motorX.setMaxMotorForce(13.5f);\n    ```", "```java\n    motorX.setTargetVelocity(0);\n    motorX.setMaxMotorForce(0);\n    ```", "```java\nprivate List<Geometry> segments;\nprivate List<Point2PointJoint> joints;\n```", "```java\n    cam.setFrustum(1, 1000, -100 * aspect, 100 * aspect, 100, -100);\n    ```", "```java\n    cam.setLocation(new Vector3f(0, 0, 20));\n    cam.setRotation(new Quaternion().fromAngles(new float[]{0,-FastMath.PI,0}));\n    ```", "```java\n    RigidBodyControl newSegment = new RigidBodyControl(new SphereCollisionShape(1f), 5);\n    bulletAppState.getPhysicsSpace().add(newSegment);\n    ```", "```java\n    geometry.addControl(newSegment);\n    newSegment.setPhysicsLocation(location);\n    ```", "```java\n    createJoint(selectedJoint, newSegment);\n    ```", "```java\n    createJoint(RigidBodyControl body1, RigidBodyControl body2)\n    ```", "```java\n    Vector3f pivotPointB = body1.getPhysicsLocation().subtract(body2.getPhysicsLocation());\n    ```", "```java\n    Point2PointJoint joint = new Point2PointJoint(body1, body2, Vector3f.ZERO, pivotPointB);\n    ```", "```java\n    Ray ray = new Ray();\n    ray.setOrigin(cam.getWorldCoordinates(inputManager.getCursorPosition(), 0f));\n    ```", "```java\n    if (name.equals(LEFT_CLICK) && !isPressed) {\n      RigidBodyControl newSelection = checkSelection();\n      if (newSelection != null) {\n        selectedSegment = newSelection;\n      }\n    }\n    ```", "```java\n    else if (name.equals(RIGHT_CLICK) && !isPressed) {\n      RigidBodyControl hitSegment = checkSelection();\n      if (hitSegment != null && hitSegment != selectedSegment) {\n        createJoint(selectedSegment, hitSegment);\n      }\n    ```", "```java\n    createSegment(cam.getWorldCoordinates(inputManager.getCursorPosition(), 10f));\n    ```", "```java\n    Vector3f velocity = segment.getControl(RigidBodyControl.class).getLinearVelocity();\n    velocity.setZ(0);\n    segment.getControl(RigidBodyControl.class).setLinearVelocity(velocity);\n    ```", "```java\n    Point2PointJoint p = joints.get(i);\n      if (p.getAppliedImpulse() > maxImpulse) {\n        bulletAppState.getPhysicsSpace().remove(p);\n        joints.remove(p);\n\n      }\n    ```", "```java\n    private Map<Integer, Spatial> physicsObjects = new HashMap<Integer, Spatial>();\n    ```", "```java\n    bulletAppState.getPhysicsSpace().add(server.getLevelNode().getChild(\"terrain-TestScene\").getControl(PhysicsControl.class));\n    ```", "```java\n    bigBox.addControl(new PhysicsObjectControl(uniqueId));\n    bigBox.getControl(PhysicsObjectControl.class).setServerControllled(true);\n    physicsObjects.put(uniqueId, bigBox);\n    ```", "```java\n    PhysicsObjectMessage message = new PhysicsObjectMessage();\n    ```", "```java\n    message.setObjectId(physicsObject.getControl(PhysicsObjectControl.class).getId());\n    message.setTranslation(physicsObject.getControl(RigidBodyControl.class).getPhysicsLocation());\n    message.setRotation(physicsObject.getControl(RigidBodyControl.class).getPhysicsRotation());\n    ```", "```java\n    Map<Integer, Spatial> physicsObjects = game.getPhysicsObjects();\n    ```", "```java\n    int objectId = physicsMessage.getObjectId();\n    Spatial s = physicsObjects.get(objectId);\n    ```", "```java\n    PhysicsObjectControl physicsControl = s.getControl(PhysicsObjectControl.class);\n    if(physicsControl.getId() == objectId){\n      s.getControl(RigidBodyControl.class).setPhysicsLocation(physicsMessage.getTranslation()); s.getControl(RigidBodyControl.class).setPhysicsRotation(physicsMessage.getRotation());\n    }\n    ```", "```java\n    if(spatial.getControl(BetterCharacterControl.class) != null){\n      usePhysics = true;\n      physicsCharacter = spatial.getControl(BetterCharacterControl.class);\n    }\n    ```", "```java\n    if(usePhysics){\n    physicsCharacter.setWalkDirection(walkDirection.multLocal(50));\n    physicsCharacter.setViewDirection(tempRotation.getRotationColumn(2));\n    }\n    ```", "```java\n    Node playerNode = new Node(\"Player\");\n    playerNode.addControl(new BetterCharacterControl(0.5f, 1.5f, 1f));\n    playerNode.addControl(player);\n    rootNode.attachChild(playerNode);\n    stateManager.getState(ServerPhysicsAppState.class).addPlayer(player.getPhysicsCharacter());\n    ```"]