- en: Chapter 7. Using the Management Interfaces
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章。使用管理接口
- en: In this chapter, we will describe the management tools available with WildFly,
    which can be used to control your application server instances.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将描述 WildFly 提供的管理工具，这些工具可以用来控制您的应用程序服务器实例。
- en: WildFly provides several administration channels. One of them is the CLI, which
    contains many unique features that make it convenient for daily system administration
    and for monitoring application server resources.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 提供了几个管理通道。其中之一是 CLI，它包含许多独特的功能，使得日常系统管理和监控应用程序服务器资源变得方便。
- en: The management tools also include a web admin console that offers an elegant
    view of the application server subsystems, allowing you to perform administrative
    tasks in a simple way.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 管理工具还包括一个提供应用程序服务器子系统优雅视图的 Web 管理控制台，允许您以简单的方式执行管理任务。
- en: 'Within this chapter, we will describe the following management tools:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将描述以下管理工具：
- en: The command-line interface (CLI)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令行界面 (CLI)
- en: The web admin console
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 管理控制台
- en: 'We will also cover the following topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将涵盖以下主题：
- en: Creating and modifying datasources
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和修改数据源
- en: Getting help from the CLI
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 CLI 获取帮助
- en: Batch scripting
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批处理脚本
- en: Configuring server profiles
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置服务器配置文件
- en: Adding JMS destinations
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加 JMS 目的地
- en: Configuring JMS destinations
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 JMS 目的地
- en: Configuring socket-binding groups
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置套接字绑定组
- en: Choosing between the CLI and web console
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 CLI 和 Web 控制台之间进行选择
- en: The command-line interface (CLI)
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命令行界面 (CLI)
- en: Terminals and consoles were one of the earliest types of communication interfaces
    between a system administrator and the machine. Due to this long-time presence,
    most system administrators prefer to use the raw power of the command line to
    perform management tasks. One of the most evident advantages of using a low-level
    interface, such as a shell, is that tasks can often be executed as a part of batch
    processing or macros for repetitive actions.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 终端和控台是系统管理员和机器之间最早的通信接口类型之一。由于这种长期存在，大多数系统管理员更喜欢使用命令行的原始力量来执行管理任务。使用低级接口，如 shell，的一个最明显的优点是任务通常可以作为批处理或宏的一部分执行，用于重复性操作。
- en: Tip
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: As we indicated at the beginning of this book, the CLI is located in the `JBOSS_HOME/bin`
    folder and wrapped by `jboss-cli.sh` (for Windows users, it's `jboss-cli.bat`).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本书开头所指出的，CLI 位于 `JBOSS_HOME/bin` 文件夹中，并由 `jboss-cli.sh`（对于 Windows 用户，是
    `jboss-cli.bat`）包装。
- en: 'By launching the shell script, you will start with a disconnected session.
    You can connect at any time with the `connect [standalone/domain controller]`
    command, which, by default, connects to a server controller located at `localhost`
    on port `9990`:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 通过启动 shell 脚本，您将以断开连接的会话开始。您可以在任何时候使用 `connect [standalone/domain controller]`
    命令连接，默认情况下，该命令连接到位于 `localhost` 的服务器控制器，端口号为 `9990`：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can adjust the default port where the native interface is running by modifying
    the line highlighted in the following code snippet, which is found within the
    `standalone.xml` or `domain.xml` configuration file:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过修改以下代码片段中突出显示的行来调整原生接口运行的默认端口，该代码片段位于 `standalone.xml` 或 `domain.xml` 配置文件中：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As you can see from the preceding code snippet, the socket management alias
    is defined within the `management-interfaces` section, while the corresponding
    port is contained in the `socket-binding` section.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从前面的代码片段中看到的，套接字管理别名定义在 `management-interfaces` 部分，而相应的端口包含在 `socket-binding`
    部分。
- en: 'A handy switch is `--connect`, which can be used to automatically connect to
    your standalone/domain controller when starting the CLI, as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个方便的开关是 `--connect`，可以在启动 CLI 时自动连接到您的独立/域控制器，如下所示：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'On a Windows machine, use the following command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 机器上，使用以下命令：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The corresponding command for exiting the CLI is either `quit` or `exit`, which
    closes the connection to the main controller:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 退出 CLI 的相应命令可以是 `quit` 或 `exit`，这将关闭与主控制器的连接：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Reloading the server configuration
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重新加载服务器配置
- en: 'While most changes made to the configuration via the command line take effect
    immediately, some changes do not and require a reload of the server configuration,
    for example, changing the socket-binding groups. To reload the server configuration,
    you need to issue the `:reload` command, as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然通过命令行对配置所做的更改大多数会立即生效，但有些更改不会立即生效，需要重新加载服务器配置，例如，更改套接字绑定组。要重新加载服务器配置，您需要发出
    `:reload` 命令，如下所示：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Employing the CLI
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 CLI
- en: One of the most interesting features of the CLI is its ability to autocomplete,
    which helps you find the correct spelling of resources and commands. This can
    be achieved by simply pressing the *Tab* key. You can even use it to find out
    the parameters needed for a particular command, without the need to go through
    the reference manual.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: CLI最有趣的功能之一是其自动补全功能，这有助于你找到资源和命令的正确拼写。这可以通过简单地按*Tab*键实现。你甚至可以使用它来查找特定命令所需的参数，而无需查阅参考手册。
- en: 'This guides us to the first part of our journey, where we will learn the available
    commands. So, once you have successfully connected, press the *Tab* key, and it
    will list the options available to you. The following screenshot shows the output:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这引导我们进入旅程的第一部分，我们将学习可用的命令。所以，一旦你成功连接，按下*Tab*键，它将列出你可用选项。以下截图显示了输出：
- en: '![Employing the CLI](img/6232OS_07_01.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![使用CLI](img/6232OS_07_01.jpg)'
- en: 'As you can see, there are over 30 options available. We can, however, group
    all the interactions that occur with the CLI into two broad categories:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，有超过30个选项可用。然而，我们可以将所有与CLI发生的交互分为两大类：
- en: '**Operations**: These include the resource paths (addresses) on which they
    are executed.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作**：这些包括它们所执行的资源路径（地址）。'
- en: '**Commands**: These execute an action independently from the path of the current
    resource. These don''t include the resource path.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令**：这些命令独立于当前资源的路径执行动作。这些命令不包括资源路径。'
- en: Navigating through the resources and executing operations
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在资源间导航并执行操作
- en: Operations are strictly bound to an application server resource path. The path
    along the tree of resources is represented by the `/` character, which, as it
    is, represents the root of the tree, as it does in Unix filesystems.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 操作严格绑定到应用程序服务器资源路径。资源树中的路径由`/`字符表示，它实际上代表树的根，就像在Unix文件系统中一样。
- en: 'When executing operations on the server''s resources, you have to use a well-defined
    syntax:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当在服务器资源上执行操作时，你必须使用一个定义良好的语法：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'It looks a bit awkward at first glance; however, we will try to demystify it
    with the following example:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 初看可能有些不自然；然而，我们将通过以下示例来尝试揭开它的神秘面纱：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here, we tell the CLI to navigate to the `deployment-scanner` subsystem under
    the default scanner resource and set the `scan-interval` attribute to `2500` ms
    using the `write-attribute` operation.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉CLI导航到默认扫描资源下的`deployment-scanner`子系统，并使用`write-attribute`操作将`scan-interval`属性设置为`2500`毫秒。
- en: This example also shows the distinction between resources, attributes, and operations.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例还展示了资源、属性和操作之间的区别。
- en: A resource is an element of the configuration that is located under a path.
    All elements that are classified as resources can be managed through WildFly's
    interfaces. For example, `deployment-scanner` is a resource located under the
    `subsystem` path. It has a child element named `default` scanner (when no name
    attribute is specified, the name defaults to `default`). On a single resource
    or on child resources, you can invoke some operations, such as reading or writing
    the value of an attribute (`scan-interval`).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 资源是位于路径下的配置元素。所有被分类为资源的元素都可以通过WildFly的接口进行管理。例如，`deployment-scanner`是位于`subsystem`路径下的资源。它有一个名为`default`的子元素（当没有指定名称属性时，名称默认为`default`）。在单个资源或子资源上，你可以调用一些操作，例如读取或写入属性的值（`scan-interval`）。
- en: 'Finally, note that operations are introduced by the `:` prefix, while resources
    are introduced by the `/` character. The following is a screenshot that helps
    you consolidate the basic concepts:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，请注意，操作由`:`前缀引入，而资源由`/`字符引入。以下截图有助于你巩固基本概念：
- en: '![Navigating through the resources and executing operations](img/6232OS_07_02.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![在资源间导航并执行操作](img/6232OS_07_02.jpg)'
- en: 'In order to move through the resource path, you can either state the full tree
    path (as in the earlier example) or use the `cd` command or the equivalent `cn`
    (change node) command to navigate to the path and then issue the desired command.
    For example, the previous code snippet can also be rewritten as:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在资源路径中移动，你可以要么指定完整的树路径（如早期示例所示），要么使用`cd`命令或等效的`cn`（更改节点）命令导航到路径，然后发出所需的命令。例如，前面的代码片段也可以重写为：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Tip
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Do attributes modified by the CLI survive a server restart?**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**CLI修改的属性在服务器重启后是否仍然存在？**'
- en: When using CLI, every change is persisted into the server configuration file.
    This means you must be careful when changing the server's configuration via the
    CLI. To play it safe, it would be wise to take a snapshot of your server configuration
    before making large changes. See the *Taking snapshots of the configuration* section.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用CLI时，每次更改都会持久化到服务器配置文件中。这意味着你必须小心通过CLI更改服务器的配置。为了安全起见，在做出重大更改之前，拍摄服务器配置的快照是明智的。请参阅*拍摄配置快照*部分。
- en: 'As it does for the operating system shell, issuing `cd ..` will move the resource
    pointer to the parent resource:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 就像操作系统shell一样，发出 `cd ..` 将将资源指针移动到父资源：
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You can, at any time, check the resource path where you are located by issuing
    either an empty `cd` command or just `pwd`, as you do for an Unix shell, as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随时通过发出一个空的 `cd` 命令或仅仅 `pwd` 来检查你所在的位置的资源路径，就像你在 Unix shell 中做的那样，如下所示：
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Finally, in order to simplify your navigation, we''ll close this section by
    providing you with a bird''s-eye view of the application server''s tree or resources,
    as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了简化你的导航，我们将通过提供应用服务器树或资源的鸟瞰图来结束本节，如下所示：
- en: '![Navigating through the resources and executing operations](img/6232OS_07_03.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![在资源间导航并执行操作](img/6232OS_07_03.jpg)'
- en: As you can see, the tree of resources includes eight child resources, each one
    handling one core aspect of the application server. In [Appendix](apa.html "Appendix A. CLI
    References"), *CLI References*, you will find a handy list of useful commands
    that can be used for your daily system administration. Most of the time, you will
    navigate to the subsystem resources that contain all the application server core
    modules. Other resources that you might want to learn more about are the core-service,
    which handles management interfaces (such as the CLI itself), the deployment resource,
    which can be used to manipulate deployed artifacts, and the `socket-binding-group`,
    which is the resource you will need to change the ports used by the application
    server.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，资源树包括八个子资源，每个子资源处理应用服务器的一个核心方面。在[附录](apa.html "附录 A. CLI References")中，*CLI
    References*，你可以找到一个有用的命令列表，这些命令可以用于你的日常系统管理。大多数时候，你会导航到包含所有应用服务器核心模块的子系统资源。你可能还想了解更多关于核心服务的信息，它处理管理接口（例如CLI本身），部署资源，它可以用来操作已部署的工件，以及`socket-binding-group`，这是你需要更改应用服务器使用的端口的资源。
- en: Operations that can be issued on a resource
  id: totrans-64
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 可在资源上发出的操作
- en: 'Having learned the basics of navigation through the resources, let''s see the
    commands that can be issued on a resource. Operations are triggered by the `:`
    character. You can get a list of them by using the `auto-completion` feature (the
    *Tab* key). The following is a list of the commands:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习了通过资源导航的基本知识后，让我们看看可以在资源上发出的命令。操作由 `:` 字符触发。你可以通过使用自动完成功能（*Tab* 键）来获取它们的列表。以下是一个命令列表：
- en: '| Command | Meaning |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 命令 | 含义 |'
- en: '| --- | --- |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `read-resource` | This command reads a model resource''s attribute values
    along with either basic or complete information about any child resources. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `read-resource` | 此命令读取模型资源的属性值，以及关于任何子资源的基本或完整信息。|'
- en: '| `read-resource-description` | This command outputs a description for the
    selected resource. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `read-resource-description` | 此命令为选定的资源输出一个描述。|'
- en: '| `read-operation-names` | This command reads the available operation names
    on the node. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `read-operation-names` | 此命令读取节点上可用的操作名称。|'
- en: '| `read-operation-description` | This command outputs a description for the
    available operations. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `read-operation-description` | 此命令为可用的操作输出一个描述。|'
- en: '| `read-children-names` | This command gets the name of all children under
    the selected resource. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `read-children-names` | 此命令获取选定资源下所有子资源的名称。|'
- en: '| `read-children-resources` | This command reads information about all of a
    resource''s children that are of a given type. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `read-children-resources` | 此命令读取关于给定类型的所有子资源的信息。|'
- en: '| `read-children-types` | This command provides the list of the children located
    under the selected resource. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `read-children-types` | 此命令提供选定资源下子资源的列表。|'
- en: '| `read-attribute` | This command gets the value of an attribute for the selected
    resource. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| `read-attribute` | 此命令获取选定资源的属性值。|'
- en: '| `write-attribute` | This command writes an attribute for the selected resource.
    |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| `write-attribute` | 此命令为选定的资源写入一个属性。|'
- en: The `read-resource` command deserves some more explanation. Without any extra
    arguments, it provides information about the resource's attribute and the direct
    child nodes.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`read-resource`命令值得进一步解释。在没有额外参数的情况下，它提供关于资源属性和直接子节点的信息。'
- en: 'For example, the following is the resource scanning of the datasource subsystem,
    which includes the default datasource named `ExampleDS`:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下是对数据源子系统的资源扫描，它包括默认数据源名为`ExampleDS`：
- en: '[PRE11]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You might have noticed the `undefined` attribute for some elements. The information
    provided by the `read-resource` command is limited to listing the name of child
    resources. If you want to read information about all child resources, including
    their corresponding attributes, you have to issue the command with an additional
    (`recursive=true`) parameter, as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到了某些元素的`undefined`属性。`read-resource`命令提供的信息仅限于列出子资源名称。如果你想要读取关于所有子资源的信息，包括它们对应的属性，你必须使用额外的（`recursive=true`）参数执行命令，如下所示：
- en: '[PRE12]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: As you can see, by adding the `recursive=true` parameter, the CLI has also included
    the list of configuration parameters, which are stored as children of the datasource
    element. For the sake of brevity, we have intentionally included just the first
    few datasource parameters.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，通过添加`recursive=true`参数，CLI还包含了配置参数列表，这些参数作为数据源元素的子元素存储。为了简洁起见，我们有意只包括了一些数据源参数。
- en: 'Additionally, some resources can produce metrics, which are collected as runtime
    attributes. These attributes are not shown by default unless you provide the `include-runtime=true`
    parameter. For example, within the datasource subsystem, you can view statistics
    related to the database connection pool:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一些资源可以生成指标，这些指标作为运行时属性被收集。除非你提供`include-runtime=true`参数，否则默认情况下这些属性不会显示。例如，在数据源子系统内，你可以查看与数据库连接池相关的统计信息：
- en: '[PRE13]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If you want to learn more about a resource, you can use the `read-resource-description`
    command, which provides a short description. It also includes a description of
    the resource''s runtime attributes. The output can be quite verbose, so here we
    will just include its head section:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要了解更多关于资源的信息，可以使用`read-resource-description`命令，它提供简短描述。它还包括资源运行时属性描述。输出可能相当冗长，所以这里我们只包括其头部部分：
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `read-operation-names` and `read-operation-description` commands provide
    the list of available operations on a certain resource and their description.
    These produce the information outlined in the previous table, so we will not repeat
    the description here.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`read-operation-names`和`read-operation-description`命令提供关于特定资源上可用的操作及其描述的列表。这些生成与先前表格中概述的信息，因此我们在此不再重复描述。'
- en: 'Next, the `read-children` operations can be used to collect information about
    child nodes. The `read-children-types` command provides information about the
    child resources and is pretty similar to a simple `ls` command. For example, on
    the `root` resource, it will produce the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，可以使用`read-children`操作来收集关于子节点的信息。`read-children-types`命令提供关于子资源的信息，并且与简单的`ls`命令非常相似。例如，在`root`资源上，它将生成以下内容：
- en: '[PRE15]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The `read-children-names` delivers information about a single child resource,
    and it''s pretty much the same as issuing a `cd` resource followed by an `ls`
    command. For example, if we want to know the list of deployed resources on the
    AS, we will type in the following:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`read-children-names`提供关于单个子资源的信息，并且几乎等同于执行`cd`资源后跟一个`ls`命令。例如，如果我们想了解AS上部署的资源列表，我们将输入以下内容：'
- en: '[PRE16]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Finally, the `read-children-resources` command returns information about a
    child node of a certain type, which needs to be provided as an argument. This
    command is equivalent to executing a `read-resource` operation on each child resource.
    In the previous example, when we issue this command on a hypothetical `Enterprise.ear`
    deployment resource, it will provide the subdeployment information, as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`read-children-resources`命令返回关于特定类型子节点的信息，这需要作为参数提供。此命令相当于对每个子资源执行`read-resource`操作。在先前的例子中，当我们对一个假设的`Enterprise.ear`部署资源执行此命令时，它将提供子部署信息，如下所示：
- en: '[PRE17]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Optionally, you can also add `include-runtime=true` as an argument to include
    runtime attributes, as well as `recursive=true` which provides information about
    all child resources recursively.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，你还可以将`include-runtime=true`作为参数添加，以包含运行时属性，以及`recursive=true`，它提供了关于所有子资源的递归信息。
- en: Executing commands with the CLI
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用CLI执行命令
- en: As mentioned earlier, the CLI also includes a set of actions that are not bound
    to your navigation path across the AS tree, but can be issued anywhere to create
    and modify resources.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，CLI还包括一组不绑定到您在AS树中的导航路径的操作，但可以在任何地方发出以创建和修改资源。
- en: 'For example, the `version` command can be issued to retrieve some basic information
    about the application server and the environment when WildFly is running:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可以发出`version`命令以检索WildFly运行时关于应用程序服务器和环境的某些基本信息：
- en: '[PRE18]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In most cases, commands are used as an alias for quickly creating some resources,
    such as JMS destinations and datasources.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，命令用作创建一些资源的别名，例如JMS目标和数据源。
- en: Let's see in the following sections how this can be achieved.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在以下章节中看看如何实现这一点。
- en: Adding a JMS destination
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 添加JMS目标
- en: You can add a JMS queue with the `jms-queue add` command.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`jms-queue add`命令添加JMS队列。
- en: Note
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As you can see, one important difference between operations and commands is
    also the style used to pass parameters. Operations use brackets to pass parameters
    (for example, `recursive=true`). Commands pass parameters using the format (`--parameter`),
    as you do in a Unix shell.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，操作和命令之间的重要区别之一也是传递参数时使用的样式。操作使用括号传递参数（例如，`recursive=true`）。命令使用格式（`--parameter`）传递参数，就像在Unix
    shell中一样。
- en: 'The following is the synopsis of the `jms-queue add` command:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对`jms-queue add`命令的概述：
- en: '[PRE19]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The only mandatory element here is `queue-address`, which specifies the queue
    name and the entries with the JNDI names to which the queue will be bound. The
    optional entries include the `selector` parameter, which can be added to specify
    a selector on the queue to filter messages, and the `durable` parameter, which
    specifies whether the queue should be durable or not (the default is `true`).
    Finally, note the optional `profile` element, which can be used on domain configurations
    to specify on which `profile` the `queue` will be created.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这里唯一的必需元素是`queue-address`，它指定了队列名称以及队列将绑定到的JNDI名称条目。可选条目包括`selector`参数，可以添加以在队列上指定选择器以过滤消息，以及`durable`参数，它指定队列是否应该是持久的（默认为`true`）。最后，请注意可选的`profile`元素，它可以在域配置中使用，以指定将在哪个`profile`上创建`queue`。
- en: Tip
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Remember to start the server with the `-c standalone-full.xml` arguments in
    order to have a server configuration that includes the messaging subsystem. If
    you don't, these commands will result in errors.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 记得使用`-c standalone-full.xml`参数启动服务器，以便拥有包含消息子系统的服务器配置。如果不这样做，这些命令将导致错误。
- en: 'The following command creates a new JMS queue (`queue1`), which is bound under
    the JNDI `queues/queue1` namespace:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令创建了一个新的JMS队列（`queue1`），该队列绑定在JNDI `queues/queue1`命名空间下：
- en: '[PRE20]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The equivalent command to add a JMS topic is `jms-topic add`, which has the
    following syntax:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 添加JMS主题的等效命令是`jms-topic add`，其语法如下：
- en: '[PRE21]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This is very similar to the JMS queue, except that the JMS topic has a smaller
    number of parameters. Neither the `selector` nor the `durable` parameters are
    required here. Have a look at the following command:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这与JMS队列非常相似，只是JMS主题的参数较少。在这里不需要`selector`或`durable`参数。看看以下命令：
- en: '[PRE22]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Creating and modifying datasources
  id: totrans-116
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建和修改数据源
- en: The CLI provides a useful `data-source` command to create datasources. As the
    syntax of this command is quite lengthy, you may find it useful to save it as
    a CLI script and adapt it to your needs.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: CLI提供了一个有用的`data-source`命令来创建数据源。由于该命令的语法相当长，您可能发现将其保存为CLI脚本并适应您的需求很有用。
- en: 'The following is the synopsis of the `data-source` command:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对`data-source`命令的概述：
- en: '[PRE23]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Except for `profile_name`, all the other parameters shown in the preceding code
    snippet are mandatory. That is, you need to specify them if you want to add or
    remove a datasource. As far as parameters are concerned, you need to state, at
    least, the JNDI name for the datasource (`jndi-name`), the driver name (`driver-name`),
    the name of the connection pool (`name`), and the connection URL (`connection-url`).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`profile_name`之外，前面代码片段中显示的所有其他参数都是必需的。也就是说，如果您想添加或删除数据源，则需要指定它们。就参数而言，您至少需要声明数据源的服务器名称（`jndi-name`）、驱动程序名称（`driver-name`）、连接池名称（`name`）和连接URL（`connection-url`）。
- en: 'You can further customize the datasource, just as you would do in your `standalone.xml`
    file, by adding some optional parameters. Let''s see a concrete example where
    we create a MySQL datasource. The first thing we need to do is to provide a JDBC-compliant
    driver by deploying the JAR archive. Considering you are using standalone mode,
    just copy the JDBC JAR file into the `deployments` folder. Take a look at the
    following screenshot:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过添加一些可选参数来进一步自定义数据源，就像您在`standalone.xml`文件中所做的那样。让我们看看一个具体的例子，其中我们创建了一个MySQL数据源。首先，我们需要做的是通过部署JAR存档提供JDBC兼容的驱动程序。考虑到您正在使用独立模式，只需将JDBC
    JAR文件复制到`deployments`文件夹中。请看以下截图：
- en: '![Creating and modifying datasources](img/6232OS_07_04.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![创建和修改数据源](img/6232OS_07_04.jpg)'
- en: 'A simpler approach is to deploy the JDBC driver via the command line. Assuming
    you start the command-line interface from the folder where your driver is housed,
    you will run the following command:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 一种更简单的方法是通过命令行部署JDBC驱动程序。假设您从包含驱动程序的文件夹中启动命令行界面，您将运行以下命令：
- en: '[PRE24]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can alternatively choose to install the JDBC driver as a module, which is
    the preferred way. This procedure is shown in [Chapter 3](ch03.html "Chapter 3. Configuring
    Enterprise Services"), *Configuring Enterprise Services*. For the purpose of this
    example, we simply deploy the driver, as this expedites the installation procedure.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以选择将JDBC驱动程序作为模块安装，这是首选方式。此过程在[第3章](ch03.html "第3章。配置企业服务") *配置企业服务* 中展示。为了本例的目的，我们只是部署了驱动程序，因为这加快了安装过程。
- en: 'Now, let''s verify that the driver has been correctly installed on the datasource
    subsystem. We can do this by means of the `installed-drivers-list` command on
    the datasources subsystem, as follows:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们验证驱动程序是否已正确安装在数据源子系统上。我们可以通过在数据源子系统上的`installed-drivers-list`命令来完成此操作，如下所示：
- en: '[PRE25]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'As you can see, there are now two drivers installed: the default `H2` driver
    and the `MySQL` driver that we installed previously.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，现在已安装了两个驱动程序：默认的`H2`驱动程序和我们之前安装的`MySQL`驱动程序。
- en: 'Now, we are ready to create a new datasource using the MySQL JDBC driver:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已准备好使用MySQL JDBC驱动程序创建一个新的数据源：
- en: '[PRE26]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: In this example, we just created a MySQL-bound datasource using a custom pool
    size of a maximum of `30` connections.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们仅创建了一个使用最大连接数`30`的自定义连接池的MySQL绑定数据源。
- en: Note
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You don't have to remember all datasource parameter names. Just use the *Tab*
    key to autocomplete the parameter name. Also, take care that your driver name
    matches with that of the output created when you ran the `installed-drivers-list`
    command.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 您不需要记住所有数据源参数的名称。只需使用*Tab*键来自动完成参数名称。同时，请注意您的驱动程序名称与您运行`installed-drivers-list`命令时创建的输出匹配。
- en: 'The `data-source` command can also be used to remove a datasource from the
    configuration. This can be done by passing the `remove` parameter and the `name`
    of the `datasource`, as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`data-source`命令也可以用来从配置中删除数据源。这可以通过传递`remove`参数和`datasource`的`name`来实现，如下所示：'
- en: '[PRE27]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Note
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can also add and remove datasources using operations executed on the datasource
    system resource. See [Appendix](apa.html "Appendix A. CLI References"), *CLI References*,
    which contains a compendium of the most useful CLI commands.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过在数据源系统资源上执行的操作来添加和删除数据源。请参阅[附录](apa.html "附录A。CLI参考") *CLI参考*，其中包含最有用的CLI命令集。
- en: Creating and modifying XA datasources
  id: totrans-139
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 创建和修改XA数据源
- en: 'Modifying an XA datasource class for your connections is similar to that of
    a `data-source`. The main difference is that you will use the `xa-data-source`
    command, as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 修改用于您连接的XA数据源类与`data-source`类似。主要区别在于您将使用`xa-data-source`命令，如下所示：
- en: '[PRE28]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: There are three arguments required to create an XA datasource. You need a unique
    `name`, the `jndi-name`, and finally, the `driver-name`.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 创建XA数据源需要三个参数。您需要一个唯一的`name`，`jndi-name`，最后是`driver-name`。
- en: 'This will result in the following code snippet being added to your configuration
    file:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您的配置文件中添加以下代码片段：
- en: '[PRE29]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Getting help from the CLI
  id: totrans-145
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 从CLI获取帮助
- en: If the syntax of CLI commands seem a bit overwhelming to you, don't despair!
    Besides the tab autocompletion functionality, the CLI has also has a main page
    for each command, just as the Unix shell does.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果CLI命令的语法对您来说有点令人望而生畏，请不要绝望！除了Tab自动完成功能外，CLI还有每个命令的主页，就像Unix shell一样。
- en: 'If you issue a generic `help` command, the CLI will return a generic quick-start
    guide to the interface. On the other hand, when passed as an argument to a command,
    it provides a helpful description of the command synopsis and their arguments.
    Take a look at the following code snippet:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发出一个通用的 `help` 命令，CLI 将返回一个通用的快速入门指南到该界面。另一方面，当作为命令的参数传递时，它提供了对命令概要及其参数的有帮助描述。看看下面的代码片段：
- en: '[PRE30]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Executing CLI scripts in batch
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 批处理执行 CLI 脚本
- en: The `batch` mode allows the execution of multiple CLI commands as an atomic
    unit. Just as you would expect from an ordinary transaction, if any of the commands
    or operations fail, the changes are rolled back. On the other hand, if the execution
    ends without any error, the changes are committed.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '`batch` 模式允许将多个 CLI 命令作为一个原子单元执行。正如你从普通事务中期望的那样，如果任何命令或操作失败，更改将被回滚。另一方面，如果执行结束而没有错误，更改将被提交。'
- en: Not every command can be part of a batch. For example, navigation commands such
    as `cd`, `pwd`, or `help` are excluded because they do not reflect any change
    to the server configuration.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 并非每个命令都可以成为批处理的一部分。例如，导航命令如 `cd`、`pwd` 或 `help` 被排除，因为它们不会反映对服务器配置的任何更改。
- en: You can mark the beginning of a batch with the `batch` command. You will know
    when you are in the `batch` mode because the prompt will be marked by the `#`
    sign.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `batch` 命令标记批处理的开始。当你处于 `batch` 模式时，你会知道，因为提示符将被 `#` 符号标记。
- en: 'In order to mark the end of a batch sequence, you have to use the `run-batch`
    command. Once completed, the executed batch will be discarded and the CLI will
    exit the `batch` mode. Take a look at the following example:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 为了标记批处理序列的结束，你必须使用 `run-batch` 命令。一旦完成，所执行的批处理将被丢弃，CLI 将退出 `batch` 模式。看看下面的示例：
- en: '[PRE31]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Before executing the batch by typing `run-batch`, you can get the list of all
    `batch` commands entered so far by issuing the `list-batch` command:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过输入 `run-batch` 执行批处理之前，你可以通过发出 `list-batch` 命令来获取迄今为止输入的所有 `batch` 命令的列表：
- en: '[PRE32]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Advanced batch commands
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 高级批处理命令
- en: 'Script batching can indeed be more complex than just starting and executing
    a list of commands. As a matter of fact, by pressing the *Tab* completion key
    when you are in the `batch` mode, you should see several additional commands available.
    One of the most useful ones is the `holdback-batch` command, which can be used
    to temporarily pause the batch of commands, as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本批处理确实可能比仅仅启动和执行一系列命令更复杂。事实上，当你处于 `batch` 模式时，按 *Tab* 完成键，你应该会看到几个额外的命令可用。其中最有用之一是
    `holdback-batch` 命令，它可以用来暂时暂停命令序列，如下所示：
- en: '[PRE33]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'In order to continue your batch of commands, just issue the `batch` command
    again, as follows:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续你的命令序列，只需再次发出 `batch` 命令，如下所示：
- en: '[PRE34]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'It''s even possible to save the batch by assigning a unique name so that you
    can have multiple save points in your scripts, as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 你甚至可以通过分配一个唯一的名称来保存批处理，这样你可以在脚本中有多个保存点，如下所示：
- en: '[PRE35]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Later on, you can continue the execution by specifying the holdback name, as
    follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你可以通过指定保留名称来继续执行，如下所示：
- en: '[PRE36]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'When executed with the `-l` parameter, the `batch` command provides the list
    of batch files that are held:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 `-l` 参数执行时，`batch` 命令提供所持有的批处理文件列表：
- en: '[PRE37]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The following table lists all batch-related commands:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了所有与批处理相关的命令：
- en: '| Command | Description |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| 命令 | 描述 |'
- en: '| --- | --- |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `batch` | This command starts a batch of commands. When the batch is paused,
    it reactivates the batch. |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| `batch` | 此命令启动一个批处理命令。当批处理暂停时，它将重新激活批处理。 |'
- en: '| `list-batch` | This command lists the commands that have been added to the
    batch. |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| `list-batch` | 此命令列出已添加到批处理的命令。 |'
- en: '| `run-batch` | This command executes the currently active batch of commands
    and exits the `batch` mode. |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| `run-batch` | 此命令执行当前活动的批处理命令并退出 `batch` 模式。 |'
- en: '| `holdback-batch` | This command saves the currently active batch and exits
    the `batch` mode, without executing the batch. The held-back batch can later be
    re-activated by invoking batch commands. |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| `holdback-batch` | 此命令保存当前活动的批处理并退出 `batch` 模式，而不执行批处理。保留的批处理可以在以后通过调用批处理命令重新激活。
    |'
- en: '| `clear-batch` | This command removes all the existing command lines from
    the currently active batch. The CLI stays in the `batch` mode after the command
    is executed. |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| `clear-batch` | 此命令从当前活动的批处理中删除所有现有命令行。在命令执行后，CLI 仍处于 `batch` 模式。 |'
- en: '| `discard-batch` | This command discards the currently active batch. All the
    commands added to the batch will be removed, the batch will be discarded, and
    the CLI will exit the batch mode. |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| `discard-batch` | 此命令丢弃当前活动的批次。所有添加到批次的命令将被移除，批次将被丢弃，CLI将退出批次模式。|'
- en: '| `edit-batch-line` | This command replaces the existing command line from
    the currently active batch with the specified line number with the new command
    line. |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| `edit-batch-line` | 此命令将当前活动的批次中指定行号的现有命令行替换为新命令行。|'
- en: '| `remove-batch-line` | This command removes an existing command line specified
    with a line number argument from the currently active batch. |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| `remove-batch-line` | 此命令从当前活动的批次中移除指定行号参数的现有命令行。|'
- en: '| `move-batch-line` | This command moves the existing line from the specified
    position to the new position. |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| `move-batch-line` | 此命令将现有行从指定位置移动到新位置。|'
- en: Executing scripts in a file
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在文件中执行脚本
- en: 'Until now, we have seen CLI commands as part of an interactive session. You
    can, however, execute commands in a non-interactive fashion, adding them in a
    file, just as a shell script. Suppose you created a sample `test.cli` file used
    to issue a redeploy command:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已将CLI命令视为交互会话的一部分。然而，您也可以以非交互方式执行命令，将它们添加到文件中，就像shell脚本一样。假设您创建了一个用于发布重新部署命令的示例`test.cli`文件：
- en: '[PRE38]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Then launch the CLI with the `-file` parameter, as follows:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用以下方式通过`-file`参数启动CLI：
- en: '[PRE39]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Windows users can use the following equivalent:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Windows用户可以使用以下等效方法：
- en: '[PRE40]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Note
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can pass the `--user` and `--password` arguments to the `jboss-cli.sh` or
    `jboss-cli.bat` call if you need an authentication on the management interface.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要在管理接口上进行身份验证，可以将`--user`和`--password`参数传递给`jboss-cli.sh`或`jboss-cli.bat`调用。
- en: 'Another way to execute commands in a non-interactive way is by passing the
    `--commands` parameter to the CLI containing the list of command lines separated
    by a comma. For example, the previous script can be also be executed this way
    (Unix users):'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 以非交互方式执行命令的另一种方法是向CLI传递包含以逗号分隔的命令行列表的`--commands`参数。例如，前面的脚本也可以这样执行（Unix用户）：
- en: '[PRE41]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The equivalent script for Windows users will be as follows:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Windows用户的等效脚本如下：
- en: '[PRE42]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'We will get the following output:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '[PRE43]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Redirecting non-interactive output
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重定向非交互式输出
- en: 'When you execute the CLI in a non-interactive way, you can redirect the output
    to a file, which would otherwise be printed on the screen. Just as you would do
    for a shell command, use the `>` operator to redirect the output:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 当您以非交互方式执行CLI时，可以将输出重定向到文件，否则将打印在屏幕上。就像您会对shell命令做的那样，使用`>`运算符来重定向输出：
- en: '[PRE44]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Taking snapshots of the configuration
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对配置进行快照
- en: Everyone makes mistakes, but many of them are preventable. Whenever you are
    performing many changes to your configuration, it's always a good idea to save
    copies of your work. That's where snapshots come in; one of the advantages of
    using the CLI is the ability to create snapshots of the configuration, which are
    stored in its `history` folder.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都会犯错误，但其中许多是可以预防的。每次您对配置进行多项更改时，保存工作副本总是一个好主意。这就是快照的作用；使用CLI的一个优点是能够创建配置的快照，这些快照存储在其`history`文件夹中。
- en: 'The `history` folder is located just one step under the `configuration` folder.
    Standalone servers have a `history` folder named `standalone_xml_history` that,
    at start up, contains the following files:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`history`文件夹位于`configuration`文件夹的下一级。独立服务器有一个名为`standalone_xml_history`的`history`文件夹，在启动时包含以下文件：'
- en: '![Taking snapshots of the configuration](img/6232OS_07_05.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![对配置进行快照](img/6232OS_07_05.jpg)'
- en: The domain configuration, on the other hand, provides two backup directories
    both for the domain configuration file and the host configuration file. These
    folders are named `domain_xml_history` and `host_xml_history`, respectively. To
    make the reading less verbose, we will describe the snapshot mechanisms using
    a standalone server. The same rules also apply to domain servers, bearing in mind
    that the AS takes snapshots of both the `domain.xml` and `host.xml` files.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，域名配置提供了两个备份目录，分别用于域名配置文件和主机配置文件。这些文件夹分别命名为`domain_xml_history`和`host_xml_history`。为了使阅读更加简洁，我们将使用独立服务器来描述快照机制。相同的规则也适用于域名服务器，需要注意的是AS会同时快照`domain.xml`和`host.xml`文件。
- en: Let's see now what the history files are about. The `standalone.initial.xml`
    file contains the original application server's configuration file. This file
    is never overwritten by WildFly.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看历史文件的内容。`standalone.initial.xml` 文件包含原始应用服务器的配置文件。此文件永远不会被 WildFly 覆盖。
- en: Note
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you need to restore the initial configuration, do not throw away your application
    server installation! Just replace the `standalone.xml` file with `standalone_xml_history/standalone.initial.xml`.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要恢复初始配置，请不要丢弃您的应用服务器安装！只需将 `standalone.xml` 文件替换为 `standalone_xml_history/standalone.initial.xml`。
- en: The `standalone.boot.xml` file contains the AS configuration that was used for
    the last successful boot of the server. This gets overwritten every time we boot
    the server successfully.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`standalone.boot.xml` 文件包含服务器上次成功启动时使用的 AS 配置。每次服务器成功启动时，这个文件都会被覆盖。'
- en: Note
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to undo all changes in the current session, just replace the `standalone.xml`
    file with `standalone_xml_history/standalone.boot.xml`.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想撤销当前会话中的所有更改，只需将 `standalone.xml` 文件替换为 `standalone_xml_history/standalone.boot.xml`。
- en: Finally, the `standalone.last.xml` file contains the last successful configuration
    committed by the application server.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`standalone.last.xml` 文件包含应用服务器提交的最后一个成功配置。
- en: What the application server saves for you
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用服务器为您保存的内容
- en: The `current` folder is used as a temporary folder to store changes in the configuration
    that happened in the current session. Each change in the application server configuration
    model will result in the creation of a file named `standalone.v[n].xml`. Here,
    `n` is the number of the change that is applied (`standalone.v1.xml` for the initial
    configuration, `standalone.v2.xml` for the first change, and so on).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`current` 文件夹用作临时文件夹，用于存储当前会话中发生的配置更改。应用服务器配置模型中的每次更改都会创建一个名为 `standalone.v[n].xml`
    的文件。在这里，`n` 是应用更改的次数（初始配置为 `standalone.v1.xml`，第一次更改为 `standalone.v2.xml`，依此类推）。'
- en: 'When the application server is restarted, these files are moved into a timestamped
    folder within the `standalone_xml_history` folder. As you can see in the following
    screenshot, the changes during the last session are moved at reboot into the `20140702-215555794`
    folder:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用服务器重新启动时，这些文件会被移动到 `standalone_xml_history` 文件夹中的一个带时间戳的文件夹中。正如您在以下屏幕截图中所见，上次会话中的更改在重启时被移动到
    `20140702-215555794` 文件夹中：
- en: '![What the application server saves for you](img/6232OS_07_06.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![应用服务器为您保存的内容](img/6232OS_07_06.jpg)'
- en: Note
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The timestamped folders are rotated by the application server every 30 days.
    If you need to store a core view of the application server configuration, you
    should take snapshots of the application server model. The next section shows
    how to do this.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 应用服务器每 30 天轮换带时间戳的文件夹。如果您需要存储应用服务器配置的核心视图，您应该拍摄应用服务器模型的快照。下一节将展示如何进行此操作。
- en: Taking your own snapshots
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拍摄自己的快照
- en: 'As suggested by the earlier warning, you can also take snapshots on demand,
    whenever you need it. Snapshots created by the user are stored directly in the
    `snapshot` folder. In order to take a snapshot of the configuration, just issue
    the `take-snapshot` command, and the CLI will back up your configuration. Take
    a look at the following block of code:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如早期警告所建议的，您还可以根据需要随时拍摄快照。用户创建的快照直接存储在 `snapshot` 文件夹中。为了拍摄配置的快照，只需发出 `take-snapshot`
    命令，CLI 将备份您的配置。请查看以下代码块：
- en: '[PRE45]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'You can check the list of available snapshots using the `list-snapshots` command:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 `list-snapshots` 命令检查可用的快照列表：
- en: '[PRE46]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'You can, at any time, delete a particular snapshot using the `delete-snapshot`
    command, which requires the snapshot name as the parameter. Let''s suppose we
    need to delete the snapshot we just created:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以随时使用 `delete-snapshot` 命令删除特定的快照，该命令需要快照名称作为参数。假设我们需要删除我们刚刚创建的快照：
- en: '[PRE47]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: History of CLI
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CLI 历史记录
- en: All commands executed within a CLI session are stored in history, much like
    shell commands for Unix systems. CLI commands are kept in memory and also persisted
    on the filesystem in a file named `.jboss-cli-history` in the user's home directory.
    You will notice that the latest 500 commands (default history size) entered in
    previous sessions are part of the history.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CLI 会话中执行的 所有命令都存储在历史记录中，就像 Unix 系统的 shell 命令一样。CLI 命令保存在内存中，并在用户的家目录中名为 `.jboss-cli-history`
    的文件系统中持久化。您会注意到，之前会话中输入的最新 500 个命令（默认历史记录大小）是历史记录的一部分。
- en: 'If you want to have a look at the CLI history, just issue the `history` command:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看 CLI 历史记录，只需输入 `history` 命令：
- en: '[PRE48]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: You can also use the arrow keys to navigate back and forth through the history
    of commands and operations, much like what you do with a Linux bash shell.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用箭头键在命令和操作的历史记录中前后导航，就像你在 Linux bash shell 中做的那样。
- en: 'The `history` command supports three optional arguments, which can be used
    to temporarily disable/enable or clear the history. In the following table, we
    mention their outcome:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '`history` 命令支持三个可选参数，可以用来暂时禁用/启用或清除历史记录。在以下表中，我们提到了它们的输出结果：'
- en: '| Argument | Effect |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 影响 |'
- en: '| --- | --- |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `disable` | This command disables history expansion (but will not clear the
    previously recorded history). |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| `disable` | 此命令禁用历史扩展（但不会清除之前记录的历史）。|'
- en: '| `enable` | This command re-enables history expansion (starting from the last
    recorded command before the history expansion was disabled). |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| `enable` | 此命令重新启用历史扩展（从历史扩展被禁用之前的最后一个记录的命令开始）。|'
- en: '| `clear` | This command clears the in-memory history (but not the file one).
    |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| `clear` | 此命令清除内存中的历史记录（但不会清除文件历史记录）。|'
- en: The web admin console
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络管理控制台
- en: Historically, the JBoss AS has always provided a web-based application to perform
    some administration and management tasks. Versions 4.x and earlier used the `jmx-console`
    to read/write and display the value of `MBeans`, which were the backbone of the
    application server. The `jmx-console` was indeed a useful tool; however, it also
    required some degree of experience to get started with. Besides this, the information
    contained in this application was fragmented across many `MBeans`. For example,
    the datasource information was contained in four `MBeans`, thus making it cumbersome
    to manage this resource.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，JBoss AS 总是提供基于 Web 的应用程序来执行一些管理和任务。4.x 版本及更早版本使用 `jmx-console` 来读取/写入并显示
    `MBeans` 的值，`MBeans` 是应用程序服务器的主干。`jmx-console` 确实是一个有用的工具；然而，它也需要一定程度的经验才能开始使用。此外，此应用程序中包含的信息分布在许多
    `MBeans` 中。例如，数据源信息包含在四个 `MBeans` 中，这使得管理此资源变得繁琐。
- en: The 5.x and 6.x release proposed a simpler-to-use approach made up of the admin
    console, which was built as a seam-based web application. Although the new admin
    console was a neat and simple application, some criticized it due to the fact
    that it consumed a good amount of memory and startup time.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 5.x 和 6.x 版本提出了一种更易于使用的方法，由管理控制台组成，该控制台作为一个基于 seam 的 Web 应用程序构建。尽管新的管理控制台是一个整洁且简单的应用程序，但有些人批评它因为消耗了大量的内存和启动时间。
- en: WildFly continues to use the web console introduced in JBoss AS 7, which you
    already saw in a previous chapter. It is built using **Google** **Web** **Toolkit**
    (**GWT**) and uses the HTTP management API to configure a management domain or
    a standalone server.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 继续使用在 JBoss AS 7 中引入的网络控制台，你已经在之前的章节中看到了它。它是使用 **Google** **Web** **Toolkit**
    （**GWT**）构建的，并使用 HTTP 管理API来配置管理域或独立服务器。
- en: Like many GWT applications, the web console uses a JSON-encoded protocol and
    a de-typed RPC style API to describe and execute management operations against
    a managed domain or standalone server.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 与许多 GWT 应用程序一样，网络控制台使用 JSON 编码协议和去类型的 RPC 风格 API 来描述和执行对托管域或独立服务器的管理操作。
- en: Accessing the admin console
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问管理控制台
- en: 'WildFly, by default, uses port 9990 to serve the admin console. You can access
    it at `http://localhost:9990` as configured in your `standalone.xml/domain.xml`:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 默认使用端口 9990 来服务管理控制台。你可以通过 `http://localhost:9990` 访问它，如你的 `standalone.xml/domain.xml`
    配置所示：
- en: '[PRE49]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Once you have logged in to the web admin console, you will land on the application
    home page. In standalone mode, you will see four main tabs: **Home**, **Configuration**,
    **Runtime**, and **Administration**. These tabs are explained as follows:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你登录到网络管理控制台，你将进入应用程序首页。在独立模式下，你会看到四个主要选项卡：**首页**、**配置**、**运行时**和**管理**。以下是对这些选项卡的说明：
- en: '**Home**: This tab contains a brief description of each tab, a variety of quick
    links to achieve common tasks, and lots of links for other useful resources, as
    shown in the following screenshot:![Accessing the admin console](img/6232OS_07_07.jpg)'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**首页**：此选项卡包含每个选项卡的简要描述，各种快速链接以完成常见任务，以及许多指向其他有用资源的链接，如下面的截图所示：![访问管理控制台](img/6232OS_07_07.jpg)'
- en: '**Configuration**: This tab can be used to model the application server configuration,
    as illustrated in the following screenshot:![Accessing the admin console](img/6232OS_07_08.jpg)'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置**：此选项卡可用于建模应用程序服务器配置，如下面的截图所示：![访问管理控制台](img/6232OS_07_08.jpg)'
- en: '**Runtime**: This tab can be used to manage deployments, as we learned in [Chapter
    6](ch06.html "Chapter 6. Application Structure and Deployment"), *Application
    Structure and Deployment*. In the next section, we will show how easy configuring
    server profiles can be using the web admin console:![Accessing the admin console](img/6232OS_07_09.jpg)'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行时**：此选项卡可用于管理部署，正如我们在[第6章](ch06.html "第6章。应用程序结构和部署") *应用程序结构和部署* 中所学。在下一节中，我们将展示使用Web管理控制台配置服务器配置文件有多简单：![访问管理控制台](img/6232OS_07_09.jpg)'
- en: '**Administration**: This tab is used to configure users, groups, and roles.
    We will cover this section in greater detail in [Chapter 10](ch10.html "Chapter 10. Securing
    WildFly"), *Securing WildFly*.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理**：此选项卡用于配置用户、组和角色。我们将在[第10章](ch10.html "第10章。保护WildFly") *保护WildFly* 中更详细地介绍这一部分。'
- en: Configuring server profiles
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置服务器配置文件
- en: The server profile configuration is located in the left-hand side of the web
    application, and can be found under the **Configuration** tab. When running the
    domain mode, you can switch between profiles by choosing the relevant profile
    from the combobox in the top left-hand corner of the page.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器配置文件位于Web应用的左侧，可以在**配置**选项卡下找到。在运行域模式时，你可以通过在页面左上角的组合框中选择相关配置文件来切换配置文件。
- en: As soon as you open the **Configuration** tab, you will see the set of subsystems
    that can be configured through the web interface.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你打开**配置**选项卡，你将看到可以通过Web界面配置的一组子系统。
- en: 'In [Chapter 2](ch02.html "Chapter 2. Configuring the Core WildFly Subsystems"),
    *Configuring the Core WildFly Subsystems*, and [Chapter 3](ch03.html "Chapter 3. Configuring
    Enterprise Services"), *Configuring Enterprise Services*, we showed how to configure
    various resources using the main configuration file. If you are the kind of system
    administrator who prefers **windows, icons, menus, and pointers** (**WIMP**) interfaces,
    then the next sections are for you. Configuring the resources via the web console
    is pretty intuitive, so to give you a taste, we will just cover the following
    topics:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.html "第2章。配置核心WildFly子系统") *配置核心WildFly子系统* 和 [第3章](ch03.html "第3章。配置企业服务")
    *配置企业服务* 中，我们展示了如何使用主要配置文件配置各种资源。如果你是那种喜欢**窗口、图标、菜单和指针**（**WIMP**）界面的系统管理员，那么接下来的部分就是为你准备的。通过Web控制台配置资源非常直观，为了给你一个体验，我们只需涵盖以下主题：
- en: Configuring datasources
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置数据源
- en: Configuring JMS resources
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置JMS资源
- en: Configuring socket-binding groups
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置套接字绑定组
- en: Configuring datasources
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置数据源
- en: You can navigate directly to the datasources configuration panel from the list
    of **Common Tasks** on the homepage. Otherwise, you will need to click on the
    **Configuration** tab, followed by the **Subsystems** | **Connector** | **Datasources**
    link on the left-hand side. This will switch the main panel to the datasource
    configuration panel. This panel contains two upper tabs to configure **DATASOURCE**
    and **XA DATASOURCE**. Let's see what the first tab contains.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以直接从主页上的**常见任务**列表导航到数据源配置面板。否则，你需要点击**配置**选项卡，然后点击左侧的**子系统** | **连接器** |
    **数据源**链接。这将切换主面板到数据源配置面板。此面板包含两个上方的选项卡，用于配置**数据源**和**XA数据源**。让我们看看第一个选项卡包含什么。
- en: In the middle of the panel, you can find the list of configured datasources.
    The actions that can be applied are located just above the list of datasources.
    You can create a new datasource by clicking on the **Add** button. You can also
    find the **Remove** and **Disable** buttons next to the **Add** button.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在面板中间，你可以找到配置的数据源列表。可以应用的操作位于数据源列表上方。你可以通过点击**添加**按钮来创建一个新的数据源。你还可以在**添加**按钮旁边找到**删除**和**禁用**按钮。
- en: Editing or deleting an existing datasource is a straightforward task that can
    be executed with the click of a button. The same can be said about enabling and
    disabling the selected datasource.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑或删除现有数据源是一个简单的任务，只需点击按钮即可执行。同样，启用和禁用所选数据源也是如此。
- en: 'Here, we will show how to add a new datasource to your standalone configuration,
    which requires a few simple steps to be completed. Once you click on the **Add**
    button, a three-step wizard will guide you through the creation of the datasource.
    Let''s configure a sample MySQL datasource for this purpose by performing the
    following steps:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将展示如何将新的数据源添加到您的独立配置中，这需要完成几个简单的步骤。一旦您点击**添加**按钮，一个三步向导将引导您完成数据源创建。让我们通过以下步骤配置一个示例MySQL数据源：完成以下步骤：
- en: The first information required will be the datasource name and its JNDI binding,
    as shown in the following screenshot:![Configuring datasources](img/6232OS_07_10.jpg)
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 需要的第一个信息将是数据源名称及其JNDI绑定，如下截图所示：![配置数据源](img/6232OS_07_10.jpg)
- en: The next step will be selecting the proper JDBC driver for your datasource.
    Provided that you have successfully installed a JDBC driver on your AS, you should
    have it listed as an available driver:![Configuring datasources](img/6232OS_07_11.jpg)
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个步骤将是选择适合您数据源的正确JDBC驱动程序。假设您已经在您的AS上成功安装了一个JDBC驱动程序，它应该列在可用驱动程序中：![配置数据源](img/6232OS_07_11.jpg)
- en: Choose the MySQL JDBC driver, and in the next (last) step, you will be required
    to enter the JDBC URL of the datasource along with the **Username** and **Password**
    credentials, as shown in the following screenshot:![Configuring datasources](img/6232OS_07_12.jpg)
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择MySQL JDBC驱动程序，在接下来的（最后）步骤中，您将需要输入数据源的JDBC URL以及**用户名**和**密码**凭据，如下截图所示：![配置数据源](img/6232OS_07_12.jpg)
- en: Clicking on **Done** completes the wizard, and you will be redirected to the
    main panel, where the new datasource is now listed in the datasource list. Finally,
    you will need to enable the new datasource by clicking on it and then clicking
    on **Enable**:![Configuring datasources](img/6232OS_07_13.jpg)
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**完成向导，您将被重定向到主面板，其中新的数据源现在列在数据源列表中。最后，您需要通过点击它然后点击**启用**来启用新的数据源：![配置数据源](img/6232OS_07_13.jpg)
- en: Creating a new XA datasource
  id: totrans-263
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建新的XA数据源
- en: As we have shown in the *The command-line interface (CLI)* section, an XA datasource
    requires your JDBC URL to be entered as an XA property. This is also the case
    when creating the XA datasource via the admin console.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在*命令行界面（CLI）*部分所展示的，一个XA数据源需要您将JDBC URL输入为XA属性。在通过管理控制台创建XA数据源时也是如此。
- en: 'Thus, the datasource JNDI naming and driver selection stays the same as for
    non-XA datasources. In the following screenshot, we illustrate the last two steps
    needed to complete the XA datasource creation:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，数据源JNDI命名和驱动程序选择与非XA数据源相同。在以下截图中，我们说明了完成XA数据源创建所需的最后两个步骤：
- en: '![Creating a new XA datasource](img/6232OS_07_14.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![创建新的XA数据源](img/6232OS_07_14.jpg)'
- en: In the fourth step, as shown in the following screenshot, underneath **Username**
    and **Password**, you will notice the option of adding a security domain. You
    can leave this blank for now. We will discuss security domains in [Chapter 10](ch10.html
    "Chapter 10. Securing WildFly"), *Securing WildFly*.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在第四步，如下截图所示，在**用户名**和**密码**下方，您将注意到添加安全域的选项。您现在可以留空。我们将在[第10章](ch10.html "第10章。保护WildFly")*保护WildFly*中讨论安全域。
- en: '![Creating a new XA datasource](img/6232OS_07_15.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![创建新的XA数据源](img/6232OS_07_15.jpg)'
- en: Configuring JMS destinations
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置JMS目的地
- en: 'Creating new **Queues** and **Topics** using the web console is even more simple.
    Perform the following steps:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Web控制台创建新的**队列**和**主题**更加简单。执行以下步骤：
- en: From the **Configuration** menu, select the **Messaging** option in the subsystems
    menu. The main panel will switch to display the **Messaging** providers. Now,
    select the required provider, and click on **View**:![Configuring JMS destinations](img/6232OS_07_16.jpg)
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**配置**菜单中，在子系统菜单中选择**消息传递**选项。主面板将切换以显示**消息传递**提供者。现在，选择所需的提供者，然后点击**查看**：![配置JMS目的地](img/6232OS_07_16.jpg)
- en: From there, select the resource you want to create (**Queue** or **Topic**).
    Then, click on the **Add** button to create a new one:![Configuring JMS destinations](img/6232OS_07_17.jpg)
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，选择您想要创建的资源（**队列**或**主题**）。然后，点击**添加**按钮来创建一个新的：![配置JMS目的地](img/6232OS_07_17.jpg)
- en: If you need to create a new **Queue**, all you have to do is complete the next
    simple dialog box, which is shown in the following screenshot:![Configuring JMS
    destinations](img/6232OS_07_18.jpg)
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您需要创建一个新的**队列**，您只需完成下一个简单的对话框，如下截图所示：![配置JMS目的地](img/6232OS_07_18.jpg)
- en: When you click on **Save**, the new JMS resource will be enlisted in the JMS
    subsystem panel (and also be persisted in the main configuration file), as shown
    in the following screenshot:![Configuring JMS destinations](img/6232OS_07_19.jpg)
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您点击**保存**时，新的JMS资源将被列入JMS子系统面板（并且也会保存在主配置文件中），如下面的截图所示：![配置JMS目标](img/6232OS_07_19.jpg)
- en: Configuring socket-binding groups
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置套接字绑定组
- en: Changing the socket bindings of the application server can be used to solve
    port conflicts with other applications or even other instances of WildFly. If
    you are running the application in the `domain` mode, the best thing you can do
    is specify a port offset for your servers, as pointed out in [Chapter 4](ch04.html
    "Chapter 4. The Undertow Web Server"), *The Undertow Web Server*, which is all
    about domain servers.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 更改应用程序服务器的套接字绑定可以用来解决与其他应用程序或WildFly的其他实例的端口冲突。如果您正在以`domain`模式运行应用程序，您可以做的最好的事情是为您的服务器指定一个端口号偏移量，正如[第4章](ch04.html
    "第4章。Undertow Web服务器")中指出的，该章节全部关于域服务器。
- en: If, however, you are running in the `standalone` mode, and you have to change
    just one or more port addresses, then it will probably be more easily achievable
    via the web console.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果您正在以`standalone`模式运行，并且只需更改一个或多个端口号，那么通过Web控制台可能更容易实现。
- en: 'To reach the **Socket** **Binding** **groups** option, perform the following
    steps:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 要到达**套接字绑定组**选项，请执行以下步骤：
- en: Click on **Socket Binding** on the left-hand side, and then click on **View**
    for the socket-binding group you want to modify.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧单击**套接字绑定**，然后单击您想要修改的套接字绑定组的**查看**。
- en: Then, select the socket binding you want to change, for example, the **http**
    server port. Then, scroll down to reveal the edit options. Click on the **Edit**
    button and update the port value, as shown in the following screenshot:![Configuring
    socket-binding groups](img/6232OS_07_20.jpg)
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择您想要更改的套接字绑定，例如**http**服务器端口。然后，向下滚动以显示编辑选项。单击**编辑**按钮并更新端口号，如下面的截图所示：![配置套接字绑定组](img/6232OS_07_20.jpg)
- en: When you are done, click on the **Save** button.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，单击**保存**按钮。
- en: Tip
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Server restart needed?**'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '**需要服务器重启吗？**'
- en: Changing the socket binding groups does not produce the immediate effect of
    changing the server port. The updated configuration must be reloaded by the AS.
    You can simply restart the application server by issuing the `restart` command
    or, even better, by issuing the `reload` command from the CLI.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 更改套接字绑定组不会立即产生更改服务器端口的即时效果。更新的配置必须由AS重新加载。您可以简单地通过发出`restart`命令重启应用程序服务器，或者，更好的是，通过从CLI发出`reload`命令。
- en: The CLI or web console?
  id: totrans-285
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CLI或Web控制台？
- en: Both management interfaces are powerful tools, and in some circumstances, one
    might be a better choice than another.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个管理接口都是强大的工具，在某些情况下，一个可能比另一个更好。
- en: For example, the CLI provides a huge addition to the application server, and
    in a relatively short amount of time, it will let you configure its every resource,
    including runtime metrics, in fine detail.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，CLI为应用程序服务器提供了巨大的补充，在相对较短的时间内，它将让您以精细的细节配置其每个资源，包括运行时指标。
- en: On the other hand, the web console provides a simple and elegant way to manage
    your AS resources with little or no learning curve. In particular, we have shown
    in [Chapter 3](ch03.html "Chapter 3. Configuring Enterprise Services"), *Configuring
    Enterprise Services*, how it can be easily used to manage the basic domain functionalities,
    such as configuring, starting, and stopping server groups and hosts.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，Web控制台提供了一个简单而优雅的方式来管理您的AS资源，几乎不需要学习曲线。特别是，我们在[第3章](ch03.html "第3章。配置企业服务")中展示了如何轻松地使用它来管理基本域功能，例如配置、启动和停止服务器组和主机。
- en: 'The following table shows a summary of the main benefits of each interface:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了每个接口的主要益处的摘要：
- en: '| Tool | Best for |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| 工具 | 最佳用途 |'
- en: '| --- | --- |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| CLI | Being an invaluable instrument for an expert system administratorReaching
    in-depth server attributes, such as metricsPerforming operations such as macros
    or batches |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| CLI | 作为专家系统管理员的无价工具，深入访问服务器属性，例如指标执行宏或批量等操作 |'
- en: '| Web console | Being a handy tool to perform most basic administration tasksManaging
    top-level domain resources |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| Web控制台 | 是执行大多数基本管理任务的便捷工具管理顶级域资源 |'
- en: Summary
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to manage the application server using the
    tools that are part of the AS distribution.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何使用AS发行版中的工具来管理应用程序服务器。
- en: You became acquainted with the CLI, which allows you to traverse the tree of
    AS resources and issue commands that can read/modify or display attributes.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经熟悉了CLI，它允许你遍历AS资源树并发出可以读取/修改或显示属性的命令。
- en: One of the advantages of the CLI is that you can easily build complex management
    operations, thanks to its autocomplete functionality. The CLI also allows you
    to enlist commands in a batch so that you can execute them in an all-or-nothing
    fashion, which is typical of transactional systems.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: CLI的一个优点是，你可以利用其自动完成功能轻松构建复杂的管理操作。CLI还允许你批量列出命令，以便你可以以全有或全无的方式执行它们，这在事务性系统中很典型。
- en: The other management tool is the web interface, which allows you to operate
    on the server configuration using an intuitive and simple interface. For system
    administrators that need to perform basic administration tasks, it's an ideal
    tool, as it requires little or no experience to use it.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个管理工具是Web界面，它允许你使用直观且简单的界面操作服务器配置。对于需要执行基本管理任务的系统管理员来说，这是一个理想的工具，因为它使用起来几乎不需要或只需要很少的经验。
- en: At this point, you have enough expertise to handle more complex topics. So,
    in the next chapter, we will discuss application server clustering, which allows
    you to provide scalability and high availability to your applications.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经拥有了足够的专业知识来处理更复杂的话题。因此，在下一章中，我们将讨论应用程序服务器集群，这可以使你的应用程序提供可伸缩性和高可用性。
