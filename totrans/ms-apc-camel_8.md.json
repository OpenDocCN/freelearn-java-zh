["```java\nProducerTemplate producerTemplate = camelContext.createProducerTemplate();\n\n```", "```java\nproducerTemplate.sendBody(\"direct:input\", \"Hello World\", );\n```", "```java\nproducerTemplate.sendBodyAndHeader(\"direct:input\", \"Hello World\", \"myHeader\", \"headerValue\");\n```", "```java\nString out = producerTemplate.requestBody(\"jetty:http://0.0.0.0:8888/service\", \"request\", String.class);\n```", "```java\npublic class MyTest extends CamelTestSupport {\n\n  @Override\n  protected RouteBuilder createRouteBuilder() throws Exception {\n     MyRoute route = new MyRoute();\n     return route.createRouteBuilder();\n  }\n\n  @Override\n  public String isMockEndpointsAndSkip() {\n    return \"*\";\n  }\n\n  @Test\n  public void myTest() throws Exception {\n     ...\n  }\n\n}\n```", "```java\npublic class MySpringTest extends CamelSpringTestSupport {\n\n  @Override\n  protected AbstractXmlApplicationContext createApplicationContext() throws Exception {\n     return new ClassPathXmlApplicationContext(\"myroute.xml\");\n  }\n\n  @Override\n  public String isMockEndpointsAndSkip() {\n    return \"*\";\n  }\n\n  @Test\n  public void myTest() throws Exception {\n     ...\n  }\n\n}\n```", "```java\npublic class MyBlueprintTest extends CamelBlueprintTestSupport {\n\n  @Override\n  protected String getBlueprintDescriptor() throws Exception {\n     return \"OSGI-INF/blueprint/route.xml\";\n  }\n\n  @Override\n  public String isMockEndpointsAndSkip() {\n    return \"*\";\n  }\n\n  @Test\n  public void myTest() throws Exception {\n     ...\n  }\n\n}\n```", "```java\nMockEndpoint mockEndpoint = getMockEndpoint(\"mock:file:/tmp/in\");\n```", "```java\nMockEndpoint mockEndpoint = getMockEndpoint(\"mock:file:/tmp/in\");\nmockEndpoint.expectedMessageCount(2);\n// send message with producerTemplate, see later\n...\nmockEndpoint.assertIsSatisfied();\n```", "```java\nMockEndpoint mockEndpoint = getMockEndpoint(\"mock:file:/tmp/in\");\nmockEndpoint.setAssertPeriod(10000);\nmockEndpoint.expectedMessageCount(0);\n// send message with producerTemplate\n...\nmockEndpoint.assertIsSatisfied();\n```", "```java\nMockEndpoint mockEndpoint = getMockEndpoint(\"mock:file:/tmp/in\");\nmockEndpoint.message(0).header(\"CamelFileName\").isEqualTo(\"myfile\");\n// send message with producerTemplate\n...\nmockEndpoint.assertIsSatisfied();\n```", "```java\nmock.message(0).arrives().noLaterThan(2).seconds().beforeNext();\nmock.message(1).arrives().noLaterThan(2).seconds().afterPrevious();\nmock.message(2).arrives().between(1, 4).seconds().afterPrevious();\n```", "```java\nMockEndpoint mockEndpoint = getMockEndpoint(\"mock:file:/tmp/in\");\nmockEndpoint.whenAnyExchangeReceived(new Processor() {\n  public void process(Exchange exchange) throws Exception {\n    throw new IOException(\"Full filesystem error simulation for instance\");\n  }\n});\n// send message with producerTemplate\n...\nmockEndpoint.assertIsSatisfied();\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<blueprint >\n\n      <camelContext >\n          <route id=\"test\">\n              <from uri=\"direct:input\"/>\n              <onException>\n                  <exception>java.lang.Exception</exception>\n                  <redeliveryPolicy maximumRedeliveries=\"2\"/>\n                  <handled>\n                      <constant>true</constant>\n                  </handled>\n                  <to uri=\"direct:error\"/>\n              </onException>\n              <choice>\n                  <when>\n                      <xpath>//country='France'</xpath>\n                      <to uri=\"direct:france\"/>\n                  </when>\n                  <when>\n                      <xpath>//country='USA'</xpath>\n                      <to uri=\"direct:usa\"/>\n                  </when>\n                  <otherwise>\n                      <to uri=\"direct:other\"/>\n                  </otherwise>\n              </choice>\n          </route>\n      </camelContext>\n\n</blueprint>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n      <modelVersion>4.0.0</modelVersion>\n\n      <groupId>com.packt.camel</groupId>\n      <artifactId>chapter8a</artifactId>\n      <version>1.0-SNAPSHOT</version>\n      <packaging>bundle</packaging>\n\n      <dependencies>\n          <dependency>\n              <groupId>org.apache.camel</groupId>\n              <artifactId>camel-test-blueprint</artifactId>\n              <version>2.12.4</version>\n              <scope>test</scope>\n          </dependency>\n          <dependency>\n              <groupId>org.slf4j</groupId>\n              <artifactId>slf4j-simple</artifactId>\n              <version>1.7.5</version>\n              <scope>test</scope>\n          </dependency>\n      </dependencies>\n\n      <build>\n          <plugins>\n              <plugin>\n                  <groupId>org.apache.felix</groupId>\n                  <artifactId>maven-bundle-plugin</artifactId>\n                  <version>2.3.7</version>\n                  <extensions>true</extensions>\n                  <configuration>\n                      <instructions>\n                          <Import-Package>*</Import-Package>\n                      </instructions>\n                  </configuration>\n              </plugin>\n          </plugins>\n      </build>\n\n</project>\n```", "```java\npackage com.packt.camel.test;\n\nimport org.apache.camel.Exchange;\nimport org.apache.camel.Processor;\nimport org.apache.camel.component.mock.MockEndpoint;\nimport org.apache.camel.test.blueprint.CamelBlueprintTestSupport;\nimport org.junit.Test;\n\nimport java.io.IOException;\n\npublic class RouteTest extends CamelBlueprintTestSupport {\n\n      @Override\n      protected String getBlueprintDescriptor() {\n          return \"OSGI-INF/blueprint/route.xml\";\n      }\n\n      @Override\n      public String isMockEndpointsAndSkip() {\n          return \"((direct:error)|(direct:france)|(direct:usa)|(direct:other))\";\n      }\n\n      @Test\n      public void testRoutingFrance() throws Exception {\n          String message = \"<company><country>France</country></company>\";\n\n    //define the expectations on the direct:france mocked endpoint\n          MockEndpoint franceEndpoint = getMockEndpoint(\"mock:direct:france\");\n          franceEndpoint.expectedMessageCount(1);\n\n    //define the expectations on the direct:usa mocked endpoint\n          MockEndpoint usaEndpoint = getMockEndpoint(\"mock:direct:usa\");\n          usaEndpoint.expectedMessageCount(0);\n\n    //define the expectations on the direct:error mocked endpoint\n          MockEndpoint errorEndpoint = getMockEndpoint(\"mock:direct:error\");\n          errorEndpoint.expectedMessageCount(0);\n\n    //define the expectations on the direct:other mocked endpoint\n          MockEndpoint otherEndpoint = getMockEndpoint(\"mock:direct:other\");\n          otherEndpoint.expectedMessageCount(0);\n\n    //sending the message in the direct:input mocked endpoint\n          template.sendBody(\"direct:input\", message);\n\n    //validate the expectations\n          assertMockEndpointsSatisfied();\n      }\n      @Test\n      public void testRoutingUsa() throws Exception {\n          String message = \"<company><country>USA</country></company>\";\n\n    //define the expectations on the direct:france mocked endpoint\n          MockEndpoint franceEndpoint = getMockEndpoint(\"mock:direct:france\");\n          franceEndpoint.expectedMessageCount(0);\n\n    //define the expectations on the direct:usa mocked endpoint\n          MockEndpoint usaEndpoint = getMockEndpoint(\"mock:direct:usa\");\n          usaEndpoint.expectedMessageCount(1);\n\n    //define the expectations on the direct:error mocked endpoint\n          MockEndpoint errorEndpoint = getMockEndpoint(\"mock:direct:error\");\n          errorEndpoint.expectedMessageCount(0);\n\n    //define the expectations on the direct:other mocked endpoint\n          MockEndpoint otherEndpoint = getMockEndpoint(\"mock:direct:other\");\n          otherEndpoint.expectedMessageCount(0);\n\n    //sending the message in the direct:input mocked endpoint\n          template.sendBody(\"direct:input\", message);\n\n    //validate the expectations\n          assertMockEndpointsSatisfied();\n      }\n\n      @Test\n      public void testRoutingOther() throws Exception {\n          String message = \"<company><country>Spain</country></company>\";\n\n    //define the expectations on the direct:france mocked endpoint\n          MockEndpoint franceEndpoint = getMockEndpoint(\"mock:direct:france\");\n          franceEndpoint.expectedMessageCount(0);\n\n    //define the expectations on the direct:usa mocked endpoint\n          MockEndpoint usaEndpoint = getMockEndpoint(\"mock:direct:usa\");\n          usaEndpoint.expectedMessageCount(0);\n\n    //define the expectations on the direct:error mocked endpoint\n          MockEndpoint errorEndpoint = getMockEndpoint(\"mock:direct:error\");\n          errorEndpoint.expectedMessageCount(0);\n\n    //define the expectations on the direct:other mocked endpoint\n          MockEndpoint otherEndpoint = getMockEndpoint(\"mock:direct:other\");\n          otherEndpoint.expectedMessageCount(1);\n\n    //sending the message in the direct:input mocked endpoint\n          template.sendBody(\"direct:input\", message);\n\n    //validate the expectations\n          assertMockEndpointsSatisfied();\n      }\n\n      @Test\n      public void testError() throws Exception {\n          String message = \"<company><country>France</country></company>\";\n\n    // fake an error on the direct:france mocked endpoint\n          MockEndpoint franceEndpoint = getMockEndpoint(\"mock:direct:france\");\n          franceEndpoint.whenAnyExchangeReceived(new Processor() {\n              public void process(Exchange exchange) throws Exception {\n                  throw new IOException(\"Simulated error\");\n              }\n          });\n\n     //define the expectations on the direct:usa mocked endpoint\n          MockEndpoint usaEndpoint = getMockEndpoint(\"mock:direct:usa\");\n          usaEndpoint.expectedMessageCount(0);\n\n    //define the expectations on the direct:error mocked endpoint\n          MockEndpoint errorEndpoint = getMockEndpoint(\"mock:direct:error\");\n          errorEndpoint.expectedMessageCount(1);\n\n    //define the expectations on the direct:other mocked endpoint\n          MockEndpoint otherEndpoint = getMockEndpoint(\"mock:direct:other\");\n          otherEndpoint.expectedMessageCount(0);\n\n    //sending the message in the direct:input mocked endpoint\n          template.sendBody(\"direct:input\", message);\n\n          // validate the expectations\n          assertMockEndpointsSatisfied();\n      }\n\n}\n```", "```java\n$ mvn clean test\n\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-12) is starting\n[main] INFO org.apache.camel.management.DefaultManagementStrategy - JMX is disabled\n[main] INFO org.apache.camel.impl.InterceptSendToMockEndpointStrategy - Adviced endpoint [direct://error] with mock endpoint [mock:direct:error]\n[main] INFO org.apache.camel.impl.InterceptSendToMockEndpointStrategy - Adviced endpoint [direct://france] with mock endpoint [mock:direct:france]\n[main] INFO org.apache.camel.impl.InterceptSendToMockEndpointStrategy - Adviced endpoint [direct://usa] with mock endpoint [mock:direct:usa]\n[main] INFO org.apache.camel.impl.InterceptSendToMockEndpointStrategy - Adviced endpoint [direct://other] with mock endpoint [mock:direct:other]\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - AllowUseOriginalMessage is enabled. If access to the original message is not needed, then its recommended to turn this option off as it may improve performance.\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Route: test started and consuming from: Endpoint[direct://input]\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Total 1 routes, of which 1 is started.\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-12) started in 0.015 seconds\n[main] INFO org.apache.camel.component.mock.MockEndpoint - Asserting: Endpoint[mock://direct:france] is satisfied\n[main] INFO org.apache.camel.component.mock.MockEndpoint - Asserting: Endpoint[mock://direct:usa] is satisfied\n[main] INFO org.apache.camel.component.mock.MockEndpoint - Asserting: Endpoint[mock://direct:error] is satisfied\n[main] INFO org.apache.camel.component.mock.MockEndpoint - Asserting: Endpoint[mock://direct:other] is satisfied\n[main] INFO com.packt.camel.test.RouteTest - ********************************************************************************\n[main] INFO com.packt.camel.test.RouteTest - Testing done: testRoutingOther(com.packt.camel.test.RouteTest)\n[main] INFO com.packt.camel.test.RouteTest - Took: 0.021 seconds (21 millis)\n[main] INFO com.packt.camel.test.RouteTest - ********************************************************************************\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-12) is shutting down\n[main] INFO org.apache.camel.impl.DefaultShutdownStrategy - Starting to graceful shutdown 1 routes (timeout 10 seconds)\n[Camel (22-camel-12) thread #3 - ShutdownTask] INFO org.apache.camel.impl.DefaultShutdownStrategy - Route: test shutdown complete, was consuming from: Endpoint[direct://input]\n[main] INFO org.apache.camel.impl.DefaultShutdownStrategy - Graceful shutdown of 1 routes completed in 0 seconds\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-12) uptime 0.024 seconds\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-12) is shutdown in 0.002 seconds\n[main] INFO org.apache.aries.blueprint.container.BlueprintExtender - Destroying BlueprintContainer for bundle RouteTest\n[main] INFO org.apache.aries.blueprint.container.BlueprintExtender - Destroying BlueprintContainer for bundle org.apache.aries.blueprint\n[main] INFO org.apache.aries.blueprint.container.BlueprintExtender - Destroying BlueprintContainer for bundle org.apache.camel.camel-blueprint\n[main] INFO org.apache.camel.impl.osgi.Activator - Camel activator stopping\n[main] INFO org.apache.camel.impl.osgi.Activator - Camel activator stopped\n[main] INFO org.apache.camel.test.blueprint.CamelBlueprintHelper - Deleting work directory target/bundles/1427661985280\nTests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.025 sec - in com.packt.camel.test.RouteTest\n\nResults :\n\nTests run: 4, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO] --------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] --------------------------------------------------------------\n[INFO] Total time: 4.842 s\n[INFO] Finished at: 2015-03-29T22:46:25+02:00\n[INFO] Final Memory: 18M/303M\n\n```", "```java\n@EndpointInject(uri = \"mock:direct:france\")\nprotected MockEndpoint franceEndpoint;\n```", "```java\n@Test\npublic void aTest() throws Exception {\n  …\n  franceEndpoint.expectedBodiesReceived(\"<foo/>\");\n  …\n  franceEndpoint.assertIsSatisfied();\n}\n```", "```java\n@Produce(uri = \"direct:input\");\nprotected ProducerTemplate template;\n```", "```java\n@Test\npublic void aTest() throws Exception {\n  …\n  template.sendBodyAndHeader(\"<message/>\", \"foo\", \"bar\"); \n\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<blueprint >\n\n      <reference id=\"service\" interface=\"org.apache.camel.Processor\"/>\n\n      <camelContext >\n          <route id=\"test\">\n              <from uri=\"direct:input\"/>\n              <process ref=\"service\"/>\n              <to uri=\"direct:output\"/>\n          </route>\n      </camelContext>\n\n</blueprint>\n```", "```java\npackage com.packt.camel.test;\n\nimport org.apache.camel.Exchange; import org.apache.camel.Processor;\nimport org.apache.camel.component.mock.MockEndpoint;\nimport org.apache.camel.test.blueprint.CamelBlueprintTestSupport;\nimport org.apache.camel.util.KeyValueHolder;\nimport org.junit.Test;\n\nimport java.util.Dictionary;\nimport java.util.Map;\n\npublic class RouteTest extends CamelBlueprintTestSupport {\n\n      @Override\n      protected String getBlueprintDescriptor() {\n          return \"OSGI-INF/blueprint/route.xml\";\n      }\n\n      @Override\n      public String isMockEndpointsAndSkip() {\n          return \"direct:output\";\n      }\n\n      @Override\n      public void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {\n          KeyValueHolder serviceHolder = new KeyValueHolder(new Processor() {\n             public void process(Exchange exchange) throws Exception {\n                exchange.getIn().setBody(\"DONE\", String.class);\n             }\n          }, null);\n          services.put(Processor.class.getName(), serviceHolder);\n      }\n\n      @Test\n      public void testRoute() throws Exception {\n          String message = \"BEGIN\";\n\n          MockEndpoint franceEndpoint = getMockEndpoint(\"mock:direct:output\");\n          franceEndpoint.expectedMessageCount(1);\n          franceEndpoint.expectedBodiesReceived(\"DONE\");\n\n          template.sendBody(\"direct:input\", message);\n\n          assertMockEndpointsSatisfied();\n      }\n}\n```", "```java\n$ mvn clean test\n\n[main] INFO org.apache.aries.blueprint.container.BlueprintExtender - No quiesce support is available, so blueprint components will not participate in quiesce operations\n[main] INFO com.packt.camel.test.RouteTest - *********************************************************************\n[main] INFO com.packt.camel.test.RouteTest - Testing: testService(com.packt.camel.test.RouteTest)\n[main] INFO com.packt.camel.test.RouteTest - *********************************************************************\n[Blueprint Extender: 3] INFO org.apache.aries.blueprint.container.BlueprintContainerImpl - Bundle RouteTest is waiting for namespace handlers [http://camel.apache.org/schema/blueprint]\n[main] INFO com.packt.camel.test.RouteTest - Skipping starting CamelContext as system property skipStartingCamelContext is set to be true.\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-3) is starting\n[main] INFO org.apache.camel.management.DefaultManagementStrategy - JMX is disabled\n[main] INFO org.apache.camel.impl.InterceptSendToMockEndpointStrategy - Adviced endpoint [direct://output] with mock endpoint [mock:direct:output]\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - AllowUseOriginalMessage is enabled. If access to the original message is not needed, then its recommended to turn this option off as it may improve performance.\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Route: test started and consuming from: Endpoint[direct://input]\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Total 1 routes, of which 1 is started.\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-3) started in 0.050 seconds\n[main] INFO org.apache.camel.component.mock.MockEndpoint - Asserting: Endpoint[mock://direct:output] is satisfied\n[main] INFO com.packt.camel.test.RouteTest - *********************************************************************\n[main] INFO com.packt.camel.test.RouteTest - Testing done: testService(com.packt.camel.test.RouteTest)\n[main] INFO com.packt.camel.test.RouteTest - Took: 0.062 seconds (62 millis)\n[main] INFO com.packt.camel.test.RouteTest - *********************************************************************\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-3) is shutting down\n[main] INFO org.apache.camel.impl.DefaultShutdownStrategy - Starting to graceful shutdown 1 routes (timeout 10 seconds)\n[Camel (22-camel-3) thread #0 - ShutdownTask] INFO org.apache.camel.impl.DefaultShutdownStrategy - Route: test shutdown complete, was consuming from: Endpoint[direct://input]\n[main] INFO org.apache.camel.impl.DefaultShutdownStrategy - Graceful shutdown of 1 routes completed in 0 seconds\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-3) uptime 0.070 seconds\n[main] INFO org.apache.camel.blueprint.BlueprintCamelContext - Apache Camel 2.12.4 (CamelContext: 22-camel-3) is shutdown in 0.007 seconds\n[main] INFO org.apache.aries.blueprint.container.BlueprintExtender - Destroying BlueprintContainer for bundle RouteTest\n[main] INFO org.apache.aries.blueprint.container.BlueprintExtender - Destroying BlueprintContainer for bundle org.apache.aries.blueprint\n[main] INFO org.apache.aries.blueprint.container.BlueprintExtender - Destroying BlueprintContainer for bundle org.apache.camel.camel-blueprint\n[main] INFO org.apache.camel.impl.osgi.Activator - Camel activator stopping\n[main] INFO org.apache.camel.impl.osgi.Activator - Camel activator stopped\n[main] INFO org.apache.camel.test.blueprint.CamelBlueprintHelper - Deleting work directory target/bundles/1427662210482\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.744 sec - in com.packt.camel.test.RouteTest\n\nResults :\n\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO] --------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] --------------------------------------------------------------\n[INFO] Total time: 3.573 s\n[INFO] Finished at: 2015-03-29T22:50:12+02:00\n[INFO] Final Memory: 18M/303M\n[INFO] --------------------------------------------------------------\n\n```"]