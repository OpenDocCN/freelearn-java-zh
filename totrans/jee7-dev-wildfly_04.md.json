["```java\npublic class HelloServlet extends HttpServlet {\n\n    @EJB\n    private EJBSample ejb;\n\n    public void doGet (HttpServletRequestreq,\n                       HttpServletResponse res)\n                throws ServletException, IOException {\n        try(PrintWriter out = res.getWriter()) {\n            out.println(ejb.greet());\n        }\n    }\n}\n```", "```java\n@RequestScoped\npublic class Customer {\n\n    private String name;\n    private String surname;\n\n    public String getName(){\n        return name;\n    }\n\n    public String getSurname(){\n        return surname;\n    }\n}\n```", "```java\npublic class HelloServlet extends HttpServlet {\n\n    @Inject\n    private Customer customer;\n\n    public void doGet (HttpServletRequest req,\n                       HttpServletResponse res)\n                throws ServletException, IOException {\n        // some code\n    }\n}\n```", "```java\n@RequestScoped\n@Named \npublic class Customer {\n\n    private String name;\n    private String surname;\n\n    public String getName(){\n        return name;\n    }\n\n    public String getSurname(){\n        return surname;\n    }\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html  \n      >\n   <h:body>\n      <h:form>\n         <h:panelGrid columns=\"2\">\n            <h:outputLabel for=\"name\" value=\"Name\" />\n            <h:inputText id=\"name\" value=\"#{customer.name}\" />\n            <h:outputLabel for=\"lastName\" value=\"Surname\" />\n            <h:inputText id=\"surname\" value=\"#{customer.surname}\" />\n            <h:panelGroup />\n         </h:panelGrid>\n      </h:form>\n   </h:body>\n</html>\n```", "```java\n@Named(value=\"customNamed\")\n```", "```java\n<extension module=\"org.jboss.as.weld\"/>\n```", "```java\n    Dependencies: org.apache.log4j\n    ```", "```java\n <beans \n\n       xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n       http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\"\n       version=\"1.1\" bean-discovery-mode=\"all\">\n </beans>\n```", "```java\n    <dependencies>\n        <dependency>\n            <groupId>javax</groupId>\n            <artifactId>javaee-api</artifactId>\n            <version>7.0</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.jboss.logging</groupId>\n            <artifactId>jboss-logging</artifactId>\n            <version>3.1.4.GA</version>\n            <scope>provided</scope> \n        </dependency>\n     </dependencies>\n```", "```java\n    <build>\n        <finalName>${project.artifactId}</finalName>\n        <plugins>\n            <!-- WildFly plugin to deploy the application -->\n            <plugin>\n                <groupId>org.wildfly.plugins</groupId>\n                <artifactId>wildfly-maven-plugin</artifactId>\n                <version>1.0.2.Final</version>\n                <configuration>\n <filename>${project.build.finalName}.war</filename>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.1</version>\n                <configuration>\n                    <!-- enforce Java 8 -->\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n```", "```java\npackage com.packtpub.wflydevelopment.chapter4.controller;\n\nimport com.packtpub.wflydevelopment.chapter4.boundary.TheatreBox;\nimport org.jboss.logging.Logger;\n\nimport javax.annotation.PostConstruct;\nimport javax.enterprise.context.SessionScoped;\nimport javax.faces.application.FacesMessage;\nimport javax.faces.context.FacesContext;\nimport javax.inject.Inject;\nimport javax.inject.Named;\nimport java.io.Serializable;\n\n@Named [1]\n@SessionScoped [2]\npublic class TheatreBooker implements Serializable {\n\n    @Inject\n private Logger logger; [3]\n\n    @Inject\n private TheatreBox theatreBox; [4]\n\n    @Inject\n private FacesContext facesContext; [5]\n\n    private int money;\n\n    @PostConstruct\n    public void createCustomer() {\n        this.money = 100;\n    }\n\n    public void bookSeat(int seatId) {\n        logger.info(\"Booking seat \" + seatId);\n        int seatPrice = theatreBox.getSeatPrice(seatId);\n\n        if (seatPrice > money) {\n FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_ERROR, \"Not enough Money!\", \"Registration unsuccessful\"); [6]\n            facesContext.addMessage(null, m);\n            return;\n        }\n\n        theatreBox.buyTicket(seatId);\n\n        FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Booked!\", \"Booking successful\");\n        facesContext.addMessage(null, m);\n        logger.info(\"Seat booked.\");\n\n        money = money - seatPrice;\n    }\n\n    public int getMoney() {\n        return money;\n    }\n}\n```", "```java\npackage com.packtpub.wflydevelopment.chapter4.controller;\n\nimport com.google.common.collect.Lists;\nimport com.packtpub.wflydevelopment.chapter4.boundary.TheatreBox;\nimport com.packtpub.wflydevelopment.chapter4.entity.Seat;\n\nimport javax.annotation.PostConstruct;\nimport javax.enterprise.event.Observes;\nimport javax.enterprise.event.Reception;\nimport javax.enterprise.inject.Model;\nimport javax.enterprise.inject.Produces;\nimport javax.inject.Inject;\nimport javax.inject.Named;\nimport java.util.Collection;\n\n@Model [1]\npublic class TheatreInfo {\n\n    @Inject\n    private TheatreBox box;\n\n    private Collection<Seat> seats;\n\n    @PostConstruct\n    public void retrieveAllSeatsOrderedByName() {\n        seats = box.getSeats();\n    }\n\n @Produces [2]\n    @Named\n    public Collection<Seat> getSeats() {\n        return Lists.newArrayList(seats);\n    }\n    public void onMemberListChanged(@Observes(notifyObserver = Reception.IF_EXISTS) final Seat member) {\n        retrieveAllSeatsOrderedByName(); [3]\n    }\n}\n```", "```java\npackage com.packtpub.wflydevelopment.chapter4.boundary;\nimport javax.enterprise.event.Event;\n\n@Singleton\n@Startup\n@AccessTimeout(value = 5, unit = TimeUnit.MINUTES)\npublic class TheatreBox {\n\n @Inject [1]\n private Event<Seat> seatEvent;\n\n    @Lock(WRITE)\n    public void buyTicket(int seatId) {\n        final Seat seat = getSeat(seatId);\n        final Seat bookedSeat = seat.getBookedSeat();\n        addSeat(bookedSeat);\n\n seatEvent.fire(bookedSeat); [2]\n    }  \n    // Rest of the code stays the same, as in the previous chapter\n}\n```", "```java\npackage com.packtpub.wflydevelopment.chapter4.util;\n\nimport javax.enterprise.inject.Produces;\nimport javax.enterprise.inject.spi.InjectionPoint;\nimport org.jboss.logging.Logger;\n\npublic class LoggerProducer {\n\n    @Produces\n    public Logger produceLogger(InjectionPoint injectionPoint) {\n        return Logger.getLogger(injectionPoint.getMember().getDeclaringClass().getName());\n    }\n}\n```", "```java\npackage com.packtpub.wflydevelopment.chapter4.util;\n\nimport javax.enterprise.context.RequestScoped;\nimport javax.enterprise.inject.Produces;\nimport javax.faces.context.FacesContext;\n\npublic class FacesContextProducer {\n\n    @Produces\n    @RequestScoped\n    public FacesContext produceFacesContext() {\n        return FacesContext.getCurrentInstance();\n    }\n}\n```", "```java\n<?xml version='1.0' encoding='UTF-8' ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html \n\n      >\n<h:head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n    <h:outputStylesheet name=\"style.css\"/>\n</h:head>\n<h:body>\n    <div id=\"container\">\n        <div id=\"content\">\n <ui:insert name=\"content\">\n [Template content will be inserted here]\n </ui:insert>\n        </div>\n        <div id=\"footer\">\n            <p>\n                <em>WildFly Development Ticket Booking example.</em><br/>\n            </p>\n        </div>\n    </div>\n</h:body>\n</html>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ui:composition \n\n                template=\"/WEB-INF/templates/default.xhtml\"> [1]\n    <ui:define name=\"content\">\n        <h1>TicketBooker Machine</h1>\n        <h:form id=\"reg\">\n <h3>Money: $ #{theatreBooker.money}</h3> [2]\n            <h:messages errorClass=\"error\" infoClass=\"info\"\n                        globalOnly=\"true\"/>\n            <h:panelGrid columns=\"1\" border=\"1\" styleClass=\"smoke\">\n <h:dataTable var=\"_seat\" value=\"#{seats}\" [3]\n rendered=\"#{not empty seats}\" styleClass=\"simpletablestyle\">\n\n                    <h:column>\n                        <f:facet name=\"header\">Id</f:facet>\n                        #{_seat.id}\n                    </h:column>\n\n                    <h:column>\n                        <f:facet name=\"header\">Name</f:facet>\n                        #{_seat.name}\n                    </h:column>\n                    <h:column>\n                        <f:facet name=\"header\">Price</f:facet>\n                        #{_seat.price}$\n                    </h:column>\n                    <h:column>\n                       <f:facet name=\"header\">Booked</f:facet>\n                       #{_seat.booked}\n                    </h:column>\n                    <h:column>\n                       <f:facet name=\"header\">Action</f:facet>\n                       <h:commandButton id=\"book\"\n action=\"#{theatreBooker.bookSeat(_seat.id)}\" [4]\n                       disabled=\"#{_seat.booked}\"\n                       value=\"#{_seat.booked ? 'Reserved' : 'Book'}\" />\n                    </h:column>\n\n                </h:dataTable>\n            </h:panelGrid>\n        </h:form>\n    </ui:define>\n</ui:composition>\n```", "```java\n<h:dataTable var=\"_seat\" value=\"#{seats}\" \nrendered=\"#{not empty seats}\" styleClass=\"simpletablestyle\">\n```", "```java\nprivate List<Seat> seats;\n\n@Produces\n@Named\npublic List<Seat>getSeats() {\n   return seats;\n}\n```", "```java\n<web-app \n\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\">\n\n    <servlet>\n        <servlet-name>Faces Servlet</servlet-name>\n        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>Faces Servlet</servlet-name>\n        <url-pattern>/faces/*</url-pattern>\n    </servlet-mapping>\n    <welcome-file-list>\n        <welcome-file>faces/index.xhtml</welcome-file>\n    </welcome-file-list>\n</web-app>\n```", "```java\nmvn package\n\n```", "```java\nmvn wildfly:deploy\n\n```", "```java\nmvn wildfly:run\n\n```", "```java\nmvn clean package wildfly:deploy\n\n```", "```java\n<dependencyManagement>\n  ...\n    <dependency>\n        <groupId>org.richfaces</groupId>\n        <artifactId>richfaces-bom</artifactId>\n        <version>4.3.5.Final</version>\n        <scope>import</scope>\n        <type>pom</type>\n    </dependencies>\n</dependencyManagement>\n```", "```java\n<dependency>\n    <groupId>org.richfaces.ui</groupId>\n    <artifactId>richfaces-components-ui</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.richfaces.core</groupId>\n    <artifactId>richfaces-core-impl</artifactId>\n</dependency>\n```", "```java\n<ui:composition \n\n                template=\"/WEB-INF/templates/default.xhtml\">\n    <ui:define name=\"content\">\n        <f:view>\n\n            <h:form>\n                <a4j:poll id=\"poll\" interval=\"2000\"\n                 enabled=\"#{pollerBean.pollingActive}\"\n                 render=\"poll,grid,bookedCounter\"/>\n                <rich:panel header=\"TicketBooker Machine\" \n                            style=\"width:350px\">\n\n                    <h2>Book your Ticket</h2>\n\n                    <h3>Money: $ #{theatreBooker.money}</h3>\n                    <h:messages errorClass=\"error\" infoClass=\"info\" globalOnly=\"true\"/>\n\n <rich:dataTable id=\"grid\" var=\"_seat\" \n value=\"#{seats}\" \n rendered=\"#{not empty seats}\" \n styleClass=\"simpletablestyle\">\n\n                        <h:column>\n                            <f:facet name=\"header\">Id</f:facet>\n                            #{_seat.id}\n                        </h:column>\n\n                        <h:column>\n                            <f:facet name=\"header\">Name</f:facet>\n                            #{_seat.name}\n                        </h:column>\n                        <h:column>\n                            <f:facet name=\"header\">Price</f:facet>\n                            #{_seat.price}\n                        </h:column>\n                        <h:column>\n                            <f:facet name=\"header\">Booked</f:facet>\n                            #{_seat.booked}\n                        </h:column>\n                        <h:column>\n                            <f:facet name=\"header\">Action</f:facet>\n                            <h:commandButton id=\"book\"\n                        action=\"#{theatreBooker.bookSeat(_seat.id)}\"\n                        disabled=\"#{_seat.booked}\"\n                        value=\"#{_seat.booked ? 'Not Available' : 'Book'}\"/>\n                        </h:column>\n                    </rich:dataTable>\n <h:outputText value=\"Booked seats on this page: #{bookingRecord.bookedCount}\"  id=\"bookedCounter\" />\n                </rich:panel>\n            </h:form>\n        </f:view>\n    </ui:define>\n</ui:composition>\n```", "```java\npackage com.packtpub.wflydevelopment.chapter4.controller;\n\nimport java.util.Optional;\n\nimport javax.enterprise.inject.Model;\nimport javax.inject.Inject;\n\nimport com.packtpub.wflydevelopment.chapter4.boundary.TheatreBox;\nimport com.packtpub.wflydevelopment.chapter4.entity.Seat;\n\n@Model\npublic class Poller {\n\n    @Inject\n    private TheatreBox theatreBox;\n\n    public boolean isPollingActive() {\n        return areFreeSeatsAvailable();\n    }\n\n    private boolean areFreeSeatsAvailable() {\n        final Optional<Seat> firstSeat = theatreBox.getSeats().stream().filter(seat -> !seat.isBooked()).findFirst();\n        return firstSeat.isPresent();\n    }\n}\n```", "```java\npackage com.packtpub.wflydevelopment.chapter4.control;\n\nimport com.packtpub.wflydevelopment.chapter4.boundary.TheatreBox;\nimport com.packtpub.wflydevelopment.chapter4.entity.Seat;\nimport org.jboss.logging.Logger;\n\nimport javax.annotation.Resource;\nimport javax.ejb.EJB;\nimport javax.ejb.Schedule;\nimport javax.ejb.Stateless;\nimport javax.ejb.Timer;\nimport javax.ejb.TimerService;\nimport javax.inject.Inject;\nimport java.util.Collection;\nimport java.util.Optional;\n\n@Stateless\npublic class AutomaticSellerService {\n\n    @Inject\n    private Logger logger;\n\n    @Inject\n    private TheatreBox theatreBox;\n\n    @Resource\n    private TimerService timerService;\n\n    @Schedule(hour = \"*\", minute = \"*\", second = \"*/30\", persistent = false)\n    public void automaticCustomer() {\n        final Optional<Seat> seatOptional = findFreeSeat();\n\n        if (!seatOptional.isPresent()) {\n            cancelTimers();\n            logger.info(\"Scheduler gone!\");\n            return; // No more seats\n        }\n\n        final Seat seat = seatOptional.get();\n\n        theatreBox.buyTicket(seat.getId());\n\n        logger.info(\"Somebody just booked seat number \" + seat.getId());\n    }\n\n    private Optional<Seat> findFreeSeat() {\n        final Collection<Seat> list = theatreBox.getSeats();\n        return list.stream().filter(seat -> !seat.isBooked()).findFirst();\n    }\n\n    private void cancelTimers() {\n        for (Timer timer : timerService.getTimers()) {\n            timer.cancel();\n        }\n    }\n}\n```", "```java\npackage com.packtpub.wflydevelopment.chapter4.controller;\n\nimport com.packtpub.wflydevelopment.chapter4.entity.Seat;\n\nimport java.io.Serializable;\n\nimport javax.enterprise.event.Observes;\nimport javax.faces.view.ViewScoped;\nimport javax.inject.Named;\n\n@Named\n@ViewScoped\npublic class BookingRecord implements Serializable {\n\n    private int bookedCount = 0;\n\n    public int getBookedCount() {\n        return bookedCount;\n    }\n\n    public void bookEvent(@Observes Seat bookedSeat) {\n        bookedCount++;\n    }\n}\n```", "```java\n@ViewScoped\n@Named\n@Stereotype\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface NamedView {\n\n}\n```", "```java\n@NamedView\npublic class BookingRecord implements Serializable {\n    //Some code here\n}\n```", "```java\n@Inherited\n@InterceptorBinding [1]\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ ElementType.METHOD, ElementType.TYPE })\npublic @interface Logged {\n    // empty\n}\n```", "```java\n@Interceptor\n@Logged [1]\npublic class LoggingInterceptor implements Serializable {\n\n @AroundInvoke [2]\n    public Object log(InvocationContext context) throws Exception {\n        final Logger logger = Logger.getLogger(context.getTarget().getClass());\n        logger.infov(\"Executing method {0}\", context.getMethod().toString());\n        return context.proceed() [3];\n    }\n}\n```", "```java\n<interceptors>\n  <class>com.packtpub.wflydevelopment.chapter4.util.LoggingInterceptor</class>\n</interceptors>\n```", "```java\n@Named\n@SessionScoped\n@Logged\npublic class TheatreBooker implements Serializable {\n    // Some code\n}\n```", "```java\n21:02:11 INFO  [com.packtpub.wflydevelopment.chapter4 .controller.TheatreBooker$Proxy$_$$_WeldSubclass] (default task-8) Executing method public int com.packtpub.wflydevelopment.chapter4.controller. TheatreBooker.getMoney()\n\n```"]