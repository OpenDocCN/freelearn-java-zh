["```java\n[Base64Encoded(HEADER)] . [Base64Encoded (PAYLOAD)] . [encoded(SIGNATURE)]\n```", "```java\neyJraWQiOiJlOTllMzEyYS0yMDJmLTRmNDItOWExNi1h ZmE2NDA5Mzg0N2QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqYmNwLWNhbGVuZGFyIiwiYXVkIjoiamJjcC1jYWxlbmRhciIsIm5iZiI6MT cwODU0ODUzMCwic2NvcGUiOlsiZXZlbnRzLnJlYWQiXSwiaXNzIjoiaHR0cDovL2xvY2Fs aG9zdDo5MDAwIiwiZXhwIjoxNzA4NTQ4ODMwLCJpYXQiOjE3MDg1NDg1MzAsImp0aSI6I jRhMzVjZmNmLTE5YWItNDZjZC05OWI4LWQxNWM5ZmZlNjQ1MiJ9.WNJTwQwHA4TVE1BYuizQUo88Dnf0K2by0awxVo_mSq_8n5KWkQMuKESFQwQHT32VExn7qHW6JoD6sfxrLK5q2o-KKIYDpL1CACtfjK0mUCWjfpLfpeyXg0FpYPw6s4allS3zUfOSrFf53wP8k4XCNaPxU9yVQ8s2TB064Sanl7W0VwSbxoz4B-VgPQwEob1cxhAXrBBy5WmM8rk7WsvPXYvMLdo ISpkP4n66hCzdmmFiBWFhgsfRsOVG8mNmIWgeJVgLXY BiLrbR2FuFK5KxU7Ls7IMZcWiHd95yAgA6TQ46yBiJErclNVr8Xr5M2SnzFR7HWJY 2OHCNJxnjRpbwEQ\n```", "```java\neyJraWQiOiJlOTllMzEyYS0yMDJmLTRmNDItOWExNi1hZmE2NDA5Mzg0N2QiLCJhbGciOi JSUzI1NiJ9\n```", "```java\n{\n  \"kid\": \"e99e312a-202f-4f42-9a16-afa64093847d\",\n  \"alg\": \"RS256\"\n}\n```", "```java\neyJzdWIiOiJqYmNwLWNhbGVuZGFyIiwiYXVkIjoia mJjcC1jYWxlbmRhciIsIm5iZiI6MTc wODU0ODUzMCwic2NvcGUiOlsiZXZlbnRzL nJlYWQiXSwiaXNzIjoiaHR0cDovL2xvY2FsaG 9zdDo5MDAwIiwiZXhwIjoxNzA4NTQ4ODMwL CJpYXQiOjE3MDg1NDg1MzAsImp0aSI6IjRhM zVjZmNmLTE5YWItNDZjZC05OWI4LWQxNWM5ZmZlNjQ1MiJ9\n```", "```java\n{\n  \"sub\": \"jbcp-calendar\",\n  \"aud\": \"jbcp-calendar\",\n  \"nbf\": 1708548530,\n  \"scope\": [\n    \"events.read\"\n  ],\n  \"iss\": \"http://localhost:9000\",\n  \"exp\": 1708548830,\n  \"iat\": 1708548530,\n  \"jti\": \"4a35cfcf-19ab-46cd-99b8-d15c9ffe6452\"\n}\n```", "```java\nWNJTwQwHA4TVE1BYuizQUo88Dnf0K2by0awxVo _mSq_8n5KWkQMuKESFQwQHT32VExn7qHW 6JoD6sfxrLK5q2o-KKIYDpL1CACtfjK0mUCW jfpLfpeyXg0FpYPw6s4allS3zUfOSrFf53 wP8k4XCNaPxU9yVQ8s2TB064Sanl7W0VwSbxoz4B-VgPQwEob1cxhAXrBBy5WmM8rk7Ws vPXYvMLdoISpkP4n66hCzdmmFiBWFhgsfRsOV G8mNmIWgeJVgLXYBiLrbR2FuFK5KxU7Ls 7IMZcWiHd95yAgA6TQ46yBiJErclNVr8Xr5M2SnzFR7HWJY2OHCNJxnjRpbwEQ\n```", "```java\nvar encodedString = base64UrlEncode(header) + \".\"; encodedString += base64UrlEncode(payload);\nvar privateKey = \"[-----PRIVATE KEY\n]\";\nvar signature = SHA256withRSA(encodedString, privateKey); var JWT = encodedString + \".\" + base64UrlEncode(signature);\n```", "```java\n//build.gradle\ndependencies {\n...\n    // Spring Authorization Server\n    implementation org.springframework.boot:spring-boot-starter-oauth2-authorization-server'\n...\n}\n```", "```java\n//build.gradle\ndependencies {\n...\n    // Spring Authorization Server\n    implementation \"org.springframework.boot:spring-boot-starter-oauth2-resource-server\"\n...\n}\n```", "```java\n//src/main/resources/application.yml\nspring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          issuer-uri: http://localhost:9000\n```", "```java\nGET / HTTP/1.1\nAuthorization: Bearer some-token-value # Resource Server will process this\n```", "```java\n//src/main/resources/application.yml\nspring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          issuer-uri: http://localhost:9000\n          jwk-set-uri: http://localhost:9000/.well-known/jwks.json\n```", "```java\n//src/main/resources/application.yml\nspring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          issuer-uri: http://localhost:9000\n          audiences: https://my-org.audience\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/ SecurityConfig.java\n@Bean\nSecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n    http\n          .securityMatcher(\"/events/**\")\n          .authorizeHttpRequests(authorize -> authorize\n                .requestMatchers(\"/events/**\").hasAuthority(\"SCOPE_events.read\"))\n          .oauth2ResourceServer(oauth2 -> oauth2.jwt(Customizer.withDefaults()));\n    return http.build();\n}\n```", "```java\ncurl -i -X POST \\\n  http://localhost:9000/oauth2/token \\\n  -H 'Content-Type: application/x-www-form-urlencoded' \\\n  -d 'grant_type=client_credentials&client_id=jbcp-calendar&&client_secret=secret&scope=events.read'\n```", "```java\nHTTP/1.1 200\nVary: Origin\nVary: Access-Control-Request-Method\nVary: Access-Control-Request-Headers\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 0\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Wed, 21 Feb 2024 17:51:02 GMT\n{\n  \"access_token\": \"eyJraWQiOiJjMzJjNmVlNy0yYTM5LTQ0NDY tOWQzZS02NzA2ZWJjMWM5MGUiLCJhbGciOiJSUzI1NiJ9.eyJzdWI iOiJqYmNwLWNhbGVuZGFyIiwiYXVkIjoiamJjcC1j YWxlbmRhciIsIm5iZiI6MTcwODUzNzg2Miwic2NvcGUiOlsiZX ZlbnRzLnJlYWQiXSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo5MD AwIiwiZXhwIjoxNzA4NTM4MTYyLCJpYXQiOjE3MDg1Mzc4NjIsImp 0aSI6ImVkNjc1YzcwLTg4MGItNDYxYy1hMDk0LTFmMTA1ZTk3OTk0 NCJ9.OWMHZC_cRqUsshwTCIIdo6oGK_KU39hY25U5YhTUU7QTi-Sm F7wy9QdDxJnl9brIXgjq7NpIeC9zZyi l81S4p7HwFP3_3iCN1NQA54vTZ0-UBfT8q6H1aEQzeEdZUDnhoYK2c oOihbYcNH_Dfn13POMcEwBhFwIsul6tJHN_lLVFBA-CTMxSHoBWBDNq NvU-gIdadOxFPDpWV86No8DfYgDGWKLP18k3KggLC37ebMbNkIMgK24gYxM_5f_g2nR_ueiV6ZQO5fyGq960nYWzePoQtdYVcvHwkQk_FG_B75rcSrITuTTgDrcA8FWrZrOoitvEOnglHmieUguoYVG2BA\",\n  \"scope\": \"events.read\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 299\n}\n```", "```java\ncurl -k -i http://localhost:8080/events/  \\\n-H \"Authorization: Bearer eyJraWQiOiJjMzJjNmVl Ny0yYTM5LTQ0NDYtOWQzZS02NzA2ZWJjMWM5MGUiLCJhbG ciOiJSUzI1NiJ9.eyJzdWIiOiJqYmNwLWNhbGVuZGFyIiwiYXVkIjoiamJjcC 1jYWxlbmRhciIsIm5iZiI6MTcwODUzNzg2Miwic2NvcGUi OlsiZXZlbnRzLnJlYWQiXSwiaXNzIjoiaHR0cDovL2xvY2 FsaG9zdDo5MDAwIiwiZXhwIjoxNzA4NTM4MTYyLCJpYXQi OjE3MDg1Mzc4NjIsImp0aSI6ImVkNjc1YzcwLTg4MGItNDY xYy1hMDk0LTFmMTA1ZTk3OTk0NCJ9.OWMHZC_cRqUsshwT CIIdo6oGK_KU39hY25U5YhTUU7QTi-SmF7wy9QdDxJnl9br IXgjq7NpIeC9zZyil81S4p7HwFP3_3iCN1NQA54vTZ0-UBf T8q6H1aEQzeEdZUDnhoYK2coOihbYcNH_Dfn13POMcEwBhF wIsul6tJHN_lLVFBA-CTMxSHoBWBDNqNvU-gIdadOxFPDpW V86No8DfYgDGWKLP18k3KggLC37ebMbNkIMgK24gYxM_5f_g2nR_ueiV6ZQO5fyGq960nYWzePoQtdYVcvHwkQk_FG_B75 rcSrITuTTgDrcA8FWrZrOoitvEOnglHmieUguoYVG2BA\"\n```", "```java\nHTTP/1.1 200\nVary: Origin\nVary: Access-Control-Request-Method\nVary: Access-Control-Request-Headers\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 0\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nPragma: no-cache\nExpires: 0\nStrict-Transport-Security: max-age=31536000 ; includeSubDomains\nX-Frame-Options: DENY\nContent-Type: application/json\nTransfer-Encoding: chunked\nDate: Wed, 21 Feb 2024 17:55:32 GMT\n[\n  {\n    \"id\": 100,\n    \"summary\": \"Birthday Party\",\n    \"description\": \"This is going to be a great birthday\",\n    \"dateWhen\": \"2023-07-03T18:30:00.000+00:00\"\n  },\n  {\n    \"id\": 101,\n    \"summary\": \"Conference Call\",\n    \"description\": \"Call with the client\",\n    \"dateWhen\": \"2023-12-23T12:00:00.000+00:00\"\n  },\n  {\n    \"id\": 102,\n    \"summary\": \"Vacation\",\n    \"description\": \"Paragliding in Greece\",\n    \"dateWhen\": \"2023-09-14T09:30:00.000+00:00\"\n  }\n]\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/ SecurityConfig.java\n@Configuration\n@EnableWebSecurity\n@EnableMethodSecurity\npublic class SecurityConfig {\n    @Bean\n    SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n       http\n             .securityMatcher(\"/events/**\")\n             .oauth2ResourceServer(oauth2 -> oauth2.jwt(Customizer.withDefaults()));\n       return http.build();\n    }\n}\n```", "```java\n//src/main/java/com/packtpub/springsecurity/service/ CalendarService.java\npublic interface CalendarService {\n...omitted for brevity\n    @PreAuthorize(\"hasAuthority('SCOPE_events.read')\")\n    List<Event> getEvents();\n...\n}\n```", "```java\n//build.gradle\ndependencies {\n...\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'\n...\n}\n```", "```java\n//src/main/resources/application.yml\njbcp-calendar:\n  events:\n    api: http://localhost:8080/events/\nspring:\n## Chapter 17 Authorization Server\n  security:\n    oauth2:\n      client:\n        registration:\n          calendar-client:\n            client-id: jbcp-calendar\n            client-secret: secret\n            scope: events.read\n            authorization-grant-type: client_credentials\n            client-name: Calendar Client\n        provider:\n          calendar-client:\n            token-uri: http://localhost:9000/oauth2/token\nserver:\n  port: 8888\n```", "```java\n//src/main/java/com/packtpub/springsecurity/config/SecurityConfig.java\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n       http\n             .oauth2Client(withDefaults());\n       return http.build();\n    }\n    @Bean\n    public RestTemplate oauth2RestTemplate(OAuth2HttpRequestInterceptor oAuth2HttpRequestInterceptor) {\n       RestTemplate restTemplate = new RestTemplate();\n       List<ClientHttpRequestInterceptor> interceptors = restTemplate.getInterceptors();\n       if (CollectionUtils.isEmpty(interceptors)) {\n          interceptors = new ArrayList<>();\n       }\n       interceptors.add(oAuth2HttpRequestInterceptor);\n       restTemplate.setInterceptors(interceptors);\n       return restTemplate;\n    }\n}\n```", "```java\n//src/main/java/com/packtpub/springsecurity/config/OAuth2HttpRequestInterceptor.java\n@Component\npublic class OAuth2HttpRequestInterceptor implements ClientHttpRequestInterceptor {\n    private final OAuth2AuthorizedClientManager authorizedClientManager;\n    private final ClientRegistrationRepository clientRegistrationRepository;\n    public OAuth2HttpRequestInterceptor(OAuth2AuthorizedClientManager authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository) {\n       this.authorizedClientManager = authorizedClientManager;\n       this.clientRegistrationRepository = clientRegistrationRepository;\n    }\n    @Override\n    public ClientHttpResponse intercept(HttpRequest request, byte[] body, ClientHttpRequestExecution execution) throws IOException {\n       ClientRegistration clientRegistration = clientRegistrationRepository.findByRegistrationId(\"calendar-client\");\n       OAuth2AuthorizeRequest oAuth2AuthorizeRequest = OAuth2AuthorizeRequest\n             .withClientRegistrationId(clientRegistration.getRegistrationId())\n             .principal(clientRegistration.getClientId())\n             .build();\n       OAuth2AuthorizedClient client = authorizedClientManager.authorize(oAuth2AuthorizeRequest);\n       String accessToken = client.getAccessToken().getTokenValue();\n       request.getHeaders().setBearerAuth(accessToken);\n       return execution.execute(request, body);\n    }\n}\n```", "```java\n//src/main/java/com/packtpub/springsecurity/web/controllers/OAuth2RestClient.java\n@RestController\npublic class OAuth2RestClient {\n    private final RestTemplate oauth2RestTemplate  ;\n    public OAuth2RestClient(RestTemplate oauth2RestTemplate) {\n       this.oauth2RestTemplate = oauth2RestTemplate;\n    }\n    @Value(\"${jbcp-calendar.events.api}\")\n    private String eventsApi;\n    @GetMapping(\"/\")\n    public  String apiCheck() {\n       return oauth2RestTemplate.getForObject(eventsApi, String.class);\n    }\n}\n```", "```java\n[\n  {\n    \"id\":100,\n    \"summary\":\"Birthday Party\",\n    \"description\":\"This is going to be a great birthday\",\n    \"dateWhen\":\"2023-07-03T18:30:00.000+00:00\"\n  },\n  {\n    \"id\":101,\n    \"summary\":\"Conference Call\",\n    \"description\":\"Call with the client\",\n    \"dateWhen\":\"2023-12-23T12:00:00.000+00:00\"\n  },\n  {\n    \"id\":102,\n    \"summary\":\"Vacation\",\n    \"description\":\"Paragliding in Greece\",\n    \"dateWhen\":\"2023-09-14T09:30:00.000+00:00\"\n  }\n]\n```"]