- en: Chapter 1. Getting Started with OpenJDK
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 开始使用OpenJDK
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Distinguishing OpenJDK from Oracle JDK
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区分OpenJDK和Oracle JDK
- en: Installing OpenJDK on Windows
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上安装OpenJDK
- en: Configuring OpenJDK on Windows
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上配置OpenJDK
- en: Installing OpenJDK on Linux
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Linux上安装OpenJDK
- en: Configuring OpenJDK on Linux
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Linux上配置OpenJDK
- en: Navigating through OpenJDK groups and projects
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在OpenJDK组和项目中导航
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: OpenJDK is now an official Java 7 reference implementation, and is now one for
    Java 8 as well. This means that the most essential projects of the Java ecosystem
    are now open source. This also means that OpenJDK can be installed in various
    ways—from building from source to installing the binary package from the package
    manager, if any.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK现在是一个官方的Java 7参考实现，现在也是Java 8的。这意味着Java生态系统中最基本的项目现在是开源的。这也意味着OpenJDK可以通过多种方式安装——从源码构建到如果有的话，通过包管理器安装二进制包。
- en: Sun's effort to release an open source JDK was the beginning of the project
    publicly stated in 2006, during the JavaOne conference. HotSpot was released under
    the GPLv2 license. The complete source code of the **Java Class Library** (**JCL**)
    was released in May 2007 under the GPL, except for several proprietary parts with
    GPL-incompatible licenses.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Sun努力发布开源JDK是项目公开宣布的开始，发生在2006年的JavaOne会议上。HotSpot是在GPLv2许可证下发布的。**Java类库**（**JCL**）的完整源代码在2007年5月以GPL许可证发布，除了几个与GPL不兼容的许可证的专有部分。
- en: However, some proprietary parts (from 4 to 1 percent of the total code lines,
    depending on the update number) were required in OpenJDK in a separate proprietary
    bundle in the OpenJDK 7 b53 update in April 2009.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在2009年4月的OpenJDK 7 b53更新中，OpenJDK需要一些专有部分（占总代码行的4%到1%，具体取决于更新号），这些部分以单独的专有包的形式存在。
- en: One may think that the initial installation and configuration are quite simple
    and do not need some sort of detailed explanation. In many ways, that's true;
    but there are some difficulties along the way.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 人们可能会认为初始安装和配置相当简单，不需要某种详细的解释。在许多方面，这是真的；但在这个过程中也有一些困难。
- en: We will start by distinguishing OpenJDK from Oracle JDK. The latter is based
    on the former, but not entirely. Each one has its own advantages and drawbacks.
    The primary OpenJDK advantage is the fact that it's open source while Oracle JDK
    is always recommended and is ready-to-use. Besides, OpenJDK 6 is the only maintainable
    Java 6 realization left, after the Java 6 discontinuation.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先区分OpenJDK和Oracle JDK。后者基于前者，但并非全部。每个都有自己的优点和缺点。OpenJDK的主要优点是它是开源的，而Oracle
    JDK总是被推荐并且是现成的。此外，OpenJDK 6是Java 6停止后唯一可维护的Java 6实现。
- en: Then we will cover the installation process for Windows and possible issues
    with some Windows versions. After that, we will describe some typical profiles
    to configure an installed instance of OpenJDK for various needs, such as a server
    instance and developer instance.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将介绍Windows的安装过程以及一些Windows版本可能遇到的问题。之后，我们将描述一些典型的配置文件，以针对各种需求配置已安装的OpenJDK实例，例如服务器实例和开发人员实例。
- en: 'Then we will go in to more complicated matters, such as installing OpenJDK
    on various Linux systems. There are at least two common ways to do it: the distribution-recommended
    way that depends on the distribution itself, and another way, which is common
    for all Linux systems.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将更深入地探讨一些复杂的问题，例如在各种Linux系统上安装OpenJDK。至少有两种常见的方法：依赖于发行版的发行版推荐方法，以及适用于所有Linux系统的另一种方法。
- en: Linux configuration is more or less the same as that of Windows, but there are
    some differences that need to be covered. The differences are, mainly, related
    to system philosophy, namely the way it's done and then what exactly is done.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Linux的配置基本上与Windows相同，但也有一些需要说明的差异。这些差异主要与系统哲学有关，即它是如何实现的，以及确切地做了什么。
- en: Then we will proceed to OpenJDK internal structures—in an introductory way.
    We will consider OpenJDK projects that are already in use, and will learn how
    to use instruments that we will need later. Also, we will briefly look at OpenJDK
    groups and find out what they are doing and how they may influence OpenJDK's further
    evolution.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将以介绍性的方式探讨OpenJDK的内部结构。我们将考虑已经使用的OpenJDK项目，并学习如何使用我们以后需要的工具。此外，我们还将简要地查看OpenJDK组，了解它们在做什么以及它们可能如何影响OpenJDK的进一步发展。
- en: Last but not least, you will learn how to benefit from the Adopt OpenJDK program,
    which is also a part of the OpenJDK community. Adopt OpenJDK is an effort to improve
    OpenJDK usability readiness, test new language releases, and do whatever it needs
    to make OpenJDK more useful and welcoming among users as well as developers.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，您将学习如何从Adopt OpenJDK项目中受益，该项目也是OpenJDK社区的一部分。Adopt OpenJDK是一个旨在提高OpenJDK可用性准备就绪、测试新语言版本以及做任何使OpenJDK对用户和开发者更有用和受欢迎的事情的努力。
- en: This chapter is written with an introductory purpose, and does not cover some
    details that are common to Oracle Java. However, it provides a necessary basis
    to work with.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的编写目的是介绍性的，不涵盖Oracle Java中常见的某些细节。然而，它提供了工作的必要基础。
- en: We will use Java 7, as it is stable and the latest Java version available. All
    screenshots and processes are assuming that we use Java 7, if another is not explicitly
    mentioned.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Java 7，因为它稳定且是可用的最新Java版本。所有截图和过程都假设我们使用Java 7，除非明确提及其他版本。
- en: If you already have OpenJDK built and installed as default and you are aware
    of the differences between OpenJDK and Oracle JDK, as well as of the existence
    of Adopt OpenJDK, you may skip this chapter entirely.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经将OpenJDK构建并安装为默认版本，并且您了解OpenJDK和Oracle JDK之间的区别，以及Adopt OpenJDK的存在，您可以完全跳过这一章。
- en: Distinguishing OpenJDK from Oracle JDK
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区分OpenJDK和Oracle JDK
- en: Though OpenJDK is an official reference implementation for the Java platform,
    certain Oracle-provided software are not open source. The most famous of them
    is the Java browser plugin, but there are a lot more differences than just that.
    This recipe will show you how to distinguish OpenJDK from Oracle JDK.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然OpenJDK是Java平台的官方参考实现，但某些Oracle提供的软件不是开源的。其中最著名的是Java浏览器插件，但差异远不止于此。这个食谱将向您展示如何区分OpenJDK和Oracle
    JDK。
- en: Getting ready
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To follow this recipe, you will need an installed OpenJDK instance. It will
    be good if you have an Oracle JDK instance as well, to feel the difference. Also,
    we will assume that you have a Linux installation and an `update-java-alternatives`
    command installed and ready to use. To know how to install OpenJDK on various
    systems, see the later recipes in this chapter. To know how to switch the system
    Java version, if you do not have `update-alternatives` installed (for Fedora,
    Gentoo, and so on), visit the *Configuring OpenJDK on Linux* recipe or refer to
    your distribution documentation/forums.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要遵循这个食谱，您需要一个已安装的OpenJDK实例。如果您还有一个Oracle JDK实例，这将有助于您感受两者的区别。此外，我们将假设您有一个Linux安装和一个已安装并准备使用的`update-java-alternatives`命令。要了解如何在各种系统上安装OpenJDK，请参阅本章后面的食谱。如果您没有安装`update-alternatives`（对于Fedora、Gentoo等），请访问*配置Linux上的OpenJDK*食谱或参考您的发行版文档/论坛。
- en: How to do it...
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Please take a look at the following procedures to know the difference between
    OpenJDK and Oracle JDK:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看以下步骤，了解OpenJDK和Oracle JDK之间的区别：
- en: 'We will open a terminal and type the following command:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将打开一个终端并输入以下命令：
- en: '[PRE0]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We will see a full list of installed Java implementations:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将看到已安装的Java实现的全列表：
- en: '[PRE1]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let''s set Oracle Java as default. We will run the following command with `root`
    access:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将Oracle Java设置为默认。我们将使用`root`权限运行以下命令：
- en: '[PRE2]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: This command may produce errors such as "no alternatives for apt". It's OK,
    just ignore them.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此命令可能会产生错误，例如“没有apt的替代品”。没关系，只需忽略它们即可。
- en: Then we will go to [https://www.java.com/en/download/installed.jsp?detect=jre](https://www.java.com/en/download/installed.jsp?detect=jre)
    and check our browser plugin version. We will see the activate link (following
    the name of the activating entity).
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将前往[https://www.java.com/en/download/installed.jsp?detect=jre](https://www.java.com/en/download/installed.jsp?detect=jre)并检查我们的浏览器插件版本。我们将看到激活链接（紧随激活实体名称之后）。
- en: We can see from the result of our actions that the Java browser plugin has been
    installed.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以从我们操作的结果中看到，Java浏览器插件已经安装。
- en: 'Let''s try to set OpenJDK as the default Java environment (the actual instance
    name may differ in your case):'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们尝试将OpenJDK设置为默认的Java环境（在您的案例中实际实例名称可能不同）：
- en: '[PRE3]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Then we will go to our browser page and refresh it. It may be necessary to restart
    the browser so that the changes can take effect, as shown in the following screenshot:![How
    to do it...](img/8405_01_01.jpg)
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们将进入浏览器页面并刷新它。可能需要重新启动浏览器，以便更改生效，如下面的截图所示：![如何操作...](img/8405_01_01.jpg)
- en: We can see that the plugin is not from the JDK itself but from a project named
    IcedTea.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: IcedTea is an open source project, whose goal is to replace proprietary parts
    of the Java ecosystem as much as possible. The plugin itself is from IcedTea-Web,
    an open source implementation of the Java Web Start and Java browser plugins.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: In most distributions, the `IcedTea` plugin is installed by default. But it
    is necessary to keep in mind that it's an open source plugin, and definitely not
    a referenced one. This means that its functionality might be slightly different
    from the Oracle plugin. It is also possible that some features may not work.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Oracle JDK still has some proprietary components, and the browser plugin is
    one example. All we need in this chapter is to see the difference between the
    work of OpenJDK and Oracle JDK components that are different.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Also, the huge difference between OpenJDK and Oracle JDK lies in the license.
    OpenJDK is open source, while Oracle JDK contains proprietary pieces, and thus
    it is licensed under the Oracle binary license. The fact that OpenJDK is open
    source provides a whole new range of benefits (and exciting discoveries) through
    the ability to study and modify its source code. It is also worth mentioning that
    more than 90 percent of Oracle JDK is based on OpenJDK source code. This means
    the OpenJDK quality is not compromised in any way. The browser plugin is not the
    only thing that is missed in OpenJDK compared to Oracle JDK.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: See also
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [Chapter 5](ch05.html "Chapter 5. Building IcedTea"), *Building IcedTea*,
    there is a detailed explanation of how to build IcedTea from source.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing OpenJDK on Windows
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Windows is the most commonly used OS in the world, and many developers are using
    it as their primary system. Despite its popularity, Windows doesn't have such
    strong support by the OpenJDK development community, and installation of the product
    is not as easy as in Linux. This recipe will cover the steps required to install
    OpenJDK on Windows.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: This recipe provides an easy but decentralized way to install programs, although
    the most recent versions provide package repositories of their own. However, on
    Windows, the only official way to install an up-to-date OpenJDK is to build it
    from source.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To follow this recipe, we will need an installed Windows system. Windows 7 or
    Windows 8 will be best, because Windows XP is already officially discontinued
    by Microsoft.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There is an official build of OpenJDK on Windows, but it exists for referential
    purposes only. It is official and easy to install, but it doesn''t have any security
    updates or improvements. However, there are unofficial builds, maintained by Alex
    Casco. We will try to install OpenJDK in both ways:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: We will start with an official reference build. To get it, we need to go to
    [https://jdk7.java.net/java-se-7-ri/](https://jdk7.java.net/java-se-7-ri/) and
    accept the license terms. Then, download and run the installer.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Though the OpenJDK source code is licensed by an open license, this official
    build is licensed by the Oracle Binary Code license and by GPLv2\. If you want
    to keep your OpenJDK open source, please use one licensed by GPLv2.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Unpack the downloaded file in a location you prefer. Let's name it `C:/OpenJDK`.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the Windows command line by navigating to **Start** | **Run**, type `cmd`,
    and click on the **Run** button.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the following command:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'It will output the Java version information. The output should look like this:'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Congratulations! We've just installed the OpenJDK official binary.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The reference implementation is the only available official binary build of
    OpenJDK. But it lacks security and is used only for reference purposes. It is
    a simple archive that needs to be unpacked to use it.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: To bypass this unpleasantness and give Windows users an opportunity to install
    OpenJDK as a binary without building it from source, one of the OpenJDK contributors
    established a completely unofficial but very useful OpenJDK build set for various
    platforms.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, this binary build, unlike the official one, is open source and licensed
    over GPL. So we can use it even in a completely open source environment without
    adding any proprietary pieces that will possibly get us in trouble.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You will find an installer for Mac in those unofficial builds as well.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Though an official reference binary is outdated, there is an unofficial project
    that provides OpenJDK builds from sources that are up to date.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we will install OpenJDK 7 from unofficial builds:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Go to [https://github.com/alexkasko/openjdk-unofficial-builds](https://github.com/alexkasko/openjdk-unofficial-builds).
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select an appropriate build for Windows and download it.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Unpack it and run `install.exe`.![There's more...](img/8405_01_03.jpg)
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Run** button when the preceding message appears.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Carefully read and accept the license and then click on **Next**.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the installation path in the next window. It will point to your home
    directory by default, so be careful—such an installation may be available to no
    one but yourself.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the target directory does not exist, let the installer create it.![There's
    more...](img/8405_01_04.jpg)
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the red highlighted checkboxes in the preceding screenshot only if you
    want to set this JDK as default for all users in the system, not just for you.
    You may uncheck the fourth box if you don't need this JDK to be default at all.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then click on the **Next** button and wait until the installation is finished.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then click on the **Next** button for the last time.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then click on **Done**.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See also
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although the simplest way to install OpenJDK is to unpack binaries, manually
    or in an automatic fashion, there is no doubt that working with the source code
    will give us more flexibility at all possible levels.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: 'To know more, read the following chapters:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Building OpenJDK 6"), *Building OpenJDK 6*
    up to [Chapter 4](ch04.html "Chapter 4. Building OpenJDK 8"), *Building OpenJDK
    8* to learn about building OpenJDK from source'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。构建OpenJDK 6")，*构建OpenJDK 6* 到 [第4章](ch04.html "第4章。构建OpenJDK
    8")，*构建OpenJDK 8*，了解从源代码构建OpenJDK'
- en: '[Chapter 6](ch06.html "Chapter 6. Building IcedTea with Other VM Implementations"),
    *Building IcedTea with Other VM Implementations* to build OpenJDK using other
    VMs'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章。使用其他虚拟机实现构建IcedTea")，*使用其他虚拟机实现构建IcedTea*，以使用其他虚拟机构建OpenJDK'
- en: '[Chapter 13](ch13.html "Chapter 13. Build Automation"), *Build Automation*
    to work with future technologies, which will be unavailable in binary form for
    quite some time'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第13章](ch13.html "第13章。构建自动化")，*构建自动化*，以使用未来技术，这些技术将相当长一段时间内无法以二进制形式获得'
- en: Configuring OpenJDK on Windows
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上配置OpenJDK
- en: Although the initial configuration is sufficient for most tasks, it may still
    be required to do some configuration. In the case of OpenJDK, this is performed
    by setting system variables. Here we will touch only on the case that often occurs
    when JDK is unpacked manually—how to set it as default.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然初始配置对于大多数任务已经足够，但仍可能需要做一些配置。在OpenJDK的情况下，这是通过设置系统变量来完成的。在这里，我们将仅讨论在手动解包JDK时经常出现的情况——如何将其设置为默认值。
- en: Getting ready
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To follow this recipe, we will need an OpenJDK instance installed on our Windows
    system. Windows 7 or Windows 8 will be best, because Windows XP is already officially
    discontinued by Microsoft.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 为了遵循这个食谱，我们需要在我们的Windows系统上安装一个OpenJDK实例。Windows 7或Windows 8将是最佳选择，因为Windows
    XP已经被微软正式停止支持。
- en: How to do it...
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'At first, we need to install our OpenJDK implementation as the default Java
    instance. This is often necessary for development:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要将我们的OpenJDK实现作为默认Java实例安装。这对于开发通常是必要的：
- en: In order to do so, we will go to **Start** | **Control Panel** | **System**
    | **Advanced** | **Environment Variables** | **User Variables** (or **System Variables**
    for system-wide configuration) and add the path to the Java executable to the
    `PATH` system variable, as shown:![How to do it...](img/8405_01_05.jpg)
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了做到这一点，我们将转到**开始** | **控制面板** | **系统** | **高级** | **环境变量** | **用户变量**（或**系统变量**用于系统范围的配置）并将Java可执行文件的路径添加到`PATH`系统变量中，如图所示：![如何操作...](img/8405_01_05.jpg)
- en: Tip
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If there are other paths to other Java executables, we may need to delete them
    as well, but it will be better to remember them, since we may need to restore
    our old default Java settings.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果存在其他路径指向其他Java可执行文件，我们可能也需要删除它们，但最好还是记住它们，因为我们可能需要恢复我们旧的默认Java设置。
- en: If we were installing OpenJDK from unofficial builds, there may be no need to
    change the `PATH` variable at all.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们从非官方构建安装OpenJDK，可能根本不需要更改`PATH`变量。
- en: 'To validate our newly configured variable, we will go to the Command Prompt
    and type the following:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了验证我们新配置的变量，我们将转到命令提示符并输入以下内容：
- en: '[PRE6]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The expected output is the version of our newly installed build.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预期的输出是我们新安装的构建版本。
- en: How it works…
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In order to set a newly installed OpenJDK instance as the default JDK, we need
    to change the system variable. After that change, our Java executables will be
    visible to the system.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将新安装的OpenJDK实例设置为默认JDK，我们需要更改系统变量。更改后，我们的Java可执行文件将对系统可见。
- en: There's more...
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The same procedure is followed to set the `CLASSPATH` variable. It is not very
    necessary, and if you are using other libraries such as GNU classpath, you probably
    know about it.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的程序用于设置`CLASSPATH`变量。这并不是非常必要，如果你使用其他库如GNU classpath，你可能已经知道了。
- en: Installing OpenJDK on Linux
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux上安装OpenJDK
- en: The Linux operating system allows for many internal tweaks, as well as for changes
    to the system's source code. It is also known as a complicated OS, and not all
    distributions are user-friendly. There are many people using it, and it's open
    source, such as OpenJDK itself. The installation process varies between chosen
    distributions, and we will go through the process for the three most-used package
    managers, as well as through the process that will work for virtually all x86
    Linux distributions.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Linux操作系统允许进行许多内部调整，以及修改系统的源代码。它也被称为一个复杂的操作系统，并非所有发行版都易于使用。有很多人在使用它，它是开源的，例如OpenJDK本身。安装过程因选择的发行版而异，我们将介绍三种最常用的包管理器的安装过程，以及适用于几乎所有x86
    Linux分发的安装过程。
- en: Getting ready
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To follow this recipe, you will need an installed Linux system. It will be better
    if it has the kernel version 2.6 or higher, though OpenJDK is reported workable
    on 2.4 kernels as well. Also, if you have the `.deb`, `.rpm`, or `.ebuild` package
    manager, the recommended way to install any package is to install it using those.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When the installation of various packages is concerned, the process is dependent
    on our Linux distribution.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: 'For a Debian-based distribution:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: 'Open a terminal and type:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Tip
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: We should have root permissions or use `sudo` to gain access to system files.
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will trigger the installation automatically. If we get an error message,
    indicating that the package is not found, we should Google an appropriate name
    for an OpenJDK package for our distribution.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For an RPM-based distribution, we''ll need to first search for the package
    names, because package names are varied between different distributions, as shown
    here:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You will see an output like this:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You may install all of the packages that have the desired version. Then, we
    will run another command, using the package name we''ve just found:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This will also trigger an automatic download and installation.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: 'If we have a Gentoo-based distribution, just type the following:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This will, depending on your distribution, unpack and install a binary package
    or, more probably, automatically build this package from source.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Aside from the recommended ways, there is a generic installation procedure.
    It is quite simple, though it may do some damage to your operating system, so
    don''t use it unless you really know what you''re doing:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: This is the way to unpack the OpenJDK system and then install it yourself. To
    get the builds, we will refer again to the unofficial build page, [https://github.com/alexkasko/openjdk-unofficial-builds](https://github.com/alexkasko/openjdk-unofficial-builds).
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Then unpack the downloaded package into a folder and run the following command
    from it:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: A GUI installer window will appear. Read and accept the license, choose the
    directory, and allow OpenJDK to be created, if it does not exist, as shown:![There's
    more...](img/8405_01_06.jpg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the preceding checkbox if you want to make this installation the default
    one. Then click on the **Next** button.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wait for the installation to complete, and click on **Next** for the last time.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then click on **Done**.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuring OpenJDK on Linux
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux configuration profiles differ from the Windows ones, because those systems
    are working with resources as well as with hardware in a slightly different fashion.
    Here, we will briefly explain those differences and a way to overcome them. Moreover,
    different Linux distributions, as always, have different ways to deal with the
    configuration. We will try to pass through the most noticeable ones.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To follow this recipe, you will need an OpenJDK instance installed on a Linux
    system. The `deb`, `rpm`, or `ebuild` distributions will suite us really well,
    although we will see a method for generic Linux configuration also.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: Also, we will need the bash startup files to be installed properly.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In most Linux distributions, the generic way to configure anything that needs
    root access is not recommended, and the results of such an approach tend to vanish
    with each update. Usually, there are distribution-recommended how-to's where the
    problem solution is described.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First let''s check whether your bash startup files are installed. The simplest
    possible way is to configure your OpenJDK using them. They are system-wide and
    easy to use, though there are drawbacks in their usage, such as update conflicts:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: 'Type the following line in your terminal:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: If the file exists and contains some kind of shell script, then your bash startup
    file's setup is probably correct. If not, please set it up by following your distribution
    instructions.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Then add the `/etc/profile.d/openjdk.sh` file.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order to configure different things, write the following:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Tip
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: The `CLASSPATH` env variable should be avoided as much as possible. It is generally
    used by legacy Java applications mostly configured for JDK 1.2 and below. Use
    `-classpath` with `java` and `javac` commands instead.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The preceding code is quite simple—it just appends all JAR files to the classpath.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This script is called during shell initialization, so whenever you perform shell
    initialization, these variables will be exported. The variables are thus system-wide,
    so be careful while playing with them, as they can cause your Java to fail permanently
    if you make some errors in this file.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: On Linux, you can see the directory structure of the installed OpenJDK using
    the `tree` command.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: 'To do so, install the `tree` package (use your distribution''s documentation
    if possible) and type:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You will see something like the following:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This is the first-level directory structure in which:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '`ASSEMBLY_EXCEPTION` is about licensing, and so is `THIRD_PARTY_README`.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `docs` folder is for various OpenJDK documentation (changelog, copyrights,
    authors, and so on).
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `include` directory is to include paths (for `JNI`, for example).
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `jre` directory is where the Java Runtime is placed.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `lib` directory is where various OpenJDK libraries are placed (such as Jigsaw
    or CORBA support; mainly, it consists of all OpenJDK code).
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `man` command is a manual pages entry for OpenJDK. It contains OpenJDK classes,
    `javadocs`, and other manual entries. It may be extremely useful in the highly
    improbable event of Internet connection loss.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Navigating through OpenJDK groups and projects
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OpenJDK is not one huge project. It consists of a large number of subprojects,
    and is developed by relatively small groups of developers. We will look at them
    and realize what is going on under the hood of OpenJDK.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To follow this recipe, you will need an OpenJDK instance installed and an established
    Internet connection. The recipe is more for the initial understanding of the process
    rather than for practical use, so if you are familiar with these matters, don't
    hesitate to skip this recipe entirely.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要遵循此食谱，您需要一个已安装的OpenJDK实例和稳定的互联网连接。这个食谱更多的是为了对过程的初步理解，而不是实际应用，所以如果您熟悉这些事情，请不要犹豫，可以完全跳过这个食谱。
- en: How to do it...
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will see what OpenJDK consists of:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到OpenJDK由什么组成：
- en: Go to [http://openjdk.java.net/](http://openjdk.java.net/).
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[http://openjdk.java.net/](http://openjdk.java.net/)。
- en: In the right column, there are overviews of groups as well as projects.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧列中，还有关于组和项目的概述。
- en: We will select one of them to get through the process.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从中选择一个来完成这个过程。
- en: Tip
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The process will be described in detail in [Chapter 8](ch08.html "Chapter 8. Hacking
    OpenJDK"), *Hacking OpenJDK*.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该过程将在[第8章](ch08.html "第8章. Hacking OpenJDK") *Hacking OpenJDK*中详细描述。
- en: Let the selected project be `JDK9`.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让选定的项目为`JDK9`。
- en: Go to the `JDK9` project page at [http://openjdk.java.net/projects/jdk9/](http://openjdk.java.net/projects/jdk9/).
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往[http://openjdk.java.net/projects/jdk9/](http://openjdk.java.net/projects/jdk9/)的`JDK9`项目页面。
- en: There's not very much to see, because there is only the basic on-boarding information.
    Most of the project business is in the bug tracker.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 没有什么可看的，因为只有基本的入职信息。大部分的项目业务都在问题跟踪器中。
- en: After we read the information about the project on an official site, we will
    go to JDK JIRA to see what's happening here. We will go to the `JDK9` part of
    JIRA at [https://bugs.openjdk.java.net/browse/JDK/fixforversion/14949](https://bugs.openjdk.java.net/browse/JDK/fixforversion/14949).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在官方网站上阅读有关项目的信息后，我们将前往JDK JIRA查看这里发生了什么。我们将访问[https://bugs.openjdk.java.net/browse/JDK/fixforversion/14949](https://bugs.openjdk.java.net/browse/JDK/fixforversion/14949)的JIRA中的`JDK9`部分。
- en: Here we can see various issues related directly to JDK9 and see how the process
    is going.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到与JDK9直接相关的问题，并了解过程是如何进行的。
- en: How it works…
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Groups are sets of developers who may work on different projects but in one
    large scope. Developers participate in chosen projects, and projects are sponsored
    by groups.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 组是一组可能在不同项目中工作但属于一个大范围的开发者。开发者参与选择的项目，项目由组赞助。
- en: Tip
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: To participate in a group and become a contributor, follow the instructions
    at [http://openjdk.java.net/contribute/](http://openjdk.java.net/contribute/).
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 要参与一个组并成为贡献者，请遵循[http://openjdk.java.net/contribute/](http://openjdk.java.net/contribute/)中的说明。
- en: 'There are four major types of projects:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 有四种主要的项目类型：
- en: Feature
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能
- en: Improvement
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进
- en: Replacement
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换
- en: Portability
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可移植性
- en: For example, the JDK9 project is a featured one. The graphics rasterizer project
    is a replacement one, while the Swing group is a whole group that is focused on
    the improvement of Swing.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，JDK9项目是一个特色项目。图形光栅化项目是一个替换项目，而Swing组是一个专注于Swing改进的整个组。
- en: Various ports' projects are obviously the portability ones.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 各种端口的项目显然是可移植性的。
- en: See also
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: See [Chapter 8](ch08.html "Chapter 8. Hacking OpenJDK"), *Hacking OpenJDK*,
    [Chapter 11](ch11.html "Chapter 11. Troubleshooting"), *Troubleshooting*, and
    [Chapter 13](ch13.html "Chapter 13. Build Automation"), *Build Automation*—they
    will suit you just well
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请参阅[第8章](ch08.html "第8章. Hacking OpenJDK")，*Hacking OpenJDK*，[第11章](ch11.html
    "第11章. 故障排除")，*故障排除*，以及[第13章](ch13.html "第13章. 构建自动化")，*构建自动化*——它们将非常适合您
- en: Tails in [Chapter 4](ch04.html "Chapter 4. Building OpenJDK 8"), *Building OpenJDK
    8*
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html "第4章. 构建OpenJDK 8")，*构建OpenJDK 8*中查看尾巴。
