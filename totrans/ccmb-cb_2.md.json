["```java\n    Feature: login Page\n      In order to test login page\n      As a Registered user\n      I want to specify the login conditions\n\n      Scenario: checking pre-condition, action and results\n        Given user is on Application landing page\n        When user clicks Sign in button\n        Then user is on login screen\n    ```", "```java\n    package com.StepDefinitions;\n\n    import cucumber.api.PendingException;\n    import cucumber.api.java.en.Given;\n    import cucumber.api.java.en.Then;\n    import cucumber.api.java.en.When;\n\n    public class LoginSteps {\n\n      @Given(\"^user is on Application landing page$\")\n      public void user_is_on_Application_landing_page() throws Throwable {\n            /* Write code here that turns the phrase above into \n               concrete actions*/\n        throw new PendingException();\n      }\n\n      @When(\"^user clicks Sign in button$\")\n      public void user_clicks_Sign_in_button() throws Throwable {\n            /*Write code here that turns the phrase above into \n                concrete actions */\n        throw new PendingException();\n      }\n\n      @Then(\"^user is on login screen$\")\n      public void user_is_on_login_screen() throws Throwable {\n            /* Write code here that turns the phrase above into \n                concrete actions */\n        throw new PendingException();\n      }\n    }\n    ```", "```java\n    package com.StepDefinitions;\n\n    import cucumber.api.java.en.Given;\n    import cucumber.api.java.en.Then;\n    import cucumber.api.java.en.When;\n\n    public class LoginSteps {\n\n      @Given(\"^user is on Application landing page$\")\n      public void user_is_on_Application_landing_page() throws Throwable {\n        //sample code goes here\n        System.out.println(\"Given\");\n      }\n\n      @When(\"^user clicks Sign in button$\")\n      public void user_clicks_Sign_in_button() throws Throwable {\n        //sample Code goes here\n        System.out.println(\"When\");\n      }\n\n      @Then(\"^user is on login screen$\")\n      public void user_is_on_login_screen() throws Throwable {\n        //sample Code goes here\n        System.out.println(\"Then\");\n      }\n    }\n    ```", "```java\n    throw new PendingException();\n    ```", "```java\n    package com.StepDefinitions;\n\n    import cucumber.api.java.en.Given;\n\n    public class DuplicateAmbiguous {\n\n      //Duplicate Steps\n      @Given(\"^user is on Application landing page$\")\n      public void user_is_on_Application_landing_page_duplicate() throws Throwable {\n        //sample code goes here\n        System.out.println(\"Duplicate\");\n      }\n\n    }\n    ```", "```java\n    Exception in thread \"main\" cucumber.runtime.DuplicateStepDefinitionException: Duplicate Step Definitions in com.StepDefinitions.DuplicateAmbiguous.user_is_on_Application_landing_page_duplicate() in file:/C:/Users/user/Documents/Xebia/Docs/cucumber/Book/Project/target/test-classes/ and com.StepDefinitions.LoginSteps.user_is_on_Application_landing_page() in file:/C:/Users/user/Documents/Xebia/Docs/cucumber/Book/Project/target/test-classes/\n     at cucumber.runtime.RuntimeGlue.addStepDefinition(RuntimeGlue.java:33)\n     at cucumber.runtime.java.JavaBackend.addStepDefinition(JavaBackend.java:153)\n     at cucumber.runtime.java.MethodScanner.scan(MethodScanner.java:68)\n     at cucumber.runtime.java.MethodScanner.scan(MethodScanner.java:41)\n     at cucumber.runtime.java.JavaBackend.loadGlue(JavaBackend.java:89)\n     at cucumber.runtime.Runtime.<init>(Runtime.java:90)\n     at cucumber.runtime.Runtime.<init>(Runtime.java:68)\n     at cucumber.runtime.Runtime.<init>(Runtime.java:64)\n     at cucumber.api.cli.Main.run(Main.java:35)\n     at cucumber.api.cli.Main.main(Main.java:18)\n\n    ```", "```java\n    package com.StepDefinitions;\n\n    import cucumber.api.java.en.Given;\n\n    public class DuplicateAmbiguous {\n\n      //Ambiguous Steps\n      @Given(\"^user is on (.*?) page$\")\n      public void user_is_on_Application_landing_page_ambiguous() throws Throwable {\n          //sample code goes here\n        System.out.println(\"Duplicate\");\n      }\n\n    }\n    ```", "```java\n      Scenario: checking pre-condition, action and results # C:/Users/user/Documents/Xebia/Docs/cucumber/Book/Project/src/test/java/com/features/login.feature:6\n        Given user is on Application landing page          # DuplicateAmbiguous.user_is_on_Application_landing_page_ambiguous()\n     cucumber.runtime.AmbiguousStepDefinitionsException: âœ½.Given user is on Application landing page(C:/Users/user/Documents/Xebia/Docs/cucumber/Book/Project/src/test/java/com/features/login.feature:7) matches more than one Step Definition:\n     ^user is on (.*?) page$ in DuplicateAmbiguous.user_is_on_Application_landing_page_ambiguous()\n     ^user is on Application landing page$ in LoginSteps.user_is_on_Application_landing_page()\n\n     at cucumber.runtime.RuntimeGlue.stepDefinitionMatch(RuntimeGlue.java:71)\n     at cucumber.runtime.Runtime.runStep(Runtime.java:265)\n     at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n     at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n     at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:48)\n     at cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:163)\n     at cucumber.runtime.Runtime.run(Runtime.java:120)\n     at cucumber.api.cli.Main.run(Main.java:36)\n     at cucumber.api.cli.Main.main(Main.java:18)\n\n        When user clicks Sign in button                    # LoginSteps.user_clicks_Sign_in_button()\n        Then user is on login screen                       # LoginSteps.user_is_on_login_screen()\n\n    1 Scenarios (1 failed)\n    3 Steps (1 failed, 2 skipped)\n    0m0.000s\n    ```", "```java\n    Scenario: login fail - wrong username\n        Given user is displayed login screen\n        When user enters \"wrongusername\" in username field\n        And user enters \"123456\" in password field\n        And user clicks Sign in button\n    ```", "```java\n    package com.StepDefinitions;\n\n    import cucumber.api.java.en.Given;\n    import cucumber.api.java.en.When;\n\n    public class LoginSteps {\n\n      @Given(\"^user is displayed login screen$\")\n      public void user_is_displayed_login_screen()  {\n      }\n\n     @When(\"^user enters \\\"(.*?)\\\" in username field$\")\n     public void user_enters_in_username_field(String username) {\n     System.out.println(username);\n     }\n\n     @When(\"^user enters \\\"(.*?)\\\" in password field$\")\n     public void user_enters_in_password_field(String password)  {\n     System.out.println(password);\n     }\n      @When(\"^user clicks Sign in button$\")\n      public void user_clicks_Sign_in_button() {\n      }\n    }\n    ```", "```java\n    Given I have 58 Dollars in my account\n    ```", "```java\n    @Given(\"I have (\\\\d+) Dollars in my account\")\n      public void I_have_dollar_acnt(int dollar) {\n        // Do something with the dollars\n      }\n    ```", "```java\n    Given I am available on \"Tuesday,Friday,Sunday\"\n    ```", "```java\n    @Given(\"^I am available on \\\"(.+)\\\"$\")\n    public void i_am_available_on(List<String> days)  {\n    System.out.println(days.size());\n    }\n    ```", "```java\n    Scenario: Optional Capture Groups/Alternation\n        #positive\n        Then I see following dollars in my account\n        #negative\n        Then I do not see following dollars in my account\n\n        Scenario: Optional Non capture Groups\n        Given I have following dollars in my account\n        Given He has following dollars in my account\n        Given User has following dollars in my account\n    ```", "```java\n    @Then(\"^I( do not see| see) following dollars in my account$\")\n    public void I_see_or_do_not_see_following_dollars_in_my_account(String seeOrDoNotSee) {\n        //print the value of capture group\n    System.out.println(seeOrDoNotSee);\n    }\n\n    @Given(\"^(?:I have|He has|User has) following dollars in my account$\")\n    public void have_following_dollars_in_my_account() {\n\n        // Non Capture groups are not captured in Step\n    }\n    ```", "```java\n    Scenario: Existing user Verification\n        Given user is displayed login screen\n        Then we verify following user exists\n          | Name    | Email           |\n          | Shankar | sgarg@email.com |\n          | Ram     | ram@email.com   |\n          | Sham    | sham@email.org  |\n    ```", "```java\n    @Then(\"^we verify following user exists$\")\n    public void we_verify_following_user_exists(DataTable arg1) throws Throwable {\n        /* Write code here that turns the phrase above into \n        concrete actions\n        For automatic transformation, change DataTable to \n        one of List<YourType>, List<List<E>>, \n        List<Map<K,V>> or Map<K,V>.\n        E,K,V must be a scalar (String, Integer, Date, \n        enum etc) */\n        throw new PendingException();\n      }\n    ```", "```java\n    @Then(\"^we verify following user exists$\")\n    public void we_verify_following_user_exists(DataTable userDetails) {\n\n      List<List<String>> details = userDetails.raw();\n\n      for (int i = 0; i < details.size(); i++) {\n        for (int j = 0; j < details.get(i).size(); j++) {\n        System.out.println(details.get(i).get(j));\n        }\n      }\n    }\n    ```", "```java\n    public class User {\n        public String name;\n        public String email;\n      }\n    ```", "```java\n    @Then(\"^we verify following user exists$\")\n    public void we_verify_following_user_exists(List<User> userList) {\n        for (User u : userList) {\n          System.out.println(u.name);\n        }\n      }\n    ```", "```java\n    @Then(\"^we verify following user exists$\")\n    public void we_verify_following_user_exists(List<Map<String, String>> userList) {\n        for (Map<String, String> u : userList) {\n          System.out.println(u.get(\"Name\"));\n        }\n      }\n    ```", "```java\n    {Name=Shankar, Email=sgarg@email.com}\n    {Name=Ram, Email=ram@email.com}\n    {Name=Sham, Email=sham@email.org}\n    ```", "```java\n    @Then(\"^we verify following user exists$\")\n    public void we_verify_following_user_exists(List<List<String>> userList) {\n        for (List<String> u : userList) {\n          System.out.println(u);\n        }\n      }\n    ```", "```java\n    [Name, Email]\n    [Shankar, sgarg@email.com]\n    [Ram, ram@email.com]\n    [Sham, sham@email.org]\n    ```", "```java\n      Scenario: Table Diff\n        Given user send a get request to \"localhost:8080/e\"\n        Then user gets following response\n          | username | age |\n          | sham     | 25  |\n          | ram      | 26  |\n    ```", "```java\n    @Given(\"^user send a get request to \\\"(.*?)\\\"$\")\n    public void user_send_a_get_request_to(String arg1) {\n        // lets assume user sends a get request\n      }\n\n    @Then(\"^user gets following response$\")\n    public void user_gets_following_response(DataTable expectedUsers) {\n\n        /* lets create a table for system response \n        (actualUsers) */\n        List<List<String>> actualUsers = new ArrayList<List<String>>();\n        actualUsers.add( Arrays.asList(\"username\", \"age\"));\n        actualUsers.add( Arrays.asList(\"sham\", \"25\"));\n        actualUsers.add( Arrays.asList(\"ram\", \"26\"));\n\n        /* Use the diff method to differentiate two data \n        tables */\n     expectedUsers.diff(actualUsers);\n      }\n    ```", "```java\n    Given a book named \"cucumber cookbook\" with following body\n     \"\"\"\n     Title â€“ Cucumber cookbook\n     Author of this book is first time writer so please excuse the naÃ¯ve mistakes. But he will definitely improve with chapters he writes.\n     \"\"\"\n\n    ```", "```java\n    @Given(\"^a book named \\\"(.*?)\\\" with following body$\")\n    public void a_book_named_with_following_body(String arg1, String arg2) {\n        //prints the regular expression\n        System.out.println(arg1);\n\n     //prints the Doc String\n     System.out.println(arg2);\n     }\n\n    ```", "```java\n    Scenario Outline: E-mail content verification\n     Given I have a user account with <Role> rights\n     Then I should receive an email with the body:\n     \"\"\"\n     Dear user,\n     You have been granted <Role> rights.  You are <details>. Please be \n     responsible.\n     -The Admins\n     \"\"\"\n\n     Examples:\n     | Role    | details                                       |\n     | Manager | now able to manage your employee accounts     |\n     | Admin   | able to manage any user account on system |\n\n    ```", "```java\n    @Given(\"^I have a user account with (.*?) rights$\")\n    public void i_have_a_user_account_with_Manager_rights(String role) {\n\n       //prints the role\n      System.out.println(role);\n\n    }\n\n    @Then(\"^I should receive an email with the body:$\")\n    public void i_should_receive_an_email_with_the_body(String docString) {\n\n     /* prints the content of Doc String with Scenario \n     outlineSubstitution */\n     System.out.println(docString);\n    }\n\n    ```", "```java\nGiven My Birthday is on \"29-12-1986\"\n```", "```java\n@Given(\"^My Birthday is on \\\"(.*?)\\\"$\")\n  public void my_Birthday_is_on(@Format(\"dd-MM-yyyy\") Date bday) {\n    //prints the text converted to Java.util.Date\n    System.out.println(bday);\n\n    //prints the class of bday to confirm it's a Date\n    System.out.println(bday.getClass());\n  }\n```"]