["```java\nint value1 = 5;\nint value2 = 10;\nint sum = val1 + val2;\nSystem.out.println(sum); // 15\nvalue1 = 15;\nSystem.out.println(sum); // 15\n\n```", "```java\nint value1 = 5;\nint value2 = 10;\nint sum = val1 + val2;\nSystem.out.println(sum); // 15\nvalue1 = 15;\nSystem.out.println(sum); // 25\n```", "```java\n$ java -version\njava version \"1.8.0_101\"\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\n```", "```java\nplugins {\n    id \"io.spring.dependency-management\" version \"1.0.5.RELEASE\"\n}\ngroup 'com.reactor'\nversion '1.0-SNAPSHOT'\napply plugin: 'java'\nsourceCompatibility = 1.8\nrepositories {\n    mavenCentral()\n}\ndependencyManagement {\n    imports {\n        mavenBom \"io.projectreactor:reactor-bom:Bismuth-RELEASE\"\n    }\n}\ndependencies {\n    compile 'io.projectreactor:reactor-core'\n    testCompile group: 'junit', name: 'junit', version: '4.12'\n}\n```", "```java\n@Test\npublic void testFibonacci() {\n  Flux<Long> fibonacciGenerator = Flux.generate(\n    () -> Tuples.<Long, Long>of(0L, 1L),\n     (state, sink) -> {\n       sink.next(state.getT1());\n       return Tuples.of(state.getT2(), state.getT1() + state.getT2());\n     });\n     List<Long> fibonacciSeries = new LinkedList<>();\n     int size = 50;\n     fibonacciGenerator.take(size).subscribe(t -> {\n       fibonacciSeries.add(t);\n     });\n     System.out.println(fibonacciSeries);\n     assertEquals( 7778742049L, fibonacciSeries.get(size-1).longValue());\n}\n```"]