["```java\n$ activator new pathtoNewApp/sampleApp just-play-scala\n\n```", "```java\nsampleApp $ sbt run\n\n```", "```java\nname := \"sampleApp\"\"\"\n\nversion := \"1.0.0\"\n\nlazy val root = project.in(file(\".\")).enablePlugins(PlayScala)\n```", "```java\nresolvers += Resolver.sonatypeRepo(\"snapshots\")\n\nscalacOptions ++= Seq(\"-feature\", \"-language:reflectiveCalls\")\n```", "```java\nimport sbt._\nimport Keys._\nimport play.Play.autoImport._\nimport PlayKeys._\n\nobject ApplicationBuild extends Build {\n\n  val appName = \"SimpleApp\"\n  val appVersion = \"1.0.0\"\n\n  val appDependencies = Seq(\n    // Add your project dependencies here\n  )\n\n  val main = Project(appName, file(\".\")).enablePlugins(play.PlayScala).settings(\n    version := appVersion,\n    libraryDependencies ++= appDependencies\n  )\n\n}\n```", "```java\nresolvers += \"Typesafe repository\" at \"http://repo.typesafe.com/typesafe/releases/\"\n\naddSbtPlugin(\"com.typesafe.play\" % \"sbt-plugin\" % \"2.3.8\")\n```", "```java\n@(title: String)(content: Html)\n\n<!DOCTYPE html>\n\n<html>\n    <head>\n        <title>@title</title>\n    </head>\n    <body>\n    @content\n    </body>\n</html>\n```", "```java\npackage controllers\n\nimport play.api.mvc._\nimport play.api.templates.Html\n\nobject SampleAppController extends Controller {\n  def index = Action {\n    val content = Html(\"<div>This is the content for the sample app<div>\")\n        Ok(views.html.main(\"Home\")(content))\n  }\n  }\n```", "```java\nGET         /                        controllers.SampleAppController.index\n```", "```java\ncurl 'http://localhost:9000/' \n\n```", "```java\nGET         /assets/*file            controllers.Assets.at(path=\"/public\", file)\n```", "```java\n@main(\"Task Tracker\") {\n\n    <h2>Task Tracker</h2>\n\n    <div>\n        <form>\n        <input type=\"text\" name=\"taskName\" placeholder=\"Add a new Task\" required>\n\n        <input type=\"submit\" value=\"Add\">\n        </form>\n    </div>\n\n}\n```", "```java\npackage controllers\n\nimport play.api.mvc._\n\nobject TaskController extends Controller {\n  def index = Action {\n    Ok(views.html.index())\n  }\n}\n```", "```java\npackage models\n\ncase class Task(id: Int, name: String)\n\nobject Task {\n\n  private var taskList: List[Task] = List()\n\n  def all: List[Task] = {\n    taskList\n  }\n\n  def add(taskName: String) = {\n    val newId: Int = taskList.last.id + 1\n    taskList = taskList ++ List(Task(newId, taskName))\n  }\n\n  def delete(taskId: Int) = {\n    taskList = taskList.filterNot(task => task.id == taskId)\n  }\n}\n```", "```java\nimport models.Task\nimport play.api.mvc._\n\nobject TaskController extends Controller {\n\n  def index = Action {\n    Redirect(routes.TaskController.tasks)\n  }\n\n  def tasks = Action {\n    Ok(views.html.index(Task.all))\n  }\n\n  def newTask = Action(parse.urlFormEncoded) {\n    implicit request =>\n      Task.add(request.body.get(\"taskName\").get.head)\n      Redirect(routes.TaskController.index)\n  }\n\n  def deleteTask(id: Int) = Action {\n    Task.delete(id)\n    Ok\n  }\n\n}\n```", "```java\nGET           /                    controllers.TaskController.index\n\n# Tasks\nGET           /tasks               controllers.TaskController.tasks\nPOST          /tasks               controllers.TaskController.newTask\n```", "```java\n@(tasks: List[Task])\n\n@main(\"Task Tracker\") {\n\n    <h2>Task Tracker</h2>\n    <div>\n        <form action=\"@routes.TaskController.newTask()\" method=\"post\">\n            <input type=\"text\" name=\"taskName\" placeholder=\"Add a new Task\" required>\n            <input type=\"submit\" value=\"Add\">\n        </form>\n    </div>\n    <div>\n        <ul>\n        @tasks.map { task =>\n            <li>\n                @task.name\n            </li>\n        }\n        </ul>\n    </div>\n}\n```", "```java\n            <li>\n                @task.name <button onclick=\"deleteTask ( @task.id) ;\">Remove</button>\n            </li>\n```", "```java\nDELETE        /tasks/:id         controllers.TaskController.deleteTask (id: Int).\n```", "```java\n    <script>\n    function deleteTask ( id ) {\n        var req = new XMLHttpRequest ( ) ;\n        req.open ( \"delete\", \"/tasks/\" + id ) ;\n        req.onload = function ( e ) {\n            if ( req.status = 200 ) {\n                document.location.reload ( true ) ;\n            }\n        } ;\n        req.send ( ) ;\n\n    }\n    </script>\n```", "```java\n<link rel=\"stylesheet\" media=\"screen\" href=\"@routes.Assets.at(\"stylesheets/taskTracker.css\")\">\n```"]