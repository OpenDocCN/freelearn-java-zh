["```java\nhttp.sessionManagement(session -> session.sessionFixation().migrateSession());\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n    http.sessionManagement(session -> session.sessionFixation().none());\n    ```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n    http.sessionManagement(session -> session.maximumSessions(1));\n    ```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/SessionConfig.java\n    @Configuration\n    public class SessionConfig {\n        @Bean\n        public HttpSessionEventPublisher httpSessionEventPublisher() {\n           return new HttpSessionEventPublisher();\n        }\n    }\n    ```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\nhttp.sessionManagement(session -> session.maximumSessions(1)\n       .expiredUrl(\"/login/form?expired\"));\n```", "```java\n//src/main/resources/templates/login.xhtml\n<div th:if=\"${param.expired != null}\" class=\"alert alert-success\">\n    <strong>Session Expired</strong>\n    <span>You have been forcibly logged out due to multiple\n    sessions on the same account (only one active\n        session per user is allowed).</span>\n</div>\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\nhttp.sessionManagement(session -> session.maximumSessions(1)\n        .expiredUrl(\"/login/form?expired\").maxSessionsPreventsLogin(true));\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/SessionConfig.java\n    @Bean\n    public SessionRegistry sessionRegistry(){\n        return new SessionRegistryImpl();\n    }\n    ```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n    http.sessionManagement(session -> session.maximumSessions(-1)\n            .sessionRegistry(sessionRegistry)\n            .expiredUrl(\"/login/form?expired\")\n            .maxSessionsPreventsLogin(true));\n    ```", "```java\n//src/main/java/com/packtpub/springsecurity/web/controllers/UserSessionController.java\n@Controller\npublic class UserSessionController {\n    private final SessionRegistry sessionRegistry;\n    public UserSessionController(SessionRegistry sessionRegistry) {\n        this.sessionRegistry = sessionRegistry;\n    }\n    @GetMapping(\"/user/sessions/\")\n    public String sessions(Authentication authentication, ModelMap model) {\n        List<SessionInformation> sessions = sessionRegistry.getAllSessions(authentication.getPrincipal(),\n                false);\n        model.put(\"sessions\", sessions);\n        return \"user/sessions\";\n    }\n    @PostMapping(value=\"/user/sessions/{sessionId}\")\n    public String removeSession(@PathVariable String sessionId, RedirectAttributes redirectAttrs) {\n        SessionInformation sessionInformation = sessionRegistry.getSessionInformation(sessionId);\n        if(sessionInformation != null) {\n            sessionInformation.expireNow();\n        }\n        redirectAttrs.addFlashAttribute(\"message\", \"Session was removed\");\n        return \"redirect:/user/sessions/\";\n    }\n}\n```", "```java\n//src/main/resources/templates/user/sessions.xhtml\n…\n<tr th:each=\"currentSession : ${sessions}\">\n    <td th:text=\"${#calendars.format(currentSession.lastReques, 'yyyy-MM-dd HH:mm')}\">lastUsed</td>\n    <td th:text=\"${currentSession.sessionId}\"></td>\n    <td>\n        <form action=\"#\" th:action=\"@{'/user/sessions/{id}'(id=${currentSession.sessionId)}\"\n              th:method=\"post\" cssClass=\"form-horizon\"al\">\n            <input type=\"sub\"it\" value=\"Del\"te\" class=\"\"tn\"/>\n        </form>\n    </td>\n</tr>\n...\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n    @Configuration\n    @EnableWebSecurity(debug = true)\n    public class SecurityConfig {\n    ...\n    http.sessionManagement(session -> session\n           .sessionCreationPolicy(SessionCreationPolicy.NEVER)\n           .maximumSessions(-1)\n           .sessionRegistry(sessionRegistry)\n           .expiredUrl(\"/login/form?expired\")\n           .maxSessionsPreventsLogin(true));\n    ```", "```java\n    ******************************************************\n    *******   Security debugging is enabled.        ******\n    *******  This may include sensitive information.******\n    *******  Do not use in a production system!     ******\n    ```", "```java\n    ******************************************************\n    2024-02-02T20:17:27.859+01:00  INFO 54253 --- [nio-8080-exec-1] Spring Security Debugger                :\n    ******************************************************\n    New HTTP session created: 8C85C6E21D976ED6A1EDE2F8877EB227\n    ```"]