["```java\n    public class TransferServiceImpl implements TransferService { \n      AccountRepository accountRepository; \n      TransferRepository transferRepository; \n      public TransferServiceImpl(AccountRepository accountRepository, \n      TransferRepository transferRepository) { \n        super(); \n        // Specify a specific implementation in the constructor \n        instead of using dependency injection\n        this.accountRepository = new JdbcAccountRepository(); \n        this.transferRepository = new JdbcTransferRepository(); \n      } \n      // Method within this service that uses the accountRepository and \n      transferRepository\n      @Override \n      public void transferAmmount(Long a, Long b, Amount amount) { \n        Account accountA = accountRepository.findByAccountId(a); \n        Account accountB = accountRepository.findByAccountId(b); \n        transferRepository.transfer(accountA, accountB, amount); \n      } \n    }   \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.service;\n    public class TransferServiceImpl implements TransferService { \n      AccountRepository accountRepository; \n      TransferRepository transferRepository; \n      public TransferServiceImpl(AccountRepository accountRepository,\n      TransferRepository transferRepository) { \n        this.accountRepository = RepositoryFactory.getInstance(); \n        this.transferRepository = RepositoryFactory.getInstance(); \n      }\n    @Override\n    public void transferAmount(Long a, Long b, Amount amount) { \n      Account accountA = accountRepository.findByAccountId(a); \n      Account accountB = accountRepository.findByAccountId(b); \n      transferRepository.transfer(accountA, accountB, amount); \n    } \n   } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.service; \n    public class TransferServiceImpl implements TransferService { \n      AccountRepository accountRepository; \n      TransferRepository transferRepository; \n      public TransferServiceImpl(AccountRepository accountRepository, \n      TransferRepository transferRepository) { \n        this.accountRepository = accountRepository; \n        this.transferRepository = transferRepository; \n     } \n     @Override \n     public void transferAmmount(Long a, Long b, Amount amount) { \n       Account accountA = accountRepository.findByAccountId(a); \n       Account accountB = accountRepository.findByAccountId(b); \n       transferRepository.transfer(accountA, accountB, amount); \n     } \n    } \n```", "```java\n    public class TransferServiceImpl implements TransferService { \n      AccountRepository accountRepository; \n      TransferRepository transferRepository; \n      public TransferServiceImpl(AccountRepository accountRepository,    \n      TransferRepository transferRepository) { \n        this.accountRepository = accountRepository; \n        this.transferRepository = transferRepository; \n      } \n      // ... \n    }\n```", "```java\n    public class JdbcAccountRepository implements AccountRepository{ \n      JdbcTemplate jdbcTemplate; \n      public JdbcAccountRepository(DataSource dataSource) { \n        this.jdbcTemplate = new JdbcTemplate(dataSource); \n      } \n      // ... \n    }\n```", "```java\n    public class JdbcTransferRepository implements TransferRepository{ \n      JdbcTemplate jdbcTemplate; \n      public JdbcTransferRepository(DataSource dataSource) { \n        this.jdbcTemplate = new JdbcTemplate(dataSource); \n      } \n       // ... \n    }\n```", "```java\n    public class TransferServiceImpl implements TransferService { \n      AccountRepository accountRepository; \n      TransferRepository transferRepository; \n\n      public void setAccountRepository(AccountRepository \n      accountRepository) { \n        this.accountRepository = accountRepository; \n      } \n      public void setTransferRepository(TransferRepository  \n      transferRepository) { \n        this.transferRepository = transferRepository; \n      } \n      // ... \n    } \n```", "```java\n    public class JdbcAccountRepository implements AccountRepository{ \n      JdbcTemplate jdbcTemplate; \n      public setDataSource(DataSource dataSource) { \n        this.jdbcTemplate = new JdbcTemplate(dataSource); \n    } \n     // ... \n   } \n```", "```java\n    public class JdbcTransferRepository implements TransferRepository{ \n      JdbcTemplate jdbcTemplate; \n      public setDataSource(DataSource dataSource) { \n        this.jdbcTemplate = new JdbcTemplate(dataSource); \n   } \n    // ... \n  } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.config; \n    import org.springframework.context.annotation.Configuration; \n    @Configuration \n    public class AppConfig { \n         //.. \n    } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.config; \n    import org.springframework.context.annotation.Bean; \n    import org.springframework.context.annotation.Configuration; \n    @Configuration \n    public class AppConfig { \n      @Bean \n      public TransferService transferService(){ \n        return new TransferServiceImpl(); \n      } \n     @Bean \n     public AccountRepository accountRepository() { \n       return new JdbcAccountRepository(); \n     } \n     @Bean \n     public TransferRepository transferRepository() { \n       return new JdbcTransferRepository(); \n     } \n   } \n```", "```java\n    @Bean(name=\"service\") \n    public TransferService transferService(){ \n     return new TransferServiceImpl(); \n    } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.config; \n    import org.springframework.context.annotation.Bean; \n    import org.springframework.context.annotation.Configuration; \n    @Configuration \n    public class AppConfig { \n      @Bean \n      public TransferService transferService(){ \n        return new TransferServiceImpl(accountRepository(), \n        transferRepository()); \n     } \n     @Bean \n     public AccountRepository accountRepository() { \n       return new JdbcAccountRepository(); \n     } \n     @Bean \n     public TransferRepository transferRepository() { \n       return new JdbcTransferRepository(); \n     } \n    } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.config; \n    import org.springframework.context.annotation.Bean; \n    import org.springframework.context.annotation.Configuration; \n    @Configuration \n    public class AppConfig { \n      @Bean \n      public TransferService transferService(AccountRepository \n      accountRepository, TransferRepository transferRepository){ \n        return new TransferServiceImpl(accountRepository, \n        transferRepository); \n     } \n     @Bean \n     public AccountRepository accountRepository() { \n       return new JdbcAccountRepository(); \n     } \n     @Bean \n     public TransferRepository transferRepository() { \n       return new JdbcTransferRepository(); \n     } \n    } \n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n    <beans  \n\n     xsi:schemaLocation=\"http://www.springframework.org/schema/beans   \n     http://www.springframework.org/schema/beans/spring-beans.xsd\"> \n\n     <!-- Configuration for bean definitions go here --> \n\n    </beans> \n```", "```java\n    <bean id=\"transferService\"    \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.service.TransferServiceImpl\"/> \n    <bean id=\"accountRepository\"   \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcAccountRepository\"/> \n    <bean id=\"transferService\"   \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcTransferRepository\"/> \n```", "```java\n    <bean id=\"transferService\"   \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.service.TransferServiceImpl\"> \n     <constructor-arg ref=\"accountRepository\"/> \n     <constructor-arg ref=\"transferRepository\"/> \n    </bean> \n    <bean id=\"accountRepository\"    \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcAccountRepository\"/> \n    <bean id=\"transferRepository\"       \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcTransferRepository\"/> \n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n    <beans  \n\n     xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n     http://www.springframework.org/schema/beans/spring-beans.xsd\"> \n\n    <bean id=\"transferService\"    \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.service.TransferServiceImpl\"  \n     c:accountRepository-ref=\"accountRepository\" c:transferRepository-\n     ref=\"transferRepository\"/> \n    <bean id=\"accountRepository\"    \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcAccountRepository\"/> \n    <bean id=\"transferRepository\"    \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcTransferRepository\"/> \n\n     <!-- more bean definitions go here --> \n\n    </beans> \n```", "```java\n    <bean id=\"transferService\"       \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.service.TransferServiceImpl\"> \n     <property name=\"accountRepository\"  ref=\"accountRepository\"/> \n     <property name=\"transferRepository\" ref=\"transferRepository\"/> \n    </bean> \n    <bean id=\"accountRepository\"      \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcAccountRepository\"/> \n    <bean id=\"transferRepository\"   \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcTransferRepository\"/> \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.service; \n\n    import com.packt.patterninspring.chapter4.bankapp.model.Account; \n    import com.packt.patterninspring.chapter4.bankapp.model.Amount; \n    import com.packt.patterninspring.chapter4.bankapp.\n     repository.AccountRepository; \n    import com.packt.patterninspring.chapter4.bankapp.\n     repository.TransferRepository; \n\n    public class TransferServiceImpl implements TransferService { \n      AccountRepository accountRepository; \n      TransferRepository transferRepository; \n\n      public void setAccountRepository(AccountRepository   \n      accountRepository) { \n        this.accountRepository = accountRepository; \n      } \n      public void setTransferRepository(TransferRepository \n      transferRepository) { \n         this.transferRepository = transferRepository; \n      } \n      @Override \n      public void transferAmmount(Long a, Long b, Amount amount) { \n        Account accountA = accountRepository.findByAccountId(a); \n        Account accountB = accountRepository.findByAccountId(b); \n        transferRepository.transfer(accountA, accountB, amount); \n      } \n    } \n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n    <beans  \n\n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans \n      http://www.springframework.org/schema/beans/spring-beans.xsd\"> \n\n    <bean id=\"transferService\"    \n     class=\"com.packt.patterninspring.chapter4.bankapp.\n     service.TransferServiceImpl\"  \n     p:accountRepository-ref=\"accountRepository\" p:transferRepository-\n     ref=\"transferRepository\"/> \n    <bean id=\"accountRepository\"   \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcAccountRepository\"/> \n    <bean id=\"transferRepository\"   \n     class=\"com.packt.patterninspring.chapter4.\n     bankapp.repository.jdbc.JdbcTransferRepository\"/> \n\n    <!-- more bean definitions go here --> \n\n    </beans> \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.service; \n    public interface TransferService { \n      void transferAmmount(Long a, Long b, Amount amount); \n    } \n```", "```java\n    package com.packt.patterninspring.chapter1.bankapp.service; \n    import org.springframework.stereotype.Component; \n    @Component \n    public class TransferServiceImpl implements TransferService { \n      @Override \n      public void transferAmmount(Long a, Long b, Amount amount) { \n         //business code here \n      } \n   } \n```", "```java\n    package com.packt.patterninspring.chapter1.bankapp.service; \n    import org.springframework.stereotype.Service; \n    @Service \n    public class TransferServiceImpl implements TransferService { \n      @Override \n      public void transferAmmount(Long a, Long b, Amount amount) { \n         //business code here \n      } \n    } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.repository.jdbc; \n    import org.springframework.stereotype.Repository; \n    import com.packt.patterninspring.chapter4.bankapp.model.Account; \n    import com.packt.patterninspring.chapter4.bankapp.model.Amount; \n    import com.packt.patterninspring.chapter4.bankapp.repository.\n      AccountRepository; \n    @Repository \n    public class JdbcAccountRepository implements AccountRepository { \n      @Override \n      public Account findByAccountId(Long accountId) { \n        return new Account(accountId, \"Arnav Rajput\", new   \n        Amount(3000.0)); \n      } \n    } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.repository.jdbc; \n    import org.springframework.stereotype.Repository; \n    import com.packt.patterninspring.chapter4.bankapp.model.Account; \n    import com.packt.patterninspring.chapter4.bankapp.model.Amount; \n    import com.packt.patterninspring.chapter4.bankapp.\n      repository.TransferRepository; \n    @Repository \n    public class JdbcTransferRepository implements TransferRepository { \n      @Override \n      public void transfer(Account accountA, Account accountB, Amount \n      amount) { \n        System.out.println(\"Transfering amount from account A to B via \n        JDBC implementation\"); \n      } \n    } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.config; \n\n    import org.springframework.context.annotation.ComponentScan; \n    import org.springframework.context.annotation.Configuration; \n\n    @Configuration \n    @ComponentScan \n    public class AppConfig { \n\n    } \n```", "```java\n    @Configuration \n    @ComponentScan(\"com.packt.patterninspring.chapter4.bankapp\") \n    public class AppConfig { \n\n    } \n```", "```java\n    @Configuration \n    @ComponentScan(basePackages=\"com.packt.patterninspring.\n    chapter4.bankapp\") \n    public class AppConfig { \n\n    } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.config; \n    import org.springframework.context.annotation.ComponentScan; \n    import org.springframework.context.annotation.Configuration; \n    @Configuration \n    @ComponentScan(basePackages=       \n    {\"com.packt.patterninspring.chapter4.\n    bankapp.repository.jdbc\",\"com.packt.patterninspring.\n    chapter4.bankapp.service\"}) \n    public class AppConfig { \n\n    } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.config; \n    import org.springframework.context.annotation.ComponentScan; \n    import org.springframework.context.annotation.Configuration; \n    import com.packt.patterninspring.chapter4.bankapp.\n     repository.AccountRepository; \n    import com.packt.patterninspring.chapter4.\n     bankapp.service.TransferService; \n    @Configuration \n    @ComponentScan(basePackageClasses=   \n    {TransferService.class,AccountRepository.class}) \n    public class AppConfig { \n\n    } \n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n    <beans  \n\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans \n    http://www.springframework.org/schema/beans/spring-beans.xsd \n    http://www.springframework.org/schema/context \n    http://www.springframework.org/schema/context/spring-context.xsd\"> \n    <context:component-scan base-    \n    package=\"com.packt.patterninspring.chapter4.bankapp\" /> \n    </beans> \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.service; \n    import org.springframework.beans.factory.annotation.Autowired; \n    import org.springframework.stereotype.Service; \n    import com.packt.patterninspring.chapter4.bankapp.model.Account; \n    import com.packt.patterninspring.chapter4.bankapp.model.Amount; \n    import com.packt.patterninspring.chapter4.bankapp.\n     repository.AccountRepository; \n    importcom.packt.patterninspring.chapter4.\n     bankapp.repository.TransferRepository; \n    @Service \n    public class TransferServiceImpl implements TransferService { \n      AccountRepository accountRepository; \n      TransferRepository transferRepository; \n    @Autowired \n    public TransferServiceImpl(AccountRepository accountRepository, \n    TransferRepository transferRepository) { \n      super(); \n      this.accountRepository = accountRepository; \n      this.transferRepository = transferRepository; \n    } \n    @Override \n    public void transferAmmount(Long a, Long b, Amount amount) { \n      Account accountA = accountRepository.findByAccountId(a); \n      Account accountB = accountRepository.findByAccountId(b); \n      transferRepository.transfer(accountA, accountB, amount); \n    } \n   } \n```", "```java\n    public class TransferServiceImpl implements TransferService { \n      //... \n      @Autowired \n      public void setAccountRepository(AccountRepository  \n      accountRepository) { \n        this.accountRepository = accountRepository; \n      } \n      @Autowired \n      public void setTransferRepository(TransferRepository \n      transferRepository) { \n        this.transferRepository = transferRepository; \n      } \n      //... \n    } \n```", "```java\n    public class TransferServiceImpl implements TransferService { \n      @Autowired \n      AccountRepository accountRepository; \n      @Autowired \n      TransferRepository transferRepository; \n      //... \n    } \n```", "```java\n    @Autowired(required = false) \n    public void setAccountRepository(AccountRepository\n    accountRepository) { \n      this.accountRepository = accountRepository; \n    }  \n```", "```java\n    @Service \n    public class TransferServiceImpl implements TransferService { \n    @Autowired \n    public TransferServiceImpl(AccountRepository accountRepository) { \n    ... } \n    } \n```", "```java\n    @Repository \n    public class JdbcAccountRepository implements AccountRepository \n    {..} \n   @Repository \n   public class JpaAccountRepository implements AccountRepository {..} \n```", "```java\n    At startup: NoSuchBeanDefinitionException, no unique bean of type \n    [AccountRepository] is defined: expected single bean but found 2... \n```", "```java\n    @Service \n    public class TransferServiceImpl implements TransferService { \n    @Autowired \n    public TransferServiceImpl( @Qualifier(\"jdbcAccountRepository\")\n    AccountRepository accountRepository) { ... } \n```", "```java\n    @Repository(\"jdbcAccountRepository\") \n    public class JdbcAccountRepository implements AccountRepository \n    {..} \n    @Repository(\"jpaAccountRepository\") \n    public class JpaAccountRepository implements AccountRepository {..} \n```", "```java\n    public interface FactoryBean<T> { \n     T getObject() throws Exception; \n     Class<T> getObjectType(); \n     boolean isSingleton(); \n   } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.service; \n    import com.packt.patterninspring.chapter4.\n     bankapp.repository.IAccountRepository; \n    public class TransferService { \n      IAccountRepository accountRepository; \n      public TransferService(IAccountRepository accountRepository){ \n        this.accountRepository = accountRepository; \n      } \n      public void transfer(String accountA, String accountB, Double \n      amount){ \n        System.out.println(\"Amount has been tranferred\"); \n      } \n    } \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.repository; \n    import org.springframework.beans.factory.FactoryBean; \n    public class AccountRepositoryFactoryBean implements \n    FactoryBean<IAccountRepository> { \n      @Override \n      public IAccountRepository getObject() throws Exception { \n        return new AccountRepository(); \n      } \n      @Override \n      public Class<?> getObjectType() { \n        return IAccountRepository.class; \n      } \n      @Override \n      public boolean isSingleton() { \n        return false; \n      } \n    }  \n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n    <beans  \n\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans \n    http://www.springframework.org/schema/beans/spring-beans.xsd\"> \n\n    <bean id=\"transferService\" class=\"com.packt.patterninspring.\n     chapter4.bankapp.service.TransferService\"> \n     <constructor-arg ref=\"accountRepository\"/> \n    </bean> \n    <bean id=\"accountRepository\"    \n     class=\"com.packt.patterninspring.chapter4.\n      bankapp.repository.AccountRepositoryFactoryBean\"/> \n    </beans> \n```", "```java\n    package com.packt.patterninspring.chapter4.bankapp.config; \n    import org.springframework.context.annotation.Bean; \n    import org.springframework.context.annotation.Configuration; \n    import com.packt.patterninspring.chapter4.bankapp.\n     repository.AccountRepositoryFactoryBean; \n    import com.packt.patterninspring.chapter4.\n     bankapp.service.TransferService; \n    @Configuration \n    public class AppConfig { \n      public TransferService transferService() throws Exception{ \n        return new TransferService(accountRepository().getObject()); \n      } \n    @Bean \n    public AccountRepositoryFactoryBean accountRepository(){ \n      return new AccountRepositoryFactoryBean(); \n    } \n    } \n```", "```java\n                @ComponenttScan (( {{ \"org\", \"com\" }} ))\n```", "```java\n                 @ComponentScan ( {  \n                  \"com.packt.patterninspring.chapter4.\n                  bankapp.repository\", \n                 \"com.packt.patterninspring.chapter4.bankapp.service\"} \n                  ) \n```"]