- en: Appendix A. The Future
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we reach the conclusion of *Mastering jBPM6*, traversing through the why,
    what, and how of jBPM, it becomes obligatory to discuss what the future holds.
    Of course, we are not foretellers, but when it comes to a technology that we use
    at the heart of our enterprise architecture and evangelize, we need to understand
    the place of this system in future computing.
  prefs: []
  type: TYPE_NORMAL
- en: 'The computing world is going through a brisk evolution, automation is the key
    and **Internet of Things** (**IoT**) is at the door, revolutionizing the world
    as we know it. In this short Appendix, we discuss the place of jBPM and the related
    technologies in the future, by detailing the following trends in computing:'
  prefs: []
  type: TYPE_NORMAL
- en: Business programming
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Convergence of enterprise architectures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business programming
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Enterprise applications are driven by business needs. In other words, we program
    these applications to satisfy certain business requirements. Further, in a traditional
    software development life cycle, the requirements are communicated by the business
    users to the software developers, who consolidate and convert them into executable
    implementations.
  prefs: []
  type: TYPE_NORMAL
- en: This conventional way of developing applications using programming languages
    has already been superseded by business-level execution languages that talk business
    (or use business-friendly jargon) such as BPEL. In the current arena, to improve
    usability and maintainability, they are evolving into applications supporting
    visual business-oriented programming of which jBPM is a flag bearer.
  prefs: []
  type: TYPE_NORMAL
- en: '"A picture is worth a thousand words"—this quote can explain why we need visual
    programming. The objective is obviously to communicate effectively. No longer
    is programming considered to be wizardry, programs and their logic are part of
    business operation and should be easily available to people across the organization.'
  prefs: []
  type: TYPE_NORMAL
- en: Further, we can confidently say that this is where programming is being led.
    The users must be able to view how the operations are done, how decisions are
    made, and what the impacts of a change are. jBPM modeling facilities are a huge
    leap into a completely visual programming experience. Currently, the jBPM arsenal
    allows us to model business processes and business rules. We can model data and
    user interfaces through a limited but useful functionality, which minimizes the
    development and deployment costs. We can also simulate a business process and
    see how it works along with analyzing the related performance metrics.
  prefs: []
  type: TYPE_NORMAL
- en: Already trending are buzzwords such as IoT or computing everywhere, from the
    perspective of BPM, these are activities in business operations. Visual programming
    can help us to encapsulate the logic for communicating with these pervasive devices
    and give the business, a picture of everyone connected to the process and everyone
    operating it.
  prefs: []
  type: TYPE_NORMAL
- en: Convergence of enterprise architectures for real-time and predictive analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Gone are the days when the IT infrastructure contained separate applications
    for operations, analytics, and administration. Today's IT infrastructure needs
    enterprise application suites that can deliver operations, analytics, and administration
    together, and can collaborate to share information (in real-time), which makes
    their functioning more efficient. For example, data from operations is used by
    analytics to detect fraudulent operations, thereby making operations more secure.
    Further, the future asks for more seamless interactions between these operations.
  prefs: []
  type: TYPE_NORMAL
- en: From a technical perspective, we can see these as a merger of multiple design
    patterns. We can see systems that efficiently merge **service-oriented architecture**
    (**SOA**) and event-driven architecture. For example, the LAMBDA architecture
    merges batching, analytics, and service provisioning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Such convergence can lead to more effective technologies such as predictive
    analytics. A BPM-based system can be used to produce, consume events, and interact
    with services. Thus, predictive analytics on these events is an obvious improvement.
    Moreover, BPMs can be used to take action on the results (or decisions) obtained
    by using these predictive analytic engines. This can have foreseeable applications
    in the following domains:'
  prefs: []
  type: TYPE_NORMAL
- en: Fraud detection.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suggestive marketing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More resilient manufacturing automation, and so on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The BLIP, that we have already discussed in [Chapter 1](ch01.html "Chapter 1. Business
    Process Modeling – Bridging Business and Technology"), *Business Process Modeling
    – Bridging Business and Technology*, is certainly moving to this goal. It provides
    a way to integrate business logic spread across operations and enable them to
    work collaboratively to achieve efficient business operations; jBPM is a vital
    part of BLIP.
  prefs: []
  type: TYPE_NORMAL
