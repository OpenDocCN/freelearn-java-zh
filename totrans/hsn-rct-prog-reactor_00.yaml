- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Reactor is an implementation of the Java 9 Reactive Streams specification, an
    API for asynchronous data processing. This specification is based on a reactive
    programming paradigm, enabling developers to build enterprise-grade, robust applications
    with reduced complexity and in less time. *Hands-On Reactive Programming with
    Reactor* shows you how Reactor works, as well as how to use it to develop reactive
    applications in Java.
  prefs: []
  type: TYPE_NORMAL
- en: The book begins with the fundamentals of Reactor and the role it plays in building
    effective applications. You will learn how to build fully non-blocking applications
    and will later be guided on the Publisher and Subscriber APIs. The first four
    chapters will help you to understand Reactive Streams and the Reactor framework.
    The following four chapters use Reactor to build a microservices SpringWebFlux
    extension to build REST-based web services. They demonstrate the concepts of the
    flow, backpressure, and execution models. You will gain an understanding of how
    to use two reactive composable APIs, Flux and Mono, which are used extensively
    to implement Reactive Extensions. In the final two chapters, you will gain an
    understanding of Reactive Streams and the Reactor framework.
  prefs: []
  type: TYPE_NORMAL
- en: The chapters explain the most important parts and build simple programs to establish
    a foundation. By the end of the book, you will have gained enough confidence to
    build reactive and scalable microservices.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For anyone with a basic understanding of Java's fundamental concepts, and how
    to develop event-driven and data-driven applications easily with Reactor, this
    book is for you â€“ a step-by-step guide to getting you up and running with Reactive
    Streams and the Reactor framework.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](56427f5d-9ba0-4582-be2a-1b7f3f116287.xhtml), *Getting Started with
    Reactive Streams*, explains the Reactive Streams API and introduces the reactive
    paradigm and its benefits. The chapter also introduces Reactor as an implementation
    of Reactive Streams.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](2886252b-5c5e-4b42-ab25-dd1145fe9d60.xhtml), *The Publisher and
    Subscriber APIs in a Reactor*, explains the Producer and Subscriber APIs and the
    corresponding Flux and Mono implications of Reactor. It also discusses use cases
    of Flux and Mono and the respective Sinks. We will also look into Hot and Cold
    variants of the components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](8ef46bf0-daa9-425c-a0f4-e5b6cefeca94.xhtml), *Data and Stream Processing*,
    tackles how we can process data generated by a Publisher before it gets consumed
    by a Subscriber, the possible operations available, and combining them to build
    a robust stream-processing pipeline. Stream processing also involves converting,
    pivoting, and aggregating data, and then generating new data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](22a39592-5ae5-4ef6-a062-f6a03d51e8a1.xhtml), *Processors*, introduces
    the out-of-the-box processors available in Reactor. Processors are special Publishers,
    which are also Subscribers, and it is quite important to understand why we need
    them before jumping into putting one into practice.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](0649271d-242a-443b-8229-72f0ce80d436.xhtml), *SpringWebFlux for
    Microservices*, introduces SpringWebFlux, a Reactor web extension. It explains
    the concepts of the RouterFunction, HandlerFunction, and FilterFunction. We will
    then build a REST-based microservice using Mongo as a store.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](5e6f3f39-3172-4cde-9e50-d4892791d847.xhtml), *Dynamic Rendering*,
    integrates a templating engine into the REST-based microservice we introduced
    in the previous chapter, to render dynamic content. It also demonstrates request
    filters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](a7dd0f00-77de-4c2b-8b48-72b30d6a6184.xhtml), *Flow Control and
    Backpressure*, discusses flow control, an important aspect of reactive programming,
    which is essentially required to control overruns by a fast Publisher. It also
    discusses various ways to control the complete pipeline processing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ce1c736c-6df3-4b4b-bd01-81c89202cae4.xhtml), *Handling Errors*,
    as its title suggests, explains how to handle errors. All Java developers are
    accustomed to the try-catch-finally block of error handling. This chapter translates
    it for stream processing. It also covers how we can recover from an error and
    how can we go about generating errors. This is an essential requirement for all
    enterprise applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](0204b5f6-1654-4d6e-8469-2fa253c1d7fa.xhtml), *Execution Control*,
    looks at the various strategies available in Reactor for processing the built
    stream. It could be scheduled at some interval or batched in groups, or all operations
    can be performed in parallel.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](dad34b5d-9fd0-40b7-87d8-917055ddde31.xhtml), *Testing and Debugging*,
    lists ways we can test a stream, because no development is complete without being
    tested. We will build JUnit tests that will use some of the testing utilities
    offered by Reactor to create robust tests. The chapter also lists ways to go about
    debugging asynchronous flows built over Reactor.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is essential to have a sound understanding of the basic Java concepts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Java Standard Edition, JDK 8, and IntelliJ IDEA IDE or above are required
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-Reactive-Programming-with-Reactor](https://github.com/PacktPublishing/Hands-On-Reactive-Programming-with-Reactor).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "All `Subscribe` methods return a `Disposable` type. This
    type can also be used to cancel the subscription."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packt.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](https://www.packtpub.com/).
  prefs: []
  type: TYPE_NORMAL
