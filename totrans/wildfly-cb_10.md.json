["```java\n$ cd $WILDFLY_HOME\n$ cp -a standalone sec-std-node-1\n```", "```java\n    $ cd $WILDFLY_HOME\n    $ cd sec-std-node-1/configuration\n    $ keytool -v -genkey -alias wildfly.ssl -keypass alias.2015 -keyalg RSA -keysize 2048 -sigalg SHA1withRSA -keystore wildfly.ssl.keystore -storepass keystore.2015\n\n    What is your first and last name?\n      [Unknown]:  WildFly Cookbook\n    What is the name of your organizational unit?\n      [Unknown]:  Packt Publishing\n    What is the name of your organization?\n      [Unknown]:  packtpub.com\n    What is the name of your City or Locality?\n      [Unknown]:  Birmingham\n    What is the name of your State or Province?\n      [Unknown]:  GB\n    What is the two-letter country code for this unit?\n      [Unknown]:  UK\n    Is CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK correct?\n      [no]:  yes\n\n    Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with a validity of 90 days\n      for: CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n\n    [Storing wildfly.ssl.keystore]\n    ```", "```java\n    $ keytool -list -v -keystore wildfly.ssl.keystore\n    Enter keystore password:\n\n    Keystore type: JKS\n    Keystore provider: SUN\n\n    Your keystore contains 1 entry\n\n    Alias name: wildfly.ssl\n    Creation date: Nov 21, 2014\n    Entry type: PrivateKeyEntry\n    Certificate chain length: 1\n    Certificate[1]:\n    Owner: CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Issuer: CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Serial number: 5514d1d1\n    Valid from: Fri Nov 21 10:36:31 CET 2014 until: Thu Feb 19 10:36:31 CET 2015\n    Certificate fingerprints:\n       MD5:  D3:FA:9D:20:6D:79:DF:83:C3:50:B1:AC:23:B2:7D:9F\n       SHA1: 89:AB:67:27:23:A4:89:85:06:10:FF:70:C6:6B:05:3D:14:DA:2D:AD\n       SHA256: 7C:DD:A7:E3:44:B4:C5:9F:05:EE:87:2D:75:35:C2:3C:90:00:1B:DF:67:89:9B:13:33:F7:58:55:74:89:F7:7C\n       Signature algorithm name: SHA1withRSA\n       Version: 3\n\n    Extensions:\n\n    #1: ObjectId: 2.5.29.14 Criticality=false\n    SubjectKeyIdentifier [\n    KeyIdentifier [\n    0000: 1A F5 F7 EC D8 88 D9 80   DE 34 E7 A9 00 75 6A 74  .........4...ujt\n    0010: E8 60 56 D4                                        .`V.\n    ]\n    ]\n\n    *******************************************\n    *******************************************\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ ./bin/standalone.sh -Djboss.server.base.dir=sec-std-node-1\n    ```", "```java\n    $ ./bin/jboss-cli.sh --connect\n    [standalone@localhost:9990 /] /core-service=management/security-realm=SSLRealm:add()\n    {\"outcome\" => \"success\"}\n    [standalone@localhost:9990 /] /core-service=management/security-realm=SSLRealm/server-identity=ssl:add(keystore-path=wildfly.ssl.keystore, keystore-relative-to=jboss.server.config.dir,keystore-password=keystore.2015, alias=wildfly.ssl, key-password=alias.2015)\n    {\n        \"outcome\" => \"success\",\n        \"response-headers\" => {\n            \"operation-requires-reload\" => true,\n            \"process-state\" => \"reload-required\"\n        }\n    }\n    [standalone@localhost:9990 /] :reload()\n    {\n        \"outcome\" => \"success\",\n        \"result\" => undefined\n    }\n    [standalone@localhost:9990 /] /subsystem=undertow/server=default-server/https-listener=https:add(socket-binding=https, security-realm=SSLRealm)\n    {\"outcome\" => \"success\"}\n    [standalone@localhost:9990 /]\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ cp -a domain sec-dmn-1\n    ```", "```java\n    $ cp sec-std-node-1/configuration/wildfly.ssl.keystore sec-dmn-1/configuration\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ ./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-1\n    ```", "```java\n    $ ./bin/jboss-cli.sh --connect\n    [domain@localhost:9990 /] /host=master/core-service=management/security-realm=SSLRealm:add()\n    {\n        \"outcome\" => \"success\",\n        \"result\" => undefined,\n        \"server-groups\" => undefined\n    }\n    [domain@localhost:9990 /] /host=master/core-service=management/security-realm=SSLRealm/server-identity=ssl:add(keystore-path=wildfly.ssl.keystore, keystore-relative-to=jboss.domain.config.dir,keystore-password=keystore.2015, alias=wildfly.ssl, key-password=alias.2015)\n    {\n        \"outcome\" => \"success\",\n        \"response-headers\" => {\n            \"operation-requires-reload\" => true,\n            \"process-state\" => \"reload-required\"\n        },\n        \"result\" => undefined,\n        \"server-groups\" => undefined\n    }\n    [domain@localhost:9990 /] :reload-servers\n    {\n        \"outcome\" => \"success\",\n        \"result\" => undefined,\n        \"server-groups\" => undefined,\n        \"response-headers\" => {\"process-state\" => \"reload-required\"}\n    }\n    [domain@localhost:9990 /]\n    ```", "```java\n    [domain@localhost:9990 /] /profile=full/subsystem=undertow/server=default-server/https-listener=https:add(socket-binding=https, security-realm=SSLRealm)\n    {\n        \"outcome\" => \"success\",\n        \"result\" => undefined,\n        \"server-groups\" => {\"main-server-group\" => {\"host\" => {\"master\" => {\n            \"server-one\" => {\"response\" => {\"outcome\" => \"success\"}},\n            \"server-two\" => {\"response\" => {\"outcome\" => \"success\"}}\n        }}}},\n        \"response-headers\" => {\"process-state\" => \"reload-required\"}\n    }\n    [domain@localhost:9990 /]\n    ```", "```java\n$ cd $WILDFLY_HOME\n$ cp -a standalone sec-std-node-2\n```", "```java\n    $ cd $WILDFLY_HOME\n    $ cd sec-std-node-2/configuration\n    $ keytool -v -genkey -alias wildfly.ssl.app -keyalg RSA -keysize 2048 -sigalg SHA1withRSA -keystore wildfly.ssl.app.keystore -storepass keystore.2015 -keypass alias.2015\n\n    What is your first and last name?\n      [Unknown]:  WildFly Cookbook\n    What is the name of your organizational unit?\n      [Unknown]:  Packt Publishing\n    What is the name of your organization?\n      [Unknown]:  packtpub.com\n    What is the name of your City or Locality?\n      [Unknown]:  Birmingham\n    What is the name of your State or Province?\n      [Unknown]:  GB\n    What is the two-letter country code for this unit?\n      [Unknown]:  UK\n    Is CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK correct?\n      [no]:  yes\n\n    Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with a validity of 90 days\n      for: CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n\n    [Storing wildfly.ssl.app.keystore]\n    ```", "```java\n    $ keytool -list -v -keystore wildfly.ssl.app.keystore\n    Enter keystore password:\n\n    Keystore type: JKS\n    Keystore provider: SUN\n\n    Your keystore contains 1 entry\n\n    Alias name: wildfly.ssl.app\n    Creation date: Nov 21, 2014\n    Entry type: PrivateKeyEntry\n    Certificate chain length: 1\n    Certificate[1]:\n    Owner: CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Issuer: CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Serial number: 17c96347\n    Valid from: Fri Nov 21 16:04:21 CET 2014 until: Thu Feb 19 16:04:21 CET 2015\n    Certificate fingerprints:\n       MD5:  17:F1:E5:1D:93:4D:FE:AD:43:5A:7A:D6:79:9E:3A:6A\n       SHA1: 90:7B:26:B0:07:6D:B2:E3:AD:A1:81:D2:F1:AA:47:C0:8D:0B:6D:43\n       SHA256: C9:F3:AC:23:B7:54:45:AC:84:D7:D6:D7:A7:5D:B9:7C:ED:99:95:EC:9C:B9:9C:E0:47:68:30:C0:48:9D:D8:BD\n       Signature algorithm name: SHA1withRSA\n       Version: 3\n\n    Extensions:\n\n    #1: ObjectId: 2.5.29.14 Criticality=false\n    SubjectKeyIdentifier [\n    KeyIdentifier [\n    0000: 8C 21 34 9C F6 30 39 BD   21 43 CF 34 C4 31 A1 B7  .!4..09.!C.4.1..\n    0010: 81 7E E6 D1                                        ....\n    ]\n    ]\n\n    *******************************************\n    *******************************************\n    ```", "```java\n    $ cd ~/WFC/github/wildfly-cookbook\n    $ mvn -e clean package -f ssl-example/pom.xml\n    $ mvn -e clean package -f no-ssl-example/pom.xml\n    ```", "```java\n$ cd $WILDFLY_HOME\n$ ./bin/standalone.sh -Djboss.server.base.dir=sec-std-node-2\n```", "```java\n$ cd $WILDFLY_HOME\n$ ./bin/jboss-cli.sh --connect\n[standalone@localhost:9990 /] /core-service=management/security-realm=AppSSLRealm:add()\n{\"outcome\" => \"success\"}\n[standalone@localhost:9990 /] /core-service=management/security-realm=AppSSLRealm/server-identity=ssl:add(keystore-path=wildfly.ssl.app.keystore, keystore-relative-to=jboss.server.config.dir,keystore-password=keystore.2015, alias=wildfly.ssl.app, key-password=alias.2015)\n{\n    \"outcome\" => \"success\",\n    \"response-headers\" => {\n        \"operation-requires-reload\" => true,\n        \"process-state\" => \"reload-required\"\n    }\n}\n[standalone@localhost:9990 /] :reload()\n{\n    \"outcome\" => \"success\",\n    \"result\" => undefined\n}\n[standalone@localhost:9990 /] /subsystem=undertow/server=secure-server:add()\n{\n    \"outcome\" => \"success\",\n    \"response-headers\" => {\n        \"operation-requires-reload\" => true,\n        \"process-state\" => \"reload-required\"\n    }\n}\n[standalone@localhost:9990 /] :reload\n{\n    \"outcome\" => \"success\",\n    \"result\" => undefined\n}\n[standalone@localhost:9990 /] /subsystem=undertow/server=secure-server/https-listener=https:add(socket-binding=https, security-realm=AppSSLRealm)\n{\"outcome\" => \"success\"}\n[standalone@localhost:9990 /] /subsystem=undertow/server=secure-server/host=secure-host:add()\n{\"outcome\" => \"success\"}\n[standalone@localhost:9990 /] /subsystem=undertow/server=secure-server:write-attribute(name=default-host,value=secure-host)\n{\n    \"outcome\" => \"success\",\n    \"response-headers\" => {\n        \"operation-requires-reload\" => true,\n        \"process-state\" => \"reload-required\"\n    }\n}\n[standalone@localhost:9990 /] :reload\n{\n    \"outcome\" => \"success\",\n    \"result\" => undefined\n}\n[standalone@localhost:9990 /]\n```", "```java\n    [standalone@localhost:9990 /] deploy no-ssl-example.war\n    [standalone@localhost:9990 /] deploy ssl-example.war\n    [standalone@localhost:9990 /]\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ cp -a domain sec-dmn-2\n    ```", "```java\n    $ cp sec-std-node-2/configuration/wildfly.ssl.app.keystore sec-dmn-2/configuration\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ ./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-2\n    ```", "```java\n    [domain@localhost:9990 /] /host=master/core-service=management/security-realm=AppSSLRealm:add()\n    {\n        \"outcome\" => \"success\",\n        \"result\" => undefined,\n        \"server-groups\" => undefined\n    }\n    [domain@localhost:9990 /] /host=master/core-service=management/security-realm=AppSSLRealm/server-identity=ssl:add(keystore-path=wildfly.ssl.app.keystore,keystore-relative-to=jboss.domain.config.dir,keystore-password=keystore.2015,alias=wildfly.ssl.app,key-password=alias.2015)\n    {\n        \"outcome\" => \"success\",\n        \"response-headers\" => {\n            \"operation-requires-reload\" => true,\n            \"process-state\" => \"reload-required\"\n        },\n        \"result\" => undefined,\n        \"server-groups\" => undefined\n    }\n    [domain@localhost:9990 /] reload --host=master\n    [domain@localhost:9990 /]\n    ```", "```java\n    [domain@localhost:9990 /] /profile=full/subsystem=undertow/server=secure-server:add()\n    {\n        \"outcome\" => \"success\",\n        \"result\" => undefined,\n        \"server-groups\" => {\"main-server-group\" => {\"host\" => {\"master\" => {\n            \"server-one\" => {\"response\" => {\n                \"outcome\" => \"success\",\n                \"response-headers\" => {\n                    \"operation-requires-reload\" => true,\n                    \"process-state\" => \"reload-required\"\n                }\n            }},\n            \"server-two\" => {\"response\" => {\n                \"outcome\" => \"success\",\n                \"response-headers\" => {\n                    \"operation-requires-reload\" => true,\n                    \"process-state\" => \"reload-required\"\n                }\n            }}\n        }}}}\n    }\n    [domain@localhost:9990 /] reload --host=master\n    [domain@localhost:9990 /] /profile=full/subsystem=undertow/server=secure-server/https-listener=https:add(socket-binding=https,security-realm=AppSSLRealm)\n    {\n        \"outcome\" => \"success\",\n        \"result\" => undefined,\n        \"server-groups\" => {\"main-server-group\" => {\"host\" => {\"master\" => {\n            \"server-one\" => {\"response\" => {\"outcome\" => \"success\"}},\n            \"server-two\" => {\"response\" => {\"outcome\" => \"success\"}}\n        }}}}\n    }\n    [domain@localhost:9990 /] /profile=full/subsystem=undertow/server=secure-server/host=secure-host:add()\n    {\n        \"outcome\" => \"success\",\n        \"result\" => undefined,\n        \"server-groups\" => {\"main-server-group\" => {\"host\" => {\"master\" => {\n            \"server-one\" => {\"response\" => {\"outcome\" => \"success\"}},\n            \"server-two\" => {\"response\" => {\"outcome\" => \"success\"}}\n        }}}}\n    }\n    [domain@localhost:9990 /] /profile=full/subsystem=undertow/server=secure-server:write-attribute(name=default-host,value=secure-host)\n    {\n        \"outcome\" => \"success\",\n        \"result\" => undefined,\n        \"server-groups\" => {\"main-server-group\" => {\"host\" => {\"master\" => {\n            \"server-one\" => {\"response\" => {\n                \"outcome\" => \"success\",\n                \"response-headers\" => {\n                    \"operation-requires-reload\" => true,\n                    \"process-state\" => \"reload-required\"\n                }\n            }},\n            \"server-two\" => {\"response\" => {\n                \"outcome\" => \"success\",\n                \"response-headers\" => {\n                    \"operation-requires-reload\" => true,\n                    \"process-state\" => \"reload-required\"\n                }\n            }}\n        }}}}\n    }\n    [domain@localhost:9990 /] reload --host=master\n    [domain@localhost:9990 /]\n    ```", "```java\n[domain@localhost:9990 /] deploy no-ssl-example.war --server-groups=main-server-group\n[domain@localhost:9990 /] deploy ssl-example.war --server-groups=main-server-group\n[domain@localhost:9990 /]\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jboss-web>\n    <server-instance>secure-server</server-instance>\n    <virtual-host>secure-host</virtual-host>\n</jboss-web>\n```", "```java\n<server name=\"secure-server\" default-host=\"secure-host \">\n    <https-listener name=\"https\" socket-binding=\"https\" security-realm=\"SSLRealm\"/>\n    <host name=\"secure-host\">\n        <filter-ref name=\"server-header\"/>\n        <filter-ref name=\"x-powered-by-header\"/>\n    </host>\n</server>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jboss-web>\n    <server-instance>secure-server</server-instance>\n    <virtual-host>secure-host</virtual-host>\n</jboss-web>\n```", "```java\n$ cd $WILDFLY_HOME\n$ cp -a standalone sec-std-node-mgmt\n```", "```java\n    $ cd $WILDFLY_HOME\n    $ cd sec-std-node-mgmt/configuration\n    $ keytool -v -genkey -alias wildfly.management -keyalg RSA -keysize 2048 -sigalg SHA1withRSA -keystore wildfly.management.keystore -storepass keystore.2015 -keypass alias.2015\n\n    What is your first and last name?\n      [Unknown]:  WildFly Cookbook\n    What is the name of your organizational unit?\n      [Unknown]:  Packt Publishing\n    What is the name of your organization?\n      [Unknown]:  packtpub.com\n    What is the name of your City or Locality?\n      [Unknown]:  Birmingham\n    What is the name of your State or Province?\n      [Unknown]:  GB\n    What is the two-letter country code for this unit?\n      [Unknown]:  UK\n    Is CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK correct?\n      [no]:  yes\n\n    Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with a validity of 90 days\n      for: CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n\n    [Storing wildfly.management.keystore]\n    ```", "```java\n    $ keytool -list -v -keystore wildfly.management.keystore\n    Enter keystore password:\n\n    Keystore type: JKS\n    Keystore provider: SUN\n\n    Your keystore contains 1 entry\n\n    Alias name: wildfly.management\n    Creation date: Nov 19, 2014\n    Entry type: PrivateKeyEntry\n    Certificate chain length: 1\n    Certificate[1]:\n    Owner: CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Issuer: CN=WildFly Cookbook, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Serial number: 3bdf9d9\n    Valid from: Wed Nov 19 15:26:50 CET 2014 until: Tue Feb 17 15:26:50 CET 2015\n    Certificate fingerprints:\n       MD5:  C6:D1:87:5D:93:FC:C4:55:9D:7E:77:A4:9F:94:C1:68\n       SHA1: DF:B4:E6:96:D4:08:2C:58:A9:62:F1:B7:6F:F8:5E:3E:47:43:06:6F\n       SHA256: E2:B9:47:D4:22:32:D7:D3:6A:A9:38:FF:E2:1F:FC:4E:A3:1A:5D:53:77:95:1E:5C:8E:A7:26:5E:89:6D:BE:44\n       Signature algorithm name: SHA1withRSA\n       Version: 3\n\n    Extensions:\n\n    #1: ObjectId: 2.5.29.14 Criticality=false\n    SubjectKeyIdentifier [\n    KeyIdentifier [\n    0000: 42 20 64 A6 07 50 7D 05   16 0F 21 25 78 1A 66 06  B d..P....!%x.f.\n    0010: 97 8C B3 F2                                        ....\n    ]\n    ]\n\n    *******************************************\n    *******************************************\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ java -cp modules/system/layers/base/org/jboss/sasl/main/jboss-sasl-1.0.5.Final.jar org.jboss.sasl.util.UsernamePasswordHashUtil securewildfly SecureManagementRealm cookbook.2015 >> sec-std-node-mgmt/configuration/secure-mgmt-users.properties\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ ./bin/standalone.sh -Djboss.server.base.dir=sec-std-node-mgmt\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ ./bin/jboss-cli.sh --connect\n    [standalone@localhost:9990 /] batch\n    [standalone@localhost:9990 / #] /core-service=management/security-realm=SecureManagementRealm:add()\n    [standalone@localhost:9990 / #] /core-service=management/security-realm=SecureManagementRealm/authentication=local:add(skip-group-loading=true, default-user=\"$local\")\n    [standalone@localhost:9990 / #] /core-service=management/security-realm=SecureManagementRealm/authentication=properties:add(path=secure-mgmt-users.properties, relative-to=jboss.server.config.dir)\n    [standalone@localhost:9990 / #] /core-service=management/security-realm=SecureManagementRealm/authorization=properties:add(path=mgmt-groups.properties, relative-to=jboss.server.config.dir)\n    [standalone@localhost:9990 / #] /core-service=management/security-realm=SecureManagementRealm:write-attribute(name=map-groups-to-roles,value=false)\n    [standalone@localhost:9990 / #] /core-service=management/security-realm=SecureManagementRealm/server-identity=ssl:add(keystore-path=wildfly.management.keystore,keystore-relative-to=jboss.server.config.dir,keystore-password=keystore.2015,alias=wildfly.management, key-password=alias.2015)\n    [standalone@localhost:9990 / #] /core-service=management/management-interface=http-interface:write-attribute(name=security-realm,value=SecureManagementRealm)\n    [standalone@localhost:9990 / #] /core-service=management/management-interface=http-interface:write-attribute(name=secure-socket-binding,value=management-https)\n    [standalone@localhost:9990 / #] :reload()\n    [standalone@localhost:9990 / #] run-batch\n    The batch executed successfully\n    [standalone@localhost:9990 /]\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ cp -a domain sec-dmn-mgmt\n    ```", "```java\n    $ cp sec-std-node-mgmt/configuration/wildfly.management.keystore sec-dmn-mgmt/configuration/\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ java -cp modules/system/layers/base/org/jboss/sasl/main/jboss-sasl-1.0.5.Final.jar org.jboss.sasl.util.UsernamePasswordHashUtil securewildfly SecureManagementRealm cookbook.2015 >> sec-dmn-mgmt/configuration/secure-mgmt-users.properties\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ ./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-mgmt\n    ```", "```java\n    $ ./bin/jboss-cli.sh --connect\n    [domain@localhost:9990 /] batch\n    [domain@localhost:9990 / #] /host=master/core-service=management/security-realm=SecureManagementRealm:add()\n    [domain@localhost:9990 / #] /host=master/core-service=management/security-realm=SecureManagementRealm/authentication=local:add(skip-group-loading=true, default-user=\"$local\")\n    [domain@localhost:9990 / #] /host=master/core-service=management/security-realm=SecureManagementRealm/authentication=properties:add(path=secure-mgmt-users.properties, relative-to=jboss.domain.config.dir)\n    [domain@localhost:9990 / #] /host=master/core-service=management/security-realm=SecureManagementRealm/authorization=properties:add(path=mgmt-groups.properties, relative-to=jboss.domain.config.dir)\n    [domain@localhost:9990 / #] /host=master/core-service=management/security-realm=SecureManagementRealm:write-attribute(name=map-groups-to-roles,value=false)\n    [domain@localhost:9990 / #] /host=master/core-service=management/security-realm=SecureManagementRealm/server-identity=ssl:add(keystore-path=wildfly.management.keystore,keystore-relative-to=jboss.domain.config.dir,keystore-password=keystore.2015,alias=wildfly.management, key-password=alias.2015)\n    [domain@localhost:9990 / #] /host=master/core-service=management/management-interface=http-interface:write-attribute(name=security-realm,value=SecureManagementRealm)\n    [domain@localhost:9990 / #] /host=master/core-service=management/management-interface=http-interface:write-attribute(name=secure-port,value=\"${jboss.management.https.port:9993}\")\n    [domain@localhost:9990 / #] run-batch\n    The batch executed successfully\n    process-state: reload-required\n    [domain@localhost:9990 /] reload --host=master\n    Failed to establish connection in 6058ms: WFLYPRT0053: Could not connect to http-remoting://localhost:9990\\. The connection failed: XNIO000816: Redirect encountered establishing connection\n    [disconnected /]\n    ```", "```java\nusername=HEX(MD5('username':'realm':'password'))\n```", "```java\n$ cd $WILDFLY_HOME\n$ cp -a domain sec-dmn-master\n$ cp -a domain sec-dmn-node-1\n$ cp -a domain sec-dmn-node-2\n```", "```java\n$ cd $WILDFLY_HOME\n$ mv sec-dmn-master/configuration/host-master.xml sec-dmn-master/configuration/host.xml\n$ mv sec-dmn-node-1/configuration/domain.xml sec-dmn-node-1/configuration/domain.xml.unused\n$ mv sec-dmn-node-1/configuration/host-slave.xml sec-dmn-node-1/configuration/host.xml\n$ mv sec-dmn-node-2/configuration/domain.xml sec-dmn-node-2/configuration/domain.xml.unused\n$ mv sec-dmn-node-2/configuration/host-slave.xml sec-dmn-node-2/configuration/host.xml\n```", "```java\n    $ cd $WILDFLY_HOME\n    $ keytool -genkeypair -alias sec-dmn-master -keyalg RSA -keysize 1024 -validity 365 -keystore sec-dmn-master.jks -dname \"CN=sec-dmn-master,OU=Packt Publishing,O=packtpub.com,L=Birmingham,ST=GB,C=UK\" -keypass \"cookbook.2015\" -storepass \"cookbook.2015\"\n    $ keytool -genkeypair -alias sec-dmn-node-1 -keyalg RSA -keysize 1024 -validity 365 -keystore sec-dmn-node-1.jks -dname \"CN=sec-dmn-node-1,OU=Packt Publishing,O=packtpub.com,L=Birmingham,ST=GB,C=UK\" -keypass \"cookbook.2015\" -storepass \"cookbook.2015\"\n    $ keytool -genkeypair -alias sec-dmn-node-2 -keyalg RSA -keysize 1024 -validity 365 -keystore sec-dmn-node-2.jks -dname \"CN=sec-dmn-node-2,OU=Packt Publishing,O=packtpub.com,L=Birmingham,ST=GB,C=UK\" -keypass \"cookbook.2015\" -storepass \"cookbook.2015\"\n    ```", "```java\n    $ keytool -exportcert  -keystore sec-dmn-master.jks -alias sec-dmn-master -keypass \"cookbook.2015\" -storepass \"cookbook.2015\" -file sec-dmn-master.cer\n    $ keytool -exportcert  -keystore sec-dmn-node-1.jks -alias sec-dmn-node-1 -keypass \"cookbook.2015\" -storepass \"cookbook.2015\" -file sec-dmn-node-1.cer\n    $ keytool -exportcert  -keystore sec-dmn-node-2.jks -alias sec-dmn-node-2 -keypass \"cookbook.2015\" -storepass \"cookbook.2015\" -file sec-dmn-node-2.cer\n    ```", "```java\n    $ keytool -importcert -keystore sec-dmn-master.jks -storepass \"cookbook.2015\" -trustcacerts -alias sec-dmn-node-1 -file sec-dmn-node-1.cer\n    Owner: CN=sec-dmn-node-1, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Issuer: CN=sec-dmn-node-1, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Serial number: 47cc055\n    Valid from: Mon Nov 24 15:48:33 CET 2014 until: Tue Nov 24 15:48:33 CET 2015\n    Certificate fingerprints:\n       MD5:  BB:31:D0:6F:20:78:FB:07:70:B7:E4:68:DB:EC:2C:83\n       SHA1: 83:DE:B0:D5:01:F4:8F:8C:5D:06:5E:6F:78:D1:28:A9:BF:C4:AE:18\n       SHA256: B4:4C:BC:D0:C6:EC:5E:11:D0:0E:BB:5F:84:74:D4:8B:9C:EA:13:17:A6:E2:6E:1B:C2:65:DC:16:9B:F0:0D:D4\n       Signature algorithm name: SHA256withRSA\n       Version: 3\n\n    Extensions:\n\n    #1: ObjectId: 2.5.29.14 Criticality=false\n    SubjectKeyIdentifier [\n    KeyIdentifier [\n    0000: F2 12 C7 78 60 40 26 A3   7D 43 E3 14 0F 76 46 B0  ...x`@&..C...vF.\n    0010: 62 A8 52 40                                        b.R@\n    ]\n    ]\n\n    Trust this certificate? [no]:  yes\n    Certificate was added to keystore\n    ```", "```java\n    $ keytool -importcert -keystore sec-dmn-master.jks -storepass \"cookbook.2015\" -trustcacerts -alias sec-dmn-node-2 -file sec-dmn-node-2.cer\n    Owner: CN=sec-dmn-node-2, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Issuer: CN=sec-dmn-node-2, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Serial number: 4cc64451\n    Valid from: Mon Nov 24 15:48:34 CET 2014 until: Tue Nov 24 15:48:34 CET 2015\n    Certificate fingerprints:\n       MD5:  29:CD:32:78:13:CD:63:7E:16:CE:AE:FC:4A:00:48:7D\n       SHA1: 7D:19:1B:C9:B8:61:72:10:C1:9A:80:98:36:6F:8F:D6:B9:87:F9:83\n       SHA256: 0A:5E:12:4D:EF:41:BC:AB:4C:7F:56:23:7B:80:E0:00:6C:D0:AC:7C:37:B8:FA:51:ED:2A:70:98:39:67:F7:4B\n       Signature algorithm name: SHA256withRSA\n       Version: 3\n\n    Extensions:\n\n    #1: ObjectId: 2.5.29.14 Criticality=false\n    SubjectKeyIdentifier [\n    KeyIdentifier [\n    0000: 6E 82 DC 55 F3 91 29 55   25 E7 B5 88 96 F5 1F 42  n..U..)U%......B\n    0010: 0A 52 7F 64                                        .R.d\n    ]\n    ]\n\n    Trust this certificate? [no]:  yes\n    Certificate was added to keystore\n    ```", "```java\n    $ keytool -importcert -keystore sec-dmn-node-1.jks -storepass \"cookbook.2015\" -trustcacerts -alias sec-dmn-master -file sec-dmn-master.cer\n    Owner: CN=sec-dmn-master, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Issuer: CN=sec-dmn-master, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Serial number: 337c6e75\n    Valid from: Mon Nov 24 15:48:33 CET 2014 until: Tue Nov 24 15:48:33 CET 2015\n    Certificate fingerprints:\n       MD5:  20:B4:7F:FB:E6:E5:6C:A8:29:82:19:2B:F7:56:90:B8\n       SHA1: 1F:1D:64:49:F5:B5:A4:CC:B7:CA:4C:15:3C:E6:75:C4:E6:03:09:F7\n      SHA256: C0:66:C8:FF:E3:B8:CD:5B:6D:99:61:1D:6B:05:19:\n      F0:05:B1:28:D0:4D:96:CB:AC:B4:89:FB:2B:73:01:7D:04\n       Signature algorithm name: SHA256withRSA\n       Version: 3\n\n    Extensions:\n\n    #1: ObjectId: 2.5.29.14 Criticality=false\n    SubjectKeyIdentifier [\n    KeyIdentifier [\n    0000: 3B 84 5D 1C 5D C1 F6 EF   8C 2B AF C6 80 D7 03 89  ;.].]....+......\n    0010: F9 0A 6D CE                                        ..m.\n    ]\n    ]\n\n    Trust this certificate? [no]:  yes\n    Certificate was added to keystore\n    ```", "```java\n    $ keytool -importcert -keystore sec-dmn-node-2.jks -storepass \"cookbook.2015\" -trustcacerts -alias sec-dmn-master -file sec-dmn-master.cer\n    Owner: CN=sec-dmn-master, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Issuer: CN=sec-dmn-master, OU=Packt Publishing, O=packtpub.com, L=Birmingham, ST=GB, C=UK\n    Serial number: 337c6e75\n    Valid from: Mon Nov 24 15:48:33 CET 2014 until: Tue Nov 24 15:48:33 CET 2015\n    Certificate fingerprints:\n       MD5:  20:B4:7F:FB:E6:E5:6C:A8:29:82:19:2B:F7:56:90:B8\n       SHA1: 1F:1D:64:49:F5:B5:A4:CC:B7:CA:4C:15:3C:E6:75:C4:E6:03:09:F7\n       SHA256: C0:66:C8:FF:E3:B8:CD:5B:6D:99:61:1D:6B:05:19:F0:05:B1:28:D0:4D:96:CB:AC:B4:89:FB:2B:73:01:7D:04\n       Signature algorithm name: SHA256withRSA\n       Version: 3\n\n    Extensions:\n\n    #1: ObjectId: 2.5.29.14 Criticality=false\n    SubjectKeyIdentifier [\n    KeyIdentifier [\n    0000: 3B 84 5D 1C 5D C1 F6 EF   8C 2B AF C6 80 D7 03 89  ;.].]....+......\n    0010: F9 0A 6D CE                                        ..m.\n    ]\n    ]\n\n    Trust this certificate? [no]:  yes\n    Certificate was added to keystore\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ cp sec-dmn-master.jks sec-dmn-master/configuration/\n    $ cp sec-dmn-node-1.jks sec-dmn-node-1/configuration/\n    $ cp sec-dmn-node-2.jks sec-dmn-node-2/configuration/\n    ```", "```java\n    <host name=\"sec-dmn-node-1\" >\n    ```", "```java\n    server-one - <socket-bindings port-offset=\"100\"/>\n    server-two - <socket-bindings port-offset=\"150\"/>\n    ```", "```java\n    <host name=\"sec-dmn-node-2\" >\n    ```", "```java\n    server-one – <socket-bindings port-offset=\"200\"/>\n    server-two - <socket-bindings port-offset=\"250\"/>\n    ```", "```java\n    $ ./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-master\n    $ ./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-node-1 -Djboss.management.native.port=19999 -Djboss.domain.master.address=127.0.0.1\n    $ ./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-node-2 -Djboss.management.native.port=29999 -Djboss.domain.master.address=127.0.0.1\n    ```", "```java\n    $ cd $WILDFLY_HOME\n    $ ./bin/jboss-cli.sh -c\n    batch\n    /host=master/core-service=management/security-realm=DCHCSecureRealm:add()\n    /host=master/core-service=management/security-realm=DCHCSecureRealm/server-identity=ssl:add(alias=sec-dmn-master,keystore-relative-to=jboss.domain.config.dir,keystore-path=sec-dmn-master.jks,keystore-password=cookbook.2015)\n    /host=master/core-service=management/security-realm=DCHCSecureRealm/authentication=truststore:add(keystore-relative-to=jboss.domain.config.dir,keystore-path=sec-dmn-master.jks,keystore-password=cookbook.2015)\n    /host=master/core-service=management/security-realm=DCHCSecureRealm/authentication=local:add(default-user=\\$local)\n    /host=master/core-service=management/security-realm=DCHCSecureRealm/authentication=properties:add(relative-to=jboss.domain.config.dir,path=mgmt-users.properties)\n    /host=master/core-service=management/management-interface=native-interface:write-attribute(name=security-realm,value=DCHCSecureRealm)\n    /host=sec-dmn-node-1/core-service=management/security-realm=DCHCSecureRealm:add()\n    /host=sec-dmn-node-1/core-service=management/security-realm=DCHCSecureRealm/server-identity=ssl:add(alias=sec-dmn-node-1,keystore-relative-to=jboss.domain.config.dir,keystore-path=sec-dmn-node-1.jks,keystore-password=cookbook.2015)\n    /host=sec-dmn-node-1/core-service=management/security-realm=DCHCSecureRealm/authentication=truststore:add(keystore-relative-to=jboss.domain.config.dir,keystore-path=sec-dmn-node-1.jks,keystore-password=cookbook.2015)\n    /host=sec-dmn-node-1/core-service=management/security-realm=DCHCSecureRealm/authentication=local:add(default-user=\"\\$local\")\n    /host=sec-dmn-node-1/core-service=management/security-realm=DCHCSecureRealm/authentication=properties:add(relative-to=jboss.domain.config.dir,path=mgmt-users.properties)\n    /host=sec-dmn-node-1/core-service=management/management-interface=native-interface:write-attribute(name=security-realm,value=DCHCSecureRealm)\n    /host=sec-dmn-node-1:write-remote-domain-controller(security-realm=DCHCSecureRealm)\n    /host=sec-dmn-node-2/core-service=management/security-realm=DCHCSecureRealm:add()\n    /host=sec-dmn-node-2/core-service=management/security-realm=DCHCSecureRealm/server-identity=ssl:add(alias=sec-dmn-node-2,keystore-relative-to=jboss.domain.config.dir,keystore-path=sec-dmn-node-2.jks,keystore-password=cookbook.2015)\n    /host=sec-dmn-node-2/core-service=management/security-realm=DCHCSecureRealm/authentication=truststore:add(keystore-relative-to=jboss.domain.config.dir,keystore-path=sec-dmn-node-2.jks,keystore-password=cookbook.2015)\n    /host=sec-dmn-node-2/core-service=management/security-realm=DCHCSecureRealm/authentication=local:add(default-user=\"\\$local\")\n    /host=sec-dmn-node-2/core-service=management/security-realm=DCHCSecureRealm/authentication=properties:add(relative-to=jboss.domain.config.dir,path=mgmt-users.properties)\n    /host=sec-dmn-node-2/core-service=management/management-interface=native-interface:write-attribute(name=security-realm,value=DCHCSecureRealm)\n    /host=sec-dmn-node-2:write-remote-domain-controller(security-realm=DCHCSecureRealm)\n    run-batch\n    reload --host=master\n    ```", "```java\n    $ ./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-master -Djavax.net.ssl.trustStore=$WILDFLY_HOME/sec-dmn-master/configuration/sec-dmn-master.jks\n    $ ./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-node-1 -Djboss.management.native.port=19999 -Djboss.domain.master.address=127.0.0.1 -Djavax.net.ssl.trustStore=$WILDFLY_HOME/sec-dmn-node-1/configuration/sec-dmn-node-1.jks\n    $ ./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-node-2 -Djboss.management.native.port=29999 -Djboss.domain.master.address=127.0.0.1 -Djavax.net.ssl.trustStore=$WILDFLY_HOME/sec-dmn-node-2/configuration/sec-dmn-node-2.jks\n    ```", "```java\n$ keytool -genkeypair -alias sec-dmn-master -keyalg RSA -keysize 1024 -validity 365 -keystore sec-dmn-master.jks -dname \"CN=sec-dmn-master,OU=Packt Publishing,O=packtpub.com,L=Birmingham,ST=GB,C=UK\" -keypass \"cookbook.2015\" -storepass \"cookbook.2015\"\n$ keytool -genkeypair -alias sec-dmn-node-1 -keyalg RSA -keysize 1024 -validity 365 -keystore sec-dmn-node-1.jks -dname \"CN=sec-dmn-node-1,OU=Packt Publishing,O=packtpub.com,L=Birmingham,ST=GB,C=UK\" -keypass \"cookbook.2015\" -storepass \"cookbook.2015\"\n$ keytool -genkeypair -alias sec-dmn-node-2 -keyalg RSA -keysize 1024 -validity 365 -keystore sec-dmn-node-2.jks -dname \"CN=sec-dmn-node-2,OU=Packt Publishing,O=packtpub.com,L=Birmingham,ST=GB,C=UK\" -keypass \"cookbook.2015\" -storepass \"cookbook.2015\"\n```", "```java\n$ keytool -exportcert  -keystore sec-dmn-master.jks -alias sec-dmn-master -keypass \"cookbook.2015\" -storepass \"cookbook.2015\" -file sec-dmn-master.cer\n$ keytool -exportcert  -keystore sec-dmn-node-1.jks -alias sec-dmn-node-1 -keypass \"cookbook.2015\" -storepass \"cookbook.2015\" -file sec-dmn-node-1.cer\n$ keytool -exportcert  -keystore sec-dmn-node-2.jks -alias sec-dmn-node-2 -keypass \"cookbook.2015\" -storepass \"cookbook.2015\" -file sec-dmn-node-2.cer\n```", "```java\n$ keytool -importcert -keystore sec-dmn-master.jks -storepass \"cookbook.2015\" -trustcacerts -alias sec-dmn-node-1 -file sec-dmn-node-1.cer\n$ keytool -importcert -keystore sec-dmn-master.jks -storepass \"cookbook.2015\" -trustcacerts -alias sec-dmn-node-2 -file sec-dmn-node-2.cer\n```", "```java\n$ keytool -list -v -keystore sec-dmn-master.jks\nEnter keystore password:\n\nKeystore type: JKS\nKeystore provider: SUN\n\nYour keystore contains 3 entries\n\nAlias name: sec-dmn-node-2\n\n...\n\nAlias name: sec-dmn-node-1\n\n...\n\nAlias name: sec-dmn-master\n...\n```", "```java\n$ keytool -importcert -keystore sec-dmn-node-1.jks -storepass \"cookbook.2015\" -trustcacerts -alias sec-dmn-master -file sec-dmn-master.cer\n$ keytool -importcert -keystore sec-dmn-node-2.jks -storepass \"cookbook.2015\" -trustcacerts -alias sec-dmn-master -file sec-dmn-master.cer\n```", "```java\nkeytool -list -v -keystore sec-dmn-node-1.jks\nkeytool -list -v -keystore sec-dmn-node-2.jks\n```", "```java\n    [Host Controller] ERROR [org.jboss.remoting.remote.connection] JBREM000200: Remote connection failed: javax.net.ssl.SSLException: Received fatal alert: certificate_unknown\n    ```", "```java\n    [Host Controller] WARN  [org.jboss.as.host.controller] JBAS010914: Connection to remote host-controller closed.\n    [Host Controller] INFO  [org.jboss.as.host.controller] JBAS016584: Trying to reconnect to master host controller.\n    [Host Controller] WARN  [org.jboss.as.host.controller] JBAS010900: Could not connect to remote domain controller at remote://127.0.0.1:9999 -- java.net.ConnectException: JBAS012174: Could not connect to remote://127.0.0.1:9999\\. The connection failed\n    [Host Controller] WARN  [org.jboss.as.host.controller] JBAS016581: No domain controller discovery options remain.\n    [Host Controller] INFO  [org.jboss.as.host.controller] JBAS016584: Trying to reconnect to master host controller.\n    [Host Controller] WARN  [org.jboss.as.host.controller] JBAS010900: Could not connect to remote domain controller at remote://127.0.0.1:9999 -- java.lang.IllegalStateException: JBAS016509: Unable to connect due to SSL failure.\n    ```", "```java\n    [Host Controller] WARN  [org.jboss.as.host.controller] JBAS010914: Connection to remote host-controller closed.\n    [Host Controller] INFO  [org.jboss.as.host.controller] JBAS016584: Trying to reconnect to master host controller.\n    [Host Controller] WARN  [org.jboss.as.host.controller] JBAS010900: Could not connect to remote domain controller at remote://127.0.0.1:9999 -- java.net.ConnectException: JBAS012174: Could not connect to remote://127.0.0.1:9999\\. The connection failed\n    [Host Controller] WARN  [org.jboss.as.host.controller] JBAS016581: No domain controller discovery options remain.\n    [Host Controller] INFO  [org.jboss.as.host.controller] JBAS016584: Trying to reconnect to master host controller.\n    [Host Controller] WARN  [org.jboss.as.host.controller] JBAS010900: Could not connect to remote domain controller at remote://127.0.0.1:9999 -- java.lang.IllegalStateException: JBAS016509: Unable to connect due to SSL failure.\n    ```", "```java\n./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-master -Djavax.net.ssl.trustStore=$WILDFLY_HOME/sec-dmn-master/configuration/sec-dmn-master.jks\n./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-node-1 -Djboss.management.native.port=19999 -Djboss.domain.master.address=127.0.0.1 -Djavax.net.ssl.trustStore=$WILDFLY_HOME/sec-dmn-node-1/configuration/sec-dmn-node-1.jks\n./bin/domain.sh -Djboss.domain.base.dir=sec-dmn-node-2 -Djboss.management.native.port=29999 -Djboss.domain.master.address=127.0.0.1 -Djavax.net.ssl.trustStore=$WILDFLY_HOME/sec-dmn-node-2/configuration/sec-dmn-node-2.jks\n```"]