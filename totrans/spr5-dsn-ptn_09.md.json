["```java\n    package com.packt.patterninspring.chapter9.bankapp.config; \n\n    import org.springframework.cache.CacheManager; \n    import org.springframework.cache.annotation.EnableCaching; \n    import org.springframework.cache.concurrent.\n      ConcurrentMapCacheManager; \n    import org.springframework.context.annotation.Bean; \n    import org.springframework.context.annotation.ComponentScan; \n    import org.springframework.context.annotation.Configuration; \n\n    @Configuration \n    @ComponentScan(basePackages=   \n    {\"com.packt.patterninspring.chapter9.bankapp\"}) \n    @EnableCaching //Enable caching \n    public class AppConfig { \n\n     @Bean \n     public AccountService accountService() { ... } \n\n     //Declare a cache manager \n     @Bean \n     public CacheManager cacheManager() { \n         CacheManager cacheManager = new ConcurrentMapCacheManager(); \n         return cacheManager; \n    } \n   } \n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n    <beans  \n\n     xsi:schemaLocation=\"http://www.springframework.org/schema/jdbc \n     http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd \n     http://www.springframework.org/schema/cache   \n     http://www.springframework.org/schema/cache/spring-cache-4.3.xsd \n     http://www.springframework.org/schema/beans     \n     http://www.springframework.org/schema/beans/spring-beans.xsd \n     http://www.springframework.org/schema/context    \n     http://www.springframework.org/schema/context/spring-context.xsd \n     http://www.springframework.org/schema/aop \n     http://www.springframework.org/schema/aop/spring-aop-4.3.xsd \n     http://www.springframework.org/schema/tx \n     http://www.springframework.org/schema/tx/spring-tx-4.3.xsd\"> \n\n     <!-- Enable caching --> \n     <cache:annotation-driven /> \n\n     <context:component-scan base-   \n     package=\"com.packt.patterninspring.chapter9.bankapp\"/> \n\n     <!-- Declare a cache manager --> \n     <bean id=\"cacheManager\" \n     class=\"org.springframework.cache.concurrent.\n     ConcurrentMapCacheManager\" /> \n   </beans> \n\n```", "```java\n    @Cacheable(\"accountCache \") \n    public Account findAccount(Long accountId) {...} \n```", "```java\n    @Cacheable({\"accountCache \", \"saving-accounts\"}) \n    public Account findAccount(Long accountId) {...} \n```", "```java\n    @CachePut(\"accountCache \") \n    public Account save(Account account) {...} \n```", "```java\n    @Cacheable(cacheNames=\" accountCache \", key=\"#accountId\") \n    public Account findAccount(Long accountId) \n\n    @Cacheable(cacheNames=\" accountCache \", key=\"#account.accountId\") \n    public Account findAccount(Account account) \n\n    @CachePut(value=\" accountCache \", key=\"#account.accountId\") \n    Account save(Account account); \n```", "```java\n    @Cacheable(cacheNames=\"accountCache\", condition=\"#accountId >=   \n    2000\") \n    public Account findAccount(Long accountId); \n```", "```java\n    @Cacheable(cacheNames=\"accountCache\", condition=\"#accountId >= \n    2000\", unless=\"#result.bankName.contains('HDFC')\") \n    public Account findAccount(Long accountId); \n```", "```java\n    @CacheEvict(\"accountCache \") \n    void remove(Long accountId); \n```", "```java\n    @Caching(evict = {  \n      @CacheEvict(\"accountCache \"),  \n      @CacheEvict(value=\"account-list\", key=\"#account.accountId\") }) \n      public List<Account> findAllAccount(){ \n      return (List<Account>) accountRepository.findAll(); \n   } \n```", "```java\n     @CacheConfig(\"accountCache \") \n     public class AccountServiceImpl implements AccountService { \n\n      @Cacheable \n      public Account findAccount(Long accountId) { \n        return (Account) accountRepository.findOne(accountId); \n      } \n    } \n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n    <beans  \n\n     xsi:schemaLocation=\"http://www.springframework.org/schema/cache  \n     http://www.springframework.org/schema/cache/spring-cache-4.3.xsd \n     http://www.springframework.org/schema/beans\n     http://www.springframework.org/schema/beans/spring-beans.xsd \n     http://www.springframework.org/schema/context\n     http://www.springframework.org/schema/context/spring-context.xsd \n     http://www.springframework.org/schema/aop\n     http://www.springframework.org/schema/aop/spring-aop-4.3.xsd\"> \n\n     <!-- Enable caching --> \n     <cache:annotation-driven /> \n\n     <!-- Declare a cache manager --> \n     <bean id=\"cacheManager\"class=\"org.springframework.cache.\n     concurrent.ConcurrentMapCacheManager\" /> \n    </beans> \n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n    <beans  \n\n    xsi:schemaLocation=\"http://www.springframework.org/schema/cache \n    http://www.springframework.org/schema/cache/spring-cache-4.3.xsd \n    http://www.springframework.org/schema/beans\n    http://www.springframework.org/schema/beans/spring-beans.xsd \n    http://www.springframework.org/schema/context\n    http://www.springframework.org/schema/context/spring-context.xsd \n    http://www.springframework.org/schema/aop\n    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd\"> \n\n   <context:component-scan base- \n    package=\"com.packt.patterninspring.chapter9.bankapp.service, \n    com.packt.patterninspring.chapter9.bankapp.repository\"/> \n\n    <aop:config> \n    <aop:advisor advice-ref=\"cacheAccount\" pointcut=\"execution(*\n    com.packt.patterninspring.chapter9.bankapp.service.*.*(..))\"/> \n   </aop:config> \n\n   <cache:advice id=\"cacheAccount\"> \n     <cache:caching> \n       <cache:cacheable cache=\"accountCache\" method=\"findOne\" /> \n         <cache:cache-put cache=\"accountCache\" method=\"save\" \n          key=\"#result.id\" /> \n         <cache:cache-evict cache=\"accountCache\" method=\"remove\" /> \n         </cache:caching> \n      </cache:advice> \n\n   <!-- Declare a cache manager --> \n   <bean id=\"cacheManager\" class=\"org.springframework.cache.concurrent.\n    ConcurrentMapCacheManager\" /> \n   </beans> \n```", "```java\n    package com.packt.patterninspring.chapter9.bankapp.service; \n\n    import org.springframework.beans.factory.annotation.Autowired; \n    import org.springframework.cache.annotation.CacheEvict; \n    import org.springframework.cache.annotation.CachePut; \n    import org.springframework.cache.annotation.Cacheable; \n    import org.springframework.stereotype.Service; \n\n    import com.packt.patterninspring.chapter9.bankapp.model.Account; \n    import com.packt.patterninspring.chapter9.\n    bankapp.repository.AccountRepository; \n\n    @Service \n    public class AccountServiceImpl implements AccountService{ \n\n    @Autowired \n    AccountRepository accountRepository; \n\n    @Override \n    @Cacheable(\"accountCache\") \n    public Account findOne(Long id) { \n      System.out.println(\"findOne called\"); \n      return accountRepository.findAccountById(id); \n    } \n\n    @Override \n    @CachePut(\"accountCache\") \n    public Long save(Account account) { \n      return accountRepository.save(account); \n    } \n\n    @Override \n    @CacheEvict(\"accountCache\") \n    public void remove(Long id) { \n      accountRepository.findAccountById(id); \n    } \n\n   } \n```", "```java\n    @Bean \n    public CacheManager cacheManager() { \n      CacheManager cacheManager = new ConcurrentMapCacheManager(); \n      return cacheManager; \n    }\n```", "```java\n    @Bean \n    public CacheManager cacheManager(CacheManager ehCache) { \n      EhCacheCacheManager cmgr = new EhCacheCacheManager(); \n      cmgr.setCacheManager(ehCache); \n      return cmgr; \n    } \n    @Bean  \n    public EhCacheManagerFactoryBean ehCacheManagerFactoryBean() { \n      EhCacheManagerFactoryBean eh = new EhCacheManagerFactoryBean(); \n      eh.setConfigLocation(new  \n      ClassPathResource(\"resources/ehcache.xml\")); \n      return eh; \n    } \n```", "```java\n    <ehcache> \n       <cache name=\"accountCache\" maxBytesLocalHeap=\"50m\"\n        timeToLiveSeconds=\"100\"> \n       </cache> \n    </ehcache> \n```", "```java\n    <bean id=\"cacheManager\"    \n     class=\"org.springframework.cache.ehcache.EhCacheCacheManager\" \n     p:cache-manager-ref=\"ehcache\"/> \n\n    <!-- EhCache library setup --> \n    <bean id=\"ehcache\" \n      class=\"org.springframework.cache.ehcache.\n      EhCacheManagerFactoryBean\" p:config-\n      location=\"resources/ehcache.xml\"/> \n```", "```java\n    @Retention(RetentionPolicy.RUNTIME) \n    @Target({ElementType.METHOD}) \n    @Cacheable(value=\"accountCache\", key=\"#account.id\") \n    public @interface SlowService { \n    } \n```", "```java\n    @Cacheable(value=\"accountCache\", key=\"#account.id\") \n    public Account findAccount(Long accountId) \n```", "```java\n    @SlowService \n    public Account findAccount(Long accountId) \n```"]