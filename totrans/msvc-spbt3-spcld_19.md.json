["```java\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: fluentd-hands-on-config\n      namespace: kube-system\n    data:\n      fluentd-hands-on.conf: | \n    ```", "```java\n     <match kubernetes.**istio**>\n          @type rewrite_tag_filter\n          <rule>\n            key log\n            pattern ^(.*)$\n            tag istio.${tag}\n          </rule>\n        </match> \n    ```", "```java\n     <match kubernetes.**hands-on**>\n          @type rewrite_tag_filter\n          <rule>\n            key log\n            pattern ^(.*)$\n            tag spring-boot.${tag}\n          </rule>\n        </match> \n    ```", "```java\n     <match spring-boot.**>\n          @type rewrite_tag_filter\n          <rule>\n            key log\n            pattern /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}([-+]\\d{2}:\\d{2}|Z).*/\n            tag parse.${tag}\n          </rule>\n          # Get rid of Reactor debug info:\n          #\n          #   Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:\n          # Error has been observed at the following site(s):\n          #   *__checkpoint ,á¢ Handler se.magnus.microservices.core.product.services.ProductServiceImpl#getProduct(HttpHeaders, int, int, int) [DispatcherHandler]\n          #   *__checkpoint ,á¢ org.springframework.web.filter.reactive.ServerHttpObservationFilter [DefaultWebFilterChain]\n          #   *__checkpoint ,á¢ HTTP GET \"/product/1?faultPercent=100\" [ExceptionHandlingWebHandler]\n          # Original Stack Trace:\n          <rule>\n            key log\n            pattern /^\\s+Suppressed:.*$/\n            tag skip.${tag}\n          </rule>\n          <rule>\n            key log\n            pattern /^Error has been observed at the following site.*/\n            tag skip.${tag}\n          </rule>\n          <rule>\n            key log\n            pattern /^\\s+\\*__checkpoint.*/\n            tag skip.${tag}\n          </rule>\n          <rule>\n            key log\n            pattern /^Original Stack Trace:.*/\n            tag skip.${tag}\n          </rule>\n          <rule>\n            key log\n            pattern /^.*/\n            tag check.exception.${tag}\n          </rule>\n        </match> \n    ```", "```java\n     <match skip.spring-boot.**>\n          @type null\n        </match> \n    ```", "```java\n     <match check.exception.spring-boot.**>\n          @type detect_exceptions\n          languages java\n          remove_tag_prefix check\n          message log\n          multiline_flush_interval 5\n        </match> \n    ```", "```java\n     <filter parse.spring-boot.**>\n          @type parser\n          key_name log\n          time_key time\n          time_format %Y-%m-%dT%H:%M:%S.%N\n          reserve_data true\n          format /^(?<time>\\d{4}-\\d{2}-\n          \\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}([-+]\\d{2}:\\d{2}|Z))\\s+\n          (?<spring.level>[^\\s]+)\\s+\n          (\\[(?<spring.service>[^,]*),(?<spring.trace>[^,]*),(?\n          <spring.span>[^\\]]*)]*\\])\\s+\n          (?<spring.pid>\\d+)\\s+---\\s+\\[\\s*(?<spring.thread>[^\\]]+)\\]\\s+\n          (?<spring.class>[^\\s]+)\\s*:\\s+\n          (?<log>.*)$/\n        </filter> \n    ```", "```java\n    cd $BOOK_HOME/Chapter19\n    eval $(minikube docker-env -u)\n    ./gradlew build\n    eval $(minikube docker-env)\n    docker-compose build \n    ```", "```java\n    kubectl delete namespace hands-on\n    kubectl apply -f kubernetes/hands-on-namespace.yml\n    kubectl config set-context $(kubectl config current-context) --namespace=hands-on \n    ```", "```java\n    for f in kubernetes/helm/components/*; do helm dep up $f; done \n    ```", "```java\n    for f in kubernetes/helm/environments/*; do helm dep up $f; done \n    ```", "```java\n    helm install hands-on-dev-env \\\n      kubernetes/helm/environments/dev-env \\\n      -n hands-on --wait \n    ```", "```java\n    minikube tunnel \n    ```", "```java\n        ./test-em-all.bash \n        ```", "```java\n    ACCESS_TOKEN=$(curl -k https://writer:secret-writer@minikube.me/oauth2/token -d grant_type=client_credentials -d scope=\"product:read product:write\" -s | jq .access_token -r)\n    echo ACCESS_TOKEN=$ACCESS_TOKEN\n    curl -ks https://minikube.me/product-composite/1 -H \"Authorization: Bearer $ACCESS_TOKEN\" | jq .productId \n    ```", "```java\napiVersion: apps/v1\nkind: Deployment\n...\n      containers:\n      - name: elasticsearch\n        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10\n        resources:\n          limits:\n            cpu: 500m\n            memory: 2Gi\n          requests:\n            cpu: 500m\n            memory: 2Gi \n```", "```java\napiVersion: apps/v1\nkind: Deployment\n...\n      containers:\n      - name: kibana\n        image: docker.elastic.co/kibana/kibana:7.17.10\n        env:\n        - name: ELASTICSEARCH_URL\n          value: http://elasticsearch:9200 \n```", "```java\n    eval $(minikube docker-env)\n    docker pull docker.elastic.co/elasticsearch/elasticsearch:7.17.10\n    docker pull docker.elastic.co/kibana/kibana:7.17.10 \n    ```", "```java\n    helm install logging-hands-on-add-on kubernetes/helm/environments/logging \\\n        -n logging --create-namespace --wait \n    ```", "```java\n    curl https://elasticsearch.minikube.me -sk | jq -r .tagline \n    ```", "```java\n    curl https://kibana.minikube.me \\\n      -kLs -o /dev/null -w \"%{http_code}\\n\" \n    ```", "```java\nFROM fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1\nRUN gem install fluent-plugin-detect-exceptions -v 0.0.12 \\\n && gem sources --clear-all \\\n && rm -rf /var/lib/apt/lists/* \\\n           /home/fluent/.gem/ruby/2.3.0/cache/*.gem \n```", "```java\n    apiVersion: apps/v1\n    kind: DaemonSet\n    metadata:\n      name: fluentd\n      namespace: kube-system \n    ```", "```java\n    spec:\n      template:\n        spec:\n          containers:\n          - name: fluentd\n            image: hands-on/fluentd:v1\n            env:\n              - name: FLUENT_ELASTICSEARCH_HOST\n                value: \"elasticsearch.logging\"\n              - name: FLUENT_ELASTICSEARCH_PORT\n                value: \"9200\" \n    ```", "```java\n     volumeMounts:\n            - name: varlog\n              mountPath: /var/log\n            - name: varlibdockercontainers\n              mountPath: /var/lib/docker/containers\n              readOnly: true\n            - name: journal\n              mountPath: /var/log/journal\n              readOnly: true\n            - name: fluentd-extra-config\n              mountPath: /fluentd/etc/conf.d\n          volumes:\n          - name: varlog\n            hostPath:\n              path: /var/log\n          - name: varlibdockercontainers\n            hostPath:\n              path: /var/lib/docker/containers\n          - name: journal\n            hostPath:\n              path: /run/log/journal\n          - name: fluentd-extra-config\n            configMap:\n              name: \"fluentd-hands-on-config\" \n    ```", "```java\n    eval $(minikube docker-env)\n    docker build -f kubernetes/efk/Dockerfile -t hands-on/fluentd:v1 kubernetes/efk/ \n    ```", "```java\n    kubectl apply -f kubernetes/efk/fluentd-hands-on-configmap.yml \n    kubectl apply -f kubernetes/efk/fluentd-ds.yml\n    kubectl wait --timeout=120s --for=condition=Ready pod -l app=fluentd -n kube-system \n    ```", "```java\n    kubectl logs -n kube-system -l app=fluentd --tail=-1 | grep \"fluentd worker is now running worker\" \n    ```", "```java\n    curl https://elasticsearch.minikube.me/_all/_count -sk | jq .count \n    ```", "```java\n    LOG.info(\"Will get composite product info for product.id={}\", productId); \n    ```", "```java\n    LOG.info(\"Will get product info for id={}\", productId); \n    ```", "```java\n    LOG.info(\"Will get recommendations for product with id={}\", productId); \n    ```", "```java\n    LOG.info(\"Will get reviews for product with id={}\", productId); \n    ```", "```java\n    ACCESS_TOKEN=$(curl -k https://writer:secret-writer@minikube.me/oauth2/token -d grant_type=client_credentials -d scope=\"product:read product:write\" -s | jq .access_token -r)\n    echo ACCESS_TOKEN=$ACCESS_TOKEN \n    ```", "```java\n    curl -X POST -k https://minikube.me/product-composite \\\n      -H \"Content-Type: application/json\" \\\n      -H \"Authorization: Bearer $ACCESS_TOKEN\" \\\n      --data '{\"productId\":1234,\"name\":\"product name 1234\",\"weight\":1234}' \n    ```", "```java\n    curl -H \"Authorization: Bearer $ACCESS_TOKEN\" -k 'https://minikube.me/product-composite/1234' -s | jq . \n    ```", "```java\n    curl -H \"Authorization: Bearer $ACCESS_TOKEN\" -k https://minikube.me/product-composite/1234?faultPercent=100 -s | jq . \n    ```", "```java\n    throw new RuntimeException(\"Something went wrong...\"); \n    ```", "```java\n    <match kubernetes.**hands-on**>\n      @type rewrite_tag_filter\n      <rule>\n        key log\n        pattern ^(.*)$\n        tag spring-boot.${tag}\n      </rule>\n    </match> \n    ```"]