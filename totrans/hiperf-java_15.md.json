["```java\nCREATE TABLE Authors {\n  Author_ID INT,\n  Author VARCHAR(80)\n);\n```", "```java\nCREATE INDEX idx_authors_authorid ON Authors (AuthorID);\n```", "```java\nSELECT * FROM Authors WHERE Author = 'N. Anderson';\n```", "```java\nCREATE INDEX idx_authors_authorid ON Authors (AuthorID);\nSELECT * FROM Authors WHERE Author = 'N. Anderson';\n```", "```java\nCREATE TABLE Book_Orders_2021 (\n    CHECK (OrderDate >= '2021-01-01' AND OrderDate < '2022-01-01')\n) INHERITS (Book_Orders);\nCREATE TABLE Book_Orders_2022 (\n    CHECK (OrderDate >= '2022-01-01' AND OrderDate < '2023-01-01')\n) INHERITS (Book_Orders);\nCREATE TABLE Book_Orders_2023 (\n    CHECK (OrderDate >= '2023-01-01' AND OrderDate < '2024-01-01')\n) INHERITS (Book_Orders);\n```", "```java\nCREATE TABLE Books (\n    BookID INT PRIMARY KEY,\n    Title VARCHAR(100),\n    AuthorID INT,\n    Pages INT,\n    Genre VARCHAR(50),\n    PublisherID INT,\n    PublishedDate DATE,\n    OriginalPrice DECIMAL(10, 2),\n    DiscountPrice DECIMAL(10, 2)\n);\n```", "```java\nCREATE TABLE Books_CatalogData (\n    BookID INT PRIMARY KEY,\n    Title VARCHAR(100),\n    AuthorID INT,\n    Pages INT,\n    Genre VARCHAR(50),\n    PublisherID INT,\n    PublishedDate DATE,\n);\nCREATE TABLE Books_SalesData (\n    BookID INT PRIMARY KEY,\n    OriginalPrice DECIMAL(10, 2),\n    DiscountPrice DECIMAL(10, 2),\n    FOREIGN KEY (BookID) REFERENCES Books_CatalogData(BookID)\n);\n```", "```java\nCREATE TABLE Users_US (\n    UserID INT PRIMARY KEY,\n    UserName VARCHAR(100),\n    Region CHAR(2) DEFAULT 'US'\n);\nCREATE TABLE Users_EU (\n    UserID INT PRIMARY KEY,\n    UserName VARCHAR(100),\n    Region CHAR(2) DEFAULT 'EU'\n);\n```", "```java\nFROM Orders o\nJOIN Books b ON o.BookID = b.BookID\nWHERE b.Title = 'High Performance with Java';\n```", "```java\nEXPLAIN SELECT SUM(o.Qty * o.Price) AS TotalSales\nFROM Orders o\nJOIN Books b ON o.BookID = b.BookID\nWHERE b.Title = 'High Performance with Java';\n```", "```java\nSELECT Title, AuthorID, Genre FROM Books WHERE Genre = 'Non-Fiction';\n```", "```java\nSELECT Title, AuthorID, Genre FROM Books WHERE Genre = 'Non-Fiction' LIMIT 10;\n```", "```java\nSELECT b.Title, b.Genre\nFROM Books b\nWHERE b.BookID IN (SELECT o.BookID FROM Orders o WHERE o.Qty > 100);\n```", "```java\nWITH HighSales AS (\n    SELECT BookID, SUM(Qty) AS TotalQty\n    FROM Orders\n    GROUP BY BookID\n    HAVING SUM(Qty) > 100\n)\nSELECT b.Title, b.Genre\nFROM Books b\nJOIN HighSales hs ON b.BookID = hs.BookID;\n```", "```java\nSELECT BookID, Title, Genre,\n      SUM(Quantity) OVER (PARTITION BY Genre) AS TotalSalesByGenre\nFROM Books b\nJOIN Orders o ON b.BookID = o.BookID;\n```", "```java\nWITH RECURSIVE CategoryHierarchy AS (\n    SELECT CategoryID, CategoryName, ParentCategoryID\n    FROM Categories\n    WHERE ParentCategoryID IS NULL\n    UNION ALL\n    SELECT c.CategoryID, c.CategoryName, c.ParentCategoryID\n    FROM Categories c\n    JOIN CategoryHierarchy ch ON c.ParentCategoryID = ch.CategoryID\n)\nSELECT * FROM CategoryHierarchy;\n```", "```java\nCREATE TEMPORARY TABLE TempHighSales AS\nSELECT BookID, SUM(Qty) AS TotalQty\nFROM Orders\nGROUP BY BookID\nHAVING SUM(Qty) > 100;\nSELECT b.Title, b.Genre\nFROM Books b\nJOIN TempHighSales ths ON b.BookID = ths.BookID;\n```", "```java\nCREATE VIEW HighSalesView AS\nSELECT BookID, SUM(Qty) AS TotalQty\nFROM Orders\nGROUP BY BookID\nHAVING SUM(Qty) > 100;\nSELECT b.Title, b.Genre\nFROM Books b\nJOIN HighSalesView hsv ON b.BookID = hsv.BookID;\n```", "```java\nSET long_query_time = 1;\nSET slow_query_log = 'ON';\n```", "```java\nSELECT b.Title, SUM(o.Qty * o.Price) AS TotalSales\nFROM Orders o\nJOIN Books b ON o.BookID = b.BookID\nGROUP BY b.Title;\n```", "```java\n    CREATE INDEX idx_books_bookid ON Books (BookID);\n    CREATE INDEX idx_orders_bookid ON Orders (BookID);\n    ```", "```java\n    EXPLAIN ANALYZE\n    SELECT b.Title, SUM(o.Qty * o.Price) AS TotalSales\n    FROM Orders o\n    JOIN Books b ON o.BookID = b.BookID\n    GROUP BY b.Title;\n    ```", "```java\nSELECT * FROM Orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31';\n```", "```java\n    CREATE TABLE Orders_2023 (\n        CHECK (OrderDate >= '2023-01-01' AND OrderDate < '2024-01-\n        01')\n    ) INHERITS (Orders);\n    CREATE TABLE Orders_2024 (\n        CHECK (OrderDate >= '2024-01-01' AND OrderDate < '2025-01-\n        01')\n    ) INHERITS (Orders);\n    ```", "```java\n    SELECT * FROM Orders_2023 WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31';\n    ```", "```java\nSELECT * FROM Books WHERE BookID = 1;\n```"]