["```java\npackage net.ensode.javaee8book.jmsptpproducer; \n\nimport java.util.logging.Level; \nimport java.util.logging.Logger; \nimport javax.annotation.Resource; \nimport javax.enterprise.context.RequestScoped; \nimport javax.inject.Named; \nimport javax.jms.ConnectionFactory; \nimport javax.jms.JMSContext; \nimport javax.jms.JMSProducer; \nimport javax.jms.Queue; \n\n@Named \n@RequestScoped \npublic class MessageSender { \n\n @Resource private ConnectionFactory connectionFactory; @Resource(mappedName = \"jms/JavaEE8BookQueue\") private Queue queue; \n\n    private static final Logger LOG = \n        Logger.getLogger(MessageSender.class.getName()); \n\n    public void produceMessages() { \n\n        JMSContext jmsContext = connectionFactory.createContext(); \n        JMSProducer jmsProducer = jmsContext.createProducer(); \n\n        String msg1 = \"Testing, 1, 2, 3\\. Can you hear me?\"; \n        String msg2 = \"Do you copy?\"; \n        String msg3 = \"Good bye!\"; \n\n        LOG.log(Level.INFO, \"Sending the following message: {0}\",  \n            msg1); \n jmsProducer.send(queue, msg1); \n        LOG.log(Level.INFO, \"Sending the following message: {0}\",  \n            msg2); \n jmsProducer.send(queue, msg2); \n        LOG.log(Level.INFO, \"Sending the following message: {0}\", \n        msg3); \n jmsProducer.send(queue, msg3); \n\n    } \n} \n```", "```java\npackage net.ensode.javaee8book.jmsptpconsumer; \n\nimport java.io.Serializable; \nimport java.util.logging.Level; \nimport java.util.logging.Logger; \nimport javax.annotation.Resource; \nimport javax.enterprise.context.RequestScoped; \nimport javax.inject.Named; \nimport javax.jms.ConnectionFactory; \nimport javax.jms.JMSConsumer; \nimport javax.jms.JMSContext; \nimport javax.jms.Queue; \n\n@Named \n@RequestScoped \npublic class MessageReceiver implements Serializable{ \n\n @Resource private ConnectionFactory connectionFactory; @Resource(mappedName = \"jms/JavaEE8BookQueue\") private Queue queue; \n    private static final Logger LOG =   \n     Logger.getLogger(MessageReceiver.class.getName()); \n\n    public void receiveMessages() { \n        String message; \n        boolean goodByeReceived = false; \n\n JMSContext jmsContext = connectionFactory.createContext(); JMSConsumer jMSConsumer = jmsContext.createConsumer(queue); \n\n        LOG.log(Level.INFO, \"Waiting for messages...\"); \n        while (!goodByeReceived) { \n message = jMSConsumer.receiveBody(String.class); \n\n            if (message != null) { \n                LOG.log(Level.INFO,\n                 \"Received the following message: {0}\", message); \n                if (message.equals(\"Good bye!\")) { \n                    goodByeReceived = true; \n                } \n            } \n        } \n    } \n} \n```", "```java\nWaiting for messages...\nReceived the following message: Testing, 1, 2, 3\\. Can you hear me?\n\nReceived the following message: Do you copy?\n\nReceived the following message: Good bye!\n```", "```java\npackage net.ensode.javaee8book.jmsqueuebrowser; \n\nimport java.util.Enumeration; \nimport java.util.logging.Level; \nimport java.util.logging.Logger; \n\nimport javax.annotation.Resource; \nimport javax.enterprise.context.RequestScoped; \nimport javax.inject.Named; \nimport javax.jms.ConnectionFactory; \nimport javax.jms.JMSContext; \nimport javax.jms.JMSException; \nimport javax.jms.Queue; \nimport javax.jms.QueueBrowser; \nimport javax.jms.TextMessage; \n\n@Named \n@RequestScoped \npublic class MessageQueueBrowser { \n\n @Resource private ConnectionFactory connectionFactory; @Resource(mappedName = \"jms/JavaEE8BookQueue\") private Queue queue; \n    private static final Logger LOG =  \n    Logger.getLogger(MessageQueueBrowser.class.getName()); \n\n    public void browseMessages() { \n        try { \n            Enumeration messageEnumeration; \n            TextMessage textMessage; \n            JMSContext jmsContext =   \n        connectionFactory.createContext(); \n QueueBrowser browser = jmsContext.createBrowser(queue); messageEnumeration = browser.getEnumeration(); \n\n            if (messageEnumeration != null) { \n                if (!messageEnumeration.hasMoreElements()) { \n                    LOG.log(Level.INFO, \"There are no messages \" \n                            + \"in the queue.\"); \n                } else { \n                    LOG.log(Level.INFO, \n                            \"The following messages are in the    \n                             queue:\"); \n while (messageEnumeration.hasMoreElements()) { textMessage = (TextMessage)  \n                         messageEnumeration.nextElement(); LOG.log(Level.INFO, textMessage.getText()); } \n                } \n            } \n        } catch (JMSException e) { \n            LOG.log(Level.SEVERE, \"JMS Exception caught\", e); \n        } \n    } \n\n    public static void main(String[] args) { \n        new MessageQueueBrowser().browseMessages(); \n    } \n} \n```", "```java\npackage net.ensode.javaee8book.jmspubsubproducer; \n\nimport java.util.logging.Level; \nimport java.util.logging.Logger; \nimport javax.annotation.Resource; \nimport javax.enterprise.context.RequestScoped; \nimport javax.inject.Named; \nimport javax.jms.ConnectionFactory; \nimport javax.jms.JMSContext; \nimport javax.jms.JMSProducer; \nimport javax.jms.Topic; \n\n@Named \n@RequestScoped \npublic class MessageSender { \n\n    @Resource \n    private ConnectionFactory connectionFactory; \n @Resource(mappedName = \"jms/JavaEE8BookTopic\") \n    private Topic topic; \n    private static final Logger LOG = \n        Logger.getLogger(MessageSender.class.getName()); \n\n    public void produceMessages() { \n        JMSContext jmsContext = connectionFactory.createContext(); \n        JMSProducer jmsProducer = jmsContext.createProducer(); \n\n        String msg1 = \"Testing, 1, 2, 3\\. Can you hear me?\"; \n        String msg2 = \"Do you copy?\"; \n        String msg3 = \"Good bye!\"; \n\n        LOG.log(Level.INFO, \"Sending the following message: {0}\", \n            msg1); \n jmsProducer.send(topic, msg1); \n        LOG.log(Level.INFO, \"Sending the following message: {0}\",  \n            msg2); \n jmsProducer.send(topic, msg2); \n        LOG.log(Level.INFO, \"Sending the following message: {0}\", \n            msg3); \n jmsProducer.send(topic, msg3); \n\n    } \n} \n```", "```java\npackage net.ensode.javaee8book.jmspubsubconsumer; \n\nimport java.util.logging.Level; \nimport java.util.logging.Logger; \nimport javax.annotation.Resource; \nimport javax.enterprise.context.RequestScoped; \nimport javax.inject.Named; \nimport javax.jms.ConnectionFactory; \nimport javax.jms.JMSConsumer; \nimport javax.jms.JMSContext; \nimport javax.jms.Topic; \n\n@Named \n@RequestScoped \npublic class MessageReceiver { \n\n    @Resource \n    private ConnectionFactory connectionFactory; \n @Resource(mappedName = \"jms/JavaEE8BookTopic\") private Topic topic; \n    private static final Logger LOG = \n      Logger.getLogger(MessageReceiver.class.getName()); \n\n    public void receiveMessages() { \n        String message; \n        boolean goodByeReceived = false; \n\n        JMSContext jmsContext = connectionFactory.createContext(); \n JMSConsumer jMSConsumer = jmsContext.createConsumer(topic); \n\n        LOG.log(Level.INFO, \"Waiting for messages...\"); \n        while (!goodByeReceived) { \n message = jMSConsumer.receiveBody(String.class); \n\n            if (message != null) {\n                System.out.print(\n                \"Received the following message: \");\n                LOG.log(Level.INFO, message);\n                if (message.equals(\"Good bye!\")) {\n                    goodByeReceived = true;\n                }\n            }\n        } \n    } \n} \n```", "```java\npackage net.ensode.javaee8book.jmspubsubdurablesubscriber; \n\nimport java.util.logging.Level; \nimport java.util.logging.Logger; \nimport javax.annotation.Resource; \nimport javax.enterprise.context.ApplicationScoped; \nimport javax.inject.Named; \nimport javax.jms.ConnectionFactory; \nimport javax.jms.JMSConsumer; \nimport javax.jms.JMSContext; \nimport javax.jms.Topic; \n\n@Named \n@ApplicationScoped \npublic class MessageReceiver { \n\n @Resource(mappedName = \"jms/JavaEE8BookDurableConnectionFactory\") private ConnectionFactory connectionFactory; \n    @Resource(mappedName = \"jms/JavaEE8BookTopic\") \n    private Topic topic; \n    private static final Logger LOG = \n      Logger.getLogger(MessageReceiver.class.getName()); \n\n    public void receiveMessages() { \n        String message; \n        boolean goodByeReceived = false; \n\n        JMSContext jmsContext = connectionFactory.createContext(); \n JMSConsumer jMSConsumer = jmsContext.createDurableConsumer(topic, \"Subscriber1\"); \n\n        LOG.log(Level.INFO, \"Waiting for messages...\"); \n        while (!goodByeReceived) { \n            message = jMSConsumer.receiveBody(String.class); \n\n              if (message != null) {\n                LOG.log(Level.INFO, \n                  \"Received the following message: {0}\", message);\n                if (message.equals(\"Good bye!\")) {\n                    goodByeReceived = true;\n                }\n            }\n        } \n\n    } \n\n} \n```"]