["```java\npackage net.ensode.javaee8book.httpauthdatabaseidentitystore.security; \n\nimport javax.enterprise.context.ApplicationScoped; \nimport javax.security.enterprise.identitystore.DatabaseIdentityStoreDefinition; \n\n@DatabaseIdentityStoreDefinition( \n        dataSourceLookup = \"jdbc/userAuth\", \n        callerQuery = \"select password from users where name = ?\", \n        groupsQuery = \"select g.GROUP_NAME from \" \n                + \"USER_GROUPS ug, users u, \" \n                + \"GROUPS g where u.USERNAME=? \" \n                + \"and ug.USER_ID = u.user_id \" \n                + \"and g.GROUP_ID= ug.GROUP_ID\" \n) \n@ApplicationScoped \npublic class ApplicationConfig { \n\n} \n```", "```java\npackage net.ensode.javaee8book.httpauthdatabaseidentitystore.servlet; \nimport java.io.IOException; \nimport javax.security.enterprise.identitystore.\nLdapIdentityStoreDefinition; \nimport javax.servlet.ServletException; \nimport javax.servlet.annotation.WebServlet; \nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse;  \n\n@LdapIdentityStoreDefinition( \n        url = \"ldap://myldapserver:33389/\", \n        callerBaseDn = \"ou=caller,dc=packtpub,dc=com\", \n        groupSearchBase = \"ou=group,dc=packtpub,dc=com\") \n@WebServlet(name = \"ControllerServlet\", urlPatterns =   \n {\"/controller\"}) \npublic class ControllerServlet extends HttpServlet { \n\n    @Override \n    protected void doGet(\n    HttpServletRequest req, HttpServletResponse res)  \n            throws ServletException, IOException { \n        System.out.println(\"doGet() invoked\"); \n    } \n} \n```", "```java\npackage net.ensode.javaee8book.security.basicauthexample; \n\nimport java.util.Arrays; \nimport java.util.HashSet; \nimport java.util.Set; \nimport javax.annotation.PostConstruct; \nimport javax.enterprise.context.ApplicationScoped; \nimport javax.security.enterprise.credential.Credential; \nimport javax.security.enterprise.credential.UsernamePasswordCredential; \nimport javax.security.enterprise.identitystore.CredentialValidationResult; \nimport javax.security.enterprise.identitystore.IdentityStore; \n\n@ApplicationScoped \npublic class DummyIdentityStore implements IdentityStore { \n\n  Set<String> adminRoleSet; \n  Set userRoleSet; \n  Set userAdminRoleSet; \n\n  @PostConstruct \n  public void init() { \n    adminRoleSet = new HashSet<>(Arrays.asList(\"admin\")); \n    userRoleSet = new HashSet<>(Arrays.asList(\"user\")); \n    userAdminRoleSet = new HashSet<>(Arrays.asList(\"user\",  \n     \"admin\")); \n  } \n\n  @Override \n  public CredentialValidationResult validate(Credential credential)\n { \n    UsernamePasswordCredential usernamePasswordCredential =  \n            (UsernamePasswordCredential) credential; \n\n    CredentialValidationResult credentialValidationResult; \n\n    if (usernamePasswordCredential.compareTo( \n            \"david\", \"secret\")) { \n      credentialValidationResult =  \n              new CredentialValidationResult(\"david\", \n              adminRoleSet); \n    } \n    else if (usernamePasswordCredential.compareTo(\"alan\",\n \"iforgot\")) { \n      credentialValidationResult =  \n              new CredentialValidationResult(\"alan\",\n userAdminRoleSet); \n    } \n    else { \n      credentialValidationResult = \n        CredentialValidationResult.INVALID_RESULT; \n    } \n\n    return credentialValidationResult; \n  } \n} \n```", "```java\npackage net.ensode.javaee8book.security.basicauthexample; \n\nimport java.io.IOException; \nimport javax.annotation.security.DeclareRoles; \nimport javax.security.enterprise.authentication.mechanism.http.BasicAuthenticationMechanismDefinition; \nimport javax.servlet.ServletException; \nimport javax.servlet.annotation.HttpConstraint; \nimport javax.servlet.annotation.ServletSecurity; \nimport javax.servlet.annotation.WebServlet; \nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@BasicAuthenticationMechanismDefinition( \n        realmName = \"Book Realm\" \n) \n@WebServlet(name = \"SecuredServlet\", \n     urlPatterns = {\"/securedServlet\"}) \n@DeclareRoles({\"user\", \"admin\"}) \n@ServletSecurity( \n        @HttpConstraint(rolesAllowed = \"admin\")) \npublic class SecuredServlet extends HttpServlet { \n\n    @Override \n    protected void doGet(HttpServletRequest request, \n         HttpServletResponse response) \n            throws ServletException, IOException { \n        response.getOutputStream().\n             print(\"Congratulations, login successful.\"); \n    } \n} \n```", "```java\n<!DOCTYPE html> \n<html> \n    <head> \n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> \n        <title>Login</title> \n    </head> \n    <body> \n        <p>Please enter your username and password to access the  \n          application</p> \n        <form method=\"POST\" action=\"j_security_check\"> \n            <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\"> \n                <tr> \n                    <td align=\"right\">Username: </td> \n                    <td> \n                           <input type=\"text\" name=\"j_username\"> \n                    </td> \n                </tr> \n                <tr> \n                    <td align=\"right\">Password: </td> \n                    <td> \n                         <input type=\"password\" \n name=\"j_password\"> \n                  </td> \n                </tr> \n                <tr> \n                    <td></td> \n                    <td><input type=\"submit\" value=\"Login\"></td> \n                </tr> \n            </table> \n        </form> \n    </body> \n</html> \n```", "```java\n<!DOCTYPE html> \n<html> \n    <head> \n        <meta http-equiv=\"Content-Type\" content=\"text/html; \n         charset=UTF-8\"> \n        <title>Login Error</title> \n    </head> \n    <body> \n        There was an error logging in. \n        <br /> \n        <a href=\"login.html\">Try again</a> \n    </body> \n</html> \n```", "```java\npackage net.ensode.javaee8book.httpauthdbidentitystore; \n\nimport java.io.IOException; \nimport javax.annotation.security.DeclareRoles; \nimport javax.security.enterprise.authentication.mechanism.http.FormAuthenticationMechanismDefinition; \nimport javax.security.enterprise.authentication.mechanism.http.LoginToContinue; \nimport javax.security.enterprise.identitystore.DatabaseIdentityStoreDefinition; \nimport javax.security.enterprise.identitystore.Pbkdf2PasswordHash; \nimport javax.servlet.ServletException; \nimport javax.servlet.annotation.HttpConstraint; \nimport javax.servlet.annotation.ServletSecurity; \nimport javax.servlet.annotation.WebServlet; \nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@FormAuthenticationMechanismDefinition( \n        loginToContinue = @LoginToContinue( \n                loginPage = \"/login.html\", \n                errorPage = \"/loginerror.html\" \n        ) \n) \n\n@DatabaseIdentityStoreDefinition( \n        dataSourceLookup = \"java:global/authDS\", \n        callerQuery = \"select password from users where USERNAME =     \n         ?\", \n        groupsQuery = \"select g.GROUP_NAME from USER_GROUPS ug, \n        users u, GROUPS g where ug.USER_ID = u.user_id and  \n        g.GROUP_ID= ug.GROUP_ID and u.USERNAME=?\", \n        hashAlgorithm = Pbkdf2PasswordHash.class, \n        hashAlgorithmParameters = { \n            \"Pbkdf2PasswordHash.Iterations=3072\", \n            \"Pbkdf2PasswordHash.Algorithm=PBKDF2WithHmacSHA512\", \n            \"Pbkdf2PasswordHash.SaltSizeBytes=64\" \n        } \n) \n@DeclareRoles({\"user\", \"admin\"}) \n@WebServlet(\"/securedServlet\") \n@ServletSecurity( \n        @HttpConstraint(rolesAllowed = {\"admin\"})) \npublic class SecuredServlet extends HttpServlet { \n\n    @Override \n    protected void doGet(HttpServletRequest request, \n     HttpServletResponse response) \n            throws ServletException, IOException { \n        response.getWriter().write(\"Congratulations, login  \n        successful.\"); \n    } \n} \n```", "```java\npackage net.ensode.javaee8book.httpauthdbidentitystore; \n\nimport java.io.IOException; \nimport javax.annotation.security.DeclareRoles; \nimport javax.security.enterprise.authentication.mechanism.http.CustomFormAuthenticationMechanismDefinition; \nimport javax.security.enterprise.authentication.mechanism.http.LoginToContinue; \nimport javax.security.enterprise.identitystore.DatabaseIdentityStoreDefinition; \nimport javax.security.enterprise.identitystore.Pbkdf2PasswordHash; \nimport javax.servlet.ServletException; \nimport javax.servlet.annotation.HttpConstraint; \nimport javax.servlet.annotation.ServletSecurity; \nimport javax.servlet.annotation.WebServlet; \nimport javax.servlet.http.HttpServlet; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@CustomFormAuthenticationMechanismDefinition( \n    loginToContinue = @LoginToContinue( \n        loginPage=\"/faces/login.xhtml\", \n        errorPage=\"\" \n    ) \n) \n\n@DatabaseIdentityStoreDefinition( \n        dataSourceLookup = \"java:global/authDS\", \n        callerQuery = \"select password from users where USERNAME =  \n         ?\", \n        groupsQuery = \"select g.GROUP_NAME from USER_GROUPS ug, \" \n                + \"users u, GROUPS g where ug.USER_ID = u.user_id \" \n                + \"and g.GROUP_ID= ug.GROUP_ID and u.USERNAME=?\", \n                 hashAlgorithm = Pbkdf2PasswordHash.class, \n        hashAlgorithmParameters = { \n            \"Pbkdf2PasswordHash.Iterations=3072\", \n            \"Pbkdf2PasswordHash.Algorithm=PBKDF2WithHmacSHA512\", \n            \"Pbkdf2PasswordHash.SaltSizeBytes=64\" \n        } \n) \n@DeclareRoles({\"user\", \"admin\"}) \n@WebServlet(\"/securedServlet\") \n@ServletSecurity( \n        @HttpConstraint(rolesAllowed = {\"admin\"})) \npublic class SecuredServlet extends HttpServlet { \n\n    @Override \n    protected void doGet(HttpServletRequest request,  \n     HttpServletResponse response) \n            throws ServletException, IOException { \n        response.getWriter().write(\"Congratulations, login  \n        successful.\"); \n    } \n} \n```", "```java\n<?xml version='1.0' encoding='UTF-8' ?> \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> \n<html  \n      > \n    <h:head> \n        <title>Login</title> \n    </h:head> \n    <h:body> \n        <h:form> \n            <h:messages/> \n            <h:panelGrid columns=\"2\"> \n                <h:outputLabel for=\"userName\"  \n                   value=\"User Name:\"/> \n                  <h:inputText id=\"userName\"\n value=\"#{user.userName}\"/> \n                <h:outputLabel for=\"password\"  \n                  value=\"Password: \"/> \n                  <h:inputSecret id=\"password\" \n                    value=\"#{user.password}\"/> \n                <h:panelGroup/> \n               <h:commandButton  \n                  action=\"#{loginController.login()}\" \n value=\"Login\"/> \n            </h:panelGrid> \n        </h:form> \n    </h:body> \n</html> \n```", "```java\npackage net.ensode.javaee8book.httpauthdbidentitystore.customauth; \n\nimport javax.enterprise.context.RequestScoped; \nimport javax.faces.application.FacesMessage; \nimport javax.faces.context.ExternalContext; \nimport javax.faces.context.FacesContext; \nimport javax.inject.Inject; \nimport javax.inject.Named; \nimport javax.security.enterprise.AuthenticationStatus; \nimport javax.security.enterprise.SecurityContext; \nimport javax.security.enterprise.authentication.mechanism.http.AuthenticationParameters; \nimport javax.security.enterprise.credential.UsernamePasswordCredential; \nimport javax.servlet.http.HttpServletRequest; \nimport javax.servlet.http.HttpServletResponse; \n\n@Named \n@RequestScoped \npublic class LoginController { \n\n    @Inject \n    private SecurityContext securityContext; \n\n    @Inject \n    private User user; \n\n    public void login() { \n        FacesContext facesContext = \n        FacesContext.getCurrentInstance(); \n        ExternalContext externalContext =\n             facesContext.getExternalContext(); \n        HttpServletRequest httpServletRequest = \n             (HttpServletRequest) externalContext.getRequest(); \n        HttpServletResponse httpServletResponse = \n             (HttpServletResponse) externalContext.getResponse(); \n       UsernamePasswordCredential uNamePasswordCredential = \n new UsernamePasswordCredential(user.getUserName(),\n user.getPassword()); \n\n        AuthenticationParameters authenticationParameters =\n AuthenticationParameters.withParams().credential(\n uNamePasswordCredential); \n\n        AuthenticationStatus authenticationStatus =\n securityContext.authenticate(httpServletRequest,\n httpServletResponse, authenticationParameters); \n\n        if (authenticationStatus.equals(\n AuthenticationStatus.SEND_CONTINUE)) { \n            facesContext.responseComplete(); \n        } else if (authenticationStatus.equals(\n AuthenticationStatus.SEND_FAILURE)) { \n            FacesMessage facesMessage = new FacesMessage(\n \"Login error\"); \n            facesContext.addMessage(null, facesMessage); \n        } \n\n    } \n} \n```"]