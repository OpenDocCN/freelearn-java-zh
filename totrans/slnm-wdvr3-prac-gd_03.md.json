["```java\nList<String> languages = new ArrayList<String>();\nlanguages.add(\"English\");\nlanguages.add(\"German\");\nlanguages.add(\"French\");\n```", "```java\nfor(String language : languages) {\n    System.out.println(language);\n}\n```", "```java\nlanguages.stream().forEach(System.out::println);\n```", "```java\nstream.filter( item -> item.startsWith(\"E\") ); \n```", "```java\nlanguages.stream().sorted();\n```", "```java\nlanguages.stream().map(item -> item.toUpperCase());\n```", "```java\nList<String> upperCaseLanguages = languages.stream()\n        .map(item -> item.toUpperCase())\n        .collect(Collectors.toList());\n\nSystem.out.println(upperCaseLanguages);\n```", "```java\nclass Product {\n    String name;\n    Double price;\n\n    public Product(String name, double price) {\n        this.name = name;\n        this.price = price;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Double getPrice() {\n        return price;\n    }\n}\n```", "```java\nList<Product> searchResult = new ArrayList<>();\nsearchResult.add(new Product(\"MADISON OVEREAR HEADPHONES\", 125.00));\nsearchResult.add(new Product(\"MADISON EARBUDS\", 35.00));\nsearchResult.add(new Product(\"MP3 PLAYER WITH AUDIO\", 185.00));\n```", "```java\nProduct product = searchResult.stream()\n        .min(Comparator.comparing(item -> item.getPrice()))\n        .get();\n\nSystem.out.println(\"The product with lowest price is \" + product.getName());\n```", "```java\nThe product with lowest price is MADISON EARBUDS\n```", "```java\nproduct = searchResult.stream()\n        .max(Comparator.comparing(item -> item.getPrice()))\n        .get();\nSystem.out.println(\"The product with highest price is \" + product.getName());\n```", "```java\n The product with highest price is MP3 PLAYER WITH AUDIO\n```", "```java\nlong count = searchResult.stream()\n        .filter(item -> item.getName().startsWith(\"MADISON\"))\n        .count();\nSystem.out.println(\"The number of products from MADISON are: \" + count);\n```", "```java\nThe number of products from MADISON are: 2\n```", "```java\n@Test\npublic void linksTest() {\n\n    List<WebElement> links = driver.findElements(By.tagName(\"a\"));\n    System.out.println(\"Total Links : \" + links.size());\n\n    long count = links.stream().filter(item -> item.isDisplayed()).count();\n    System.out.println(\"Total Link visible \" + count);\n}\n```", "```java\nTotal Links : 88\nTotal Link visible 37\n```", "```java\n@Test\npublic void imgAltTest() {\n\n    List<WebElement> images = driver.findElements(By.tagName(\"img\"));\n\n    System.out.println(\"Total Images : \" + images.size());\n\n    List<WebElement> imagesWithOutAlt = images.stream()\n .filter(item -> item.getAttribute(\"alt\") == \"\")\n .collect(Collectors.toList());\n\n    System.out.println(\"Total images without alt attribute \" + imagesWithOutAlt);\n}\n```", "```java\n@Test\npublic void searchProduct() {\n\n    // find search box and enter search string\n    WebElement searchBox = driver.findElement(By.name(\"q\"));\n\n    searchBox.sendKeys(\"Phones\");\n\n    WebElement searchButton =\n            driver.findElement(By.className(\"search-button\"));\n\n    searchButton.click();\n\n    assertThat(driver.getTitle())\n            .isEqualTo(\"Search results for: 'Phones'\");\n\n    List<WebElement> searchItems = driver\n            .findElements(By.cssSelector(\"h2.product-name a\"));\n\n    List<String> expectedProductNames =\n            Arrays.asList(\"MADISON EARBUDS\",\n                    \"MADISON OVEREAR HEADPHONES\",\n                    \"MP3 PLAYER WITH AUDIO\");\n\n    List<String> productNames = searchItems.stream()\n .map(WebElement::getText)\n .collect(Collectors.toList());\n\n    assertThat(productNames).\n            isEqualTo(expectedProductNames);\n\n}\n```", "```java\n@Test\n public void searchAndViewProduct() {\n\n     // find search box and enter search string\n     WebElement searchBox = driver.findElement(By.name(\"q\"));\n\n     searchBox.sendKeys(\"Phones\");\n\n     WebElement searchButton =\n             driver.findElement(By.className(\"search-button\"));\n\n     searchButton.click();\n\n     assertThat(driver.getTitle())\n             .isEqualTo(\"Search results for: 'Phones'\");\n\n     List<WebElement> searchItems = driver\n             .findElements(By.cssSelector(\"h2.product-name a\"));\n\n     WebElement product = searchItems.stream()\n             .filter(item -> item.getText().equalsIgnoreCase(\"MADISON EARBUDS\"))\n             .findFirst()\n             .get();\n\n     product.click();\n\n     assertThat(driver.getTitle())\n             .isEqualTo(\"Madison Earbuds\");\n}\n```"]