["```java\n    <span class=\"strong\"><strong>    activator new play2-travis play-slick-angular-test-example</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    language: scala</strong></span>\n    <span class=\"strong\"><strong>    scala:</strong></span>\n    <span class=\"strong\"><strong>    - 2.11.2</strong></span>\n    <span class=\"strong\"><strong>    script:</strong></span>\n    <span class=\"strong\"><strong>    - sbt test</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    git add --all &amp;&amp; git commit -am \"Initial\" &amp;&amp; git remote add origin https://github.com/&lt;YOUR_GITHUB_USER&gt;/play2-travis.git &amp;&amp; git push origin master</strong></span>\n    ```", "```java\n    \"testing a failure\" in {\n          true must equalTo(false)\n        }\n    ```", "```java\n    <span class=\"strong\"><strong>    git commit -am \"With expected test failure\" &amp;&amp; git push origin master</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    [info] x testing a failure</strong></span>\n    <span class=\"strong\"><strong>    [error]  the value is not equal to 'false' (ReportSpec.scala:58)</strong></span>\n    ```", "```java\n    /*\"testing a failure\" in {\n          true must equalTo(false)\n        }*/\n    ```", "```java\n    <span class=\"strong\"><strong>    git commit -am \"disabling failing test\" &amp;&amp; git push origin master</strong></span>\n    ```", "```java\n<span class=\"strong\"><strong>    script:</strong></span>\n<span class=\"strong\"><strong>    - sbt test</strong></span>\n```", "```java\n    <span class=\"strong\"><strong>    $ ls ~/Downloads/newrelic/</strong></span>\n    <span class=\"strong\"><strong>    CHANGELOG </strong></span>\n    <span class=\"strong\"><strong>    extension-example.xml </strong></span>\n    <span class=\"strong\"><strong>    newrelic-api-sources.jar </strong></span>\n    <span class=\"strong\"><strong>    newrelic.yml</strong></span>\n    <span class=\"strong\"><strong>    LICENSE </strong></span>\n    <span class=\"strong\"><strong>    extension.xsd </strong></span>\n    <span class=\"strong\"><strong>    newrelic-api.jar </strong></span>\n    <span class=\"strong\"><strong>    nrcerts</strong></span>\n    <span class=\"strong\"><strong>    README.txt </strong></span>\n    <span class=\"strong\"><strong>    newrelic-api-javadoc.jar </strong></span>\n    <span class=\"strong\"><strong>    newrelic.jar</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    common: &amp;default_settings</strong></span>\n    <span class=\"strong\"><strong>  </strong></span>\n    <span class=\"strong\"><strong>      license_key: '111112222223333344444455555556666666'</strong></span>\n    <span class=\"strong\"><strong>      agent_enabled: true</strong></span>\n    <span class=\"strong\"><strong>      app_name: computer-database-scala</strong></span>\n    <span class=\"strong\"><strong>      # ..</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    activator new play2-deploy-81 computer-database-scala</strong></span>\n    <span class=\"strong\"><strong>    cd play2-deploy-81</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    mkdir conf/instrument</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    cp ~/Downloads/newrelic/newrelic.yml conf/instrument</strong></span>\n    <span class=\"strong\"><strong>    cp ~/Downloads/newrelic/newrelic.jar conf/instrument</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    applyEvolutions.default=true</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    addSbtPlugin(\"com.typesafe.sbt\" % \"sbt-native-packager\" % \"1.0.0-M3\")</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    $ vi build.sbt</strong></span>\n    <span class=\"strong\"><strong>    import com.typesafe.sbt.SbtNativePackager._</strong></span>\n     <span class=\"strong\"><strong>    name := \"\"\"play2-deploy-81\"\"\"</strong></span>\n     <span class=\"strong\"><strong>    version := \"0.0.1-SNAPSHOT\"</strong></span>\n     <span class=\"strong\"><strong>    scalaVersion := \"2.11.4\"</strong></span>\n     <span class=\"strong\"><strong>    dockerRepository := Some(\"ginduc\")</strong></span>\n     <span class=\"strong\"><strong>    dockerExposedPorts := Seq(9000)</strong></span>\n     <span class=\"strong\"><strong>     dockerEntrypoint := Seq(\"bin/play2-deploy-81\", \"-J-javaagent:conf/instrument/newrelic.jar\")</strong></span>\n     <span class=\"strong\"><strong>    libraryDependencies ++= Seq(</strong></span>\n    <span class=\"strong\"><strong>      jdbc,</strong></span>\n    <span class=\"strong\"><strong>      anorm,</strong></span>\n    <span class=\"strong\"><strong>      \"org.webjars\" % \"jquery\" % \"2.1.1\",</strong></span>\n    <span class=\"strong\"><strong>      \"org.webjars\" % \"bootstrap\" % \"3.3.1\"</strong></span>\n    <span class=\"strong\"><strong>    )</strong></span>\n     <span class=\"strong\"><strong>    lazy val root = (project in file(\".\")).enablePlugins(PlayScala)</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>     activator clean docker:stage</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    $ docker login</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    activator docker:publish</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    docker pull &lt;YOUR_DOCKERHUB_USERNAME&gt;/play2-deploy-81:0.0.1-SNAPSHOT</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    docker run -d -p 9000:9000 ginduc/play2-deploy-81:0.0.1-SNAPSHOT</strong></span>\n    ```", "```java\n<span class=\"strong\"><strong>    $ docker -v</strong></span>\n<span class=\"strong\"><strong>    Docker version 1.5.0, build a8a31ef-dirty</strong></span>\n```", "```java\n<span class=\"strong\"><strong>  $ unzip newrelic-java-3.15.0.zip</strong></span>\n<span class=\"strong\"><strong>  Archive:  newrelic-java-3.15.0.zip</strong></span>\n<span class=\"strong\"><strong>     creating: newrelic/</strong></span>\n<span class=\"strong\"><strong>    inflating: newrelic/newrelic.jar</strong></span>\n<span class=\"strong\"><strong>    inflating: newrelic/LICENSE</strong></span>\n<span class=\"strong\"><strong>    inflating: newrelic/README.txt</strong></span>\n<span class=\"strong\"><strong>    inflating: newrelic/extension.xsd</strong></span>\n<span class=\"strong\"><strong>   inflating: newrelic/nrcerts</strong></span>\n<span class=\"strong\"><strong>    inflating: newrelic/extension-example.xml</strong></span>\n<span class=\"strong\"><strong>   inflating: newrelic/CHANGELOG</strong></span>\n<span class=\"strong\"><strong>   inflating: newrelic/newrelic.yml</strong></span>\n<span class=\"strong\"><strong>    inflating: newrelic/newrelic-api.jar</strong></span>\n<span class=\"strong\"><strong>   inflating: newrelic/newrelic-api-sources.jar</strong></span>\n<span class=\"strong\"><strong>    inflating: newrelic/newrelic-api-javadoc.jar</strong></span>\n```", "```java\n<span class=\"strong\"><strong>    $ ls conf/instrument</strong></span>\n<span class=\"strong\"><strong>    newrelic.jar </strong></span>\n<span class=\"strong\"><strong>    newrelic.yml</strong></span>\n```", "```java\naddSbtPlugin(\"com.typesafe.sbt\" % \"sbt-native-packager\" % \"1.0.0-M3\")\n```", "```java\nmaintainer := \"ginduc &lt;ginduc@dynamicobjx.com&gt;\"\n     dockerRepository := Some(\"dynobjx\")\n     dockerExposedPorts := Seq(9000)\n     dockerEntrypoint := Seq(\"bin/imapi\", \"-J-javaagent:conf/instrument/newrelic.jar\")\n```", "```java\ndockerEntrypoint := Seq(\"bin/imapi\", \"-J-javaagent:conf/instrument/newrelic.jar\")\n```", "```java\n<span class=\"strong\"><strong>    $ cat target/docker/Dockerfile</strong></span>\n<span class=\"strong\"><strong>    FROM dockerfile/java:latest</strong></span>\n<span class=\"strong\"><strong>    MAINTAINER ginduc &lt;ginduc@dynamicobjx.com&gt;</strong></span>\n<span class=\"strong\"><strong>    EXPOSE 9000</strong></span>\n<span class=\"strong\"><strong>    ADD files /</strong></span>\n<span class=\"strong\"><strong>    WORKDIR /opt/docker</strong></span>\n<span class=\"strong\"><strong>    RUN [\"chown\", \"-R\", \"daemon\", \".\"]</strong></span>\n<span class=\"strong\"><strong>    USER daemon</strong></span>\n<span class=\"strong\"><strong>    ENTRYPOINT [\"bin/imapi\", \"-J-javaagent:conf/instrument/newrelic.jar\"]</strong></span>\n<span class=\"strong\"><strong>    CMD []</strong></span>\n```", "```java\n<span class=\"strong\"><strong>    $ docker logs     9790caf8046c7da1d561dcc6e221169d64fa125cdd0a689222fe31637c7bc234</strong></span>\n<span class=\"strong\"><strong>    Mar 30, 2015 13:54:11 +0000 [1 1] com.newrelic INFO: New Relic Agent:      Loading configuration file \"/opt/docker/conf/instrument/./newrelic.yml\"</strong></span>\n<span class=\"strong\"><strong>    Mar 30, 2015 13:54:11 +0000 [1 1] com.newrelic INFO: New Relic Agent: Writing to log file: /opt/docker/lib/logs/newrelic_agent.log</strong></span>\n<span class=\"strong\"><strong>    Play server process ID is 1</strong></span>\n<span class=\"strong\"><strong>    [info] play - database [default] connected at jdbc:h2:mem:play</strong></span>\n<span class=\"strong\"><strong>    [info] play - Application started (Prod)</strong></span>\n<span class=\"strong\"><strong>    [info] play - Listening for HTTP on /0:0:0:0:0:0:0:0:9000</strong></span>\n```", "```java\n    <span class=\"strong\"><strong>    activator new play2-angular-83 play-scala &amp;&amp; cd play2-angular-83</strong></span>\n    ```", "```java\n    libraryDependencies ++= Seq(\n          \"org.webjars\" %% \"webjars-play\" % \"2.3.0\",\n          \"org.webjars\" % \"angularjs\" % \"1.3.4\",\n          \"org.webjars\" % \"bootstrap\" % \"3.3.1\" exclude(\"org.webjars\", \"jquery\"),\n          \"org.webjars\" % \"requirejs\" % \"2.1.15\" exclude(\"org.webjars\", \"jquery\")\n        )\n    ```", "```java\n    package controllers\n         import play.api._\n        import play.api.libs.json.Json\n        import play.api.mvc._\n         case class Product(sku: String, title: String)\n         object Application extends Controller {\n          implicit val productWrites = Json.writes[Product]\n           def index = Action {\n            Ok(views.html.index())\n          }\n           val products = Seq(\n            Product(\"733733-421\", \"HP ProLiant DL360p Gen8\"),\n            Product(\"7147H2G\", \"IBM System x x3690 X5\"),\n            Product(\"R630-3552\", \"DELL PowerEdge R630\"),\n            Product(\"RX-2280I\", \"Supermicro RTG RX-2280I\"),\n            Product(\"MB449D/A\", \"Apple Xserve\")\n          )\n           def listProducts = Action {\n            Ok(Json.toJson(products))\n          }\n        }\n    ```", "```java\n    # Routes\n        GET     /                           controllers.Application.index\n        GET     /assets/*file               controllers.Assets.versioned(path=\"/public\", file: Asset)\n        GET     /api/products               controllers.Application.listProducts\n        GET     /webjars/*file              controllers.WebJarAssets.at(file)\n    ```", "```java\n    @main(\"Product Catalogue\") {\n          &lt;nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\"&gt;\n            &lt;div class=\"container-fluid\"&gt;\n              &lt;div class=\"navbar-header\"&gt;\n                &lt;button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\"&gt;\n                    &lt;span class=\"sr-only\"&gt;Toggle navigation&lt;/span&gt;\n                    &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n                    &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n                    &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n                &lt;/button&gt;\n                &lt;a class=\"navbar-brand\" href=\"#\"&gt;Product Catalogue&lt;/a&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n          &lt;/nav&gt;\n           &lt;div class=\"container-fluid\"&gt;\n            &lt;div class=\"row\"&gt;\n              &lt;ng-view /&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        }\n    ```", "```java\n    @(title: String)(content: Html)&lt;!DOCTYPE html&gt;\n       &lt;html&gt;\n      &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n        &lt;meta name=\"description\" content=\"\"&gt;\n        &lt;meta name=\"author\" content=\"\"&gt;\n        &lt;title&gt;@title&lt;/title&gt;\n        &lt;link rel=\"shortcut icon\" type=\"image/png\" href='@routes.Assets.versioned(\"images/favicon.png\")'&gt;\n        &lt;link rel=\"stylesheet\" media=\"screen\" href='@routes.WebJarAssets.at(WebJarAssets.locate(\"css/bootstrap.min.css\"))' /&gt;\n        &lt;style&gt;\n            body {\n                padding-top: 50px;\n            }\n        &lt;/style&gt;\n      &lt;/head&gt;\n      &lt;body&gt;\n        @content\n        &lt;script data-main='@routes.Assets.versioned(\"javascripts/main.js\").url' src='@routes.WebJarAssets.at(WebJarAssets.locate(\"require.min.js\")).url'&gt;&lt;/script&gt;\n      &lt;/body&gt;\n      &lt;/html&gt;\n    ```", "```java\n    'use strict';\n       requirejs.config({\n        paths: {\n          'angular': ['../lib/angularjs/angular'],\n          'angular-route': ['../lib/angularjs/angular-route'],\n          'angular-resource': ['../lib/angularjs/angular-resource.min']\n        },\n        shim: {\n          'angular': {\n            exports : 'angular'\n          },\n          'angular-route': {\n            deps: ['angular'],\n            exports : 'angular'\n          },\n          'angular-resource': {\n            deps: ['angular'],\n            exports : 'angular'\n          }\n        }\n      });\n       require([\n        'angular',\n        'angular-route',\n        'angular-resource',\n        './services',\n        './controllers'\n        ],\n        function(angular) {\n          angular.module('azApp', [\n            'ngRoute',\n            'ngResource',\n            'azApp.services',\n            'azApp.controllers'\n          ])\n           .config(['$routeProvider', '$locationProvider', '$httpProvider', function($routeProvider, $locationProvider, $httpProvider) {\n            $routeProvider\n              .when('/', {\n                templateUrl: 'assets/javascripts/partials/products.html',\n                controller: 'ProductsCtrl'\n              })\n          }]);\n           angular.bootstrap(document, ['azApp']);\n      });\n    ```", "```java\n    'use strict';\n       define(['angular'], function(angular) {\n        angular.module('azApp.controllers', [])\n           .controller('ProductsCtrl', ['$scope', 'Products', function ($scope, Products) {\n            $scope.products = Products.list().query();\n          }])\n         ;\n      });\n    ```", "```java\n    'use strict';\n       define(['angular'], function(angular) {\n        angular.module('azApp.services', [])\n          .factory('Products', ['$resource', '$http', function Contacts($resource, $http) {\n              var endpointURI = '/api/products';\n               return {\n                list: function(options) {\n                    return $resource(endpointURI);\n                }\n              }\n          }])\n        ;\n      });\n    ```", "```java\n    &lt;div class=\"table-responsive\"&gt;\n          &lt;table class=\"table table-striped table-hover\"&gt;\n            &lt;thead&gt;\n              &lt;th&gt;Product Title&lt;/th&gt;\n              &lt;th&gt;SKU&lt;/th&gt;\n            &lt;/thead&gt;\n          &lt;tbody&gt;\n            &lt;tr ng-repeat=\"p in products | orderBy:'title'\"&gt;\n              &lt;td ng-bind=\"p.title\"&gt;&lt;/td&gt;\n              &lt;td ng-bind=\"p.sku\"&gt;&lt;/td&gt;\n            &lt;/tr&gt;\n          &lt;/tbody&gt;\n        &lt;/table&gt;\n      &lt;/div&gt;\n    ```", "```java\n    <span class=\"strong\"><strong>    $ activator \"~run\"</strong></span>\n    <span class=\"strong\"><strong>    [info] Loading project definition</strong></span>\n    <span class=\"strong\"><strong>    [info] Set current project to play2-angular-83</strong></span>\n    <span class=\"strong\"><strong>    --- (Running the application, auto-reloading is enabled) ---</strong></span>\n    <span class=\"strong\"><strong>    [info] play - Listening for HTTP on /0:0:0:0:0:0:0:0:9000</strong></span>\n    <span class=\"strong\"><strong>    (Server started, use Ctrl+D to stop and go back to the console...)</strong></span>\n     <span class=\"strong\"><strong>    [success] Compiled in 354ms</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    $ curl http://localhost:9000/api/products</strong></span>\n    <span class=\"strong\"><strong>    [{\"sku\":\"733733-421\",\"title\":\"HP ProLiant DL360p Gen8\"}, {\"sku\":\"7147H2G\",\"title\":\"IBM System x x3690 X5\"},{\"sku\":\"R630- 3552\",\"title\":\"DELL PowerEdge R630\"},{\"sku\":\"RX-2280I\",\"title\":\"Supermicro RTG  RX-2280I\"},{\"sku\":\"MB449D/A\",\"title\":\"Apple Xserve\"}]%</strong></span>\n    ```", "```java\n    libraryDependencies ++= Seq(\n          \"org.webjars\" %% \"webjars-play\" % \"2.3.0\",\n          \"org.webjars\" % \"angularjs\" % \"1.3.4\",\n          \"org.webjars\" % \"bootstrap\" % \"3.3.1\" exclude(\"org.webjars\", \"jquery\"),\n          \"org.webjars\" % \"requirejs\" % \"2.1.15\" exclude(\"org.webjars\", \"jquery\")\n        )\n    ```", "```java\n    case class Product(sku: String, title: String)\n\n        def listProducts = Action {\n          Ok(Json.toJson(products))\n        }\n    ```", "```java\n    GET     /assets/*file               controllers.Assets.versioned(path=\"/public\", file: Asset)\n        GET     /api/products               controllers.Application.listProducts\n        GET     /webjars/*file              controllers.WebJarAssets.at(file)\n    ```", "```java\n    @main(\"Product Catalogue\") {\n\n          &lt;div class=\"container-fluid\"&gt;\n            &lt;div class=\"row\"&gt;\n              &lt;ng-view /&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        }\n    ```", "```java\n    @(title: String)(content: Html)&lt;!DOCTYPE html&gt;\n       &lt;html&gt;\n      &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n        &lt;meta name=\"description\" content=\"\"&gt;\n        &lt;meta name=\"author\" content=\"\"&gt;\n        &lt;title&gt;@title&lt;/title&gt;\n        &lt;link rel=\"shortcut icon\" type=\"image/png\" href='@routes.Assets.versioned(\"images/favicon.png\")'&gt;\n        &lt;link rel=\"stylesheet\" media=\"screen\" href='@routes.WebJarAssets.at(WebJarAssets.locate(\"css/bootstrap.min.css\"))' /&gt;\n        &lt;style&gt;\n            body {\n                padding-top: 50px;\n            }\n        &lt;/style&gt;\n      &lt;/head&gt;\n      &lt;body&gt;\n        @content\n        &lt;script data-main='@routes.Assets.versioned(\"javascripts/main.js\").url' src='@routes.WebJarAssets.at(WebJarAssets.locate(\"require.min.js\")).url'&gt;&lt;/script&gt;\n      &lt;/body&gt;\n      &lt;/html&gt;\n    ```", "```java\n    'use strict';\n       requirejs.config({\n        paths: {\n          'angular': ['../lib/angularjs/angular'],\n          'angular-route': ['../lib/angularjs/angular-route'],\n          'angular-resource': ['../lib/angularjs/angular-resource.min']\n        },\n        shim: {\n          'angular': {\n            exports : 'angular'\n          },\n          'angular-route': {\n            deps: ['angular'],\n            exports : 'angular'\n          },\n          'angular-resource': {\n            deps: ['angular'],\n            exports : 'angular'\n          }\n        }\n      });\n       require([\n        'angular',\n        'angular-route',\n        'angular-resource',\n        './services',\n        './controllers'\n        ],\n        function(angular) {\n          angular.module('azApp', [\n            'ngRoute',\n            'ngResource',\n            'azApp.services',\n            'azApp.controllers'\n          ])\n           .config(['$routeProvider', '$locationProvider', '$httpProvider', function($routeProvider, $locationProvider, $httpProvider) {\n            $routeProvider\n              .when('/', {\n                templateUrl: 'assets/javascripts/partials/products.html',\n                controller: 'ProductsCtrl'\n              })\n          }]);\n           angular.bootstrap(document, ['azApp']);\n      });\n    ```", "```java\n    require([\n        'angular',\n        'angular-route',\n        'angular-resource',\n        './services',\n        './controllers'\n        ])\n    ```", "```java\n    $routeProvider\n        .when('/', {\n          templateUrl: 'assets/javascripts/partials/products.html',\n          controller: 'ProductsCtrl'\n        })\n      }])\n    ```", "```java\n    <span class=\"strong\"><strong>    activator new play2-parse-84 play-scala &amp;&amp; cd play2-parse-84</strong></span>\n    ```", "```java\n    package plugins\n         import play.api.{Application, Plugin}\n         class ParsePlugin(app: Application) extends Plugin {\n          lazy val parseAPI: ParseAPI = {\n            new ParseAPI(\n              app.configuration.getString(\"parse.core.appId\").get,\n              app.configuration.getString(\"parse.core.restKey\").get\n            )\n          }\n           override def onStart() = {\n            parseAPI\n          }\n        }\n    ```", "```java\n    parse.core.appId=&lt;YOUR_PARSE_APP_ID&gt;\n        parse.core.restKey=&lt;YOUR_PARSE_REST_KEY&gt;\n    ```", "```java\n    package plugins\n         import play.api.Play.current\n        import play.api.libs.json.JsValue\n        import play.api.libs.ws.WS\n         class ParseAPI(appId: String, restKey: String) {\n          private val PARSE_API_HEADER_APP_ID = \"X-Parse-Application-Id\"\n          private val PARSE_API_HEADER_REST_API_KEY = \"X-Parse-REST-API-Key\"\n          private val PARSE_API_URL = \"https://api.parse.com\"\n          private val PARSE_API_URL_CLASSES = \"/1/classes/\"\n          private val PARSE_API_HEADER_CONTENT_TYPE = \"Content-Type\"\n          private val CONTENT_TYPE_JSON = \"application/json; charset=utf-8\"\n           private val parseBaseUrl = \"%s%s\".format(PARSE_API_URL, PARSE_API_URL_CLASSES)\n           def list(className: String) = parseWS(className).get()\n           def create(className: String, json: JsValue) = {\n            parseWS(className)\n              .withHeaders(PARSE_API_HEADER_CONTENT_TYPE -&gt; CONTENT_TYPE_JSON)\n          .post(json)\n          }\n           private def parseWS(className: String) = WS.url(\"%s%s\".format(parseBaseUrl, className))\n            .withHeaders(PARSE_API_HEADER_APP_ID -&gt; appId)\n            .withHeaders(PARSE_API_HEADER_REST_API_KEY -&gt; restKey)\n        }\n    ```", "```java\n    799:plugins.ParsePlugin\n    ```", "```java\n    package controllers\n         import play.api.Play\n        import play.api.Play.current\n        import play.api.libs.json.{JsError, Json, JsObject}\n        import play.api.mvc.{BodyParsers, Action, Controller}\n        import play.api.libs.concurrent.Execution.Implicits._\n        import plugins.ParsePlugin\n        import scala.collection.mutable.ListBuffer\n        import scala.concurrent.Future\n         case class Item(objectId: Option[String], title: String, sku: String)\n         object Items extends Controller {\n          private val parseAPI = Play.application.plugin[ParsePlugin].get.parseAPI\n          implicit val itemWrites = Json.writes[Item]\n          implicit val itemReads = Json.reads[Item]\n           val `Items` = \"Items\"\n           def index = Action.async { implicit request =&gt;\n            parseAPI.list(`Items`).map { res =&gt;\n              val list = ListBuffer[Item]()\n              (res.json \\ \"results\").as[List[JsObject]].map { itemJson =&gt;\n                list += itemJson.as[Item]\n              }\n              Ok(Json.toJson(list))\n            }\n          }\n           def create = Action.async(BodyParsers.parse.json) { implicit request =&gt;\n            val post = request.body.validate[Item]\n            post.fold(\n              errors =&gt; Future.successful {\n                BadRequest(Json.obj(\"error\" -&gt; JsError.toFlatJson(errors)))\n              },\n              item =&gt; {\n                parseAPI.create(`Items`, Json.toJson(item)).map { res =&gt;\n                  if (res.status == CREATED) {\n                    Created(Json.toJson(res.json))\n                  } else {\n                    BadGateway(\"Please try again later\")\n                  }\n                }\n              }\n            )\n          }\n        }\n    ```", "```java\n    GET     /api/items                  controllers.Items.index\n        POST    /api/items                  controllers.Items.create\n    ```", "```java\n    <span class=\"strong\"><strong>    $ activator \"~run\"</strong></span>\n    <span class=\"strong\"><strong>    [info] Loading project definition</strong></span>\n    <span class=\"strong\"><strong>    [info] Set current project to play2-parse-84</strong></span>\n     <span class=\"strong\"><strong>    --- (Running the application, auto-reloading is enabled) ---</strong></span>\n     <span class=\"strong\"><strong>    [info] play - Listening for HTTP on /0:0:0:0:0:0:0:0:9000</strong></span>\n     <span class=\"strong\"><strong>    (Server started, use Ctrl+D to stop and go back to the console...)</strong></span>\n     <span class=\"strong\"><strong>    [success] Compiled in 400ms</strong></span>\n    <span class=\"strong\"><strong>    [info] play - Application started (Dev)</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    $ curl -v -X POST http://localhost:9000/api/items --header \"Content-type: application/json\" -d '{\"title\":\"Supermicro RTG RX-2280I\", \"sku\":\"RX-2280I\"}'</strong></span>\n    <span class=\"strong\"><strong>    * Hostname was NOT found in DNS cache</strong></span>\n    <span class=\"strong\"><strong>    *   Trying ::1...</strong></span>\n    <span class=\"strong\"><strong>    * Connected to localhost (::1) port 9000 (#0)</strong></span>\n    <span class=\"strong\"><strong>    &gt; POST /api/items HTTP/1.1</strong></span>\n    <span class=\"strong\"><strong>    &gt; User-Agent: curl/7.37.1</strong></span>\n    <span class=\"strong\"><strong>    &gt; Host: localhost:9000</strong></span>\n    <span class=\"strong\"><strong>    &gt; Accept: */*</strong></span>\n    <span class=\"strong\"><strong>    &gt; Content-type: application/json</strong></span>\n    <span class=\"strong\"><strong>    &gt; Content-Length: 53</strong></span>\n    <span class=\"strong\"><strong>    &gt;</strong></span>\n    <span class=\"strong\"><strong>    * upload completely sent off: 53 out of 53 bytes</strong></span>\n    <span class=\"strong\"><strong>    &lt; HTTP/1.1 201 Created</strong></span>\n    <span class=\"strong\"><strong>    &lt; Content-Type: application/json; charset=utf-8</strong></span>\n    <span class=\"strong\"><strong>    &lt; Content-Length: 64</strong></span>\n    <span class=\"strong\"><strong>    &lt;</strong></span>\n    <span class=\"strong\"><strong>    * Connection #0 to host localhost left intact</strong></span>\n    <span class=\"strong\"><strong>    {\"createdAt\":\"2015-04-08T06:13:52.103Z\",\"objectId\":\"K7Q2JEXxmI\"}%</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    $ curl -v http://localhost:9000/api/items</strong></span>\n    <span class=\"strong\"><strong>    * Hostname was NOT found in DNS cache</strong></span>\n    <span class=\"strong\"><strong>    *   Trying ::1...</strong></span>\n    <span class=\"strong\"><strong>    * Connected to localhost (::1) port 9000 (#0)</strong></span>\n    <span class=\"strong\"><strong>    &gt; GET /api/items HTTP/1.1</strong></span>\n    <span class=\"strong\"><strong>    &gt; User-Agent: curl/7.37.1</strong></span>\n    <span class=\"strong\"><strong>    &gt; Host: localhost:9000</strong></span>\n    <span class=\"strong\"><strong>    &gt; Accept: */*</strong></span>\n    <span class=\"strong\"><strong>    &gt;</strong></span>\n    <span class=\"strong\"><strong>    &lt; HTTP/1.1 200 OK</strong></span>\n    <span class=\"strong\"><strong>    &lt; Content-Type: application/json; charset=utf-8</strong></span>\n    <span class=\"strong\"><strong>    &lt; Content-Length: 231</strong></span>\n    <span class=\"strong\"><strong>    &lt;</strong></span>\n    <span class=\"strong\"><strong>    * Connection #0 to host localhost left intact</strong></span>\n    <span class=\"strong\"><strong>    [{\"objectId\":\"0aTdEVAwaF\",\"title\":\"DELL PowerEdge R630\",\"sku\":\"R630-3552\"},    {\"objectId\":\"T3TqVdi9a2\",\"title\":\"HP ProLiant DL360p Gen8\",\"sku\":\"733733-421\"},    {\"objectId\":\"K7Q2JEXxmI\",\"title\":\"Supermicro RTG RX-2280I\",\"sku\":\"RX-2280I\"}]%</strong></span>\n    ```", "```java\n// app/plugins/ParsePlugin.scala\n    class ParsePlugin(app: Application) extends Plugin {\n      lazy val parseAPI: ParseAPI = {\n        new ParseAPI(\n          app.configuration.getString(\"parse.core.appId\").get,\n          app.configuration.getString(\"parse.core.restKey\").get\n        )\n      }\n       override def onStart() = {\n        parseAPI\n      }\n    }\n     // conf/application.conf\n    parse.core.appId=&lt;YOUR_PARSE_APP_ID&gt;\n    parse.core.restKey=&lt;YOUR_PARSE_REST_KEY&gt;\n```", "```java\npackage plugins\n     import play.api.Play.current\n    import play.api.libs.json.JsValue\n    import play.api.libs.ws.WS\n     class ParseAPI(appId: String, restKey: String) {\n      private val PARSE_API_HEADER_APP_ID = \"X-Parse-Application-Id\"\n      private val PARSE_API_HEADER_REST_API_KEY = \"X-Parse-REST-API-Key\"\n      private val PARSE_API_URL = \"https://api.parse.com\"\n      private val PARSE_API_URL_CLASSES = \"/1/classes/\"\n      private val PARSE_API_HEADER_CONTENT_TYPE = \"Content-Type\"\n      private val CONTENT_TYPE_JSON = \"application/json; charset=utf-8\"\n       private val parseBaseUrl = \"%s%s\".format(PARSE_API_URL, PARSE_API_URL_CLASSES)\n       def list(className: String) = parseWS(className).get()\n       def create(className: String, json: JsValue) = {\n        parseWS(className)\n          .withHeaders(PARSE_API_HEADER_CONTENT_TYPE -&gt; CONTENT_TYPE_JSON)\n      .post(json)\n      }\n       private def parseWS(className: String) = WS.url(\"%s%s\".format(parseBaseUrl, className))\n        .withHeaders(PARSE_API_HEADER_APP_ID -&gt; appId)\n        .withHeaders(PARSE_API_HEADER_REST_API_KEY -&gt; restKey)\n    }\n```", "```java\nprivate def parseWS(className: String) = WS.url(\"%s%s\".format(parseBaseUrl, className))\n        .withHeaders(PARSE_API_HEADER_APP_ID -&gt; appId)\n        .withHeaders(PARSE_API_HEADER_REST_API_KEY -&gt; restKey)\n```", "```java\ndef create(className: String, json: JsValue) = {\n      parseWS(className)\n        .withHeaders(PARSE_API_HEADER_CONTENT_TYPE -&gt; CONTENT_TYPE_JSON)\n        .post(json)\n    }\n```", "```java\ndef index = Action.async { implicit request =&gt;\n      parseAPI.list(`Items`).map { res =&gt;\n        val list = ListBuffer[Item]()\n        (res.json \\ \"results\").as[List[JsObject]].map { itemJson =&gt;\n          list += itemJson.as[Item]\n        }\n        Ok(Json.toJson(list))\n      }\n    }\n     def create = Action.async(BodyParsers.parse.json) { implicit request =&gt;\n      val post = request.body.validate[Item]\n      post.fold(\n        errors =&gt; Future.successful {\n          BadRequest(Json.obj(\"error\" -&gt; JsError.toFlatJson(errors)))\n        },\n        item =&gt; {\n          parseAPI.create(`Items`, Json.toJson(item)).map { res =&gt;\n            if (res.status == CREATED) {\n              Created(Json.toJson(res.json))\n            } else {\n              BadGateway(\"Please try again later\")\n            }\n          }\n        }\n      )\n    }\n```", "```java\nGET     /api/items                  controllers.Items.index\n    POST    /api/items                  controllers.Items.create\n```", "```java\n    <span class=\"strong\"><strong>    $ vagrant -v</strong></span>\n    <span class=\"strong\"><strong>    Vagrant 1.6.3</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    mkdir play2-vagrant-85 &amp;&amp; cd $_</strong></span>\n    ```", "```java\n    # -*- mode: ruby -*-\n        # vi: set ft=ruby :\n         VAGRANTFILE_API_VERSION = \"2\"\n         Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n          config.vm.box = \"Centos-6.5\"\n          config.vm.box_url = \"https://github.com/2creatives/vagrant-centos/releases/download/v6.5.1/centos65-x86_64-20131205.box\"\n          config.vm.hostname = \"VG-play2\"\n           config.vm.provision :shell, :path =&gt; \"bootstrap.sh\"\n           config.vm.network \"forwarded_port\", guest: 9000, host: 9000\n          config.vm.network \"forwarded_port\", guest: 3306, host: 3306\n           config.vm.provider :virtualbox do |vb|\n            vb.name = \"VG-play2\"\n            vb.gui = false\n            vb.customize [\"modifyvm\", :id, \"--memory\", \"4096\", \"--cpus\", \"2\", \"--    ioapic\", \"on\"]\n          end\n        end\n    ```", "```java\n    #!/usr/bin/env bash\n         set -x\n         SCALA_VER=2.11.2\n        ACTIVATOR_VER=1.3.2\n        MYSQL_ROOT_PW=\"cookbook\"\n         if [ ! -e \"/home/vagrant/.firstboot\" ]; then\n           # tools etc\n          yum -y install yum-plugin-fastestmirror\n          yum -y install git wget curl rpm-build\n           # Pre-docker install: http://stackoverflow.com/a/27216873\n          sudo yum-config-manager --enable public_ol6_latest\n          sudo yum install -y device-mapper-event-libs\n           # Docker\n          yum -y install docker-io\n          service docker start\n          chkconfig docker on\n          usermod -a -G docker vagrant\n           # Install the JDK\n          curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u51-b13/jdk-7u51-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\n          rpm -i jdk-7u51-linux-x64.rpm\n          /usr/sbin/alternatives --install /usr/bin/java java /usr/java/default/bin/java 200000\n          rm jdk-7u51-linux-x64.rpm\n           # Install scala repl\n          rpm -ivh http://scala-lang.org/files/archive/scala-$SCALA_VER.rpm\n           # Install Activator\n          cd /opt\n          wget http://downloads.typesafe.com/typesafe-activator/$ACTIVATOR_VER/typesafe-activator-$ACTIVATOR_VER.zip\n          unzip typesafe-activator-$ACTIVATOR_VER.zip\n          chown -R vagrant:vagrant /opt/activator-$ACTIVATOR_VER\n           # Set Path\n          echo \"export JAVA_HOME=/usr/java/default/\" &gt;&gt; /home/vagrant/.bash_profile\n          echo \"export PATH=$PATH:$JAVA_HOME/bin:/home/vagrant/bin:/opt/activator-$ACTIVATOR_VER\" &gt;&gt; /home/vagrant/.bash_profile\n           touch /home/vagrant/.firstboot\n        fi\n         # Start MySQL\n        docker run -e MYSQL_PASS=$MYSQL_ROOT_PW -i -d -p 3306:3306 --name mysqld -t tutum/mysql\n    ```", "```java\n    <span class=\"strong\"><strong>    $ cat .gitignore</strong></span>\n    <span class=\"strong\"><strong>    .vagrant</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    vagrant up</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    vagrant ssh</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    cd /vagrant</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    $ ls -ltra</strong></span>\n    <span class=\"strong\"><strong>    -rw-r--r--   1 vagrant vagrant    9 Mar 31 12:48 .gitignore</strong></span>\n    <span class=\"strong\"><strong>    -rw-r--r--   1 vagrant vagrant  683 Mar 31 12:50 Vagrantfile</strong></span>\n    <span class=\"strong\"><strong>    drwxr-xr-x   1 vagrant vagrant  102 Mar 31 12:57 .vagrant</strong></span>\n    <span class=\"strong\"><strong>    -rwxr-xr-x   1 vagrant vagrant 1632 Apr  1 12:44 bootstrap.sh</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    $ activator new play-slick-angular-test-example play-slick-angular-test-example</strong></span>\n    ```", "```java\n    db.default.driver=com.mysql.jdbc.Driver\n        db.default.url=\"jdbc:mysql://localhost/report?createDatabaseIfNotExist=true\"\n        db.default.user=admin\n        db.default.password=\"cookbook\"\n         applyEvolutions.default=true\n    ```", "```java\n    <span class=\"strong\"><strong>    $ activator run</strong></span>\n    ```", "```java\n    config.vm.box_url = \"https://github.com/2creatives/vagrant-centos/releases/download/v6.5.1/centos65-x86_64-20131205.box\"\n    ```", "```java\n    config.vm.provision :shell, :path =&gt; \"bootstrap.sh\"\n    ```", "```java\n    config.vm.network \"forwarded_port\", guest: 9000, host: 9000\n        config.vm.network \"forwarded_port\", guest: 3306, host: 3306\n    ```", "```java\n    vb.customize [\"modifyvm\", :id, \"--memory\", \"4096\", \"--cpus\", \"2\", \"--ioapic\", \"on\"]\n    ```", "```java\n    SCALA_VER=2.11.2\n        ACTIVATOR_VER=1.3.2\n    ```", "```java\n    MYSQL_ROOT_PW=\"cookbook\"\n    ```", "```java\n    <span class=\"strong\"><strong># tools etc</strong></span>\n    <span class=\"strong\"><strong>  yum -y install yum-plugin-fastestmirror</strong></span>\n    <span class=\"strong\"><strong>  yum -y install git wget curl rpm-build</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong># Pre-docker install: http://stackoverflow.com/a/27216873</strong></span>\n    <span class=\"strong\"><strong>  sudo yum-config-manager --enable public_ol6_latest</strong></span>\n    <span class=\"strong\"><strong>  sudo yum install -y device-mapper-event-libs</strong></span>\n     <span class=\"strong\"><strong>  # Docker</strong></span>\n    <span class=\"strong\"><strong>  yum -y install docker-io</strong></span>\n    <span class=\"strong\"><strong>  service docker start</strong></span>\n    <span class=\"strong\"><strong>  chkconfig docker on</strong></span>\n    <span class=\"strong\"><strong>  usermod -a -G docker vagrant</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    # Install the JDK</strong></span>\n    <span class=\"strong\"><strong>    curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u51-b13/jdk-7u51-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'</strong></span>\n    <span class=\"strong\"><strong>    rpm -i jdk-7u51-linux-x64.rpm</strong></span>\n    <span class=\"strong\"><strong>    /usr/sbin/alternatives --install /usr/bin/java java /usr/java/default/bin/java 200000</strong></span>\n    <span class=\"strong\"><strong>    rm jdk-7u51-linux-x64.rpm</strong></span>\n     <span class=\"strong\"><strong>    # Install scala repl</strong></span>\n    <span class=\"strong\"><strong>    rpm -ivh http://scala-lang.org/files/archive/scala-$SCALA_VER.rpm</strong></span>\n     <span class=\"strong\"><strong>    # Install Activator</strong></span>\n    <span class=\"strong\"><strong>    cd /opt</strong></span>\n    <span class=\"strong\"><strong>    wget http://downloads.typesafe.com/typesafe-activator/$ACTIVATOR_VER/typesafe-activator-$ACTIVATOR_VER.zip</strong></span>\n    <span class=\"strong\"><strong>    unzip typesafe-activator-$ACTIVATOR_VER.zip</strong></span>\n    <span class=\"strong\"><strong>    chown -R vagrant:vagrant /opt/activator-$ACTIVATOR_VER</strong></span>\n     <span class=\"strong\"><strong>    # Set Path</strong></span>\n    <span class=\"strong\"><strong>    echo \"export JAVA_HOME=/usr/java/default/\" &gt;&gt; /home/vagrant/.bash_profile</strong></span>\n    <span class=\"strong\"><strong>    echo \"export PATH=$PATH:$JAVA_HOME/bin:/home/vagrant/bin:/opt/activator-$ACTIVATOR_VER\" &gt;&gt; /home/vagrant/.bash_profile</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    # Start MySQL</strong></span>\n    <span class=\"strong\"><strong>    docker run -e MYSQL_PASS=$MYSQL_ROOT_PW -i -d -p 3306:3306 --name mysqld -t tutum/mysql</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    [vagrant@VG-play2 ~]$ java -version</strong></span>\n    <span class=\"strong\"><strong>    java version \"1.7.0_51\"</strong></span>\n    <span class=\"strong\"><strong>    Java(TM) SE Runtime Environment (build 1.7.0_51-b13)</strong></span>\n    <span class=\"strong\"><strong>    Java HotSpot(TM) 64-Bit Server VM (build 24.51-b03, mixed mode)</strong></span>\n    <span class=\"strong\"><strong>    [vagrant@VG-play2 ~]$ activator --version</strong></span>\n    <span class=\"strong\"><strong>    sbt launcher version 0.13.8-M5</strong></span>\n    <span class=\"strong\"><strong>    [vagrant@VG-play2 ~]$ scala -version</strong></span>\n    <span class=\"strong\"><strong>    Scala code runner version 2.11.2 -- Copyright 2002-2013, LAMP/EPFL</strong></span>\n    <span class=\"strong\"><strong>    [vagrant@VG-play2 ~]$ docker ps</strong></span>\n    <span class=\"strong\"><strong>    CONTAINER ID        IMAGE                COMMAND             CREATED                STATUS              PORTS                    NAMES</strong></span>\n    <span class=\"strong\"><strong>    08ecd4a3d98c        tutum/mysql:latest   \"/run.sh\"           21 minutes ago          Up 21 minutes       0.0.0.0:3306-&gt;3306/tcp   mysqld</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    cd /vagrant/play-slick-angular-test-example</strong></span>\n    <span class=\"strong\"><strong>    activator run</strong></span>\n    <span class=\"strong\"><strong>    [info] Loading project definition from /vagrant/play-slick-angular-test-example/project</strong></span>\n    <span class=\"strong\"><strong>    [info] Set current project to PlaySlickAngularBootstrapH2TestsExample (in build file:/vagrant/play-slick-angular-test-example/)</strong></span>\n    <span class=\"strong\"><strong>    [success] Total time: 4 s, completed Apr 6, 2015 2:55:54 PM</strong></span>\n    <span class=\"strong\"><strong>    [info] Updating {file:/vagrant/play-slick-angular-test-example/}root...</strong></span>\n    <span class=\"strong\"><strong>    [info] Resolving jline#jline;2.12 ...</strong></span>\n    <span class=\"strong\"><strong>    [info] Done updating.</strong></span>\n     <span class=\"strong\"><strong>    --- (Running the application from SBT, auto-reloading is enabled) ---</strong></span>\n     <span class=\"strong\"><strong>    [info] play - Listening for HTTP on /0:0:0:0:0:0:0:0:9000</strong></span>\n     <span class=\"strong\"><strong>    (Server started, use Ctrl+D to stop and go back to the console...)</strong></span>\n    ```", "```java\n<span class=\"strong\"><strong>    vagrant halt</strong></span>\n```", "```java\n    <span class=\"strong\"><strong>    cd play2-parse-84</strong></span>\n    ```", "```java\n    <span class=\"strong\"><strong>    $ activator idea</strong></span>\n    <span class=\"strong\"><strong>    [info] Creating IDEA module for project 'play2-parse-84' ...</strong></span>\n    <span class=\"strong\"><strong>    [info] Running compile:managedSources ...</strong></span>\n    <span class=\"strong\"><strong>    [info] Running test:managedSources ...</strong></span>\n    <span class=\"strong\"><strong>    [info] Created /Users/cookbook/play2-parse-84/.idea/IdeaProject.iml</strong></span>\n    <span class=\"strong\"><strong>    [info] Created /Users/cookbook/play2-parse-84/.idea</strong></span>\n    <span class=\"strong\"><strong>    [info] Created /Users/cookbook/play2-parse-84.iml</strong></span>\n    <span class=\"strong\"><strong>    [info] Created /Users/cookbook/play2-parse-84/.idea_modules/play2-parse-84- build.iml</strong></span>\n    ```"]