["```java\ncurl --header \"X-GitHub-Api-Version:2022-11-28\" https://api.github.com/zen \n```", "```java\ncurl -X GET https://api.myproduct.com/resource \\ -H \"Accept: application/vnd.myapi.v1+json\" \n```", "```java\n@GetMapping\n@Override\npublic ResponseEntity<List<ProductOutput>> getProducts() {\n    final var products = productsQueryUseCase.getAllProducts()\n        .stream()\n        .map(productMapper::toProductOutput)\n        .toList();\n    return ResponseEntity.status(HttpStatus.OK)\n        .body(products);\n} \n```", "```java\n@GetMapping(produces = \"application/vnd.packt-v2+json\")\n@Override\npublic ResponseEntity<PaginatedProducts> getProductsV2(@RequestParam(\n    value = \"page\", defaultValue = \"0\") Integer page, @RequestParam(\n    value = \"limit\", defaultValue = \"10\") Integer limit) {\n        final var products = productsQueryUseCase.getAllProducts(\n            PageRequest.of(page, limit));\n    int totalPages = products.getTotalPages();\n    List<ProductOutput> output = products.stream()\n        .map(productMapper::toProductOutput)\n        .toList();\n    return ResponseEntity.status(HttpStatus.OK)\n        .body(new PaginatedProducts(totalPages, output));\n} \n```", "```java\npublic record PaginatedProducts(@Schema(name = \"totalPages\",\n    example = \"10\") Integer totalPages, List<ProductOutput> products) {} \n```", "```java\npublic interface ProductsQueryUseCase {\n    Product getProductById(String productId);\n    Page<? extends Product> getAllProducts(Pageable pageRequest);\n} \n```", "```java\npublic interface ProductsApi {\n....\n@Operation(\n        operationId = \"getProducts_v2\",\n        summary = \"Retrieve all products\",\n        responses = {\n            @ApiResponse(responseCode = \"200\",\n                description = \"A list of products\", content = {\n                    @Content(mediaType = \"application/json\",\n                        array = @ArraySchema(schema = @Schema(\n                            implementation = PaginatedProducts.class)))\n                })\n        }\n)\nResponseEntity<PaginatedProducts> getProductsV2(\n     @Parameter(name = \"page\", description = \"Number of current page\",\n        required = false, in = ParameterIn.QUERY, example = \"0\")\n        Integer page,\n        @Parameter(name = \"limit\",\n            description = \"Size of elements per page\", required = false,\n            in = ParameterIn.QUERY, example = \"10\") Integer limit);\n....\n} \n```", "```java\ncurl -X 'GET' 'http://localhost:8080/api/products' -H 'accept: application/json' \n```", "```java\n[\n  {\n    \"name\": \"Keyboard\",\n    \"sku\": \"AK21109\",\n    \"description\": \"Ergonomic Keyboard\",\n    \"price\": 60\n  },\n  {\n    \"name\": \"Keyboard 08\",\n    \"sku\": \"AK21108\",\n    \"description\": \"Ergonomic Keyboard\",\n    \"price\": 60\n  },\n  {\n    \"name\": \"Keyboard 07\",\n    \"sku\": \"AK21107\",\n    \"description\": \"Ergonomic Keyboard\",\n    \"price\": 60\n  }\n] \n```", "```java\ncurl -X 'GET' 'http://localhost:8080/api/products?page=0&limit=2' -H 'accept: application/json' \n```", "```java\n@GetMapping\n@Override\npublic ResponseEntity<List<ProductOutput>> getProducts() {\n    final var products = productsQueryUseCase.getAllProducts(\n        `PageRequest.ofSize(Integer.MAX_VALUE))`\n            .stream()\n            .map(productMapper::toProductOutput)\n            .toList();\n    return ResponseEntity.status(HttpStatus.OK)\n        .body(products);\n} \n```", "```java\ncurl -X 'GET' 'http://localhost:8080/api/products?page=0&limit=2' -H 'accept: application/vnd.packt-v2+json' \n```", "```java\n{\n  \"totalPages\": 2,\n  \"products\": [\n    {\n      \"name\": \"Keyboard\",\n      \"sku\": \"AK21109\",\n      \"description\": \"Ergonomic Keyboard\",\n      \"price\": 60\n    },\n    {\n      \"name\": \"Keyboard 08\",\n      \"sku\": \"AK21108\",\n      \"description\": \"Ergonomic Keyboard\",\n      \"price\": 60\n    }\n  ]\n} \n```", "```java\ncurl -X 'GET' 'http://localhost:8080/api/products?page=0&limit=2' -H 'accept: application/vnd.packt-v3+json' \n```", "```java\n[\n  {\n    \"name\": \"Keyboard\",\n    \"sku\": \"AK21109\",\n    \"description\": \"Ergonomic Keyboard\",\n    \"price\": 60\n  },\n  {\n    \"name\": \"Keyboard 08\",\n    \"sku\": \"AK21108\",\n    \"description\": \"Ergonomic Keyboard\",\n    \"price\": 60\n  },\n  {\n    \"name\": \"Keyboard 07\",\n    \"sku\": \"AK21107\",\n    \"description\": \"Ergonomic Keyboard\",\n    \"price\": 60\n  }\n] \n```", "```java\n@GetMapping(**produces =** **MediaType****.****APPLICATION_JSON_VALUE**)\n@Override\npublic ResponseEntity<List<ProductOutput>> getProducts() {\n    final var products = productsQueryUseCase.getAllProducts(\n        PageRequest.ofSize(Integer.MAX_VALUE))\n            .stream()\n            .map(productMapper::toProductOutput)\n            .toList();\n    return ResponseEntity.status(HttpStatus.OK)\n            .body(products);\n} \n```", "```java\n{\n  \"type\": \"about:blank\",\n  \"title\": \"Not Acceptable\",\n  \"status\": 406,\n  \"detail\": \"Acceptable representations: [application/json,\n    application/vnd.packt-v2+json].\",\n  \"instance\": \"/api/products\"\n} \n```", "```java\n@Operation(\n    deprecated = true,\n    ....\n) \n```"]