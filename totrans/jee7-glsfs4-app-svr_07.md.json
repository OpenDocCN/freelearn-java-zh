["```java\npackage net.ensode.glassfishbook.websocketchat.serverendpoint;\n\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.websocket.OnClose;\nimport javax.websocket.OnMessage;\nimport javax.websocket.OnOpen;\nimport javax.websocket.Session;\nimport javax.websocket.server.ServerEndpoint;\n\n@ServerEndpoint(\"/websocketchat\")\npublic class WebSocketChatEndpoint {\n\n  private static final Logger LOG = Logger.getLogger(WebSocketChatEndpoint.class.getName());\n\n @OnOpen\n  public void connectionOpened() {\n    LOG.log(Level.INFO, \"connection opened\");\n  }\n\n @OnMessage\n  public synchronized void processMessage(Session session, String message) {\n    LOG.log(Level.INFO, \"received message: {0}\", message);\n\n    try {\n for (Session sess : session.getOpenSessions()) {\n if (sess.isOpen()) {\n sess.getBasicRemote().sendText(message);\n }\n }\n    } catch (IOException ioe) {\n      LOG.log(Level.SEVERE, ioe.getMessage());\n    }\n  }\n\n  @OnClose\n  public void connectionClosed() {\n    LOG.log(Level.INFO, \"connection closed\");\n  }\n\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html>\n<html >\n  <head>\n    <title>WebSocket Chat</title>\n    <meta name=\"viewport\" content=\"width=device-width\"/>\n <script type=\"text/javascript\">\n var websocket;\n function init() {\n websocket = new WebSocket('ws://localhost:8080/websocketchat/websocketchat');\n\n websocket.onopen = function(event) {\n websocketOpen(event)\n };\n websocket.onmessage = function(event) {\n websocketMessage(event)\n };\n websocket.onerror = function(event) {\n websocketError(event)\n };\n }\n\n function websocketOpen(event) {\n console.log(\"webSocketOpen invoked\");\n }\n\n function websocketMessage(event) {\n console.log(\"websocketMessage invoked\");\n document.getElementById('chatwindow').value += '\\r' + event.data;\n }\n\n function websocketError(event) {\n console.log(\"websocketError invoked\");\n }\n\n function sendMessage() {\n var userName =\n document.getElementById('userName').value;\n var msg =\n document.getElementById('chatinput').value;\n\n websocket.send(userName + \": \" + msg);\n }\n function closeConnection(){\n websocket.close();\n }\n\n window.addEventListener(\"load\", init);\n </script>\n  </head>\n  <body>\n    <form jsf:prependId=\"false\">\n      <input type=\"hidden\" id=\"userName\" value=\"#{user.userName}\"/>\n      <table border=\"0\">\n      <tbody>\n        <tr>\n          <td>\n            <label for=\"chatwindow\">\n              Chat Window\n            </label>\n          </td>\n          <td>\n <textArea id=\"chatwindow\" rows=\"10\"/>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <label for=\"chatinput\">\n              Type Something Here\n            </label>\n          </td>\n          <td>\n <input type=\"text\" id=\"chatinput\"/>\n <input id=\"sendBtn\" type=\"button\" value=\"Send\" onclick=\"sendMessage()\"/>\n          </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>\n <input type=\"button\" id=\"exitBtn\" value=\"Exit\" onclick=\"closeConnection()\"/>\n          </td>\n        </tr>\n      </tbody>\n      </table>\n    </form>\n  </body>\n</html>\n```", "```java\npackage net.ensode.websocketjavaclient;\n\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport javax.websocket.ClientEndpoint;\nimport javax.websocket.CloseReason;\nimport javax.websocket.ContainerProvider;\nimport javax.websocket.DeploymentException;\nimport javax.websocket.OnClose;\nimport javax.websocket.OnError;\nimport javax.websocket.OnMessage;\nimport javax.websocket.OnOpen;\nimport javax.websocket.Session;\nimport javax.websocket.WebSocketContainer;\n\n@ClientEndpoint\npublic class WebSocketClient {\n\n  private String userName;\n  private Session session;\n  private final WebSocketJavaClientFrame webSocketJavaClientFrame;\n\n  public WebSocketClient(WebSocketJavaClientFrame webSocketJavaClientFrame) {\n  this.webSocketJavaClientFrame = webSocketJavaClientFrame;\n\n  try {\n WebSocketContainer webSocketContainer = ContainerProvider.getWebSocketContainer();\n webSocketContainer.connectToServer(this, new URI(\"ws://localhost:8080/websocketchat/websocketchat\"));\n  }\n  catch (DeploymentException | IOException | URISyntaxException ex) {\n    ex.printStackTrace();\n  }\n\n  }\n\n @OnOpen\n  public void onOpen(Session session) {\n    System.out.println(\"onOpen() invoked\");\n    this.session = session;\n  }\n\n @OnClose\n  public void onClose(CloseReason closeReason) {\n    System.out.println(\"Connection closed, reason: \"+ closeReason.getReasonPhrase());\n  }\n\n @OnError\n  public void onError(Throwable throwable) {\n    System.out.println(\"onError() invoked\");\n    throwable.printStackTrace();\n  }\n\n @OnMessage\n  public void onMessage(String message, Session session) {\n    System.out.println(\"onMessage() invoked\");\n    webSocketJavaClientFrame.getChatWindowTextArea().setText(webSocketJavaClientFrame.getChatWindowTextArea().getText() + \"\\n\" + message);\n  }\n\n  public void sendMessage(String message) {\n    try {\n      System.out.println(\"sendMessage() invoked, message = \" + message);\n session.getBasicRemote().sendText(userName + \": \" + message);\n    }\n    catch (IOException ex) {\n      ex.printStackTrace();\n    }\n  }\n\n  public String getUserName() {\n    return userName;\n  }\n\n  public void setUserName(String userName) {\n    this.userName = userName;\n  }\n\n}\n```"]