["```java\nrun : hello.jar \n    java -cp hello.jar HelloWorld \n\nhello.jar : HelloWorld.class \n    jar -cf hello.jar HelloWorld.class \n\nHelloWorld.class : HelloWorld.java \n    javac HelloWorld.java\n\n```", "```java\n    make HelloWorld.class\n\n```", "```java\ntarget : dependencies \n    command\n\n```", "```java\n    tar xfz apache-ant-1.9.7-bin.tar.gz\n\n```", "```java\nexport ANT_HOME=~/bin/apache-ant-1.9.7/ \nexport PATH=${ANT_HOME}bin:$PATH\n\n```", "```java\n    $ ant\nBuildfile: build.xml does not exist!\nBuild failed\n\n```", "```java\n<project name=\"HelloWorld\" default=\"jar\" basedir=\".\"> \n<description> \n    This is a sample HelloWorld project build file. \n</description> \n    <property name=\"buildDir\" value=\"build\"/> \n    <property name=\"srcDir\" value=\"src\"/> \n    <property name=\"classesDir\" value=\"${buildDir}/classes\"/> \n    <property name=\"jarDir\" value=\"${buildDir}/jar\"/> \n\n    <target name=\"dirs\"> \n        <mkdir dir=\"${classesDir}\"/> \n        <mkdir dir=\"${jarDir}\"/> \n    </target> \n\n    <target name=\"compile\" depends=\"dirs\"> \n        <javac srcdir=\"${srcDir}\" destdir=\"${classesDir}\"/> \n    </target> \n\n    <target name=\"jar\" depends=\"dirs,compile\"> \n        <jar destfile=\"${jarDir}/HelloWorld.jar\" basedir=\"${classesDir}\"/> \n    </target> \n</project>\n\n```", "```java\n$ ant  \nBuildfile: /Users/verhasp/Dropbox/java_9-by_Example/sources/ch02/build.xml \n\ndirs: \n    [mkdir] Created dir: /Users/verhasp/Dropbox/java_9-by_Example/sources/ch02/build/classes \n    [mkdir] Created dir: /Users/verhasp/Dropbox/java_9-by_Example/sources/ch02/build/jar \n\ncompile: \n... \n    [javac] Compiling 1 source file to /Users/verhasp/Dropbox/java_9-by_Example/sources/ch02/build/classes \n\njar: \n      [jar] Building jar: /Users/verhasp/Dropbox/java_9-by_Example/sources/ch02/build/jar/HelloWorld.jar \n\nBUILD SUCCESSFUL \nTotal time: 0 seconds\n\n```", "```java\ntar xfz apache-maven-3.3.9-bin.tar.gz\n\n```", "```java\nexport M2_HOME=~/bin/apache-maven-3.3.9/ \nexport PATH=${M2_HOME}bin:$PATH\n\n```", "```java\n    $ mvn -v\nApache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T17:41:47+01:00)\nMaven home: /Users/verhasp/bin/apache-maven-3.3.9\nJava version: 9-ea, vendor: Oracle Corporation\nJava home: /Library/Java/JavaVirtualMachines/jdk-9.jdk/Contents/Home\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.11.6\", arch: \"x86_64\", family: \"mac\"\n\n```", "```java\n    $ mvn archetype:generate\n\n```", "```java\n    Choose a number: 817: \n\n```", "```java\n    Choose version: \n1: 1.0-alpha-1\n2: 1.0-alpha-2\n3: 1.0-alpha-3\n4: 1.0-alpha-4\n5: 1.0\n6: 1.1\nChoose a number: 6: 5\n\n```", "```java\nDefine value for property 'groupId': : packt.java9.by.example\nDefine value for property 'artifactId': : SortTutorial\n\n```", "```java\nDefine value for property 'version':  1.0-SNAPSHOT: : 1.0.0-SNAPSHOT\n\n```", "```java\nDefine value for property 'package':  packt.java9.by.example: :\n\n```", "```java\nConfirm properties configuration: \ngroupId: packt.java9.by.example \nartifactId: SortTutorial \nversion: 1.0.0-SNAPSHOT \npackage: packt.java9.by.example \n Y: : Y\n\n```", "```java\n[INFO] ----------------------------------------------------------- \n[INFO] Using following parameters for creating project from Old (1.x) Archetype: maven-archetype-quickstart:1.0 \n[INFO] ----------------------------------------------------------- \n[INFO] Parameter: basedir, Value: .../mavenHelloWorld \n[INFO] Parameter: package, Value: packt.java9.by.example \n[INFO] Parameter: groupId, Value: packt.java9.by.example \n[INFO] Parameter: artifactId, Value: SortTutorial \n[INFO] Parameter: packageName, Value: packt.java9.by.example \n[INFO] Parameter: version, Value: 1.0.0-SNAPSHOT \n[INFO] *** End of debug info from resources from generated POM *** \n[INFO] project created from Old (1.x) Archetype in dir: .../mavenHelloWorld/SortTutorial \n[INFO] ----------------------------------------------------------- \n[INFO] BUILD SUCCESS \n[INFO] ----------------------------------------------------------- \n[INFO] Total time: 01:27 min \n[INFO] Finished at: 2016-07-24T14:22:36+02:00 \n[INFO] Final Memory: 11M/153M \n[INFO] -----------------------------------------------------------\n\n```", "```java\n    $ mvn package\n\n```", "```java\n    $ java -cp target/SortTutorial-1.0.0-SNAPSHOT.jar packt.java9.by.example.App\n\n```", "```java\n    $ unzip gradle-3.3-bin.zip\n\n```", "```java\nexport GRADLE_HOME=~/bin/gradle-3.3/ \nexport PATH=${GRADLE_HOME}bin:$PATH\n\n```", "```java\n    $ gradle -version\n\n```", "```java\n    $ mvn archetype:generate\n\n```", "```java\npackage packt.java9.by.example.stringsort; \n\npublic class Sort { \n}\n\n```", "```java\npackage packt.java9.by.example; \n\npublic class App  \n{ \n    public static void main( String[] args ) \n    { \n        System.out.println( \"Hello World!\" ); \n    } \n}\n\n```", "```java\npackage packt.java9.by.example.stringsort; \n\npublic class Sort { \n\n    public void sort(String[] names) { \n        int n = names.length; \n        while (n > 1) { \n            for (int j = 0; j < n - 1; j++) { \n                if (names[j].compareTo(names[j + 1]) > 0) { \n                    final String tmp = names[j + 1]; \n                    names[j + 1] = names[j]; \n                    names[j] = tmp; \n                } \n            } \n            n--; \n        } \n    } \n}\n\n```", "```java\npackage packt.java9.by.example; \n\nimport packt.java9.by.example.stringsort.Sort; \n\npublic class App { \n    public static void main(String[] args) { \n        String[] actualNames = new String[]{ \n                \"Johnson\", \"Wilson\", \n                \"Wilkinson\", \"Abraham\", \"Dagobert\" \n        }; \n        final Sort sorter = new Sort(); \n        sorter.sort(actualNames); \n        for (final String name : actualNames) { \n            System.out.println(name); \n        } \n    } \n}\n\n```", "```java\n        int n = names.length; \n        while (n > 1) { \n            for (int j = 0; j < n - 1; j++) { \n                if (names[j].compareTo(names[j + 1]) > 0) { \n                    final String tmp = names[j + 1]; \n                    names[j + 1] = names[j]; \n                    names[j] = tmp; \n                } \n            } \n            n--; \n        }\n\n```", "```java\nInteger a = 113;\n\n```", "```java\ndouble z = Math.sin(1.22);\n\n```", "```java\nSystem.out.println(\"Hello World\");\n\n```", "```java\nfor( initial expression ; condition ; increment expression ) \n  block\n\n```", "```java\nwhile (n > 1) {\n\n```", "```java\nwhile ( condition ) block\n\n```", "```java\ndo block while( condition );\n\n```", "```java\n                if (names[j].compareTo(names[j + 1]) > 0) { \n                    final String tmp = names[j + 1]; \n                    names[j + 1] = names[j]; \n                    names[j] = tmp; \n                }\n\n```", "```java\nif( condition ) block else block\n\n```", "```java\npublic class TopLevel { \n\n    class InnerClass { } \n}\n\n```", "```java\nTopLevel tl = new TopLevel(); \nInnerClass ic = tl.new InnerClass();\n\n```", "```java\npackage packt.java9.by.example.stringsort;\n\n```", "```java\n    Static member 'packt.java9.by.example.stringsort.Sort.sort(java.lang.String[])' accessed via instance reference\n\n```", "```java\npublic static void main(String[] args) { \n    String[] actualNames = new String[]{ \n            \"Johnson\", \"Wilson\", \n            \"Wilkinson\", \"Abraham\", \"Dagobert\" \n    }; \n    Sort.sort(actualNames); \n    for (final String name : actualNames) { \n        System.out.println(name); \n    } \n}\n\n```", "```java\n    $ mvn package\n\n```", "```java\n    $ java -cp target/SortTutorial-1.0.0-SNAPSHOT.jar packt.java9.by.example.App\n\n```"]