["```java\n    lein repl\n    ```", "```java\n    (+ 1 2)\n    ```", "```java\n    3\n    ```", "```java\n    (filter odd? [1 2 3 4 5 6])\n    ```", "```java\n    (1 3 5)\n    ```", "```java\n    (in-ns 'new-namespace)\n    ```", "```java\n    (def fruits [\"orange\" \"apple\" \"melon\"])\n    ```", "```java\n    #'new-namespace/fruits\n    ```", "```java\n    fruits\n    ```", "```java\n    [\"orange\" \"apple\" \"melon\"]\n    ```", "```java\n    (in-ns 'other-namespace)\n    ```", "```java\n    #object[clojure.lang.Namespace 0x2f2b1d3c \"other-namespace\"]\n    ```", "```java\n    other-namespace=>\n    ```", "```java\n    fruits\n    ```", "```java\n    CompilerException java.lang.RuntimeException: Unable to resolve symbol: fruits in this context, compiling:(null:0:0)\n    ```", "```java\n    new-namespace/fruits\n    ```", "```java\n    [\"orange\" \"apple\" \"melon\"]\n    ```", "```java\n    (clojure.core/refer 'new-namespace)\n    ```", "```java\n    fruits\n    ```", "```java\n    [\"orange\" \"apple\" \"melon\"]\n    ```", "```java\n    (in-ns 'garden)\n    ```", "```java\n    #object[clojure.lang.Namespace 0x6436be0 \"garden\"]\n    ```", "```java\n    (def vegetables [\"cucumber\" \"carrot\"])\n    (def fruits [\"orange\" \"apple\" \"melon\"])\n    ```", "```java\n    #'garden/vegetables\n    #'garden/fruits\n    ```", "```java\n    (in-ns 'shop)\n    ```", "```java\n    (clojure.core/refer 'garden :only '(vegetables))\n    ```", "```java\n    nil\n    ```", "```java\n    vegetables\n    ```", "```java\n    [\"cucumber\" \"carrot\"]\n    ```", "```java\n    fruits\n    ```", "```java\n    CompilerException java.lang.RuntimeException: Unable to resolve symbol: fruits in this context, compiling:(null:0:0)\n    ```", "```java\n    garden/fruits\n    ```", "```java\n    [\"orange\" \"apple\" \"melon\"]\n    ```", "```java\n    (in-ns 'market)\n    ```", "```java\n    #object[clojure.lang.Namespace 0x177c36c4 \"market\"]\n    ```", "```java\n    (clojure.core/refer 'garden :exclude '(vegetables))\n    ```", "```java\n    nil\n    ```", "```java\n    fruits\n    ```", "```java\n    [\"orange\" \"apple\" \"melon\"]\n    ```", "```java\n    vegetables\n    ```", "```java\n    CompilerException java.lang.RuntimeException: Unable to resolve symbol: vegetables in this context, compiling:(null:0:0)\n    ```", "```java\n    garden/vegetables\n    ```", "```java\n    [\"cucumber\" \"carrot\"]\n    ```", "```java\n    (in-ns 'shops)\n    ```", "```java\n    (clojure.core/refer 'garden :rename '{fruits owoce})\n    ```", "```java\n    vegetables\n    ```", "```java\n    [\"cucumber\" \"carrot\"]\n    ```", "```java\n    fruits\n    ```", "```java\n    CompilerException java.lang.RuntimeException: Unable to resolve symbol: fruits in this context, compiling:(null:0:0)\n    ```", "```java\n    owoce\n    ```", "```java\n    [\"orange\" \"apple\" \"melon\"]\n    ```", "```java\n    (require 'clojure.pprint)\n    ```", "```java\n    (clojure.pprint/print-table [{:text \"Clojure\"}{:text \"is\"}{:text \"fun\"}])\n    ```", "```java\n    (require '[clojure.pprint :as pprint])\n    ```", "```java\n    (pprint/print-table [{:text \"Clojure\"}{:text \"is\"}{:text \"fun\"}])\n    ```", "```java\n    (use 'clojure.pprint)\n    ```", "```java\n    (print-table [{:text \"Clojure\"}{:text \"is\"}{:text \"fun\"}])\n    ```", "```java\n    (use '[clojure.string :only [split]])\n    ```", "```java\n    nil\n    ```", "```java\n    (use '[clojure.edn :rename {read-string string-read}])\n    ```", "```java\n    nil\n    ```", "```java\n    (class (string-read \"#inst \\\"1989-02-06T13:20:50.52Z\\\"\"))\n    ```", "```java\n    java.util.Date\n    ```", "```java\n#{\"mr_john blake\" \"miss_paul smith\" \"dr_katie hudson\"}\n```", "```java\n#{\"Mr Paul Smith\" \"Dr Mike Rose\" \"Miss Katie Hudson\" \"Mrs Tracy Ford\"}\n```", "```java\n(require 'clojure.pprint)\n```", "```java\n(use 'clojure.pprint)\n```", "```java\n(require '[clojure.string :as str])\n```", "```java\n(str/reverse \"palindrome\")\n```", "```java\n(use '[clojure.string :as str :only (split)])\n```", "```java\n    lein new app hello-leiningen\n    ```", "```java\n    Generating a project called hello-leiningen based on the 'app' template.\n    ```", "```java\n    cd hello-leiningen\n    ```", "```java\n    find .\n    ```", "```java\n:main ^:skip-aot hello-leiningen.core\n```", "```java\n    (ns hello-leiningen.core\n      (:gen-class))\n    (defn -main\n      \"I don't do a whole lot ... yet.\"\n      [& args]\n      (println \"Hello, World!\"))\n    ```", "```java\n    lein run\n    ```", "```java\n    Hello, World!\n    ```", "```java\n    (ns hello-leiningen.core\n      (:gen-class))\n    (defn -main\n      \"I don't do a whole lot ... yet.\"\n      [& args]\n      (println \"Hello, World!\"))\n    ```", "```java\n    lein run\n    ```", "```java\n    Hello, World!\n    ```", "```java\n    (ns hello-leiningen.core\n      (:require [clojure.string :as str]))\n    ```", "```java\n    (defn -main \n      \"I don't do a whole lot ... yet.\"\n      [& args]\n        (-> (str/join \" \" args)\n            (str/replace \"melon\" \"banana\")\n            (str/replace \"apple\" \"orange\")\n            println))\n    ```", "```java\n    lein run \"apple\" \"melon\" \"grapes\"\n    ```", "```java\n    orange banana grapes\n    ```", "```java\n    :dependencies [[org.clojure/clojure \"1.9.0\"]\n                             [clojure.java-time \"0.3.2\"]]\n    ```", "```java\n    (ns hello-leiningen.core\n        (:require [java-time :as time]))\n    ```", "```java\n    (defn -main\n      \"Display current local time\"\n      [& args]\n      (println (time/local-time)))\n    ```", "```java\n    lein run\n    ```", "```java\n    #object[java.time.LocalTime 0x2fa47368 23:37:55.623]\n    ```", "```java\n    (ns hello-leiningen.core\n      (:require [java-time :as time])\n      (:gen-class))\n    ```", "```java\n    lein uberjar\n    ```", "```java\n    jar -tvf target/uberjar/hello-leiningen-0.1.0-SNAPSHOT-standalone.jar\n    ```", "```java\n    java -jar target/uberjar/hello-leiningen-0.1.0-SNAPSHOT-standalone.jar\n    ```", "```java\n(defproject hello-leiningen \"0.1.0-SNAPSHOT\"\n ;;; skipped irrelevant content\n  :profiles {:uberjar {:aot :all}\n                 :dev {:dependencies [[expectations \"2.1.10\"]]}})\n```", "```java\n    lein show-profiles\n    ```", "```java\n    lein with-profile dev test\n    ```", "```java\n{:user {:dependencies [[clojure-humanize \"0.2.2\"]]}}\n```", "```java\n{:user {:plugins [[lein-localrepo \"0.5.4\"]\n                         [venantius/ultra \"0.6.0\"]]\n          :dependencies [[clojure-humanize \"0.2.2\"]]}}\n```", "```java\n    lein repl\n    ```", "```java\n    (require 'clojure.contrib.humanize)\n    ```", "```java\n    (clojure.contrib.humanize/numberword 4589)\n    ```", "```java\n    \"four thousand five hundred and eighty-nine\"\n    ```", "```java\n    (clojure.contrib.humanize/duration 500)\n    ```", "```java\n    \"less than a second\"\n    ```"]