["```java\npackage net.ensode.javaee8book.httpauthdatabaseidentitystore.security;\n//imports omitted for brevity\n@DatabaseIdentityStoreDefinition(\n  dataSourceLookup = \"java:global/jdbc/userauthdbDatasource\",\n    callerQuery =\n      \"select password from users where USERNAME = ?\",\n    groupsQuery =\n      \"select g.GROUP_NAME from USER_GROUPS ug, users u, \"\n        + \"GROUPS g where ug.USER_ID = u.user_id and \"\n        + \"g.GROUP_ID= ug.GROUP_ID and u.USERNAME=?\"\n)\n@ApplicationScoped\npublic class ApplicationConfig {\n}\n```", "```java\npackage com.ensode.jakartaeebook.httpauthdatabaseidentitystore.servlet;\n//imports omitted for brevity\n@LdapIdentityStoreDefinition(\n        url = \"ldap://myldapserver:33389/\",\n        callerBaseDn = \"ou=caller,dc=packtpub,dc=com\",\n        groupSearchBase = \"ou=group,dc=packtpub,dc=com\")\n@WebServlet(name = \"ControllerServlet\", urlPatterns = {\"/controller\"})\npublic class ControllerServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req,\n      HttpServletResponse res)\n            throws ServletException, IOException {\n        System.out.println(\"doGet() invoked\");\n    }\n}\n```", "```java\npackage com.ensode.jakartaeebook.security.basicauthexample;\n//imports omitted for brevity\n@ApplicationScoped\npublic class DummyIdentityStore implements IdentityStore {\n  Set<String> adminRoleSet;\n  Set userRoleSet;\n  Set userAdminRoleSet;\n  @PostConstruct\n  public void init() {\n    adminRoleSet = new HashSet<>(Arrays.asList(\"admin\"));\n    userRoleSet = new HashSet<>(Arrays.asList(\"user\"));\n    userAdminRoleSet = new HashSet<>(Arrays.asList(\"user\",\n      \"admin\"));\n  }\n  @Override\n  public CredentialValidationResult validate(\n   Credential credential) {\n   UsernamePasswordCredential usernamePasswordCredential =\n     (UsernamePasswordCredential) credential;\n    CredentialValidationResult credentialValidationResult;\n    if (usernamePasswordCredential.compareTo(\n      \"david\", \"secret\")) {\n      credentialValidationResult = new\n        CredentialValidationResult(\"david\", adminRoleSet);\n    }\n    else if (usernamePasswordCredential.compareTo(\n      \"alan\", \"iforgot\")) {\n      credentialValidationResult =\n        new CredentialValidationResult(\"alan\", userAdminRoleSet);\n    }\n    else if (usernamePasswordCredential.compareTo(\"alice\",\n     \"password\")) {\n      credentialValidationResult = new\n        CredentialValidationResult(\"alice\", userRoleSet);\n    }\n    else {\n      credentialValidationResult =\n        CredentialValidationResult.INVALID_RESULT;\n    }\n    return credentialValidationResult;\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.security.basicauthexample;\n//imports omitted for brevity\n@BasicAuthenticationMechanismDefinition\n@WebServlet(name = \"SecuredServlet\", urlPatterns = {\"/securedServlet\"})\n@ServletSecurity(\n        @HttpConstraint(rolesAllowed = \"admin\"))\npublic class SecuredServlet extends HttpServlet {\n  @Override\n   protected void doGet(HttpServletRequest request,\n      HttpServletResponse response) throws Exception {\n      response.getOutputStream().print(\n        \"Congratulations, login successful.\");\n  }\n}\n```", "```java\n<form method=\"POST\" action=\"j_security_check\">\n  <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n    <tr>\n      <td align=\"right\">Username:&nbsp;</td>\n      <td><input type=\"text\" name=\"j_username\"></td>\n    </tr>\n    <tr>\n      <td align=\"right\">Password:&nbsp;</td>\n      <td><input type=\"password\" name=\"j_password\"></td>\n    </tr>\n    <tr>\n      <td></td>\n      <td><input type=\"submit\" value=\"Login\"></td>\n    </tr>\n  </table>\n</form>\n```", "```java\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; \n      charset=UTF-8\">\n    <title>Login Error</title>\n  </head>\n  <body>\n    There was an error logging in.\n    <br />\n    <a href=\"login.html\">Try again</a>\n  </body>\n</html>\n```", "```java\npackage com.ensode.jakartaeebook.httpauthdbidentitystore;\n//imports omitted for brevity\n@FormAuthenticationMechanismDefinition(\n  loginToContinue = @LoginToContinue(\n  loginPage = \"/login.html\",\n  errorPage = \"/loginerror.html\")\n)\n@DatabaseIdentityStoreDefinition(\n  //attributes omitted for brevity\n)\n@WebServlet(\"/securedServlet\")\n@ServletSecurity(\n        @HttpConstraint(rolesAllowed = {\"admin\"}))\npublic class SecuredServlet extends HttpServlet {\n  @Override\n  protected void doGet(HttpServletRequest request, HttpServletResponse \n    response)\n          throws ServletException, IOException {\n    response.getWriter().write(\"Congratulations, login successful.\");\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.httpauthdbidentitystore;\n//imports omitted for brevity\n@CustomFormAuthenticationMechanismDefinition(\n    loginToContinue = @LoginToContinue(\n        loginPage=\"/faces/login.xhtml\",\n        errorPage=\"\"\n    )\n)\n@DatabaseIdentityStoreDefinition(\n  //attributes omitted for brevity\n)\n@WebServlet(\"/securedServlet\")\n@ServletSecurity(\n        @HttpConstraint(rolesAllowed = {\"admin\"}))\npublic class SecuredServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest request,\n      HttpServletResponse response)\n      throws ServletException, IOException {\n        response.getWriter().write(\n          \"Congratulations, login successful.\");\n    }\n}\n```", "```java\n<h:form>\n  <h:messages/>\n  <h:panelGrid columns=\"2\">\n    <h:outputLabel for=\"userName\" value=\"User Name:\"/>\n    <h:inputText id=\"userName\" value=\"#{user.userName}\"/>\n    <h:outputLabel for=\"password\" value=\"Password: \"/>\n    <h:inputSecret id=\"password\" value=\"#{user.password}\"/>\n    <h:panelGroup/>\n    <h:commandButton action=\"#{loginController.login()}\"\n    value=\"Login\"/>\n  </h:panelGrid>\n</h:form>\n```", "```java\npackage com.ensode.jakartaeebook.httpauthdbidentitystore.customauth;\n//imports omitted for brevity\n@Named\n@RequestScoped\npublic class LoginController {\n    @Inject\n    private SecurityContext securityContext;\n    @Inject\n    private User user;\n    public void login() {\n        FacesContext facesContext = FacesContext.getCurrentInstance();\n        ExternalContext externalContext = facesContext.\n          getExternalContext();\n        HttpServletRequest httpServletRequest =\n          HttpServletRequest) externalContext.getRequest();\n        HttpServletResponse httpServletResponse =\n          (HttpServletResponse) externalContext.getResponse();\n        UsernamePasswordCredential usernamePasswordCredential =\n      new UsernamePasswordCredential(user.getUserName(),\nuser.getPassword());\n    AuthenticationParameters authenticationParameters =\n      AuthenticationParameters.withParams().credential(\n      usernamePasswordCredential);\n      AuthenticationStatus authenticationStatus =\n        securityContext.authenticate\n        (httpServletRequest, httpServletResponse,\n          authenticationParameters);\n    if (authenticationStatus.equals(\n      AuthenticationStatus.SEND_CONTINUE)) {\n        facesContext.responseComplete();\n    } else if(authenticationStatus.equals(\n        AuthenticationStatus.SEND_FAILURE)) {\n        FacesMessage facesMessage = new FacesMessage(\n          \"Login error\");\n            facesContext.addMessage(null, facesMessage);\n      }\n    }\n}\n```"]