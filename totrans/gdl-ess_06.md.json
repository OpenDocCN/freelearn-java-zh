["```java\n<project name=\"Ant build project\" default=\"createJar\">\n  <target name=\"clean\" description=\"clean the existing dirs\">\n    <delete dir=\"build\"/>\n    <delete dir=\"dist\"/>\n  </target>\n\n  <target name=\"compile\" description=\"compile the source\"\n    depends=\"clean\">\n    <mkdir dir=\"build\"/>\n    <mkdir dir=\"dist\"/>\n    <mkdir dir=\"build/classes\"/>\n    <javac srcdir=\"src\" destdir=\"build/classes\"/>\n  </target>\n  <target name=\"createJar\" depends=\"compile\" description=\"create the\n    jar\">\n    <jar jarfile=\"dist/JavaProject-1.0.jar\" basedir=\"build/classes\"/>\n  </target>\n</project>\n```", "```java\nC:\\GRADLE\\CHAPTER6\n│   build_import.gradle\n│   build.xml\n│\n└───src\n └───main\n └───java\n └───ch6\n SampleJava.java\n\n```", "```java\nant.importBuild 'build.xml'\n```", "```java\n> gradle –b build_import.gradle createJar\n:clean\n:compile\n:createJar\nBUILD SUCCESSFUL\nTotal time: 3.045 secs\n\n```", "```java\ntask cleanDir << {\n  ant.delete(dir:\"build\")\n  ant.delete(dir:\"dist\")\n}\n\ntask compileSrc(dependsOn:'cleanDir') << {\n  ant.mkdir(dir:\"build/classes\")\n  ant.mkdir(dir:\"dist\")\n  ant.javac(srcdir:\"src\", destdir:\"build/classes\", includeantruntime:\"false\")\n}\ntask createJar(dependsOn:'compileSrc') << {\n  ant.jar(destfile: \"dist/JavaProject-1.0.jar\", basedir:\"build/classes\")\n}\n```", "```java\n> gradle –b build_antbuilder.gradle createJar\n:cleanDir\n:compileSrc\n:createJar\nBUILD SUCCESSFUL\nTotal time: 3.437 secs\n\n```", "```java\napply plugin:'java'\n```", "```java\napply plugin:'java'\n\ntask cleanDir << {\n  delete \"build\"\n  delete \"dist\"\n}\n\ntask createDirs(dependsOn:'cleanDir') << {\n  def classes = file(\"build/classes\")\n  def dist = file(\"dist\")\n  classes.mkdirs()\n  dist.mkdirs()\n\n}\ncompileJava {\n  File classesDir = file(\"build/classes\")\n  FileTree srcDir = fileTree(dir: \"src\")\n  source srcDir\n  destinationDir classesDir\n}\ntask createJar(type: Jar) {\n  destinationDir = file(\"dist\")\n  baseName = \"JavaProject-1.0\"\n  from \"build/classes\"\n}\ncreateJar.dependsOn compileJava\ncompileJava.dependsOn createDirs\n```", "```java\ngradle createJar command, it will generate the same output which was generated by following above migration strategies.\n```", "```java\n    <plugin>\n      <artifactId>pluginName</artifactId>\n      <version>2.3.2</version>\n    </plugin>\n    ```", "```java\n    apply plugin: '<plugin name>'\n    ```", "```java\n    <dependency>\n      <groupId> org.apache.logging.log4j</ groupId>\n      <artifactId>log4j-core </ artifactId>\n      <version>1.2</version>\n      <scope>compile</scope>\n    </dependency>\n    ```", "```java\n    dependencies{\n    compile(' org.apache.logging.log4j: log4j-core:1.2') \n    }\n    ```", "```java\n    <repositories>\n      <repository>\n        <id>repository_1</id>\n        <name>custom Name</name>\n        <url> http://companylocalrepository.org </url>\n       </repository>\n    </repositories>\n    ```", "```java\n    repositories {\n      maven {\n        url \"http://companylocalrepository.org\"\n      }\n    }\n    ```", "```java\napply plugin: 'java'\nversion=1.0\nrepositories {\n  mavenCentral()\n}\ndependencies {\n  compile ('log4j:log4j:1.2.16')\n}\nuploadArchives {\n  repositories {\n    maven {\n      credentials {\n        username \"user1\"\n        password \"user1\"\n      }\n      url \"http://company.private.repo\"\n    }\n  }\n}\n```", "```java\napply plugin: 'java'\narchivesBaseName=\"JavaProject\" // to customize Jar Name\nversion=1.0\nrepositories {\n  mavenCentral()\n}\ndef customFile= file('configurations.xml')\ntask customZip(type: Zip) {\n  from 'src'\n}\nartifacts {\n  archives customFile\n  archives customZip\n}\nuploadArchives {\n  repositories {\n    flatDir {dirs \"./tempRepo\"}\n  }\n}\n```", "```java\n>gradle -b build_uploadCustom.gradle uploadArchives\n:customZip UP-TO-DATE\n:compileJava UP-TO-DATE\n:processResources UP-TO-DATE\n:classes UP-TO-DATE\n:jar UP-TO-DATE\n:uploadArchives\n\nBUILD SUCCESSFUL\n\nTotal time: 4.014 secs\n\n```", "```java\npackage ch6;\npublic class SampleTask  {\n  public static void main(String[] args) {\n    System.out.println(\"Building Project\");\n\n  }\n  public String greetings(String name) {\n    return \"hello \"+name;\n  }\n}\n```", "```java\n> gradle clean javadoc\n:clean\n:cleanDir\n:createDirs\n:compileJava\n:processResources UP-TO-DATE\n:classes\n:javadoc\n\nBUILD SUCCESSFUL\n\nTotal time: 4.341 secs\n\n```"]