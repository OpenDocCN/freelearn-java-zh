["```java\n//build.gradle\n//Spring ACL\nimplementation \"org.springframework.security:spring-security-acl\"\n```", "```java\n//src/main/java/com/packtpub/springsecurity/service/CalendarService.java\n@PostFilter(\"hasPermission(filterObject, 'read')\")\nList<Event> getEvents();\n```", "```java\n// src/main/resources/schema.sql\n--- ACLs ----------------------------------------\n-- ACL Schema --\ncreate table acl_sid (\n  id bigint generated by default as identity(start with 23) not null primary key,\n  principal boolean not null,\n  sid varchar_ignorecase(100) not null,\n  constraint uk_acl_sid unique(sid,principal) );\ncreate table acl_class (\n  id bigint generated by default as identity(start with 100) not null primary key,\n  class varchar_ignorecase(500) not null,\n  constraint uk_acl_class unique(class) );\ncreate table acl_object_identity (\n  id bigint generated by default as identity(start with 33) not null primary key,\n  object_id_class bigint not null,\n  object_id_identity bigint not null,\n  parent_object bigint,\n  owner_sid bigint not null,\n  entries_inheriting boolean not null,\n  constraint uk_acl_objid unique(object_id_class,object_id_identity),\n  constraint fk_acl_obj_parent foreign key(parent_object)references acl_object_identity(id),\n  constraint fk_acl_obj_class foreign key(object_id_class)references acl_class(id),\n  constraint fk_acl_obj_owner foreign key(owner_sid)references acl_sid(id) );\ncreate table acl_entry (\n  id bigint generated by default as identity(start with 100) not null primary key,\n  acl_object_identity bigint not null,\n  ace_order int not null,\n  sid bigint not null,\n  mask integer not null,\n  granting boolean not null,\n  audit_success boolean not null,\n  audit_failure boolean not null,\n  constraint uk_acl_entry unique(acl_object_identity,ace_order),\n  constraint fk_acl_entry_obj_id foreign key(acl_object_identity)\n  references acl_object_identity(id),\n  constraint fk_acl_entry_sid foreign key(sid) references acl_sid(id) );\n-- the end --\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n@Configuration\n@EnableWebSecurity\n@EnableMethodSecurity(securedEnabled = true)\npublic class SecurityConfig {\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http.authorizeHttpRequests( authz -> authz\n// NOTE: \"/events/\" is now protected by ACL:\n//.requestMatchers(antMatcher(\"/events/\")).hasRole(\"ADMIN\")\n...\n        return http.build();\n    }\n}\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/AclConfig.java\n   @Bean\n   public DefaultMethodSecurityExpressionHandler expressionHandler(){\n       DefaultMethodSecurityExpressionHandler dmseh = new DefaultMethodSecurityExpressionHandler();\n       dmseh.setPermissionEvaluator(permissionEvaluator());\n       dmseh.setPermissionCacheOptimizer(permissionCacheOptimizer());\n       return dmseh;\n   }\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/AclConfig.java @Bean\n@Bean\npublic AclPermissionCacheOptimizer permissionCacheOptimizer(MutableAclService aclService){\n    return new AclPermissionCacheOptimizer(aclService);\n}\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/AclConfig.j ava\n@Bean\npublic AclPermissionEvaluator permissionEvaluator(MutableAclService aclService){\n    return new AclPermissionEvaluator(aclService);\n}\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/AclConfig.j ava\n@Bean\npublic MutableAclService aclService(LookupStrategy lookupStrategy, SpringCacheBasedAclCache aclCache){\n    return new JdbcMutableAclService(dataSource,\n                lookupStrategy,\n                aclCache);\n}\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/AclConfig.j ava\n@Bean\n public LookupStrategy lookupStrategy(AclCache aclCache,\n                AclAuthorizationStrategy aclAuthorizationStrategy, ConsoleAuditLogger consoleAuditLogger){\n     return new BasicLookupStrategy(\n                  dataSource,\n                  aclCache,\n                  aclAuthorizationStrategy,\n                  consoleAuditLogger);\n }\n```", "```java\n//build.gradle\n//Enabling Ehcache support\nimplementation \"org.ehcache:ehcache\"\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/AclConfig.java\n@Bean\npublic AclCache aclCache( Cache concurrentMapCache,\n       PermissionGrantingStrategy permissionGrantingStrategy, AclAuthorizationStrategy aclAuthorizationStrategy){\n    return new SpringCacheBasedAclCache(concurrentMapCache,\n          permissionGrantingStrategy,\n          aclAuthorizationStrategy);\n}\n@Bean\npublic PermissionGrantingStrategy permissionGrantingStrategy(){\n    return new DefaultPermissionGrantingStrategy(consoleAuditLogger());\n}\n@Bean\npublic ConcurrentMapCache concurrentMapCache(){\n    return new ConcurrentMapCache(\"aclCache\");\n}\n@Bean\npublic CacheManager cacheManager(){\n    return new ConcurrentMapCacheManager();\n}\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/AclConfig.j ava\n@Bean\npublic ConsoleAuditLogger consoleAuditLogger(){\n    return new ConsoleAuditLogger();\n}\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/AclConfig.j ava\n@Bean\npublic AclAuthorizationStrategy aclAuthorizationStrategy() {\n    return new AclAuthorizationStrategyImpl(\n            new SimpleGrantedAuthority(\"ROLE_ADMINISTRATOR\")\n    );\n}\n```", "```java\n//src/main/resources/data.sql\ninsert into acl_class (id, class) values (10, 'com.packtpub.springsecurity.domain.Event');\n```", "```java\n//src/main/resources/data.sql\n-- User specific:\ninsert into acl_sid (id, principal, sid) values (20, true, 'user2@example.com');\n-- Role specific:\ninsert into acl_sid (id, principal, sid) values (21, false, 'ROLE_USER');\ninsert into acl_sid (id, principal, sid) values (22, false, 'ROLE_ADMIN');\n```", "```java\n//src/main/resources/data.sql\n-- object identity\n-- Event entry for user2 SID\ninsert into acl_object_identity (id,object_id_identity,object_id_class,parent_object,owner_sid,entries_inheriting)\nvalues (30,100, 10, null, 20, false);\n-- Event entry for ROLE_USER SID\ninsert into acl_object_identity (id,object_id_identity,object_id_class,parent_object,owner_sid,entries_inheriting)\nvalues (31,101, 10, null, 21, false);\n-- Event entry for ROLE_ADMIN SID\ninsert into acl_object_identity (id,object_id_identity,object_id_class,parent_object,owner_sid,entries_inheriting)\nvalues (32,102, 10, null, 21, false);\n```", "```java\n//src/main/resources/data.sql\n-- ACEntry list ---------------------------------\n-- mask == R\n-- Entry for Event entry for user2 SID\ninsert into acl_entry (acl_object_identity, ace_order, sid, mask, granting, audit_success, audit_failure)\nvalues(30, 1, 20, 1, true, true, true);\n```", "```java\n//src/main/java/com/packtpub/springsecurity/service/CalendarService.java\n@PostAuthorize(\"hasPermission(filterObject, 'read') \")\nEvent getEvent(int eventId);\n```", "```java\nException during execution of Spring Security application! Unable to find ACL information for object identity 'org.springframework.security.acls.domain.ObjectIdentityImpl[Type: com.packtpub.springsecurity.domain.Event; Identifier: 1]'\n```", "```java\n//src/main/resources/data.sql\n-- READ / WRITE Entry for Event entry for user2 SID\ninsert into acl_entry\n(acl_object_identity, ace_order, sid, mask, granting, audit_success, audit_failure)\nvalues(30, 1, 20, 3, true, true, true);\n```", "```java\n    package com.packtpub.springsecurity.acls.domain;\n    public class CustomPermission extends BasePermission {\n        public static final Permission ADMIN_READ = new CustomPermission(1 << 5, 'M'); // 32\n        public CustomPermission(int mask, char code) {\n            super(mask, code);\n        }\n    }\n    ```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/AclConfig.java\n    @Bean\n    public DefaultPermissionFactory permissionFactory(){\n        return new DefaultPermissionFactory(CustomPermission.class);\n    }\n    ```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/AclConf ig.java\n    @Bean\n    public AclPermissionEvaluator permissionEvaluator(MutableAclService aclService){\n            AclPermissionEvaluator pe = new AclPermissionEvaluator(aclService);\n            pe.setPermissionFactory(permissionFactory());\n            return pe;\n    }\n    @Bean\n    public LookupStrategy lookupStrategy(AclCache aclCache,\n           AclAuthorizationStrategy aclAuthorizationStrategy, ConsoleAuditLogger consoleAuditLogger) {\n            BasicLookupStrategy lookupStrategy = new BasicLookupStrategy(\n                    dataSource,\n                    aclCache,\n                    aclAuthorizationStrategy,\n                    consoleAuditLogger);\n            lookupStrategy.setPermissionFactory(permissionFactory());\n            return lookupStrategy;\n    }\n    ```", "```java\n    -- custom permission\n    insert into acl_sid (id, principal, sid) values (23, true, 'admin1@example.com');\n    insert into acl_entry\n    (acl_object_identity, ace_order, sid, mask, granting, audit_success, audit_failure)\n    values(31, 1, 23, 32, true, true, true);\n    ```", "```java\n@PostFilter(\"hasPermission(filterObject, 'read') \" +\n       \"or hasPermission(filterObject, 'admin_read')\")\nList<Event> getEvents()\n```", "```java\n    // src/main/java/com/packtpub/springsecurity/service/ CalendarService.java\n    List<Event> getEvents();\n    ```", "```java\n    //src/main/resources/templates/events/list.xhtml\n    <th:block th:each=\"event : ${events}\">\n        <tr sec:authorize-acl=\"${event} :: '1,32'\" >\n            <td th:text=\"${#calendars.format(event.dateWhen, 'yyyy-MM-dd HH:mm')}\">today</td>\n            <td th:text=\"${event.owner.name}\">Chuck Norris</td>\n            <td th:text=\"${event.attendee.name}\">Josh Knutson</td>\n            <td><a th:href=\"@{'/events/{id}'(id=${event.id})}\" th:text=\"${event.summary}\">-1</a></td>\n        </tr>\n    </th:block>\n    ```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/AclConfig.java\n@Bean\npublic DefaultWebSecurityExpressionHandler webExpressionHandler(AclPermissionEvaluator permissionEvaluator){\n    DefaultWebSecurityExpressionHandler webExpressionHandler = new DefaultWebSecurityExpressionHandler();\n    webExpressionHandler.setPermissionEvaluator(permissionEvaluator);\n    return webExpressionHandler;\n}\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/service/ DefaultCalendarService.java\n    @Repository\n    public class DefaultCalendarService implements CalendarService {\n        private final EventDao eventDao;\n        private final CalendarUserDao userDao;\n        private final MutableAclService aclService;\n        private final UserContext userContext;\n        public DefaultCalendarService(EventDao eventDao, CalendarUserDao userDao, MutableAclService aclService, UserContext userContext) {\n           this.eventDao = eventDao;\n           this.userDao = userDao;\n           this.aclService = aclService;\n           this.userContext = userContext;\n        }\n    ```", "```java\n    //src/main/java/com/packtpub/springsecurity/service/ DefaultCalendarService.java\n    @Transactional\n    @Override\n    public int createEvent(Event event) {\n        int result = eventDao.createEvent(event);\n        event.setId(result);\n        // Add new ACL Entry:\n        MutableAcl acl = aclService.createAcl(new ObjectIdentityImpl(event));\n        PrincipalSid sid = new PrincipalSid(userContext.getCurrentUser().getEmail());\n        acl.setOwner(sid);\n        acl.insertAce(0,  BasePermission.READ, sid, true);\n        aclService.updateAcl(acl);\n        return result;\n    }\n    ```"]