["```java\nSet mySet = new HashSet();\n```", "```java\nString[] text = new String[] { \"spam\", \"more\", \"buy\" };\n```", "```java\njava.util.Arrays.sort( text );\n```", "```java\nSystem.out.println( java.util.Arrays.toString( text ) );\n```", "```java\n[buy, more, spam]\n```", "```java\nfor (int i = 0; i < text.length; i++)\n    System.out.print(text[i] + \" \");\n```", "```java\nbuy more spam\n```", "```java\nimport java.util.Arrays;\npublic class Example01 {\n    public static void main(String[] args) {\n        String[] text = new String[] { \"spam\", \"more\", \"buy\" };\n        Arrays.sort(text);\n        System.out.println(Arrays.toString(text));\n        for (int i = 0; i < text.length; i++)\n            System.out.print(text[i] + \" \");\n    }\n}\n```", "```java\n[buy, more, spam]\nbuy more spam \nProcess finished with exit code 0\n```", "```java\nint[] numbers = new int[5];\nArrays.fill(numbers, 0);\n```", "```java\n[0, 0, 0, 0, 0]\n```", "```java\nimport java.util.Arrays;\npublic class Example02 {\n    public static void main(String[] args) {\n        int[] numbers = new int[5];\n        Arrays.fill(numbers, 1);\n        System.out.println(Arrays.toString(numbers));\n        int [] shortNumbers = Arrays.copyOfRange(numbers, 0, 2);\n        System.out.println(Arrays.toString(shortNumbers));\n        int [] longNumbers = Arrays.copyOf(numbers, 10);\n        System.out.println(Arrays.toString(longNumbers));\n    }\n}\n```", "```java\n[1, 1, 1, 1, 1]\n[1, 1]\n[1, 1, 1, 1, 1, 0, 0, 0, 0, 0]\nProcess finished with exit code 0\n```", "```java\nimport java.util.Arrays;\npublic class Example03 {\n    public static void main(String[] args) {\n        int[] numbers1 = new int[3];\n        Arrays.fill(numbers1, 1);\n        int[] numbers2 = {0, 0, 0};\n        boolean comparison = Arrays.equals(numbers1, numbers2);\n        System.out.println(comparison);\n        int[] numbers3 = {1, 1, 1};\n        comparison = Arrays.equals(numbers1, numbers3);\n        System.out.println(comparison);\n        int[] numbers4 = {1, 1};\n        comparison = Arrays.equals(numbers1, numbers4);\n        System.out.println(comparison);\n    }\n}\n```", "```java\nfalse\ntrue\nfalse\nProcess finished with exit code 0\n```", "```java\nimport java.util.Arrays;\npublic class Example04 {\n    public static void main(String[] args) {\n        String[] text = {\"love\",\"is\", \"in\", \"the\", \"air\"};\n        int search = Arrays.binarySearch(text, \"is\");\n        System.out.println(search);\n    }\n}\n```", "```java\n-4\nProcess finished with exit code 0\n```", "```java\nString[] text = {\"love\",\"is\", \"in\", \"the\", \"air\"};\nArrays.sort(text);\nint search = Arrays.binarySearch(text, \"is\");\nSystem.out.println(search);\n```", "```java\n2\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example05 {\n    public static void main(String[] args) {\n        Integer[] myArray = new Integer[] {3, 25, 2, 79, 2};\n        Set mySet = new HashSet(Arrays.asList(myArray));\n        System.out.println(mySet);\n    }\n}\n```", "```java\n[2, 3, 25, 79]\nProcess finished with exit code 0\n```", "```java\nSet<Integer> mySet = new HashSet<Integer>(Arrays.asList(myArray));\n```", "```java\nString[] text = {\"So\", \"many\", \"books\", \"so\", \"little\", \"time\"};\n```", "```java\nFound query at: 0\nFound query at: 3\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example06 {\n    public static void main(String[] args) {\n        String[] myArray = new String[] {\"3\", \"25\", \"2\", \"79\", \"2\"};\n        Set mySet = new HashSet();\n        Collections.addAll(mySet, myArray);\n        System.out.println(mySet);\n    }\n}\n```", "```java\n[2, 79, 3, 25]\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example07 {\n    public static void main(String[] args) {\n        Integer[] myArray = new Integer[] {3, 25, 2, 79, 2};\n        Set mySet = new HashSet();\n        Collections.addAll(mySet, myArray);\n        System.out.println(mySet);\n    }\n}\n```", "```java\n[2, 3, 25, 79]\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example08 {\n    public static void main(String[] args) {\n        Integer[] numbers1 = new Integer[] {3, 25, 2, 79, 2};\n        Integer[] numbers2 = new Integer[] {7, 12, 14, 79};\n        Set set1 = new HashSet();\n        Collections.addAll(set1, numbers1);\n        Set set2 = new HashSet();\n        Collections.addAll(set2, numbers2);\n        set1.addAll(set2);\n        System.out.println(set1);\n    }\n}\n```", "```java\n[2, 3, 7, 25, 12, 14, 79]\nProcess finished with exit code 0\n```", "```java\nSet set1 = new TreeSet();\nCollections.addAll(set1, numbers1);\nSet set2 = new TreeSet();\nCollections.addAll(set2, numbers2);\n```", "```java\n[2, 3, 7, 12, 14, 25, 79]\n```", "```java\nimport java.util.*;\npublic class Example09 {\n    public static void main(String[] args) {\n        Integer[] numbers1 = new Integer[] {3, 25, 2, 79, 2};\n        Integer[] numbers2 = new Integer[] {7, 12, 14, 79};\n        Set set1 = new TreeSet();\n        Collections.addAll(set1, numbers1);\n        Set set2 = new TreeSet();\n        Collections.addAll(set2, numbers2);\n        set1.retainAll(set2);\n        System.out.println(set1);\n    }\n}\n```", "```java\n[79]\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example10 {\n    public static void main(String[] args) {\n        Set set1 = new LinkedHashSet();\n        set1.add(35);\n        set1.add(19);\n        set1.add(11);\n        set1.add(83);\n        set1.add(7);\n        System.out.println(set1);\n    }\n}\n```", "```java\n[35, 19, 11, 83, 7]\nProcess finished with exit code 0\n```", "```java\nSet set1 = new LinkedHashSet();\n```", "```java\n[35, 19, 83, 7, 11]\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example11 {\n    public static void main(String[] args) {\n        Set set1 = new LinkedHashSet();\n        set1.add(35);\n        set1.add(19);\n        set1.add(11);\n        set1.add(83);\n        set1.add(7);\n        Set set2 = new LinkedHashSet();\n        set2.add(3);\n        set2.add(19);\n        set2.add(11);\n        set2.add(0);\n        set2.add(7);\n        set1.removeAll(set2);\n        System.out.println(set1);\n    }\n}\n```", "```java\n[35, 83]\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example12 {\n    public static void main(String[] args) {\n        List list = new ArrayList();\n        list.add(35);\n        list.add(19);\n        list.add(11);\n        list.add(83);\n        list.add(7);\n        System.out.println(list);\n        int index = list.indexOf(19);\n        System.out.println(\"Find 19 at: \" + index);\n        System.out.println(\"Component: \" + list.get(index));\n    }\n}\n```", "```java\n[35, 19, 11, 83, 7]\nFind 19 at: 1\nComponent: 19\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example13 {\n    public static void main(String[] args) {\n        List list = new ArrayList();\n        list.add(35);\n        list.add(19);\n        list.add(11);\n        list.add(83);\n        list.add(7);\n        System.out.println(list);\n        int index = list.lastIndexOf(83);\n        System.out.println(\"Before: find 83 at: \" + index);\n        list.remove(index - 1);\n        System.out.println(list);\n        index = list.lastIndexOf(83);\n        System.out.println(\"After: find 83 at: \" + index);\n    }\n}\n```", "```java\n[35, 19, 11, 83, 7]\nBefore: find 83 at: 3\n[35, 19, 83, 7]\nAfter: find 83 at: 2\nProcess finished with exit code 0\n```", "```java\nlist.set(index - 1, 99); \n```", "```java\nlist.clear();\n```", "```java\nimport java.util.*;\npublic class Example14 {\n    public static void main(String[] args) {\n        List list = new ArrayList();\n        list.add(\"No\");\n        list.add(\"matter\");\n        list.add(\"what\");\n        list.add(\"you\");\n        list.add(\"do\");\n        System.out.println(list);\n        list.subList(2,4).clear();\n        System.out.println(list);\n    }\n}\n```", "```java\n[No, matter, what, you, do]\n[No, matter, do]\nProcess finished with exit code 0\n```", "```java\nList list1 = list.subList(2,4);\nSystem.out.println(list1);\n```", "```java\n    import java.io.Console;\n    public class AnalyzeInput {\n      public static void main(String[] args) {\n        Console cons;\n        String line = \"\";\n          if ((cons = System.console()) != null && (line = cons.readLine()) !=         null) {\n          System.out.println(\"You typed: \" + line);\n        }\n      }\n    }\n    ```", "```java\n    usr@localhost:~/IdeaProjects/ch04/out/production/ch04$ java AnalyzeInput \n    hej this is an example\n    You typed: hej this is an example\n    ```", "```java\n    import java.util.*;\n    import java.io.Console;\n    public class Exercise01 {\n      public static void main(String[] args) {\n        ArrayList <String> text = new ArrayList<String>();\n        Console cons;\n        String line = \"\";\n        while ((cons = System.console()) != null && (line = cons.readLine())       != null) {\n        text.add(line);\n        }\n        System.out.println(\"You typed: \" + text);\n      }\n    }\n    ```", "```java\n            while (!line.equals(\"*\") \n                && (cons = System.console()) != null \n                && (line = cons.readLine()) != null) {\n    ```", "```java\n    usr@localhost:~/IdeaProjects/ch04/out/production/ch04$ java AnalyzeInput \n    this is the array example\n    until you type *\n    alone in a line\n    *\n    You typed: [this is the array example, until you type *, alone in a line, *]\n    ```", "```java\n        public static void main(String[] args) {\n            ArrayList <String> text = new ArrayList<String>();\n            Console cons;\n            String line = \"\";\n            while (!line.equals(\"*\")\n                && (cons = System.console()) != null\n                && (line = cons.readLine()) != null) {\n                    List<String> lineList = new                   ArrayList<String>(Arrays.asList(line.split(\" \")));\n                text.addAll(lineList);\n            }\n            System.out.println(\"You typed: \" + text);\n        }\n    ```", "```java\n    System.out.println(\"Word count: \" + text.size());\n    ```", "```java\nimport java.util.*;\npublic class Example15 {\n    public static void main(String[] args) {\n        Map map = new HashMap();\n        map.put(\"number\", new Integer(1));\n        map.put(\"text\", new String(\"hola\"));\n        map.put(\"decimal\", new Double(5.7));\n        System.out.println(map.get(\"text\"));\n        if (!map.containsKey(\"byte\")) {\n            System.out.println(\"There are no bytes here!\");\n        }\n    }\n}\n```", "```java\nhola\nThere are no bytes here!\nProcess finished with exit code 0\n```", "```java\nSystem.out.println(map.entrySet());\nSystem.out.println(map.keySet());\n```", "```java\nhola\nThere are no bytes here!\n[number=1, text=hola, decimal=5.7]\n[number, text, decimal]\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example16 {\n    public static void main(String[] args) {\n        List array = new ArrayList();\n        array.add(5);\n        array.add(2);\n        array.add(37);\n        Iterator iterator = array.iterator();\n        while (iterator.hasNext()) {\n            //  point to next element\n            int i = (Integer) iterator.next();\n            // print elements\n            System.out.print(i + \" \");\n        }\n    }\n}\n```", "```java\n5 2 37 \nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example17 {\n    public static void main(String[] args) {\n        List <Double> array = new ArrayList();\n        array.add(5.0);\n        array.add(2.2);\n        array.add(37.5);\n        array.add(3.1);\n        array.add(1.3);\n        System.out.println(\"Original list: \" + array);\n        ListIterator listIterator = array.listIterator();\n        while (listIterator.hasNext()) {\n            //  point to next element\n            double d = (Double) listIterator.next();\n            // round up the decimal number\n            listIterator.set(Math.round(d));\n        }\n        System.out.println(\"Modified list: \" + array);\n    }\n}\n```", "```java\nOriginal list: [5.0, 2.2, 37.5, 3.1, 1.3]\nModified list: [5, 2, 38, 3, 1]\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class AnalyzeInput {\n     public static void main(String[] args) {\n        Map map = new HashMap ();\n        map.put(\"name\", \"Kristian\");\n        map.put(\"family name\", \"Larssen\");\n        map.put(\"address\", \"Jumping Rd\");\n        map.put(\"mobile\", \"555-12345\");\n        map.put(\"pet\", \"cat\");\n        Iterator <Map.Entry> iterator = map.entrySet().iterator();\n        while (iterator.hasNext()) {\n            Map.Entry entry = iterator.next();\n            System.out.print(\"Key = \" + entry.getKey());\n            System.out.println( \", Value = \" + entry.getValue());\n        }\n    }\n}\n```", "```java\nKey = address, Value = Jumping Rd\nKey = family name, Value = Larssen\nKey = name, Value = Kristian\nKey = mobile, Value = 555-12345\nKey = pet, Value = cat\nProcess finished with exit code 0\n```", "```java\n    Set <String> textSet = new HashSet <String> ();\n    textSet.addAll(text);\n    ```", "```java\n    Iterator iterator = textSet.iterator();\n    ```", "```java\n    while (iterator.hasNext()) {\n        //point to next element\n        String s = (String) iterator.next();\n        // get the amount of times this word shows up in the text\n        int freq = Collections.frequency(text, s);\n        // print out the result\n        System.out.println(s + \" appears \" + freq + \" times\");\n    }\n    ```", "```java\n    this is a test\n    is a test\n    test is this\n    *\n    ```", "```java\n    You typed: [this, is, a, test, is, a, test, test, is, this, *]\n    Word count: 11\n    a appears 2 times\n    test appears 3 times\n    this appears 2 times\n    is appears 3 times\n    * appears 1 times\n    ```", "```java\nMap map = new HashMap();\nwhile (iterator.hasNext()) {\n    //  point to next element\n    String s = (String) iterator.next();\n    // get the amount of times this word shows up in the text\n    int freq = Collections.frequency(text, s);\n    // print out the result\n    System.out.println(s + \" appears \" + freq + \" times\");\n    // add items to the map\n    map.put(s, freq);\n}\nTreeMap mapTree = new TreeMap();\nmapTree.putAll(map);\nSystem.out.println(mapTree);\n```", "```java\nWord count: 11\na appears 2 times\ntest appears 3 times\nthis appears 2 times\nis appears 3 times\n* appears 1 times\n{*=1, a=2, is=3, test=3, this=2}\n```", "```java\nimport java.util.*;\npublic class Example19 {\n    public static void main(String[] args) {\n        List <Double> array = new ArrayList();\n        array.add(5.0);\n        array.add(2.2);\n        array.add(37.5);\n        array.add(3.1);\n        array.add(1.3);\n        System.out.println(\"Original list: \" + array);\n        Collections.sort(array);\n        System.out.println(\"Modified list: \" + array);\n    }\n}\n```", "```java\nOriginal list: [5.0, 2.2, 37.5, 3.1, 1.3]\nModified list: [1.3, 2.2, 3.1, 5.0, 37.5]\nProcess finished with exit code 0\n```", "```java\n    class DataPoint {\n        String key = \"\";\n        Integer value = 0;\n        // constructor\n        DataPoint(String s, Integer i) {\n            key = s;\n            value = i;\n        }\n    }\n    ```", "```java\n            List <DataPoint> frequencies = new ArrayList <DataPoint> ();\n            while (iterator.hasNext()) {\n            //point to next element\n            String s = (String) iterator.next();\n            // get the amount of times this word shows up in the text\n            int freq = Collections.frequency(text, s);\n            // print out the result\n            System.out.println(s + \" appears \" + freq + \" times\");\n            // create the object to be stored\n            DataPoint datapoint = new DataPoint (s, freq);\n            // add datapoints to the list\n            frequencies.add(datapoint);\n        }\n    ```", "```java\n    class SortByValue implements Comparator<DataPoint>\n    {\n        // Used for sorting in ascending order\n        public int compare(DataPoint a, DataPoint b)\n        {\n            return a.value - b.value;\n        }\n    }\n    ```", "```java\n    Collections.sort(frequencies,new SortByValue());\n    ```", "```java\n    System.out.println(\"Results sorted\");\n    for (int i = 0; i < frequencies.size(); i++)\n        System.out.println(frequencies.get(i).value\n                        + \" times for word \"\n                        + frequencies.get(i).key);\n    ```", "```java\n    Results sorted\n    1 times for word *\n    2 times for word a\n    2 times for word this\n    3 times for word test\n    3 times for word is\n    ```", "```java\n    Collections.sort(frequencies, Collections.reverseOrder(new SortByValue()));\n    ```", "```java\n    user@localhost:~/IdeaProjects/ch04/out/production/ch04$ java AnalyzeInput \n    this is a test\n    is a test\n    test is this\n    *\n    You typed: [this, is, a, test, is, a, test, test, is, this, *]\n    Word count: 11\n    a appears 2 times\n    test appears 3 times\n    this appears 2 times\n    is appears 3 times\n    * appears 1 times\n    Results sorted\n    3 times for word test\n    3 times for word is\n    2 times for word a\n    2 times for word this\n    1 times for word *\n    ```", "```java\nExample20.java\n1  import java.util.*;\n2  \n3  public class Example20 {\n4  \n5     public static void main(String[] args) {\n6         Properties properties = new Properties();\n7         Set setOfKeys;\n8         String key;\n9  \n10        properties.put(\"OS\", \"Ubuntu Linux\");\n11        properties.put(\"version\", \"18.04\");\n12        properties.put(\"language\", \"English (UK)\");\n13\n14        // iterate through the map\n15        setOfKeys = properties.keySet();\nhttps://packt.live/2N0CzoS\n```", "```java\nversion = 18.04\nOS = Ubuntu Linux\nlanguage = English (UK)\nkeyboard layout = not found\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example21 {\n    public static void main(String[] args) {\n        Properties properties = new Properties();\n        properties.put(\"OS\", \"Ubuntu Linux\");\n        properties.put(\"version\", \"18.04\");\n        properties.put(\"language\", \"English (UK)\");\n        properties.list(System.out);\n    }\n}\n```", "```java\nversion=18.04\nOS=Ubuntu Linux\nlanguage=English (UK)\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example22 {\n    public static void main(String[] args) {\n        Properties properties = new Properties();\n        properties.put(\"OS\", \"Ubuntu Linux\");\n        properties.put(\"version\", \"18.04\");\n        properties.put(\"language\", \"English (UK)\");\n        Enumeration enumeration = properties.propertyNames();\n        while (enumeration.hasMoreElements()) {\n            System.out.println(enumeration.nextElement());\n        }\n    }\n}\n```", "```java\nversion\nOS\nlanguage\nProcess finished with exit code 0\n```", "```java\nimport java.util.*;\npublic class Example23 {\n    public static void main(String[] args) {\n        Properties properties = new Properties();\n        properties.put(\"OS\", \"Ubuntu Linux\");\n        properties.put(\"version\", \"18.04\");\n        properties.put(\"language\", \"English (UK)\");\n        String oldValue = (String) properties.setProperty(\"language\", \"German\");\n        if (oldValue != null) {\n            System.out.println(\"modified the language property\");\n        }   \n        properties.list(System.out);\n    }\n}\n```", "```java\nmodified the language property\n-- listing properties --\nversion=18.04\nOS=Ubuntu Linux\nlanguage=German\nProcess finished with exit code 0\n```", "```java\nTotal amount of numbers: 3246\nAverage: 49.785278826074396\n```", "```java\nTotal amount of numbers: 6475\nAverage: 50.3373892275651\n```"]