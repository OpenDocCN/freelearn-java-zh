- en: Chapter 3. Working with the Process Designer
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章：使用流程设计器
- en: In the previous chapters, we were introduced to the concept of BPM and we got
    an overview of the jBPM tool stack and the family along some hands-on experience
    to build our first application using jBPM. The next four chapters will detail
    each jBPM component that we have discussed so far and the remaining chapters will
    guide you to customizing jBPM, integrating with the application architecture,
    and deploying a production-ready BPM application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们介绍了BPM的概念，并概述了jBPM工具栈及其家族，通过一些实际操作经验来构建我们的第一个jBPM应用程序。接下来的四章将详细说明我们迄今为止讨论的每个jBPM组件，而剩余的章节将指导你如何定制jBPM，将其集成到应用程序架构中，并部署一个生产就绪的BPM应用程序。
- en: The first step that a business analyst with requirements for an application
    in hand would be the design and modeling of the business processes. This step
    is not often straightforward and involves multiple artifacts apart from the business
    process flow itself. This chapter will take us through the journey of designing
    a business process with all its etiquettes and will simulate the business process
    to understand how the designed business process would behave in a runtime environment.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个手头有应用程序需求的分析师来说，第一步将是设计和建模业务流程。这一步通常并不直接，除了业务流程本身之外，还涉及多个工件。本章将带我们经历设计一个包含所有礼仪的业务流程的旅程，并将模拟业务流程以了解设计好的业务流程在运行时环境中的行为。
- en: 'The chapter guides you through the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将指导你完成以下内容：
- en: Business process modeling using BPM
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用BPM进行业务流程建模
- en: Data object modeling
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据对象建模
- en: Using scripting and logic within BPM activities
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在BPM活动中使用脚本和逻辑
- en: Modeling user interface forms that are attached to human activities in order
    to take input from human actors
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建模与人类活动相关联的用户界面表单，以便从人类参与者那里获取输入
- en: Simulating a business process to understand its runtime characteristics
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模拟业务流程以了解其运行时特性
- en: Using web-based and Eclipse tooling to work on the same project, and to collaborate
    between business users and technologists
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用基于Web和Eclipse的工具来处理同一个项目，以及业务用户和技术人员之间的协作
- en: We will discuss how to do the above primarily by using the web-based process
    designer. Eclipse-based tooling is also discussed but briefly, highlighting only
    the differences in performing modeling.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论如何通过使用基于Web的流程设计器来完成上述操作。也讨论了基于Eclipse的工具，但只是简要介绍，仅突出建模操作中的差异。
- en: Web-based tooling
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于Web的工具
- en: Web-based tooling for jBPM is an extension to the user interface framework provided
    for the Drools Guvnor knowledge repository. The framework provides a platform
    to create, maintain, and run multiple knowledge assets for a knowledge-based application.
    The jBPM extension (which is named jBPM-WB, the short form for jBPM workbench)
    uses the features of the platform to create and maintain applications and leverage
    the capabilities of the platform to provide user interactions with knowledge assets
    corresponding to the business process. This kind of abstraction helps the jBPM
    workbench to easily integrate the assets of the other software in the family and
    create an integrated development environment for the business logic integration
    platform.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 基于Web的jBPM工具是Drools Guvnor知识库提供的用户界面框架的扩展。该框架提供了一个平台来创建、维护和运行基于知识的应用程序的多个知识资产。jBPM扩展（命名为jBPM-WB，即jBPM工作台的简称）利用平台的功能来创建和维护应用程序，并利用平台的能力提供与业务流程相对应的知识资产的用户交互。这种抽象有助于jBPM工作台轻松集成家族中其他软件的资产，并为业务逻辑集成平台创建一个集成开发环境。
- en: In this section, we will focus on the asset editors for the knowledge assets
    that are part of jBPM, namely business process definitions, process and task forms,
    and data models.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将关注jBPM中知识资产（即业务流程定义、流程和任务表单以及数据模型）的资产编辑器。
- en: Process modeling
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流程建模
- en: 'The process designer provided with jBPM is an integrated environment to design,
    validate, and simulate business processes. The following screenshot highlights
    six distinct parts of the process designer:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM提供的流程设计器是一个集成环境，用于设计、验证和模拟业务流程。以下屏幕截图突出了流程设计器的六个不同部分：
- en: '![Process modeling](img/9578OS_03_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![流程建模](img/9578OS_03_01.jpg)'
- en: Parts of jBPM process designer
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM流程设计器的一部分
- en: 'They are as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 它们如下所示：
- en: '**1**: Object library'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1**: 对象库'
- en: '**2**: Process canvas'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**2**: 流程画布'
- en: '**3**: Properties editor'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**3**: 属性编辑器'
- en: '**4**: Toolbar'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**4**: 工具栏'
- en: '**5**: Problem visualization screen'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**5**：问题可视化屏幕'
- en: '**6**: Metadata'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**6**：元数据'
- en: Each of these parts is detailed in the following subsections.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各部分将在以下子节中详细介绍。
- en: The Object Library
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对象库
- en: 'The **Object Library** is a palette of constructs that are used to build business
    processes. The **Object Library** holds largely the BPMN-compliant constructs.
    The library is arranged as a drop-down menu with the categories of constructs
    serving as the headings. Users creating a business process can choose a construct
    from the palette and drop the construct in the process canvas. The following screenshot
    shows the default object:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**对象库**是构建业务流程所使用的构造的调色板。**对象库**主要包含符合 BPMN 的构造。该库按下拉菜单排列，构造类别作为标题。创建业务流程的用户可以从调色板中选择一个构造，并将其拖放到流程画布中。以下截图显示了默认对象：'
- en: '![The Object Library](img/9578OS_03_02.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![对象库](img/9578OS_03_02.jpg)'
- en: Apart from the BPMN constructs, the object repository also holds the workflow
    patterns. We have discussed these workflow patterns in [Chapter 1](ch01.html "Chapter 1. Business
    Process Modeling – Bridging Business and Technology"), *Business Process Modeling
    – Bridging Business and Technology*, and they are solution templates for frequently
    occurring process design scenarios.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 BPMN 构造之外，对象库还包含工作流模式。我们已在[第 1 章](ch01.html "第 1 章。业务流程建模 – 连接业务与技术")*业务流程建模
    – 连接业务与技术*中讨论了这些工作流模式，它们是常见过程设计场景的解决方案模板。
- en: A developer can choose to customize the object library by adding extended and
    customized tasks; we can discuss these in the chapter exclusively for customization.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者可以选择通过添加扩展和自定义任务来自定义对象库；我们将在专门用于定制的章节中讨论这些内容。
- en: The process canvas
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 流程画布
- en: 'The process canvas is our workspace; we create the business process in this
    canvas by dragging and dropping the BPMN constructs provided by the object library,
    connecting and customizing them to create the desired business process. The process
    designer helps us to create a technically deployable business process and to model
    the aesthetics of diagramming by ordering and placing the objects, resizing the
    objects, and changing the color patterns. The following screenshot shows a sample
    business process designed using the process designer:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 流程画布是我们的工作区；我们通过拖放对象库提供的 BPMN 构造，连接和自定义它们来创建业务流程。流程设计器帮助我们创建一个技术上可部署的业务流程，并通过排列和放置对象、调整对象大小和更改颜色模式来建模图表的美学。以下截图显示了使用流程设计器设计的示例业务流程：
- en: '![The process canvas](img/9578OS_03_03.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![流程画布](img/9578OS_03_03.jpg)'
- en: A useful tool, the community calls the morphing menu a great feature available
    in the process canvas. Once you drag and drop and select the object, we can see
    a tool menu around the object. The tools available in the menu will be different
    for different objects. There are three menus, one each at the top, bottom, and
    right of the object; they have a distinct collection of tools.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有用的工具，社区将变形菜单称为流程画布中的一个伟大功能。一旦拖放并选择对象，我们就可以在对象周围看到一个工具菜单。菜单中可用的工具将因对象而异。有三个菜单，分别位于对象的顶部、底部和右侧；它们具有独特的工具集合。
- en: The right part of the menu has tools that help the user to work primarily on
    the process without always relying on the drag and drop feature of the object
    library. The user can add a task or gateway object to the canvas, include the
    connector, add an attachment, or add a data object. The following screenshot highlights
    the right part of the menu.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单的右侧部分包含帮助用户主要在流程上工作的工具，而无需始终依赖对象库的拖放功能。用户可以向画布中添加任务或网关对象，包括连接器，添加附件，或添加数据对象。以下截图突出了菜单的右侧部分。
- en: '![The process canvas](img/9578OS_03_04.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![流程画布](img/9578OS_03_04.jpg)'
- en: 'The top part of the menu has utilities for the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单的顶部部分包含以下实用工具：
- en: Adding the task to the process dictionary (this will be discussed in detail
    in the subsequent section of the chapter)
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将任务添加到流程字典（这将在本章后续部分详细讨论）
- en: Viewing the **Node Source**, which helps in viewing the BPMN source of the object![The
    process canvas](img/9578OS_03_05.jpg)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看**节点源**，有助于查看对象的 BPMN 源![流程画布](img/9578OS_03_05.jpg)
- en: The preceding screenshot shows the top menu highlighted and a view of the **Node
    Source** window, which shows the source of the task object.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了突出显示的顶部菜单和**节点源**窗口的视图，该窗口显示了任务对象的源。
- en: The bottom menu contains the tooling for converting a BPMN object into a similar
    counterpart. For example, we have placed a service task and have to change it
    to a human task. We will have to delete the task, replace it with another task,
    and restore the connections to it. Using this feature, and upon clicking the tool
    icon, we get a list of objects that we can interchange, and by selecting another
    object, we can change the object. This is a handy tool, particularly while maintaining
    a very large business process flow.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 底部菜单包含将 BPMN 对象转换为类似对象的工具。例如，我们放置了一个服务任务，必须将其更改为人类任务。我们必须删除任务，用另一个任务替换它，并恢复到它的连接。使用此功能，点击工具图标后，我们将获得可以交换的对象列表，通过选择另一个对象，我们可以更改对象。这是一个方便的工具，尤其是在维护一个非常大的业务流程流时。
- en: 'The following image shows the menu of interchangeable objects on a task element:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了任务元素上可交换对象的菜单：
- en: '![The process canvas](img/9578OS_03_06.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![流程画布](img/9578OS_03_06.jpg)'
- en: Properties editor
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 属性编辑器
- en: Apart from the visible parts of a business process diagram, each object in the
    business process has properties that can be customized. For example, in a human
    task, we have to assign an actor or a group. The **Properties** editor helps the
    designer to set these details. The **Properties** editor panel for each object
    can be obtained by selecting the object. For setting the process level properties,
    we have to click on the canvas itself.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 除了业务流程图的可见部分外，业务流程中的每个对象都有可以自定义的属性。例如，在人类任务中，我们必须分配一个参与者或一个组。**属性**编辑器帮助设计师设置这些细节。通过选择对象可以获得每个对象的**属性**编辑器面板。为了设置流程级别的属性，我们必须点击画布本身。
- en: 'The Properties editor panel has the following four sections:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 属性编辑器面板有以下四个部分：
- en: '**Core Properties**: The Core properties section contains the properties that
    are essential for a particular BPMN element.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心属性**：核心属性部分包含对特定BPMN元素至关重要的属性。'
- en: '**Extra Properties**: Extra properties as the name indicates are properties
    other than the core properties that are non-mandatory. For example, documentation
    for a task.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**额外属性**：正如其名所示，这些属性是除了核心属性之外的非强制属性。例如，任务的文档。'
- en: '**Graphical Settings**: Properties that can be changed for improving the aesthetics
    of the business process. The designers will have the flexibility to change the
    background, border, font colors, and the font size.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图形设置**：可以更改以改善业务流程美感的属性。设计师将具有更改背景、边框、字体颜色和字体大小的灵活性。'
- en: '**Simulation Properties**: Simulation properties are settings needed for creating
    the process simulation. The details of these properties are discussed in the *Process
    Simulation* section.![Properties editor](img/9578OS_03_07.jpg)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模拟属性**：模拟属性是创建流程模拟所需的设置。这些属性的详细信息将在*流程模拟*部分讨论。![属性编辑器](img/9578OS_03_07.jpg)'
- en: The preceding screenshot shows the property editor for a process, showing core,
    extra, and simulation properties for a BPMN process.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示了流程的属性编辑器，显示了 BPMN 流程的核心、额外和模拟属性。
- en: The core and extra properties for each BPMN construct and the purpose are detailed
    in [Chapter 5](ch05.html "Chapter 5. BPMN Constructs"), *BPMN Constructs*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 每个BPMN结构和其目的的核心和额外属性在[第5章](ch05.html "第5章。BPMN结构")*BPMN结构*中详细说明。
- en: Toolbar
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工具栏
- en: Toolbar contains a set of utilities that aid in creating and maintaining a business
    process. Most of the utilities are common to any diagram editor (such as cut,
    paste, save, rename, delete, and zoom) and provide advanced features such as form
    modeling and process simulation.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 工具栏包含一组辅助工具，有助于创建和维护业务流程。大多数工具对于任何流程图编辑器（如剪切、粘贴、保存、重命名、删除和缩放）都是通用的，并提供高级功能，如表单建模和流程模拟。
- en: Most of the tools are easily understandable from their names itself and may
    not need a detailed discussion. We will discuss the specific functionalities that
    need attention in the following sections.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数工具从其名称本身就可以轻易理解，可能不需要详细讨论。我们将在以下部分讨论需要关注的特定功能。
- en: Problem visualization
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题可视化
- en: As we continue designing a business process, it is important to be informed
    about the syntactic and semantic errors in our business process. The problems
    section shows these errors in our application.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续设计业务流程时，了解我们业务流程中的语法和语义错误非常重要。问题部分显示了我们的应用程序中的这些错误。
- en: 'The following screenshot shows the errors from a BPMN process that has just
    started; that is, it contains only the start node. The errors indicate that the
    start node has no outgoing connection and the process does not have an end node:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了刚刚开始的一个BPMN流程中的错误；也就是说，它只包含一个起始节点。错误表明起始节点没有出向连接，并且流程没有结束节点：
- en: '![Problem visualization](img/9578OS_03_08.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![问题可视化](img/9578OS_03_08.jpg)'
- en: 'Another provision included for the users is to visualize a problem in a specific
    process. This provision switches the editor into the validation mode. It can be
    accessed from the toolbar (refer to the following screenshot), and clicking on
    **Start validating** will show a list of errors in the process:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为用户提供的另一个条款是可视化特定流程中的问题。此条款将编辑器切换到验证模式。可以从工具栏访问（参见图表），点击**开始验证**将显示流程中的错误列表：
- en: '![Problem visualization](img/9578OS_03_09.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![问题可视化](img/9578OS_03_09.jpg)'
- en: Also, if the error is in a particular object, the object is highlighted. Click
    on the highlighted object to get the list of errors.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果错误在特定的对象中，该对象将被突出显示。点击突出显示的对象以获取错误列表。
- en: The designer shows these errors by validating the business processes against
    a set of preconfigured rules; these rules are customizable. (Please see [Chapter
    7](ch07.html "Chapter 7. Customizing and Extending jBPM"), *Customizing and Extending
    jBPM* for the customization techniques).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 设计师通过将业务流程与一组预配置的规则进行验证来显示这些错误；这些规则是可以定制的。（请参阅[第7章](ch07.html "第7章。定制和扩展jBPM")，*定制和扩展jBPM*以获取定制技术）。
- en: The Metadata tab
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 元数据选项卡
- en: The **Metadata** tab shows the details of the business process as an artifact.
    It contains information such as the user who created and modified the artifact,
    the format of the artifact, and so on. Also, there is a provision to have a discussion
    about the artifact, which will be very useful in scenarios where we have a larger
    distributed team of business analysts who create and manage the business processes.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**元数据**选项卡显示了业务流程的详细信息作为一个工件。它包含有关创建和修改该工件的用户、工件格式等信息。此外，还有一个关于工件的讨论条款，这在我们有较大的分布式团队的业务分析师创建和管理业务流程的场景中非常有用。'
- en: Data object modeling
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据对象建模
- en: A part of business domain modeling is to identify all the entities in the problem
    domain, the relationships between the entities, and their attributes. The data
    associated with these entities are often collected, updated, and removed via business
    processes. Thus, these entities become a part of our business process.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 业务领域建模的一部分是识别问题域中的所有实体、实体之间的关系及其属性。与这些实体相关的数据通常通过业务流程进行收集、更新和删除。因此，这些实体成为我们业务流程的一部分。
- en: For example, **Customer** is a data entity that occurs in almost every business
    domain, and customer creation (the process of adding a customer) is a very common
    business process. JBPM provides data modeling features where these entities can
    be created as data objects and be included in the business process.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，**客户**是一个几乎在每一个业务领域都会出现的数据实体，客户创建（添加客户的过程）是一个非常常见的业务流程。JBPM提供了数据建模功能，这些实体可以作为数据对象创建并包含在业务流程中。
- en: Let us discuss data modeling with an example. We consider a very primitive customer
    creation process with a human task to capture customer details and a service task
    to call the customer creation service available. The image given below shows the
    business process under discussion.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个例子来讨论数据建模。我们考虑一个非常原始的客户创建流程，其中包含一个用于捕获客户详情的人工任务和一个用于调用客户创建服务的服务任务。以下图像显示了正在讨论的业务流程。
- en: '![Data object modeling](img/9578OS_03_10.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![数据对象建模](img/9578OS_03_10.jpg)'
- en: 'To create the `Customer` data object by using the process designer, follow
    these steps:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用流程设计器创建`Customer`数据对象，请按照以下步骤操作：
- en: Log in to the workbench.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到工作台。
- en: Go to **Authoring** | **Project Authoring** | **Tools** | **Data Modeler** and
    click the **Create** button. The following screen pops up:![Data object modeling](img/9578OS_03_11.jpg)
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**创建** | **项目创建** | **工具** | **数据模型器**，然后点击**创建**按钮。以下屏幕将弹出：![数据对象建模](img/9578OS_03_11.jpg)
- en: For creating the customer data object, give an identifier, a label, and the
    package name for the unique identification of this data object.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建客户数据对象，提供一个标识符、标签和包名以唯一标识此数据对象。
- en: Well, as you must have noticed, there is another (optional) field called **Superclass**.
    This needs a bit of explanation on the technical side of how the data object is
    considered in the design of jBPM.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，正如您可能已经注意到的，还有一个名为**超类**的（可选）字段。这需要在jBPM数据对象设计的技术方面进行一些解释。
- en: The data object modeled by us is created as a Java object with the attributes
    specified by us and included in the application as its dependency. The superclass
    points to the inheritance feature of Java, and we can use this feature in scenarios
    where data objects have parent–child relationships.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建模的数据对象被创建为一个具有我们指定的属性并作为其依赖项包含在应用程序中的Java对象。超类指向Java的继承特性，我们可以在数据对象具有父子关系的情况下使用此特性。
- en: 'After creating the data object, we can use the **Create new field** provision
    (see the following screenshot) to add the attributes corresponding to the data
    object. The following screenshot shows the **name**, **age**, and **sex** attributes
    added to the **Customer** data object:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建数据对象后，我们可以使用**创建新字段**选项（见以下截图）来添加与数据对象对应的属性。以下截图显示了添加到**客户**数据对象的**名称**、**年龄**和**性别**属性：
- en: '![Data object modeling](img/9578OS_03_12.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![数据对象建模](img/9578OS_03_12.jpg)'
- en: Save the data object. Now, we have to utilize the data object in the business
    process.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 保存数据对象。现在，我们必须在业务流程中利用这个数据对象。
- en: In the business process, we have a human task that captures the information
    of a customer as its input and maps it to the output set of the task. For doing
    so, in the process designer, add the customer objects as **Type** in the input
    and output set of the human tasks.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在业务流程中，我们有一个人类任务，它将客户信息作为输入并映射到任务输出集中。为了做到这一点，在流程设计器中，将客户对象添加为人类任务输入和输出集中的**类型**。
- en: 'The following screenshot shows the property editor for the **Capture customer
    details** human task, where the customer data object is used:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了**捕获客户详情**人类任务的属性编辑器，其中使用了客户数据对象：
- en: '![Data object modeling](img/9578OS_03_13.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![数据对象建模](img/9578OS_03_13.jpg)'
- en: Form modeling
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表单建模
- en: Continuing the discussion with our example of primitive customer creation, the
    next problem will be how to provide a user interface for the human task (capturing
    customer information). Form modeling provides a solution for this scenario. A
    business analyst can design a form that can be used to capture the information
    attached to a task.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 继续讨论我们关于原始客户创建的例子，下一个问题将是如何为人类任务（捕获客户信息）提供用户界面。表单建模为此场景提供了一个解决方案。业务分析师可以设计一个表单，用于捕获与任务相关的信息。
- en: To be precise, the data collected through the form is mapped to the data output
    set of the human task. When we run the **Create customer** business process, the
    "Capturing customer information" task is assigned to an actor (or a group) and
    will be available in the inbox. For completing the task, the user will have to
    enter the details into a user interface that the engine renders by using the model
    of the form.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要精确一点，通过表单收集的数据被映射到人类任务的数据输出集中。当我们运行**创建客户**业务流程时，“捕获客户信息”任务被分配给一个参与者（或一组），并将出现在收件箱中。为了完成任务，用户必须将详细信息输入到由引擎根据表单模型渲染的用户界面中。
- en: Creating a form
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建表单
- en: So, let us explore how to model a form for a task included in the business process.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们探索如何为业务流程中包含的任务建模表单。
- en: In the **Create customer** process, select the **Capturing customer** **information**
    task.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**创建客户**流程中，选择**捕获客户****信息**任务。
- en: In the highlighted tool menu, the top part contains the tool for editing the
    associated form. Click on the tool, and select graphic modeling; this takes us
    to the form modeling screen:![Creating a form](img/9578OS_03_13_A.jpg)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在突出显示的工具菜单中，顶部包含编辑相关表单的工具。点击该工具，并选择图形建模；这带我们到表单建模屏幕：![创建表单](img/9578OS_03_13_A.jpg)
- en: For modeling the form, first, we have to create the data origins, where we define
    the mapping of data input sets to form variables and the form variables to data
    output sets. In this scenario, we have to map the data input and the data output
    of the customer variable.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 对于建模表单，首先，我们必须创建数据来源，其中我们定义数据输入集到表单变量的映射以及表单变量到数据输出集的映射。在这种情况下，我们必须映射客户变量的数据输入和数据输出。
- en: We have to fill the **Id**, **Input Id**, and **Output Id** fields and choose
    the render color for the form. Further, we have to select the data models that
    the form has to represent and click **Add data holder** to add a data model as
    a data origin for the form.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须填写**Id**、**Input Id**和**Output Id**字段，并选择表单的渲染颜色。此外，我们必须选择表单必须表示的数据模型，然后单击**添加数据持有者**以将数据模型添加为表单的数据来源。
- en: 'The following screenshot shows the form modeling screen after adding the customer
    data origin:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了添加客户数据来源后的表单建模屏幕：
- en: '![Creating a form](img/9578OS_03_14.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![创建表单](img/9578OS_03_14.jpg)'
- en: Now, we can model the look and feel of the form. For this, we choose the **Add
    fields by origin** tab, where the data origins are listed and add to the form
    canvas the fields attached in the customer data object (as shown in the following
    screenshot).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以建模表单的外观和感觉。为此，我们选择**按来源添加字段**选项卡，其中列出了数据来源，并将客户数据对象中附加的字段添加到表单画布中（如下截图所示）。
- en: Select a field, use the toolbar to edit the field properties, and move the field
    around in the form, to improve the aesthetics.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个字段，使用工具栏编辑字段属性，并在表单中移动字段，以改善美观。
- en: '![Creating a form](img/9578OS_03_15.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![创建表单](img/9578OS_03_15.jpg)'
- en: Setting the field properties
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置字段属性
- en: For each field included in the form, we can specify a set of properties that
    determine its runtime behavior and its layout.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对于表单中包含的每个字段，我们都可以指定一组属性，这些属性决定了其运行时行为和布局。
- en: For using the **Properties** panel (as shown in the following screenshot), select
    the field, and on the tool menu, click the edit button.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用**属性**面板（如下截图所示），选择字段，然后在工具菜单中单击编辑按钮。
- en: 'The properties include the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 属性包括以下内容：
- en: Properties for validating data integrity
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于验证数据完整性的属性
- en: Size of the input text
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入文本的大小
- en: Maximum characters supported
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持的最大字符数
- en: Mandatory or not
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否必填
- en: Read-only or not
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只读或非只读
- en: Password field or not
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否为密码字段
- en: Pattern of the data expressed as a regular expression
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用正则表达式表示的数据模式
- en: Properties for specifying the look and feel
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于指定外观和感觉的属性
- en: CSS style of the label and the field
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签和字段的CSS样式
- en: Type of the field if the type of data has multiple user interfaces; for example,
    string can be capture in a field or text area or by using a rich-text editor
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果数据类型有多个用户界面，则字段的类型；例如，字符串可以捕获在字段或文本区域中，或通过使用富文本编辑器
- en: Properties for data binding
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于数据绑定的属性
- en: Properties for increasing usability
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于提高可用性的属性
- en: Setting default values
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置默认值
- en: Inferring values using formulas
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用公式推断值
- en: 'The following screenshot shows the **Properties** editor for the string type
    data:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了字符串类型数据的**属性**编辑器：
- en: '![Setting the field properties](img/9578OS_03_16.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![设置字段属性](img/9578OS_03_16.jpg)'
- en: Setting a default value
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置默认值
- en: A general usability and productivity improvement technique in data entry screens
    is to provide default values for the fields. The form modeler supports this feature
    by using Java and **XPath** expressions.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据输入屏幕中，一种通用的可用性和生产力提升技术是为字段提供默认值。表单模型器通过使用Java和**XPath**表达式支持此功能。
- en: Note
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: XPath is a query language that can be used for selecting nodes in an XML document.
    See [http://en.wikipedia.org/wiki/XPath](http://en.wikipedia.org/wiki/XPath).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: XPath是一种查询语言，可用于选择XML文档中的节点。请参阅[http://en.wikipedia.org/wiki/XPath](http://en.wikipedia.org/wiki/XPath)。
- en: 'Suppose that in the customer creation process example, we have to default the
    field **sex** to **Male**, assuming that there are more male customers in the
    problem domain than female customers. So, in the **Default value formula** field
    of the property editor, we can use the expression as given in the following screenshot:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 假设在我们创建客户过程的示例中，我们必须将字段**性别**的默认值设置为**男性**，假设在问题域中男性客户比女性客户多。因此，在属性编辑器的**默认值公式**字段中，我们可以使用以下截图中的表达式：
- en: '![Setting a default value](img/9578OS_03_17.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![设置默认值](img/9578OS_03_17.jpg)'
- en: Another common occurring scenario is to default a date field to the current
    date.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的场景是将日期字段默认设置为当前日期。
- en: '![Setting a default value](img/9578OS_03_18.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![设置默认值](img/9578OS_03_18.jpg)'
- en: Inferring field values
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 推断字段值
- en: Another feature that we require in a data entry screen is to populate the values
    of some fields on the basis of the values of the other fields. For example, if
    we are capturing the information of a product (say, a laptop), there will be multiple
    cost components such as price, tax value, and discount. The total cost of the
    product is derived from these three components. So, we can set the formula for
    calculating the total cost by using an XPath expression referring to the fields
    for price, tax value, and discount (see the following screenshot).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据录入屏幕中，我们还需要的一个功能是基于其他字段的值填充某些字段的值。例如，如果我们正在捕获产品的信息（比如说，一台笔记本电脑），将会有多个成本组件，如价格、税值和折扣。产品的总成本是从这三个组件中得出的。因此，我们可以通过使用一个XPath表达式来设置计算总成本的公式，该表达式引用了价格、税值和折扣字段（见以下截图）。
- en: '![Inferring field values](img/9578OS_03_19.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![推断字段值](img/9578OS_03_19.jpg)'
- en: Making the field read-only would complete the trick.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使字段只读即可完成这个技巧。
- en: Subforms
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 子表单
- en: 'In a form, it is common to contain multiple sections. For example, while capturing
    customer information, we also need to capture the address information. Further,
    there are two type of address: one is the permanent address and the other is the
    communication address. Considering reusability in the form design, the most elegant
    way of modeling this scenario will be to create a single address form and including
    it twice in the **Customer** form.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个表单中，通常包含多个部分。例如，在捕获客户信息时，我们还需要捕获地址信息。此外，有两种类型的地址：一种是永久地址，另一种是通信地址。考虑到表单设计中的可重用性，建模这种场景最优雅的方式是创建一个单独的地址表单，并在**客户**表单中包含两次。
- en: 'Form modeler supports this scenario by using a feature called subform, where
    we can include one form in another. For achieving this, we have to create **Address
    form** and we have to go to the **Add field by type** tab of **Customer form**
    and add **Simple Subform** and choose the property of **Default form** as the
    already created **Address.form**:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 表单模型器通过使用一个名为子表单的功能来支持这种场景，其中我们可以在一个表单中包含另一个表单。为了实现这一点，我们必须创建**地址表单**，并且必须转到**客户表单**的**按类型添加字段**选项卡，添加**简单子表单**，并将**默认表单**的属性选择为已创建的**Address.form**：
- en: '![Subforms](img/9578OS_03_20.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![子表单](img/9578OS_03_20.jpg)'
- en: Multiple subforms
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多个子表单
- en: 'Yet another requirement is to have multiple objects of the same item in a form.
    Consider a scenario of the order management process. We have to capture the order
    information. An order typically consists of two parts: one is the order itself
    having information such as who the requestor is and at what time the request was
    made, and the other part is the requested item that consists of the product and
    the quantity ordered. This can be multiple; that is, the requestor may have multiple
    items in an order. A typical form to capture these details will be as given in
    the following screenshot:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个要求是在表单中拥有相同项目的多个对象。考虑订单管理流程的场景。我们必须捕获订单信息。一个订单通常由两部分组成：一部分是订单本身，包含有关请求者是谁以及何时提出请求的信息，另一部分是请求的项目，包括产品和订购的数量。这可能有很多；也就是说，请求者可能在订单中有多个项目。捕获这些细节的典型表单将如以下截图所示：
- en: '![Multiple subforms](img/9578OS_03_21.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![多个子表单](img/9578OS_03_21.jpg)'
- en: Furthermore, on clicking **Add order Items**, we will get a row of order items.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，点击**添加订单项**后，我们将得到一行订单项。
- en: '![Multiple subforms](img/9578OS_03_22.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![多个子表单](img/9578OS_03_22.jpg)'
- en: How do we model this scenario in the form modeler?
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何在表单模型器中建模这种场景？
- en: Follow the same method as that for the subform. Create data models for Order
    and Item. Create forms for Order and Item. In **Order form**, use the **Multiple
    subform** form type.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 按照子表单的方法进行。为订单和项目创建数据模型。为订单和项目创建表单。在**订单表单**中，使用**多个子表单**表单类型。
- en: If we take the property editor of **multiple subform**, we will get a lot of
    options to improve the look and feel of the form, to control what operations can
    be seen in the form, and so on. Play around and get a good feel of it.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们选择**多个子表单**的属性编辑器，我们将获得许多选项来改善表单的外观和感觉，控制可以在表单中看到哪些操作，等等。尝试一下，感受一下它的效果。
- en: Process simulation
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理模拟
- en: So far, we have discussed a lot about business process modeling and aids that
    jBPM provides for it. The modeled process can now be deployed to know the runtime
    characteristics. Wait! Don't we have to analyze and verify the characteristics
    of the business process? JBPM provides tooling for analyzing the runtime characteristics
    of a modeled business process, and this is called business process simulation.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经讨论了很多关于业务流程建模以及jBPM为此提供的辅助工具。现在，我们可以将建模的流程部署以了解其运行时特性。等等！我们不是还需要分析和验证业务流程的特性吗？JBPM提供了分析建模业务流程运行时特性的工具，这被称为业务流程模拟。
- en: 'Process simulation helps us to do the following:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 流程模拟帮助我们做到以下几方面：
- en: Optimize the business process design by pre-execution
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过预执行优化业务流程设计
- en: Understand the resource utilization of human actors involved in the business
    process
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解参与业务流程的人类角色的资源利用率
- en: Understand the performance characteristics of the business process by prediction
    and analysis
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过预测和分析理解业务流程的性能特性
- en: Continuously improve the business process design by minimizing the errors caused
    by a change
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过最小化变化引起的错误来持续改进业务流程设计
- en: 'We can progress with the discussion on process simulation by using a sample
    business process flow as shown in the following image. The process flow depicts
    a business process for an online transaction, including the collection of customer
    information, sending the one-time password, and validation of the password. The
    consideration for choosing this process design for illustration was to have multiple
    process paths:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用如下图像所示的示例业务流程流程来继续讨论流程模拟。流程流程描述了一个在线交易的业务流程，包括收集客户信息、发送一次性密码和验证密码。选择此流程设计进行说明的考虑是为了有多个流程路径：
- en: '![Process simulation](img/9578OS_03_23.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![流程模拟](img/9578OS_03_23.jpg)'
- en: Process paths
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 流程路径
- en: The process paths feature helps the process designer to see all the possible
    combinations of paths in the business process. This will help us to understand
    any flaw in the logic we have used.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 流程路径功能帮助流程设计者看到业务流程中所有可能的路径组合。这将帮助我们理解我们使用的逻辑中存在的任何缺陷。
- en: 'We can access the **Process Paths** tooling from the designer toolbar, as shown
    in the following screenshot:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从如下截图所示的设计工具栏中访问**流程路径**工具：
- en: '![Process paths](img/9578OS_03_24.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![流程路径](img/9578OS_03_24.jpg)'
- en: 'Select the **Process Paths** menu; it will calculate and list the paths that
    the process flow can possibly take. Select one of the paths, and click **Show
    Path** to highlight it in the process canvas:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**流程路径**菜单；它将计算并列出流程流程可能采取的路径。选择其中一条路径，然后点击**显示路径**以在流程画布中突出显示：
- en: '![Process paths](img/9578OS_03_25.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![流程路径](img/9578OS_03_25.jpg)'
- en: The preceding screenshot shows the process with a path highlighted. This tool
    becomes handy, particularly while designing complex business processes.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示了带有高亮路径的流程。这个工具在设计复杂业务流程时特别有用。
- en: Simulation parameters
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模拟参数
- en: The process simulation engine needs some parameter inputs other than the information
    available in the business process; these parameters collectively describe or define
    the scenario of business process simulation. The parameters to be captured for
    scenario creation vary with the type of business process elements in a business
    process. For example, we need to capture the working hours with the human tasks
    for simulating resource utilization.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 除了业务流程中可用的信息外，流程模拟引擎还需要一些参数输入；这些参数共同描述或定义了业务流程模拟的场景。为创建场景而需要捕获的参数因业务流程中业务流程元素类型的不同而异。例如，我们需要捕获与模拟资源利用相关的人类任务的工作时间。
- en: 'Simulation properties can be changed using the property editor and vary when
    selecting different process elements. The following screenshot shows the property
    editor showing the simulation properties for a human task (**Provide one-time
    password**):'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用属性编辑器更改模拟属性，并在选择不同的流程元素时发生变化。以下截图显示了显示人类任务（**提供一次性密码**）的模拟属性的属性编辑器：
- en: '![Simulation parameters](img/9578OS_03_26.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![模拟参数](img/9578OS_03_26.jpg)'
- en: The following section details the simulation parameters that have to be set
    for various process elements.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 下文详细说明了为各种流程元素必须设置的模拟参数。
- en: Process-level parameters
  id: totrans-162
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 流程级别参数
- en: 'The process-level simulation properties are as follows:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 流程级别的模拟属性如下：
- en: '`baseTimeunit`: The unit of time used in the simulation scenario. All values
    representing time will be considered to be expressed in this unit unless overridden
    locally.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`baseTimeunit`：在模拟场景中使用的单位时间。所有表示时间的值都将被视为以该单位表示，除非在本地覆盖。'
- en: '`baseCurrencyUnit`: The base currency unit used in the simulation scenario
    expressed using the ISO 4217 (three-letter code) standard. For example, the US
    dollar is represented as **USD**. Similar to baseTimeUnit, all values representing
    currency will be considered to be expressed in this unit unless overridden locally.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`baseCurrencyUnit`: 在模拟场景中使用的基准货币单位，使用ISO 4217（三位字母代码）标准表示。例如，美元表示为**USD**。与`baseTimeUnit`类似，所有表示货币的值都将被视为以该单位表示，除非在本地覆盖。'
- en: Note
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: ISO 4217 is an international standard, established for the purpose of having
    internationally recognized codes for the representation of currencies.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: ISO 4217是一个国际标准，旨在为货币的表示提供国际上认可的标准代码。
- en: Task-level parameters
  id: totrans-168
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 任务级参数
- en: 'The task-level simulation properties are as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 任务级模拟属性如下：
- en: '`unitCost` (labeled as cost per time unit): This is the cost per time unit
    that has to be paid for performing the task. The cost is expressed as the number
    of `baseCurrencyUnit` properties per `baseTimeUnit`, and the default value is
    zero.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unitCost`（标记为每时间单位成本）：这是执行任务必须支付的每时间单位成本。成本以`baseTimeUnit`的`baseCurrencyUnit`属性数量表示，默认值为零。'
- en: '`distributionType`: This specifies the statistical distribution of the processing
    time of this task over the period of execution of multiple instances of the business
    process in the scenario.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`distributionType`：这指定了在场景中执行多个业务流程实例期间此任务的处理时间的统计分布。'
- en: 'The supported statistical distribution types in jBPM are as follows:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM支持的统计分布类型如下：
- en: '**Uniform distribution**: Uniform distribution or rectangular distribution
    has equal probability for all values between the minimum and the maximum processing
    time values'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**均匀分布**：均匀分布或矩形分布对所有处理时间最小值和最大值之间的值具有相同的概率'
- en: '**Normal distribution**: It is one of the common distributions in nature represented
    as a symmetric bell-shaped curve and is specified by the mean and standard deviation
    values of the processing time'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正态分布**：它是自然界中常见的一种分布，表示为对称的钟形曲线，由处理时间的平均值和标准差值指定'
- en: '**Poison distribution**: It is used to estimate the number of arrivals within
    a given time and is specified by the mean processing time'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**泊松分布**：用于估计给定时间内的到达次数，由平均处理时间指定'
- en: Note
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For in-depth understanding of the distribution type, please try understanding
    probability distributions; see [http://en.wikipedia.org/wiki/Probability_distribution](http://en.wikipedia.org/wiki/Probability_distribution).
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要深入了解分布类型，请尝试理解概率分布；参见[http://en.wikipedia.org/wiki/Probability_distribution](http://en.wikipedia.org/wiki/Probability_distribution)。
- en: '`staffAvailability`: The quantity of resources available for the task and is
    set to a default of 1\. This parameter is applicable only to human tasks.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`staffAvailability`：可用于任务的资源数量，默认设置为1。此参数仅适用于人工任务。'
- en: '`workingHours`: The working hours for a human resource. This parameter is also
    applicable only to manual (human) tasks.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`workingHours`: 人力资源的工作时间。此参数也仅适用于手动（人工）任务。'
- en: Flow element parameters
  id: totrans-180
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 流元素参数
- en: The simulation property attached to a sequence flow is *probability*, which
    is the probability of the control being passed to this element. This is attached
    to the sequence flow process element. If we specify a probability value of 50
    percent to each of the two sequence flows outgoing from a gateway, it means that
    the two sequence flows are equally probable to occur.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 附属于序列流的模拟属性是*概率*，即控制传递到此元素的概率。这附属于序列流过程元素。如果我们为从网关发出的两个序列流中的每一个指定50%的概率值，这意味着两个序列流发生的概率是相等的。
- en: Running simulation
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行模拟
- en: 'Now, as we have discussed about setting the simulation properties, we can run
    the simulation. The menu is available along with **Process Paths** in the process
    designer toolbar:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经讨论了设置模拟属性，我们可以运行模拟。菜单与**流程路径**一起在流程设计工具栏中可用：
- en: '![Running simulation](img/9578OS_03_27.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![运行模拟](img/9578OS_03_27.jpg)'
- en: We will be prompted to provide details such as the number of instances to be
    simulated and the interval between process simulations. The simulation process
    is asynchronous, and once completed, the simulation tab will be populated with
    the simulation results.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将被提示提供有关要模拟的实例数量和过程模拟之间的间隔等详细信息。模拟过程是异步的，一旦完成，模拟标签页将填充模拟结果。
- en: Simulation results
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模拟结果
- en: 'The summary of the simulation is available on the right hand side of the simulation
    tab. This contains the information of the simulation and a hierarchy for navigating
    through the simulation results at different levels such as process, process elements,
    and paths. The following screenshot shows the summary information for the sample
    process:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟的总结信息位于模拟标签页的右侧。这包含模拟信息和用于在不同级别（如过程、过程元素和路径）导航模拟结果的层次结构。以下截图显示了示例过程的总结信息：
- en: '![Simulation results](img/9578OS_03_28.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![模拟结果](img/9578OS_03_28.jpg)'
- en: 'The results section is quite fleshy, with different types of charts to choose
    from that represent data in multiple ways. Play around with the options there.
    The following are the major datasets included in the simulation results:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 结果部分内容丰富，提供了多种类型的图表供选择，以多种方式表示数据。在那里尝试不同的选项。以下是在模拟结果中包含的主要数据集：
- en: '**Process simulation results**: If we select the process (from the hierarchy
    shown) to view the execution result, we can view the following:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '**过程模拟结果**：如果我们选择查看执行结果的过程（从显示的层次结构中），我们可以查看以下内容：'
- en: '**Execution times results**: This shows the maximum, minimum, and average time
    of execution.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行时间结果**：这显示了执行的最大值、最小值和平均值。'
- en: '**Activity instances**: This shows the activity (task) instances created during
    the simulation.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**活动实例**：这显示了在模拟期间创建的活动（任务）实例。'
- en: '**Total cost**: Shows the minimum, maximum, and average value of the projected
    cost for the business process.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**总成本**：显示业务流程预计成本的最小值、最大值和平均值。'
- en: The following image shows the execution time results of the online transaction
    business process:![Simulation results](img/9578OS_03_29.jpg)
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下图像显示了在线交易业务过程的执行时间结果：![模拟结果](img/9578OS_03_29.jpg)
- en: '**Process element-wise simulation results**: Select each process element in
    the hierarchy to show the process element-wise simulation results. For service
    tasks, this basically shows the minimum, maximum, and average values of the execution
    time. Further, for human tasks, it also shows the resource allocation details,
    wait time for resources, and the cost factor.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过程元素级模拟结果**：选择层次结构中的每个过程元素以显示过程元素级模拟结果。对于服务任务，这基本上显示了执行时间的最小值、最大值和平均值。此外，对于人工任务，它还显示了资源分配细节、资源等待时间以及成本因素。'
- en: '**Path simulation results**: Path simulation results show the number of times
    that the path has been executed and its percentage contribution.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**路径模拟结果**：路径模拟结果显示了路径被执行的次数及其百分比贡献。'
- en: Eclipse-based tooling
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于Eclipse的工具
- en: In the previous sections of this chapter, we have concentrated on modeling the
    process and utilities available in the web-based tooling provided by jBPM. The
    web-based tooling primarily focuses on the business analysts. Can the business
    analysts create an application on their own? We must acknowledge that we are not
    yet there, but, of course, there are only a few gaps left to reach that destiny.
    On today's course, we need the help of technologists to create a completely functional
    application.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的前几节中，我们专注于使用jBPM提供的基于Web的工具建模过程和实用工具。基于Web的工具主要面向业务分析师。业务分析师能否独立创建应用程序？我们必须承认我们还没有达到那里，但当然，只剩下几个差距就可以达到那个目标。在今天的课程中，我们需要技术人员的帮助来创建一个完全功能的应用程序。
- en: jBPM tooling considers this reality in the form of the updated Eclipse tooling
    that helps developers to create a jBPM application or collaborate with the team
    of business analysts to complete an application.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM工具将这一现实考虑在内，以更新的Eclipse工具的形式，帮助开发者创建jBPM应用程序或与业务分析师团队合作完成应用程序。
- en: Importing a project created using web-based tooling
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入使用基于Web的工具创建的项目
- en: In this chapter, we have discussed how to create a jBPM project by using Eclipse
    tooling. Here, we will discuss how to import a project that was created in the
    process designer (possibly by someone in the business analyst role) into Eclipse
    and continue working on it.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了如何使用Eclipse工具集创建jBPM项目。在这里，我们将讨论如何将过程设计器中创建的项目（可能由业务分析师角色的人创建）导入Eclipse并继续工作。
- en: The default implementation of the knowledge repository in jBPM utilizes Git,
    a widely used source code management system. So, when we create a project by using
    web-based tooling, it actually creates a project in Git. Git supports people to
    work concurrently on a project, and this facility can be utilized for collaborative
    working between users of web-based tooling and Eclipse tooling.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM中知识库的默认实现使用Git，这是一个广泛使用的源代码管理系统。因此，当我们使用基于Web的工具集创建项目时，实际上是在Git中创建项目。Git支持人们并行工作于一个项目，这个功能可以用于基于Web的工具集用户和Eclipse工具集用户之间的协作工作。
- en: 'So, first, we should know the Git repository location that jBPM uses as the
    knowledge repository for the sample project:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，首先，我们应该知道jBPM用作示例项目知识库的Git存储库位置：
- en: Log into web-based tooling, and go to the **Project Authoring** | **Administration**
    menu. There will be a list of repositories and projects.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录基于Web的工具集，并转到**项目创作** | **管理**菜单。将显示一个存储库和项目的列表。
- en: 'Select the project we want and we can see the Git repository URL. There will
    be two URLs available: one using the **git** protocol and the other for the **ssh**
    protocol. The screenshot of this section is as follows:![Importing a project created
    using web-based tooling](img/9578OS_03_30.jpg)'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择我们想要的项目，我们可以看到Git存储库URL。将有两个URL可用：一个使用**git**协议，另一个用于**ssh**协议。本节的截图如下：![使用基于Web的工具集创建的项目导入](img/9578OS_03_30.jpg)
- en: Copy the URL using the tooling available.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用可用的工具复制URL。
- en: Open Eclipse (that is installed with the jBPM installation).
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Eclipse（与jBPM安装一起安装）。
- en: Go to **File** | **Import** | **Projects from Git**, click **Next**, select
    **URL**, and click **Next**. We will get the window shown in the following screenshot.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**文件** | **导入** | **从Git导入项目**，点击**下一步**，选择**URL**，然后点击**下一步**。我们将看到以下截图所示的窗口。
- en: Enter the ssh URL and authentication details:![Importing a project created using
    web-based tooling](img/9578OS_03_31.jpg)
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入ssh URL和认证详情：![使用基于Web的工具集创建的项目导入](img/9578OS_03_31.jpg)
- en: Proceed with the wizard and finish importing the project; in Eclipse **Package
    Explorer**, we will get the project imported. The project structure is the Maven
    project structure for a Java project. Explore and we can see the data object,
    forms, and business processes that we have created:![Importing a project created
    using web-based tooling](img/9578OS_03_32.jpg)
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照向导操作并完成项目导入；在Eclipse的**包资源管理器**中，我们将看到导入的项目。项目结构是Java项目的Maven项目结构。探索一下，我们可以看到我们创建的数据对象、表单和业务流程：![使用基于Web的工具集创建的项目导入](img/9578OS_03_32.jpg)
- en: Process modeling
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流程建模
- en: 'Eclipse-based tooling comes with a BPMN diagram editor for modeling business
    processes. The editor provides similar features as the web-based process designer.
    It consists of a canvas where we can visually illustrate the business process,
    **Palette**, which acts the BPMN object library, and the property editor for setting
    the properties of each BPMN element. The following screenshot provides the BPMN
    diagram editor:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 基于Eclipse的工具集包含一个用于建模业务流程的BPMN图编辑器。该编辑器提供了与基于Web的过程设计器类似的功能。它由一个画布组成，我们可以在此画布上直观地展示业务流程，**画布**，它充当BPMN对象库，以及用于设置每个BPMN元素属性的属性编辑器。以下截图展示了BPMN图编辑器：
- en: '![Process modeling](img/9578OS_03_33.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![流程建模](img/9578OS_03_33.jpg)'
- en: We are not discussing the features of the editor in detail as they are similar
    to the features explained for web-based tooling.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会详细讨论编辑器的功能，因为它们与基于Web的工具集所解释的功能类似。
- en: Data object modeling
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据对象建模
- en: For data object modeling, jBPM doesn't provide any visual modeling tooling,
    but the source code generated internally while creating a data object is provided
    to the developer user. This source code is in Java, and the objects are represented
    as **Plain Old Java Object** (**POJO**) and decorated using annotations from the
    knowledge API.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据对象建模，jBPM不提供任何可视建模工具，但在创建数据对象时内部生成的源代码提供给开发用户。此源代码是Java代码，对象以**纯Java对象**（**POJO**）的形式表示，并使用知识API的注解进行装饰。
- en: 'The following screenshot shows `Order.java` created for the `Order` data object
    created in the process designer:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在流程设计器中创建的 `Order.java`，用于在流程设计器中创建的 `Order` 数据对象：
- en: '![Data object modeling](img/9578OS_03_34.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![数据对象建模](img/9578OS_03_34.jpg)'
- en: Form modeling
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表单建模
- en: Similar to data object modeling, developer tooling doesn't include any visual
    tooling for form modeling but is available as a raw file that can be hacked by
    developers.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 与数据对象建模类似，开发人员工具不包括任何用于表单建模的视觉工具，但作为开发者可以修改的原始文件。
- en: The files with the `.form` extension contain the properties within the form
    and the files with the `.ftl` (which refers to FreeMarker template files) extension
    contain the layout information of the form.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展名为 `.form` 的文件包含表单内的属性，而扩展名为 `.ftl`（指 FreeMarker 模板文件）的文件包含表单的布局信息。
- en: Note
  id: totrans-222
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more details on FreeMarker templates, see [http://en.wikipedia.org/wiki/FreeMarker](http://en.wikipedia.org/wiki/FreeMarker).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 FreeMarker 模板的更多详细信息，请参阅 [http://en.wikipedia.org/wiki/FreeMarker](http://en.wikipedia.org/wiki/FreeMarker)。
- en: Process simulation
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流程模拟
- en: There is no tooling as such available for process simulation, and the developers
    have to rely on unit test cases and debugging tooling available for analyzing
    the runtime characteristics of a process.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 对于流程模拟没有可用的工具，开发者必须依赖单元测试用例和调试工具来分析流程的运行时特性。
- en: Note
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The view for writing unit test cases and process instances is discussed in the
    *Writing automated test cases* section of [Chapter 2](ch02.html "Chapter 2. Building
    Your First BPM Application"), *Building Your First BPM Application*.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 关于编写单元测试用例和处理实例的视图在 [第 2 章](ch02.html "第 2 章。构建您的第一个 BPM 应用程序") 的 *编写自动化测试用例*
    部分进行讨论，*构建您的第一个 BPM 应用程序*。
- en: Saving changes to the knowledge repository
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存更改到知识库
- en: In web-based tooling, saving the artifact would be reflected in the knowledge
    repository. Eclipse-based tooling is a bit different in this aspect. The saved
    files will reflect only in our local file system; for synchronizing with the knowledge
    repository (here, the Git repository), we can use Eclipse tooling for commit and
    pushing to the Git repository.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于 Web 的工具中，保存的工件将在知识库中反映出来。在 Eclipse 基础上的工具在此方面略有不同。保存的文件将仅反映在我们的本地文件系统中；为了与知识库（此处为
    Git 仓库）同步，我们可以使用 Eclipse 工具进行提交并将更改推送到 Git 仓库。
- en: Right click on the project (**Package Explorer**), and go to **Team** | **Commit**.
    It will take you to the commit screen shown in the following screenshot.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击项目（**包资源管理器**），然后转到 **团队** | **提交**。它将带您到以下截图所示的提交屏幕。
- en: Select the artifacts to be moved to the repository, provide a commit message,
    and use the **Commit and Push** button to push the changes to the knowledge repository:![Saving
    changes to the knowledge repository](img/9578OS_03_35.jpg)
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要移动到存储库的工件，提供提交信息，并使用 **提交和推送** 按钮将更改推送到知识库：![保存更改到知识库](img/9578OS_03_35.jpg)
- en: Summary
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The chapter focused on the tooling available for process design and covered
    in detail the various features available in both web and Eclipse-based tooling,
    targeting business users and technologists, respectively. The chapter also helps
    in getting a hands-on experience of how both web and Eclipse-based tooling can
    be used collaboratively in process design.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了可用于流程设计的工具，并详细介绍了 Web 和基于 Eclipse 的工具中可用的各种功能，分别针对商业用户和技术人员。本章还帮助用户了解如何在流程设计中协同使用
    Web 和基于 Eclipse 的工具。
- en: Now, as we have discussed process design in considerable detail, let us explore
    the tooling available for operation management in the next chapter.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经相当详细地讨论了流程设计，让我们在下一章中探索可用于运营管理的工具。
- en: Also, [Chapter 5](ch05.html "Chapter 5. BPMN Constructs"), *BPMN Constructs*,
    can be considered an extension to process designing, where we will discuss in
    detail each BPMN construct that can be included in a business process.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，[第 5 章](ch05.html "第 5 章。BPMN 构造")，*BPMN 构造* 可以被视为流程设计的扩展，其中我们将详细讨论可以包含在业务流程中的每个
    BPMN 构造。
