["```java\n@Repository\npublic class ExampleBean {\n   @Autowired\n   private DataSource dataSource;\n...\n}\n```", "```java\npublic BlogRepository(@Lazy List<BlogEntry> db) {...\n```", "```java\n@Qualifier(\"theDate\")\nprivate LocalDateTime contextStartTime;\n```", "```java\n@Repository @Scope(SCOPE_SINGLETON)\npublic class BlogRepository {\n```", "```java\n@Configuration\npublic class MyConfiguration {\n   @Bean\n   public Date theDate(){\n      return new Date();\n   }\nâ€¦\n}\n```", "```java\n@Profile(\"dev\")\n@Bean(\"theConfiguredDate\")\npublic Instant theConfiguredFixedDate(){\n   return Instant.ofEpochMilli(1527854742);\n}\n\n@Profile(\"!dev\")\n@Bean\npublic Instant theConfiguredDate(){\n   return Instant.now();\n}\n```", "```java\n@Profile(\"dev\", \"profile2\", \"profile3\")\n```", "```java\nspring.datasource.driverClassName=com.mysql.jdbc.Driver\nspring.datasource.url=jdbc:mysql://localhost/test\nserver.port=9000\n```", "```java\nspring.datasource:\ndriverClassName: com.mysql.jdbc.Driver\n   url: jdbc:mysql://localhost/test\nserver.port: 9000\n```", "```java\nserver:\n   port: 9001\nmy.value: dev\n\n---\nspring:\n   profiles: dev\nmy.value: dev\n\n---\nspring:\n   profiles: production\nserver:\n   port: 0\n```", "```java\nserver.port: 9000\nspring:\n   application:\n         name: MyApplication\ninfo:\n   description: ${spring.application.name} is so nice\n```", "```java\n@Autowired\npublic void init(Environment env) {\n   log.info(\"my.config.value={}\",\n           env.getProperty(\"my.config.value\",\n                   Integer.class, 42));\n}\n```", "```java\n@Value(\"${my.config.feature.flag:false}\")\nboolean featureFlag;\n```", "```java\n@Value(\"#{blogService.timeMessage.toUpperCase()}\")\nString message;\n```", "```java\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-configuration-processor</artifactId>\n  <optional>true</optional>\n</dependency>\n```", "```java\n@Data\n@ConfigurationProperties(\"blogmania\")\npublic class MyProperties {\n   String message;\n   int myInt=4;\n   SubProperties subs = new SubProperties();\n\n   @Data\n   public static class SubProperties{\n       boolean iLikePizza=true;\n   }\n}\n```", "```java\nblogmania.message\nblogmania.my-int\nblogmania.subs.i-like-pizza\n```", "```java\n@EnableConfigurationProperties({MyProperties.class})\n```"]