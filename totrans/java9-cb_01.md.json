["```java\n cd \"C:\\Program Files\\Java\\jdk-9\\bin\"\n      javac -version\n```", "```java\n $> vim ~/.bash_aliases\n      export JAVA_HOME=/usr/lib/jdk-9\n      export PATH=$PATH:$JAVA_HOME/bin\n```", "```java\n $> source ~/.bashrc\n      $> echo $JAVA_HOME\n      /usr/lib/jdk-9\n      $>javac -version\n      javac 9\n      $> java -version\n      java version \"9\"\n Java(TM) SE Runtime Environment (build 9+180)\n Java HotSpot(TM) 64-Bit Server VM (build 9+180, mixed mode)\n```", "```java\n        @XmlRootElement\n        @XmlAccessorType(XmlAccessType.FIELD) \n        class Messages{     \n          @XmlElement \n          public final String message = \"Hello World in XML\"; \n        }\n```", "```java\n        public class HelloWorldXml{\n          public static void main(String[] args) throws JAXBException{\n            JAXBContext jaxb = JAXBContext.newInstance(Messages.class);\n            Marshaller marshaller = jaxb.createMarshaller();\n            marshaller.setProperty(Marshaller.JAXB_FRAGMENT,\n                                   Boolean.TRUE);\n            StringWriter writer = new StringWriter();\n            marshaller.marshal(new Messages(), writer);\n            System.out.println(writer.toString());\n          } \n        }\n```", "```java\n        module com.packt{\n          //depends on the java.xml.bind module\n          requires java.xml.bind;\n          //need this for Messages class to be available to java.xml.bind\n          exports  com.packt to java.xml.bind;\n        }\n```", "```java\n      mkdir -p mods/com.packt\n```", "```java\n javac -d mods/com.packt/ src/com.packt/module-info.java\n      src/com.packt/com/packt/HelloWorldXml.java\n```", "```java\n<messages><message>Hello World in XML</message></messages>\n```", "```java\n//NewFeatures.java\npublic class NewFeatures{\n  public static void main(String [] args) {\n    ProcessHandle currentProcess = ProcessHandle.current();\n    System.out.println(\"PID: \" + currentProcess.getPid());\n    ProcessHandle.Info currentProcessInfo = currentProcess.info();\n    System.out.println(\"Info: \" + currentProcessInfo);\n  }\n}\n```", "```java\n//module-info.java\nmodule newfeatures{\n    requires jdk.incubator.httpclient;\n}\n\n```", "```java\nimport jdk.incubator.http.*;\nimport java.net.URI;\npublic class Http2Feature{\n  public static void main(String[] args) throws Exception{ \n    HttpClient client = HttpClient.newBuilder().build();\n    HttpRequest request = HttpRequest\n      .newBuilder(new URI(\"http://httpbin.org/get\"))\n      .GET()\n      .version(HttpClient.Version.HTTP_1_1)\n      .build();\n    HttpResponse<String> response = client.send(request, \n      HttpResponse.BodyHandler.asString());\n    System.out.println(\"Status code: \" + response.statusCode());\n    System.out.println(\"Response Body: \" + response.body()); \n  }\n}\n```", "```java\nInteger large_Number = 123_123_123; \nSystem.out.println(large_Number); \n```", "```java\ntry(Connection conn = getConnection()){}catch(Exception ex){}. \n```", "```java\ntry(conn){}catch(Exception ex){} \n```", "```java\njar root\n  - A.class\n  - B.class\n  - C.class\n```", "```java\njar root\n  - A.class\n  - B.class\n  - C.class\n  - META-INF\n    - versions \n      - 9\n        - A.class\n      - 10\n        - B.class\n```", "```java\nimport java.awt.List;\npublic class Test{\n  public static void main(String[] args){\n    List list = new List();\n    list.addItem(\"Hello\");\n  }\n}\n```", "```java\nC:Program FilesJavajdk-9bin>jdeprscan.exe -cp . Test\n```", "```java\n$> jdeps mods/com.packt/\ncom.packt -> java.base\ncom.packt -> java.xml.bind\ncom.packt -> java.io                          java.base\ncom.packt -> java.lang                        java.base\ncom.packt -> javax.xml.bind                   java.xml.bind\ncom.packt -> javax.xml.bind.annotation        java.xml.bind\n```", "```java\n$> jlink --module-path mods/:$JAVA_HOME/jmods/ --add-modules com.packt --output img\n```"]