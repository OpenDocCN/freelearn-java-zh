["```java\nmvn clean package embedded-glassfish:run\n```", "```java\n$ jcmd\n4981 com.intellij.idea.Main\n7704 sun.tools.jcmd.JCmd\n7577 org.codehaus.plexus.classworlds.launcher.Launcher clean package embedded-glassfish:run\n5180 org.jetbrains.idea.maven.server.RemoteMavenServer\n```", "```java\n7877 com.sun.enterprise.glassfish.bootstrap.ASMain -upgrade false -domaindir /home/dev/glassfish5/glassfish/domains/domain1 -read-stdin true -asadmin-args --host,,,localhost,,,--port,,,4848,,,--secure=false,,,--terse=false,,,--echo=false,,,--interactive=true,,,start-domain,,,--verbose=false,,,--watchdog=false,,,--debug=false,,,--domaindir,,,/home/dev/glassfish5/glassfish/domains,,,domain1 -domainname domain1 -instancename server -type DAS -verbose false -asadmin-classpath /home/dev/glassfish5/glassfish/lib/client/appserver-cli.jar -debug false -asadmin-classname com.sun.enterprise.admin.cli.AdminMain\n```", "```java\n8112 org.apache.catalina.startup.Bootstrap start\n```", "```java\njcmd <PID> help\n```", "```java\njcmd 7577 help\n```", "```java\n7577:\nThe following commands are available:\nJFR.stop\nJFR.start\nJFR.dump\nJFR.check\nVM.native_memory\nVM.check_commercial_features\nVM.unlock_commercial_features\nManagementAgent.stop\nManagementAgent.start_local\nManagementAgent.start\nGC.rotate_log\nThread.print\nGC.class_stats\nGC.class_histogram\nGC.heap_dump\nGC.run_finalization\nGC.run\nVM.uptime\nVM.flags\nVM.system_properties\nVM.command_line\nVM.version\nhelp\n```", "```java\n$ jcmd 7577 Thread.print\n7577:\n2017-09-10 16:39:12\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (25.144-b01 mixed mode):\n\n\".....\" #xxx [daemon] prio=xxx os_prio=xxx tix=0x.... nid=0x.... [condition]\n  java.lang.Thread.State: XXXXX\n  at ......\n  at ......\n  ...\n\n\".....\" #xxx [daemon] prio=xxx os_prio=xxx tix=0x.... nid=0x.... [condition]\n  java.lang.Thread.State: XXXXX\n  at ......\n  at ......\n  ...\n\n\".....\" #xxx [daemon] prio=xxx os_prio=xxx tix=0x.... nid=0x.... [condition]\n  java.lang.Thread.State: XXXXX\n  at ......\n  at ......\n  ...\n```", "```java\n\"thread_name\" #thread_id_as_int [daemon if the thread is daemon] prio=java_priority os_prio=native_priority tid=thread_id_pointer_format nid=native_id [state]\n   thread_stack_trace\n```", "```java\n\"dol-jar-scanner\" #50 daemon prio=5 os_prio=0 tid=0x00007f3b7dd0a000 nid=0x1ddf waiting on condition [0x00007f3ae6bae000]\n   java.lang.Thread.State: WAITING (parking)\n  at sun.misc.Unsafe.park(Native Method)\n  - parking to wait for <0x00000000877529a8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n  at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\n  at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)\n  at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\n  at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)\n  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)\n  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n  at java.lang.Thread.run(Thread.java:748)\n```", "```java\n\"http-listener-kernel(1) SelectorRunner\" #27 daemon prio=5 os_prio=0 tid=0x00007f3b7cfe7000 nid=0x1dc8 runnable [0x00007f3b1eb7d000]\n   java.lang.Thread.State: RUNNABLE\n  at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\n  at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:269)\n  at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:93)\n  at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)\n  - locked <0x000000008675cc20> (a sun.nio.ch.Util$3)\n  - locked <0x000000008675cc10> (a java.util.Collections$UnmodifiableSet)\n  - locked <0x000000008675c1f8> (a sun.nio.ch.EPollSelectorImpl)\n  at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)\n  at org.glassfish.grizzly.nio.DefaultSelectorHandler.select(DefaultSelectorHandler.java:115)\n  at org.glassfish.grizzly.nio.SelectorRunner.doSelect(SelectorRunner.java:339)\n  at org.glassfish.grizzly.nio.SelectorRunner.run(SelectorRunner.java:279)\n  at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:593)\n  at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:573)\n  at java.lang.Thread.run(Thread.java:748)\n```", "```java\n\"http-listener(3)\" #23 daemon prio=5 os_prio=0 tid=0x00007f3b7d063800 nid=0x1dc4 runnable [0x00007f3b1ef7d000]\n   java.lang.Thread.State: RUNNABLE\n  [...]\n  at com.sun.enterprise.connectors.ConnectionManagerImpl.internalGetConnection(ConnectionManagerImpl.java:254)\n  [...]\n  at com.sun.gjc.spi.base.AbstractDataSource.getConnection(AbstractDataSource.java:115)\n  at org.eclipse.persistence.sessions.JNDIConnector.connect(JNDIConnector.java:135)\n  [...]\n  at org.eclipse.persistence.queries.ObjectLevelReadQuery.executeDatabaseQuery(ObjectLevelReadQuery.java:1221)\n  at org.eclipse.persistence.queries.DatabaseQuery.execute(DatabaseQuery.java:911)\n  at org.eclipse.persistence.queries.ObjectLevelReadQuery.execute(ObjectLevelReadQuery.java:1180)\n  at org.eclipse.persistence.queries.ReadAllQuery.execute(ReadAllQuery.java:464)\n  [...]\n  at org.eclipse.persistence.indirection.IndirectSet.size(IndirectSet.java:624)\n  [...]\n  at java.util.Optional.map(Optional.java:215)\n  at com.github.rmannibucau.quote.manager.front.QuoteResource.findById(QuoteResource.java:48)\n  [...]\n  at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:370)\n  at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:389)\n  [...]\n  at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n  at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:256)\n  at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:160)\n  [...]\n  at org.glassfish.grizzly.http.server.HttpHandler.runService(HttpHandler.java:206)\n  at org.glassfish.grizzly.http.server.HttpHandler.doHandle(HttpHandler.java:180)\n  [...]\n  at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:593)\n  at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:573)\n  at java.lang.Thread.run(Thread.java:748)\n\n```", "```java\nkill -3 $JAVA_SERVER_PID\n```", "```java\n$ jcmd 7577 GC.class_histogram\n7577:\n\n num #instances #bytes class name\n----------------------------------------------\n 1: 192795 16202648 [C\n 2: 10490 4667040 [B\n 3: 191582 4597968 java.lang.String\n 4: 38779 3412552 java.lang.reflect.Method\n 5: 20107 2243296 java.lang.Class\n 6: 70045 2241440 java.util.HashMap$Node\n 7: 24429 2078312 [Ljava.util.HashMap$Node;\n 8: 47188 1887520 java.util.LinkedHashMap$Entry\n 9: 28134 1745104 [Ljava.lang.Object;\n 38: 2175 121800 com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry\n 39: 1890 120960 com.mysql.jdbc.ConnectionPropertiesImpl$BooleanConnectionProperty\n1739: 6 192 java.util.regex.Pattern$3\n2357: 1 96 com.sun.crypto.provider.SunJCE\n2478: 4 96 org.glassfish.jersey.server.AsyncContext$State\n2548: 1 88 org.glassfish.ejb.startup.EjbDeployer\n2558: 2 80 [Lcom.mysql.jdbc.StringUtils$SearchMode;\n2649: 2 80 org.glassfish.kernel.embedded.EmbeddedDomainPersistence\n2650: 2 80 org.glassfish.persistence.jpa.PersistenceUnitInfoImpl\n2652: 1 80 org.hibernate.validator.internal.engine.ConfigurationImpl\n2655: 5 80 org.jboss.weld.manager.BeanManagerImpl\n2678: 1 72 [Lorg.glassfish.jersey.uri.UriComponent$Type;\n2679: 2 72 [Lsun.security.jca.ProviderConfig;\n2680: 1 72 com.github.rmannibucau.quote.manager.model.Quote\n2689: 3 72 com.sun.enterprise.container.common.impl.ComponentEnvManagerImpl$FactoryForEntityManagerWrapper\n2770: 3 72 org.eclipse.persistence.jpa.jpql.parser.TableExpressionFactory\n6925: 1 16 sun.reflect.ReflectionFactory\nTotal 1241387 61027800\n```", "```java\n 138:           591          42552  com.github.rmannibucau.quote.manager.model.Quote\n```", "```java\n$ $JAVA_HOME/bin/jvisualvm\n```", "```java\n-Dcom.sun.management.jmxremote.port=1234\n-Dcom.sun.management.jmxremote.ssl=false\n-Dcom.sun.management.jmxremote.authenticate=false\n```", "```java\n$ $JAVA_HOME/bin/jmc\n```", "```java\n-XX:+UnlockCommercialFeatures -XX:+FlightRecorder\n```", "```java\n$ MAVEN_OPTS=\"-XX:+UnlockCommercialFeatures -XX:+FlightRecorder\" mvn embedded-glassfish:run\n```", "```java\n$ ./bin/asadmin enable-monitoring\nCommand enable-monitoring executed successfully.\n```", "```java\n$./bin/asadmin disable-monitoring\n\n```", "```java\n$ ./bin/asadmin get server.monitoring-service.*\nserver.monitoring-service.module-monitoring-levels.cloud=OFF\nserver.monitoring-service.module-monitoring-levels.cloud-elasticity=OFF\nserver.monitoring-service.module-monitoring-levels.cloud-orchestrator=OFF\nserver.monitoring-service.module-monitoring-levels.cloud-tenant-manager=OFF\nserver.monitoring-service.module-monitoring-levels.cloud-virt-assembly-service=OFF\nserver.monitoring-service.module-monitoring-levels.connector-connection-pool=OFF\nserver.monitoring-service.module-monitoring-levels.connector-service=OFF\nserver.monitoring-service.module-monitoring-levels.deployment=OFF\nserver.monitoring-service.module-monitoring-levels.ejb-container=OFF\nserver.monitoring-service.module-monitoring-levels.http-service=OFF\nserver.monitoring-service.module-monitoring-levels.jdbc-connection-pool=OFF\nserver.monitoring-service.module-monitoring-levels.jersey=HIGH\nserver.monitoring-service.module-monitoring-levels.jms-service=OFF\nserver.monitoring-service.module-monitoring-levels.jpa=OFF\nserver.monitoring-service.module-monitoring-levels.jvm=OFF\nserver.monitoring-service.module-monitoring-levels.orb=OFF\nserver.monitoring-service.module-monitoring-levels.security=OFF\nserver.monitoring-service.module-monitoring-levels.thread-pool=OFF\nserver.monitoring-service.module-monitoring-levels.transaction-service=OFF\nserver.monitoring-service.module-monitoring-levels.web-container=OFF\nserver.monitoring-service.module-monitoring-levels.web-services-container=OFF\nserver.monitoring-service.dtrace-enabled=false\nserver.monitoring-service.mbean-enabled=true\nserver.monitoring-service.monitoring-enabled=true\nCommand get executed successfully.\n```", "```java\n@GET\n@Path(\"{id}\")\npublic JsonQuote findById(@PathParam(\"id\") final long id) {\n    final Timer.Context metricsTimer = getMonitoringTimer(\"findById\").time();\n    try {\n        return defaultImpl();\n    } finally {\n        metricsTimer.stop();\n    }\n}\n```", "```java\n@GET\n@Path(\"{id}\")\npublic JsonQuote findById(@PathParam(\"id\") final long id) {\n    final long start = System.nanoTime();\n    try {\n        return defaultImpl();\n    } finally {\n        final long end = System.nanoTime();\n        MONITORING_LOGGER.info(\"perf(findById) = \" +\n        TimeUnit.NANOSECONDS.toMillis(end - start) + \"ms\");\n    }\n}\n```", "```java\n@ApplicationScoped\npublic class QuoteResource {\n    @Inject\n    private QuoteService service;\n\n    @PostConstruct\n    private void monitorOn() {\n        service = MonitoringFactory.monitor(service);\n    }\n}\n```", "```java\n@Transactional\n@ApplicationScoped\npublic class QuoteService {\n    @PersistenceContext\n    private EntityManager entityManager;\n\n    @Timed(name = \"create\")\n    public Quote create(final Quote newQuote) {\n        entityManager.persist(newQuote);\n        entityManager.flush();\n        return newQuote;\n    }\n}\n```", "```java\nprivate Object onInvocation(InvocationContext context) throws Exception {\n    Timer.Context time = findTimer(context).time();\n    try {\n        return context.proceed();\n    } finally {\n        time.stop();\n    }\n}\n```", "```java\nprotected Object doInvoke(final InvocationContext context) throws Throwable {\n    final Context ctx = before(context);\n    Throwable error = null;\n    try {\n        return proceed(context);\n    } catch (final Throwable t) {\n        error = t;\n        throw t;\n    } finally {\n        if (error == null) {\n            ctx.stop();\n        } else {\n            ctx.stopWithException(error);\n        }\n    }\n}\n```", "```java\nentityManager.find(Quote.class, id)\n```", "```java\n@InterceptorBinding\n@Target({ElementType.TYPE, ElementType.METHOD})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface Monitored {\n}\n```", "```java\n@Interceptor\n@Monitored\n@Priority(Interceptor.Priority.PLATFORM_BEFORE)\npublic class MonitoredInterceptor implements Serializable {\n    @AroundInvoke\n    @AroundTimeout\n    public Object monitor(final InvocationContext invocationContext) throws Exception {\n        final Context ctx = newContext(invocationContext);\n        Exception error = null;\n        try {\n            return invocationContext.proceed();\n        } catch (final Exception t) {\n            error = t;\n            throw t;\n        } finally {\n            if (error == null) {\n                ctx.stop();\n            } else {\n                ctx.stopWithException(error);\n            }\n        }\n    }\n}\n```", "```java\npublic class PerformanceExtension implements Extension {\n    private final Annotation monitored = new\n    AnnotationLiteral<Monitored>() {};\n    private final Properties configuration = new Properties();\n    private boolean enabled;\n\n    void loadConfiguration(final @Observes BeforeBeanDiscovery\n    beforeBeanDiscovery) {\n        try (final InputStream configStream =\n        Thread.currentThread().getContextClassLoader()\n\n        .getResourceAsStream(\"performances.properties\")) {\n            if (configStream != null) {\n                configuration.load(configStream);\n            }\n        }   catch (final IOException ioe) {\n            throw new IllegalArgumentException(ioe);\n        }\n        enabled =\n        Boolean.parseBoolean(configuration.getProperty(\"enabled\",\n        \"true\"));\n    }\n\n    <A> void processAnnotatedType(final @Observes \n    ProcessAnnotatedType<A> pat) {\n        if (!enabled) {\n            return;\n        }\n\n        final String beanClassName =\n        pat.getAnnotatedType().getJavaClass().getName();\n        if(Boolean.parseBoolean(configuration.getProperty(beanClassName\n        + \".monitor\", \"false\"))) {\n            pat.setAnnotatedType(new WrappedAnnotatedType<>\n            (pat.getAnnotatedType(), monitored));\n        }\n    }\n}\n```", "```java\npublic class WrappedAnnotatedType<A> implements AnnotatedType<A> {\n    private final AnnotatedType<A> delegate;\n    private final Set<Annotation> annotations;\n\n    public WrappedAnnotatedType(final AnnotatedType<A> at, final\n    Annotation additionalAnnotation) {\n        this.delegate = at;\n\n        this.annotations = new HashSet<Annotation\n        >(at.getAnnotations().size() + 1);\n        this.annotations.addAll(at.getAnnotations());\n        this.annotations.add(additionalAnnotation);\n    }\n\n    @Override\n    public Set<Annotation> getAnnotations() {\n        return annotations;\n    }\n\n    @Override\n    public <T extends Annotation> T getAnnotation(final Class<T>\n    annotationType) {\n        for (final Annotation ann : annotations) {\n            if (ann.annotationType() == annotationType) {\n                return annotationType.cast(ann);\n            }\n        }\n        return null;\n    }\n\n    @Override\n    public boolean isAnnotationPresent(final Class<? extends\n    Annotation> annotationType) {\n        return getAnnotation(annotationType) != null;\n    }\n\n    // other methods fully delegate the invocations to the delegate\n    instance\n}\n```", "```java\n# activate the monitoring\nenabled = true\n\n# monitor the QuoteService class\ncom.github.rmannibucau.quote.manager.service.QuoteService.monitor = true\n```", "```java\n<plugin>\n  <groupId>org.apache.maven.plugins</groupId>\n  <artifactId>maven-dependency-plugin</artifactId>\n  <version>3.0.2</version>\n  <executions>\n    <execution>\n      <id>sirona</id>\n      <goals>\n        <goal>copy</goal>\n      </goals>\n      <configuration>\n        <artifactItems>\n          <artifactItem>\n            <groupId>com.github.rmannibucau.sirona</groupId>\n            <artifactId>sirona-javaagent</artifactId>\n            <version>0.6</version>\n            <type>jar</type>\n            <classifier>shaded</classifier>\n            <overWrite>true</overWrite>\n            <outputDirectory>${project.basedir}</outputDirectory>\n            <destFileName>sirona-javaagent.jar</destFileName>\n          </artifactItem>\n        </artifactItems>\n      </configuration>\n    </execution>\n  </executions>\n</plugin>\n```", "```java\n$ mvn dependency:copy@sirona\n```", "```java\ncom.github.rmannibucau.sirona.javaagent.listener.CounterListener.includes=prefix:com.github.rmannibucau.quote.manager\ncom.github.rmannibucau.sirona.javaagent.listener.CounterListener.excludes=container:jvm\n\ncom.github.rmannibucau.sirona.store.counter.CounterDataStore=com.github.rmannibucau.sirona.store.counter.CsvLoggingCounterDataStore\n\ncom.github.rmannibucau.sirona.csvlogging.counter.period=5000\ncom.github.rmannibucau.sirona.csvlogging.counter.clearAfterCollect=true\n\ncom.github.rmannibucau.sirona.javaagent.path.tracking.activate=false\n\n```", "```java\nMAVEN_OPTS=\"-javaagent:sirona-javaagent.jar\" mvn embedded-glassfish:run\n```", "```java\nsept. 23, 2017 12:16:32 PM com.github.rmannibucau.sirona.store.counter.LoggingCounterDataStore pushCountersByBatch\nINFOS: \"com.github.rmannibucau.quote.manager.service.ProvisioningService$Data.getQuoteSummary()\";\"performances\";70;1;3045.0;157.0;842.514285714286;58976.0;622.1554571298391\nsept. 23, 2017 12:16:32 PM com.github.rmannibucau.sirona.store.counter.LoggingCounterDataStore pushCountersByBatch\nINFOS: \"com.github.rmannibucau.quote.manager.service.QuoteService$Proxy$_$$_WeldSubclass.weld$$$46()\";\"performances\";1;1;6054.0;6054.0;6054.0;6054.0;0.\n```", "```java\nMAVEN_OPTS=\"-Djava.util.logging.SimpleFormatter.format=%5\\$s%6\\$s%n -javaagent:sirona-javaagent.jar\"\n```", "```java\n\"com.github.rmannibucau.quote.manager.service.QuoteService$Proxy$_$$_WeldSubclass.weld$$$94()\";\"performances\";1;1;4347.0;4347.0;4347.0;4347.0;0.0\n\"com.github.rmannibucau.quote.manager.service.QuoteService$Proxy$_$$_WeldSubclass.weld$$$98()\";\"performances\";1;1;3842.0;3842.0;3842.0;3842.0;0.0\n\"com.github.rmannibucau.quote.manager.service.QuoteService$Proxy$_$$_WeldSubclass.weld$$$102()\";\"performances\";1;1;4186.0;4186.0;4186.0;4186.0;0.0\n\"com.github.rmannibucau.quote.manager.model.Quote._persistence_new(org.eclipse.persistence.internal.descriptors.PersistenceObject)\";\"performances\";11;1;15760.0;4272.0;8134.545454545455;89480.0;3191.1807959949983\n\"com.github.rmannibucau.quote.manager.service.QuoteService.mutate(java.lang.String,java.util.function.Function)\";\"performances\";10;1;1.3095653E7;5517805.0;9319597.6;9.3195976E7;2502831.398655584\n\"com.github.rmannibucau.quote.manager.service.ProvisioningService$Data.getQuoteSummary()\";\"performances\";70;1;7909.0;519.0;1455.4142857142854;101879.0;1239.6496056226922\n```", "```java\ncom.github.rmannibucau.sirona.javaagent.listener.CounterListener.includes=prefix:com.github.rmannibucau.quote.manager,\\\n    prefix:sun.net.www.protocol.http.HttpURLConnection\ncom.github.rmannibucau.sirona.javaagent.listener.CounterListener.excludes=prefix:oracle\n\ncom.github.rmannibucau.sirona.store.counter.CounterDataStore=com.github.rmannibucau.sirona.store.counter.CsvLoggingCounterDataStore\n\ncom.github.rmannibucau.sirona.csvlogging.counter.period=5000\ncom.github.rmannibucau.sirona.csvlogging.counter.clearAfterCollect=true\n\ncom.github.rmannibucau.sirona.javaagent.path.tracking.activate=false\n\n```", "```java\n\"sun.net.www.protocol.http.HttpURLConnection.plainConnect()\";\"performances\";1;1;1.288844214E9;1.288844214E9;1.288844214E9;1.288844214E9;0.0\n\"sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(java.net.URL,java.net.Proxy,int)\";\"performances\";1;1;1.288132398E9;1.288132398E9;1.288132398E9;1.288132398E9;0.0\n....\n```", "```java\n@DataSourceDefinition(\n        name = \"java:app/jdbc/quote_manager\",\n        className = \"com.github.rmannibucau.sirona.jdbc.SironaDriver\",\n        url = \"jdbc:sirona:mysql://localhost:3306/quote_manager?delegateDriver=com.mysql.jdbc.Driver\",\n        user = \"root\",\n        password = \"password\"\n)\npublic class DataSourceConfiguration {\n}\n```"]