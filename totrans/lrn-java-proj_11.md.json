["```java\nimport java.io.FileReader;import java.io.IOException;\npublic class ReadFileExample {\n    public static void main(String[] args) {\n        try {\n            FileReader reader = new\n            FileReader(\"input.txt\");\n            int character;\n            while ((character = reader.read()) != -1) {\n                System.out.print((char) character);\n            }\n            reader.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```", "```java\nint character;while ((character = reader.read()) != -1) {\n    System.out.print((char) character);\n}\n```", "```java\nFileReader reader = new FileReader(\"input.txt\");  int character;\nwhile ((character = reader.read()) != -1) {\n  System.out.print((char) character);\n}\nreader.close();\n```", "```java\nimport java.io.FileWriter;import java.io.IOException;\npublic class WriteFileExample {\n    public static void main(String[] args) {\n        try {\n            FileWriter writer = new\n              FileWriter(\"output.txt\");\n            String content = \"I can write!\";\n            writer.write(content);\n            writer.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```", "```java\nint x = 2 / 0;\n```", "```java\nException in thread \"main\" java.lang.ArithmeticException: /by zero\n    at ThrowingExceptions.main(ThrowingExceptions.java:3)\n```", "```java\nthrow new IllegalArgumentException(\"Age cannot benegative.\");\n```", "```java\npublic class InvalidAgeException extends Exception {    public InvalidAgeException() {\n        super();\n    }\n    public InvalidAgeException(String message) {\n        super(message);\n    }\n    public InvalidAgeException(Exception e) {\n        super(e);\n    }\n}\n```", "```java\n public static void read(String fileName) throws   IOException {\n    FileReader = new FileReader(fileName);\n}\n```", "```java\ntry {  //... code that might throw an exception ...\n} catch(SomeException e) {\n  //... code that handles the exception ...\n}\n```", "```java\nimport java.io.FileReader;import java.io.IOException;\npublic class ReadingFile {\n    public static void main(String[] args) {\n        try {\n            FileReader fr = new FileReader(\"input.txt\");\n            int character;\n            while ((character = fr.read()) != -1) {\n                System.out.print((char) character);\n            }\n            fr.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```", "```java\npublic class MultipleCatchExample {    public static void main(String[] args) {\n        try {\n            FileReader fr= new FileReader(\"input.txt\");\n            int character;\n            while ((character = fr.read()) != -1) {\n                System.out.print((char) character);\n            }\n            fr.close();\n        } catch (FileNotFoundException e) {\n            System.out.println(\"Not found:\" +\n              e.getMessage());\n        } catch (IOException e) {\n            System.out.println(\"IO error:\" +\n              e.getMessage());\n        }\n    }\n}\n```", "```java\npublic class TryCatchFinallyExample {    public static void main(String[] args) {\n        try {\n            // Code that might throw an exception\n        } catch (Exception e) {\n            System.out.println(\"Oops: \" + e.getMessage());\n        } finally {\n            System.out.println(\"This code will always\n              run.\");\n        }\n    }\n}\n```", "```java\nimport java.io.*; public class FileResourceCleanup {\n    public static void main(String[] args) {\n        FileReader reader = null;\n        try {\n            reader = new FileReader(\"input.txt\");\n            int character;\n            while ((character = reader.read()) !=-1){\n                System.out.print((char) character);\n            }\n        } catch (IOException e) {\n            System.out.println(\"Err: \" + e.getMessage());\n        } finally {\n            if (reader != null){\n                try {\n                    reader.close();\n                } catch (IOException e) {\n                    System.out.println(\"Err closing: \" +\n                      e.getMessage());\n                }\n            }\n        }\n    }\n}\n```", "```java\nFileReader reader = null;\n```", "```java\ntry (FileReader fileReader = new FileReader(\"input.txt\")) {    int character;\n    StringBuilder content = new StringBuilder();\n    while ((character = fileReader.read()) != -1) {\n        content.append((char) character);\n    }\n    System.out.println(content.toString());\n} catch (IOException e) {\n    System.out.println(\"Oops: \" + e.getMessage());\n}\n```", "```java\ntry (FileReader fileReader = new FileReader(\"input.txt\");     BufferedReader bufferedReader = new BufferedReader\n       (fileReader);\n     FileWriter fileWriter = new FileWriter(\"output.txt\");\n     BufferedWriter bufferedWriter = new BufferedWriter\n       (fileWriter)) {\n    String line;\n    while ((line = bufferedReader.readLine()) != null) {\n        String uppercaseLine = line.toUpperCase();\n        bufferedWriter.write(uppercaseLine);\n        bufferedWriter.newLine();\n    }\n} catch (IOException e) {\n    System.out.println(\"Oops: \" + e.getMessage());\n}\n```", "```java\npublic class SomeResource implements AutoCloseable {    public void doSomething() {\n        System.out.println(\"Doing something...\");\n    }\n    @Override\n    public void close() {\n        System.out.println(\"Resource closed.\");\n    }\n}\n```", "```java\npublic class SomeResourceExample {    public static void main(String[] args) {\n        try (SomeResource resource = new SomeResource()) {\n            resource.doSomething();\n        }\n    }\n}\n```", "```java\nDoing something...Resource closed.\n```", "```java\npublic void readFile(String filename) throws IOException {    // Read file code\n}\n```", "```java\nclass Parent {    public void readStuff() throws IOException {\n        // Parent implementation\n    }\n}\nclass Child extends Parent {\n    @Override\n    public void readStuff () throws FileNotFoundException {\n        // Child implementation\n    }\n}\n```", "```java\n    Tyrannosaurus: CarnivoreBrachiosaurus: HerbivoreTriceratops: HerbivoreVelociraptor: CarnivoreStegosaurus: HerbivoreSpinosaurus: CarnivoreAnkylosaurus: Herbivore\n    ```"]