["```java\n@Configuration\n@EnableWebMvc\n@ComponentScan(basePackages = {\"com.springcookbook.controller\"})\npublic class AppConfig {  \n}\n```", "```java\n    @Controller\n    public class UserController {\n    ...\n    }\n    ```", "```java\n    @RequestMapping(\"/user/list\")\n    public void userList() {\n    ...\n    }\n    ```", "```java\n    <dependency>\n      <groupId>javax.servlet</groupId>\n      <artifactId>jstl</artifactId>\n      <version>1.2</version>\n    </dependency>\n    ```", "```java\n    @Bean\n    public ViewResolver jspViewResolver(){\n        InternalResourceViewResolver resolver = new InternalResourceViewResolver();\n        resolver.setViewClass(JstlView.class);\n        resolver.setPrefix(\"/WEB-INF/jsp/\");\n        resolver.setSuffix(\".jsp\");\n        return resolver;\n    }\n    ```", "```java\n    @RequestMapping(\"/user/list\")\n    public void userList() {\n      ...\n    }\n    ```", "```java\n    <html>\n    <body>\n      There are many users.\n    </body>\n    </html>\n    ```", "```java\n@RequestMapping(\"/user/list\")\npublic String userList() {\n  return \"my_friends\";\n}\n```", "```java\n      @RequestMapping(\"/user/list\")\n      public void userList(Model model) {\n      ...\n    ```", "```java\n    model.addAttribute(\"nbUsers\", 13);\n    ```", "```java\n    <p>There are ${nbUsers} users</p>\n    ```", "```java\n<p>There are 13 users</p>\n```", "```java\n@RequestMapping(\"/user/{id}/{field}\")\npublic void showUserField(@PathVariable(\"id\") Long userId, @PathVariable(\"field\") String field) {\n...\n}\n```", "```java\n    @Controller\n    @RequestMapping(\"/user\")\n    public class UserController {\n    ...\n    }\n    ```", "```java\n    @RequestMapping(\"/list\")\n    public void userList() {\n      ...\n    }\n\n    @RequestMapping(\"/add\")\n    public void addUser() {\n      ...\n    }\n    ```", "```java\n    <dependency>\n      <groupId>org.apache.tiles</groupId>\n      <artifactId>tiles-servlet</artifactId>\n      <version>3.0.5</version>\n    </dependency>\n\n    <dependency>\n      <groupId>org.apache.tiles</groupId>\n      <artifactId>tiles-jsp</artifactId>\n      <version>3.0.5</version>\n    </dependency> \n    ```", "```java\n    // declare Tiles configuration file\n    @Bean\n    public TilesConfigurer tilesConfigurer() {\n      TilesConfigurer tilesConfigurer = new TilesConfigurer();\n      final String[] definitions = { \"/WEB-INF/tiles.xml\" };\n        tilesConfigurer.setDefinitions(definitions);\n      return tilesConfigurer;\n    }\n\n    // declare Tiles as a view resolver\n    @Bean\n    public ViewResolver tilesViewResolver() {\n      TilesViewResolver resolver = new TilesViewResolver();\n      return resolver;\n    }\n    ```", "```java\n    <tiles-definitions>  \n\n        <definition name=\"template\" template=\"/WEB-INF/jsp/templates/template.jsp\" />\n\n        <definition name=\"*\" extends=\"template\">\n            <put-attribute name=\"body\" value=\"/WEB-INF/jsp/{1}.jsp\" />\n        </definition>\n\n    </tiles-definitions>\n    ```", "```java\n    <!DOCTYPE HTML>\n    <%@ taglib prefix=\"tiles\" uri=\"http://tiles.apache.org/tags-tiles\" %>\n\n    <html>\n    <head>\n        <meta charset=\"utf-8\">\n    </head>\n    <body>\n        <h1>Spring Cookbook</h1>\n\n        <tiles:insertAttribute name=\"body\" />    \n    </body>\n    </html>\n    ```", "```java\n    ...\n    return \"home\";\n    ```", "```java\n<%@ taglib prefix=\"tiles\" uri=\"http://tiles.apache.org/tags-tiles\" %>\n```", "```java\n/jsp\n |- /user\n |   |- list.jsp\n |   |- add.jsp\n |- /article\n |   |- list.jsp\n |   |- add.jsp\n |- home.jsp\n```", "```java\n<definition name=\"*/*\" extends=\"template\">\n    <put-attribute name=\"body\" value=\"/WEB-INF/jsp/{1}/{2}.jsp\" />\n</definition>    \n```", "```java\n    <definition name=\"template1\" template=\"/WEB-INF/templates/template1.jsp\" />\n    <definition name=\"template2\" template=\"/WEB-INF/templates/template2.jsp\" />\n\n    <definition name=\"main_*\" extends=\"template1\">\n        <put-attribute name=\"body\" value=\"/WEB-INF/jsp/{1}.jsp\" />\n    </definition>\n\n    <definition name=\"secondary_*\" extends=\"template2\">\n        <put-attribute name=\"body\" value=\"/WEB-INF/jsp/{1}.jsp\" />\n    </definition>\n```", "```java\n    <definition name=\"*\" extends=\"template\">\n      <put-attribute name=\"title\" value=\"{1}.title\" />\n    ...\n    ```", "```java\n    <!DOCTYPE HTML>\n    <%@ taglib prefix=\"spring\" uri=\"http://www.springframework.org/tags\" %>\n    <%@ taglib prefix=\"tiles\" uri=\"http://tiles.apache.org/tags-tiles\" %>\n\n    <c:set var=\"titleKey\">        \n      <tiles:getAsString name=\"title\" />\n    </c:set>\n\n    <html>\n    <head>\n       <title><spring:message code=\"${titleKey}\" />/title>\n    </head>\n    <body>\n      <h1><spring:message code=\"${titleKey}\" /></h1>\n      ... \n    ```", "```java\n    home.title=Home\n    ```", "```java\n    public class PerformanceInterceptor extends HandlerInterceptorAdapter {\n    ```", "```java\n    @Override\n    public boolean preHandle(HttpServletRequest request,\n        HttpServletResponse response, Object handler) throws Exception {\n        …\n      return true;\n    }\n\n    @Override\n    public void postHandle(HttpServletRequest request,\n        HttpServletResponse response, Object handler,\n        ModelAndView modelAndView) throws Exception {\n      ...\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request,\n        HttpServletResponse response, Object handler, Exception ex)\n        throws Exception {\n      ...\n    }\n    ```", "```java\n    @Configuration\n    @EnableWebMvc\n    public class AppConfig extends WebMvcConfigurerAdapter{\n    ...\n    ```", "```java\n    @Bean\n    public HandlerInterceptor performanceInterceptor() {\n      PerformanceInterceptor interceptor;\n      interceptor = new PerformanceInterceptor();\n      return interceptor;\n    }\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n      registry.addInterceptor(performanceInterceptor());\n    }\n    ```", "```java\n@Override\npublic void addInterceptors(InterceptorRegistry registry) {\n  registry.addInterceptor(performanceInterceptor())\n.addPathPatterns(\"/home\", \"/user/*\");\n}\n```", "```java\n    <%@ taglib prefix=\"spring\" uri=\"http://www.springframework.org/tags\" %>\n\n    <html>\n    <body>\n      <h1><spring:message code=\"home.title\" /></h1>\n      <p><spring:message code=\"home.intro\" /></p>\n\n      <p>\n        <a href=\"?lang=en\">English</a> |\n        <a href=\"?lang=fr\">French</a>\n      </p>\n    </body>\n    </html>\n    ```", "```java\n    home.title=Home\n    home.intro=This is a magnificent home page, isn't it?\n    ```", "```java\n    home.title=Accueil\n    home.intro=Splendide page d'accueil, non ?\n    ```", "```java\n    @Bean\n    public MessageSource messageSource() {\n      ReloadableResourceBundleMessageSource messageSource = new ReloadableResourceBundleMessageSource();\n      messageSource.setBasename(\"classpath:/messages\");\n      messageSource.setUseCodeAsDefaultMessage(true);\n      return messageSource;\n    }\n    ```", "```java\n    @Configuration\n    @EnableWebMvc\n    public class AppConfig extends WebMvcConfigurerAdapter{\n    ... \n    ```", "```java\n    @Bean\n    public HandlerInterceptor localeChangeInterceptor() {\n      LocaleChangeInterceptor interceptor = new LocaleChangeInterceptor();\n      interceptor.setParamName(\"lang\");\n      return interceptor;\n    }\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n      registry.addInterceptor(localeChangeInterceptor()); }\n    ```", "```java\n    @Bean\n    public LocaleResolver localeResolver() {\n      CookieLocaleResolver localeResolver = new CookieLocaleResolver();\n      localeResolver.setDefaultLocale(new Locale(\"en\"));\n      return localeResolver;\n    }\n    ```", "```java\nLocale locale = LocaleContextHolder.getLocale();\nString lang = locale.getLanguage(); // fr\nString language = locale.getDisplayLanguage(); // French\nString language2 = locale.getDisplayLanguage(locale); // français\n```", "```java\n    @Controller\n    @RequestMapping(\"{en|fr}/user/*\")\n    public class UserController {\n      @RequestMapping(\"list\")\n      public String userList(Model model) {\n        ...\n      }\n    }.\n    ```", "```java\n    <spring:url value=\"/${lang}/home\" var=\"home\" />\n    <a href=\"${home}\">Home</a>\n    ```"]