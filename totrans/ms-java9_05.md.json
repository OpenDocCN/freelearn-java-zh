["```java\n    module com.three19.irisScan \n    {\n      // modules that com.three19.irisScan depends upon\n      requires com.three19.irisCore;\n      requires com.three19.irisData;\n\n      // export packages for other modules that are dependent\n         upon com.three19.irisScan\n      exports com.three19.irisScan.biometric;\n    }\n```", "```java\n    module java.base \n    {\n      exports java.io;\n      exports java.lang;\n      exports java.lang.annotation;\n      exports java.lang.invoke;\n      exports java.lang.module;\n      exports java.lang.ref;\n      exports java.lang.reflect;\n      exports java.math;\n      exports java.net;\n      exports java.net.spi;\n      exports java.nio;\n      exports java.nio.channels;\n      exports java.nio.channels.spi;\n      exports java.nio.charset;\n      exports java.nio.charset.spi;\n      exports java.nio.file;\n      exports java.nio.file.attribute;\n      exports java.nio.file.spi;\n      exports java.security;\n      exports java.security.aci;\n      exports java.security.cert;\n      exports java.security.interfaces;\n      exports java.security.spec;\n      exports java.text;\n      exports java.text.spi;\n      exports java.time;\n      exports java.time.chrono;\n      exports java.time.format;\n      exports java.time.temporal;\n      exports java.time.zone;\n      exports java.util;\n      exports java.util.concurrent;\n      exports java.util.concurrent.atomic;\n      exports java.util.concurrent.locks;\n      exports java.util.function;\n      exports java.util.jar;\n      exports java.util.regex;\n      exports java.util.spi;\n      exports java.util.stream;\n      exports java.util.zip;\n      exports java.crypto;\n      exports java.crypto.interfaces;\n      exports java.crytpo.spec;\n      exports java.net;\n      exports java.net,ssi;\n      exports java.security.auth;\n      exports java.security.auth.callbak;\n      exports java.security.auth.login;\n      exports java.security.auth.spi;\n      exports java.security.auth.x500;\n      exports java.security.cert;\n    }\n```", "```java\n    module com.three19.irisScan \n    {\n      // modules that com.three19.irisScan depends upon\n      requires java.base; // optional inclusion \n      requires com.three19.irisCore;\n      requires com.three19.irisData;\n\n      // export packages for other modules that are dependent\n         upon com.three19.irisScan\n      exports com.three19.irisScan.biometric;\n    }\n```", "```java\nsrc/com.three19.irisScan/module-info.java: error: module not found: com.three19.irisScan \nrequires com.three19.irisCore;\n ^\n1 error\n```", "```java\nError occurred during initialization of VM\njava.lang.module.ResolutionException: Module com.three19.irisCore not found, required by com.three19.irisScan app\n```", "```java\nsrc/com.three19.access/com/three19/access/Main.java: error: irisScanResult is not accessible because package com.three19.irisScanner.internal is not exported\n private irisSanResult scan1 = new irisScanResult();\n ^\n1 error\n```", "```java\nException in thread \"main\" java.lang.IllegalAccessError: class com.three19.access.Main (in module: com.three19.access) cannot access class com.three19.irisScanner.internal.irisScanResult (in module: com.three19.irisScan), com.three19.irisScanner.internal is not exported to com.three19.access.\n```", "```java\n    /*\n    * This is a simple password generation app \n    */\n\n    import java.util.Scanner;\n\n    public class GeneratePassword \n    {\n      public static void main(String[] args) \n      { \n        // passwordLength int set up to easily change the schema \n        int passwordLength = 8; //default value\n\n        Scanner in = new Scanner(System.in); \n        System.out.println(\"How long would you like your\n         password (min 8)?\"); \n        int desiredLength; \n        desiredLength = in.nextInt(); \n\n        // Test user input \n        if (desiredLength >8) \n        { \n          passwordLength = desiredLength; \n        } \n\n        // Generate new password \n        String newPassword = createNewPassword(passwordLength); \n\n        // Prepare and provide output \n        String output = \"\\nYour new \" + passwordLength \n         + \"-character password is: \"; \n        System.out.println(output + newPassword); \n      }\n\n      public static String createNewPassword(int lengthOfPassword) \n      { \n        // Start with an empty String \n        String newPassword = \"\";\n\n        // Populate password  \n        for (int i = 0; i < lengthOfPassword; i++) \n        { \n          newPassword = newPassword + randomizeFromSet(\n            \"aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ\n             0123456789+-*/?!@#$%&\"); \n        } \n\n        return newPassword; \n      }\n\n      public static String randomizeFromSet(String characterSet) \n      { \n        int len = characterSet.length();\n        int ran = (int)(len * Math.random());\n        return characterSet.substring(ran, ran + 1);\n      }\n    }\n```", "```java\n    jar:file:<path-to-jar>!<path-to-file-in-jar>\n```", "```java\n    jrt:/<module-name>/<path-to-file-in-module>\n```", "```java\n    jrt:/[$MODULE[/$PATH]]\n```", "```java\n    public class Underscore \n    { \n      public static void main(String[] args) \n      {\n        Object _ = new Object();\n        System.out.println(\"This ran successfully.\");\n      }\n    }\n```", "```java\nUnderscore.java:2: error: as of release 9, '_' is a keyword, and may not be used as a legal identifier.\n```", "```java\n    import sun.misc.BASE64Encoder;\n\n    public class DependencyTest \n    {\n      public static void main(String[] args) throws\n       InstantiationException, IllegalAccessException \n      {\n        BASE64Encoder.class.newInstance();\n        System.out.println(\"This Java app ran successfully.\");\n      }\n    }\n```", "```java\n    --add-opens module/package=target-module(,target-module)*\n```", "```java\n    --add-exports <source-module>/<package>=<target-module>(\n     ,<target-module>)*\n```", "```java\n    --add-exports:java.management/sun.management\n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <jnlp spec=\"1.0+\" codebase=\"\" href=\"\">\n      <information>\n        <title>Sample/title>\n        <vendor>The Sample Vendor</vendor>\n        <icon href=\"sample-icon.jpg\"/>\n        <offline-allowed/>\n     </information>\n     <resources>\n       <!-- Application Resources -->\n       <j2se version=\"1.6+\"  \n        href=\"http://java.sun.com/products/autodl/j2se\"/>\n       <jar href=\"Sample-Set.jar\" main=\"true\" />\n     </resources>\n     <application-desc\n       name=\"Sample Application\"\n       main-class=\"com.vendor.SampleApplication\" \n       width=\"800\" \n       height=\"500\">\n       <argument>Arg1</argument>\n       <argument>Arg2</argument>\n       <argument>Arg3</argument>\n     </application-desc>\n     <update check=\"background\"/>\n    </jnlp>\n```", "```java\n    <application-desc \n      name=\"Another Sample Application\"\n      type=\"Java\" main-class=\"com.vendor.SampleApplication2\" \n      width=\"800\" \n      height=\"500\">\n      <argument>Arg1</argument>\n      <argument>Arg2</argument>\n      <argument>Arg3</argument>\n    </application-desc>\n```", "```java\n    <application-desc \n      name=\"A Great JavaFX Application\"\n      type=\"JavaFX\" main-class=\"com.vendor.GreatJavaFXApplication\" \n      width=\"800\" \n      height=\"500\">\n      <argument>Arg1</argument>\n      <argument>Arg2</argument>\n      <argument>Arg3</argument>\n    </application-desc>\n```", "```java\n    <application-desc\n      name=\"My JRuby Application\"\n      type=\"JRuby\"\n      main-class=\"com.vendor.JRubyApplication\" \n      width=\"800\" \n      height=\"500\">\n      <argument>Arg1</argument>\n      <argument>Arg2</argument>\n      <argument>Arg3</argument>\n      <param name=\"Parameter1\" value=\"Value1\"/>\n      <param name=\"Parameter2\" value=\"Value2\"/>\n      <param name=\"Parameter3\" value=\"Value3\"/>\n    </application-desc>\n```", "```java\n$ git clone https://github.com/gcuisinier/jenv.git ~/.jenv\n```", "```java\n$ brew install jenv\n```", "```java\n$ echo 'export PATH=\"$HOME/.jenv/bin:$PATH\"' >> ~/.bash_profile\n$ echo 'eval \"$(jenv init -)\"' >> ~/.bash_profile\n```", "```java\n$ echo 'export PATH=\"$HOME/.jenv/bin:$PATH\"' >> ~/.zshrc\n$ echo 'eval \"$(jenv init -)\"' >> ~/.zshrc\n```", "```java\n$ jenv add /Library/Java/JavaVirtualMachines/jdk17011.jdk/Contents/Home\n```", "```java\n$ jenv add /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home\n  oracle64-1.6.0.39 added\n$ jenv add /Library/Java/JavaVirtualMachines/jdk17011.jdk/Contents/Home\n  oracle64-1.7.0.11 added\n```"]