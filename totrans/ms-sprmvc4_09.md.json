["```java\n./gradlew assemble\n\n```", "```java\n$ cf login -a api.run.pivotal.io -u <account email> -p <password> -o <organization> -s development\n\nAPI endpoint: api.run.pivotal.io\nAuthenticating...\nOK\n\nTargeted org <account org>\n\nTargeted space development\n\nAPI endpoint:   https://api.run.pivotal.io (API version: 2.33.0) \nUser:           <account email> \nOrg:            <account organization> \nSpace:          <account space>\n\n```", "```java\n$ cf push your-app-name -p build/libs/masterSpringMvc-0.0.1-SNAPSHOT.jar\n\nCreating app msmvc4 in org Northwest / space development as wlund@pivotal.io...\nOK\nCreating route msmvc4.cfapps.io...\nOK\nBinding msmvc4.cfapps.io to msmvc4...\nOK\nUploading msmvc4...\nUploading app files from: build/libs/masterSpringMvc-0.0.1-SNAPSHOT.jar\nUploading 690.8K, 108 files\nDone uploading \nOK\nStarting app msmvc4 in org <Organization> / space development as <account email>\n-----> Downloaded app package (15M)\n-----> Java Buildpack Version: v3.1 | https://github.com/cloudfoundry/java-buildpack.git#7a538fb\n-----> Downloading Open Jdk JRE 1.8.0_51 from https://download.run.pivotal.io/openjdk/trusty/x86_64/openjdk-1.8.0_51.tar.gz (1.5s)\n Expanding Open Jdk JRE to .java-buildpack/open_jdk_jre (1.4s)\n-----> Downloading Open JDK Like Memory Calculator 1.1.1_RELEASE from https://download.run.pivotal.io/memory-calculator/trusty/x86_64/memory-calculator-1.1.1_RELEASE (0.1s)\n Memory Settings: -Xmx768M -Xms768M -XX:MaxMetaspaceSize=104857K -XX:MetaspaceSize=104857K -Xss1M\n-----> Downloading Spring Auto Reconfiguration 1.7.0_RELEASE from https://download.run.pivotal.io/auto-reconfiguration/auto-reconfiguration-1.7.0_RELEASE.jar (0.0s)\n-----> Uploading droplet (59M)\n0 of 1 instances running, 1 starting\n1 of 1 instances running\n\nApp started\nOK\nApp msmvc4 was started using this command `CALCULATED_MEMORY=$($PWD/.java-buildpack/open_jdk_jre/bin/java-buildpack-memory-calculator-1.1.1_RELEASE -memorySizes=metaspace:64m.. -memoryWeights=heap:75,metaspace:10,stack:5,native:10 -totMemory=$MEMORY_LIMIT) && SERVER_PORT=$PORT $PWD/.java-buildpack/open_jdk_jre/bin/java -cp $PWD/.:$PWD/.java-buildpack/spring_auto_reconfiguration/spring_auto_reconfiguration-1.7.0_RELEASE.jar -Djava.io.tmpdir=$TMPDIR -XX:OnOutOfMemoryError=$PWD/.java-buildpack/open_jdk_jre/bin/killjava.sh $CALCULATED_MEMORY org.springframework.boot.loader.JarLauncher`\n\nShowing health and status for app msmvc4 in org <Organization> / space development as <Account Email>\nOK\n\nrequested state: started\ninstances: 1/1\nusage: 1G x 1 instances\nurls: msmvc4.cfapps.io\nlast uploaded: Tue Jul 28 22:04:08 UTC 2015\nstack: cflinuxfs2\nbuildpack: java-buildpack=v3.1-https://github.com/cloudfoundry/java-buildpack.git#7a538fb java-main open-jdk-like-jre=1.8.0_51 open-jdk-like-memory-calculator=1.1.1_RELEASE spring-auto-reconfiguration=1.7.0_RELEASE\n\n state     since                    cpu    memory         disk         details \n#0   running   2015-07-28 03:05:04 PM   0.0%   450.9M of 1G   137M of 1G\n\n```", "```java\nspring.profiles.active=prod,redis\n\nspring.redis.host=${cloud.services.redis.connection.host}\nspring.redis.port=${cloud.services.redis.connection.port}\nspring.redis.password=${cloud.services.redis.connection.password}\n\nupload.pictures.uploadPath=file:/tmp\n```", "```java\n@Bean\n@Profile({\"cloud\", \"heroku\"})\npublic static ConfigureRedisAction configureRedisAction() {\n    return ConfigureRedisAction.NO_OP;\n}\n```", "```java\n> brew install heroku-toolbelt\n\n```", "```java\n> heroku login\nEnter your Heroku credentials.\nEmail: geowarin@mail.com\nPassword (typing will be hidden):\nAuthentication successful.\n\n```", "```java\n> heroku create appname --region eu\nCreating appname... done, region is eu\nhttps://appname.herokuapp.com/ | https://git.heroku.com/appname.git\nGit remote heroku added\n\n```", "```java\n> git remote -v\nheroku    https://git.heroku.com/appname.git (fetch)\nheroku    https://git.heroku.com/appname.git (push)\norigin    https://github.com/Mastering-Spring-MVC-4/mastering-spring-mvc4-code.git (fetch)\norigin    https://github.com/Mastering-Spring-MVC-4/mastering-spring-mvc4-code.git (push)\n\n```", "```java\ntask stage(type: Copy, dependsOn: [clean, build]) {\n    from jar.archivePath\n    into project.rootDir\n    rename {\n        'app.jar'\n    }\n}\nstage.mustRunAfter(clean)\n\nclean << {\n    project.file('app.jar').delete()\n}\n```", "```java\nweb: java -Dserver.port=$PORT -Dspring.profiles.active=heroku,prod -jar app.jar\n```", "```java\nspring.social.twitter.appId=${twitterAppId}\nspring.social.twitter.appSecret=${twitterAppSecret}\n```", "```java\n> heroku config:set twitterAppId=appId\n```", "```java\n> git push heroku master\nCounting objects: 1176, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (513/513), done.\nWriting objects: 100% (1176/1176), 645.63 KiB | 0 bytes/s, done.\nTotal 1176 (delta 485), reused 1176 (delta 485)\nremote: Compressing source files... done.\nremote: Building source:\nremote:\nremote: -----> Gradle app detected\nremote: -----> Installing OpenJDK 1.8... done\nremote: -----> Building Gradle app...\nremote:        WARNING: The Gradle buildpack is currently in Beta.\nremote: -----> executing ./gradlew stage\nremote:        Downloading https://services.gradle.org/distributions/gradle-2.3-all.zip\n\n...\n\nremote:        :check\nremote:        :build\nremote:        :stage\nremote:\nremote:        BUILD SUCCESSFUL\nremote:\nremote:        Total time: 2 mins 36.215 secs\nremote: -----> Discovering process types\nremote:        Procfile declares types -> web\nremote:\nremote: -----> Compressing... done, 130.1MB\nremote: -----> Launching... done, v4\nremote:        https://appname.herokuapp.com/ deployed to Heroku\nremote:\nremote: Verifying deploy.... done.\nTo https://git.heroku.com/appname.git\n* [new branch]      master -> master\n\n```", "```java\nheroku addons:create heroku-redis:test\n\n```", "```java\n> heroku config\n=== masterspringmvc Config Vars\nJAVA_OPTS:        -Xmx384m -Xss512k -XX:+UseCompressedOops\nREDIS_URL:        redis://x:xxx@ec2-xxx-xx-xxx-xxx.eu-west-1.compute.amazonaws.com:6439\n\n```", "```java\n@Configuration\n@Profile(\"redis\")\n@EnableRedisHttpSession\npublic class RedisConfig {\n\n    @Bean\n    @Profile(\"heroku\")\n    public RedisConnectionFactory redisConnectionFactory() throws URISyntaxException {\n        JedisConnectionFactory redis = new JedisConnectionFactory();\n\n        String redisUrl = System.getenv(\"REDIS_URL\");\n        URI redisUri = new URI(redisUrl);\n        redis.setHostName(redisUri.getHost());\n        redis.setPort(redisUri.getPort());\n        redis.setPassword(redisUri.getUserInfo().split(\":\", 2)[1]);\n\n        return redis;\n    }\n\n    @Bean\n         @Profile({\"cloud\", \"heroku\"})\n    public static ConfigureRedisAction configureRedisAction() {\n        return ConfigureRedisAction.NO_OP;\n    }\n}\n```", "```java\nweb: java -Dserver.port=$PORT -Dspring.profiles.active=heroku,redis,prod -jar app.jar\n```"]