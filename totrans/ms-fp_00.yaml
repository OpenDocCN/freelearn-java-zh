- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Functional programming languages, such as Java, Scala, and Clojure, are attracting
    attention as an efficient way to handle the new requirements for programming multi-processor
    and high-availability applications. This book will teach you functional programming
    with the help of Scala. The book takes a thought-leadership approach, gently introducing
    you to functional programming and taking you all the way to becoming a master
    at the paradigm. Beginning with an introduction to functional programming, the
    book gradually moves forward teaching you how to write declarative code, making
    use of functional types and values. After covering the basics, we will discuss
    the more advanced concepts in functional programming.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 函数式编程语言，如 Java、Scala 和 Clojure，作为处理多处理器和高可用性应用程序新要求的有效方式，正吸引人们的注意。本书将帮助你通过 Scala
    学习函数式编程。本书采用领导思想的方法，温和地介绍函数式编程，并带你成为这一范式的专家。从函数式编程的介绍开始，本书逐步前进，教你如何编写声明式代码，利用函数式类型和值。在介绍基础知识之后，我们将讨论函数式编程中的更高级概念。
- en: We will cover the concepts of pure functions and type classes, problems they
    aim to solve, and how to use them in practice. We will see how libraries can be
    used for purely functional programming. We will look at the broad family of libraries
    for functional programming. Finally, we will discuss some of the more advanced
    patterns in the functional programming world, such as Monad Transformers and Tagless
    Final. After covering the purely functional approach to programming, we will look
    into the subject of parallel programming. We will introduce the Actor model and
    how it is implemented in the modern functional languages. By the end of this book,
    you will have mastered the concepts entailing functional programming alongside
    OOP to build robust applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖纯函数和类型类等概念，它们旨在解决的问题，以及如何在实践中使用它们。我们将看到如何使用库进行纯函数式编程。我们将探讨函数式编程的广泛库家族。最后，我们将讨论函数式编程世界中的一些更高级的模式，例如
    Monad Transformers 和 Tagless Final。在介绍完纯函数式编程方法之后，我们将探讨并行编程的主题。我们将介绍 Actor 模型以及它在现代函数式语言中的实现方式。到这本书结束时，你将掌握包含面向对象（OOP）和函数式编程概念，以构建健壮应用程序。
- en: Who this book is for
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: If you are from an imperative and OOP background, this book will guide you through
    the world of functional programming, irrespective of which programming language
    you use.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你来自命令式和面向对象（OOP）的背景，这本书将引导你进入函数式编程的世界，无论你使用哪种编程语言。
- en: What this book covers
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](485603d0-9f5e-4644-bd73-c46a8a317448.xhtml), *The Declarative Programming
    Style*, covers the main idea of declarative style of abstracting away repeating
    algorithmic patterns and control flows so that, with one statement, it is possible
    to describe what otherwise would have been 10 lines of imperative code. Functional
    languages usually have an elaborate infrastructure to make such an approach especially
    relevant and usable. One good way to feel this difference is to have a look at
    the difference in programming with Java and Scala collections—the former employs
    the imperative style and latter the functional style.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章](485603d0-9f5e-4644-bd73-c46a8a317448.xhtml)，*声明式编程风格*，介绍了声明式风格的主要思想，即通过抽象重复的算法模式和流程控制，使得仅用一个语句就能描述原本需要10行命令式代码的内容。函数式语言通常具有复杂的基础设施，使这种方法特别相关和实用。一种感受这种差异的好方法是看看使用
    Java 和 Scala 集合编程的差异——前者采用命令式风格，而后者采用函数式风格。'
- en: '[Chapter 2](d5f23a0a-3dcb-433b-8bbe-b25ac17be59b.xhtml), *Functions and Lambdas*, will
    start with the concept familiar to an OOP programmer—a method. We will then explore
    some more advanced, functional concepts specific to functional programming—things
    such as lambdas, currying, generic type parameters, implicit arguments, and higher-order
    functions. We will see how higher-order functions may be useful to abstract control
    flow. Finally, we will look at the concept of partial functions.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章](d5f23a0a-3dcb-433b-8bbe-b25ac17be59b.xhtml)，*函数和 Lambda*，将从面向对象程序员熟悉的函数概念开始。然后我们将探索一些更高级的、特定于函数式编程的概念——例如
    Lambda、柯里化、泛型类型参数、隐式参数和高级函数。我们将看到高级函数如何有助于抽象控制流。最后，我们将探讨部分函数的概念。'
- en: '[Chapter 3](67d28304-c855-47aa-afb6-b74fa5a0dd28.xhtml), *Functional Data Structures*, explains
    a functional collections framework. It features a hierarchy of collections data
    types designed for different scenarios. It then moves to other data types that
    are not part of the collections framework but are often used in functional programming
    and hence deserve our attention. The data types are Option, Either, and Try. Finally,
    we will see how the data structures are separated from their behavior via an implicit
    mechanism, which is present in some advanced languages.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](67d28304-c855-47aa-afb6-b74fa5a0dd28.xhtml)，*函数式数据结构*，解释了一个函数式集合框架。它具有一系列针对不同场景设计的集合数据类型。然后转向其他不属于集合框架但常用于函数式编程的数据类型，因此值得我们关注。这些数据类型是Option、Either和Try。最后，我们将看到数据结构如何通过隐式机制与其行为分离，这种机制存在于一些高级语言中。'
- en: '[Chapter 4](939fdb5c-ce8e-49c7-9b0f-277210c5bf08.xhtml), *The Problem of Side
    Effects*, is about side effects that are ubiquitous in programming. Functional
    programming advocates for so-called pure functions—functions that do not produce
    any side effects, which means you can''t write a file from such a function, or
    contact the network. Why would functional programming advocate against functions
    that cause side effects? Is it possible to write a useful program using pure functions
    only? This chapter explores these questions.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](939fdb5c-ce8e-49c7-9b0f-277210c5bf08.xhtml)，*副作用问题*，讨论了编程中普遍存在的副作用。函数式编程倡导所谓的纯函数——不产生任何副作用的函数，这意味着你不能从这样的函数中写入文件，或接触网络。为什么函数式编程会反对产生副作用的函数？是否可能仅使用纯函数编写有用的程序？本章探讨了这些问题。'
- en: '[Chapter 5](12028d44-3c88-45ce-8ae1-abfa9f64039e.xhtml), *Effect Types - Abstracting
    Away Side Effects*, provides solutions to the problems of working with side effects
    in a pure way. The solution presented by purely functional programming is to turn
    the side effects you encounter into functional data structures. We will explore
    the process of identifying side effects and turning them into such data structures.
    Then, we will quickly realize functions that produce side effects usually work
    one with another. We will hence explore how one can combine these functions using
    the concept of the Monad.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](12028d44-3c88-45ce-8ae1-abfa9f64039e.xhtml)，*效果类型 - 抽象副作用*，提供了以纯方式处理副作用问题的解决方案。纯函数式编程提出的解决方案是将你遇到的所有副作用转换为函数式数据结构。我们将探讨识别副作用并将它们转换为这些数据结构的过程。然后，我们会很快意识到产生副作用的函数通常是一起工作的。因此，我们将探讨如何使用Monad的概念将这些函数组合起来。'
- en: '[Chapter 6](d1cb3932-deb8-4434-b179-44ad364420ff.xhtml), *Effect Types in Practice*, focuses
    on the material of the [Chapter 3](67d28304-c855-47aa-afb6-b74fa5a0dd28.xhtml), *Functional
    Data Structures*, from a new perspective. We will see how functional data structures
    have a deeper meaning to the data types-that of representing phenomena as data.
    A phenomenon is something that happens, such as an exception or a delay. By representing
    it in data we are able to shield ourselves from the effects of the phenomenon
    while preserving the information about it.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](d1cb3932-deb8-4434-b179-44ad364420ff.xhtml)，*实践中的效果类型*，从新的角度关注了[第3章](67d28304-c855-47aa-afb6-b74fa5a0dd28.xhtml)，*函数式数据结构*的内容。我们将看到函数式数据结构对数据类型有更深的意义——即作为数据表示现象。现象是某种发生的事情，例如异常或延迟。通过将其表示为数据，我们能够保护自己免受现象的影响，同时保留有关它的信息。'
- en: '[Chapter 7](a23f2254-09d2-4335-8b5f-a3f9256eec14.xhtml), *The Idea of the Type
    Classes*, explore how the Type Class pattern logically emerges from practical
    needs encountered when working with effect types.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](a23f2254-09d2-4335-8b5f-a3f9256eec14.xhtml)，*类型类的理念*，探讨了类型类模式如何从处理效果类型时遇到的实际需求中逻辑地产生。'
- en: '[Chapter 8](baec5eab-0c98-4407-8f73-9a1a2b9726c4.xhtml), *Basic Type Classes
    and Their Usage*, outlines the most frequently encountered type classes and their
    family in general. After discussing the motivation for the creation of type class
    systems, we proceed further to examine their structure and a few basic type classes
    from them. Type classes such as Monad and Applicative are frequently used in functional
    programming, so they deserve some special attention.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](baec5eab-0c98-4407-8f73-9a1a2b9726c4.xhtml)，*基本类型类及其用法*，概述了最常遇到的基本类型类及其家族。在讨论创建类型类系统的动机之后，我们进一步考察了它们的结构和从中派生的一些基本类型类。如Monad和Applicative这样的类型类在函数式编程中经常使用，因此值得特别注意。'
- en: '[Chapter 9](6b6045c0-bf4d-4ae9-adc1-fdaf23985329.xhtml), *Libraries for Pure
    Functional Programming*, discusses how to use the purely functional techniques
    (effect types and type classes) learned so far in order to develop server-side
    software. We will learn how to write concurrent, asynchronous software for responding
    to HTTP requests, contacting the database. We will also learn about the concurrency
    model modern functional programming offers.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](6b6045c0-bf4d-4ae9-adc1-fdaf23985329.xhtml)，*纯函数式编程库*，讨论了如何使用迄今为止学到的纯函数式技术（效果类型和类型类）来开发服务器端软件。我们将学习如何编写并发、异步软件以响应HTTP请求、联系数据库。我们还将了解现代函数式编程提供的并发模型。'
- en: '[Chapter 10](8cd4731e-73cd-4397-9a94-364549f62633.xhtml), *Patterns of Advanced
    Functional Programming*, explores how to combine effect types to get new effect
    types. You will see how to leverage the power of the compiler''s type system to
    check guarantees about the program on compile time.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](8cd4731e-73cd-4397-9a94-364549f62633.xhtml)，*高级函数式编程模式*，探讨了如何组合效果类型以获得新的效果类型。您将看到如何利用编译器的类型系统在编译时检查程序保证。'
- en: '[Chapter 11](99eed1f4-ebef-4129-89ce-15276b06188b.xhtml), *Introduction to
    the Actor Model*, starts with examining the traditional model of concurrent programming
    in details. This model rises a bunch of problems such as race conditions and deadlocks,
    which make programming in it prone to errors that are particularly hard to debug.
    This chapter presents the idea of an Actor model that aims to solve these problems.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](99eed1f4-ebef-4129-89ce-15276b06188b.xhtml)，*演员模型简介*，从详细检查传统的并发编程模型开始。这个模型引发了许多问题，如竞态条件和死锁，这使得在其中编程容易出错，尤其是难以调试的错误。本章介绍了旨在解决这些问题的演员模型的概念。'
- en: '[Chapter 12](90ba083e-160b-4871-a663-575dfc23d458.xhtml), *The Actor Model
    in Practice*, covers the fundamentals of the framework and its concepts. You will
    proceed to learn some of the patterns that emerge during actor-oriented programming
    and also see how Actors interoperate with other widespread concurrency primitives—Futures.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](90ba083e-160b-4871-a663-575dfc23d458.xhtml)，*实践中的演员模型*，涵盖了框架的基本概念及其概念。您将继续学习在面向演员编程中出现的某些模式，并了解演员如何与其他广泛使用的并发原语——未来交互操作。'
- en: '[Chapter 13](a777bd51-25f3-4842-94a3-caee74788d01.xhtml), *Use Case - A Parallel
    Web Crawler*, examines a larger concurrent application written with the Actor
    model. One good such example is a web crawler application. A web crawler is an
    application that collects links from websites. Starting from a given website,
    it collects all the links on it, follows them, and recursively collects all the
    links from them. This chapter will examine how to implement such a larger application.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第13章](a777bd51-25f3-4842-94a3-caee74788d01.xhtml)，*用例 - 并行网络爬虫*，检查了一个使用演员模型编写的更大并发应用程序。一个很好的例子是网络爬虫应用程序。网络爬虫是一个收集网站链接的应用程序。从一个给定的网站开始，它收集该网站上的所有链接，跟随它们，并递归地收集它们的所有链接。本章将检查如何实现这样一个更大的应用程序。'
- en: '[Appendix A](14208055-c972-47a3-a9f7-8733f60ee93d.xhtml), *Introduction to
    Scala,* isa short introduction to the Scala language, which is used for examples
    throughout the book.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[附录A](14208055-c972-47a3-a9f7-8733f60ee93d.xhtml)，*Scala简介*，是Scala语言的简要介绍，本书中的示例都使用了Scala语言。'
- en: To get the most out of this book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: Before reading this book, readers need to know about the concepts of object-oriented
    and imperative programming.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读此书之前，读者需要了解面向对象和命令式编程的概念。
- en: To test the code of this book, you need Docker version 18.06 or higher and Git
    version 2.18.0 or higher.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试本书的代码，您需要Docker版本18.06或更高版本以及Git版本2.18.0或更高版本。
- en: Download the example code files
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packtpub.com](http://www.packtpub.com)的账户下载本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下步骤下载代码文件：
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packtpub.com](http://www.packtpub.com/support)上登录或注册。
- en: Select the SUPPORT tab.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择支持选项卡。
- en: Click on Code Downloads & Errata.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击代码下载与勘误表。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书籍名称，并遵循屏幕上的说明。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载后，请确保使用最新版本解压缩或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows上的WinRAR/7-Zip
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac上的Zipeg/iZip/UnRarX
- en: 7-Zip/PeaZip for Linux
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux上的7-Zip/PeaZip
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Mastering-Functional-Programming](https://github.com/PacktPublishing/Mastering-Functional-Programming). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本书代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Mastering-Functional-Programming](https://github.com/PacktPublishing/Mastering-Functional-Programming)。如果代码有更新，它将在现有的GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富图书和视频目录的代码包可供在**[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**上获取。查看它们吧！
- en: Download the color images
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/MasteringFunctionalProgramming_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/MasteringFunctionalProgramming_ColorImages.pdf).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图/图表的彩色图像的PDF文件。您可以从这里下载：[https://www.packtpub.com/sites/default/files/downloads/MasteringFunctionalProgramming_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/MasteringFunctionalProgramming_ColorImages.pdf)。
- en: Conventions used
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "The `instances` package contains the implementations of the
    type classes for basic data types that are present in the language core and the
    ones defined by the `Cats` library."'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词汇、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“`instances`包包含了语言核心中存在的基本数据类型以及由`Cats`库定义的类型类的实现。”'
- en: 'A block of code is set as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都写成如下：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "The for comprehension is shorthand for sequentially calling flatMap.
    This technique is called the **Monadic flow**."'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要词汇或屏幕上看到的词汇。例如，菜单或对话框中的文字会像这样显示。以下是一个示例：“for推导是按顺序调用flatMap的简写。这种技术被称为**单调流**。”'
- en: Warnings or important notes appear like this.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示看起来像这样。
- en: Tips and tricks appear like this.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士和技巧看起来像这样。
- en: Get in touch
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：请通过`feedback@packtpub.com`发送电子邮件，并在邮件主题中提及书名。如果您对本书的任何方面有疑问，请通过`questions@packtpub.com`发送电子邮件给我们。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们将不胜感激，如果您能向我们报告，我们将非常感谢。请访问[www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书，点击勘误提交表单链接，并输入详细信息。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式遇到我们作品的非法副本，如果您能提供位置地址或网站名称，我们将不胜感激。请通过`copyright@packtpub.com`与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为一名作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com/).'
- en: Reviews
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。一旦您阅读并使用了这本书，为何不在您购买它的网站上留下评论呢？潜在读者可以查看并使用您的客观意见来做出购买决定，我们Packt可以了解您对我们产品的看法，我们的作者也可以看到他们对书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于Packt的信息，请访问 [packtpub.com](https://www.packtpub.com/).
