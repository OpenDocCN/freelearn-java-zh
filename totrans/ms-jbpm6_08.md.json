["```java\n    ProcessDefinition buildProcessDefinition(String deploymentId, String bpmn2Content, ClassLoader classLoader, boolean cache) throws IllegalArgumentException;\n    ```", "```java\n    Collection<String> getReusableSubProcesses(String deploymentId, String processId);\n    ```", "```java\n    Map<String, String> getProcessVariables(String deploymentId, String processId);\n    ```", "```java\n    Map<String, String> getServiceTasks(String deploymentId, String processId);\n    ```", "```java\n    Collection<UserTaskDefinition> getTasksDefinitions(String deploymentId, String processId);\n    ```", "```java\n    void deploy(DeploymentUnit unit);\n    ```", "```java\n    void undeploy(DeploymentUnit unit);\n    ```", "```java\n    void activate(String deploymentId)\n    ```", "```java\n    void deactivate(String deploymentId);\n    ```", "```java\n    boolean isDeployed(String deploymentUnitId)\n    ```", "```java\n    Long startProcess(String deploymentId, String processId);\n    ```", "```java\n    Long startProcess(String deploymentId, String processId, Map<String, Object> params);\n    ```", "```java\n    void abortProcessInstance(Long processInstanceId);\n    ```", "```java\n    void abortProcessInstances(List<Long> processInstanceIds);\n    ```", "```java\n    void signalProcessInstance(Long processInstanceId, String signalName, Object event);\n    ```", "```java\n    void signalProcessInstances(List<Long> processInstanceIds, String signalName, Object event);\n    ```", "```java\n    void completeWorkItem(Long id, Map<String, Object> results);\n    ```", "```java\n    abortWorkItem(Long id);\n    ```", "```java\n    void activate(Long taskId, String userId)\n    ```", "```java\n    void claim(Long taskId, String userId)\n    ```", "```java\n    void complete(Long taskId, String userId, Map<String, Object> params)\n    ```", "```java\n    void delegate(Long taskId, String userId, String targetUserId)\n    ```", "```java\n    void exit(Long taskId, String userId)\n    ```", "```java\n    void fail(Long taskId, String userId, Map<String, Object> faultData)\n    ```", "```java\n    void forward(Long taskId, String userId, String targetEntityId)\n    ```", "```java\n    void release(Long taskId, String userId);\n    ```", "```java\n    void resume(Long taskId, String userId);\n    ```", "```java\n    void skip(Long taskId, String userId);\n    ```", "```java\n    void start(Long taskId, String userId);\n    ```", "```java\n    void stop(Long taskId, String userId);\n    ```", "```java\n    Collection<ProcessDefinition> getProcesses(QueryContext queryContext);\n    ```", "```java\n    Collection<ProcessInstanceDesc> getProcessInstances(QueryContext queryContext);\n    ```", "```java\n    Collection<NodeInstanceDesc> getProcessInstanceFullHistory(long processInstanceId, QueryContext queryContext);\n    ```", "```java\n    Collection<VariableDesc> getVariableHistory(long processInstanceId, String variableId, QueryContext queryContext);\n    ```", "```java\n    List<TaskEvent> getTaskEvents(long taskId, QueryFilter filter);\n    ```", "```java\n    List<TaskSummary> getTasksOwned(String userId, QueryFilter filter);\n    ```", "```java\nksession.getWorkItemManager().registerWorkItemHandler(\"Notification\",\nnew NotificationWorkItemHandler());\n```", "```java\norg.jbpm.services.ejb.api.DefinitionServiceEJBRemote\n\n```", "```java\norg.jbpm.services.ejb.api.DeploymentServiceEJBRemote\n\n```", "```java\norg.jbpm.services.ejb.api.ProcessServiceEJBRemote\n\n```", "```java\norg.jbpm.services.ejb.api.RuntimeDataServiceEJBRemote\n\n```", "```java\norg.jbpm.services.ejb.api.UserTaskServiceEJBRemote\n\n```", "```java\nfinal Hashtable<String, String> jndiProperties = new Hashtable<String, String>();\n  //Set the JNDI properties\n  jndiProperties.put(Context.URL_PKG_PREFIXES, \"org.jboss.ejb.client.naming\");\n\n  final Context context = new InitialContext(jndiProperties);\n  //Set the bean name\n  String beanName = \"ProcessServiceEJBImpl!org.jbpm.services.ejb.api.ProcessServiceEJB Remote\";\n\n  String jndi = \"ejb:/\" + application + \"/\" + mappedName;\n  ProcessService bean = (ProcessService) context.lookup(jndi);\n```", "```java\n@EJB\nProcessService processservice;\n```", "```java\nProcessService processservice = (Processservice)\n  InitialContext.lookup(\"java:jbpm/Processservice\");\n```", "```java\n<dependency>\n  <groupId>org.kie.remote</groupId>\n  <artifactId>kie-remote-client</artifactId>\n  <version>6.2.0</version>\n</dependency>\n```", "```java\ncurl -v http://localhost:8080/jbpm-console/rest/deployment/com.packt.masterjbpm6:pizzadelivery:1.0\n\n```", "```java\n< HTTP/1.1 401 Unauthorized\n< WWW-Authenticate: Basic realm=\"KIE Workbench Realm\"\n<html><head><title>Error</title></head><body>Unauthorized</body></html>\n```", "```java\nhttp://admin:admin@localhost:8080/jbpm-console/rest/deployment/com.packt.masterjbpm6:pizzadelivery:1.0\n```", "```java\n<deployment-unit>\n  <groupId>com.packt.masterjbpm6</groupId>\n  <artifactId>pizzadelivery</artifactId>\n  <version>1.0</version>\n  <kbaseName/>\n  <ksessionName/>\n  <strategy>SINGLETON</strategy>\n  <status>DEPLOYED</status>\n</deployment-unit>\n```", "```java\n// the deploymentId identifies the KIE module\npublic static String deploymentId = \"com.packt.masterjbpm6:pizzadelivery:1.0\";\nRemoteRestRuntimeEngineBuilder restEngineBuilder = RemoteRuntimeEngineFactory.newRestBuilder()\n.addDeploymentId(deploymentId)\n.addUrl(instanceurl).addUserName(user)\n.addPassword(password);\nRemoteRestRuntimeEngineFactory engineFactory = restEngineBuilder\n.buildFactory();\n// get the engine\nRemoteRuntimeEngine engine = engineFactory.newRuntimeEngine();\n// and the services\nTaskService taskService = engine.getTaskService();\nKieSession ksession = engine.getKieSession();\nProcessInstance processInstance = ksession.startProcess(processID);\n```", "```java\n  <security-settings>\n    <security-setting match=\"#\">\n      <permission type=\"send\" roles=\"admin guest\"/>\n      <permission type=\"consume\" roles=\"admin guest\"/>\n      <permission type=\"createNonDurableQueue\" roles=\"admin guest\"/>\n      <permission type=\"deleteNonDurableQueue\" roles=\"admin guest\"/>\n    </security-setting>\n  </security-settings>\n```", "```java\n// the deploymentId identifies the KIE module\npublic static String deploymentId = \"com.packt.masterjbpm6:pizzadelivery:1.0\";\n/* the remoteInitialContext is an instance of the jBoss Naming\n service (InitialContext) and gives you access to the container\n remoting services for JMS */\n/* the connectionfactory represents the JMS connection configuration settings */\n\nRemoteJmsRuntimeEngineBuilder jmsEngineBuilder = RemoteRuntimeEngineFactory\n  .newJmsBuilder().addDeploymentId(deploymentId)\n  .addRemoteInitialContext(remoteInitialContext)\n  .addUserName(jms_user).addPassword(jms_password)\n  .addConnectionFactory(connectionfactory)\n  .addTimeout(maxTimeoutSecs);\n```", "```java\nRemoteJmsRuntimeEngineFactory engineFactory = jmsEngineBuilder\n  .buildFactory();\nRuntimeEngine engine = remoteJmsFactory.newRuntimeEngine();\n```", "```java\nTaskService taskService = engine.getTaskService();\n```", "```java\ninitialProps.setProperty(InitialContext.PROVIDER_URL,\n\"http-remoting://\" + jbossServerHostName + \":8080\");\n```", "```java\n<dependency>\n  <groupId>org.kie.remote.ws</groupId>\n  <artifactId>kie-remote-ws-common</artifactId>\n  <version>6.2.0.Final</version>\n</dependency>\n```", "```java\nURL commandWsdlUrl = new URL(\n\"http://localhost:8080/jbpm-console/CommandService?WSDL\");\n```", "```java\nStartProcessCommand startProcessCommand = new StartProcessCommand();\nstartProcessCommand.setProcessId(processID);\nJaxbCommandsRequest request = new JaxbCommandsRequest(deploymentId, startProcessCommand);\n```"]