- en: '18'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '18'
- en: Leveraging Artificial Intelligence (AI) for High-Performance Java Applications
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用人工智能（AI）创建高性能 Java 应用程序
- en: The secret is out; **Artificial Intelligence** (**AI**) is here to stay and
    continues to revolutionize nearly every industry, including software development.
    AI is already a game changer and a success enabler. It is also already being leveraged
    to help developers significantly enhance the performance of their Java applications.
    This chapter aims to help Java developers understand and leverage AI to create
    and maintain high-performing Java applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 秘密已经揭晓；**人工智能**（**AI**）已经到来，并且继续几乎在每个行业中引发革命，包括软件开发。AI 已经成为了一场游戏规则的改变者和成功的推动者。它也已经用于帮助开发者显著提高他们的
    Java 应用程序的性能。本章旨在帮助 Java 开发者理解和利用 AI 来创建和维护高性能的 Java 应用程序。
- en: The chapter starts with an introduction to AI in Java, covering its relevance
    to achieving high performance and discussing the current and future directions
    of AI. Next, the chapter provides a specific look at how AI can be used to optimize
    code, conduct performance tuning, and use **Machine Learning** (**ML**) models
    to predict performance bottlenecks.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章从 Java 中的 AI 简介开始，涵盖其与实现高性能的相关性，并讨论 AI 的当前和未来方向。接下来，本章将具体探讨如何使用 AI 优化代码、进行性能调优以及使用
    **机器学习**（**ML**）模型来预测性能瓶颈。
- en: Our coverage includes an exploration of integration with AI services and platforms.
    This includes insights into popular AI tools and best practices for achieving
    seamless integration. We would be remiss if we did not analyze the ethical and
    practical considerations regarding the use of AI for high-performance Java applications.
    Specifically, we will look at the ethical implications of using AI in software
    development and explore related practical challenges. Our coverage of ethical
    considerations includes ensuring fairness and transparency in AI-driven systems.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的覆盖范围包括对 AI 服务和平台的集成的探索。这包括对流行 AI 工具和实现无缝集成的最佳实践的见解。如果我们不对使用 AI 进行高性能 Java
    应用程序的伦理和实际考虑进行分析，我们将犯下错误。具体来说，我们将探讨在软件开发中使用 AI 的伦理影响，并探讨相关的实际挑战。我们对伦理考虑的覆盖范围包括确保
    AI 驱动系统中的公平性和透明度。
- en: 'The main topics covered in this chapter are as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的主要主题如下：
- en: Introduction to AI in Java
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 中的 AI 简介
- en: AI for performance optimization
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AI 用于性能优化
- en: AI-powered monitoring and maintenance
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AI 驱动的监控和维护
- en: Integration with AI services and platforms
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 AI 服务和平台的集成
- en: Ethical and practical considerations
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 伦理和实际考虑
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The finished code for this chapter can be found here:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的完成代码可以在以下位置找到：
- en: '[https://github.com/PacktPublishing/High-Performance-with-Java/tree/main/Chapter18](https://github.com/PacktPublishing/High-Performance-with-Java/tree/main/Chapter18)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/High-Performance-with-Java/tree/main/Chapter18](https://github.com/PacktPublishing/High-Performance-with-Java/tree/main/Chapter18)'
- en: Introduction to AI in Java
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java 中的 AI 简介
- en: Software developers at all levels of experience have embraced AI as part of
    their workflows. AI-related tools and techniques can significantly enhance our
    ability to develop high-performing Java applications. There are two aspects for
    us to consider. First, we can use AI tools to help us develop, test, and enhance
    our code. Secondly, we can incorporate AI into our applications to introduce innovation
    and enhance functionality.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所有经验水平的软件开发者都已经将 AI 作为他们工作流程的一部分。与 AI 相关的工具和技术可以显著提高我们开发高性能 Java 应用程序的能力。我们需要考虑两个方面。首先，我们可以使用
    AI 工具来帮助我们开发、测试和改进我们的代码。其次，我们可以将 AI 集成到我们的应用程序中，以引入创新并增强功能。
- en: In this section, we will look at AI’s relevance to high-performing Java applications,
    current trends in AI for Java, and future directions for AI.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨 AI 与高性能 Java 应用程序的相关性、Java 中 AI 的当前趋势和 AI 的未来方向。
- en: AI’s relevance to high-performance Java applications
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AI 与高性能 Java 应用程序的相关性
- en: The power of AI technologies is undeniable. With ML, a subset of AI, we can
    train models to make advanced predictions, analyze data, and automate complex
    tasks. Java developers can leverage these capabilities to improve their development,
    testing, and maintenance of Java projects.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: AI 技术的力量是无可否认的。借助 AI 的一个子集 ML（机器学习），我们可以训练模型进行高级预测、分析数据和自动化复杂任务。Java 开发者可以利用这些能力来改善他们的开发、测试和维护
    Java 项目。
- en: 'Here are four key methods by which we can leverage AI as part of our Java development
    and system support efforts:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下四种关键方法利用 AI 作为我们 Java 开发和系统支持工作的部分：
- en: '**Automated monitoring**: We can use AI to enhance legacy monitoring tools.
    This can lead to automated anomaly, bug, and bottleneck detection. The output
    is alerts that let us stay informed of our system’s performance and provide targeted
    refactoring and optimization. The use of automated monitoring with AI can minimize
    downtime and safeguard the user experience.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化监控**：我们可以使用AI来增强传统的监控工具。这可能导致自动检测异常、错误和瓶颈。输出是警报，让我们了解系统的性能，并提供有针对性的重构和优化。使用AI进行自动化监控可以最小化停机时间并保护用户体验。'
- en: '**Performance optimization**: AI can analyze large data sets quickly, which
    can be leveraged to help us identify bottlenecks. Moreover, AI can suggest optimizations
    based on its own analysis. Taking this a step further, we can use ML models to
    predict which parts of our code are most likely to cause issues. This lets us
    be proactive instead of reactive with our optimizations.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能优化**：AI可以快速分析大量数据集，这可以帮助我们识别瓶颈。此外，AI可以根据自己的分析提出优化建议。更进一步，我们可以使用机器学习模型来预测我们代码中哪些部分最有可能引发问题。这使得我们能够主动而不是被动地进行优化。'
- en: '**Predicative analytics**: AI and ML models are increasingly being used in
    various industries to make predictions based on dataset and trend analysis. For
    Java developers, this can take the form of forecasting future system loads and
    performance issues. This allows us to make informed decisions about infrastructure,
    scaling, and resource allocation.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预测性分析**：AI和机器学习模型正越来越多地被用于各个行业，基于数据集和趋势分析进行预测。对于Java开发者来说，这可能表现为预测未来的系统负载和性能问题。这使我们能够就基础设施、扩展和资源分配做出明智的决定。'
- en: '**Predictive maintenance**: Employing predictive maintenance models can help
    us accurately anticipate future failures, both in hardware and software. This
    allows us to plan, take preventative maintenance actions, prevent performance
    degradation, and improve the overall efficiency of our systems.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预测性维护**：采用预测性维护模型可以帮助我们准确预测未来硬件和软件的故障。这使我们能够规划、采取预防性维护措施、防止性能下降，并提高系统的整体效率。'
- en: Now that we have a sense of how we can leverage AI for high-performance Java
    applications, let’s look at some current trends related to AI in Java.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何利用AI为高性能Java应用程序提供支持，让我们来看看一些与Java相关的AI当前趋势。
- en: Current trends
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 当前趋势
- en: 'There are four AI-related trends that are shaping how Java developers integrate
    AI and harness its power:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有四个与AI相关的趋势正在塑造Java开发者如何整合AI并利用其力量：
- en: '**Cloud services**: Each of the major cloud service providers (**Amazon Web
    Services** (**AWS**), **Google Cloud**, and **Microsoft Azure**) has AI services
    that can be integrated with Java applications. The models vary among service providers
    and generally provide pre-built models and **Application Programming Interfaces**
    (**APIs**) for complex tasks such as **image recognition**, **predictive analytics**,
    and **Natural Language** **Processing** (**NLP**).'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云服务**：每个主要的云服务提供商（**亚马逊网络服务**（**AWS**）、**谷歌云**和**微软Azure**）都提供可以与Java应用程序集成的AI服务。服务提供商之间的模型各不相同，通常提供预构建模型和**应用程序编程接口**（**API**）以执行复杂任务，如**图像识别**、**预测性分析**和**自然语言处理**（**NLP**）。'
- en: '**Edge AI**: The concept of **edge computing** was realized with the wide adoption
    of cloud services. The concept is simply deploying systems and data close to the
    user to increase response times and reduce network latency. **Edge AI**, an extension
    of edge computing, involves deploying AI models on edge devices.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边缘AI**：随着云服务的广泛应用，**边缘计算**的概念得以实现。这个概念简单来说就是将系统和数据部署在用户附近，以提高响应时间和减少网络延迟。**边缘AI**作为边缘计算的一个扩展，涉及在边缘设备上部署AI模型。'
- en: '**Libraries and frameworks**: There is an increasing number of AI-specific
    libraries and frameworks becoming available to Java developers. The goal of these
    libraries and frameworks is to simplify our implementation of AI models in Java
    applications. Notable libraries and frameworks worth researching include the following:'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**库和框架**：越来越多的AI特定库和框架对Java开发者变得可用。这些库和框架的目标是简化我们在Java应用程序中实现AI模型的过程。值得研究的知名库和框架包括以下内容：'
- en: Apache Spark MLlib
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Spark MLlib
- en: '**Deep Java** **Library** (**DJL**)'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**深度Java库**（**DJL**）'
- en: TensorFlow for Java
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: TensorFlow for Java
- en: '**Transparency**: As our use of AI increases, the need to document how AI decisions
    are made are understandable. **Explainable AI** (**XAI**) calls for AI decisions
    and processes to be transparent.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**透明度**：随着我们对AI的使用增加，记录AI决策是如何做出的需求是可理解的。**可解释AI**（**XAI**）要求AI决策和过程是透明的。'
- en: The trends that we have described are currently seen in the industry. The next
    section reveals what we might see in the future.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所描述的趋势目前在行业中已经显现。下一节将揭示我们可能在未来看到的情况。
- en: Future directions
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未来方向
- en: 'The efficiencies and capabilities we can currently gain from the use of AI
    tools and technologies are impressive. It is exciting to consider which future
    directions these tools and technologies might take and how we might be able to
    leverage them to enhance our ability to create and maintain high-performing Java
    applications. Here are four future trends:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们目前可以从使用AI工具和技术中获得的效率和功能令人印象深刻。考虑这些工具和技术可能采取的未来方向以及我们如何可能利用它们来增强我们创建和维护高性能Java应用程序的能力是非常令人兴奋的。以下有四个未来趋势：
- en: '**AI-driven development tools**: As AI tools and techniques become mature,
    they are likely to be built into our **integrated development environments** (**IDEs**).
    AI-specific development tools, a new breed of IDEs, could emerge for our use in
    the next couple of years.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AI驱动开发工具**：随着AI工具和技术变得成熟，它们很可能会集成到我们的**集成开发环境**（**IDEs**）中。可能在未来几年出现一种新的IDEs，即专门为AI开发工具而设计的IDEs。'
- en: '**AI for cybersecurity**: Cybersecurity’s importance increases as new AI tools
    and technologies are released. AI can be used to detect and even respond to cybersecurity
    threats to our systems. This capability is likely to increase in the coming years.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AI网络安全**：随着新的AI工具和技术发布，网络安全的重要性在增加。AI可以用来检测甚至响应对我们系统的网络安全威胁。这种能力预计在未来几年将增加。'
- en: '**Hybrid models**: It is common for similar technologies to be introduced independently
    and then later combined to form a hybrid model. For example, **augmented reality**
    and **virtual reality** were introduced separately and later formed a hybrid model
    referred to as **mixed reality**. This is like with AI, ML, deep learning, and
    other related systems.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**混合模型**：类似技术通常独立引入，然后后来结合形成混合模型。例如，**增强现实**和**虚拟现实**最初是分别引入的，后来形成了一个被称为**混合现实**的混合模型。这与AI、机器学习、深度学习和其他相关系统类似。'
- en: '**Quantum computing**: Quantum computing is a field that is ripe for the use
    of AI. The power of quantum computing’s computing power married with the intelligence
    of AI stands to revolutionize AI and how we use it.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**量子计算**：量子计算是一个适合AI应用的领域。量子计算的强大计算能力与AI的智能相结合，有望彻底改变AI及其应用方式。'
- en: AI tools and technologies can enhance our high-performance Java toolkits. By
    understanding and leveraging AI technologies, we can create applications that
    are not only efficient and scalable but also intelligent and adaptive. In the
    next section, we will take a specific look at AI for performance optimization.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: AI工具和技术可以增强我们的高性能Java工具集。通过理解和利用AI技术，我们可以创建不仅高效和可扩展，而且智能和自适应的应用程序。在下一节中，我们将具体探讨AI在性能优化方面的应用。
- en: AI for performance optimization
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AI性能优化
- en: As we discussed in the previous section, AI represents an incredible opportunity
    for developers to enhance their performance optimization efforts and improve their
    results. By adopting a set of AI tools and models, we can efficiently improve
    our applications as part of a continuous improvement mindset. For example, the
    predictive abilities of AI can help us predict bottlenecks before they happen.
    Imagine updating your code to prevent a bottleneck or resource depletion without
    any system user being impacted. We no longer need to wait for complaints of low
    responsiveness or read logs to see errors and alerts.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一节中讨论的，AI为开发者提供了增强其性能优化努力并提高其结果的一个令人难以置信的机会。通过采用一套AI工具和模型，我们可以在持续改进的心态下有效地改进我们的应用程序。例如，AI的预测能力可以帮助我们在瓶颈发生之前预测它们。想象一下，在不影响任何系统用户的情况下，更新您的代码以防止瓶颈或资源耗尽。我们不再需要等待低响应速度的投诉或读取日志来查看错误和警报。
- en: Next, we will look at how we can use AI for code optimization and performance
    fine-tuning.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨如何使用AI进行代码优化和性能微调。
- en: Code optimization and performance tuning
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码优化和性能调整
- en: AI is highly capable of analyzing existing code and providing optimization insights.
    This is possible by training ML models to identify code patterns that are inefficient,
    code that might lead to memory leaks, and additional performance issues.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能在分析现有代码并提供优化见解方面能力很强。这是通过训练机器学习模型来识别低效代码模式、可能导致内存泄漏的代码以及额外的性能问题来实现的。
- en: 'Let’s illustrate this with an example. The code that follows uses an inefficient
    way of data processing. This might not be noticed when monitoring your application
    but could become catastrophic if the data were to grow exponentially. Here is
    the inefficient code:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个例子来说明这一点。下面的代码使用了一种低效的数据处理方式。在监控应用程序时可能不会注意到这一点，但如果数据呈指数增长，可能会变得灾难性。以下是低效的代码：
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The AI-optimized code is provided next. A description of the optimizations
    follows the code:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个提供的是人工智能优化的代码。优化描述紧随代码之后：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Using AI, the code has been optimized in three specific ways:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用人工智能，代码在三个方面进行了优化：
- en: The optimized code no longer uses an `ArrayList`. This is a smart change because
    that data structure can consume a lot of memory and increase the time it takes
    to process its contents.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化后的代码不再使用`ArrayList`。这是一个聪明的改变，因为这种数据结构可能会消耗大量内存并增加处理其内容所需的时间。
- en: The code now uses an `IntStream.range` to generate the range of integers. It
    also computes the sum without the need to create an interim collection to store.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码现在使用`IntStream.range`来生成整数的范围。它还计算总和，而无需创建一个临时集合来存储。
- en: Lastly, the optimized code uses Java’s `IntStream` to efficiently handle the
    range of integers and perform the summation operation. Here, our code benefits
    from the inherent optimized nature of Streams’ better performance.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，优化后的代码使用Java的`IntStream`来高效地处理整数范围并执行求和操作。在这里，我们的代码得益于Stream的内在优化特性，从而提高了性能。
- en: AI was able to make three optimizations to our simple but inefficient code.
    Imagine what it could do for more robust applications.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能能够对我们的简单但低效的代码进行三次优化。想象一下它能为更健壮的应用程序做什么。
- en: Next, let’s examine how ML models can predict issues such as bottlenecks.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看机器学习模型如何预测诸如瓶颈等问题。
- en: Predicting performance bottlenecks
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测性能瓶颈
- en: ML models can be taught to predict performance bottlenecks. These models learn
    by ingesting historical performance data. From there, they can identify patterns
    that are likely to lead to a performance bottleneck. To demonstrate this, we will
    use the **Waikato Environment for Knowledge Analysis** (**WEKA**) platform.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型可以被训练来预测性能瓶颈。这些模型通过摄入历史性能数据来学习。从那里，它们可以识别可能导致性能瓶颈的模式。为了演示这一点，我们将使用**Waikato环境知识分析**（**WEKA**）平台。
- en: WEKA
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: WEKA
- en: WEKA is an ML and data analysis platform. It is free software issued under the
    GNU General Public License.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: WEKA是一个机器学习和数据分析平台。它是免费软件，根据GNU通用公共许可证发布。
- en: 'Here is a simple ML example that we can use to predict performance bottlenecks:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个简单的机器学习例子，我们可以用它来预测性能瓶颈：
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We used the Weka library to load historical performance data and then, using
    a pre-trained `classifier` model, predict potential performance issues. Here is
    some simulated output we might expect from our code:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了Weka库来加载历史性能数据，然后使用一个预训练的`分类器`模型来预测潜在的性能问题。以下是我们的代码可能产生的预期模拟输出：
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: There are a lot of assumptions that come with the preceding simulated output.
    For context, let’s assume that we trained our Weka model to classify code as either
    `Normal` or `Bottleneck`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的模拟输出伴随着许多假设。为了提供上下文，让我们假设我们训练了我们的Weka模型来将代码分类为`正常`或`瓶颈`。
- en: Let’s now move on to a review of a real-world case study.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们继续审查一个真实的案例研究。
- en: Abbreviated case study
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简化案例研究
- en: This section provides an abbreviated case study to help illustrate the practical
    application of using AI for performance optimizations. The case study uses a Java-based
    web application scenario experiencing lag during peak usage times.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了一个简化的案例研究，以帮助说明使用人工智能进行性能优化的实际应用。该案例研究使用了一个在高峰使用时段出现延迟的基于Java的Web应用程序场景。
- en: '**Phase 1**: The first phase of this case study involved data collection. This
    included gathering specific performance metrics including response times, memory
    and CPU use, transaction rates, and more. This was collected by the development
    team and consisted of 12 months’ worth of data.'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第一阶段**：本案例研究的第一阶段涉及数据收集。这包括收集特定的性能指标，包括响应时间、内存和CPU使用情况、交易率等。这些数据由开发团队收集，并包括12个月的数据。'
- en: '**Phase 2**: Now that the development team had 12 months of performance data,
    they trained an ML model to predict potential performance bottlenecks. This training
    led to the model’s ability to identify patterns in the data that led to performance
    degradation.'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第二阶段**：现在，开发团队有了12个月的性能数据，他们训练了一个机器学习模型来预测潜在的性能瓶颈。这次训练使模型能够识别导致性能下降的数据中的模式。'
- en: '**Phase 3**: At this point, the development team had the data and the trained
    ML model. Next came the implementation phase, wherein they integrated the now-trained
    model into their application monitoring system. The system monitoring resulted
    in alerts and optimization scripts when a bottleneck was predicted. The optimized
    scripts were designed to adjust resource allocation and optimize database queries.'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第三阶段**：在这个阶段，开发团队已经有了数据和训练好的机器学习模型。接下来是实施阶段，他们将现在训练好的模型集成到他们的应用程序监控系统中。当预测到瓶颈时，系统监控会产生警报和优化脚本。这些优化脚本旨在调整资源分配并优化数据库查询。'
- en: '**Phase 4**: This final phase was the results phase. The development team had
    successfully collected data, then trained an ML model and implemented it in their
    monitoring system. The results were significant and included a 35% improvement
    in response times and a 42% decrease in slowdowns.'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第四阶段**：这个最终阶段是结果阶段。开发团队成功收集了数据，然后训练了一个机器学习模型并将其应用于他们的监控系统。结果显著，包括响应时间提高了35%，减速降低了42%。'
- en: This case study demonstrates practical applications with tangible benefits of
    using AI to help us optimize performance.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 本案例研究展示了使用AI帮助我们优化性能的实用应用及其可衡量的益处。
- en: Our next section will focus on leveraging the power of AI to help us monitor
    and maintain our code.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一个小节将专注于利用AI的力量来帮助我们监控和维护我们的代码。
- en: AI-powered monitoring and maintenance
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AI驱动的监控和维护
- en: We covered the critical purpose of monitoring and maintenance extensively in
    [*Chapter 16*](B21942_16.xhtml#_idTextAnchor307), *Code Monitoring and Maintenance*.
    We can extend that topic beyond the manual interventions and predefined benchmarks
    and thresholds. AI-powered monitoring and maintenance presents a shift toward
    a proactive and efficient approach that uses ML and other AI techniques to detect
    anomalies, predict bottlenecks and failures, and automate responses.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第16章*](B21942_16.xhtml#_idTextAnchor307)，“代码监控和维护”中广泛讨论了监控和维护的关键目的。我们可以将这个主题扩展到手动干预和预定义的基准和阈值之外。AI驱动的监控和维护代表了一种转向主动和高效的方法，该方法使用机器学习和其他AI技术来检测异常、预测瓶颈和故障，并自动化响应。
- en: This section looks at how we can leverage AI for anomaly detection, automated
    monitoring, logging, and alerting. We will also explore maintenance strategies
    that use predictive maintenance models. Let’s get started with a look at anomaly
    detection using AI.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将探讨如何利用AI进行异常检测、自动化监控、日志记录和警报。我们还将探讨使用预测性维护模型的维护策略。让我们从使用AI进行异常检测开始。
- en: Anomaly detection
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异常检测
- en: One of the primary goals of monitoring is to detect anomalies that can lead
    to significant issues. AI’s ability to ingest and analyze copious amounts of data
    empowers it to detect anomalies when the data is being reviewed by non-AI tools
    or humans.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 监控的主要目标之一是检测可能导致重大问题的异常。AI处理和分析大量数据的能力使其能够在非AI工具或人类审查数据时检测到异常。
- en: 'The code that follows is an example Java application that uses an AI model
    for anomaly detection. In particular, this example looks at performance metrics:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码是一个示例Java应用程序，它使用AI模型进行异常检测。特别是，这个例子查看性能指标：
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Our preceding example uses a neural network model to analyze performance metrics.
    The computation results in an anomaly score with output that varies based on the
    score. This can be used to help identify areas that we need to review or trigger
    an automated response.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们前面的例子使用神经网络模型来分析性能指标。计算结果产生一个异常分数，输出根据分数变化。这可以帮助我们确定需要审查的区域或触发自动响应。
- en: Next, let’s look at how AI can be used for logging and alerting.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看AI如何用于日志记录和警报。
- en: AI-based logging
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于AI的日志记录
- en: 'As expected, we can use AI to enhance our logging and alerting systems. AI
    tools can provide us with more efficient and contextual alerts than otherwise
    possible. Let’s look at a simple implementation of an AI logging system that includes
    alerting:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期的那样，我们可以使用AI来增强我们的日志记录和警报系统。AI工具可以为我们提供比其他方式更高效和更具上下文的相关警报。让我们看看一个简单的AI日志记录系统实现，该系统包括警报功能：
- en: '[PRE5]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see in the preceding example, the implementation is simplistic and
    results in notifications and warnings. It’s noteworthy that this is simply provided
    for illustration purposes. In a full implementation, a pre-trained ML model would
    be incorporated to detect what is anomalous and what is not.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如前例所示，实现简单，导致通知和警告。值得注意的是，这只是为了说明目的。在完整实现中，将集成预训练的机器学习模型来检测异常和不异常的情况。
- en: Let’s end this section with an exploration of maintenance strategies with predictive
    maintenance models.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以探索使用预测性维护模型进行维护策略结束本节。
- en: Maintenance strategies
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 维护策略
- en: AI technology includes the ability for us to train models to predict maintenance.
    This model could be used to anticipate hardware and software failures long before
    they occur. When we are notified of the predictions, we can be proactive with
    our hardware and software maintenance.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能技术包括我们训练模型来预测维护的能力。这个模型可以用来预测硬件和软件故障，在它们发生之前很久。当我们收到预测通知时，我们可以主动进行硬件和软件维护。
- en: 'Let’s look at a simple program that uses AI to conduct predictive maintenance
    concerns:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个使用人工智能进行预测性维护的简单程序：
- en: '[PRE6]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Our example uses an ML model to predict whether maintenance is required. This
    is based on analysis of historical data.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的示例使用机器学习模型来预测是否需要维护。这是基于历史数据的分析。
- en: As detailed in this section, AI can power our anomaly detection, automate our
    monitoring, enhance our logging and alerting systems, and predict when hardware
    and software maintenance is required. In the next section, we will briefly explore
    how we can integrate our Java applications with AI services and platforms.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如本节所述，人工智能可以为我们提供异常检测的能力，自动化我们的监控，增强我们的日志和警报系统，并预测何时需要硬件和软件维护。在下一节中，我们将简要探讨如何将我们的Java应用程序与人工智能服务和平台集成。
- en: AI integration
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AI集成
- en: AI requires significant computing power. Leveraging the elastic cloud computing
    of cloud service providers is commonplace. There are also open source platforms
    that offer pre-built models for use. Let’s take a brief look at AI services from
    the three largest cloud service providers (AWS, Microsoft Azure, and Google Cloud)
    and two open source platforms (Apache Spark MLlib and TensorFlow for Java), starting
    with the three cloud service providers.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能需要大量的计算能力。利用云服务提供商的弹性云计算是常见的。还有提供预构建模型的开源平台。让我们简要了解一下来自三个最大的云服务提供商（AWS、Microsoft
    Azure和Google Cloud）以及两个开源平台（Apache Spark MLlib和TensorFlow for Java）的人工智能服务，从三个云服务提供商开始。
- en: '**AWS AI Services**: Amazon’s cloud platform offers an entire suite of AI services
    that include **SageMaker** for building training models, **Amazon Rekognition**
    for image and video analysis, and **Amazon Comprehend** for NLP.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS AI Services**：Amazon的云平台提供了一套完整的AI服务，包括用于构建训练模型的**SageMaker**，用于图像和视频分析的**Amazon
    Rekognition**，以及用于自然语言处理的**Amazon Comprehend**。'
- en: '**Microsoft Azure AI**: Microsoft offers similar AI tools to AWS, which include
    **Azure ML** for ML model development, **Bot Service** for creating AI-powered
    chatbots, and **Cognitive Services**, containing pre-built AI functionality.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Microsoft Azure AI**：Microsoft提供与AWS类似的AI工具，包括用于机器学习模型开发的**Azure ML**，用于创建人工智能聊天机器人的**Bot
    Service**，以及包含预构建人工智能功能的**Cognitive Services**。'
- en: '**Google Cloud AI**: Google Cloud, like Amazon and Microsoft, offers a suite
    of AI tools. These include **AutoML**, which can be used for custom model training,
    **Vision AI** for image recognition, and **Natural Language API** for text analysis.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Cloud AI**：Google Cloud，像Amazon和Microsoft一样，提供了一套人工智能工具。这些包括**AutoML**，可用于定制模型训练，**Vision
    AI**用于图像识别，以及**Natural Language API**用于文本分析。'
- en: 'Now let’s review two open source AI platforms:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回顾两个开源人工智能平台：
- en: '**Apache Spark MLlib**: This is a scalable ML library that is, as the name
    suggests, an add-on to Apache Spark. This library includes many algorithms that
    can be used for classification, clustering, collaborative filtering, and regression.
    These are all ripe for use with Java applications.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Apache Spark MLlib**：这是一个可扩展的机器学习库，正如其名所示，是Apache Spark的附加组件。这个库包括许多算法，可用于分类、聚类、协同过滤和回归。这些算法都适用于Java应用程序。'
- en: '**TensorFlow**: This is an open source library that focuses on numeric computation
    and ML. One of the great things about this library is that it provides **Java
    bindings** that enable us to use ML capabilities in our Java applications.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TensorFlow**：这是一个专注于数值计算和机器学习的开源库。这个库的一个优点是它提供了**Java绑定**，使我们能够在Java应用程序中使用机器学习功能。'
- en: Let’s look at best practices for integrating AI services into our Java applications.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看将AI服务集成到我们的Java应用中的最佳实践。
- en: Best practices
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最佳实践
- en: 'Integrating AI services from one of the cloud service providers or an open
    source platform can seem daunting. The service providers have a plethora of documentation
    to aid in the implementation. Regardless of which platform or library you implement,
    the following best practices apply:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 从云服务提供商或开源平台集成AI服务可能会显得令人畏惧。服务提供商提供了大量的文档来帮助实施。无论你实施哪个平台或库，以下最佳实践都适用：
- en: Clearly define the problem you want to solve with AI. This clarity will help
    ensure that your implementation is efficient and purposeful.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确定义你想要用AI解决的问题。这种清晰度将有助于确保你的实现既高效又有目的。
- en: Ensure that the data you use to train your ML modes is clean and of high quality.
    The better your data is (that is, the more optimized its, quality, accuracy, and
    organization are), the more easily your ML models can learn from it.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你用于训练你的机器学习模型的数据是干净且高质量的。你的数据越好（即其质量、准确性、组织越优化），你的机器学习模型就越容易从中学习。
- en: Optimize the performance of your AI operations. As previously stated, AI operations
    are computationally heavy, so optimization is critical.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化你的AI操作性能。如前所述，AI操作计算量很大，因此优化至关重要。
- en: Just like other sophisticated software, AI services can fail (that is, produce
    unexpected results or crash), so be sure to incorporate robust error and exception
    handling.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 就像其他复杂的软件一样，AI服务可能会失败（即产生意外的结果或崩溃），所以请确保包含健壮的错误和异常处理。
- en: Be sure to continuously monitor the performance of your AI methods and modules.
    Maintain the code so that it remains optimized.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保持续监控你的AI方法和模块的性能。维护代码，使其保持优化。
- en: Next, we will review ethical and practical considerations regarding using AI
    in software development.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将回顾使用AI进行软件开发的伦理和实际考虑。
- en: Ethical and practical considerations
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 伦理和实际考虑因素
- en: It is important to consider the ethical and practical implications of incorporating
    AI into our Java applications. It is easy to succumb to the power offered by AI
    in how it can help us significantly enhance the efficiency and performance of
    our applications. This should not overshadow the moral obligation to consider
    the challenges related to data privacy, fairness, and transparency.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑将AI纳入我们的Java应用中的伦理和实际影响是很重要的。AI提供的力量很容易使我们屈服，它能显著提高我们应用的效率和性能。但这不应掩盖考虑与数据隐私、公平和透明度相关的挑战的道德义务。
- en: 'Let’s look at some of the key ethical implications of using AI in our applications.
    For each implication, a solution is suggested:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看使用AI在我们的应用中的一些关键伦理影响。对于每个影响，都提出了一种解决方案：
- en: '| **Ethical implication** | **Challenge** | **Solution** |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| **伦理影响** | **挑战** | **解决方案** |'
- en: '| **Data privacy** **and security** | AI models require large datasets and
    they can contain sensitive user information. | Implement data anonymization techniques.
    |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| **数据隐私** **和安全** | AI模型需要大量数据集，它们可能包含敏感的用户信息。 | 实施数据匿名化技术。 |'
- en: '| **Fairness** **and bias** | AI models can unintentionally perpetuate biases.
    | Use a diverse dataset that is representative of a wide spectrum. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| **公平** **和偏见** | AI模型可能无意中持续偏见。 | 使用具有广泛代表性的多样化数据集。 |'
- en: '| **Transparency** | Deep learning networks can thwart an underlying understanding.
    | Document and make AI model decisions transparent. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| **透明度** | 深度学习网络可能会阻碍对底层理解。 | 记录并使AI模型决策透明。 |'
- en: 'Table 18.1: Ethical implications of using AI, with suggested solutions'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 表18.1：使用AI的伦理影响及建议解决方案
- en: 'Next, let’s look at several practical challenges of using AI in our applications.
    For each challenge, a solution is suggested:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看使用AI在我们的应用中的一些实际挑战。对于每个挑战，都提出了一种解决方案：
- en: '| **Practical challenge** | **Challenge** | **Solution** |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| **实际挑战** | **挑战** | **解决方案** |'
- en: '| --- | --- | --- |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| **Continuous learning** **and maintenance** | AI models must be continuously
    updated. | Implement automated pipelines for retraining models. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| **持续学习和维护** | AI模型必须持续更新。 | 实施用于重新训练模型的自动化管道。 |'
- en: '| **Model interpretability** | We need to understand how AI models make their
    decisions so that we can troubleshoot and debug. | Use interpretable models and
    document the model learning process. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| **模型可解释性** | 我们需要理解AI模型是如何做出决策的，以便我们可以进行故障排除和调试。 | 使用可解释的模型并记录模型学习过程。 |'
- en: '| **Performance overhead** | AI is computationally heavy. | Optimize AI models,
    breaking them down into smaller component modules. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| **性能开销** | AI计算量大。 | 优化AI模型，将它们分解成更小的组件模块。 |'
- en: '| **Scalability** | Scaling AI-powered applications can drastically increase
    overhead. | Design with scalability in mind. Use scalable frameworks. |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| **可扩展性** | 扩展AI驱动的应用程序可能会大幅增加开销。 | 考虑可扩展性进行设计。使用可扩展的框架。 |'
- en: 'Table 18.2: Practical challenges of using AI, with suggested solutions'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 表18.2：使用AI的实际挑战及其建议解决方案
- en: 'Lastly, let’s review some strategic approaches to ensuring fairness and transparency
    in our AI-driven systems:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们回顾一些确保我们AI驱动系统公平性和透明度的战略方法：
- en: '**Clear documentation**: Documentation is a good practice for all software
    development and can be especially important when implementing AI models. Document
    the process, decisions, identified biases, strategies, limitations, and changes.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清晰的文档**：文档对于所有软件开发都是一项良好实践，在实施AI模型时尤其重要。记录过程、决策、识别的偏见、策略、限制和变更。'
- en: '**Regular audits**: Once you incorporate AI in your application, it is important
    to regularly conduct audits of your models. You should check for compliance with
    ethical standards and biases. These audits can be conducted manually or with the
    aid of automated tools.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定期审计**：一旦将AI纳入您的应用程序，定期对您的模型进行审计就很重要。您应检查是否符合伦理标准以及是否存在偏见。这些审计可以手动进行或借助自动化工具进行。'
- en: '**Stakeholder involvement**: Internal and external stakeholders should be involved
    in the design, development, and deployment of AI models. Depending on the size
    of your organization, you might consider adding experts from the following areas:'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利益相关者参与**：内部和外部利益相关者应参与AI模型的开发、设计和部署。根据您组织的大小，您可能需要考虑添加以下领域的专家：'
- en: Domain experts
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 领域专家
- en: Ethicists
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 伦理学家
- en: User representatives
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户代表
- en: '**User education**: It should not have to be said that communicating how AI
    is used in applications is critical. This transparency builds trust and is simply
    the right thing to do.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户教育**：无需多言，说明AI在应用中的使用方式至关重要。这种透明度建立信任，并且是正确的事情。'
- en: Incorporating AI into our Java applications represents tremendous potential
    benefits. It also comes with ethical and practical challenges. By addressing these
    challenges proactively, we can create AI-driven systems that are not only high-performing
    but also fair, transparent, and trustworthy. This is a professional and unadulterated
    approach to AI use in our Java applications.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 将AI集成到我们的Java应用程序中具有巨大的潜在利益。这也带来了伦理和实际挑战。通过积极应对这些挑战，我们可以创建不仅性能高，而且公平、透明和值得信赖的AI驱动系统。这是我们Java应用程序中AI使用的专业和纯净方法。
- en: Summary
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter explored how AI can be integrated into Java applications to enhance
    performance, efficiency, and reliability. The chapter covered an introduction
    to AI in Java, which included an overview of AI’s relevance to high-performance
    Java applications, highlighting current trends and future directions in AI. We
    also examined how AI can be used for code optimization and predicting performance
    bottlenecks.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 本章探讨了如何将AI集成到Java应用程序中以提高性能、效率和可靠性。本章涵盖了Java中AI的介绍，包括AI对高性能Java应用程序的相关性概述，突出了AI的当前趋势和未来方向。我们还研究了AI如何用于代码优化和预测性能瓶颈。
- en: The chapter also examined how AI can help improve monitoring and maintenance
    processes through anomaly detection, AI-based logging, and alerting systems. We
    also looked at the concept of predictive maintenance models. A review of AI service
    platforms included a look at TensorFlow, Apache Spark MLlib, AWS AI Services,
    and Google Cloud AI.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 本章还探讨了AI如何通过异常检测、基于AI的日志记录和警报系统来帮助改进监控和维护流程。我们还研究了预测性维护模型的概念。对AI服务平台的分析包括TensorFlow、Apache
    Spark MLlib、AWS AI服务和Google Cloud AI。
- en: We ended the chapter with a look at ethical and practical considerations, not
    as an afterthought to the book, but as a final important concept to leave you
    with. We addressed the ethical implications of using AI, including data privacy,
    fairness, transparency, and accountability. Solutions and best practices were
    discussed to ensure responsible and ethical AI integration.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以对伦理和实际考虑的探讨结束本章，这不仅是对本书的补充，而且是一个重要的最后概念，让您留下深刻印象。我们讨论了使用AI的伦理影响，包括数据隐私、公平性、透明度和问责制。讨论了解决方案和最佳实践，以确保负责任和道德的AI集成。
- en: By understanding and implementing the AI tools and techniques covered in this
    chapter, we are better able to create high-performance applications that are not
    only efficient and scalable but also ethical and trustworthy.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 通过理解和实施本章中涵盖的AI工具和技术，我们能够更好地创建既高效又可扩展、同时符合伦理且值得信赖的高性能应用程序。
- en: Epilogue
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后记
- en: You have reached the end of the book, and I hope that reading the chapters was
    a good use of your time. It is now important to consider high performance with
    Java from a holistic viewpoint and reflect on the core themes and insights explored
    throughout the book.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经到达了本书的结尾，我希望阅读这些章节是您时间的好投资。现在，重要的是要从整体的角度考虑Java的高性能，并反思本书中探讨的核心主题和见解。
- en: Our path to mastering Java high performance should be a continuous process of
    learning and trial and error, as well as a willingness to adapt to new challenges.
    The collection of concepts and techniques covered in this book was designed to
    help provide you with a solid foundation, but the real mastery will come when
    you start applying these concepts to your unique Java projects.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们掌握Java高性能的道路应该是一个持续的学习和试错过程，以及愿意适应新挑战的意愿。本书中涵盖的概念和技术集合旨在帮助您打下坚实的基础，但真正的精通将在您开始将这些概念应用到您独特的Java项目中时到来。
- en: Java continues to evolve and the current tools and techniques for performance
    optimization are incredibly sophisticated. The insights that can be gained from
    understanding the Java Virtual Machine, optimizing data structures, fine-tuning
    memory management, and leveraging advanced concurrency strategies are invaluable
    for any serious Java developer. The book’s exploration of frameworks, libraries,
    profiling tools, and emerging technologies such as AI highlights the fact that
    the dynamic nature of software development is core to our greater understanding.
    It also underscores the significance of the need to stay updated with the latest
    advancements.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Java持续发展，当前的性能优化工具和技术非常复杂。从理解Java虚拟机、优化数据结构、微调内存管理以及利用高级并发策略中获得的见解对于任何严肃的Java开发者来说都是无价的。本书对框架、库、分析工具以及如AI等新兴技术的探讨突显了软件开发动态性质的核心，也强调了跟上最新进展的重要性。
- en: The dedication to continuous improvement and performance excellence distinguishes
    a good developer from a great one. As you move forward, I encourage you to keep
    experimenting, stay curious, and never hesitate to dive deep into the inner workings
    of your code. Performance optimization is not just about writing faster code;
    it is about creating more efficient, scalable, and maintainable applications that
    can rise to meet both the demands of today and the challenges of tomorrow.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 对持续改进和性能卓越的奉献精神区分了优秀开发者与杰出开发者。随着您的前进，我鼓励您继续实验，保持好奇心，并且永远不要犹豫深入探究您代码的内部运作。性能优化不仅仅是编写更快的代码；它关乎创建更高效、可扩展和可维护的应用程序，这些应用程序能够满足今天的需求并应对明天的挑战。
- en: Thank you for joining me on this journey to achieve high performance with Java.
    I hope that the knowledge shared in these pages empowers you to build exceptional
    Java applications and inspires you to continue pushing the boundaries of what
    is possible.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您与我一同踏上使用Java实现高性能的旅程。我希望这些页面中分享的知识能够赋予您构建卓越Java应用程序的能力，并激励您继续拓展可能性的边界。
