["```java\nmvn archetype:generate \\\n    -DarchetypeGroupId=de.rieckpil.archetypes  \\\n    -DarchetypeArtifactId=testing-toolkit \\\n    -DarchetypeVersion=1.0.0 \\\n    -DgroupId=dev.davivieira \\\n    -DartifactId=framework \\\n    -Dversion=1.0-SNAPSHOT \\\n    -Dpackage=dev.davivieira.topologyinventory.framework \\\n    -DinteractiveMode=false\n```", "```java\n<modules>\n  <module>domain</module>\n  <module>application</module>\n  <module>framework</module>\n</modules>\n```", "```java\n<dependencies>\n  <dependency>\n    <groupId>dev.davivieira</groupId>\n    <artifactId>domain</artifactId>\n    <version>1.0-SNAPSHOT</version>\n  </dependency>\n  <dependency>\n    <groupId>dev.davivieira</groupId>\n    <artifactId>application</artifactId>\n    <version>1.0-SNAPSHOT</version>\n  </dependency>\n<dependencies>\n```", "```java\nmodule framework {\n    requires domain;\n    requires application;\n}\n```", "```java\npackage dev.davivieira.topologyinventory.application.\n  ports.output;\nimport\n  dev.davivieira.topologyinventory.domain.entity.Router;\nimport dev.davivieira.topologyinventory.domain.vo.Id;\npublic interface RouterManagementOutputPort {\n    Router retrieveRouter(Id id);\n    Router removeRouter(Id id);\n    Router persistRouter(Router router);\n}\n```", "```java\npackage dev.davivieira.topologyinventory.framework.\n  adapters.output.h2;\nimport dev.davivieira.topologyinventory.application.ports.\n  output.RouterManagementOutputPort;\nimport dev.davivieira.topologyinventory.domain.\n  entity.Router;\nimport dev.davivieira.topologyinventory.domain.vo.Id;\nimport dev.davivieira.topologyinventory.framework.adapters.\n  output.h2.data.RouterData;\nimport dev.davivieira.topologyinventory.framework.adapters.\n  output.h2.mappers.RouterH2Mapper;\nimport jakarta.persistence.EntityManager;\nimport jakarta.persistence.EntityManagerFactory;\nimport jakarta.persistence.Persistence;\nimport jakarta.persistence.PersistenceContext;\npublic class RouterManagementH2Adapter implements\n  RouterManagementOutputPort {\n    private static RouterManagementH2Adapter instance;\n    @PersistenceContext\n    private EntityManager em;\n    private RouterManagementH2Adapter(){\n        setUpH2Database();\n    }\n    /** Code omitted **/\n}\n```", "```java\n    @Override\n    public Router retrieveRouter(Id id) {\n        var routerData = em.getReference(\n                         RouterData.class, id.getUuid());\n        return RouterH2Mapper.\n          routerDataToDomain(routerData);\n    }\n    ```", "```java\n    @Override\n    public Router removeRouter(Id id) {\n        var routerData = em.getReference(\n                         RouterData.class, id.getUuid());\n        em.remove(routerData);\n        return null;\n    }\n    ```", "```java\n    @Override\n    public Router persistRouter(Router router) {\n        var routerData = RouterH2Mapper.\n                         routerDomainToData(router);\n        em.persist(routerData);\n        return router;\n    }\n    ```", "```java\npackage dev.davivieira.topologyinventory.application.\n  ports.output;\nimport dev.davivieira.topologyinventory.domain.\n  entity.Switch;\nimport dev.davivieira.topologyinventory.domain.vo.Id;\npublic interface SwitchManagementOutputPort {\n    Switch retrieveSwitch(Id id);\n}\n```", "```java\n/** Code omitted **/\npublic class SwitchManagementH2Adapter implements\n  SwitchManagementOutputPort {\n    /** Code omitted **/\n    @Override\n    public Switch retrieveSwitch(Id id) {\n        var switchData = em.getReference(\n                         SwitchData.class, id.getUuid());\n        return\n        RouterH2Mapper.switchDataToDomain(switchData);\n    }\n    /** Code omitted **/\n}\n```", "```java\npublic class RouterManagementGenericAdapter {\n    private RouterManagementUseCase\n      routerManagementUseCase;\n    public RouterManagementGenericAdapter(){\n        setPorts();\n    }\n    /** Code omitted **/\n}\n```", "```java\nprivate void setPorts(){\n    this.routerManagementUseCase =\n            new RouterManagementInputPort(\n            RouterManagementH2Adapter.getInstance()\n    );\n}\n/** Code omitted **/\n```", "```java\n    /**\n     * GET /router/retrieve/{id}\n     * */\n    public Router retrieveRouter(Id id){\n        return routerManagementUseCase.retrieveRouter(id);\n    }\n    /**\n     * GET /router/remove/{id}\n     * */\n    public Router removeRouter(Id id){\n        return routerManagementUseCase.removeRouter(id);\n    }\n    ```", "```java\n    /**\n     * POST /router/create\n     * */\n    public Router createRouter(Vendor vendor,\n                                   Model,\n                                   IP,\n                                   Location,\n                                   RouterType routerType){\n        var router = routerManagementUseCase.createRouter(\n                null,\n                vendor,\n                model,\n                ip,\n                location,\n                routerType\n       );\n       return routerManagementUseCase.\n         persistRouter(router);\n    }\n    ```", "```java\n    /**\n     * POST /router/add\n     * */\n    public Router addRouterToCoreRouter(\n        Id routerId, Id coreRouterId){\n        Router = routerManagementUseCase.\n        retrieveRouter(routerId);\n        CoreRouter =\n            (CoreRouter) routerManagementUseCase.\n            retrieveRouter(coreRouterId);\n        return routerManagementUseCase.\n                addRouterToCoreRouter(router, coreRouter);\n    }\n    ```", "```java\n    /**\n     * POST /router/remove\n     * */\n    public Router removeRouterFromCoreRouter(\n        Id routerId, Id coreRouterId){\n        Router =\n        routerManagementUseCase.\n        retrieveRouter(routerId);\n        CoreRouter =\n             (CoreRouter) routerManagementUseCase.\n             retrieveRouter(coreRouterId);\n        return routerManagementUseCase.\n                removeRouterFromCoreRouter(router,\n                  coreRouter);\n    }\n    ```", "```java\npackage dev.davivieira.topologyinventory.framework.\n  adapters.input.generic;\nimport dev.davivieira.topologyinventory.application.\n  ports.input.*\nimport dev.davivieira.topologyinventory.application.\n  usecases.*;\nimport dev.davivieira.topologyinventory.domain.entity.*;\nimport dev.davivieira.topologyinventory.domain.vo.*;\nimport dev.davivieira.topologyinventory.framework.\n  adapters.output.h2.*;\npublic class SwitchManagementGenericAdapter {\n    private SwitchManagementUseCase\n      switchManagementUseCase;\n    private RouterManagementUseCase\n      routerManagementUseCase;\n    public SwitchManagementGenericAdapter(){\n        setPorts();\n    }\n```", "```java\nprivate void setPorts(){\n    this.switchManagementUseCase =\n            new SwitchManagementInputPort(\n            SwitchManagementH2Adapter.getInstance()\n    );\n    this.routerManagementUseCase =\n            new RouterManagementInputPort(\n            RouterManagementH2Adapter.getInstance()\n    );\n}\n** Code omitted **\n```", "```java\n    /**\n     * GET /switch/retrieve/{id}\n     * */\n    public Switch retrieveSwitch(Id switchId) {\n        return switchManagementUseCase.\n          retrieveSwitch(switchId);\n    }\n    ```", "```java\n    /**\n     * POST /switch/create\n     * */\n    public EdgeRouter createAndAddSwitchToEdgeRouter(\n           Vendor,\n           Model,\n           IP,\n           Location,\n           SwitchType, Id routerId\n    ) {\n        Switch newSwitch = switchManagementUseCase.\n        createSwitch(vendor, model, ip, location,\n          switchType);\n        Router edgeRouter = routerManagementUseCase.\n        retrieveRouter(routerId);\n        if(!edgeRouter.getRouterType().equals\n          (RouterType.EDGE))\n            throw new UnsupportedOperationException(\n        \"Please inform the id of an edge router to add a\n         switch\");\n        Router = switchManagementUseCase.\n        addSwitchToEdgeRouter(newSwitch, (EdgeRouter)\n          edgeRouter);\n        return (EdgeRouter)\n        routerManagementUseCase.persistRouter(router);\n    }\n    ```", "```java\n    /**\n     * POST /switch/remove\n     * */\n    public EdgeRouter removeSwitchFromEdgeRouter(\n    Id switchId, Id edgeRouterId) {\n        EdgeRouter =\n                (EdgeRouter) routerManagementUseCase.\n                             retrieveRouter(edgeRouterId);\n        Switch networkSwitch = edgeRouter.\n                               getSwitches().\n                               get(switchId);\n        Router = switchManagementUseCase.\n                        removeSwitchFromEdgeRouter(\n                        networkSwitch, edgeRouter);\n        return (EdgeRouter) routerManagementUseCase.\n        persistRouter(router);\n    }\n    ```", "```java\npackage dev.davivieira.topologyinventory.framework.\n  adapters.input.generic;\nimport dev.davivieira.topologyinventory.application.\n  ports.input.*;\nimport dev.davivieira.topologyinventory.application.\n  usecases.*;\nimport dev.davivieira.topologyinventory.domain.\n  entity.Switch;\nimport dev.davivieira.topologyinventory.domain.vo.*;\nimport dev.davivieira.topologyinventory.framework.\n  adapters.output.h2.*;\npublic class NetworkManagementGenericAdapter {\n    private SwitchManagementUseCase\n      switchManagementUseCase;\n    private NetworkManagementUseCase\n    networkManagementUseCase;\n    public NetworkManagementGenericAdapter(){\n        setPorts();\n    }\n```", "```java\nprivate void setPorts(){\n    this.switchManagementUseCase =\n             new SwitchManagementInputPort(\n             SwitchManagementH2Adapter.getInstance());\n    this.networkManagementUseCase =\n             new NetworkManagementInputPort(\n             RouterManagementH2Adapter.getInstance());\n}\n/** Code omitted **/\n```", "```java\n    /**\n     * POST /network/add\n     * */\n    public Switch addNetworkToSwitch(Network network, Id\n      switchId) {\n        Switch networkSwitch = switchManagementUseCase.\n                               retrieveSwitch(switchId);\n        return networkManagementUseCase.\n               addNetworkToSwitch(\n               network, networkSwitch);\n    }\n    ```", "```java\n    /**\n     * POST /network/remove\n     * */\n    public Switch removeNetworkFromSwitch(\n    String networkName, Id switchId) {\n        Switch networkSwitch = switchManagementUseCase.\n                               retrieveSwitch(switchId);\n        return networkManagementUseCase.\n               removeNetworkFromSwitch(\n               networkName, networkSwitch);\n    }\n    ```", "```java\npublic class RouterTest extends FrameworkTestData {\n    RouterManagementGenericAdapter\n    routerManagementGenericAdapter;\n    public RouterTest() {\n        this.routerManagementGenericAdapter =\n        new RouterManagementGenericAdapter();\n        loadData();\n    }\n    /** Code omitted **/\n}\n```", "```java\n    @Test\n    public void retrieveRouter() {\n        var id = Id.withId(\n        \"b832ef4f-f894-4194-8feb-a99c2cd4be0c\");\n        var actualId = routerManagementGenericAdapter.\n                       retrieveRouter(id).getId();\n        assertEquals(id, actualId);\n    }\n    ```", "```java\n    @Test\n    public void createRouter() {\n        var ipAddress = \"40.0.0.1\";\n        var routerId  = this.\n        routerManagementGenericAdapter.createRouter(\n                Vendor.DLINK,\n                Model.XYZ0001,\n                IP.fromAddress(ipAddress),\n                locationA,\n                RouterType.EDGE).getId();\n        var router = this.routerManagementGenericAdapter.\n        retrieveRouter(routerId);\n        assertEquals(routerId, router.getId());\n        assertEquals(Vendor.DLINK, router.getVendor());\n        assertEquals(Model.XYZ0001, router.getModel());\n        assertEquals(ipAddress,\n        router.getIp().getIpAddress());\n        assertEquals(locationA, router.getLocation());\n        assertEquals(RouterType.EDGE,\n        router.getRouterType());\n    }\n    ```", "```java\n    @Test\n    public void addRouterToCoreRouter() {\n        var routerId = Id.withId(\n        \"b832ef4f-f894-4194-8feb-a99c2cd4be0b\");\n        var coreRouterId = Id.withId(\n        \"b832ef4f-f894-4194-8feb-a99c2cd4be0c\");\n        var actualRouter =\n        (CoreRouter) this.routerManagementGenericAdapter.\n        addRouterToCoreRouter(routerId,coreRouterId);\n        assertEquals(routerId,\n        actualRouter.getRouters().get(routerId).getId());\n    }\n    ```", "```java\n    @Test\n    public void removeRouterFromCoreRouter(){\n        var routerId = Id.withId(\n        \"b832ef4f-f894-4194-8feb-a99c2cd4be0a\");\n        var coreRouterId = Id.withId(\n        \"b832ef4f-f894-4194-8feb-a99c2cd4be0c\");\n        var removedRouter =\n        this.routerManagementGenericAdapter.\n        removeRouterFromCoreRouter(routerId,\n        coreRouterId);\n        var coreRouter =\n        (CoreRouter)this.routerManagementGenericAdapter.\n        retrieveRouter(coreRouterId);\n        assertEquals(routerId, removedRouter.getId());\n        assertFalse(\n        coreRouter.getRouters().containsKey(routerId));\n    }\n    ```", "```java\nmvn test\n```", "```java\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running dev.davivieira.topologyinventory.framework.NetworkTest\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.654 s - in dev.davivieira.topologyinventory.framework.NetworkTest\n[INFO] Running dev.davivieira.topologyinventory.framework.RouterTest\n[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in dev.davivieira.topologyinventory.framework.RouterTest\n[INFO] Running dev.davivieira.topologyinventory.framework.SwitchTest\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in dev.davivieira.topologyinventory.framework.SwitchTest\n```"]