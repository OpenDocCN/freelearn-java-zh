["```java\npublic class Example01 {\n    public static void main(String[] args) {\n        // declare a string with nothing inside\n        String text = null;\n        // you will see this at the console\n        System.out.println(\"Go Java Go!\");\n        // null'ed strings should crash your program\n        System.out.println(text.length());\n        // you will never see this print\n        System.out.println(\"done\");\n    }\n}\n```", "```java\nGo Java Go!\nException in thread \"main\" java.lang.NullPointerException\n     at Example01.main(Example01.java:11)\nProcess finished with exit code 1\n```", "```java\n// null'ed strings should crash your program\nint number = text.length();\nSystem.out.println(number);\n```", "```java\nGo Java Go!\nException in thread \"main\" java.lang.NullPointerException\n     at Example01.main(Example01.java:11)\nProcess finished with exit code 1\n```", "```java\npublic class Example02 {\n    public static void main(String[] args) {\n        // declare a string of a fixed length\n        String text = \"I <3 bananas\"; // 12 characters long\n        // provoke an exception\n        char character = text.charAt(15); // get the 15th element\n        // you will never see this print\n        System.out.println(\"done\");\n    }\n}\n```", "```java\nException in thread \"main\" java.lang.StringIndexOutOfBoundsException: String index out of range: 15\n      at java.lang.String.charAt(String.java:658)\n      at Example02.main(Example02.java:8)\nProcess finished with exit code 1\n```", "```java\nimport java.nio.file.*;\nimport java.util.*;\npublic class Example03 {\n    public static void main(String[] args) {\n        // declare a list that will contain all of the files\n        // inside of the readme.txt file\n        List<String> lines = Collections.emptyList();\n        // provoke an exception\n        lines = Files.readAllLines(Paths.get(\"readme.txt\"));\n        // you will never see this print\n        Iterator<String> iterator = lines.iterator();\n        while (iterator.hasNext())\n            System.out.println(iterator.next());\n    }\n}\n```", "```java\nError:(11, 35) java: unreported exception java.io.IOException; must be caught or declared to be thrown\n```", "```java\npublic class Example04 {\n    public static void main(String[] args) {\n        String vehicleType = null;\n        String vehicle = \"car\";\n        if (vehicleType.equals(vehicle)) {\n            System.out.println(\"it's a car\");\n        } else {\n            System.out.println(\"it's not a car\");\n        } \n    }\n}\n```", "```java\nException in thread \"main\" java.lang.NullPointerException\n      at Example04.main(Example04.java:5)\nProcess finished with exit code 1\n```", "```java\npublic class Example05 {\n    public static void main(String[] args) {\n        String vehicleType = null;\n        String vehicle = \"car\";\n        if (vehicle.equals(vehicleType)) {\n            System.out.println(\"it's a car\");\n        } else {\n            System.out.println(\"it's not a car\");\n        }\n    }\n}\n```", "```java\nit's not a car\nProcess finished with exit code 0\n```", "```java\npublic class Example06 {\n    private static void staticMethod() {\n        System.out.println(\"static method, accessible from null reference\");\n    }\n    private void nonStaticMethod() {\n        System.out.print(\"non-static method, inaccessible from null reference\");\n    }\n    public static void main(String args[]) {\n        Example06 object = null;\n        object.staticMethod();\n        //object.nonStaticMethod();\n    }\n}\n```", "```java\ntry {\n  // code that could generate an exception of the type ExceptionM\n} catch (ExceptionM e) {\n  // code to be executed in case of exception happening\n}\n```", "```java\npublic class Example07 {\n    public static void main(String[] args) {\n        // declare a string with nothing inside\n        String text = null;\n        // you will see this at the console\n        System.out.println(\"Go Java Go!\");\n        try {\n            // null'ed strings should crash your program\n            System.out.println(text.length());\n        } catch (NullPointerException ex) {\n            System.out.println(\"Exception: cannot get the text's length\");\n        }\n        // you will now see this print\n        System.out.println(\"done\");\n    }\n}\n```", "```java\nGo Java Go!\nException: cannot get the text's length\ndone\nProcess finished with exit code 0\n```", "```java\nExample08.java\n5  public class Example08 {\n6      public static void main(String[] args) {\n7          // declare a list that will contain all of the files\n8          // inside of the readme.txt file\n9          List<String> lines = Collections.emptyList();\n10 \n11         try {\n12             // provoke an exception\n13             lines = Files.readAllLines(Paths.get(\"readme.txt\"));\n14         } catch (NoSuchFileException fe) {\n15             System.out.println(\"Exception: File Not Found\");\n16         } catch (IOException ioe) {\n17             System.out.println(\"Exception: IOException\");\n18         }\nhttps://packt.live/2VU59wh\n```", "```java\nException: File Not Found\nProcess finished with exit code 0\n```", "```java\ntry {\n    // provoke an exception\n    lines = Files.readAllLines(Paths.get(\"readme.txt\"));\n} catch (NoSuchFileException fe) {\n    System.out.println(\"Exception: File Not Found\");\n    fe.printStackTrace();\n} catch (IOException ioe) {\n    System.out.println(\"Exception: IOException\");\n}\n```", "```java\nimport java.io.*;•\nimport java.nio.file.*;\nimport java.util.*;\npublic class Example09 {\n    public static void main(String[] args) {\n        List<String> lines = Collections.emptyList();\n        try {\n            lines = Files.readAllLines(Paths.get(\"readme.txt\"));\n        } catch (NullPointerException|IOException ex) {\n            System.out.println(\"Exception: File Not Found or NullPointer\");\n            ex.printStackTrace();\n        }\n        // you will never see this print\n        Iterator<String> iterator = lines.iterator();\n        while (iterator.hasNext())\n            System.out.println(iterator.next());\n    }\n}\n```", "```java\ntry {\n    // provoke an exception\n    lines = Files.readAllLines(Paths.get(\"readme.txt\"));\n} catch (NullPointerException|IOException ex) {\n    if (ex instanceof IOException) {\n        System.out.println(\"Exception: File Not Found\");\n    }\n    if (ex instanceof NullPointerException) {\n        System.out.println(\"Exception: NullPointer\");\n    }\n}\n```", "```java\n    import java.util.logging.*;\n    ```", "```java\n    Logger logger = Logger.getAnonymousLogger();\n    ```", "```java\n    String s = null;\n    try {\n        System.out.println(s.length());\n    } catch (NullPointerException ne) {\n        // do something here\n    }\n    ```", "```java\n    logger.log(Level.SEVERE, \"Exception happened\", ne);\n    ```", "```java\n    import java.util.logging.*;\n    public class LoggingExceptions {\n        public static void main(String[] args) {\n            Logger logger = Logger.getAnonymousLogger();\n            String s = null;\n            try {\n                System.out.println(s.length());\n            } catch (NullPointerException ne) {\n                logger.log(Level.SEVERE, \"Exception happened\", ne);\n            }\n        }\n    }\n    ```", "```java\n    may 09, 2019 7:42:05 AM LoggingExceptions main\n    SEVERE: Exception happened\n    java.lang.NullPointerException\n          at LoggingExceptions.main(LoggingExceptions .java:10)\n    Process finished with exit code 0\n    ```", "```java\nimport java.io.*;\nimport java.nio.file.*;\nimport java.util.*;\npublic class Example10 {\n    public static void main(String[] args) throws IOException {\n        // declare a list that will contain all of the files\n        // inside of the readme.txt file\n        List<String> lines = Collections.emptyList();\n        try {\n            lines = Files.readAllLines(Paths.get(\"readme.txt\"));\n        } catch (NoSuchFileException fe) {\n            System.out.println(\"Exception: File Not Found\");\n            //fe.printStackTrace();\n        }\n        // you will never see this print\n        Iterator<String> iterator = lines.iterator();\n        while (iterator.hasNext())\n            System.out.println(iterator.next());\n    }\n}\n```", "```java\npublic static void main(String[] args) throws IOException, NullPointerException {\n```", "```java\npublic class Example11 {\n    public static void main(String args[]) {\n        String text = null;\n        try {\n            System.out.println(text.length());\n        } catch (Exception e) {\n            System.out.println(\"Exception: this should be a NullPointerException\");\n            throw new RuntimeException();\n        }\n    }\n}\n```", "```java\nException: this should be a NullPointerException\nException in thread \"main\" java.lang.RuntimeException\n      at Example11.main(Example11.java:9)\nProcess finished with exit code 1\n```", "```java\n    public class BreakingTheLaw {\n        class MyException extends Exception {\n            // Constructor\n            MyException() {};\n        }\n        public static void main(String[] args) {\n          // write your code here\n        }\n    }\n    ```", "```java\n    // Constructor\n    public MyException() { \n        super(); \n    }\n    public MyException(String message) { \n        super(message); \n    }\n    public MyException(String message, Throwable cause) { \n        super(message, cause); \n    }\n    public MyException(Throwable cause) { \n        super(cause); \n    }\n    ```", "```java\n    public static class MyException extends Exception {\n    ```", "```java\n    public static void main(String[] args) throws MyException {\n    ```", "```java\n    public static void main(String[] args) throws MyException {\n        String s = null;\n        try {\n            System.out.println(s.length());\n        } catch (NullPointerException ne) {\n            throw new MyException(\"Exception: my exception happened\");\n        }\n    }\n    ```", "```java\n    Exception in thread \"main\" BreakingTheLaw$MyException: Exception: my exception happened\n          at BreakingTheLaw.main(BreakingTheLaw.java:26)\n    Process finished with exit code 1\n    ```", "```java\n    throw new MyException(\"Exception: my exception happened\", ne);\n    ```", "```java\n    Exception in thread \"main\" BreakingTheLaw$MyException: Exception: my exception happened\n          at BreakingTheLaw.main(BreakingTheLaw.java:26)\n    Caused by: java.lang.NullPointerException\n          at BreakingTheLaw.main(BreakingTheLaw.java:24)\n    Process finished with exit code 1\n    ```", "```java\nExample12.java\n11         try {\n12             // provoke an exception\n13             lines = Files.readAllLines(Paths.get(\"readme.txt\"));\n14         } catch (NoSuchFileException fe) {\n15             System.out.println(\"Exception: File Not Found\");\n16         } catch (IOException ioe) {\n17             System.out.println(\"Exception: IOException\");\n18         } finally {\n19             System.out.println(\"Exception: Case Closed\");\n20         }\nhttps://packt.live/2VTBFOS\n```", "```java\nException: File Not Found\nException: Case Closed\nProcess finished with exit code 0\n```", "```java\n    public static void issuePointerException() throws NullPointerException {\n        throw new NullPointerException(\"Exception: file not found\");\n    }\n    public static void issueFileException() throws NoSuchFileException {\n        throw new NoSuchFileException(\"Exception: file not found\");\n    }\n    ```", "```java\npublic class Example13 {\n    public static void main(String args[]) {\n        String text = null;\n        try {\n            System.out.println(text.length());\n        } catch (Exception e) {\n            System.out.println(\"Exception happened\");\n        }\n    }\n}\n```", "```java\ntry {\n    System.out.println(text.length());\n} catch (Throwable e) {\n    System.out.println(\"Exception happened\");\n}\n```", "```java\n} catch (OriginalException e) {\n    throw new MyVeryOwnException(\"Exception trace: \", e);\n}\n```", "```java\nthrow new NewException();\n```", "```java\nlog.error(\"Exception trace: \", e);\n```", "```java\nlog.debug(\"Exception trace happened here\");\nlog.debug(\"It was a bad thing\");\n```", "```java\nlog.debug(\"Exception trace happened here. It was a bad thing\");\n```", "```java\ntry {\n    tryAnExceptionCode();\n} catch (SpecificException se) {\n    doTheCatch1();\n} catch (ParentException pe) {\n    doTheCatch2();\n}\n```", "```java\ntry {\n    tryAnExceptionCode();\n} finally {\n    closeWhatever();\n}\n```", "```java\n/**\n* Method name and description\n*\n* @param input\n* @throws ThisStrangeException when ...\n*/\npublic void myMethod(Integer input) throws ThisStrangeException {\n    ...\n}\n```"]