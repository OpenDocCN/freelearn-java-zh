["```java\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\n\n@Entity\npublic class Company {\n\n    // Some code\n\n    @Id\n    private String companyName;\n\n    public Company () {  }\n\n    // Some code\n\n}\n```", "```java\nCREATE DATABASE ticketsystem;\nCREATE USER jboss WITH PASSWORD 'jboss';\nGRANT ALL PRIVILEGES ON DATABASE ticketsystem TO jboss;\n\n```", "```java\n<module  name=\"org.postgresql\"> \n  <resources>\n    <resource-root path=\"postgresql-9.3-1101.jdbc41.jar\"/>\n  </resources>\n  <dependencies>\n    <module name=\"javax.api\"/>\n    <module name=\"javax.transaction.api\"/>\n  </dependencies>\n</module>\n```", "```java\n<subsystem >\n <datasources>\n  <datasource jta=\"false\" \n      jndi-name=\"java:jboss/datasources/wflydevelopment\" \n      pool-name=\"wflydevelopment\" enabled=\"true\">\n          <connection-url>\n           jdbc:postgresql://localhost:5432/ticketsystem\n          </connection-url>\n          <driver-class>org.postgresql.Driver</driver-class>\n          <driver>postgresql</driver>\n          <security>\n               <user-name>jboss</user-name>\n               <password>jboss</password>\n          </security>\n  </datasource>\n  <drivers>\n         <driver name=\"postgresql\" module=\"org.postgresql\"/>\n  </drivers>\n </datasources>\n</subsystem>\n```", "```java\n[disconnected /] connect\n[standalone@localhost:9990 /]\n```", "```java\n/subsystem=datasources/data-source=wflydevelopment:add(jndi-name=java:jboss/datasources/wflydevelopment, driver-name=postgresql, connection-url= jdbc:postgresql://localhost:5432/ticketsystem,user-name=\"jboss\",password=\"jboss\")\n\n```", "```java\n    <dependency>\n        <groupId>javax</groupId>\n        <artifactId>javaee-api</artifactId>\n        <version>7.0</version>\n        <scope>provided</scope>\n    </dependency>\n```", "```java\n@Entity [1]\n@Table(name=\"seat_type\") [2]\npublic class SeatType implements Serializable {\n\n    @Id  [3]\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private Long id;\n\n    private String description;\n\n    private int price;\n\n    private int quantity;\n\n    //bi-directional many-to-one association to Seat\n @OneToMany(mappedBy=\"seatType\", fetch=FetchType.EAGER) [4]\n private List<Seat> seats;\n\n    // Getters and Setters omitted for brevity\n}\n```", "```java\n@Entity\npublic class Seat implements Serializable {\n\n    private static final long serialVersionUID = 89897231L;\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private Long id;\n\n    private boolean booked;\n\n    //bi-directional many-to-one association to SeatType\n @ManyToOne [1]\n @JoinColumn(name=\"seat_id\") [2]\n    private SeatType seatType;\n\n    // Getters and Setters omitted for brevity\n\n}\n```", "```java\n@Entity\n@Table(name=\"seat_type)\npublic class SeatType implements Serializable {\n\n    private static final long serialVersionUID = 3643635L;\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private Long id;\n\n @NotNull\n @Size(min = 1, max = 25, message = \"You need to enter a Seat Description (max 25 char)\")\n @Pattern(regexp = \"[A-Za-z ]*\", message = \"Description must contain only letters and spaces\")\n    private String description;\n\n @NotNull\n    private Integer price;\n\n @NotNull\n    private Integer quantity;\n\n private SeatPosition position;\n\n    // Getters/Setters here\n}\n```", "```java\npublic enum SeatPosition {\n    ORCHESTRA(\"Orchestra\", \"orchestra\"), BOX(\"Box\", \"box\"), BALCONY(\"Balcony\", \"balcony\");\n\n    private final String label;\n    private final String dbRepresentation;\n\n    private SeatPosition(String label, String dbRepresentation) {\n        this.label = label;\n        this.dbRepresentation = dbRepresentation;\n\n    }\n\n    public String getDatabaseRepresentation() {\n        return dbRepresentation;\n    }\n\n    public String getLabel() {\n        return label;\n    }\n}\n```", "```java\nimport javax.persistence.AttributeConverter;\nimport javax.persistence.Converter;\n\n@Converter(autoApply = true)\npublic class SeatPositionConverter implements AttributeConverter<SeatPosition, String> {\n\n    @Override\n    public String convertToDatabaseColumn(SeatPosition attribute) {\n        return attribute.getDatabaseRepresentation();\n    }\n\n    @Override\n    public SeatPosition convertToEntityAttribute(String dbData) {\n        for (SeatPosition seatPosition : SeatPosition.values()) {\n            if (dbData.equals(seatPosition.getDatabaseRepresentation())) {\n                return seatPosition;\n            }\n        }\n        throw new IllegalArgumentException(\"Unknown attribute value \" + dbData);\n    }\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence \n\n             xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\n             version=\"2.1\">\n <persistence-unit name=\"primary\">\n <jta-data-source>java:jboss/datasources/ExampleDS</jta-data-source>\n        <class>com.packtpub.wflydevelopment.chapter5.entity.Seat</class>\n        <class>com.packtpub.wflydevelopment.chapter5.entity.SeatType</class>\n        <properties>\n <property name=\"javax.persistence.schema-generation.database.action\" value=\"drop-and-create\"/>\n        </properties>\n    </persistence-unit>\n</persistence>\n```", "```java\n<property name=\"javax.persistence.schema-generation-target\" value=\"scripts\"/>\n<property name=\"javax.persistence.ddl-create-script-target\" value=\"createSeats.sql\"/>\n<property name=\"javax.persistence.ddl-drop-script-target\" value=\"dropSeats.sql\"/>\n```", "```java\npublic class LoggerProducer {\n\n    @Produces\n    public Logger produceLoger(InjectionPoint injectionPoint) {\n        return Logger.getLogger(injectionPoint.getMember().getDeclaringClass().getName());\n    }\n} \n\npublic class FacesContextProducer {\n\n    @Produces\n    @RequestScoped\n    public FacesContext produceFacesContext() {\n        return FacesContext.getCurrentInstance();\n    }\n} \n\npublic class EntityManagerProducer {\n\n    @Produces\n    @PersistenceContext\n    private EntityManager em;\n}\n```", "```java\n@javax.enterprise.context.RequestScoped\npublic class SeatTypeProducer {\n\n    @Inject\n    private SeatTypeDao seatTypeDao;\n\n    private List<SeatType> seatTypes;\n\n    @PostConstruct\n    public void retrieveAllSeatTypes() {\n        seatTypes = seatTypeDao.findAll();\n    }\n\n    @Produces\n    @Named\n    public List<SeatType> getSeatTypes() {\n        return seatTypes;\n    }\n\n    public void onListChanged(@Observes(notifyObserver = Reception.IF_EXISTS) final SeatType member) {\n        retrieveAllSeatTypes();\n    }\n}\n```", "```java\n@javax.enterprise.context.RequestScoped\npublic class SeatProducer implements Serializable {\n\n    @Inject\n    private SeatDao seatDao;\n\n    private List<Seat> seats;\n\n    @PostConstruct\n    public void retrieveAllSeats() {\n        seats = seatDao.findAllSeats();\n    }\n\n    @Produces\n    @Named\n    public List<Seat> getSeats() {\n      return seats;\n    }\n\n    public void onMemberListChanged(@Observes(notifyObserver = Reception.IF_EXISTS) final Seat member) {\n      retrieveAllSeats();\n    }\n}\n```", "```java\n@Stateless\npublic class SeatDao extends AbstractDao<Seat> {\n\n    public SeatDao() {\n        super(Seat.class);\n    }\n}\n\n@Stateless\npublic class SeatTypeDao extends AbstractDao<SeatType> {\n\n    public SeatTypeDao() {\n        super(SeatType.class);\n    }\n}\n\n@TransactionAttribute(TransactionAttributeType.REQUIRED)\npublic abstract class AbstractDao<T extends Serializable> implements Serializable {\n\n    private final Class<T> clazz;\n\n    @Inject\n    private EntityManager em;\n\n    public AbstractDao(Class<T> clazz) {\n        this.clazz = clazz;\n    }\n\n    public T find(Object id) {\n        return em.find(clazz, id);\n    }\n\n    public void persist(final T entity) {\n        em.persist(entity);\n    }\n\n    public List<T> findAll() {\n        final CriteriaQuery<T> criteriaQuery = em.getCriteriaBuilder().createQuery(clazz);\n        criteriaQuery.select(criteriaQuery.from(clazz));\n        return em.createQuery(criteriaQuery).getResultList();\n    }\n\n    public void deleteAll() {\n        final CriteriaDelete<T> criteriaDelete = em.getCriteriaBuilder().createCriteriaDelete(clazz);\n        criteriaDelete.from(clazz);\n        em.createQuery(criteriaDelete).executeUpdate();\n    }\n}\n```", "```java\nentityManager.createNativeQuery(\"SELECT * from seat_type\").getResultList()\n```", "```java\nentityManager.createQuery(\"select seatType from SeatType seatType\").getResultList(); \n```", "```java\nfinal CriteriaQuery<SeatType> criteriaQuery = \n                em.getCriteriaBuilder().createQuery(SeatType.class);\ncriteriaQuery.select(criteriaQuery.from(SeatType.class));\nem.createQuery(criteriaQuery).getResultList(); \n```", "```java\n@Stateless\npublic class TicketService {\n\n    @Inject\n    private Logger log;\n\n    @Inject\n    private Event<SeatType> seatTypeEventSrc;\n\n    @Inject\n    private Event<Seat> seatEventSrc;\n\n    @Inject\n    private SeatDao seatDao;\n\n    @Inject\n    private SeatTypeDao seatTypeDao;\n\n    public void createSeatType(SeatType seatType) throws Exception {\n        log.info(\"Registering \" + seatType.getDescription());\n        seatTypeDao.persist(seatType);\n        seatTypeEventSrc.fire(seatType);\n    }\n\n    public void createTheatre(List<SeatType> seatTypes) {\n        for (SeatType type : seatTypes) {\n            for (int ii = 0; ii < type.getQuantity(); ii++) {\n                final Seat seat = new Seat();\n                seat.setBooked(false);\n                seat.setSeatType(type);\n                seatDao.persist(seat);\n            }\n        }\n    }\n\n    public void bookSeat(long seatId) {\n        final Seat seat = seatDao.find(seatId);\n        seat.setBooked(true);\n        seatDao.persist(seat);\n        seatEventSrc.fire(seat);\n    }\n\n    public void doCleanUp() {\n        seatDao.deleteAll();\n        seatTypeDao.deleteAll();\n    }\n}\n```", "```java\n@Named\n@javax.faces.view.ViewScoped\npublic class BookerService implements Serializable {\n\n    private static final long serialVersionUID = -4121692677L;\n\n    @Inject\n    private Logger logger;\n\n    @Inject\n    private TicketService ticketService;\n\n    @Inject\n    private FacesContext facesContext;\n\n    private int money;\n\n    @PostConstruct\n    public void createCustomer() {\n        this.money = 100;\n    }\n\n    public void bookSeat(long seatId, int price) {\n        logger.info(\"Booking seat \" + seatId);\n\n        if (price > money) {\n            final FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_ERROR, \"Not enough Money!\",\n                    \"Registration successful\");\n            facesContext.addMessage(null, m);\n            return;\n        }\n\n        ticketService.bookSeat(seatId);\n\n        final FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Registered!\", \"Registration successful\");\n        facesContext.addMessage(null, m);\n        logger.info(\"Seat booked.\");\n\n        money = money - price;\n    }\n\n    public int getMoney() {\n        return money;\n    }\n}\n```", "```java\n@Model\npublic class TheatreSetupService {\n\n    @Inject\n    private FacesContext facesContext;\n\n    @Inject\n    private TicketService ticketService;\n\n    @Inject\n    private List<SeatType> seatTypes;\n\n @Produces [1]\n @Named\n private SeatType newSeatType;\n\n    @PostConstruct\n    public void initNewSeatType() {\n        newSeatType = new SeatType();\n    }\n\n    public String createTheatre() {\n        ticketService.createTheatre(seatTypes);\n        return \"book\";\n    }\n\n    public String restart() {\n        ticketService.doCleanUp();\n        return \"/index\";  [4]\n    }\n\n    public void addNewSeats() throws Exception {\n        try {\n            ticketService.createSeatType(newSeatType);\n\n            final FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Done!\", \"Seats Added\");\n            facesContext.addMessage(null, m);\n            initNewSeatType();\n        } catch (Exception e) {\n            final String errorMessage = getRootErrorMessage(e);\n            FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_ERROR, errorMessage, \"Error while saving data\");\n            facesContext.addMessage(null, m);\n        }\n    }\n\n    private String getRootErrorMessage(Exception e) {\n        // Default to general error message that registration failed.\n        String errorMessage = \"Registration failed. See server log for more information\";\n        if (e == null) {\n            // This shouldn't happen, but return the default messages\n            return errorMessage;\n        }\n\n        // Start with the exception and recurse to find the root cause\n        Throwable t = e;\n        while (t != null) {\n            // Get the message from the Throwable class instance\n            errorMessage = t.getLocalizedMessage();\n            t = t.getCause();\n        }\n        // This is the root cause message\n        return errorMessage;\n    }\n\n    public List<SeatPosition> getPositions() {\n        return Arrays.asList(SeatPosition.values());\n    }\n\n}\n```", "```java\n<dependency>\n    <groupId>org.webjars</groupId>\n    <artifactId>bootstrap</artifactId>\n    <version>3.2.0</version>\n</dependency>\n<dependency>\n    <groupId>org.webjars</groupId>\n    <artifactId>jquery</artifactId>\n    <version>1.11.0</version>\n</dependency>\n```", "```java\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html \n\n      >\n<h:head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <title>#{app.applicationName}</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta name=\"description\" content=\"\" />\n    <meta name=\"author\" content=\"\" />\n\n    <h:outputStylesheet name=\"/webjars/bootstrap/3.2.0/css/bootstrap.css \" />\n    <h:outputStylesheet name=\"/webjars/bootstrap/3.2.0/css/bootstrap-theme.css \" />\n\n    <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->\n    <!--[if lt IE 9]>\n      <script src=\"img/html5.js\"></script>\n    <![endif]-->\n\n<style>\n    body {\n        padding-top: 60px;\n    }\n    </style>\n</h:head>\n<h:body>\n    <div class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n    <div class=\"container\">\n    <div class=\"navbar-header\">\n        <h:link outcome=\"/index\" class=\"navbar-brand\" value=\"Ticket Agency\" />\n    </div>\n    <div class=\"collapse navbar-collapse\">\n        <ul class=\"nav navbar-nav\">\n        <li class=\"#{view.viewId =='/views/setup.xhtml' ? 'active':''}\">\n<h:link outcome=\"/views/setup\" value=\"Theatre setup\" /></li>\n        <li class=\"#{view.viewId =='/views/book.xhtml' ? 'active':''}\">\n<h:link  outcome=\"/views/book\" value=\"Book tickets\" /></li>\n        </ul>\n    </div>\n    </div>\n    </div>\n\n    <div class=\"container\">\n        <ui:insert name=\"content\">\n            [Template content will be inserted here]\n        </ui:insert>\n        <hr />\n        <footer>\n        <p class=\"text-muted\">&copy; Company 2014</p>\n        </footer>\n    </div>\n    <h:outputScript name=\"/webjars/jquery/1.11.0/jquery.js\" />\n    <h:outputScript name=\"/webjars/bootstrap/3.2.0/js/bootstrap.js \" />\n</h:body>\n</html>\n```", "```java\n<ui:composition \n\n                template=\"/WEB-INF/templates/default.xhtml\"\n                >\n<div class=\"jumbotron\">\n    <h1>Theatre Setup</h1>\n    <p>Enter the information about Seats</p>\n</div>\n\n<div class=\"row\">\n<div class=\"col-md-6\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">Add seats</h3>\n        </div>\n        <div class=\"panel-body\">\n            <h:form id=\"reg\" role=\"form\">\n        <div class=\"form-group has-feedback #{!desc.valid? 'has-error' : ''}\">\n            <h:outputLabel for=\"desc\" value=\"Description\"\n                        styleClass=\"control-label\" />\n            <h:inputText id=\"desc\" value=\"#{newSeatType.description}\"\n            p:placeholder=\"Enter a description here\" class=\"form-control\"\n                        binding=\"#{desc}\" />\n            <span class=\"#{!desc.valid ? 'glyphicon glyphicon-remove form-control-feedback' : ''}\" />\n            <h:message for=\"desc\" errorClass=\"control-label has-error\" />\n        </div>\n        <div class=\"form-group  #{!price.valid and facesContext.validationFailed? 'has-error' : ''}\">\n<h:outputLabel for=\"price\" value=\"Price:\"\n                        styleClass=\"control-label\" />\n            <div class=\"input-group  has-feedback\">\n            <span class=\"input-group-addon\">$</span>\n            <h:inputText id=\"price\" value=\"#{newSeatType.price}\"\n            class=\"form-control\" p:placeholder=\"Enter a price\"\n                            binding=\"#{price}\" />\n            <span class=\"#{!price.valid ? 'glyphicon glyphicon-remove input-group-feedback input-group-addon' : ''}\" />\n            </div>\n            <h:message for=\"price\" errorClass=\"control-label has-error\" />\n        </div>\n        <div class=\"form-group has-feedback #{!quantity.valid and facesContext.validationFailed? 'has-error' : ''}\">\n            <h:outputLabel for=\"quantity\" value=\"Number of Seats:\"\n                    styleClass=\"control-label\" />\n            <h:inputText id=\"quantity\" value=\"#{newSeatType.quantity}\"\n                class=\"form-control\" p:placeholder=\"Enter quantity\"\n                        binding=\"#{quantity}\" />\n            <span class=\"#{!quantity.valid ? 'glyphicon glyphicon-remove form-control-feedback' : ''}\" />\n            <h:message for=\"quantity\" errorClass=\"control-label has-error\" />\n        </div>\n        <div class=\"form-group\">\n            <h:outputLabel for=\"position\" value=\"Position:\"\n                styleClass=\"control-label\" />\n            <h:selectOneMenu value=\"#{newSeatType.position}\" id=\"position\"\n                class=\"form-control\">\n            <f:selectItems value=\"#{theatreSetupService.positions}\"\n                var=\"pos\" itemValue=\"#{pos}\" itemLabel=\"#{pos.label}\" />\n            </h:selectOneMenu>\n        </div>\n\n            <div class=\"form-group\">\n<h:commandButton id=\"Add\" action = \"#{theatreSetupService. addNewSeats}\" value=\"Add styleClass=\"btn btn-primary\" />\n            </div>\n            <h:messages styleClass=\"messages\" style=\"list-style: none; padding:0; margin:0;\" errorClass=\"alert alert-error\" infoClass=\"alert alert-success\"\n            warnClass=\"alert alert-warning\" globalOnly=\"true\" />\n            </h:form>\n        </div>\n    </div> \n</div>\n// some code\n</div>\n</ui:define>\n</ui:composition>\n```", "```java\n<div class=\"col-md-6\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n            <h2 class=\"panel-title\">Seats List</h2>\n        </div>\n        <div class=\"panel-body\">\n            <h:form id=\"reg2\">\n                <h:commandButton id=\"Finish\"\n                    action=\"#{theatreSetupService.createTheatre}\"\n                    value=\"Finalize the theatre setup\"\n                    styleClass=\"btn btn-default  btn-block\" />\n            </h:form>\n        </div>\n        <h:panelGroup rendered=\"#{empty seatTypes}\">\n            <em>No Seats Added.</em>\n        </h:panelGroup>\n        <h:dataTable var=\"seatType\" value=\"#{seatTypes}\"\n            rendered=\"#{not empty seatTypes}\"\n            styleClass=\"table table-hover table-striped \">\n            <h:column>\n                <f:facet name=\"header\">Id</f:facet>\n                 #{seatType.id}\n             </h:column>\n            <h:column>\n                <f:facet name=\"header\">Name</f:facet>\n                 #{seatType.description}\n             </h:column>\n            <h:column>\n                <f:facet name=\"header\">Position</f:facet>\n                 #{seatType.position.label}\n             </h:column>\n            <h:column>\n                <f:facet name=\"header\">Price</f:facet>\n                 $ #{seatType.price}\n             </h:column>\n            <h:column>\n                <f:facet name=\"header\">Quantity</f:facet>\n                 #{seatType.quantity}\n             </h:column>\n        </h:dataTable>\n\n    </div>\n</div>\n</div>\n</ui:define>\n```", "```java\n    <ui:define name=\"content\">\n    <div class=\"page-header\">\n        <h2>TicketBooker Machine</h2>\n    </div>\n\n    <h3>Money: $ #{bookerService.money}</h3>\n\n    <h:form id=\"reg\">\n        <h:messages styleClass=\"messages\"\n            style=\"list-style: none; padding:0; margin:0;\"\n            errorClass=\"alert alert-error\" infoClass=\"alert alert-success\"\n            warnClass=\"alert alert-warning\" globalOnly=\"true\" />\n\n        <h:commandButton id=\"restart\" action=\"#{theatreSetupService.restart}\"\n            value=\"Restart Application\" class=\"btn btn-default\" />\n\n        <h:dataTable var=\"seat\" value=\"#{seats}\"\n            rendered=\"#{not empty seats}\"\n            styleClass=\"table table-hover table-striped \">\n\n            <h:column>\n                <f:facet name=\"header\">Id</f:facet>\n                    #{seat.id}\n            </h:column>\n\n            <h:column>\n                <f:facet name=\"header\">Description</f:facet>\n                    #{seat.seatType.description}\n            </h:column>\n            <h:column>\n                <f:facet name=\"header\">Price</f:facet>\n                    #{seat.seatType.price}$\n            </h:column>\n            <h:column>\n                <f:facet name=\"header\">Position</f:facet>\n                    #{seat.seatType.position.label}\n            </h:column>\n            <h:column>\n                <f:facet name=\"header\">Booked</f:facet>\n                <span class=\"glyphicon glyphicon-#{seat.booked ? 'ok' :'remove'}\"></span>\n            </h:column>\n            <h:column>\n                <f:facet name=\"header\">Action</f:facet>\n                <h:commandButton id=\"book\" \n                    action=\"#{bookerService.bookSeat(seat.id, seat.seatType.price)}\" \n                    disabled=\"#{seat.booked}\" class=\"btn btn-primary\"   \n                    value=\"#{seat.booked ? 'Reserved' : 'Book'}\" />\n            </h:column>\n        </h:dataTable>\n    </h:form>\n</ui:define>\n```", "```java\nmvn package\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------------------------------------------------\n[INFO] Building ticket-agency-jpa 1.0 \n[INFO] ---------------------------------------------------------------\n[INFO] Building war: C:\\chapter5\\ticket-agency-jpa\\target\\ticket-agency-jpa.war\n. . . . \n[INFO] ---------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ---------------------------------------------------------------\n[INFO] Total time: 1.799s\n```", "```java\nmvn wildfly:deploy\n\n```"]