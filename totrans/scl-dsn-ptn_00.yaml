- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Software engineering and design has existed for many years now. We use software
    almost everywhere in our lives, and this makes programs distinct in terms of the
    problems they solve.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of the number of things that can be done with programming, there
    are still some specific features that repeat over and over again. Over time, people
    have come up with some best practices that help to tackle specific patterns that
    emerge in programs. These are called design patterns.
  prefs: []
  type: TYPE_NORMAL
- en: Design patterns solve not only commonly occurring problems, but also deal with
    language limitations. No matter what the specific design patterns are and what
    single issue they solve, all of them in the end aim at producing better software.
    This includes improved readability, simplicity, easier maintainability, testability,
    extendibility, and efficiency. Today, design patterns are an important part of
    every good software engineer's arsenal.
  prefs: []
  type: TYPE_NORMAL
- en: Together with the large number of problems that we tackle with programming,
    there are also many languages that we can use. Every language is different and
    has its strengths and weaknesses, so we also need to take this into consideration
    when doing something. In this book, we will look at design patterns from the point
    of view of Scala.
  prefs: []
  type: TYPE_NORMAL
- en: Scala has become extremely popular in the last couple of years, and the numbers
    using it keep growing. Many companies use it in production for various purposes—big
    data processing, writing APIs, machine learning, and so on. Switching to Scala
    from popular languages, such as Java, turns out to be quite simple because it
    is a hybrid of an object-oriented language and a functional programming language.
    Using Scala to its full potential, however, requires us to be familiar with not
    only the object-oriented features, but also with the functional ones. The use
    of Scala could improve performance and the time it takes to implement the features.
    One of the reasons is the really high expressivity of Scala.
  prefs: []
  type: TYPE_NORMAL
- en: The fact that Scala is close to object-oriented languages means that many of
    the design patterns for object-oriented programming are still applicable here.
    The fact that it is also functional means that some other design patterns are
    also applicable, and some of the object-oriented ones could be modified to better
    fit the paradigm of Scala. In this book, we will be focusing on all of them—we
    will go through some specific features of Scala and then look at the popular Gang
    of Four design patterns viewed from the Scala perspective. We will also become
    familiar with design patterns that are exclusive to Scala and understand different
    functional programming concepts, including monoids and monads. Having meaningful
    examples always makes learning and understanding easier. We will try to provide
    examples that you can easily map to real problems that you would potentially be
    solving. We will also introduce some libraries that will be useful for anyone
    who writes real-world applications.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is aimed for people who already have some knowledge of Scala, but
    want to get a more practical understanding of how to apply it in real-world application
    development. This book is also useful as a reference to consult while designing
    applications. Having an understanding of the importance of using best practices
    and writing nice code is good; however, even if you don't, hopefully, you will
    be convinced by the time you finish reading this book. Prior knowledge of design
    patterns is not required, but if you are familiar with some, this book will be
    useful, as we will take a look at them from the point of view of Scala.
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book assumes that the reader is already familiar with Scala. We have provided
    examples for each chapter in projects using Maven and SBT. You should have some
    knowledge of either one of these tools and have it installed on your machine.
    You are also recommended to have a modern and up-to-date IDE installed on your
    computer, for example, IntelliJ. You are encouraged to open the actual projects,
    as the examples in this book focus on the design patterns and, in some cases,
    imports are omitted in favor of space.
  prefs: []
  type: TYPE_NORMAL
- en: The examples in the book were written and tested on a Unix-based operating system;
    however, they should also successfully compile and run on Windows.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Scala-Design-Patterns-Second-Edition](https://github.com/PacktPublishing/Scala-Design-Patterns-Second-Edition). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "The base class is specified using `extends` and then all
    traits are added using the `with` keyword."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  prefs: []
  type: TYPE_NORMAL
