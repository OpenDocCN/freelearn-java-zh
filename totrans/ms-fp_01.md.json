["```java\n#include <iostream>\nusing namespace std;\nint main() {\n  int x = 0;    \n  loop_start:\n   x++;\n  cout << x << \"\\n\";\n  if (x < 10) goto loop_start;\n  return 0;\n}\n```", "```java\nint main() {\n int x = 0;\n loop_start:\n  x++;\n cout << x << \"\\n\";\n goto loop_start;\n return 0;\n}\n```", "```java\n int rows = 3;\n int cols = 3;\n int matrix[rows][cols] = {\n   { 1, 2, 3 },\n   { 4, 5, 6 },\n   { 7, 8, 9 }\n };\n```", "```java\n int r = 0;\n row_loop:\n if (r < rows) {\n  int c = 0;\n   col_loop:\n   if (c < cols) {\n  cout << matrix[r][c] << \" \";\n     c++;\n     goto col_loop;\n   }\n   cout << \"\\n\";\n   r++;\n   goto row_loop;\n } return 0;}\n```", "```java\n int r = 0;\n row_loop:\n if (r < rows) {\n   int c = 0;\n  col_loop:\n  if (c < cols) {\n    cout << matrix[r][c] << \" \";\n     c++; \n    goto row_loop;\n  }\n  cout << \"\\n\";\n   r++;\n   goto row_loop;\n }\n```", "```java\n#include <iostream>\nusing namespace std;\nint main() {\n  int rows = 3;\n  int cols = 3;\n  int matrix[rows][cols] = {\n    { 1, 2, 3 },\n    { 4, 5, 6 },\n    { 7, 8, 9 }\n  };\n  for (int r = 0; r < rows; r++) {\n    for (int c = 0; c < cols; c++) cout << matrix[r][c] << \" \";\n    cout << \"\\n\";\n  }\n}\n```", "```java\n// Source collection\nList<String> employees = new ArrayList<String>();\nemployees.add(\"Ann\");\nemployees.add(\"John\");\nemployees.add(\"Amos\");\nemployees.add(\"Jack\");\n// Those employees with their names starting with 'A'\nList<String> result = new ArrayList<String>();\nfor (String e: employees)\n  if (e.charAt(0) == 'A') result.add(e);\n   System.out.println(result);\n```", "```java\n// Source collection\nval employees = List(\n  \"Ann\"\n, \"John\"\n, \"Amos\"\n, \"Jack\")\n// Those employees with their names starting with 'A'\nval result = employees.filter ( e => e(0) == 'A' )\nprintln(result)\n```"]