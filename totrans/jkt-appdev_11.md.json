["```java\npackage com.ensode.jakartaeebook.simpleapp;\n//imports omitted for brevity\n@WebServlet(urlPatterns = {\"/simpleservlet\"})\npublic class SimpleServlet extends HttpServlet {\n  @Override\n  protected void doGet(HttpServletRequest req,\n   HttpServletResponse res) {\n    try {\n      res.setContentType(\"text/html\");\n      PrintWriter printWriter = res.getWriter();\n      printWriter.println(\"<h2>\");\nprintWriter\n        .println(\"Hello servlet world!\");\n      printWriter.println(\"</h2>\");\n    } catch (IOException ioException) {\n      ioException.printStackTrace();\n    }\n  }\n}\n```", "```java\n<form method=\"post\" action=\"formhandlerservlet\">\n  <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n    <tr>\n      <td>Please enter some text:</td>\n      <td><input type=\"text\" name=\"enteredValue\" /></td>\n    </tr>\n    <tr>\n      <td></td>\n      <td><input type=\"submit\" value=\"Submit\"></td>\n    </tr>\n  </table>\n</form>\n```", "```java\npackage com.ensode.jakartaeebook.formhandling;\n//imports omitted for brevity\n@WebServlet(urlPatterns = {\"/formhandlerservlet\"})\npublic class FormHandlerServlet extends HttpServlet {\n  @Override\n  protected void doPost(HttpServletRequest request,\n    HttpServletResponse response) {\n    String enteredValue;\n    enteredValue = request.getParameter(\"enteredValue\");\n    response.setContentType(\"text/html\");\n    PrintWriter printWriter;\n    try {\n      printWriter = response.getWriter();\n      printWriter.println(\"<p>\");\n      printWriter.print(\"You entered: \");\n      printWriter.print(enteredValue);\n      printWriter.print(\"</p>\");\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }\n}\n```", "```java\n<form method=\"post\" action=\"multiplevaluefieldhandlerservlet\">\n<p>Please enter one or more options.</p>\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr>\n    <td>\n      <input name=\"options\" type=\"checkbox\" value=\"option1\" />\n      Option 1</td>\n  </tr>\n  <tr>\n    <td><input name=\"options\" type=\"checkbox\" value=\"option2\" />\n    Option 2</td>\n  </tr>\n  <tr>\n    <td><input name=\"options\" type=\"checkbox\" value=\"option3\" />\n    Option 3</td>\n  </tr>\n  <tr>\n    <td><input type=\"submit\" value=\"Submit\" /></td>\n  </tr>\n</table>\n</form>\n```", "```java\n@Override\nprotected void doPost(HttpServletRequest request,\n  HttpServletResponse response) {\n  String[] selectedOptions =\n    request.getParameterValues(\"options\");\n  response.setContentType(\"text/html\");\n  try {\n    PrintWriter printWriter = response.getWriter();\n    printWriter.println(\"<p>\");\n    printWriter.print(\"The following options were selected:\");\n    printWriter.println(\"<br/>\");\n    if (selectedOptions != null) {\n      for (String option : selectedOptions) {\n        printWriter.print(option);\n        printWriter.println(\"<br/>\");\n      }\n    } else {\n      printWriter.println(\"None\");\n}\n    printWriter.println(\"</p>\");\n  } catch (IOException e) {\n    e.printStackTrace();\n   }\n}\n```", "```java\nprotected void doPost(HttpServletRequest request, HttpServletResponse response) {\n  String[] selectedOptions =\n    request.getParameterValues(\"options\");\n  ArrayList<String> selectedOptionLabels = null;\n  if (selectedOptions != null) {\n    selectedOptionLabels =\n      new ArrayList<String>(selectedOptions.length);\n    for (String selectedOption : selectedOptions) {\n      if (selectedOption.equals(\"option1\")) {\n        selectedOptionLabels.add(\"Option 1\");\n      } else if (selectedOption.equals(\"option2\")) {\n        selectedOptionLabels.add(\"Option 2\");\n      } else if (selectedOption.equals(\"option3\")) {\n        selectedOptionLabels.add(\"Option 3\");\n      }\n    }\n  }\n  request.setAttribute(\"checkedLabels\", selectedOptionLabels);\n  try {\n    request.getRequestDispatcher(\"confirmationservlet\").\n      forward(request,response);\n  } catch (ServletException | IOException e) {\n    e.printStackTrace();\n  }\n}\n```", "```java\nrequest.getRequestDispatcher(\"confirmationservlet\").forward(\n    request, response);\n```", "```java\npackage com.ensode.jakartaeebook.requestforward;\n//imports omitted for brevity\n@WebServlet(urlPatterns = {\"/confirmationservlet\"})\npublic class ConfirmationServlet extends HttpServlet {\n  @Override\n  protected void doPost(HttpServletRequest request,\n    HttpServletResponse response) {\n    try {\n      PrintWriter printWriter;\n      List<String> checkedLabels = (List<String>) request\n        .getAttribute(\"checkedLabels\");\n      response.setContentType(\"text/html\");\n      printWriter = response.getWriter();\n      printWriter.println(\"<p>\");\n      printWriter.print(\"The following options were selected:\");\n      printWriter.println(\"<br/>\");\n      if (checkedLabels != null) {\n        for (String optionLabel : checkedLabels) {\n          printWriter.print(optionLabel);\n          printWriter.println(\"<br/>\");\n        }\n      } else {\n        printWriter.println(\"None\");\n      }\n      printWriter.println(\"</p>\");\n    } catch (IOException ioException) {\n      ioException.printStackTrace();\n    }\n  }\n}\n```", "```java\n<form method=\"post\" action=\"responseredirectionservlet\">\n  <p>Please indicate your favorite search engine.</p>\n  <table>\n    <tr>\n      <td><input type=\"radio\" name=\"searchEngine\"\n            value=\"http://www.google.com\"/>Google</td>\n    </tr>\n    <tr>\n      <td><input type=\"radio\" name=\"searchEngine\"\n            value=\"http://www.bing.com\"/>Bing</td>\n    </tr>\n    <tr>\n      <td><input type=\"radio\" name=\"searchEngine\"\n            value=\"http://www.yahoo.com\"/>Yahoo!</td>\n    </tr>\n    <tr>\n      <td><input type=\"submit\" value=\"Submit\" /></td>\n    </tr>\n  </table>\n</form>\n```", "```java\npackage com.ensode.jakartaeebook.responseredirection;\n//imports omitted\n@WebServlet(urlPatterns = {\"/responseredirectionservlet\"})\npublic class ResponseRedirectionServlet extends HttpServlet {\n  @Override\n  protected void doPost(HttpServletRequest request,\n    HttpServletResponse response)\n    throws IOException {\n    String url = request.getParameter(\"searchEngine\");\n    if (url != null) {\n      response.sendRedirect(url);\n    } else {\n      PrintWriter printWriter = response.getWriter();\n      printWriter.println(\"No search engine was selected.\");\n    }\n  }\n}\n```", "```java\nprotected void doPost(HttpServletRequest request,\n  HttpServletResponse response) {\n  .\n  .\n  .\n  Foo foo = new Foo(); //theoretical object\n  HttpSession session = request.getSession();\n  session.setAttribute(\"foo\", foo);\n  .\n  .\n  .\n}\n```", "```java\nprotected void doPost(HttpServletRequest request, HttpServletResponse response)\n{\n  HttpSession session = request.getSession();\n  Foo foo = (Foo)session.getAttribute(\"foo\");\n}\n```", "```java\nprotected void doPost(HttpServletRequest request,\n  HttpServletResponse response) {\n  //The getServletContext() method is defined higher in\n  //the inheritance hierarchy.\n  ServletContext servletContext = getServletContext();\n  Foo foo = new Foo();\n  servletContext.setAttribute(\"foo\", foo);\n  .\n  .\n  .\n}\n```", "```java\nprotected void doPost(HttpServletRequest request,\n  HttpServletResponse response){\n  ServletContext servletContext = getServletContext();\n  Foo foo = (Foo)servletContext.getAttribute(\"foo\");\n  .\n  .\n  .\n}\n```", "```java\npackage com.ensode.jakartaeebook.initparams;\n//imports omitted for brevity\n@WebServlet(name = \"InitParamsServlet\", urlPatterns = {\n  \"/InitParamsServlet\"}, initParams = {\n  @WebInitParam(name = \"param1\", value = \"value1\"),\n  @WebInitParam(name = \"param2\", value = \"value2\")})\npublic class InitParamsServlet extends HttpServlet {\n  @Override\n  protected void doGet(HttpServletRequest request,\n          HttpServletResponse response)\n          throws ServletException, IOException {\n    ServletConfig servletConfig = getServletConfig();\n    String param1Val = servletConfig.getInitParameter(\"param1\");\n    String param2Val = servletConfig.getInitParameter(\"param2\");\n    response.setContentType(\"text/html\");\n    PrintWriter printWriter = response.getWriter();\n    printWriter.println(\"<p>\");\n    printWriter.println(\"Value of param1 is \" + param1Val);\n    printWriter.println(\"</p>\");\n    printWriter.println(\"<p>\");\n    printWriter.println(\"Value of param2 is \" + param2Val);\n    printWriter.println(\"</p>\");\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.servletfilter;\n//imports omitted\n@WebFilter(initParams = {\n@WebInitParam(name = \"filterparam1\", value = \"filtervalue1\")},\n        urlPatterns = {\"/InitParamsServlet\"})\npublic class SimpleFilter implements Filter {\n  private static final Logger LOG\n    = Logger.getLogger(SimpleFilter.class.getName());\n  private FilterConfig filterConfig;\n  @Override\n  public void init(FilterConfig filterConfig) throws\n    ServletException {\n    this.filterConfig = filterConfig;\n  }\n  @Override\n  public void doFilter(ServletRequest servletRequest,\n    ServletResponse servletResponse, FilterChain filterChain)\n    throws IOException, ServletException {\n    LOG.log(Level.INFO, \"Entering doFilter()\");\n    LOG.log(Level.INFO, \"initialization parameters: \");\n    Enumeration<String> initParameterNames = filterConfig.\n      getInitParameterNames();\n    String parameterName;\n    String parameterValue;\n    while (initParameterNames.hasMoreElements()) {\n      parameterName = initParameterNames.nextElement();\n      parameterValue =\n        filterConfig.getInitParameter(parameterName);\n      LOG.log(Level.INFO, \"{0} = {1}\",\n        new Object[]{parameterName,\n        parameterValue});\n    }\n    LOG.log(Level.INFO, \"Invoking servlet...\");\n    filterChain.doFilter(servletRequest, servletResponse);\n    LOG.log(Level.INFO, \"Back from servlet invocation\");\n  }\n  @Override\n  public void destroy() {\n    filterConfig = null;\n  }\n}\n```", "```java\n  Loading application [servletfilter] at [/servletfilter]|#]\n  servletfilter was successfully deployed in 69 milliseconds.|#]\n  Entering doFilter()|#]\n  initialization parameters: |#]\n  filterparam1 = filtervalue1|#]\n  Invoking servlet…|#]\n  Back from servlet invocation|#]\n```", "```java\npackage com.ensode.jakartaeebook.listener;\n//imports omitted\n@WebListener\npublic class HttpRequestListener implements ServletRequestListener {\n  @Override\n  public void requestInitialized(\n   ServletRequestEvent servletRequestEvent) {\n    ServletContext servletContext = servletRequestEvent.\n    getServletContext();\n    servletContext.log(\"New request initialized\");\n  }\n  @Override\n  public void requestDestroyed(\n   ServletRequestEvent servletRequestEvent) {\n    ServletContext servletContext = servletRequestEvent.\n    getServletContext();\n    servletContext.log(\"Request destroyed\");\n  }\n}\n```", "```java\nLoading application [servletlistener] at [/servletlistener]|#]\n  servletlistener was successfully deployed in 142 milliseconds.|#]\n  New request initialized|#]\n  Request destroyed|#]\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-fragment \n\n  xsi:schemaLocation=\"https://jakarta.ee/xml/ns/jakartaee\n  https://jakarta.ee/xml/ns/jakartaee/web-fragment_5_0.xsd\"\n  version=\"5.0\" metadata-complete=\"true\">\n  <servlet>\n    <servlet-name>WebFragment</servlet-name>\n    <servlet-class>\n      com.ensode.jakartaeebook.webfragment.WebFragmentServlet\n    </servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>WebFragment</servlet-name>\n    <url-pattern>/WebFragment</url-pattern>\n  </servlet-mapping>\n</web-fragment>\n```", "```java\npackage com.ensode.jakartaeebook.servlet;\n//imports omitted\n@WebListener()\npublic class ServletContextListenerImpl implements\n  ServletContextListener {\n  @Override\n  public void contextInitialized(\n    ServletContextEvent servletContextEvent) {\n    ServletContext servletContext = servletContextEvent.\n      getServletContext();\n    try {\n      ProgrammaticallyConfiguredServlet servlet = servletContext.\n        createServlet(\n          ProgrammaticallyConfiguredServlet.class);\n      servletContext.addServlet(\n        \"ProgrammaticallyConfiguredServlet\", servlet);\n      ServletRegistration servletRegistration = servletContext.\n        getServletRegistration(\n          \"ProgrammaticallyConfiguredServlet\");\nservletRegistration.addMapping(\n        \"/ProgrammaticallyConfiguredServlet\");\n    } catch (ServletException servletException) {\n      servletContext.log(servletException.getMessage());\n    }\n  }\n  //additional methods omitted for brevity\n}\n```", "```java\n@Override\nprotected void doGet(HttpServletRequest request,\n  HttpServletResponse response)\n  throws ServletException, IOException {\n  ServletOutputStream outputStream = response.getOutputStream();\n  outputStream.println(\n    \"This message was generated from a servlet that was \"\n    + \"configured programmatically.\");\n  }\n```", "```java\npackage com.ensode.jakartaeebook.asynchronousservlet;\n//imports omitted for brevity\n@WebServlet(name = \"AsynchronousServlet\", urlPatterns = {\n  \"/AsynchronousServlet\"}, asyncSupported = true)\npublic class AsynchronousServlet extends HttpServlet {\n  @Override\n  protected void doGet(HttpServletRequest request,\n    HttpServletResponse response) throws Exception {\n    final AsyncContext ac = request.startAsync();\n    ac.start(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          Thread.sleep(10000);\n          ac.getResponse().getWriter().\n            println(\"You should see this after a brief wait\");\n          ac.complete();\n        } catch (Exception ex) {\n          //handle the exception\n        }\n      }\n    });\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.servlet;\n//imports omitted\n@WebServlet(name = \"ServletPushDemoServlet\", urlPatterns = {\"/ServletPushDemoServlet\"})\npublic class ServletPushDemoServlet extends HttpServlet {\n  @Override\n  protected void doPost(HttpServletRequest request,\n      HttpServletResponse response) throws Exception {\n    PushBuilder pushBuilder = request.newPushBuilder();\n    if (pushBuilder != null) {\n      pushBuilder.path(\"images/david_heffelfinger.png\").\n        addHeader(\"content-type\", \"image/png\").push();\n      response.sendRedirect(\"response.html\");\n    } else {\n      //handle the case when the browser does not support HTTP/2.\n    }\n  }\n}\n```"]