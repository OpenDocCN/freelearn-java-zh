- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: Chapter 1
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章
- en: 'True or false: Selenium is a browser automation library.'
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或假：Selenium 是一个浏览器自动化库。
- en: True.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: True.
- en: What are the different types of locator mechanisms provided by Selenium?
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Selenium 提供了哪些不同类型的定位机制？
- en: The different types of locator mechanisms are ID, Name, ClassName, TagName,
    Link, LinkText, CSS Selector, and XPATH.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的定位机制类型是 ID、Name、ClassName、TagName、Link、LinkText、CSS Selector 和 XPATH。
- en: 'True or false: With the `getAttribute()` method, we can read CSS attributes
    as well?'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或假：使用 `getAttribute()` 方法，我们也可以读取 CSS 属性吗？
- en: False. The `getCssValue()` method is used to read CSS attributes.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: False. `getCssValue()` 方法用于读取 CSS 属性。
- en: What actions can be performed on a WebElement?
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以在 WebElement 上执行哪些操作？
- en: The actions performed are click, type (sendKeys), and submit.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 执行的操作是点击、输入（sendKeys）和提交。
- en: How can we determine whether the checkbox is checked or unchecked?
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何确定复选框是被勾选还是未勾选？
- en: By using the `isSelected()` method.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `isSelected()` 方法。
- en: Chapter 2
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章
- en: What is the significance of WebDriver becoming a W3C specification?
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WebDriver 成为 W3C 规范的意义是什么？
- en: WebDriver is now a W3C specification. This means browsers have to be fully compliant
    with WebDriver spec set by the World Wide Web Consortium (W3C for short) and will
    be supported natively by the browser vendor the HTML5 and CSS are other prominent
    W3C specifications.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: WebDriver 现在是一个 W3C 规范。这意味着浏览器必须完全遵守世界万维网联盟（简称 W3C）设定的 WebDriver 规范，并且将由浏览器厂商原生支持。HTML5
    和 CSS 是其他突出的 W3C 规范。
- en: 'True or false: WebDriver is an interface.'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或假：WebDriver 是一个接口。
- en: True.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: True.
- en: Which browsers support headless testing?
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪些浏览器支持无头测试？
- en: Google Chrome and Mozilla Firefox.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Google Chrome 和 Mozilla Firefox。
- en: How can we test mobile websites with Chrome?
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何使用 Chrome 测试移动网站？
- en: By using the Mobile Emulation feature.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用移动仿真功能。
- en: Chapter 3
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章
- en: Which version of Java Streams API is introduced?
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个版本的 Java Streams API 被引入？
- en: Java 8.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Java 8。
- en: Explain the filter function of Streams API.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释 Streams API 的过滤函数。
- en: 'Java Stream API provides a `filter()` method to filter stream elements on the
    basis of the given predicate. Suppose we want to get all the link elements that
    are visible on the page, we can use the `filter()` method to return the list in
    the following way:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Java Stream API 提供了一个 `filter()` 方法，可以根据给定的谓词过滤流元素。假设我们想获取页面上所有可见的链接元素，我们可以使用
    `filter()` 方法以以下方式返回列表：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Which method of Streams API will return the number of matching elements from
    the `filter()` function?
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Streams API 中的哪种方法会从 `filter()` 函数返回匹配元素的数量？
- en: '`count()`.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`count()`。'
- en: 'We can use the `map()` function to filter a list of WebElements by attribute
    values: True or false?'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用 `map()` 函数通过属性值：True 或 false 过滤 WebElements 列表：？
- en: False.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: False.
- en: Chapter 4
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章
- en: Which are the different formats we can use to output a screenshot?
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用哪些不同的格式来输出截图？
- en: The `OutputType` interface support screenshot types in `BASE64`, `BYTES`, and
    `FILE` formats.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`OutputType` 接口支持在 `BASE64`、`BYTES` 和 `FILE` 格式中的截图类型。'
- en: How can we switch to another browser tab with Selenium?
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何使用 Selenium 切换到另一个浏览器标签？
- en: We can switch to another browser tab using the `driver.switchTo().window()`
    method.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `driver.switchTo().window()` 方法切换到另一个浏览器标签。
- en: 'True or false: The `defaultContent()` method will switch to the previously
    selected frame.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或假：`defaultContent()` 方法将切换到之前选定的框架。
- en: False. The `defaultContent()` method will switch to the page.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: False. `defaultContent()` 方法将切换到页面。
- en: What navigation methods are available with Selenium?
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Selenium 提供了哪些导航方法？
- en: The `Navigate` interface provides `to()` , `back()` , `forward()` , and `refresh()`
    methods.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`Navigate` 接口提供了 `to()`、`back()`、`forward()` 和 `refresh()` 方法。'
- en: How can we add a cookie using Selenium?
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何使用 Selenium 添加 cookie？
- en: We can add a cookie using the `driver.manage().addCookie(Cookie cookie)` method.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `driver.manage().addCookie(Cookie cookie)` 方法添加 cookie。
- en: Explain the difference between an implicit wait and an explicit wait.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释隐式等待和显式等待之间的区别。
- en: An implicit wait once set will be available for the entire life of the WebDriver
    instance. It will wait for the element when `findElement` is called for the set
    duration. If the element doesn't appear in DOM in a set time, it will throw the
    `NoSuchElementFound` exception.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置隐式等待，它将在 WebDriver 实例的整个生命周期中可用。当调用 `findElement` 时，它将在设定的持续时间内等待元素。如果元素在设定时间内没有出现在
    DOM 中，它将抛出 `NoSuchElementFound` 异常。
- en: An explicit wait, on the other hand, is used to wait for the specific condition
    to happen (for example, the visibility or invisibility of the element, a change
    in title, a change in attribute of the element, thee element becoming editable
    or for a custom condition). Unlike an implicit wait, the explicit wait will poll
    the DOM for the condition to fulfill instead of waiting for a fixed amount of
    time. It will come out if the condition is fulfilled before the defined timeout,
    else it will throw an exception. We can use various predefined conditions from
    the `ExpectedConditions` class with the explicit wait.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，显式等待用于等待特定条件发生（例如，元素的可见性或不可见性、标题的变化、元素属性的变化、元素变为可编辑或自定义条件）。与隐式等待不同，显式等待将轮询DOM以满足条件，而不是等待固定的时间。如果条件在定义的超时之前得到满足，它将退出，否则将抛出异常。我们可以使用`ExpectedConditions`类中的各种预定义条件与显式等待一起使用。
- en: Chapter 5
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章
- en: True or false – the drag and drop action requires the source element and the
    target element.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对还是错——拖放操作需要源元素和目标元素。
- en: True.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 对。
- en: List the keyboard methods that we can perform using the actions API.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出我们可以使用actions API执行的键盘方法。
- en: '`sendKeys()`, `keyUp()`, and `keyDown()`.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`sendKeys()`、`keyUp()`和`keyDown()`。'
- en: Which method of the actions API will help in performing a double-click operation?
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个actions API方法可以帮助执行双击操作？
- en: '`doubleClick(WebElement target)`.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`doubleClick(WebElement target)`.'
- en: Using the actions API, how can we perform a save option (that is to say, *Ctrl*
    + *S*)?
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用actions API，我们如何执行保存选项（即，*Ctrl* + *S*）？
- en: '`new Actions(driver) .sendKeys(Keys.chord(Keys.CONTROL, "s")) .perform();`.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`new Actions(driver) .sendKeys(Keys.chord(Keys.CONTROL, "s")) .perform();`.'
- en: How can we open a context menu using the actions API?
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何使用actions API打开上下文菜单？
- en: By calling the `contextClick()` method.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过调用`contextClick()`方法。
- en: Chapter 6
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章
- en: 'You can listen to WebDriver events using WebDriverEventListener interface:
    True or False?'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用WebDriverEventListener接口来监听WebDriver事件：对还是错？
- en: True.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对。
- en: How you can automatically clear an input field before calling the `sendKeys`
    method using WebDriverEventListener?
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用WebDriverEventListener接口在调用`sendKeys`方法之前自动清除输入字段吗？
- en: We can call the `WebElement.clear()` method in the `beforeChangeValueOf()` event
    handler.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在`beforeChangeValueOf()`事件处理程序中调用`WebElement.clear()`方法。
- en: 'Selenium supports Accessibility Testing: True or false?'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Selenium支持可访问性测试：对还是错？
- en: False. Selenium does not support Accessibility testing
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 错。Selenium不支持可访问性测试
- en: Chapter 7
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第七章
- en: 'True or false: with Selenium, we can execute tests on the remote machine(s)-'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对还是错：使用Selenium，我们可以在远程机器上执行测试吗？
- en: True.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对。
- en: Which driver class is used to run tests on a remote machine?
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于在远程机器上运行测试的哪个驱动类？
- en: The `RemoteWebDriver` class.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`RemoteWebDriver`类。'
- en: Explain the `DesiredCapabilities` class.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释`DesiredCapabilities`类。
- en: The `DesiredCapabilities` class is used to specify browser capabilities needed
    by the test script from the RemoteWebDriver. For example, we can specify the name
    of the browser, operating system, and version in `DesiredCapabilities` and pass
    it to `RemoteWebDriver`. The Selenium Standalone Server will match the configured
    capabilities with the available nodes and run the test on the matching node.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`DesiredCapabilities`类用于指定测试脚本从RemoteWebDriver需要的浏览器能力。例如，我们可以在`DesiredCapabilities`中指定浏览器名称、操作系统和版本，并将其传递给`RemoteWebDriver`。Selenium
    Standalone Server将匹配配置的能力与可用的节点，并在匹配的节点上运行测试。'
- en: What protocol is used between the Selenium test and Selenium Standalone Server?
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Selenium测试和Selenium Standalone Server之间使用什么协议？
- en: JSON-Wire.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: JSON-Wire。
- en: What is the default port used by the Selenium Standalone Server?
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Selenium Standalone Server使用的默认端口是什么？
- en: Port `4444`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 端口`4444`。
- en: Chapter 8
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第八章
- en: Which argument can be used to specify how many browser instances can be supported
    by the node?
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个参数可以用来指定节点可以支持的浏览器实例数量？
- en: '`maxInstances`.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`maxInstances`。'
- en: Explain how Selenium Grid can be used to support Cross Browser Testing.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释如何使用Selenium Grid来支持跨浏览器测试。
- en: With Selenium Grid, we can set up nodes for various Browser and Operating System
    combinations and run tests in a distributed architecture. Based on capabilities
    provided by the test, Selenium Grid selects the appropriate node and executes
    the test on the selected node. We can add as many nodes as required based on combinations
    we want to test as per the cross-browser testing matrix required for testing.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Selenium Grid，我们可以为各种浏览器和操作系统组合设置节点，并在分布式架构中运行测试。根据测试提供的功能，Selenium Grid选择适当的节点，并在所选节点上执行测试。我们可以根据所需的跨浏览器测试矩阵组合添加所需数量的节点。
- en: What is the URL you need to specify with `RemoteWebDriver` to run tests on Selenium
    Grid?
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`RemoteWebDriver`运行Selenium Grid测试时，需要指定哪个URL？
- en: '`http://gridHostnameOrIp:4444/wd/hub`.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://gridHostnameOrIp:4444/wd/hub`。'
- en: 'Selenium Grid Hub acts as a load balancer: True or False?'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Selenium Grid Hub充当负载均衡器：对或错？
- en: True. Selenium Grid Hub distributes tests on multiple nodes based on the availability
    of the node
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 对。Selenium Grid Hub根据节点的可用性在多个节点上分发测试。
- en: Chapter 9
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章
- en: How do you initialize a PageObject implemented with PageFactory?
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何初始化使用PageFactory实现的PageObject？
- en: '`PageFactory.initElements(driver, pageObjectClass)`.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`PageFactory.initElements(driver, pageObjectClass)`。'
- en: Using which class can we implement methods to validate whether the page is loaded?
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用哪个类可以实现验证页面是否加载的方法？
- en: '`LoadableComponent`.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`LoadableComponent`。'
- en: Which `By class` methods are supported by @FindBy?
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '@FindBy支持哪些`By class`方法？'
- en: ID, Name, ClassName, TagName, Link, PartialLinkText, CSS Selector, and XPATH.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: ID、Name、ClassName、TagName、Link、PartialLinkText、CSS Selector和XPATH。
- en: 'While using PageFactory, if you name the WebElement variable name by the same
    ID or name attribute, then you don''t need to use the `@FindBy` annotation: True
    or false?'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用PageFactory时，如果你通过相同的ID或name属性命名WebElement变量，那么你不需要使用`@FindBy`注解：对或错？
- en: True. You can declare the WebElement variable with the same name as the value
    of id or name attribute, PageFactory will resolve it without using the `@FindBy`
    annotation
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 对。你可以声明与id或name属性值相同的WebElement变量，PageFactory将解析它而无需使用`@FindBy`注解。
- en: Chapter 10
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章
- en: What are the different types of Mobile Apps?
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有哪些不同类型的移动应用？
- en: Native, Hybrid, and Mobile Web Applications.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 原生、混合和移动Web应用。
- en: Which classes does Appium Java Client library provide for testing iOS and Android
    applications?
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Appium Java客户端库为测试iOS和Android应用提供了哪些类？
- en: '`AndroidDriver` and `IOSDriver`.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`AndroidDriver`和`IOSDriver`。'
- en: What is the command to list the Android devices connected to a computer via
    USB ports?
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出通过USB端口连接到计算机的Android设备的命令是什么？
- en: '`adb devices`.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`adb devices`。'
- en: What is the default port used by Appium Server?
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Appium服务器默认使用哪个端口？
- en: Port `4723`.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 端口`4723`。
- en: Chapter 11
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章
- en: Explain Data-driven Testing.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释数据驱动测试。
- en: Data-driven is a test automation framework approach, where input test data is
    stored in tabular format or in a spreadsheet format and a single test script reads
    each row of the data, which can be a unique test case, and executes the steps.
    This enables reuse of test scripts and increases test coverage with varied test
    data combinations.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 数据驱动是一种测试自动化框架方法，其中输入测试数据以表格格式或电子表格格式存储，单个测试脚本读取数据中的每一行，这可以是一个独特的测试用例，并执行步骤。这使测试脚本可重用，并通过不同的测试数据组合增加了测试覆盖率。
- en: 'True or False: Selenium supports data-driven testing.'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对或错：Selenium支持数据驱动测试。
- en: False.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 错误。
- en: What are two methods in TestNG to create data-driven tests?
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: TestNG中有哪两种方法可以创建数据驱动测试？
- en: 'TestNG provides two methods for data-driven testing: Suite Parameters and Data
    Providers.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: TestNG提供了两种数据驱动测试方法：套件参数和数据提供者。
- en: Explain the DataProvider method in TestNG.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释TestNG中的DataProvider方法。
- en: The DataProvider method in TestNG is a special method annotated with the `@DataProvider`
    annotation. It returns an array of objects. We can return tabular data reading
    from any format such as CSV or Excel to test the test case using the data provider.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: TestNG中的DataProvider方法是一个被`@DataProvider`注解特殊标记的方法。它返回一个对象数组。我们可以通过从任何格式（如CSV或Excel）读取表格数据来返回，以使用数据提供者测试测试用例。
