["```java\n> play new <PROJECT_NAME>   (for example  play new playsample)\n\n```", "```java\nWhich template do you want to use for this new application? \n 1             - Create a simple Scala application\n 2             - Create a simple Java application\n> 1\nOK, application playsample is created.\n\nHave fun!\n\n```", "```java\n> cd playsample\n> play run\n[info] Loading project definition…\n--- (Running the application from SBT, auto-reloading is enabled) ---\n\n[info] play - Listening for HTTP on /0:0:0:0:0:0:0:0:9000\n\n(Server started, use Ctrl+D to stop and go back to the console...)\n\n```", "```java\n> play\n\n```", "```java\n[playsample] $ run 9095\n[info] play - Listening for HTTP on /0:0:0:0:0:0:0:0:9095\n\n```", "```java\n> ./activator ui\n\n```", "```java\n> ./activator run\n\n```", "```java\n> play eclipse\n\n```", "```java\n> play run\n\n```", "```java\n# Routes\n# This file defines all application routes (Higher priority routes first)\n# ~~~~\n\n# Home page\nGET    /              controllers.Application.index\n\n# Hello action\nGET    /hello         controllers.Application.sayHello\n\n# Map static resources from the /public folder to the /assets URL path\nGET    /assets/*file  controllers.Assets.at(path=\"/public\", file)\n```", "```java\n<REQUEST_TYPE(GET, POST...)> <URL_RELATIVE_PATH> <CONTROLLER_METHOD>\n\n```", "```java\nGET  /  controllers.Application.index\n\n```", "```java\nobject Application extends Controller {\n  /**\n   * Describes the hello form.\n   */\n  val helloForm = Form(\n    tuple(\n      \"name\" -> nonEmptyText,\n      \"repeat\" -> number(min = 1, max = 100),\n      \"color\" -> optional(text)\n    )\n  )\n\n  // -- Actions\n  /**\n   * Home page\n   */\n  def index = Action {\n    Ok(html.index(helloForm))\n  }\n\n  /**\n   * Handles the form submission.\n   */\n  def sayHello = Action { implicit request =>\n    helloForm.bindFromRequest.fold(\n      formWithErrors => BadRequest(html.index(formWithErrors)),\n      {case (name, repeat, color) => Ok(html.hello(name, repeat.toInt, color))}\n    )\n  }\n}\n```", "```java\nval helloForm = Form(\n  tuple(\n    \"name\" -> nonEmptyText,\n    \"repeat\" -> number(min = 1, max = 100),\n    \"color\" -> optional(text)\n  )\n)\n```", "```java\n@(helloForm: Form[(String,Int,Option[String])])\n@import helper._\n\n@main(title = \"The 'helloworld' application\") {\n\n    <h1>Configure your 'Hello world':</h1>\n\n    @form(action = routes.Application.sayHello, args = 'id -> \"helloform\") {\n        @inputText(\n            field = helloForm(\"name\"),\n            args = '_label -> \"What's your name?\", 'placeholder -> \"World\"\n        )\n\n        @inputText(\n            field = helloForm(\"repeat\"),\n            args = '_label -> \"How many times?\", 'size -> 3, 'placeholder -> 10\n        )\n\n        @select(\n            field = helloForm(\"color\"), \n            options = options(\n                \"\" -> \"Default\",\n                \"red\" -> \"Red\",\n                \"green\" -> \"Green\",\n                \"blue\" -> \"Blue\"\n            ),\n            args = '_label -> \"Choose a color\"\n        )\n\n        <p class=\"buttons\">\n            <input type=\"submit\" id=\"submit\">\n        <p>\n    }\n}\n```", "```java\n@(title: String)(content: Html)\n\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>@title</title>\n        <link rel=\"stylesheet\" media=\"screen\" href=\"@routes.Assets.at(\"stylesheets/main.css\")\">\n        <link rel=\"shortcut icon\" type=\"image/png\" href=\"@routes.Assets.at(\"images/favicon.png\")\">\n        <script src=\"img/@routes.Assets.at(\"javascripts/jquery-1.6.4.min.js\")\" type=\"text/javascript\"></script>\n    </head>\n    <body>\n        <header>\n            <a href=\"@routes.Application.index\">@title</a>\n        </header>\n\n        <section>\n            @content\n        </section>\n    </body>\n</html>\n```", "```java\n@(name: String, repeat: Int, color: Option[String])\n@main(\"Here is the result:\") {\n    <ul style=\"color: @color.getOrElse(\"inherited\")\">\n        @for(_ <- 1 to repeat) {\n <li>Hello @name!</li>\n }\n    </ul>\n    <p class=\"buttons\">\n        <a href=\"@routes.Application.index\">Back to the form</a>\n    </p>\n}\n```", "```java\nobject Authentication extends Controller {\n\n  val loginForm = Form(\n    tuple(\n      \"email\" -> text,\n      \"password\" -> text\n    ) verifying (\"Invalid email or password\", result => result match {\n      case (email, password) => check(email, password)\n    })\n  )\n\n  def check(username: String, password: String) = {\n    (username == \"thomas@home\" && password == \"1234\")  \n  }\n\n  def login = Action { implicit request =>\n    Ok(html.login(loginForm))\n  }\n\n  def authenticate = Action { implicit request =>\n    loginForm.bindFromRequest.fold(\n      formWithErrors => BadRequest(html.login(formWithErrors)),\n      user => Redirect(routes.Application.index).withSession(Security.username -> user._1)\n    )\n  }\n\n  def logout = Action {\n    Redirect(routes.Authentication.login).withNewSession.flashing(\n      \"success\" -> \"You are now logged out.\"\n    )\n  }\n}\n```", "```java\n@(form: Form[(String,String)])(implicit flash: Flash)\n\n@main(\"Sign in\") {\n\n        @helper.form(routes.Authentication.authenticate) {\n\n            @form.globalError.map { error =>\n                <p class=\"error\">\n                    @error.message\n                </p>\n            }\n\n            @flash.get(\"success\").map { message =>\n                <p class=\"success\">\n                    @message\n                </p>\n            }\n\n            <p>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" id=\"email\" value=\"@form(\"email\").value\">\n            </p>\n            <p>\n                <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\">\n            </p>\n            <p>\n                <button type=\"submit\" id=\"loginbutton\">Login</button>\n            </p>\n\n        }\n\n        <p class=\"note\">\n            Try login as <em>thomas@@home</em> with <em>1234</em> as password.\n        </p>\n\n}\n```", "```java\ntrait Secured {\n\n  def username(request: RequestHeader) = request.session.get(Security.username)\n\n  def onUnauthorized(request: RequestHeader) = Results.Redirect(routes.Authentication.login)\n\n  def withAuth(f: => String => Request[AnyContent] => SimpleResult) = {\n    Security.Authenticated(username, onUnauthorized) { user =>\n      Action(request => f(user)(request))\n    }\n  }\n}\n```", "```java\nobject Application extends Controller with Secured {\n  …\n}\n```", "```java\n/**\n * Home page\n */\ndef index = withAuth { username => implicit request =>\n  Ok(html.index(helloForm))\n}\n```", "```java\n# Authentication\nGET    /login    controllers.Authentication.login\nPOST   /login    controllers.Authentication.authenticate\nGET    /logout   controllers.Authentication.logout\n```", "```java\n> play debug run\n\n```", "```java\nListening for transport dt_socket at address: 9999\n\n```"]