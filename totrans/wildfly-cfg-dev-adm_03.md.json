["```java\nConnection result = null;\ntry {\n    Context initialContext = new InitialContext();\n    DataSource datasource = (DataSource)initialContext.lookup(\"java:/MySqlDS\");\n    result = datasource.getConnection();\n} catch (Exception ex) {\n    log(\"Cannot get connection: \" + ex);}\n```", "```java\n<module  name=\"com.mysql\"> <resources>\n        <resource-root path=\"mysql-connector-java-5.1.30-bin.jar\"/>\n    </resources>\n    <dependencies>\n        <module name=\"javax.api\"/>\n        <module name=\"javax.transaction.api\"/>\n    </dependencies>\n</module>\n```", "```java\n<datasources>\n  <datasource jndi-name=\"java:/MySqlDS\" pool-name=\"MySqlDS_Pool\" enabled=\"true\" jta=\"true\" use-java-context=\"true\" use-ccm=\"true\">\n    <connection-url>\n      jdbc:mysql://localhost:3306/MyDB\n    </connection-url>\n    <driver>mysql</driver>\n    <pool />\n    <security>\n      <user-name>jboss</user-name>\n      <password>jboss</password>\n    </security>\n    <statement/>\n    <timeout>\n      <idle-timeout-minutes>0</idle-timeout-minutes>\n      <query-timeout>600</query-timeout>\n    </timeout>\n  </datasource>\n  <drivers>\n    <driver name=\"mysql\" module=\"com.mysql\"/>\n  </drivers>\n</datasources>\n```", "```java\n<pool>\n    <min-pool-size>5</min-pool-size>\n    <max-pool-size>10</max-pool-size>\n    <prefill>true</prefill>\n    <use-strict-min>true</use-strict-min>\n    <flush-strategy>FailingConnectionOnly</flush-strategy>\n</pool>\n```", "```java\n<statement>\n    <track-statements>true</track-statements>\n    <prepared-statement-cache-size>10</prepared-statement-cache-size>\n    <share-prepared-statements/>\n</statement>\n```", "```java\n<datasources>\n  <xa-datasource jndi-name=\"java:/XAMySqlDS\" pool-name=\"MySqlDS_Pool\" enabled=\"true\" use-java-context=\"true\" use-ccm=\"true\">\n    <xa-datasource-property name=\"URL\">\n      jdbc:mysql://localhost:3306/MyDB\n    </xa-datasource-property>\n    <xa-datasource-property name=\"User\">jboss\n    </xa-datasource-property>\n    <xa-datasource-property name=\"Password\">jboss\n    </xa-datasource-property>\n    <driver>mysql-xa</driver>\n  </xa-datasource>\n  <drivers>\n    <driver name=\"mysql-xa\" module=\"com.mysql\">\n      <xa-datasource-class>\n        com.mysql.jdbc.jdbc2.optional.MysqlXADataSource\n      </xa-datasource-class>\n    </driver>\n  </drivers>\n</datasources>\n```", "```java\n<datasource jndi-name=\"java:/MySqlDS\" pool-name=\"MySqlDS_Pool\"  \n  enabled=\"true\" jta=\"true\" use-java-context=\"true\" use-ccm=\"true\">\n  <connection-url>\n    jdbc:mysql://localhost:3306/MyDB\n  </connection-url>\n  <driver>mysql-connector-java-5.1.130-bin.jar</driver>\n  <pool />\n  <security>\n    <user-name>jboss</user-name>\n    <password>jboss</password>\n  </security>\n</datasource>\n```", "```java\n<driver name=\"mysql-xa\" module=\"com.mysql\">\n  <xa-datasource-class>\n    com.mysql.jdbc.jdbc2.optional.MysqlXADataSource\n  </xa-datasource-class>\n</driver>\n```", "```java\n@DataSourceDefinition(name = \"java:/OracleDS\",\n  className = \" oracle.jdbc.OracleDriver\",\n  portNumber = 1521,\n  serverName = \"192.168.1.1\",\n  databaseName = \"OracleSID\",\n  user = \"scott\",\n  password = \"tiger\",\n  properties = {\"createDatabase=create\"})\n@Singleton\npublic class DataSourceEJB {\n  @Resource(lookup = \"java:/OracleDS\")\n  private DataSource ds;\n}\n```", "```java\n<subsystem >\n <session-bean>\n  <stateless>\n   <bean-instance-pool-ref pool-name=\"slsb-strict-max-pool\"/>\n  </stateless>\n  ...\n </session-bean>\n  ...\n <pools>\n  <bean-instance-pools>\n   <strict-max-pool name=\"slsb-strict-max-pool\" max-pool-size=\"25\" instance-acquisition-timeout=\"5\" instance-acquisition-timeout-unit=\"MINUTES\"/>\n  </bean-instance-pools>\n </pools>\n  ...\n</subsystem>\n```", "```java\n<subsystem >\n  <session-bean>\n    <stateless>\n      <bean-instance-pool-ref pool-name=\"large-pool\"/>\n    </stateless>\n  </session-bean>\n  <pools>\n    <bean-instance-pools>\n      <strict-max-pool name=\"large-pool\" max-pool-size=\"100\" \ninstance-acquisition-timeout=\"5\" \ninstance-acquisition-timeout-unit=\"MINUTES\"/>\n    <strict-max-pool name=\"slsb-strict-max-pool\" max-pool-size=\"25\" instance-acquisition-timeout=\"5\" instance-acquisition-timeout-unit=\"MINUTES\"/>\n    </bean-instance-pools>\n  </pools>\n</subsystem>\n```", "```java\n/subsystem=ejb3/strict-max-bean-instance-pool=large-pool:add(max-pool-size=100)\n\n```", "```java\n/subsystem=ejb3:write-attribute(name=default-slsb-instance-pool, value=large-pool)\n\n```", "```java\n/subsystem=ejb3/strict-max-bean-instance-pool=large-pool:write-attribute(name=\"max-pool-size\",value=50)\n\n```", "```java\n@Remove\npublic void remove() {}\n```", "```java\n<subsystem >\n  <session-bean>\n <stateful default-access-timeout=\"5000\" cache-ref=\"distributable\" passivation-disabled-cache-ref=\"simple\"/>\n  </session-bean>\n  ...\n  <caches>\n <cache name=\"simple\"/>\n <cache name=\"distributable\" passivation-store-ref=\"infinispan\" aliases=\"passivating clustered\"/>\n  </caches>\n  <passivation-stores>\n <passivation-store name=\"infinispan\" cache-container=\"ejb\" max-size=\"10000\"/>\n  </passivation-stores>\n  ...\n</subsystem>\n```", "```java\n<subsystem >\n  <mdb>\n    <resource-adapter-ref resource-adapter-name=\"hornetq-ra\"/>\n    <bean-instance-pool-ref pool-name=\"mdb-strict-max-pool\"/>\n  </mdb>\n  <pools>\n    <bean-instance-pools>\n      <strict-max-pool name=\"mdb-strict-max-pool\" max-pool-size=\"20\" instance-acquisition-timeout=\"5\" instance-acquisition-timeout-unit=\"MINUTES\"/>\n    </bean-instance-pools>\n  </pools>\n</subsystem>\n```", "```java\nimport java.time.LocalDate;\nimport java.time.temporal.ChronoUnit;\nimport javax.annotation.Resource;\nimport javax.ejb.*;\n\n@LocalBean\n@Stateless\npublic class TimerSampleBean {\n\n    @Resource\n    private SessionContext ctx;\n\n    public void scheduleTimer(long milliseconds) {\n        LocalDate date = LocalDate.now().plus(milliseconds, ChronoUnit.MILLIS);\n        ctx.getTimerService().createTimer(date.toEpochDay(), \"Hello World\");\n    }\n\n    @Timeout\n    public void timeoutHandler(Timer timer) {\n        System.out.println(\"* Received Timer event: \" + timer.getInfo());\n        timer.cancel();\n    }\n}\n```", "```java\n<subsystem >\n    <timer-service default-data-store=\"file-store\" thread-pool-name=\"default\">\n        <data-stores>\n            <file-data-store name=\"file-store\" path=\"timer-service-data\" relative-to=\"jboss.server.data.dir\"/>\n        </data-stores>\n    </timer-service>\n    <thread-pools>\n        <thread-pool name=\"default\">\n            <max-threads count=\"10\"/>\n            <keepalive-time time=\"100\" unit=\"milliseconds\"/>\n        </thread-pool>\n    </thread-pools>\n</subsystem>\n```", "```java\n<connectors>\n    <http-connector name=\"http-connector\" socket-binding=\"http\">\n        <param key=\"http-upgrade-endpoint\" value=\"http-acceptor\"/>\n    </http-connector>\n    <http-connector name=\"http-connector-throughput\" socket-binding=\"http\">\n        <param key=\"http-upgrade-endpoint\" value=\"http-acceptor-throughput\"/>\n        <param key=\"batch-delay\" value=\"50\"/>\n    </http-connector>\n    <in-vm-connector name=\"in-vm\" server-id=\"0\"/>\n</connectors>\n<acceptors>\n    <http-acceptor name=\"http-acceptor\" http-listener=\"default\"/>\n    <http-acceptor name=\"http-acceptor-throughput\" http-listener=\"default\">\n        <param key=\"batch-delay\" value=\"50\"/>\n        <param key=\"direct-deliver\" value=\"false\"/>\n    </http-acceptor>\n    <in-vm-acceptor name=\"in-vm\" server-id=\"0\"/>\n</acceptors>\n```", "```java\n<connection-factory name=\"InVmConnectionFactory\">\n    <connectors>\n        <connector-ref connector-name=\"in-vm\"/>\n    </connectors>\n    <entries>\n        <entry name=\"java:/ConnectionFactory\"/>\n    </entries>\n</connection-factory>\n<connection-factory name=\"RemoteConnectionFactory\">\n    <connectors>\n        <connector-ref connector-name=\"http-connector\"/>\n    </connectors>\n    <entries>\n        <entry name=\"java:jboss/exported/jms/RemoteConnectionFactory\"/>\n    </entries>\n</connection-factory>\n```", "```java\n<jms-destinations>\n    <jms-queue name=\"ExpiryQueue\">\n        <entry name=\"java:/jms/queue/ExpiryQueue\"/>\n    </jms-queue>\n    <jms-queue name=\"DLQ\">\n        <entry name=\"java:/jms/queue/DLQ\"/>\n    </jms-queue>\n</jms-destinations>\n```", "```java\n@MessageDriven(name = \"MessageMDBSample\", activationConfig = {\n  @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n  @ActivationConfigProperty(propertyName = \"destination\", propertyValue = \"java:/jms/queue/ExpiryQueue\"),\n  @ActivationConfigProperty(propertyName = \"acknowledgeMode\", propertyValue = \"Auto-acknowledge\") })\n\npublic class SampleMDBean implements MessageListener {\n  @Resource\n  private MessageDrivenContext context;\n}\n```", "```java\n<jms-queue name=\"selectorQueue\">\n     <entry name=\"/queue/selectorQueue\"/>\n     <selector>name='john'</selector>\n     <durable>true</durable>\n</jms-queue>\n```", "```java\n<address-settings>\n  <!--default for catch all-->\n  <address-setting match=\"#\">\n    <dead-letter-address>jms.queue.DLQ</dead-letter-address>\n    <expiry-address>jms.queue.ExpiryQueue</expiry-address>\n    <redelivery-delay>0</redelivery-delay>\n    <max-size-bytes>10485760</max-size-bytes>\n    <message-counter-history-day-limit>10</message-counter-history-day-limit>\n    <address-full-policy>BLOCK</address-full-policy>\n  </address-setting>\n</address-settings>\n```", "```java\n<address-setting match=\"jms.queue.#\">\n```", "```java\n<address-setting match=\"jms.queue.ExpiryQueue \">\n```", "```java\n<journal-file-size>102400</journal-file-size>\n<journal-min-files>2</journal-min-files>\n<journal-type>NIO</journal-type>\n<persistence-enabled>true</persistence-enabled>\n```", "```java\n<bindings-directory relative-to=\"jboss.server.data.dir\" path=\"hornetq/bindings\" />\n\n<large-messages-directory relative-to=\"jboss.server.data.dir\" path=\"hornetq/largemessages\" />\n\n<paging-directory relative-to=\"jboss.server.data.dir\" path=\"hornetq/paging\" />\n\n<journal-directory relative-to=\"jboss.server.data.dir\" path=\"hornetq/journal\" />\n```", "```java\n<subsystem >\n  <core-environment>\n    <process-id>\n      <uuid/>\n    </process-id>\n  </core-environment>\n  <recovery-environment socket-binding=\"txn-recovery-environment\" status-socket-binding=\"txn-status-manager\"/>\n <coordinator-environment default-timeout=\"300\" statistics-enabled=\"true\" />\n</subsystem>\n```", "```java\n<subsystem >\n    ....\n    <concurrent>\n        <context-services>\n            <context-service name=\"default\" jndi-name=\"java:jboss/ee/concurrency/context/default\" use-transaction-setup-provider=\"true\"/>\n        </context-services>\n        ....\n    </concurrent>\n</subsystem>\n```", "```java\n<concurrent>\n    ...\n    <managed-thread-factories>\n        <managed-thread-factory name=\"default\" jndi-name=\"java:jboss/ee/concurrency/factory/default\" context-service=\"default\"/>\n    </managed-thread-factories>\n    ...\n</concurrent>\n```", "```java\n@Stateless\npublic class ReportBean {\n    @Resource\n    private Managed ;\n    public void runReports() {\n        MyTask myTask = new MyTask();\n        Future<Report> future = executorService.submit(myTask);\n    }\n}\n```", "```java\n<concurrent>\n    ...\n    <managed-executor-services>\n       <managed-executor-service name=\"default\" jndi-name=\"java:jboss/ee/concurrency/executor/default\"  context-service=\"default\" hung-task-threshold=\"60000\" core-threads=\"5\" max-threads=\"25\" keepalive-time=\"5000\"/>\n                </managed-executor-services>\n    ...\n</concurrent>\n```", "```java\n<concurrent>\n    ...\n    <managed-scheduled-executor-services>\n       <managed-scheduled-executor-service name=\"default\" jndi-name=\"java:jboss/ee/concurrency/scheduler/default\" context-service=\"default\" hung-task-threshold=\"60000\" core-threads=\"2\" keepalive-time=\"3000\"/>\n                </managed-scheduled-executor-services>\n    ...\n</concurrent>\n```"]