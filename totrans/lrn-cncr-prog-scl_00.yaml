- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Concurrency is everywhere. With the rise of multicore processors in the consumer
    market, the need for concurrent programming has overwhelmed the developer world.
    Where it once served to express asynchronously in programs and computer systems
    and was largely an academic discipline, concurrent programming is now a pervasive
    methodology in software development. As a result, advanced concurrency frameworks
    and libraries are sprouting at an amazing rate. Recent years have witnessed a
    renaissance in the field of concurrent computing.
  prefs: []
  type: TYPE_NORMAL
- en: As the level of abstraction grows in modern languages and concurrency frameworks,
    it is becoming crucial to know how and when to use them. Having a good grasp of
    the classical concurrency and synchronization primitives, such as threads, locks,
    and monitors, is no longer sufficient. High-level concurrency frameworks, which
    solve many issues of traditional concurrency and are tailored towards specific
    tasks, are gradually overtaking the world of concurrent programming.
  prefs: []
  type: TYPE_NORMAL
- en: This book describes high-level concurrent programming in Scala. It presents
    detailed explanations of various concurrency topics and covers the basic theory
    of concurrent programming. Simultaneously, it describes modern concurrency frameworks,
    shows their detailed semantics, and teaches you how to use them. Its goal is to
    introduce important concurrency abstractions and, at the same time, show how they
    work in real code.
  prefs: []
  type: TYPE_NORMAL
- en: We are convinced that, by reading this book, you will gain both a solid theoretical
    understanding of concurrent programming and develop a set of useful practical
    skills that are required to write correct and efficient concurrent programs. These
    skills are the first steps toward becoming a modern concurrency expert.
  prefs: []
  type: TYPE_NORMAL
- en: We hope that you will have as much fun reading this book as we did writing it.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is organized into a sequence of chapters with various topics on concurrent
    programming. The book covers the fundamental concurrent APIs that are a part of
    the Scala runtime, introduces more complex concurrency primitives, and gives an
    extensive overview of high-level concurrency abstractions.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Introduction"), *Introduction*, explains
    the need for concurrent programming and gives some philosophical background. At
    the same time, it covers the basics of the Scala programming language that are
    required for understanding the rest of this book.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Concurrency on the JVM and the Java Memory
    Model"), *Concurrency on the JVM and the Java Memory Model*, teaches you the basics
    of concurrent programming. This chapter will teach you how to use threads and
    how to protect access to shared memory and introduce the Java Memory Model.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Traditional Building Blocks of Concurrency"),
    *Traditional Building Blocks of Concurrency*, presents classic concurrency utilities,
    such as thread pools, atomic variables, and concurrent collections, with a particular
    focus on the interaction with the features of the Scala language. The emphasis
    in this book is on the modern, high-level concurrent programming frameworks. Consequently,
    this chapter presents an overview of traditional concurrent programming techniques,
    but it does not aim to be extensive.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4.  Asynchronous Programming with Futures and
    Promises"), *Asynchronous Programming with Futures and Promises*, is the first
    chapter that deals with a Scala-specific concurrency framework. This chapter presents
    the futures and promises API and shows how to correctly use them when implementing
    asynchronous programs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Data-Parallel Collections"), *Data-Parallel
    Collections*, describes the Scala parallel collections framework. In this chapter,
    you will learn how to parallelize collection operations, when it is allowed to
    parallelize them, and how to assess the performance benefits of doing so.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Concurrent Programming with Reactive Extensions"),
    *Concurrent Programming with Reactive Extensions*, teaches you how to use the
    Reactive Extensions framework for event-based and asynchronous programming. You
    will see how the operations on event streams correspond to collection operations,
    how to pass events from one thread to another, and how to design a reactive user
    interface using event streams.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Software Transactional Memory"), *Software
    Transactional Memory*, introduces the ScalaSTM library for transactional programming,
    which aims to provide a safer, more intuitive, shared-memory programming model.
    In this chapter, you will learn how to protect access to shared data using scalable
    memory transactions and, at the same time, reduce the risk of deadlocks and race
    conditions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8.  Actors"), *Actors*, presents the actor programming
    model and the Akka framework. In this chapter, you will learn how to transparently
    build message-passing distributed programs that run on multiple machines.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Concurrency in Practice"), *Concurrency in
    Practice*, summarizes the different concurrency libraries introduced in the earlier
    chapters. In this chapter, you will learn how to choose the correct concurrency
    abstraction to solve a given problem, and how to combine different concurrency
    abstractions together when designing larger concurrent applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10.  Reactors"), *Reactors*, presents the reactor
    programming model, whose focus is improved composition in concurrent and distributed
    programs. This emerging model enables separation of concurrent and distributed
    programming patterns into modular components called protocols.'
  prefs: []
  type: TYPE_NORMAL
- en: While we recommend that you read the chapters in the order in which they appear,
    this is not strictly necessary. If you are well acquainted with the content in
    [Chapter 2](ch02.html "Chapter 2. Concurrency on the JVM and the Java Memory Model"),
    *Concurrency on the JVM and the Java Memory Model*, you can study most of the
    other chapters directly. The only chapters that rely on the content from all the
    preceding chapters are [Chapter 9](ch09.html "Chapter 9. Concurrency in Practice"),
    *Concurrency in Practice*, where we present a practical overview of the topics
    in this book, and [Chapter 10](ch10.html "Chapter 10.  Reactors"), *Reactors*,
    for which it is helpful to understand how actors and event streams work.
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we describe some of the requirements that are necessary to
    read and understand this book. We explain how to install the Java Development
    Kit, which is required to run Scala programs and show how to use Simple Build
    Tool to run various examples.
  prefs: []
  type: TYPE_NORMAL
- en: We will not require an IDE in this book. The program that you use to write code
    is entirely up to you, and you can choose anything, such as Vim, Emacs, Sublime
    Text, Eclipse, IntelliJ IDEA, Notepad++, or some other text editor.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the JDK
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Scala programs are not compiled directly to the native machine code, so they
    cannot be run as executables on various hardware platforms. Instead, the Scala
    compiler produces an intermediate code format called the Java bytecode. To run
    this intermediate code, your computer must have the Java Virtual Machine software
    installed. In this section, we explain how to download and install the Java Development
    Kit, which includes the Java Virtual Machine and other useful tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are multiple implementations of the JDK that are available from different
    software vendors. We recommend that you use the Oracle JDK distribution. To download
    and install the Java Development Kit, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the following URL in your web browser: [www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you cannot open the specified URL, go to your search engine and enter the
    keywords **JDK Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you find the link for the Java SE, download on the Oracle website, download
    the appropriate version of JDK 7 for your operating system: Windows, Linux, or
    Mac OS X; 32-bit or 64-bit.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you are using the Windows operating system, simply run the installer program.
    If you are using the Mac OS X, open the dmg archive to install JDK. Finally, if
    you are using Linux, decompress the archive to a XYZ directory, and add the bin
    subdirectory to the PATH variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You should now be able to run the java and javac commands in the terminal. Enter
    the  **`javac`**  command to see if it is available (you will never invoke this
    command directly in this book, but running it verifies that it is available).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It is possible that your operating system already has JDK installed. To verify
    this, simply run the **`javac`** command, as we did in the last step in the preceding
    description.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and using SBT
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Simple Build Tool** (**SBT**) is a command-line build tool used for Scala
    projects. Its purpose is to compile Scala code, manage dependencies, continuous
    compilation and testing, deployment, and many other uses. Throughout this book,
    we will use SBT to manage our project dependencies and run example code.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install SBT, follow these instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Go  to the [http://www.scala-sbt.org/](http://www.scala-sbt.org/) URL.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the installation file for your platform. If you are running on Windows,
    this is the `msi` installer file. If you are running on Linux or OS X, this is
    the `zip` or `tgz` archive file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install SBT. If you are running on Windows, simply run the installer file. If
    you are running on Linux or OS X, unzip the contents of the archive in your home
    directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You are now ready to use SBT. In the following steps, we will create a new
    SBT project:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a Command Prompt if you are running on Windows, or a terminal window if
    you are running on Linux or OS X.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create an empty directory called scala-concurrency-examples:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change your path to the scala-concurrency-examples directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a single source code directory for our examples:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, use your editor to create a build definition file named build.sbt. This
    file defines various project properties. Create it in the root directory of the
    project (scala-concurrency-examples). Add the following contents to the build
    definition file (note that the empty lines are mandatory):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Finally, go back to the terminal and run SBT from the root directory of the
    project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: SBT will start an interactive shell, which we will use to give SBT various build
    commands.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, you can start writing Scala programs. Open your editor, and create a source
    code file named `HelloWorld.scala` in the `src/main/scala/org/learningconcurrency`
    directory. Add the following contents to the `HelloWorld.scala` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, go back to the terminal window with the SBT interactive shell and run
    the program with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Running this program should give the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'These steps are sufficient to run most of the examples in this book. Occasionally,
    we will rely on external libraries when running the examples. These libraries
    are resolved automatically by SBT from standard software repositories. For some
    libraries, we will need to specify additional software repositories, so we add
    the following lines to our `build.sbt` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Now that we have added all the necessary software repositories, we can add
    some concrete libraries. By adding the following line to the `build.sbt` file,
    we obtain access to the Apache Commons IO library:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'After changing the `build.sbt` file, it is necessary to reload any running
    SBT instances. In the SBT interactive shell, we need to enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: This enables SBT to detect any changes in the build definition file and download
    additional software packages when necessary.
  prefs: []
  type: TYPE_NORMAL
- en: Different Scala libraries live in different namespaces called packages. To obtain
    access to the contents of a specific package, we use the `import` statement. When
    we use a specific concurrency library in an example for the first time, we will
    always show the necessary set of `import` statements. On subsequent uses of the
    same library, we will not repeat the same `import` statements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly, we avoid adding package declarations in the code examples to keep
    them short. Instead, we assume that the code in a specific chapter is in the similarly
    named package. For example, all the code belonging to [Chapter 2](ch02.html "Chapter 2. Concurrency
    on the JVM and the Java Memory Model"), *Concurrency on the JVM and the Java Memory
    Model*, resides in the `org.learningconcurrency.ch2` package. Source code files
    for the examples presented in that chapter begin with the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, this book deals with concurrency and asynchronous execution. Many
    of the examples start a concurrent computation that continues executing after
    the main execution stops. To make sure that these concurrent computations always
    complete, we will run most of the examples in the same JVM instance as SBT itself.
    We add the following line to our `build.sbt` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: In the examples, where running in a separate JVM process is required, we will
    point this out and give clear instructions.
  prefs: []
  type: TYPE_NORMAL
- en: Using Eclipse, IntelliJ IDEA, or another IDE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An advantage of using an **Integrated Development Environment** (**IDE**) such
    as Eclipse or IntelliJ IDEA is that you can write, compile, and run your Scala
    programs automatically. In this case, there is no need to install SBT, as described
    in the previous section. While we advise that you run the examples using SBT,
    you can alternatively use an IDE.
  prefs: []
  type: TYPE_NORMAL
- en: 'There is an important caveat when running the examples in this book using an
    IDE: editors such as Eclipse and IntelliJ IDEA run the program inside a separate
    JVM process. As mentioned in the previous section, certain concurrent computations
    continue executing after the main execution stops. To make sure that they always
    complete, you will sometimes need to add the `sleep` statements at the end of
    the main execution, which slow down the main execution. In most of the examples
    in this book, the `sleep` statements are already added for you, but in some programs,
    you might have to add them yourself.'
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is primarily intended for developers who have learned how to write
    sequential Scala programs, and wish to learn how to write correct concurrent programs.
    The book assumes that you have a basic knowledge of the Scala programming language.
    Throughout this book, we strive to use the simple features of Scala in order to
    demonstrate how to write concurrent programs. Even with an elementary knowledge
    of Scala, you should have no problem understanding various concurrency topics.
  prefs: []
  type: TYPE_NORMAL
- en: This is not to say that the book is limited to Scala developers. Whether you
    have experience with Java, come from a .NET background, or are generally a programming
    language aficionado, chances are that you will find the content in this book insightful.
    A basic understanding of object-oriented or functional programming should be a
    sufficient prerequisite.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, this book is a good introduction to modern concurrent programming in
    the broader sense. Even if you have the basic knowledge about multithreaded computing,
    or the JVM concurrency model, you will learn a lot about modern, high-level concurrency
    utilities. Many of the concurrency libraries in this book are only starting to
    find their way into mainstream programming languages, and some of them are truly
    cutting-edge technologies.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    next lines of code read the link and assign it to the to the `BeautifulSoup` function."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "In order to download new modules, we will go to **Files** | **Settings**
    | **Project Name** | **Project Interpreter**."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply e-mail feedback@packtpub.com, and mention the book's title in
    the subject of your message. If there is a topic that you have expertise in and
    you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/LearningConcurrentProgrammingInScalaSecondEdition](https://github.com/PacktPublishing/LearningConcurrentProgrammingInScalaSecondEdition).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images of this book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/LearningConcurrentProgrammingInScalaSecondEdition_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/LearningConcurrentProgrammingInScalaSecondEdition_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at copyright@packtpub.com with a link to the suspected pirated
    material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at questions@packtpub.com,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
