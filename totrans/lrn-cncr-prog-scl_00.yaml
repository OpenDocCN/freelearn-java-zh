- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Concurrency is everywhere. With the rise of multicore processors in the consumer
    market, the need for concurrent programming has overwhelmed the developer world.
    Where it once served to express asynchronously in programs and computer systems
    and was largely an academic discipline, concurrent programming is now a pervasive
    methodology in software development. As a result, advanced concurrency frameworks
    and libraries are sprouting at an amazing rate. Recent years have witnessed a
    renaissance in the field of concurrent computing.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 并发无处不在。随着消费市场多核处理器的兴起，对并发编程的需求已经压倒了开发者世界。它曾经用于在程序和计算机系统中表达异步性，主要是一个学术学科，但现在并发编程已成为软件开发中的一种普遍方法。因此，高级并发框架和库正以惊人的速度涌现。近年来，并发计算领域经历了复兴。
- en: As the level of abstraction grows in modern languages and concurrency frameworks,
    it is becoming crucial to know how and when to use them. Having a good grasp of
    the classical concurrency and synchronization primitives, such as threads, locks,
    and monitors, is no longer sufficient. High-level concurrency frameworks, which
    solve many issues of traditional concurrency and are tailored towards specific
    tasks, are gradually overtaking the world of concurrent programming.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 随着现代语言和并发框架抽象级别的提高，了解何时以及如何使用它们变得越来越重要。仅仅掌握线程、锁和监视器等经典并发和同步原语已经不再足够。解决许多传统并发问题并针对特定任务定制的先进并发框架正在逐渐主导并发编程的世界。
- en: This book describes high-level concurrent programming in Scala. It presents
    detailed explanations of various concurrency topics and covers the basic theory
    of concurrent programming. Simultaneously, it describes modern concurrency frameworks,
    shows their detailed semantics, and teaches you how to use them. Its goal is to
    introduce important concurrency abstractions and, at the same time, show how they
    work in real code.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书描述了Scala中的高级并发编程。它详细解释了各种并发主题，并涵盖了并发编程的基本理论。同时，它描述了现代并发框架，展示了它们的详细语义，并教你如何使用它们。其目标是介绍重要的并发抽象，同时展示它们在实际代码中的工作方式。
- en: We are convinced that, by reading this book, you will gain both a solid theoretical
    understanding of concurrent programming and develop a set of useful practical
    skills that are required to write correct and efficient concurrent programs. These
    skills are the first steps toward becoming a modern concurrency expert.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们相信，通过阅读本书，你将获得对并发编程的扎实理论理解，并培养出一套编写正确和高效并发程序所需的有用实用技能。这些技能是成为现代并发专家的第一步。
- en: We hope that you will have as much fun reading this book as we did writing it.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望你在阅读本书时能像我们写作时一样享受乐趣。
- en: What this book covers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: This book is organized into a sequence of chapters with various topics on concurrent
    programming. The book covers the fundamental concurrent APIs that are a part of
    the Scala runtime, introduces more complex concurrency primitives, and gives an
    extensive overview of high-level concurrency abstractions.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书分为一系列章节，涵盖了并发编程的多个主题。本书涵盖了Scala运行时的一部分基本并发API，介绍了更复杂的并发原语，并对高级并发抽象提供了广泛的概述。
- en: '[Chapter 1](ch01.html "Chapter 1. Introduction"), *Introduction*, explains
    the need for concurrent programming and gives some philosophical background. At
    the same time, it covers the basics of the Scala programming language that are
    required for understanding the rest of this book.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章](ch01.html "第一章。简介")，*简介*，解释了并发编程的需求，并提供了哲学背景。同时，它涵盖了理解本书其余部分所需的Scala编程语言的基础知识。'
- en: '[Chapter 2](ch02.html "Chapter 2. Concurrency on the JVM and the Java Memory
    Model"), *Concurrency on the JVM and the Java Memory Model*, teaches you the basics
    of concurrent programming. This chapter will teach you how to use threads and
    how to protect access to shared memory and introduce the Java Memory Model.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章](ch02.html "第二章。JVM和Java内存模型上的并发")，*JVM和Java内存模型上的并发*，教你并发编程的基础。这一章将教你如何使用线程，如何保护对共享内存的访问，并介绍Java内存模型。'
- en: '[Chapter 3](ch03.html "Chapter 3. Traditional Building Blocks of Concurrency"),
    *Traditional Building Blocks of Concurrency*, presents classic concurrency utilities,
    such as thread pools, atomic variables, and concurrent collections, with a particular
    focus on the interaction with the features of the Scala language. The emphasis
    in this book is on the modern, high-level concurrent programming frameworks. Consequently,
    this chapter presents an overview of traditional concurrent programming techniques,
    but it does not aim to be extensive.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章. 并发的传统构建块"), *并发的传统构建块*，介绍了经典的并发工具，例如线程池、原子变量和并发集合，特别关注与Scala语言特性的交互。本书的重点在于现代、高级的并发编程框架。因此，本章概述了传统的并发编程技术，但并不旨在详尽。'
- en: '[Chapter 4](ch04.html "Chapter 4.  Asynchronous Programming with Futures and
    Promises"), *Asynchronous Programming with Futures and Promises*, is the first
    chapter that deals with a Scala-specific concurrency framework. This chapter presents
    the futures and promises API and shows how to correctly use them when implementing
    asynchronous programs.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章. 使用未来和承诺进行异步编程"), *使用未来和承诺进行异步编程*，是第一章节处理Scala特定的并发框架。本章介绍了未来和承诺API，并展示了在实现异步程序时如何正确使用它们。'
- en: '[Chapter 5](ch05.html "Chapter 5. Data-Parallel Collections"), *Data-Parallel
    Collections*, describes the Scala parallel collections framework. In this chapter,
    you will learn how to parallelize collection operations, when it is allowed to
    parallelize them, and how to assess the performance benefits of doing so.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章. 数据并行集合"), *数据并行集合*，描述了Scala并行集合框架。在本章中，你将学习如何并行化集合操作，何时可以并行化它们，以及如何评估这样做带来的性能收益。'
- en: '[Chapter 6](ch06.html "Chapter 6. Concurrent Programming with Reactive Extensions"),
    *Concurrent Programming with Reactive Extensions*, teaches you how to use the
    Reactive Extensions framework for event-based and asynchronous programming. You
    will see how the operations on event streams correspond to collection operations,
    how to pass events from one thread to another, and how to design a reactive user
    interface using event streams.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章. 使用响应式扩展进行并发编程"), *使用响应式扩展进行并发编程*，教你如何使用响应式扩展框架进行基于事件和异步编程。你将看到事件流上的操作如何对应于集合操作，如何将事件从一个线程传递到另一个线程，以及如何使用事件流设计响应式用户界面。'
- en: '[Chapter 7](ch07.html "Chapter 7. Software Transactional Memory"), *Software
    Transactional Memory*, introduces the ScalaSTM library for transactional programming,
    which aims to provide a safer, more intuitive, shared-memory programming model.
    In this chapter, you will learn how to protect access to shared data using scalable
    memory transactions and, at the same time, reduce the risk of deadlocks and race
    conditions.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章. 软件事务内存"), *软件事务内存*，介绍了ScalaSTM库，用于事务编程，旨在提供一个更安全、更直观的共享内存编程模型。在本章中，你将学习如何使用可伸缩的内存事务保护对共享数据的访问，同时降低死锁和竞态条件的风险。'
- en: '[Chapter 8](ch08.html "Chapter 8.  Actors"), *Actors*, presents the actor programming
    model and the Akka framework. In this chapter, you will learn how to transparently
    build message-passing distributed programs that run on multiple machines.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章. 演员"), *演员*，介绍了演员编程模型和Akka框架。在本章中，你将学习如何透明地构建在多台机器上运行的基于消息传递的分布式程序。'
- en: '[Chapter 9](ch09.html "Chapter 9. Concurrency in Practice"), *Concurrency in
    Practice*, summarizes the different concurrency libraries introduced in the earlier
    chapters. In this chapter, you will learn how to choose the correct concurrency
    abstraction to solve a given problem, and how to combine different concurrency
    abstractions together when designing larger concurrent applications.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章. 实践中的并发"), *实践中的并发*，总结了前面章节中介绍的不同并发库。在本章中，你将学习如何选择正确的并发抽象来解决给定的问题，以及如何在设计更大的并发应用程序时将不同的并发抽象组合在一起。'
- en: '[Chapter 10](ch10.html "Chapter 10.  Reactors"), *Reactors*, presents the reactor
    programming model, whose focus is improved composition in concurrent and distributed
    programs. This emerging model enables separation of concurrent and distributed
    programming patterns into modular components called protocols.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 10 章](ch10.html "第 10 章。反应器")，即 **反应器**，介绍了反应器编程模型，其重点是提高并发和分布式程序中的组合性。这种新兴模型使并发和分布式编程模式能够分离成称为协议的模块化组件。'
- en: While we recommend that you read the chapters in the order in which they appear,
    this is not strictly necessary. If you are well acquainted with the content in
    [Chapter 2](ch02.html "Chapter 2. Concurrency on the JVM and the Java Memory Model"),
    *Concurrency on the JVM and the Java Memory Model*, you can study most of the
    other chapters directly. The only chapters that rely on the content from all the
    preceding chapters are [Chapter 9](ch09.html "Chapter 9. Concurrency in Practice"),
    *Concurrency in Practice*, where we present a practical overview of the topics
    in this book, and [Chapter 10](ch10.html "Chapter 10.  Reactors"), *Reactors*,
    for which it is helpful to understand how actors and event streams work.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们建议您按照章节出现的顺序阅读，但这并非绝对必要。如果您对 [第 2 章](ch02.html "第 2 章。JVM 和 Java 内存模型上的并发")
    中的内容非常熟悉，即 **JVM 和 Java 内存模型上的并发**，您可以直接学习大多数其他章节。唯一依赖于所有前述章节内容的章节是 [第 9 章](ch09.html
    "第 9 章。实践中的并发")，即 **实践中的并发**，其中我们展示了本书主题的实践概述，以及 [第 10 章](ch10.html "第 10 章。反应器")，即
    **反应器**，了解演员和事件流的工作方式对理解它是有帮助的。
- en: What you need for this book
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要为本书准备的东西
- en: In this section, we describe some of the requirements that are necessary to
    read and understand this book. We explain how to install the Java Development
    Kit, which is required to run Scala programs and show how to use Simple Build
    Tool to run various examples.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们描述了阅读和理解本书所必需的一些要求。我们解释了如何安装 Java 开发工具包，这是运行 Scala 程序所必需的，并展示了如何使用 Simple
    Build Tool 运行各种示例。
- en: We will not require an IDE in this book. The program that you use to write code
    is entirely up to you, and you can choose anything, such as Vim, Emacs, Sublime
    Text, Eclipse, IntelliJ IDEA, Notepad++, or some other text editor.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将不会要求使用 IDE。您用来编写代码的程序完全由您决定，您可以选择任何东西，例如 Vim、Emacs、Sublime Text、Eclipse、IntelliJ
    IDEA、Notepad++ 或其他文本编辑器。
- en: Installing the JDK
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 JDK
- en: Scala programs are not compiled directly to the native machine code, so they
    cannot be run as executables on various hardware platforms. Instead, the Scala
    compiler produces an intermediate code format called the Java bytecode. To run
    this intermediate code, your computer must have the Java Virtual Machine software
    installed. In this section, we explain how to download and install the Java Development
    Kit, which includes the Java Virtual Machine and other useful tools.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Scala 程序不是直接编译成原生机器代码，因此不能在各种硬件平台上作为可执行文件运行。相反，Scala 编译器生成一种中间代码格式，称为 Java 字节码。要运行这种中间代码，您的计算机必须安装
    Java 虚拟机软件。在本节中，我们解释了如何下载和安装包含 Java 虚拟机和其他有用工具的 Java 开发工具包。
- en: 'There are multiple implementations of the JDK that are available from different
    software vendors. We recommend that you use the Oracle JDK distribution. To download
    and install the Java Development Kit, follow these steps:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 可从不同的软件供应商处获取多个 JDK 实现。我们建议您使用 Oracle JDK 发行版。要下载和安装 Java 开发工具包，请按照以下步骤操作：
- en: 'Open the following URL in your web browser: [www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的网络浏览器中打开以下 URL：[www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)。
- en: If you cannot open the specified URL, go to your search engine and enter the
    keywords **JDK Download**.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您无法打开指定的 URL，请访问您的搜索引擎并输入关键词 **JDK 下载**。
- en: 'Once you find the link for the Java SE, download on the Oracle website, download
    the appropriate version of JDK 7 for your operating system: Windows, Linux, or
    Mac OS X; 32-bit or 64-bit.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您在 Oracle 网站上找到 Java SE 的链接，请下载适合您操作系统的 JDK 7 版本：Windows、Linux 或 Mac OS X；32
    位或 64 位。
- en: 'If you are using the Windows operating system, simply run the installer program.
    If you are using the Mac OS X, open the dmg archive to install JDK. Finally, if
    you are using Linux, decompress the archive to a XYZ directory, and add the bin
    subdirectory to the PATH variable:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是 Windows 操作系统，只需运行安装程序。如果你使用的是 Mac OS X，打开 dmg 存档以安装 JDK。最后，如果你使用的是 Linux，将存档解压到
    XYZ 目录，并将 bin 子目录添加到 PATH 变量中：
- en: '[PRE0]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You should now be able to run the java and javac commands in the terminal. Enter
    the  **`javac`**  command to see if it is available (you will never invoke this
    command directly in this book, but running it verifies that it is available).
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在应该能够在终端中运行 java 和 javac 命令。输入  **`javac`**  命令以查看它是否可用（在这本书中你永远不会直接调用此命令，但运行它可以验证它是否可用）。
- en: It is possible that your operating system already has JDK installed. To verify
    this, simply run the **`javac`** command, as we did in the last step in the preceding
    description.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你的操作系统可能已经安装了 JDK。为了验证这一点，只需运行 **`javac`** 命令，就像我们在前面的描述中上一步所做的那样。
- en: Installing and using SBT
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和使用 SBT
- en: '**Simple Build Tool** (**SBT**) is a command-line build tool used for Scala
    projects. Its purpose is to compile Scala code, manage dependencies, continuous
    compilation and testing, deployment, and many other uses. Throughout this book,
    we will use SBT to manage our project dependencies and run example code.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**简单构建工具**（**SBT**）是一个用于 Scala 项目的命令行构建工具。它的目的是编译 Scala 代码、管理依赖项、持续编译和测试、部署以及许多其他用途。在这本书中，我们将使用
    SBT 来管理我们的项目依赖项并运行示例代码。'
- en: 'To install SBT, follow these instructions:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 SBT，请按照以下说明操作：
- en: Go  to the [http://www.scala-sbt.org/](http://www.scala-sbt.org/) URL.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 [http://www.scala-sbt.org/](http://www.scala-sbt.org/) 网址。
- en: Download the installation file for your platform. If you are running on Windows,
    this is the `msi` installer file. If you are running on Linux or OS X, this is
    the `zip` or `tgz` archive file.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载适用于你的平台的安装文件。如果你在 Windows 上运行，这是 `msi` 安装程序文件。如果你在 Linux 或 OS X 上运行，这是 `zip`
    或 `tgz` 存档文件。
- en: Install SBT. If you are running on Windows, simply run the installer file. If
    you are running on Linux or OS X, unzip the contents of the archive in your home
    directory.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 SBT。如果你在 Windows 上运行，只需运行安装程序文件。如果你在 Linux 或 OS X 上运行，将存档内容解压缩到你的家目录中。
- en: 'You are now ready to use SBT. In the following steps, we will create a new
    SBT project:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以使用 SBT 了。在以下步骤中，我们将创建一个新的 SBT 项目：
- en: Open a Command Prompt if you are running on Windows, or a terminal window if
    you are running on Linux or OS X.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是 Windows，打开命令提示符；如果你使用的是 Linux 或 OS X，打开终端窗口。
- en: 'Create an empty directory called scala-concurrency-examples:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 scala-concurrency-examples 的空目录：
- en: '[PRE1]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Change your path to the scala-concurrency-examples directory:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的路径更改为 scala-concurrency-examples 目录：
- en: '[PRE2]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Create a single source code directory for our examples:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为我们的示例创建一个单独的源代码目录：
- en: '[PRE3]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, use your editor to create a build definition file named build.sbt. This
    file defines various project properties. Create it in the root directory of the
    project (scala-concurrency-examples). Add the following contents to the build
    definition file (note that the empty lines are mandatory):'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用你的编辑器创建一个名为 build.sbt 的构建定义文件。此文件定义了各种项目属性。在项目的根目录（scala-concurrency-examples）中创建它。将以下内容添加到构建定义文件中（注意，空行是必需的）：
- en: '[PRE4]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Finally, go back to the terminal and run SBT from the root directory of the
    project:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，回到终端并从项目的根目录运行 SBT：
- en: '[PRE5]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: SBT will start an interactive shell, which we will use to give SBT various build
    commands.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SBT 将启动一个交互式 shell，我们将使用它来向 SBT 提供各种构建命令。
- en: 'Now, you can start writing Scala programs. Open your editor, and create a source
    code file named `HelloWorld.scala` in the `src/main/scala/org/learningconcurrency`
    directory. Add the following contents to the `HelloWorld.scala` file:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以开始编写 Scala 程序了。打开你的编辑器，在 `src/main/scala/org/learningconcurrency` 目录中创建一个名为
    `HelloWorld.scala` 的源代码文件。将以下内容添加到 `HelloWorld.scala` 文件中：
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, go back to the terminal window with the SBT interactive shell and run
    the program with the following command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，回到带有 SBT 交互式 shell 的终端窗口，并使用以下命令运行程序：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Running this program should give the following output:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此程序应给出以下输出：
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'These steps are sufficient to run most of the examples in this book. Occasionally,
    we will rely on external libraries when running the examples. These libraries
    are resolved automatically by SBT from standard software repositories. For some
    libraries, we will need to specify additional software repositories, so we add
    the following lines to our `build.sbt` file:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤足以运行本书中的大多数示例。偶尔，在运行示例时，我们将依赖外部库。这些库将由 SBT 从标准软件仓库自动解析。对于某些库，我们需要指定额外的软件仓库，因此我们在
    `build.sbt` 文件中添加以下行：
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now that we have added all the necessary software repositories, we can add
    some concrete libraries. By adding the following line to the `build.sbt` file,
    we obtain access to the Apache Commons IO library:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经添加了所有必要的软件仓库，我们可以添加一些具体的库。通过在 `build.sbt` 文件中添加以下行，我们可以获得 Apache Commons
    IO 库的访问权限：
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'After changing the `build.sbt` file, it is necessary to reload any running
    SBT instances. In the SBT interactive shell, we need to enter the following command:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改 `build.sbt` 文件后，必须重新加载任何正在运行的 SBT 实例。在 SBT 交互式 shell 中，我们需要输入以下命令：
- en: '[PRE11]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This enables SBT to detect any changes in the build definition file and download
    additional software packages when necessary.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得 SBT 能够检测构建定义文件中的任何更改，并在必要时下载额外的软件包。
- en: Different Scala libraries live in different namespaces called packages. To obtain
    access to the contents of a specific package, we use the `import` statement. When
    we use a specific concurrency library in an example for the first time, we will
    always show the necessary set of `import` statements. On subsequent uses of the
    same library, we will not repeat the same `import` statements.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的 Scala 库位于不同的命名空间中，称为包。为了访问特定包的内容，我们使用 `import` 语句。当我们第一次在示例中使用特定的并发库时，我们总是会显示必要的
    `import` 语句集合。在随后的相同库的使用中，我们不会重复相同的 `import` 语句。
- en: 'Similarly, we avoid adding package declarations in the code examples to keep
    them short. Instead, we assume that the code in a specific chapter is in the similarly
    named package. For example, all the code belonging to [Chapter 2](ch02.html "Chapter 2. Concurrency
    on the JVM and the Java Memory Model"), *Concurrency on the JVM and the Java Memory
    Model*, resides in the `org.learningconcurrency.ch2` package. Source code files
    for the examples presented in that chapter begin with the following code:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们避免在代码示例中添加包声明以保持其简短。相反，我们假设特定章节中的代码位于同名包中。例如，属于[第 2 章](ch02.html "第 2 章。JVM
    和 Java 内存模型上的并发")，*JVM 和 Java 内存模型上的并发*的所有代码都位于 `org.learningconcurrency.ch2`
    包中。该章节中展示的示例的源代码文件以以下代码开始：
- en: '[PRE12]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Finally, this book deals with concurrency and asynchronous execution. Many
    of the examples start a concurrent computation that continues executing after
    the main execution stops. To make sure that these concurrent computations always
    complete, we will run most of the examples in the same JVM instance as SBT itself.
    We add the following line to our `build.sbt` file:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，本书讨论了并发和异步执行。许多示例在主执行停止后继续执行并发计算。为了确保这些并发计算始终完成，我们将大多数示例运行在与 SBT 本身相同的 JVM
    实例中。我们在 `build.sbt` 文件中添加以下行：
- en: '[PRE13]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In the examples, where running in a separate JVM process is required, we will
    point this out and give clear instructions.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，当需要在一个单独的 JVM 进程中运行时，我们会指出这一点并给出明确的说明。
- en: Using Eclipse, IntelliJ IDEA, or another IDE
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Eclipse、IntelliJ IDEA 或其他 IDE
- en: An advantage of using an **Integrated Development Environment** (**IDE**) such
    as Eclipse or IntelliJ IDEA is that you can write, compile, and run your Scala
    programs automatically. In this case, there is no need to install SBT, as described
    in the previous section. While we advise that you run the examples using SBT,
    you can alternatively use an IDE.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用像 Eclipse 或 IntelliJ IDEA 这样的**集成开发环境**（**IDE**）的一个优点是，您可以自动编写、编译和运行您的 Scala
    程序。在这种情况下，您不需要安装 SBT，如前所述。虽然我们建议您使用 SBT 运行示例，但您也可以使用 IDE。
- en: 'There is an important caveat when running the examples in this book using an
    IDE: editors such as Eclipse and IntelliJ IDEA run the program inside a separate
    JVM process. As mentioned in the previous section, certain concurrent computations
    continue executing after the main execution stops. To make sure that they always
    complete, you will sometimes need to add the `sleep` statements at the end of
    the main execution, which slow down the main execution. In most of the examples
    in this book, the `sleep` statements are already added for you, but in some programs,
    you might have to add them yourself.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用IDE运行本书中的示例时，有一个重要的注意事项：例如Eclipse和IntelliJ IDEA这样的编辑器在单独的JVM进程中运行程序。如前所述，某些并发计算在主执行停止后仍然继续执行。为了确保它们始终完成，你有时需要在主执行的末尾添加`sleep`语句，这会减慢主执行的速率。在本书的大多数示例中，已经为你添加了`sleep`语句，但在某些程序中，你可能需要自己添加它们。
- en: Who this book is for
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is primarily intended for developers who have learned how to write
    sequential Scala programs, and wish to learn how to write correct concurrent programs.
    The book assumes that you have a basic knowledge of the Scala programming language.
    Throughout this book, we strive to use the simple features of Scala in order to
    demonstrate how to write concurrent programs. Even with an elementary knowledge
    of Scala, you should have no problem understanding various concurrency topics.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 本书主要面向已经学会如何编写顺序Scala程序的开发者，并希望学习如何编写正确的并发程序。本书假设你具备Scala编程语言的基本知识。在本书的整个过程中，我们努力使用Scala的简单特性来展示如何编写并发程序。即使你对Scala只有基础的了解，你也应该能够理解各种并发主题。
- en: This is not to say that the book is limited to Scala developers. Whether you
    have experience with Java, come from a .NET background, or are generally a programming
    language aficionado, chances are that you will find the content in this book insightful.
    A basic understanding of object-oriented or functional programming should be a
    sufficient prerequisite.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是说这本书仅限于Scala开发者。无论你是否有Java经验，来自.NET背景，还是一般编程语言爱好者，你都有可能在这本书中找到有见地的内容。对面向对象或函数式编程的基本理解应该是一个足够的先决条件。
- en: Finally, this book is a good introduction to modern concurrent programming in
    the broader sense. Even if you have the basic knowledge about multithreaded computing,
    or the JVM concurrency model, you will learn a lot about modern, high-level concurrency
    utilities. Many of the concurrency libraries in this book are only starting to
    find their way into mainstream programming languages, and some of them are truly
    cutting-edge technologies.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，本书是现代并发编程（广义上）的良好入门。即使你对多线程计算或JVM并发模型有基本知识，你也会学到很多关于现代高级并发工具的知识。本书中的一些并发库才刚刚开始进入主流编程语言，其中一些确实是尖端技术。
- en: Conventions
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 惯例
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你会找到许多文本样式，用于区分不同类型的信息。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    next lines of code read the link and assign it to the to the `BeautifulSoup` function."'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter用户名如下所示：“接下来的代码行读取链接并将其分配给`BeautifulSoup`函数。”
- en: 'A block of code is set as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE14]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起你对代码块中特定部分的注意时，相关的行或项目将以粗体显示：
- en: '[PRE15]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都按照以下方式编写：
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "In order to download new modules, we will go to **Files** | **Settings**
    | **Project Name** | **Project Interpreter**."'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要词汇**以粗体显示。屏幕上看到的词，例如在菜单或对话框中，在文本中如下所示：“为了下载新模块，我们将转到**文件** | **设置**
    | **项目名称** | **项目解释器**。”'
- en: Note
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要注意事项以如下方式显示：
- en: Tip
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Tips and tricks appear like this.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 小技巧和技巧看起来像这样。
- en: Reader feedback
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply e-mail feedback@packtpub.com, and mention the book's title in
    the subject of your message. If there is a topic that you have expertise in and
    you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。请告诉我们您对这本书的看法——您喜欢或不喜欢的地方。读者反馈对我们很重要，因为它帮助我们开发出您真正能从中获得最大价值的标题。要发送一般反馈，请简单地发送电子邮件至feedback@packtpub.com，并在邮件主题中提及书籍的标题。如果您在某个主题领域有专业知识，并且有兴趣撰写或为书籍做出贡献，请参阅我们的作者指南[www.packtpub.com/authors](http://www.packtpub.com/authors)。
- en: Customer support
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经成为Packt图书的骄傲拥有者，我们有一些事情可以帮助您从您的购买中获得最大价值。
- en: Downloading the example code
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)的账户下载本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下步骤下载代码文件：
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的电子邮件地址和密码登录或注册我们的网站。
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的**支持**标签上。
- en: Click on **Code Downloads & Errata**.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码下载与勘误**。
- en: Enter the name of the book in the **Search** box.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索**框中输入书籍的名称。
- en: Select the book for which you're looking to download the code files.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择您购买此书的来源。
- en: Click on **Code Download**.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码下载**。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，请确保您使用最新版本的软件解压缩或提取文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR / 7-Zip for Windows
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg / iZip / UnRarX for Mac
- en: 7-Zip / PeaZip for Linux
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip / PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/LearningConcurrentProgrammingInScalaSecondEdition](https://github.com/PacktPublishing/LearningConcurrentProgrammingInScalaSecondEdition).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 本书代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/LearningConcurrentProgrammingInScalaSecondEdition](https://github.com/PacktPublishing/LearningConcurrentProgrammingInScalaSecondEdition)。我们还有其他来自我们丰富图书和视频目录的代码包可供选择，网址为[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)。请查看它们！
- en: Downloading the color images of this book
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载本书的彩色图像
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/LearningConcurrentProgrammingInScalaSecondEdition_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/LearningConcurrentProgrammingInScalaSecondEdition_ColorImages.pdf).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为您提供了一个包含本书中使用的截图/图表彩色图像的PDF文件。这些彩色图像将帮助您更好地理解输出中的变化。您可以从[https://www.packtpub.com/sites/default/files/downloads/LearningConcurrentProgrammingInScalaSecondEdition_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/LearningConcurrentProgrammingInScalaSecondEdition_ColorImages.pdf)下载此文件。
- en: Errata
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在我们的书中发现错误——可能是文本或代码中的错误——如果您能向我们报告这一点，我们将不胜感激。通过这样做，您可以避免其他读者的挫败感，并帮助我们改进本书的后续版本。如果您发现任何勘误，请通过访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击**勘误提交表单**链接，并输入您的勘误详情来报告。一旦您的勘误得到验证，您的提交将被接受，勘误将被上传到我们的网站或添加到该标题的勘误部分下的现有勘误列表中。
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看之前提交的勘误表，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)，并在搜索字段中输入书籍名称。所需信息将在**勘误**部分显示。
- en: Piracy
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在互联网上对版权材料的盗版是所有媒体中持续存在的问题。在Packt，我们非常重视保护我们的版权和许可证。如果您在互联网上发现任何形式的非法复制我们的作品，请立即提供位置地址或网站名称，以便我们可以寻求补救措施。
- en: Please contact us at copyright@packtpub.com with a link to the suspected pirated
    material.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过版权@packtpub.com与我们联系，并提供涉嫌盗版材料的链接。
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您在保护我们作者和我们为您提供有价值内容的能力方面的帮助。
- en: Questions
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at questions@packtpub.com,
    and we will do our best to address the problem.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在这本书的任何方面遇到问题，您可以通过questions@packtpub.com联系我们，我们将尽力解决问题。
