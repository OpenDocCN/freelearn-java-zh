["```java\nsample1\n├── repository\n├── services\n└── web-app\n\n```", "```java\nsample2\n├── core\n│   ├── models\n│   ├── repository\n│   └── services\n├── client\n│   ├── client-api\n│   ├── cli-client\n│   └── desktop-client\n└── web \n ├── webservices\n └── webapp\n\n```", "```java\nsample1\n├── repository\n│   └── ...\n├── services\n│   └── ...\n├── web-app\n│   └── ...\n├── build.gradle\n└── settings.gradle\n\n```", "```java\ninclude ':repository', ':services', ':web-app'\n```", "```java\ninclude 'repository', 'services', 'web-app'\n```", "```java\n$ gradle projects\n:projects\n------------------------------------------------------------\nRoot project\n------------------------------------------------------------\n\nRoot project 'sample1'\n+--- Project ':repository'\n+--- Project ':services'\n\\--- Project ':web-app'\n\nTo see a list of the tasks of a project, run gradle <project-path>:tasks.\nFor example, try running gradle :repository:tasks.\n\nBUILD SUCCESSFUL\n\n```", "```java\ninclude 'core',\n  'core:models', 'core:repository', 'core:services',\n  'client' //... so on\n```", "```java\ntask sayHello << {\n    println \"Hello from multi-project build\"\n}\n```", "```java\n$ gradle tasks\n...\n\nOther tasks\n-----------\nsayHello\n\n....\n\n```", "```java\n$ gradle repository:tasks\n\n```", "```java\nbuild.gradle:\n```", "```java\nallprojects {\n    task whoami << {println \"I am ${project.name}\"}\n}\n```", "```java\n$ gradle tasks\n...\nOther tasks\n-----------\nsayHello\nwhoami\n...\n\n```", "```java\n$ gradle repository:tasks\n...\nOther tasks\n-----------\nwhoami\n...\n\n```", "```java\nallprojects block (the closure being passed to allprojects, to be technically correct) gets applied to all the projects. The task's action prints the name of the project using the project object reference. Remember that the project object will refer to different projects depending on the project on which the task is being called. This happens because in the configuration phase, the allproject block is executed for each project once we have the project reference for that project.\n```", "```java\n$ gradle tasks --all\n...\nOther tasks\n-----------\nsayHello\nwhoami\nrepository:whoami\nservices:whoami\nweb-app:whoami\n...\n\n```", "```java\n$ gradle -q repository:whoami\nI am repository\n\n```", "```java\n$ gradle -q whoami\nI am root\nI am repository\nI am services\nI am web-app\n\n```", "```java\n$ gradle -q :whoami\nI am root\n\n```", "```java\n$ gradle –q whoami\nI am repository\n\n```", "```java\nallprojects {\n  task(\"describe${project.name.capitalize()}\") << {\n    println project.name\n  }\n}\n```", "```java\n$ gradle tasks \n...\nOther tasks\n-----------\ndescribeRepository\ndescribeSample1\ndescribeServices\ndescribeWeb-app\nsayHello\nwhoami\n...\n```", "```java\n$ gradle -q describeServices \nservices\n\n```", "```java\n$ gradle -q tasks \n...\nOther tasks\n-----------\ndescribeRepository\nwhoami\n\n```", "```java\nsubprojects {\n  apply plugin: 'java'\n}\n```", "```java\nproject(':services') {\n  dependencies {\n    compile project(':repository')\n  }\n}\n```", "```java\nroot\n├── build.gradle\n├── settings.gradle\n├── repository\n├── services\n└── web-app\n └── build.gradle\n\n```", "```java\ndependencies {\n  compile project(':services')\n}\n```", "```java\n$ gradle -q web-app:dependencies\n\n------------------------------------------------------------\nProject :web-app\n------------------------------------------------------------\n\narchives - Configuration for archive artifacts.\nNo dependencies\n\ncompile - Compile classpath for source set 'main'.\n\\--- project :services\n \\--- project :repository\n\ndefault - Configuration for default artifacts.\n\\--- project :services\n \\--- project :repository\n\nruntime - Runtime classpath for source set 'main'.\n\\--- project :services\n \\--- project :repository\n\ntestCompile - Compile classpath for source set 'test'.\n\\--- project :services\n \\--- project :repository\n\ntestRuntime - Runtime classpath for source set 'test'.\n\\--- project :services\n \\--- project :repository\n\n```"]