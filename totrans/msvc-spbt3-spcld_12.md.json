["```java\n    @EnableConfigServer\n    @SpringBootApplication\n    public class ConfigServerApplication { \n    ```", "```java\n    server.port: 8888\n    spring.cloud.config.server.native.searchLocations: file:${PWD}/config-repo\n    management.endpoint.health.show-details: \"ALWAYS\"\n    management.endpoints.web.exposure.include: \"*\"\n    logging:\n      level:\n        root: info\n    ---\n    spring.config.activate.on-profile: docker\n    spring.cloud.config.server.native.searchLocations: file:/config-repo \n    ```", "```java\n    include ':spring-cloud:config-server' \n    ```", "```java\n - id: config-server\n   uri: http://${app.config-server}:8888\n  predicates:\n  - Path=/config/**\n  filters:\n  - RewritePath=/config/(?<segment>.*), /$\\{segment} \n```", "```java\n .pathMatchers(\"/config/**\").permitAll() \n```", "```java\ncurl https://dev-usr:dev-pwd@localhost:8443/config/product/docker -ks | jq \n```", "```java\nconfig-server:\n  build: spring-cloud/config-server\n  mem_limit: 512m\n  environment:\n    - SPRING_PROFILES_ACTIVE=docker,native\n    - ENCRYPT_KEY=${CONFIG_SERVER_ENCRYPT_KEY}\n    - SPRING_SECURITY_USER_NAME=${CONFIG_SERVER_USR}\n    - SPRING_SECURITY_USER_PASSWORD=${CONFIG_SERVER_PWD}\n  volumes:\n    - $PWD/config-repo:/config-repo \n```", "```java\nCONFIG_SERVER_ENCRYPT_KEY=my-very-secure-encrypt-key\nCONFIG_SERVER_USR=dev-usr\nCONFIG_SERVER_PWD=dev-pwd \n```", "```java\n    product:\n      environment:\n     - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}\n     - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD} \n    ```", "```java\n    @DataMongoTest(properties = {\"spring.cloud.config.enabled=false\"})\n    @DataJpaTest(properties = {\"spring.cloud.config.enabled=false\"})\n    @SpringBootTest(webEnvironment=RANDOM_PORT, properties = {\"eureka.client.enabled=false\", \"spring.cloud.config.enabled=false\"}) \n    ```", "```java\nspring.config.import: \"configserver:\"\nspring:\n  application.name: product\n  cloud.config:\n    failFast: true\n    retry:\n      initialInterval: 3000\n      multiplier: 1.3\n      maxInterval: 10000\n      maxAttempts: 20\n    uri: http://localhost:8888\n    username: ${CONFIG_SERVER_USR}\n    password: ${CONFIG_SERVER_PWD}\n---\nspring.config.activate.on-profile: docker\nspring.cloud.config.uri: http://config-server:8888 \n```", "```java\nconfig-repo/\n├── application.yml\n├── auth-server.yml\n├── eureka-server.yml\n├── gateway.yml\n├── product-composite.yml\n├── product.yml\n├── recommendation.yml\n└── review.yml \n```", "```java\n    cd $BOOK_HOME/Chapter12\n    ./gradlew build && docker-compose build \n    ```", "```java\n    ./test-em-all.bash start \n    ```", "```java\ncurl https://dev-usr:dev-pwd@localhost:8443/config/product/docker -ks | jq . \n```", "```java\n{\n  \"name\": \"product\",\n  \"profiles\": [\n    \"docker\"\n  ],\n  ...\n  \"propertySources\": [\n    {\n      \"name\": \"...file [/config-repo/product.yml]...\",\n      \"source\": {\n        \"spring.config.activate.on-profile\": \"docker\",\n        \"server.port\": 8080,\n        ...\n      }\n    },\n    {\n      \"name\": \"...file [/config-repo/product.yml]...\",\n      \"source\": {\n        \"server.port\": 7001,\n        ...\n      }\n    },\n    {\n      \"name\": \"...file [/config-repo/application.yml]...\",\n      \"source\": {\n        \"spring.config.activate.on-profile\": \"docker\",\n        ...\n      }\n    },\n    {\n      \"name\": \"...file [/config-repo/application.yml]...\",\n      \"source\": {\n        ...\n        \"app.eureka-password\": \"p\",\n        \"spring.rabbitmq.password\": \"guest\"\n      }\n    }\n  ]\n} \n```", "```java\n    app:\n      eureka-password:\n    '{cipher}bf298f6d5f878b342f9e44bec08cb9ac00b4ce57e98316f030194a225fac89fb'\n    spring.rabbitmq:\n      password: '{cipher}17fcf0ae5b8c5cf87de6875b699be4a1746dd493a99d926c7a26a68c422117ef' \n    ```", "```java\n    curl -k https://dev-usr:dev-pwd@localhost:8443/config/encrypt --data-urlencode \"hello world\" \n    ```", "```java\n    curl -k https://dev-usr:dev-pwd@localhost:8443/config/decrypt -d d91001603dcdf3eb1392ccbd40ff201cdcf7b9af2fcaab3da39e37919033b206 \n    ```", "```java\nmy-secret: '{cipher}d91001603dcdf3eb1392ccbd40ff201cdcf7b9af2 fcaab3da39e37919033b206' \n```", "```java\n    docker-compose down \n    ```", "```java\n    curl https://dev-usr:dev-pwd@localhost:8443/config/application/default -ks | jq \n    ```"]