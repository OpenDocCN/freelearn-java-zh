["```java\n<server>\n    <featureManager>\n        <feature>microProfile-4.1</feature>\n    </featureManager>\n</server>\n```", "```java\n<server>\n    <variable name=\"microProfile.feature\" \n        value=\"microProfile-4.1\" />\n</server>\n```", "```java\n<server>\n    <featureManager>\n        <feature>${microProfile.feature}</feature>\n    </featureManager>\n</server>\n```", "```java\n<server>\n    <variable name=\"http.port\" defaultValue=\"9043\" />\n</server>\n```", "```java\n<server>\n    <webApplication location=\"myapp.war\" />\n</server>\n```", "```java\n<plugin>\n    <groupId>io.openliberty.tools</groupId>\n    <artifactId>liberty-maven-plugin</artifactId>\n    <version>[3.3.4,)</version>\n</plugin> \n```", "```java\nFROM open-liberty:full-java11-openj9\nADD src/main/config/liberty/server.xml /config\nADD target/myapp.war /config/dropins\n```", "```java\nFROM adoptopenjdk:11-openj9\nADD target/myapp.jar /myapp.jar\nCMD [\"java\", \"-jar\", \"/myapp.jar\"]\n```", "```java\nFROM open-liberty:full-java11-openj9\nADD target/OS-dependencies /config/library\nADD target/myapp.war /config/apps/myapp.war\n```", "```java\nFROM ubuntu:21.04 as BUILD\nRUN apt-get update\nRUN apt-get install -y unzip wget\nRUN wget https://example.com/my.zip -O my.zip\nRUN unzip my.zip /extract\nFROM ubuntu:21.04\nCOPY /extract /extract --from=BUILD\n```", "```java\nFROM ubuntu:21.04 \nRUN apt-get update && \\\n    apt-get install -y unzip wget && \\\n    wget https://example.com/my.zip -O my.zip && \\\n    unzip my.zip /extract && \\\n    rm my.zip && \\\n    apt-get uninstall -y unzip wget && \\\n    rm -rf /var/lib/apt/lists/*    \n```", "```java\nFROM maven as BUILD\nCOPY myBuild /build\nWORKDIR build\nRUN mvn package\nFROM open-liberty:full-java11-openj9\nCOPY /target/myapp.war /config/apps/ --from=BUILD\n```", "```java\nFROM ubuntu:21.04 as BUILD\nADD https://example.com/my.tar.gz /extract\n```", "```java\nFROM ubuntu:21.04 \nRUN apt-get update && \\\n    apt-get install -y unzip wget && \\\n    wget https://example.com/my.zip -O my.zip && \\\n    unzip my.zip /extract && \\\n    rm my.zip && \\\n    apt-get uninstall -y unzip wget && \\\n    rm -rf /var/lib/apt/lists/*    \n```", "```java\nFROM open-liberty:full-java11-openj9\nADD --chown=1001:0 src/main/config/liberty/server.xml/config\nADD --chown=1001:0 target/myapp.war /config/dropins\n```", "```java\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: demo\n  name: demo\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: demo\n  template:\n    metadata:\n      labels:\n        app: demo\n    spec:\n      containers:\n      - image: openliberty/open-liberty:full-java11-openj9-\n  ubi\n        name: open-liberty\n```", "```java\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: demo\n  name: demo\nspec:\n  ports:\n  - name: 9080-9080\n    port: 9080\n    protocol: TCP\n    targetPort: 9080\n  selector:\n    app: demo\n  type: ClusterIP\n```", "```java\nkind: Route\napiVersion: route.openshift.io/v1\nmetadata:\n  name: demo\n  labels:\n    app: demo\nspec:\n  to:\n    kind: Service\n    name: demo\n    weight: 100\n  port:\n    targetPort: 9080-9080\n```", "```java\napiVersion: openliberty.io/v1beta1\nkind: OpenLibertyApplication\nmetadata:\n  name: my-liberty-app\nspec:\n  applicationImage: openliberty/open-liberty:full-java11-\n    openj9-ubi\n  service:\n    type: ClusterIP\n    port: 9080\n  expose: true\n```", "```java\n<server>\n    <featureManager>\n        <feature>mpHealth-3.0</feature>\n    </featureManager>\n</server>\n```", "```java\napiVersion: openliberty.io/v1beta1\nkind: OpenLibertyApplication\nmetadata:\n  name: my-liberty-app\nspec:\n  expose: true\n  applicationImage: openliberty/open-liberty:full-java11-    openj9-ubi\n  readinessProbe:\n    httpGet:\n      path: /health/ready\n      port: 9080\n    initialDelaySeconds: 30\n  livenessProbe:\n    httpGet:\n      path: /health/live\n      port: 9080\n    initialDelaySeconds: 90\n  replicas: 1\n```", "```java\n<server> \n  <featureManager> \n    <feature>mpConfig-2.0</feature> \n  </featureManager> \n</server>\n```", "```java\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: demo\ndata:\n  example.property.1: hello\n  example.property.2: world\n```", "```java\napiVersion: openliberty.io/v1beta1\nkind: OpenLibertyApplication\nmetadata:\n  name: demo-app\nspec:\n  expose: true\n  applicationImage: openliberty/open-liberty:full-java11-    openj9-ubi\n  env:\n    - name: PROP_ONE\n      valueFrom:\n        configMapKeyRef:\n          key: example.property.1\n          name: demo\n  replicas: 1\n```", "```java\napiVersion: openliberty.io/v1beta1\nkind: OpenLibertyApplication\nmetadata:\n  name: demo-app\nspec:\n  expose: true\n  applicationImage: openliberty/open-liberty:full-java11-    openj9-ubi\n  envFrom:\n    - configMapRef:\n        name: demo\n  replicas: 1\n```", "```java\napiVersion: openliberty.io/v1beta1\nkind: OpenLibertyApplication\nmetadata:\n  name: demo-app\nspec:\n  expose: true\n  applicationImage: openliberty/open-liberty:full-java11-    openj9-ubi\n  env:\n    - name: mp.config.profile\n      value: dev\n  envFrom:\n    - configMapRef:\n        name: dev\n      prefix: '_dev.'\n    - configMapRef:\n        name: test\n      prefix: '_test.'\n    - configMapRef:\n        name: prod\n      prefix: '_test.'\n  replicas: 1\n```", "```java\napiVersion: openliberty.io/v1beta1\nkind: OpenLibertyApplication\nmetadata:\n  name: demo-app\nspec:\n  expose: true\n  applicationImage: openliberty/open-liberty:full-java11-    openj9-ubi\n  env:\n    - name: PROP_ONE\n      valueFrom:\n        secretKeyRef:\n          key: my_secret\n          name: secret.config\n  replicas: 1\n```", "```java\napiVersion: openliberty.io/v1beta1\nkind: OpenLibertyApplication\nmetadata:\n  name: demo-app\nspec:\n  expose: true\n  applicationImage: openliberty/open-liberty:full-java11-    openj9-ubi\n  envFrom:\n    - secretRef:\n        name: secret.config\n  replicas: 1\n```", "```java\napiVersion: openliberty.io/v1beta1\nkind: OpenLibertyApplication\nmetadata:\n  name: demo-app\nspec:\n  expose: true\n  applicationImage: openliberty/open-liberty:full-java11-    openj9-ubi\n  volumeMounts:\n    - mountPath: /my/secrets\n      name: secret\n  volumes:\n    - secret:\n        secretName: secret.config\n      name: secret\n  replicas: 1\n```", "```java\npublic class FileSystemConfigSource implements ConfigSource {\n    private File dir = new File(\"/my/secrets\");\n    public Set<String> getPropertyNames() {\n        return Arrays.asList(dir.listFiles())\n                     .stream()\n                     .map(f -> f.getName())\n                     .collect(Collectors.toSet());\n    }\n    public String getValue(String s) {\n        File f = new File(dir, s);\n        try {\n            if (f.exists())\n                Path p = f.toPath();\n                byte[] secret = Files.readAllBytes(f);\n                return new String(secret,                                   StandardCharsets.UTF_8);\n        } catch (IOException ioe) {\n        }\n        return null;\n    }\n    public String getName() {\n        return \"kube.secret\";\n    }\n    public int getOrdinal() {\n        return 5;\n    }\n}\n```", "```java\napiVersion: openliberty.io/v1beta1\nkind: OpenLibertyApplication\nmetadata:\n  name: demo-app\nspec:\n  expose: true\n  applicationImage: openliberty/open-liberty:full-java11-    openj9-ubi\n  env:\n    - name: MP_Fault_Tolerance_NonFallback_Enabled\n      value: 'false'\n  replicas: 1 \n```"]