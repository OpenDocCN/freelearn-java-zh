["```java\npackage com.ensode.jakartaeebook.websocketchat.serverendpoint;\n//imports omitted\n@ServerEndpoint(\"/websocketchat\")\npublic class WebSocketChatEndpoint {\n  private static final Logger LOG =\n    Logger.getLogger(WebSocketChatEndpoint.class.getName());\n  @OnOpen\n  public void connectionOpened() {\n    LOG.log(Level.INFO, \"connection opened\");\n  }\n  @OnMessage\n  public synchronized void processMessage(Session session,\n    String message) {\n    LOG.log(Level.INFO, \"received message: {0}\", message);\n    session.getOpenSessions().forEach(sess -> {\n      if (sess.isOpen()) {\n        try {\n          sess.getBasicRemote().sendText(message);\n        } catch (IOException ex) {\n          LOG.log(Level.SEVERE, ex.getMessage(), ex);\n        }\n      }\n    });\n  }\n  @OnClose\n  public void connectionClosed() {\n    LOG.log(Level.INFO, \"connection closed\");\n  }\n}\n```", "```java\n<script type=\"text/javascript\">\n  var websocket;\n  function init() {\n    websocket = new WebSocket(\n     'ws://localhost:8080/websocketchat/websocketchat');\n     websocket.onopen = function (event) {\n      websocketOpen(event)\n    };\n    websocket.onmessage = function (event) {\n      websocketMessage(event)\n    };\n    websocket.onerror = function (event) {\n      websocketError(event)\n    };\n   }\n   function websocketOpen(event) {\n    console.log(\"webSocketOpen invoked\");\n  }\n  function websocketMessage(event) {\n    console.log(\"websocketMessage invoked\");\n    document.getElementById('chatwindow').value += '\\r' +\n      event.data;\n  }\n  function websocketError(event) {\n    console.log(\"websocketError invoked\");\n  }\n  function sendMessage() {\n    var userName = document.getElementById('userName').value;\n    var msg = document.getElementById('chatinput').value;\n     websocket.send(userName + \": \" + msg);\n  }\n  function closeConnection() {\n    websocket.close();\n  }\n  window.addEventListener(\"load\", init, false);\n</script>\n```", "```java\npackage com.ensode.websocketjavaclient;\n//imports omitted\n@ClientEndpoint\npublic class WebSocketClient {\n  private static final Logger LOG =\n    Logger.getLogger(WebSocketClient.class.getName());\n  private String userName;\n  private Session session;\n  private final WebSocketJavaClientFrame webSocketJavaClientFrame;\n  public WebSocketClient(WebSocketJavaClientFrame\n    webSocketJavaClientFrame) {\n    this.webSocketJavaClientFrame = webSocketJavaClientFrame;\n    try {\n      WebSocketContainer webSocketContainer =\n     ContainerProvider.getWebSocketContainer();\n      webSocketContainer.connectToServer(this, new URI(\n     \"ws://localhost:8080/websocketchat/websocketchat\"));\n    } catch (DeploymentException | IOException | URISyntaxException ex) {\n      ex.printStackTrace();\n    }\n  }\n  @OnOpen\n  public void onOpen(Session session) {\n this.session = session;\n  }\n  @OnClose\n  public void onClose(CloseReason closeReason) {\n    LOG.log(Level.INFO, String.format(\n      \"Connection closed, reason: %s\",\n      closeReason.getReasonPhrase()));\n  }\n  @OnError\npublic void onError(Throwable throwable) {\n    throwable.printStackTrace();\n  }\n  @OnMessage\n  public void onMessage(String message, Session session) {\n    webSocketJavaClientFrame.getChatWindowTextArea().setText(\n            webSocketJavaClientFrame.getChatWindowTextArea().getText()\n            + \"\"\n            + \"\\n\" + message);\n  }\n  public void sendMessage(String message) {\n    try {\n      session.getBasicRemote().sendText(userName + \": \" + message);\n    } catch (IOException ex) {\n      ex.printStackTrace();\n    }\n  }\n  //setters and getters omitted\n}\n```"]