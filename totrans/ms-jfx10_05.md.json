["```java\n<ol id=\"selectable\" class=\"ui-selectable\">\n    <li class=\"ui-state-default ui-selectee\" name=\"one\">1</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"two\">2</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"three\">3</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"four\">4</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"five\">5</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"six\">6</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"seven\">7</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"eight\">8</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"nine\">9</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"ten\">10</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"eleven\">11</li>\n    <li class=\"ui-state-default ui-selectee\" name=\"twelve\">12</li>\n</ol>\n```", "```java\n@Test\npublic void shouldPerformCompositeAction() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Selectable.html\");\n\n    WebElement one = driver.findElement(By.name(\"one\"));\n    WebElement three = driver.findElement(By.name(\"three\"));\n    WebElement five = driver.findElement(By.name(\"five\"));\n\n    // Add all the actions into the Actions builder.\n Actions actions = new Actions(driver);\n    actions.keyDown(Keys.CONTROL)\n .click(one)\n .click(three)\n .click(five)\n .keyUp(Keys.CONTROL);\n\n    // Generate the composite action.\n    Action compositeAction = actions.build();\n\n    // Perform the composite action.\n compositeAction.perform();\n}\n```", "```java\n@Test\npublic void shouldPerformAction() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Selectable.html\");\n\n    WebElement one = driver.findElement(By.name(\"one\"));\n    WebElement three = driver.findElement(By.name(\"three\"));\n    WebElement five = driver.findElement(By.name(\"five\"));\n\n    // Add all the actions into the Actions builder.\n    Actions actions = new Actions(driver);\n    actions.keyDown(Keys.CONTROL)\n .click(one)\n .click(three)\n .click(five)\n .keyUp(Keys.CONTROL);\n\n    // Perform the action\n    actions.perform();\n}\n```", "```java\n public Actions moveByOffset(int xOffSet, int yOffSet)\n```", "```java\n@Test\npublic void shouldMoveByOffSet() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Selectable.html\");\n\n    WebElement three = driver.findElement(By.name(\"three\"));\n    System.out.println(\"X coordinate: \" + three.getLocation().getX()\n            + \", Y coordinate: \" + three.getLocation().getY());\n Actions actions = new Actions(driver);\n    actions.moveByOffset(three.getLocation().getX() + 1, three.\n getLocation().getY() + 1);\n    actions.perform();\n}\n```", "```java\n@Test\npublic void shouldMoveByOffSetAndClick() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Selectable.html\");\n\n    WebElement seven = driver.findElement(By.name(\"seven\"));\n    System.out.println(\"X coordinate: \" + seven.getLocation().getX() +\n            \", Y coordinate: \" + seven.getLocation().getY());\n Actions actions = new Actions(driver);\n    actions.moveByOffset(seven.getLocation().getX() + 1, seven.\n getLocation().getY() + 1).click();\n    actions.perform();\n}\n```", "```java\n#selectable li {\n    float: left;\n    font-size: 4em;\n    height: 80px;\n    text-align: center;\n    width: 100px;\n}\n.ui-state-default, .ui-widget-content .ui-state-default, .ui-widgetheader .ui-state-default {\n    background: url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\") repeat-x\n    scroll 50% 50% #E6E6E6;\n border: 1px solid #D3D3D3;\n    color: #555555;\n    font-weight: normal;\n}\n```", "```java\n@Test\npublic void shouldMoveByOffSetAndClickMultiple() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Selectable.html\");\n\n    WebElement one = driver.findElement(By.name(\"one\"));\n    WebElement eleven = driver.findElement(By.name(\"eleven\"));\n    WebElement five = driver.findElement(By.name(\"five\"));\n    int border = 1;\n    int tileWidth = 100;\n    int tileHeight = 80;\n    Actions actions = new Actions(driver);\n\n    //Click on One\n    actions.moveByOffset(one.getLocation().getX() + border, one.getLocation().getY() + border).click();\n    actions.build().perform();\n\n    // Click on Eleven\n    actions.moveByOffset(2 * tileWidth + 4 * border, 2 * tileHeight + 4 * border).click();\n    actions.build().perform();\n\n    //Click on Five\n    actions.moveByOffset(-2 * tileWidth - 4 * border, -tileHeight - 2 * border).\n            click();\n    actions.build().perform();\n}\n```", "```java\npublic Actions click(WebElement onElement)\n```", "```java\n@Test\npublic void shouldClickOnElement() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Selectable.html\");\n\n    WebElement one = driver.findElement(By.name(\"one\"));\n    WebElement eleven = driver.findElement(By.name(\"eleven\"));\n    WebElement five = driver.findElement(By.name(\"five\"));\n    Actions actions = new Actions(driver);\n\n //Click on One\n    actions.click(one);\n    actions.build().perform();\n\n    // Click on Eleven\n    actions.click(eleven);\n    actions.build().perform();\n\n    //Click on Five\n    actions.click(five);\n    actions.build().perform();\n}\n```", "```java\n    @Test\n    public void shouldClickOnElement() {\n\n        driver.get(\"http://guidebook.seleniumacademy.com/Selectable.html\");\n\n        WebElement one = driver.findElement(By.name(\"one\"));\n        WebElement eleven = driver.findElement(By.name(\"eleven\"));\n        WebElement five = driver.findElement(By.name(\"five\"));\n        Actions actions = new Actions(driver);\n\n actions.click(one)\n .click(eleven)\n .click(five)\n .build().perform();\n    }\n```", "```java\n@Test\npublic void shouldClickAndHold() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Sortable.html\");\n\n    Actions actions = new Actions(driver);\n\n    //Move tile3 to the position of tile2\n    actions.moveByOffset(200, 20)\n .clickAndHold()\n .moveByOffset(120, 0)\n .perform();\n}\n```", "```java\nactions.moveByOffset(200, 20)\n .clickAndHold()\n .moveByOffset(120, 0)\n .perform();\n```", "```java\npublic Actions clickAndHold(WebElement onElement)\n```", "```java\n@Test\npublic void shouldClickAndHoldElement() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Sortable.html\");\n\n    Actions actions = new Actions(driver);\n    WebElement three = driver.findElement(By.name(\"three\"));\n\n    //Move tile3 to the position of tile2\n    actions.clickAndHold(three)\n .moveByOffset(120, 0)\n .perform();\n}\n```", "```java\n@Test\npublic void shouldClickAndHoldAndRelease() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Sortable.html\");\n\n    WebElement three = driver.findElement(By.name(\"three\"));\n    Actions actions = new Actions(driver);\n\n    //Move tile3 to the position of tile2\n    actions.clickAndHold(three)\n .moveByOffset(120, 0)\n .release()\n .perform();\n}\n```", "```java\npublic Actions release(WebElement onElement)\n```", "```java\n@Test\npublic void shouldClickAndHoldAndReleaseOnElement() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Sortable.html\");\n\n    WebElement three = driver.findElement(By.name(\"three\"));\n    WebElement two = driver.findElement(By.name(\"two\"));\n    Actions actions = new Actions(driver);\n\n    //Move tile3 to the position of tile2\n    actions.clickAndHold(three)\n .release(two)\n .perform();\n}\n```", "```java\npublic Actions moveToElement(WebElement toElement)\n```", "```java\n@Test\npublic void shouldClickAndHold() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Sortable.html\");\n\n    Actions actions = new Actions(driver);\n\n    //Move tile3 to the position of tile2\n actions.moveByOffset(200, 20)\n .clickAndHold()\n .moveByOffset(120, 0)\n .perform();\n}\n```", "```java\n@Test\npublic void shouldClickAndHoldAndMove() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/Sortable.html\");\n\n    WebElement three = driver.findElement(By.name(\"three\"));\n    Actions actions = new Actions(driver);\n\n    //Move tile3 to the position of tile2\n    actions.moveToElement(three)\n .clickAndHold()\n .moveByOffset(120, 0)\n .perform();\n}\n```", "```java\npublic Actions dragAndDropBy(WebElement source, int xOffset,int yOffset)\n```", "```java\n@Test\npublic void shouldDrag() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/DragMe.html\");\n\n    WebElement dragMe = driver.findElement(By.id(\"draggable\"));\n    Actions actions = new Actions(driver);\n    actions.dragAndDropBy(dragMe, 300, 200).perform();\n}\n```", "```java\npublic Actions dragAndDrop(WebElement source, WebElement target)\n```", "```java\n@Test\npublic void shouldDragAndDrop() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/DragAndDrop.html\");\n\n    WebElement src = driver.findElement(By.id(\"draggable\"));\n    WebElement trgt = driver.findElement(By.id(\"droppable\"));\n    Actions actions = new Actions(driver);\n    actions.dragAndDrop(src, trgt).perform();\n}\n```", "```java\npublic Actions doubleClick()\n```", "```java\n@Test\npublic void shouldDoubleClick() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/DoubleClick.html\");\n\n    WebElement dblClick= driver.findElement(By.name(\"dblClick\"));\n    Actions actions = new Actions(driver);\n    actions.moveToElement(dblClick).doubleClick().perform();\n}\n```", "```java\npublic Actions doubleClick(WebElement onElement)\n```", "```java\n@Test\npublic void shouldDoubleClickElement() {\ndriver.get(\"http://guidebook.seleniumacademy.com/DoubleClick.html\");\n\n    WebElement dblClick = driver.findElement(By.name(\"dblClick\"));\n    Actions actions = new Actions(driver);\n    actions.doubleClick(dblClick).perform();\n}\n```", "```java\npublic Actions contextClick(WebElement onElement)\n```", "```java\n@Test\npublic void shouldContextClick() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/ContextClick.html\");\n\n    WebElement contextMenu = driver.findElement(By.id(\"div-context\"));\n    Actions actions = new Actions(driver);\n    actions.contextClick(contextMenu)\n .click(driver.findElement(By.name(\"Item 4\")))\n .perform();\n}\n```", "```java\npublic Actions contextClick()\n```", "```java\n@Test\npublic void shouldContextClickAtCurrentLocation() {\n\n    driver.get(\"http://guidebook.seleniumacademy.com/ContextClick.html\");\n\n    WebElement contextMenu = driver.findElement(By.id(\"div-context\"));\n    Actions actions = new Actions(driver);\n actions.moveToElement(contextMenu)\n .contextClick()\n .click(driver.findElement(By.name(\"Item 4\")))\n .perform();\n}\n```", "```java\npublic Actions keyDown(Keys theKey) throws IllegalArgumentException\n```", "```java\npublic Actions keyUp(Keys theKey)\n```", "```java\npublic Actions sendKeys(CharSequence keysToSend)\n```"]