["```java\n    <dependency>\n      <groupId>org.springframework.mobile</groupId>\n      <artifactId>spring-mobile-device</artifactId>\n      <version>1.1.3.RELEASE</version>\n    </dependency>\n    ```", "```java\n    @Configuration\n    @EnableWebMvc\n    @ComponentScan(basePackages = {\"com.spring_cookbook.controllers\"})\n    public class AppConfig extends WebMvcConfigurerAdapter {\n    ```", "```java\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n    }\n    ```", "```java\n    @Bean\n    public DeviceResolverHandlerInterceptor deviceResolverHandlerInterceptor() {\n        return new DeviceResolverHandlerInterceptor();\n    }\n    ```", "```java\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n    registry.addInterceptor(deviceResolverHandlerInterceptor()) ;\n    }\n    ```", "```java\n    @Controller\n    public class UserController {  \n      @RequestMapping(\"/user_list\")\n      public void userList(HttpServletRequest request) {\n    ```", "```java\n    Device currentDevice = DeviceUtils.getCurrentDevice(request);\n    ```", "```java\n    if(currentDevice == null) {\n      // detection failed\n    }\n    if(currentDevice.isMobile()) {\n      // mobile\n    }\n    else if(currentDevice.isTablet()) {\n      // tablet  \n    }\n    else if(currentDevice.isNormal()) {\n      // desktop computer\n    }\n    ```", "```java\n    @Bean\n    public DeviceResolverHandlerInterceptor deviceResolverHandlerInterceptor() {\n        return new DeviceResolverHandlerInterceptor();\n    }\n\n    @Bean\n    public SitePreferenceHandlerInterceptor sitePreferenceHandlerInterceptor() {\n        return new SitePreferenceHandlerInterceptor();\n    }\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(deviceResolverHandlerInterceptor()) ;\n        registry.addInterceptor(sitePreferenceHandlerInterceptor()) ;\n    }\n    ```", "```java\n    @Controller\n    public class UserController {  \n      @RequestMapping(\"/user_list\")\n      public void userList(HttpServletRequest request) {\n    ```", "```java\n    SitePreference sitePreference = SitePreferenceUtils.getCurrentSitePreference(request);\n    ```", "```java\n    if(sitePreference == null || sitePreference.isNormal()) {\n      // normal\n    }\n    if(sitePreference.isMobile()) {\n      // mobile\n    }\n    ```", "```java\n    Site:\n    <a href=\"?site_preference=normal\">Normal</a>\n    | \n    <a href=\"?site_preference=mobile\">Mobile</a>\n    ```", "```java\n@Bean\npublic LiteDeviceDelegatingViewResolver liteDeviceAwareViewResolver() {\n    InternalResourceViewResolver delegate = new InternalResourceViewResolver();\n    delegate.setPrefix(\"/WEB-INF/jsp/\");\n    delegate.setSuffix(\".jsp\");\n    LiteDeviceDelegatingViewResolver resolver = new LiteDeviceDelegatingViewResolver(delegate);\n    resolver.setMobilePrefix(\"mobile/\");\n    resolver.setEnableFallback(true);\n    return resolver;\n}\n```", "```java\nresolver.setEnableFallback(true);\n```", "```java\nresolver.setTabletPrefix(\"tablet/\");\n```", "```java\n    @Bean\n    public SiteSwitcherHandlerInterceptor siteSwitcherHandlerInterceptor() {\n        return SiteSwitcherHandlerInterceptor.dotMobi(\"mywebsite.com\");\n    }\n    ```", "```java\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n      ...\n    registry.addInterceptor(siteSwitcherHandlerInterceptor());\n    }\n    ```", "```java\n    @Bean\n    public SiteSwitcherHandlerInterceptor siteSwitcherHandlerInterceptor() {\n        return SiteSwitcherHandlerInterceptor.mDot(\"mywebsite.com\");\n    }\n    ```", "```java\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n      ...\n    registry.addInterceptor(siteSwitcherHandlerInterceptor());\n    }\n    ```", "```java\n    @Bean\n    public SiteSwitcherHandlerInterceptor siteSwitcherHandlerInterceptor() {\n        return SiteSwitcherHandlerInterceptor.standard(\"mywebsite.com\", \"mymobilewebsite.com\", \".mywebsite.com\");\n    }\n    ```", "```java\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n      ...\n    registry.addInterceptor(siteSwitcherHandlerInterceptor());\n    }\n    ```", "```java\n    @Bean\n    public SiteSwitcherHandlerInterceptor siteSwitcherHandlerInterceptor() {\n        return SiteSwitcherHandlerInterceptor.urlPath(\"/mobile\", \"spring_webapp\");\n    }\n    ```", "```java\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n      ...\n    registry.addInterceptor(siteSwitcherHandlerInterceptor());\n    }\n    ```", "```java\n    @RequestMapping(\"/mobile/user_list\")\n    public String userListMobile(HttpServletRequest request) {\n      ...\n      return \"user_list\";\n    }\n    ```"]