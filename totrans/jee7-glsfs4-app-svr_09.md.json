["```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\"   xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n  <context-param>\n    <param-name>javax.faces.PROJECT_STAGE</param-name>\n    <param-value>Development</param-value>\n  </context-param>\n  <servlet>\n    <servlet-name>Faces Servlet</servlet-name>\n    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n    <load-on-startup>1</load-on-startup>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>Faces Servlet</servlet-name>\n    <url-pattern>*.jsf</url-pattern>\n  </servlet-mapping>\n  <welcome-file-list>\n    <welcome-file>index.jsf</welcome-file>\n  </welcome-file-list>\n <security-constraint>\n <web-resource-collection>\n <web-resource-name>Admin Pages</web-resource-name>\n <url-pattern>/admin/*</url-pattern>\n </web-resource-collection>\n <auth-constraint>\n <role-name>admin</role-name>\n </auth-constraint>\n </security-constraint>\n <security-constraint>\n <web-resource-collection>\n <web-resource-name>AllPages</web-resource-name>\n <url-pattern>/*</url-pattern>\n </web-resource-collection>\n <auth-constraint>\n <role-name>user</role-name>\n </auth-constraint>\n </security-constraint>\n <login-config>\n <auth-method>BASIC</auth-method>\n <realm-name>file</realm-name>\n </login-config>\n</web-app>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE glassfish-web-app PUBLIC \"-//GlassFish.org//DTD GlassFish Application Server 3.1 Servlet 3.0//EN\" \"http://glassfish.org/dtds/glassfish-web-app_3_0-1.dtd\">\n<glassfish-web-app error-url=\"\">\n  <context-root>/filerealmauth</context-root>\n <security-role-mapping>\n <role-name>admin</role-name>\n <group-name>appadmin</group-name>\n </security-role-mapping>\n <security-role-mapping>\n <role-name>user</role-name>\n <group-name>appuser</group-name>\n </security-role-mapping>\n  <class-loader delegate=\"true\"/>    \n</glassfish-web-app>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app   xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n  version=\"3.0\">\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>Admin Pages</web-resource-name>\n      <url-pattern>/admin/*</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>admin</role-name>\n    </auth-constraint>\n <user-data-constraint>\n <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n </user-data-constraint>\n    </security-constraint>\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>AllPages</web-resource-name>\n      <url-pattern>/*</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>user</role-name>\n    </auth-constraint>\n <user-data-constraint>\n <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n </user-data-constraint>\n  </security-constraint>\n  <login-config>\n    <auth-method>BASIC</auth-method>\n    <realm-name>file</realm-name>\n  </login-config>\n</web-app>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\"   xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n  <context-param>\n   <param-name>javax.faces.PROJECT_STAGE</param-name>\n    <param-value>Development</param-value>\n  </context-param>\n  <servlet>\n    <servlet-name>Faces Servlet</servlet-name>\n    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n    <load-on-startup>1</load-on-startup>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>Faces Servlet</servlet-name>\n    <url-pattern>*.jsf</url-pattern>\n  </servlet-mapping>\n  <welcome-file-list>\n    <welcome-file>index.jsf</welcome-file>\n  </welcome-file-list>\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>Admin Pages</web-resource-name>\n      <url-pattern>/admin/*</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>admin</role-name>\n    </auth-constraint>\n    <user-data-constraint>\n      <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n    </user-data-constraint>\n  </security-constraint>\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>AllPages</web-resource-name>\n      <url-pattern>/*</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>user</role-name>\n    </auth-constraint>\n    <user-data-constraint>\n      <description/>\n      <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n    </user-data-constraint>\n  </security-constraint>\n  <login-config>\n <auth-method>FORM</auth-method>\n    <realm-name>file</realm-name>\n <form-login-config>\n <form-login-page>/login.jsf</form-login-page>\n <form-error-page>/loginerror.jsf</form-error-page>\n </form-login-config>\n  </login-config>\n</web-app>\n```", "```java\n<?xml version='1.0' encoding='UTF-8' ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html  >\n  <h:head>\n    <title>Login</title>\n  </h:head>\n  <h:body>\n    <p>Please enter your username and password to access the application\n    </p>\n <form method=\"POST\" action=\"j_security_check\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td align=\"right\">Username:&nbsp;</td>\n          <td>\n <input type=\"text\" name=\"j_username\"/>\n          </td>\n        </tr>\n        <tr>\n          <td align=\"right\">Password:&nbsp;</td>\n          <td>\n <input type=\"password\" name=\"j_password\"/>\n          </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>\n            <input type=\"submit\" value=\"Login\"/>\n          </td>\n        </tr>\n      </table>\n    </form>\n  </h:body>\n</html>\n```", "```java\npackage net.ensode.glassfishbook;\n\nimport javax.enterprise.context.RequestScoped;\nimport javax.faces.context.ExternalContext;\nimport javax.faces.context.FacesContext;\nimport javax.inject.Named;\nimport javax.servlet.http.HttpSession;\n\n@Named\n@RequestScoped\npublic class LogoutManager {\n\n  public String logout() {\n    FacesContext facesContext = FacesContext.getCurrentInstance();\n    ExternalContext externalContext = facesContext.getExternalContext();\n    HttpSession session = (HttpSession) externalContext.getSession(true);\n\n session.invalidate();\n\n    return \"index?faces-redirect=true\";\n  }\n}\n```", "```java\nkeytool -genkey -v -alias selfsignedkey -keyalg RSA -storetype PKCS12 -keystore client_keystore.p12 -storepass wonttellyou -keypass wonttellyou\n\n```", "```java\nWhat is your first and last name?\n\n [Unknown]:  David Heffelfinger\n\nWhat is the name of your organizational unit?\n\n [Unknown]:  Book Writing Division\n\nWhat is the name of your organization?\n\n [Unknown]:  Ensode Technology, LLC\n\nWhat is the name of your City or Locality?\n\n [Unknown]:  Fairfax\n\nWhat is the name of your State or Province?\n\n [Unknown]:  Virginia\n\nWhat is the two-letter country code for this unit?\n\n [Unknown]:  US\n\nIs CN=David Heffelfinger, OU=Book Writing Division, O=\"Ensode Technology, LLC\", L=Fairfax, ST=Virginia, C=US correct?\n\n [no]:  y\n\n```", "```java\nkeytool -export -alias selfsignedkey -keystore client_keystore.p12 -storetype PKCS12 -storepass wonttellyou -rfc -file selfsigned.cer\n\n```", "```java\nkeytool -import -file selfsigned.cer -keystore [glassfish installation directory]/glassfish/domains/domain1/config/cacerts.jks -keypass changeit -storepass changeit\n\n```", "```java\nOwner: CN=David Heffelfinger, OU=Book Writing Division, O=\"Ensode Technology, LLC\", L=Fairfax, ST=Virginia, C=US\n\nIssuer: CN=David Heffelfinger, OU=Book Writing Division, O=\"Ensode Technology, LLC\", L=Fairfax, ST=Virginia, C=US\n\nSerial number: 7a3bca0\n\nValid from: Sun Oct 27 17:00:18 EDT 2013 until: Sat Jan 25 16:00:18 EST 2014\n\nCertificate fingerprints:\n\n MD5:  46:EA:41:ED:12:8A:EC:CE:8C:BE:F2:49:D5:71:00:ED\n\n SHA1: 32:C2:D4:20:87:22:95:25:5D:B0:AC:35:43:0D:60:35:94:27:44:58\n\n SHA256: 8C:2E:56:F4:98:45:AC:46:FD:20:27:38:D2:7D:BF:D8:2D:56:D3:91:B7:78:AA:ED:FA:93:30:27:77:7F:F9:03\n\n Signature algorithm name: SHA256withRSA\n\n Version: 3\n\nExtensions: \n\n#1: ObjectId: 2.5.29.14 Criticality=false\n\nSubjectKeyIdentifier [\n\nKeyIdentifier [\n\n0000: E8 75 1D 12 2F 18 D0 4B   E5 84 C4 79 B6 C0 98 80  .u../..K...y....\n\n0010: 33 84 E7 C0                                        3...\n\n]\n\n]\n\nTrust this certificate? [no]:  y\n\nCertificate was added to keystore\n\n```", "```java\n[glassfish installation directory]/glassfish/bin/asadmin change-master-password --savemasterpassword=true\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app   xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\">\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>AllPages</web-resource-name>\n      <url-pattern>/*</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>users</role-name>\n    </auth-constraint>\n    <user-data-constraint>\n      <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n    </user-data-constraint>\n  </security-constraint>\n <login-config>\n <auth-method>CLIENT-CERT</auth-method>\n <realm-name>certificate</realm-name>\n </login-config>\n</web-app>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE glassfish-web-app PUBLIC \"-//GlassFish.org//DTD GlassFish Application Server 3.1 Servlet 3.0//EN\" \"http://glassfish.org/dtds/glassfish-web-app_3_0-1.dtd\">\n<glassfish-web-app error-url=\"\">\n  <context-root>/certificaterealm</context-root>\n <security-role-mapping>\n <role-name>user</role-name>\n <principal-name>CN=David Heffelfinger, OU=Book Writing Division, O=\"Ensode Technology, LLC\", L=Fairfax, ST=Virginia, C=US</principal-name>\n </security-role-mapping>\n <class-loader delegate=\"true\"/>\n</glassfish-web-app>\n```", "```java\nkeytool -printcert -file selfsigned.cer\nOwner: CN=David Heffelfinger, OU=Book Writing Division, O=\"Ensode Technology, LLC\", L=Fairfax, ST=Virginia, C=US\n\nIssuer: CN=David Heffelfinger, OU=Book Writing Division, O=\"Ensode Technology, LLC\", L=Fairfax, ST=Virginia, C=US\n\nSerial number: 7a3bca0\n\nValid from: Sun Oct 27 17:00:18 EDT 2013 until: Sat Jan 25 16:00:18 EST 2014\n\nCertificate fingerprints:\n\n MD5:  46:EA:41:ED:12:8A:EC:CE:8C:BE:F2:49:D5:71:00:ED\n\n SHA1: 32:C2:D4:20:87:22:95:25:5D:B0:AC:35:43:0D:60:35:94:27:44:58\n\n SHA256: 8C:2E:56:F4:98:45:AC:46:FD:20:27:38:D2:7D:BF:D8:2D:56:D3:91:B7:78:AA:ED:FA:93:30:27:77:7F:F9:03\n\n Signature algorithm name: SHA256withRSA\n\n Version: 3\n\nExtensions: \n\n#1: ObjectId: 2.5.29.14 Criticality=false\n\nSubjectKeyIdentifier [\n\nKeyIdentifier [\n\n0000: E8 75 1D 12 2F 18 D0 4B   E5 84 C4 79 B6 C0 98 80  .u../..K...y....\n\n0010: 33 84 E7 C0                                        3...\n\n]\n\n]\n\n```", "```java\nasadmin create-auth-realm --classname com.sun.enterprise.security.auth.realm.file.FileRealm --property file=/home/heffel/additionalFileRealmKeyFile:jaas-context=fileRealm newFileRealm\n\n```", "```java\nasadmin create-auth-realm --classname com.sun.enterprise.security.auth.realm.certificate.CertificateRealm newCertificateRealm\n\n```", "```java\nasadmin create-auth-realm --classname com.sun.enterprise.security.auth.realm.ldap.LDAPRealm --property \"jaas-context=ldapRealm:directory=ldap\\://127.0.0.1\\:1389:base-dn=dc\\=ensode,dc\\=com\" newLdapRealm\n\n```", "```java\nasadmin create-auth-realm --classname com.sun.enterprise.security.auth.realm.solaris.SolarisRealm --property jaas-context=solarisRealm newSolarisRealm\n\n```", "```java\npackage net.ensode.glassfishbook;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n\npublic class EncryptPassword {\n\n  public static String encryptPassword(String password)throws NoSuchAlgorithmException {\n MessageDigest messageDigest = MessageDigest.getInstance(\"MD5\");\n    byte[] bs;\n\n    messageDigest.reset();\n bs = messageDigest.digest(password.getBytes());\n\n    StringBuilder stringBuilder = new StringBuilder();\n\n    //hex encode the digest\n for (int i = 0; i < bs.length; i++) {\n String hexVal = Integer.toHexString(0xFF & bs[i]);\n if (hexVal.length() == 1) {\n stringBuilder.append(\"0\");\n }\n stringBuilder.append(hexVal);\n }\n\n  return stringBuilder.toString();\n  }\n\n  public static void main(String[] args) {\n    String encryptedPassword = null;\n\n    try {\n\n      if (args.length == 0) {\n        System.err.println(\"Usage: java \"+ \"net.ensode.glassfishbook.EncryptPassword \"+ \"cleartext\");\n      } else {\n        encryptedPassword = encryptPassword(args[0]);\n        System.out.println(encryptedPassword);\n      }\n    } catch (NoSuchAlgorithmException e) {\n       e.printStackTrace();\n    }\n  }\n}\n```", "```java\nasadmin create-auth-realm --classname com.sun.enterprise.security.ee.auth.realm.jdbc.JDBCRealm\n--property jaas-context=jdbcRealm:datasource-jndi=jdbc/__UserAuthPool:user-table=V_USER_ROLE:user-name-column=USERNAME:password-column=PASSWORD:group-table=V_USER_ROLE:group-name-column=GROUP_NAME newJdbcRealm\n\n```", "```java\npackage net.ensode.glassfishbook;\n\nimport java.util.Enumeration;\nimport java.util.Vector;\n\nimport com.sun.enterprise.security.auth.realm.IASRealm;\nimport com.sun.enterprise.security.auth.realm.InvalidOperationException;\nimport com.sun.enterprise.security.auth.realm.NoSuchUserException;\n\npublic class SimpleRealm extends IASRealm {\n\n  @Override\n public Enumeration getGroupNames(String userName)throws InvalidOperationException, NoSuchUserException {\n    Vector vector = new Vector();\n\n    vector.add(\"appuser\");\n    vector.add(\"appadmin\");\n\n    return vector.elements();\n    }\n\n  @Override\n  public String getAuthType() {\n    return \"simple\";\n  }\n\n  @Override\n public String getJAASContext() {\n    return \"simpleRealm\";\n  }\n\n public boolean loginUser(String userName, String password) {\n    boolean loginSuccessful = false;\n\n    if (\"glassfish\".equals(userName) && \"secret\".equals(password)) {\n      loginSuccessful = true;\n    }\n\n    return loginSuccessful;\n  }\n}\n```", "```java\npackage net.ensode.glassfishbook;\n\nimport java.util.Enumeration;\n\nimport javax.security.auth.login.LoginException;\n\nimport com.sun.appserv.security.AppservPasswordLoginModule;\nimport com.sun.enterprise.security.auth.realm.InvalidOperationException;\nimport com.sun.enterprise.security.auth.realm.NoSuchUserException;\n\npublic class SimpleLoginModule extends AppservPasswordLoginModule {\n\n  @Override\n protected void authenticateUser() throws LoginException {\n    Enumeration userGroupsEnum = null;\n    String[] userGroupsArray = null;\n    SimpleRealm simpleRealm;\n\n    if (!(_currentRealm instanceof SimpleRealm)) {\n      throw new LoginException();\n    } else {\n      simpleRealm = (SimpleRealm) _currentRealm;\n    }\n\n if (simpleRealm.loginUser(_username, _password)) {\n      try {\n        userGroupsEnum = simpleRealm.getGroupNames(_username);\n      } catch (InvalidOperationException e) {\n        throw new LoginException(e.getMessage());\n      } catch (NoSuchUserException e) {\n        throw new LoginException(e.getMessage());\n      }\n\n      userGroupsArray = new String[2];\n      int i = 0;\n\n      while (userGroupsEnum.hasMoreElements()) {\n        userGroupsArray[i++] = ((String) userGroupsEnum.nextElement());\n      }\n    } else {\n      throw new LoginException();\n    }\n    commitUserAuthentication(userGroupsArray);\n  }\n}\n```", "```java\nfileRealm {\n  com.sun.enterprise.security.auth.login.FileLoginModule required;\n};\n\nldapRealm {\n  com.sun.enterprise.security.auth.login.LDAPLoginModule required;\n};\n\nsolarisRealm {\n  com.sun.enterprise.security.auth.login.SolarisLoginModule required;\n};\n\njdbcRealm {\n  com.sun.enterprise.security.auth.login.JDBCLoginModule required;\n};\n\njdbcDigestRealm {\n  com.sun.enterprise.security.auth.login.JDBCDigestLoginModule required;\n};\n\npamRealm {\n\n  com.sun.enterprise.security.ee.auth.login.PamLoginModule required;\n\n};\n\nsimpleRealm {\n net.ensode.glassfishbook.SimpleLoginModule required;\n};\n\n```", "```java\nprotected void init(Properties arg0) throws BadRealmException, NoSuchRealmException\n```", "```java\nasadmin create-auth-realm --classname net.ensode.glassfishbook.SimpleRealm newCustomRealm\n\n```"]