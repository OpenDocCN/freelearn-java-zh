["```java\n@Path(\"quote\")\n@ApplicationScoped\npublic class QuoteEndpoint {\n    @Inject\n    private Client client;\n\n    @GET\n    @Path(\"{id}\")\n    public Quote getQuote(@PathParam(\"id\") final String id) {\n        return client.target(\"http://remote.provider.com\")\n                .path(\"quote/{id}\")\n                .resolveTemplate(\"id\", id)\n                .request(APPLICATION_JSON_TYPE)\n                .get(Quote.class);\n    }\n}\n```", "```java\n@GET\n@Path(\"{id}\")\npublic Quote getQuote(@PathParam(\"id\") final String id) {\n    try {\n        return client.target(\"http://remote.provider.com\")\n                .path(\"quote/{id}\")\n                .resolveTemplate(\"id\", id)\n                .request(APPLICATION_JSON_TYPE)\n                .get(Quote.class);\n    } catch (final ClientErrorException ce) {\n        logger.severe(ce.getMessage());\n        throw ce;\n    }\n}\n```", "```java\n[2017-10-26T17:48:34.737+0200] [glassfish 5.0] [INFO] [NCLS-LOGGING-00009] [javax.enterprise.logging] [tid: _ThreadID=16 _ThreadName=RunLevelControllerThread-1509032914633] [timeMillis: 1509032914737] [levelValue: 800] [[\n  Running GlassFish Version: GlassFish Server Open Source Edition 5.0 (build 23)]]\n\n[2017-10-26T17:48:34.739+0200] [glassfish 5.0] [INFO] [NCLS-LOGGING-00010] [javax.enterprise.logging] [tid: _ThreadID=16 _ThreadName=RunLevelControllerThread-1509032914633] [timeMillis: 1509032914739] [levelValue: 800] [[\n  Server log file is using Formatter class: com.sun.enterprise.server.logging.ODLLogFormatter]]\n\n[2017-10-26T17:48:35.318+0200] [glassfish 5.0] [INFO] [NCLS-SECURITY-01115] [javax.enterprise.system.core.security] [tid: _ThreadID=15 _ThreadName=RunLevelControllerThread-1509032914631] [timeMillis: 1509032915318] [levelValue: 800] [[\n  Realm [admin-realm] of classtype [com.sun.enterprise.security.auth.realm.file.FileRealm] successfully created.]]\n```", "```java\nhandlers=java.util.logging.ConsoleHandler\nhandlerServices=com.sun.enterprise.server.logging.GFFileHandler\njava.util.logging.ConsoleHandler.formatter=com.sun.enterprise.server.logging.UniformLogFormatter\ncom.sun.enterprise.server.logging.GFFileHandler.formatter=com.sun.enterprise.server.logging.ODLLogFormatter\ncom.sun.enterprise.server.logging.GFFileHandler.file=${com.sun.aas.instanceRoot}/logs/server.log\ncom.sun.enterprise.server.logging.GFFileHandler.rotationTimelimitInMinutes=0\ncom.sun.enterprise.server.logging.GFFileHandler.flushFrequency=1\njava.util.logging.FileHandler.limit=50000\ncom.sun.enterprise.server.logging.GFFileHandler.logtoConsole=false\ncom.sun.enterprise.server.logging.GFFileHandler.rotationLimitInBytes=2000000\ncom.sun.enterprise.server.logging.GFFileHandler.excludeFields=\ncom.sun.enterprise.server.logging.GFFileHandler.multiLineMode=true\ncom.sun.enterprise.server.logging.SyslogHandler.useSystemLogging=false\njava.util.logging.FileHandler.count=1\ncom.sun.enterprise.server.logging.GFFileHandler.retainErrorsStasticsForHours=0\nlog4j.logger.org.hibernate.validator.util.Version=warn\ncom.sun.enterprise.server.logging.GFFileHandler.maxHistoryFiles=0\ncom.sun.enterprise.server.logging.GFFileHandler.rotationOnDateChange=false\njava.util.logging.FileHandler.pattern=%h/java%u.log\njava.util.logging.FileHandler.formatter=java.util.logging.XMLFormatter\n\n#All log level details\njavax.org.glassfish.persistence.level=INFO\njavax.mail.level=INFO\norg.eclipse.persistence.session.level=INFO\n```", "```java\nlogger.info(\"Something happent {0}\", whatHappent);\n```", "```java\nlogger.info(\"Something happent\" + whatHappent);\n```", "```java\nfinal Logger logger = LoggerFactory.getLogger(...);\n// or\nfinal Logger logger = Logger.getLogger(...);\n```", "```java\noct. 27, 2017 6:58:16 PM com.github.rmannibucau.quote.manager.Tmp main\nINFOS: book message\n```", "```java\noct. 27, 2017 7:02:42 PM com.github.rmannibucau.quote.manager.Tmp main INFOS: book message\n```", "```java\npublic void save(long id, Quote quote) {\n    logger.finest(\"Value: \" + quote);\n    String hexValue = converter.toHexString(id);\n    doSave(id, quote);\n    logger.info(\"Saved: \" + hexValue);\n    logger.finest(\"Id: \" + hexValue + \", quote=\" + quote);\n}\n```", "```java\npublic void save(long id, Quote quote) {\n    if (logger.isLoggable(Level.FINEST)) {\n        logger.finest(\"Value: \" + quote);\n    }\n\n    String hexValue = converter.toHexString(id);\n    doSave(id, quote);\n    logger.info(\"Saved: \" + hexValue);\n\n    if (logger.isLoggable(Level.FINEST)) {\n        logger.finest(\"Id: \" + hexValue + \", quote=\" + quote);\n    }\n}\n```", "```java\nlogger.finest(() -> \"Value: \" + quote);\n```", "```java\nlogger.log(Level.INFO, \"id={0}, quote={1}\", new Object[]{ id, quote });\n```", "```java\nfinal Logger logger = Logger.getLogger(\"name.of.the.logger\");\nlogger.info(\"message\");\n```", "```java\nlog4j.rootLogger=DEBUG, stdout\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n\n\nlog4j.com.packt.quote = WARN\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration status=\"WARN\">\n  <Appenders>\n    <Console name=\"stdout\" target=\"SYSTEM_OUT\">\n      <PatternLayout pattern=\"%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} -\n      %msg%n\"/>\n    </Console>\n  </Appenders>\n  <Loggers>\n    <Root level=\"debug\">\n      <AppenderRef ref=\"stdout\"/>\n    </Root>\n  </Loggers>\n</Configuration>\n```", "```java\n<configuration>\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <root level=\"debug\">\n    <appender-ref ref=\"STDOUT\" />\n  </root>\n</configuration>\n```", "```java\nhandlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler\n\njava.util.logging.FileHandler.pattern = %h/java%u.log\njava.util.logging.FileHandler.limit = 50000\njava.util.logging.FileHandler.count = 1\njava.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter\n\njava.util.logging.ConsoleHandler.level = INFO\njava.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter\n\n.level = INFO\ncom.packt.level = SEVERE\n```"]