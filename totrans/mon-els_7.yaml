- en: Chapter 7. Node Failure and Post-Mortem Analysis
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章：节点故障和事后分析
- en: 'In the previous chapter, we learned how to troubleshoot common performance
    and reliability issues that come up when using Elasticsearch using case studies
    with real-world examples. This chapter explores some common causes of node and
    cluster failures. Specific topics covered are as follows:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何通过使用带有真实世界案例研究的案例研究来排查在使用 Elasticsearch 时出现的常见性能和可靠性问题。本章探讨了节点和集群故障的一些常见原因。具体涵盖的主题如下：
- en: How to determine the root cause of a failure
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何确定故障的根本原因
- en: How to take corrective action for node failures
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何对节点故障采取纠正措施
- en: Case studies with real-world examples of diagnosing system failures
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有真实世界故障诊断案例的案例研究
- en: Diagnosing problems
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 诊断问题
- en: 'Elasticsearch node failures can manifest in many different ways. Some of the
    symptoms of node failures are as follows:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Elasticsearch 节点故障可以以许多不同的方式表现出来。节点故障的一些症状如下：
- en: A node crashes during heavy data indexing
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点在大量数据索引过程中崩溃
- en: Elasticsearch process stops running for an unknown reason
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elasticsearch 进程因未知原因停止运行
- en: A cluster won't recover from a yellow or red state
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群无法从黄色或红色状态恢复
- en: Query requests time out
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询请求超时
- en: Index requests time out
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引请求超时
- en: 'When a node in your cluster experiences problems such as these, it can be tempting
    to just restart Elasticsearch or the node itself and move on like nothing happened.
    However, without addressing the underlying issue, the problem is likely to resurface
    in the future. If you encounter scenarios such as the ones just listed, check
    the health of your cluster in the following manner:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的集群中的节点遇到这些问题时，可能会诱使你只是简单地重启 Elasticsearch 或节点本身，然后像什么都没发生一样继续。然而，如果不解决根本问题，问题很可能会在未来再次出现。如果你遇到上述情况，请按照以下方式检查你的集群健康：
- en: Check the cluster health with Elasticsearch-head or Kopf
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Elasticsearch-head 或 Kopf 检查集群健康
- en: Check the historical health with Marvel
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Marvel 检查历史健康状态
- en: Check for Nagios alerts
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查 Nagios 警报
- en: Check Elasticsearch log files
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查 Elasticsearch 日志文件
- en: Check system log files
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查系统日志文件
- en: Check the system health using command-line tools
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用命令行工具检查系统健康
- en: 'These steps will help diagnose the root cause of problems in your cluster.
    In this section, we''ll look at some underlying causes that lead to node failure,
    including the following:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤将有助于诊断集群中问题的根本原因。在本节中，我们将探讨导致节点故障的一些潜在原因，包括以下内容：
- en: Out-of-memory errors
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存不足错误
- en: Not enough system memory available
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统内存不足
- en: Resource contention
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源争用
- en: Running out of disk space
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘空间耗尽
- en: OutOfMemoryError exceptions
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OutOfMemoryError 异常
- en: 'If a node throws an `OutOfMemoryError`, the immediate fix is to restart it.
    However, it''s not always obvious when or why a node encounters this error. Symptoms
    include the following:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果节点抛出 `OutOfMemoryError`，立即的解决办法是重启它。然而，并不总是明显何时或为什么节点会遇到这个错误。症状包括以下：
- en: Shard failures
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分片故障
- en: Search query failures
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索查询失败
- en: Indexing failures
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引失败
- en: Often, there will be no immediate symptoms at all. Unfortunately, checking Elasticsearch-head,
    Marvel, and Bigdesk won't tell you outright that an `OutOfMemoryError` exception
    has occurred, but they can give us some warning signs that one *may* have occurred.
    To be sure that an `OutOfMemoryError` exception has occurred, check the Elasticsearch
    logs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，根本不会有任何立即的症状。不幸的是，检查 Elasticsearch-head、Marvel 和 Bigdesk 并不能直接告诉你是否发生了 `OutOfMemoryError`
    异常，但它们可以给我们一些可能发生异常的预警信号。为了确保确实发生了 `OutOfMemoryError` 异常，请检查 Elasticsearch 日志。
- en: Shard failures
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分片故障
- en: One sign that an `OutOfMemoryError` exception has occurred is the appearance
    of shard failures in query responses. This response indicates shard failures in
    the `_shards.failed` key, and it describes the failure in `_shards.failures`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`OutOfMemoryError` 异常发生的一个迹象是查询响应中出现了分片故障。此响应在 `_shards.failed` 键中指示分片故障，并在
    `_shards.failures` 中描述了故障。'
- en: 'The following example query shows what a shard failure looks like in a query
    response:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例查询显示了查询响应中分片故障的外观：
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that even though a shard failed in this query, it still returned results.
    However, because there are three total shards and only two returned data successfully,
    the query results are not representative of all data in the index.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，尽管在这个查询中分片失败了，但它仍然返回了结果。然而，因为总共有三个分片，而只有两个成功返回了数据，所以查询结果并不能代表索引中的所有数据。
- en: 'Sometimes, if the cluster is in a red state, for example, the `_shards` object
    will indicate fewer successful shards than the total available shards but won''t
    report an error. Take a look a the following code where `_shards.successful` is
    less than `_shards.total`, but `_shards.failed` is set to `0`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，如果集群处于红色状态，例如，`_shards` 对象将指示成功分片数少于可用分片总数，但不会报告错误。看看以下代码，其中 `_shards.successful`
    小于 `_shards.total`，但 `_shards.failed` 设置为 `0`：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In both of these cases, the `hits.total` value is only representative of approximately
    two thirds of our actual total data count.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，`hits.total` 值仅代表我们实际总数据量的三分之二左右。
- en: 'When we encounter shard failures or shards that don''t return data successfully,
    it''s a good idea to use Elasticsearch-head to check the state of our cluster.
    Elasticsearch-head may look something like the following:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们遇到分片失败或分片未能成功返回数据时，使用 Elasticsearch-head 检查集群状态是个好主意。Elasticsearch-head 可能看起来如下：
- en: '![Shard failures](img/B03798_07_01.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![分片失败](img/B03798_07_01.jpg)'
- en: Shards relocating in Elasticsearch-head
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Elasticsearch-head 中重新定位的分片
- en: In this screenshot, we can see that all shards are now available, but the cluster
    is still recovering and there aren't any shards assigned to `elasticsearch-node-01`.
    At this point, we may also notice that the cluster takes a very long time to return
    to a green state, or possibly never returns to a green state. This problem may
    be due to a node that is out of heap space failing to relocate one of its shards
    to another node with more memory.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在此截图中，我们可以看到所有分片现在都是可用的，但集群仍在恢复中，并且没有分片分配给 `elasticsearch-node-01`。此时，我们可能还会注意到集群需要非常长的时间才能返回到绿色状态，或者可能永远不会返回到绿色状态。这个问题可能是由于一个没有堆空间的节点未能将其中的一个分片重新定位到具有更多内存的另一个节点。
- en: 'Next, open Elasticsearch-kopf to get a more detailed view of our nodes:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，打开 Elasticsearch-kopf 以获取我们节点更详细的信息：
- en: '![Shard failures](img/B03798_07_02.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![分片失败](img/B03798_07_02.jpg)'
- en: Shards relocating in Elasticsearch-kopf
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Elasticsearch-kopf 中重新定位分片
- en: 'In Elasticsearch-kopf, we see high heap usage on `elasticsearch-node-01` and
    `elasticsearch-node-02`, which is a good indicator that an `OutOfMemoryError`
    exception has occurred. Checking the logs, we confirm that an `OutOfMemoryError`
    was thrown on `elasticsearch-node-01`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Elasticsearch-kopf 中，我们看到 `elasticsearch-node-01` 和 `elasticsearch-node-02`
    上的堆使用量很高，这是内存溢出错误异常发生的良好指标。检查日志，我们确认在 `elasticsearch-node-01` 上抛出了 `OutOfMemoryError`：
- en: '![Shard failures](img/B03798_07_03.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![分片失败](img/B03798_07_03.jpg)'
- en: Examining the Elasticsearch logs shows an OutOfMemoryError
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 Elasticsearch 日志显示 OutOfMemoryError
- en: 'Additionally, we see several other Exceptions recorded in the log file that
    start appearing after the `OutOfMemoryError`, like in the following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还在日志文件中看到几个其他异常记录，这些异常是在 `OutOfMemoryError` 之后出现的，如下截图所示：
- en: '![Shard failures](img/B03798_07_04.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![分片失败](img/B03798_07_04.jpg)'
- en: Additional errors in the Elasticsearch log related to OutOfMemoryError
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 与 OutOfMemoryError 相关的 Elasticsearch 日志中的附加错误
- en: 'Continuing to examine the log file, we see an error indicating shard failure
    due to the node running out of memory:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 继续检查日志文件，我们看到一个错误指示由于节点内存不足导致分片失败：
- en: '![Shard failures](img/B03798_07_05.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![分片失败](img/B03798_07_05.jpg)'
- en: Shard failure errors in the Elasticsearch log
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Elasticsearch 日志中的分片失败错误
- en: Slow queries
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 慢查询
- en: 'Slow queries are another sign that an `OutOfMemoryError` has occurred. In the
    previous example, checking the slow-log file with the Unix `less` command on `elasticsearch-node-02`
    shows the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 慢查询是内存溢出错误（`OutOfMemoryError`）发生的另一个迹象。在先前的例子中，使用 Unix `less` 命令在 `elasticsearch-node-02`
    上检查慢查询日志文件显示以下内容：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Slow queries](img/B03798_07_06.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![慢查询](img/B03798_07_06.jpg)'
- en: Slow queries may indicate that an error has occurred
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 慢查询可能表明发生了错误
- en: 'Checking the Elasticsearch log on `elasticsearch-node-02`, we can verify that
    an `OutOfMemoryError` was captured:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `elasticsearch-node-02` 上检查 Elasticsearch 日志，我们可以验证捕获了 `OutOfMemoryError`：
- en: '![Slow queries](img/B03798_07_07.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![慢查询](img/B03798_07_07.jpg)'
- en: Verifying that Elasticsearch threw an exception
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 验证 Elasticsearch 抛出了异常
- en: Resolving OutOfMemoryError exceptions
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决 OutOfMemoryError 异常
- en: 'As mentioned earlier, when you see an `OutOfMemoryError`, it''s best to restart
    the node to prevent further exceptions. However, this is only a temporary fix.
    It''s important to also fix the underlying issue that is causing the error. Refer
    to [Chapter 6](ch06.html "Chapter 6. Troubleshooting Performance and Reliability
    Issues"), *Troubleshooting Performance and Reliability Issues*, for more strategies
    about solving `OutOfMemoryError` exceptions. A few strategies are listed, as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，当你看到`OutOfMemoryError`错误时，最好重启节点以防止进一步的异常。然而，这只是一个临时的解决方案。同时修复导致错误的基本问题也很重要。请参阅[第6章](ch06.html
    "第6章. 性能和可靠性问题故障排除")，*性能和可靠性问题故障排除*，了解更多关于解决`OutOfMemoryError`异常的策略。以下列出了一些策略：
- en: Limit the size of the field data cache
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制字段数据缓存的大小
- en: Enable circuit breakers for the field data cache
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为字段数据缓存启用断路器
- en: Adjust the size and frequency of bulk data inserts
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整批量数据插入的大小和频率
- en: Reduce the number of total shards
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少总分片数
- en: Ensure that `ES_HEAP_SIZE` is properly set
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保`ES_HEAP_SIZE`设置正确
- en: Ensure that there is enough physical memory available to the machine
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保机器有足够的物理内存可用
- en: 'After seeing errors in the log, we can correlate their timestamps with Marvel
    to see what kind of activity was going on when the error occurred. For example,
    let''s suppose that we see the following `OutOfMemoryError`:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在日志中看到错误后，我们可以将它们的时间戳与Marvel关联起来，以查看错误发生时的活动类型。例如，假设我们看到了以下`OutOfMemoryError`：
- en: '![Resolving OutOfMemoryError exceptions](img/B03798_07_08.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![解决OutOfMemoryError异常](img/B03798_07_08.jpg)'
- en: An OutOfMemoryError exception occurred at 4/29/2016 15:26:39
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在2016年4月29日15:26:39发生了OutOfMemoryError异常
- en: 'We can check Marvel''s activity around the `4/29/2016 15:26:39` timeframe.
    In this case, we''ll set it from `2016-04-29 15:25:00` to `2016-04-29 15:27:30`,
    as shown in the following screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以检查`4/29/2016 15:26:39`时间段的Marvel活动。在这种情况下，我们将它设置为从`2016-04-29 15:25:00`到`2016-04-29
    15:27:30`，如下面的截图所示：
- en: '![Resolving OutOfMemoryError exceptions](img/B03798_07_09.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![解决OutOfMemoryError异常](img/B03798_07_09.jpg)'
- en: Change the date range in Marvel
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在Marvel中更改日期范围
- en: 'Although we see no search activities taking place in the index at the time
    of the collapse, a modest **Indexing Rate** is followed by a drop-off in indexing
    activity:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们看到在崩溃时索引中没有搜索活动，但随后是一个适度的**索引速率**，随后是索引活动的下降：
- en: '![Resolving OutOfMemoryError exceptions](img/B03798_07_10.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![解决OutOfMemoryError异常](img/B03798_07_10.jpg)'
- en: Investigating with Marvel
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Marvel进行调查
- en: The drop-off probably occurred after the `OutOfMemoryError`, and a heavy indexing
    load may have caused the error.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 降级可能发生在`OutOfMemoryError`之后，大量的索引负载可能导致了错误。
- en: As `OutOfMemoryError` exceptions may not occur very frequently, it can be difficult
    to know for sure whether applying the fixes that we implemented successfully resolved
    the issue. To ensure that the issue is completely solved, it's best to find a
    way to reliably recreate the error. Then, adjust Elasticsearch configuration settings
    and load until you don't see the issue any more. It's often possible to recreate
    the issue by standing up a simple single-node cluster with a similar configuration
    and load as a node in the primary cluster. In the previous example, we might try
    to verify that data bulk loading caused the exception by indexing documents at
    a similar rate into a single-node test cluster in a controlled environment.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`OutOfMemoryError`异常可能不会非常频繁地发生，因此很难确定我们实施的修复措施是否成功解决了问题。为了确保问题完全解决，最好找到一种可靠地重现错误的方法。然后，调整Elasticsearch配置设置和负载，直到你不再看到该问题。通常可以通过建立一个具有类似配置和负载的简单单节点集群来重现问题，作为主集群中的一个节点。在前面的例子中，我们可能会尝试通过将文档以类似的速率索引到受控环境中的单节点测试集群来验证数据批量加载是否导致了异常。
- en: Elasticsearch process crashes
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Elasticsearch进程崩溃
- en: 'If the Elasticsearch process unexpectedly stops running, it may be because
    the operating system killed it. In these cases, the Elasticsearch log file may
    not have any useful information about the error, and we instead have to check
    the `syslog`:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Elasticsearch进程意外停止运行，可能是操作系统将其终止了。在这些情况下，Elasticsearch日志文件可能没有关于错误的任何有用信息，我们反而需要检查`syslog`：
- en: '[PRE3]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This can happen if Elasticsearch tries to claim more system memory than the
    memory available, and this is often a result of an improperly set `ES_HEAP_SIZE`
    or resource contention with other processes. If your cluster experiences this
    issue and there are other memory-heavy processes running on the cluster, it may
    be a good idea to move these processes off the Elasticsearch cluster. To verify
    that Elasticsearch was forcibly stopped by the operating system, check the `syslog`
    file at `/var/log/syslog`:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Elasticsearch试图声明比可用内存更多的系统内存，这通常是由于`ES_HEAP_SIZE`设置不正确或其他进程的资源竞争造成的。如果你的集群遇到这个问题，并且集群上运行着其他内存密集型进程，那么将这些进程从Elasticsearch集群中移除可能是个好主意。为了验证Elasticsearch是否被操作系统强制停止，请检查`/var/log/syslog`中的`syslog`文件：
- en: '![Elasticsearch process crashes](img/B03798_07_11.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![Elasticsearch进程崩溃](img/B03798_07_11.jpg)'
- en: Operating-system killed Elasticsearch process due to running out of memory
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统因内存不足而杀死了Elasticsearch进程
- en: 'Take the following line:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 取以下行：
- en: '[PRE4]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This line indicates that the operating system killed the Elasticsearch process.
    In this case, we won't see any corresponding log entries in the Elasticsearch
    log files.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这一行表示操作系统杀死了Elasticsearch进程。在这种情况下，我们不会在Elasticsearch日志文件中看到任何相应的日志条目。
- en: Disk space
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 磁盘空间
- en: When a node runs out of disk space, it will stay in the cluster and can still
    handle index and search requests, but it offloads its shards to other nodes in
    the cluster. As the cluster reallocates shards, queries may run slow or timeout.
    Once shards are reallocated to other nodes in the cluster, you'll likely see some
    performance degradation as the cluster is operating with one less data node.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个节点耗尽磁盘空间时，它将留在集群中，仍然可以处理索引和搜索请求，但它会将其分片卸载到集群中的其他节点。当集群重新分配分片时，查询可能会运行缓慢或超时。一旦分片重新分配到集群中的其他节点，你可能会看到一些性能下降，因为集群正在使用一个更少的数据节点运行。
- en: A node running out of disk space can be dangerous if all nodes are configured
    with the same amount of space. If one node runs out of space, it's likely that
    other nodes in the cluster are running low on disk space too. Once the cluster
    finishes reallocating shards to other nodes in the cluster, it can cause these
    nodes to run out of space as well. This causes a chain reaction that ultimately
    results in the entire cluster going down.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有节点都配置了相同数量的空间，节点耗尽磁盘空间可能会很危险。如果一个节点耗尽空间，那么集群中的其他节点可能也接近磁盘空间不足。一旦集群将分片重新分配到集群中的其他节点，这可能导致这些节点也耗尽空间。这会导致连锁反应，最终导致整个集群崩溃。
- en: 'We can check whether a node is running low on disk space using Kopf or Marvel
    or by configuring a Nagios alert. Additionally, we''ll see an error in the Elasticsearch
    log related to low disk space, as seen in the following screenshot:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Kopf或Marvel检查节点是否磁盘空间不足，或者通过配置Nagios警报。此外，我们还会在Elasticsearch日志中看到与磁盘空间不足相关的错误，如下面的截图所示：
- en: '![Disk space](img/B03798_07_12.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![磁盘空间](img/B03798_07_12.jpg)'
- en: Kopf shows that `elasticsearch-node-01` is low on disk space
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Kopf显示`elasticsearch-node-01`磁盘空间不足
- en: Resolving the issue
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决问题
- en: 'Disk space issues can be grouped into two categories:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘空间问题可以分为两大类：
- en: Elasticsearch has too much data loaded into it and is filling up the disk.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Elasticsearch中加载了过多的数据，正在占用磁盘空间。
- en: Something other than Elasticsearch data is filling up the disk, for example,
    a large log file.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了Elasticsearch数据之外，还有其他东西正在占用磁盘空间，例如，一个大的日志文件。
- en: 'To resolve the first category issues, one solution is to increase the node''s
    storage capacity by adding another drive or volume to the node and configuring
    Elasticsearch to use the space. For example, if we mount additional storage at
    `/data`, update the `elasticsearch.yml` configuration file to use it as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决第一类问题，一个解决方案是通过向节点添加另一个驱动器或卷来增加节点的存储容量，并配置Elasticsearch使用该空间。例如，如果我们将在`/data`上挂载额外的存储，更新`elasticsearch.yml`配置文件如下：
- en: '[PRE5]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Restart Elasticsearch on the node. The node will then distribute its data across
    the two data directories.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在节点上重启Elasticsearch。然后节点将把其数据分布在两个数据目录中。
- en: For the second category, if the cause is external to Elasticsearch, removing
    the offending files to clear up disk space will be enough to get Elasticsearch
    going again. There's no need to restart the node.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第二类问题，如果原因是Elasticsearch外部，删除违规文件以清理磁盘空间就足够让Elasticsearch再次运行。不需要重启节点。
- en: 'Some additional measures we can take to reduce disk space usage are as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以采取的一些额外措施以减少磁盘空间使用如下：
- en: Add additional nodes to the cluster.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向集群中添加额外的节点。
- en: Decrease shard replication; for example, from two replicas to one replica.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少分片副本数；例如，从两个副本减少到一个副本。
- en: Ensure that individual shards don't grow too big by breaking large indices into
    smaller indices. For example, instead of storing all Twitter data in one index,
    create a new index every month to store new data.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将大型索引拆分成较小的索引来确保单个分片不会变得太大。例如，而不是将所有Twitter数据存储在一个索引中，每个月创建一个新的索引来存储新数据。
- en: Enable data compression (refer to [Chapter 6](ch06.html "Chapter 6. Troubleshooting
    Performance and Reliability Issues"), *Troubleshooting Performance and Reliability
    Issues* ).
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用数据压缩（参考[第6章](ch06.html "第6章. 解决性能和可靠性问题"), *解决性能和可靠性问题*）。
- en: Reviewing some case studies
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查一些案例研究
- en: This section discusses some real-world scenarios of Elasticsearch node failure
    and how to address them.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论了一些Elasticsearch节点故障的真实场景以及如何解决这些问题。
- en: The ES process quits unexpectedly
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ES进程意外退出
- en: 'A few weeks ago we noticed in Marvel that the Elasticsearch process was down
    on one of our nodes. We restarted Elasticsearch on this node, and everything seemed
    to return to normal. However, checking Marvel later on in the week, we notice
    that the node is down again. We decide to look at the Elasticsearch log files,
    but don''t notice any exceptions. As we don''t see anything in the Elasticsearch
    log, we suspect that the operating system may have killed Elasticsearch. Checking
    `syslog` at `/var/log/syslog`, we see the error:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 几周前我们在Marvel上注意到我们的一个节点上的Elasticsearch进程宕机了。我们在该节点上重启了Elasticsearch，一切似乎都恢复了正常。然而，在那一周稍后检查Marvel时，我们发现节点再次宕机了。我们决定查看Elasticsearch的日志文件，但没有发现任何异常。由于我们在Elasticsearch日志中没有看到任何异常，我们怀疑操作系统可能已经杀死了Elasticsearch。在`/var/log/syslog`的`syslog`中检查，我们看到以下错误：
- en: '[PRE6]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This verifies that the operating system killed Elasticsearch because the system
    was running out of memory. We check the Elasticsearch configuration and don''t
    see any issues. This node is configured in the same way as the other nodes in
    the cluster. Next, we check for resource contention with other processes by running
    the `top` command and get the following results:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这验证了操作系统杀死Elasticsearch是因为系统内存不足。我们检查了Elasticsearch的配置，没有发现任何问题。这个节点配置与集群中的其他节点相同。接下来，我们通过运行`top`命令检查与其他进程的资源争用，得到以下结果：
- en: '![The ES process quits unexpectedly](img/B03798_07_13.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![ES进程意外退出](img/B03798_07_13.jpg)'
- en: top showing resource contention
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部显示资源争用
- en: It looks like a MySQL server is also running on this node and is taking up a
    lot of system memory. We suspect that resource contention with MySQL is probably
    what's causing the operating system to kill Elasticsearch. We are able to move
    the MySQL database to its own dedicated host, and after a few weeks with no more
    memory issues, we can conclude that this resolved the problem.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来这个节点上也在运行MySQL服务器，并且占用了大量的系统内存。我们怀疑与MySQL的资源争用可能是导致操作系统杀死Elasticsearch的原因。我们能够将MySQL数据库迁移到其自己的专用主机，在几周内没有再出现内存问题后，我们可以得出结论，这个问题已经解决了。
- en: Query requests slow and timing out
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询请求缓慢且超时
- en: 'Users of our corporate Elasticsearch-backed web application have started reporting
    that the search functionality is slow and sometimes doesn''t return at all. We
    are able to verify this by running a few searches on the web application, and
    we decide to use Kopf to investigate the issue. In Kopf, we notice that the disk
    indicator is red for one of our nodes, `elasticsearch-node-01`, as seen in the
    following screenshot:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们企业级Elasticsearch支持的Web应用程序的用户开始报告搜索功能缓慢，有时甚至完全不返回结果。我们能够通过在Web应用程序上运行一些搜索来验证这一点，并决定使用Kopf来调查这个问题。在Kopf中，我们注意到我们的一个节点`elasticsearch-node-01`的磁盘指示器是红色的，如下面的截图所示：
- en: '![Query requests slow and timing out](img/B03798_07_14.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![查询请求缓慢且超时](img/B03798_07_14.jpg)'
- en: Kopf shows that `elasticsearch-node-01` is low on disk space
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Kopf显示`elasticsearch-node-01`磁盘空间不足
- en: The red **disk** indicator for `elasticsearch-node-01` means that we are low
    on disk space. Also, all of the node's shards have been reallocated to other nodes.
    Checking the log of `elasticsearch-node-01` at `/var/log/elasticsearch/my_elasticsearch_cluster.log`,
    we confirm that the disk is full by seeing the **no space left on device** message.
    We are able to resolve the issue by adding an additional hard drive to all nodes
    in the cluster and configuring Elasticsearch to use the new space in the `elasticsearch.yml`
    file.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`elasticsearch-node-01` 的红色 **磁盘** 指示灯意味着我们的磁盘空间不足。此外，该节点上的所有分片都已重新分配到其他节点。通过查看
    `/var/log/elasticsearch/my_elasticsearch_cluster.log` 中的 `elasticsearch-node-01`
    日志，我们确认磁盘已满，因为看到了 **设备上没有剩余空间** 的消息。我们通过向集群中的所有节点添加额外的硬盘驱动器，并在 `elasticsearch.yml`
    文件中配置 Elasticsearch 使用新空间来解决这个问题。'
- en: To prevent this issue in the future, we decide to install Nagios using the instructions
    found in [Chapter 5](ch05.html "Chapter 5. System Monitoring"), *System Monitoring*,
    in order to send out e-mail alerts the next time the disk space gets low.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止未来出现此类问题，我们决定按照 [第 5 章](ch05.html "第 5 章。系统监控") 中找到的说明安装 Nagios，*系统监控*，以便在磁盘空间不足时发送电子邮件警报。
- en: Summary
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'This chapter looked into how to diagnose node failures, determine the root
    cause of the problem, and apply corrective action. Some key things we learned
    are:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 本章探讨了如何诊断节点故障，确定问题的根本原因，并采取纠正措施。我们学到的一些关键点是：
- en: Many errors, from shard failures to slow query performance, are caused by `OutOfMemoryError`
    exceptions
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多错误，从分片故障到查询性能缓慢，都是由 `OutOfMemoryError` 异常引起的。
- en: Running out of disk space on one node can cause other nodes to run out of disk
    space as well when shards are reallocated
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当分片重新分配时，一个节点上的磁盘空间不足可能会导致其他节点也出现磁盘空间不足的情况。
- en: Running Elasticsearch alongside other services that require a lot of memory
    can result in the operating system killing Elasticsearch to free up memory
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在运行需要大量内存的其他服务的同时运行 Elasticsearch，可能会导致操作系统为了释放内存而杀死 Elasticsearch。
- en: The next chapter will talk about Elasticsearch 5.0, the next major release of
    the platform, and it will give you an overview of the various new monitoring tools
    that will accompany the Elasticsearch 5.0 release.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将讨论 Elasticsearch 5.0，这是平台的下一个主要版本，它将为您概述将伴随 Elasticsearch 5.0 发布的各种新监控工具。
