["```java\n    #!/bin/sh\n    export JT_JAVA=/etc/alternatives/java_sdk_1.7.0_openjdk/\n    /home/user/openjdk/jtreg/bin/jtreg -jdk:$JT_JAVA -agentvm -automatic -verbose:summary -w build/jtreg/work -r build/jtreg/report hotspot/test/compiler/5091921\n\n    ```", "```java\n    [user@localhost jdk7u_clean]$ ./run_test.sh \n    Passed: compiler/5091921/Test5091921.java\n    Passed: compiler/5091921/Test6186134.java\n    Passed: compiler/5091921/Test6196102.java\n    Passed: compiler/5091921/Test6357214.java\n    Passed: compiler/5091921/Test6559156.java\n    Passed: compiler/5091921/Test6753639.java\n    Passed: compiler/5091921/Test6850611.java\n    Passed: compiler/5091921/Test6890943.java\n    Passed: compiler/5091921/Test6897150.java\n    Passed: compiler/5091921/Test6905845.java\n    Passed: compiler/5091921/Test6931567.java\n    Passed: compiler/5091921/Test6935022.java\n    Passed: compiler/5091921/Test6959129.java\n    Passed: compiler/5091921/Test6985295.java\n    Passed: compiler/5091921/Test6992759.java\n    Passed: compiler/5091921/Test7005594.java\n    Passed: compiler/5091921/Test7020614.java\n    Test results: passed: 17\n\n    ```", "```java\n    [user@localhost tmp]$ hg clone http://hg.openjdk.java.net/code-tools/jtreg\n    destination directory: jtreg\n    requesting all changes\n    adding changesets\n    adding manifests\n    adding file changes\n    added 85 changesets with 1239 changes to 602 files\n    updating to branch default\n    586 files updated, 0 files merged, 0 files removed, 0 files unresolved\n\n    ```", "```java\n    #!/bin/sh\n    export JDK15HOME= /etc/alternatives/java_sdk_1.7.0_openjdk/\n    export JAVAHELP_HOME=/home/user/openjdk/jtreg/lib/jh2.0/javahelp\n    export ANTHOME=/usr/share/ant\n    export JTHARNESS_HOME=/home/user/openjdk/jtreg/lib/jharness4.4.1\n    export JUNIT_JAR=/home/user/openjdk/jtreg/lib/junit4.5/junit-4.5.jar\n    export TESTNG_HOME=/home/user/openjdk/jtreg/lib/testng-6.8\n    export TESTNG_JAR=/home/user/openjdk/jtreg/lib/testng-6.8/testng-6.8.jar\n    export XALANHOME=/home/user/openjdk/jtreg/lib/xalan-j_2_7_1\n    make -C make\n\n    ```", "```java\n    [user@localhost jtreg]$ ./make.sh\n\n    ```", "```java\n    [user@localhost jtreg]$ ls -l build/images/jtreg/\n    total 60\n    drwxrwxr-x. 2 user user 4096 May  3 21:27 bin\n    -rw-rw-r--. 1 user user 994 May  3 21:23 COPYRIGHT\n    drwxrwxr-x. 3 user user 4096 May  3 21:23 doc\n    drwxrwxr-x. 4 user user 4096 May  3 21:27 legal\n    drwxrwxr-x. 2 user user 4096 May  3 21:27 lib\n    -rw-rw-r--. 1 user user 19241 May  3 21:27 LICENSE\n    drwxrwxr-x. 3 user user 4096 May  3 21:23 linux\n    -rw-rw-r--. 1 user user 3790 May  3 21:27 README\n    -rw-rw-r--. 1 user user 72 May  3 21:27 release\n    drwxrwxr-x. 3 user user 4096 May  3 21:23 solaris\n    drwxrwxr-x. 3 user user 4096 May  3 21:23 win32\n\n    ```", "```java\n    #!/bin/sh\n    export JTREG_HOME=/home/user/openjdk/jtreg/build/images/jtreg/\n    export JT_HOME=/home/user/openjdk/jtreg/build/images/jtreg/\n    export PRODUCT_HOME=/home/stas/openjdk/jdk7u_clean/build/linux-amd64/j2sdk-image/\n    cd jdk/test\n    make TESTDIRS=java/lang\n\n    ```", "```java\n    TEST: java/lang/StringBuilder/Insert.java\n     build: 1.112 seconds\n     compile: 1.112 seconds\n     main: 0.161 seconds\n    TEST RESULT: Passed. Execution successful\n    --------------------------------------------------\n\n    ```", "```java\n    Summary:\n    TEST STATS: name=  run=383  pass=383  fail=0  excluded=4\n    EXIT CODE: 0\n    EXIT CODE: 0\n    Testing completed successfully\n\n    ```", "```java\n--------------------------------------------------\nTEST: java/lang/invoke/7157574/Test7157574.java\n build: 1.194 seconds\n compile: 1.193 seconds\n main: 0.199 seconds\nTEST RESULT: Passed. Execution successful\n\n```", "```java\n/* @test\n * @bug 7157574\n * @summary method handles returned by reflective lookup API sometimes have wrong receiver type\n *\n * @run main Test7157574\n */\n\n```", "```java\n    /* @test\n     * @summary Test to ensure that computer wasn't moved to the past\n     * @compile SampleTimeProvider.java\n     * @run main SampleTest\n     * @run main/othervm SampleTest\n     */\n    public class SampleTest {\n        public static void main(String[] args) {\n            long currentTime = new SampleTimeProvider().getCurrentTime();\n            if ( currentTime < 0 ) {\n                throw new RuntimeException(\"It can't be 1969!\");\n            }\n        }\n    }\n    ```", "```java\n    public class SampleTimeProvider {\n        public long getCurrentTime() {\n            return System.currentTimeMillis();\n        }\n    }\n    ```", "```java\n    #!/bin/sh\n    export JT_JAVA=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.60-2.4.7.0.fc20.x86_64\n    /home/user/openjdk/jtreg/build/images/jtreg/bin/jtreg -jdk:$JT_JAVA -agentvm -automatic -verbose:summary -w build/jtreg/work -r build/jtreg/report -exclude:./jdk/test/ProblemList.txt jdk/test/demo/SampleTest.java\n\n    ```", "```java\n    [user@localhost jdk7u]$ ./run_jtreg.sh \n    Directory \"build/jtreg/work\" not found: creating\n    Directory \"build/jtreg/report\" not found: creating \n    Passed: demo/SampleTest.java\n    Test results: passed: 1\n    Report written to /home/user/openjdk/jdk7u/build/jtreg/report/html/report.html\n    Results written to /home/user/openjdk/jdk7u/build/jtreg/work\n\n    ```", "```java\n    #!/bin/sh\n    export JT_JAVA=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.60-2.4.7.0.fc20.x86_64\n    /home/user/openjdk/jtreg/build/images/jtreg/bin/jtreg –g -jdk:$JT_JAVA -agentvm -automatic -verbose:summary -w build/jtreg/work -r build/jtreg/report -exclude:./jdk/test/ProblemList.txt jdk/test/\n\n    ```", "```java\n    TestNG.dirs=.\n\n    ```", "```java\n    package org.mydemo;\n\n    import org.testng.Assert;\n    import org.testng.annotations.Test;\n\n    public class MyTestNGTest {\n     @Test\n     public void testMoreNanosThanMillis() {\n     final long nanos = System.nanoTime();\n     final long millis = System.currentTimeMillis();\n     Assert.assertTrue(nanos > millis);\n     }\n    }\n\n    ```", "```java\n    #!/bin/sh\n    export JT_JAVA=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.60-2.4.7.0.fc20.x86_64\n    /home/user/openjdk/jtreg/build/images/jtreg/bin/jtreg -jdk:$JT_JAVA -agentvm -automatic -verbose:summary -w build/jtreg/work -r build/jtreg/report -exclude:./jdk/test/ProblemList.txt jdk/test/testng\n\n    ```", "```java\n    [user@localhost jdk7u]$ ./run_jtreg.sh \n    Passed: testng/org/mydemo/MyTestNGTest.java\n    Test results: passed: 1\n    Report written to /home/user/openjdk/jdk7u/build/jtreg/report/html/report.html\n    Results written to /home/user/openjdk/jdk7u/build/jtreg/work\n\n    ```", "```java\nyum install ant\n\n```", "```java\nyum install svn\n\n```", "```java\nsvn checkout https://svn.java.net/svn/jtharness~svn/trunk jtharness\n```", "```java\n    svn checkout https://svn.java.net/svn/jtharness~svn/trunk jtharness\n\n    ```", "```java\n    #Please specify location of jhall.jar here - for compilation\n    jhalljar = /home/user/openjdk/jtharness/lib/jh2.0/javahelp/lib/jhall.jar\n    # needed only at runtime\n    jhjar = /home/user/openjdk/jtharness/lib/jh2.0/javahelp/lib/jh.jar\n    # location of jar with implementation of java serial communications API\n    jcommjar = /home/user/openjdk/jtharness/lib/commapi/jar/comm.jar\n    # location of jar with servlet API implementation\n    servletjar = /home/user/openjdk/jtharness/lib/javax.servlet-api-3.1.0.jar\n    # bytecode library (BCEL or ASM)\n    # these are not interchangable\n    bytecodelib = /home/user/openjdk/jtharness/lib/asm-3.1/lib/asm-3.1.jar:/home/stas/openjdk/jtharness/lib/asm-3.1/lib/asm-commons-3.1.jar\n    # JUnit Library - Version 4 currently used to compile 3 and 4 support\n    junitlib = /home/user/openjdk/jtharness/lib/junit-4.4.jar\n    # Please specify location where the build distribution (output) will be created\n    BUILD_DIR = ../JTHarness-build\n\n    ```", "```java\n    [stas@localhost build]$ ant\n    Buildfile: /home/user/openjdk/jtharness/code/build/build.xml\n     …skipped…\n    BUILD SUCCESSFUL\n    Total time: 45 seconds\n    When build is finished\n\n    ```", "```java\n    java -jar JTHarness-build/binaries/lib/javatest.jar\n\n    ```", "```java\n[user@localhost]$ java -version\nopenjdk version \"1.8.0_11\"\nOpenJDK Runtime Environment (build 1.8.0_11-b12)\nOpenJDK 64-Bit Server VM (build 25.11-b02, mixed mode)\n[user@localhost jcstress]$ javac -version\njavac 1.8.0_11\n\n```", "```java\n[root@localhost ~]# yum install maven\n\n```", "```java\n    [user@localhost ~]$ hg clone http://hg.openjdk.java.net/code-tools/jcstress/ jcstress\n\n    ```", "```java\n    [user@localhost jcstress]$ mvn clean install -pl tests-custom –am\n\n    ```", "```java\n    [INFO] BUILD SUCCESS\n    [INFO] ----------------------------------------------------\n    [INFO] Total time: 1:31.300s\n    [INFO] Finished at: Tue Jul 29 22:23:19 BST 2014\n    [INFO] Final Memory: 37M/410M\n    [INFO] ----------------------------------------------------\n\n    ```", "```java\n    java -jar tests-custom/target/jcstress.jar\n\n    ```", "```java\n    (ETA:   00:39:58) (R: 1.36E+07) (T:  46/898) (F: 1/1) (I: 3/5)       [OK] o.o.j.t.atomicity.primitives.plain.VolatileCharAtomicityTest\n    (ETA:   00:40:05) (R: 1.36E+07) (T:  46/898) (F: 1/1) (I: 3/5)       [OK] o.o.j.t.atomicity.primitives.plain.VolatileDoubleAtomicityTest\n\n    ```", "```java\n[user@localhost jcstress]$ java -jar tests-custom/target/jcstress.jar -t \".*ByteBufferAtomicityTests.*\"\n\n```", "```java\n[user@localhost jcstress]$ java -jar tests-custom/target/jcstress.jar –h\n\n```", "```java\n    package org.openjdk.jcstress.tests;\n\n    public class CASValue {\n        private int i = 0;\n        public boolean cas(int expected, int newValue) {\n            boolean res = false;\n            if (i == expected) {\n                i = newValue;\n                res = true;\n            }\n            return res;\n        }\n    }\n    ```", "```java\n    package org.openjdk.jcstress.tests;\n\n    import org.openjdk.jcstress.annotations.*;\n    import org.openjdk.jcstress.infra.results.LongResult2;\n\n    public class CASValueTests {\n        @State\n        public static class S extends CASValue { }\n\n        @JCStressTest\n        @Description(\"Tests correctness of CASValue CAS operations.\")\n        @Outcome(id = \"[5,2]\", expect = Expect.ACCEPTABLE, desc = \"T1 -> T2 execution.\")\n        @Outcome(id = \"[1,10]\", expect = Expect.ACCEPTABLE, desc = \"T1 -> T2 execution.\")\n        public static class ValCas_ValCas {\n            @Actor public void actor1(S s, LongResult2 r) { \n                r.r1 = s.cas(0, 5) ? 5 : 1; \n            }\n            @Actor public void actor2(S s, LongResult2 r) { \n                r.r2 = s.cas(0, 10) ? 10 : 2;\n            }\n        }\n    }\n    ```", "```java\n    [user@localhost jcstress] mvn clean install -pl tests-custom –am\n\n    ```", "```java\n    [user@localhost jcstress] java -jar tests-custom/target/jcstress.jar -t \".*CASValueTests.*\"\n\n    ```", "```java\n    (ETA:        n/a) (R: 5.95E+08) (T:   1/1) (F: 1/1) (I: 1/5)   [FAILED] o.o.j.t.CASValueTests$ValCas_ValCas\n    Observed state  Occurrences Expectation Interpretation\n    [5, 2]  (3,230,666)        ACCEPTABLE T1 -> T2 execution.\n    [1, 10] (2,613,825)        ACCEPTABLE T2 -> T1 execution.\n    [5, 10] (7,609,449)        FORBIDDEN Other cases are not expected.\n\n    ```", "```java\n    public class CASValue {\n     private int i = 0;\n     public synchronized boolean cas(int expected, int newValue) {\n     boolean res = false;\n     if (i == expected) {\n     i = newValue;\n     res = true;\n     }\n     return res;\n     }\n    }\n\n    ```", "```java\n    mvn clean install -pl tests-custom –am\n\n    ```", "```java\n    java -jar tests-custom/target/jcstress.jar -t \".*CASValueTests.*\"\n\n    ```", "```java\n    (ETA: n/a) (R: 3.35E+08) (T:   1/1) (F: 1/1) (I: 1/5) [OK] o.o.j.t.CASValueTests$ValCas_ValCas\n    (ETA: 00:00:02) (R: 1.69E+07) (T:   1/1) (F: 1/1) (I: 2/5) [OK] o.o.j.t.CASValueTests$ValCas_ValCas\n    (ETA: 00:00:01) (R: 1.22E+07) (T:   1/1) (F: 1/1) (I: 3/5) [OK] o.o.j.t.CASValueTests$ValCas_ValCas\n    (ETA: 00:00:00) (R: 1.07E+07) (T:   1/1) (F: 1/1) (I: 4/5) [OK] o.o.j.t.CASValueTests$ValCas_ValCas\n    (ETA: now) (R: 1.00E+07) (T:   1/1) (F: 1/1) (I: 5/5) [OK] o.o.j.t.CASValueTests$ValCas_ValCas\n\n    ```", "```java\n    [user@localhost ~] mvn archetype:generate -DinteractiveMode=false -DarchetypeGroupId=org.openjdk.jmh -DarchetypeArtifactId=jmh-java-benchmark-archetype -DgroupId=org.benchmark -DartifactId=mybenchmark -Dversion=1.0\n\n    ```", "```java\n    [INFO] project created from Archetype in dir: /home/user/openjdk/mybenchmark\n    [INFO] -------------------------------------------------------\n    [INFO] BUILD SUCCESS\n    [INFO] -------------------------------------------------------\n    [INFO] Total time: 9.188s\n    [INFO] Finished at: Sat Aug 02 20:16:01 BST 2014\n    [INFO] Final Memory: 11M/129M\n    [INFO] -------------------------------------------------------\n\n    ```", "```java\n    package org.benchmark;\n    public class BinarySearch1 {\n        public static int search(long[] arr, long value) {\n            return search(arr, value, 0, arr.length-1);\n        }\n\n        private static int search(long[] arr, long value, int start, int end) {\n            if (end < start) \n                return -1;\n\n            int imid = start + ((end - start) / 2);\n            if (arr[imid] > value)\n                return search(arr, value, start, imid-1);\n            else if (arr[imid] < value)\n                return search(arr, value, imid+1, end);\n            else\n                return imid;\n        }\n    ```", "```java\n    package org.benchmark;\n\n    import org.openjdk.jmh.annotations.*;\n    import java.util.Arrays;\n    import java.util.concurrent.TimeUnit;\n\n    @State(value = Scope.Thread)\n    @BenchmarkMode(Mode.AverageTime)\n    @OutputTimeUnit(TimeUnit.NANOSECONDS)\n    public class MyBenchmark {\n        private long[] data = new long[5000];\n\n        @Setup\n        public void setup() {\n            for (int i = 0; i != data.length; ++i) {\n                data[i]=(long)(Math.random()*Long.MAX_VALUE-1);\n            }\n            Arrays.sort(data);\n        }\n\n        @Benchmark\n        public int testBinarySearch1 () {\n            return BinarySearch1.search(data, Long.MAX_VALUE);\n        }\n    }\n    ```", "```java\n    [user@localhost mybenchmark] mvn clean install\n\n    ```", "```java\n    [user@localhost mybenchmark] java -jar target/benchmarks.jar --wi=10 --i=5 --f=1 --jvmArgs=-server\n\n    ```", "```java\n    # VM invoker: C:\\Usres\\User\\jdk1.7.0\\jre\\bin\\java.exe\n    # VM options: -server\n    # Warmup: 10 iterations, 1 s each\n    # Measurement: 5 iterations, 1 s each\n    # Threads: 1 thread, will synchronize iterations\n    # Benchmark mode: Average time, time/op\n    # Benchmark: org.benchmark.MyBenchmark.testBinarySearch1\n\n    # Run progress: 0.00% complete, ETA 00:00:15\n    # Fork: 1 of 1\n    # Warmup Iteration   1: 74.562 ns/op\n    # Warmup Iteration   2: 75.657 ns/op\n    # Warmup Iteration   3: 79.575 ns/op\n    # Warmup Iteration   4: 75.718 ns/op\n    # Warmup Iteration   5: 76.432 ns/op\n    # Warmup Iteration   6: 75.965 ns/op\n    # Warmup Iteration   7: 73.987 ns/op\n    # Warmup Iteration   8: 75.677 ns/op\n    # Warmup Iteration   9: 76.326 ns/op\n    # Warmup Iteration  10: 77.050 ns/op\n    Iteration   1: 77.027 ns/op\n    Iteration   2: 75.870 ns/op\n    Iteration   3: 77.674 ns/op\n    Iteration   4: 81.460 ns/op\n    Iteration   5: 73.858 ns/op\n\n    Result: 77.178 ±(99.9%) 10.778 ns/op [Average]\n     Statistics: (min, avg, max) = (73.858, 77.178, 81.460), stdev = 2.799\n     Confidence interval (99.9%): [66.400, 87.956]\n\n    # Run complete. Total time: 00:00:18\n    Benchmark                            Mode  Samples   Score  Score error  Units\n    o.b.MyBenchmark.testBinarySearch1    avgt        5  77.178       10.778  ns/op\n\n    ```", "```java\n    package org.benchmark;\n    public class BinarySearch2 {\n        public static int search(long[] arr, long value) {\n            return search(arr, value, 0, arr.length-1);\n        }\n        private static int search(long[] arr, long value, int start, int end) {\n            while (end >= start) {\n                int imid = start + ((end - start) / 2);\n                if(arr[imid] == value)\n                    return imid;\n                else if (arr[imid] < value)\n                    start = imid + 1;\n                else\n                    end = imid - 1;\n            }\n            return -1;\n        }\n    }\n    ```", "```java\n    package org.benchmark;\n\n    import org.openjdk.jmh.annotations.*;\n    import java.util.Arrays;\n    import java.util.concurrent.TimeUnit;\n\n    @State(value = Scope.Group)\n    @BenchmarkMode(Mode.AverageTime)\n    @OutputTimeUnit(TimeUnit.NANOSECONDS)\n    public class MyBenchmark {\n        private long[] data = new long[500000];\n\n        @Setup\n        public void setup() {\n            for (int i = 0; i != data.length; ++i) {\n                data[i] = (long)(Math.random() * (Long.MAX_VALUE-1));\n            }\n            Arrays.sort(data);\n        }\n\n        @Benchmark\n        @Group(value = \"bsearch\")\n        public int testBinarySearch1() {\n            return BinarySearch1.search(data, Long.MAX_VALUE);\n        }\n\n        @Benchmark\n        @Group(value = \"bsearch\")\n        public int testBinarySearch2() {\n            return BinarySearch2.search(data, Long.MAX_VALUE);\n        }\n    }\n    ```", "```java\n    [user@localhost mybenchmark] mvn clean install\n\n    ```", "```java\n    [user@localhost mybenchmark] java -jar target/benchmarks.jar --wi=10 --i=5 --f=1 --jvmArgs=-server\n\n    ```", "```java\n    # Run complete. Total time: 00:00:18\n    Benchmark                                    Mode  Samples   Score  Score error  Units\n    o.b.MyBenchmark.bsearch                      avgt        5  66.929        1.663  ns/op\n    o.b.MyBenchmark.bsearch:testBinarySearch1    avgt        5  79.717        2.289  ns/op\n    o.b.MyBenchmark.bsearch:testBinarySearch2    avgt        5  54.141        1.209  ns/op\n\n    ```", "```java\npublic static void main(String[] args) throws RunnerException {\n    Options opt = new OptionsBuilder()\n            .include(\".*\" + MyBenchmark.class.getSimpleName() + \".*\")\n            .warmupIterations(3)\n            .measurementIterations(3)\n            .forks(2)\n            .build();\n    new Runner(opt).run();\n}\n```", "```java\n[user@localhost mybenchmark] java -jar target/benchmarks.jar --wi=3 --i=3 --f=2\n\n```", "```java\n    hg clone http://hg.openjdk.java.net/code-tools/jmh/ jmh\n\n    ```", "```java\n    mvn clean install –DskipTests\n\n    ```", "```java\n    [INFO] -------------------------------------------------------\n    [INFO] BUILD SUCCESS\n    [INFO] -------------------------------------------------------\n    [INFO] Total time: 3:14.052s\n    [INFO] Finished at: Sat Aug 02 19:43:39 BST 2014\n    [INFO] Final Memory: 38M/176M\n    [INFO] -------------------------------------------------------\n\n    ```", "```java\n    <properties>\n     ...\n     <jmh.version>0.9.3</jmh.version>\n    </properties>\n\n    ```"]