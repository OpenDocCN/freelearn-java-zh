- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is an in-depth guide to using Spring 6 and Spring Boot 3 for web development.
    Spring is a powerful and widely used framework for building scalable and reliable
    web applications in Java. Spring Boot is a popular extension to the framework
    that simplifies the setup and configuration of Spring-based applications. This
    book will teach you how to use these technologies to build modern and robust web
    APIs and services.
  prefs: []
  type: TYPE_NORMAL
- en: The book covers a wide range of topics that are essential for API development,
    such as fundamentals of REST/GraphQL/gRPC, Spring concepts, and API specifications
    and implementation. Additionally, the book covers topics such as asynchronous
    API design, security, designing user interfaces, testing APIs, and the deployment
    of web services. The book provides a highly contextual real-world sample app that
    readers can use as a reference for building different types of APIs for real-world
    apps, including the persistent database layer. The approach taken in the book
    is to guide readers through the entire development cycle of API development, including
    design and specification, implementation, testing, and deployment.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you will have learned how to design, develop, test,
    and deploy scalable and maintainable modern APIs using Spring 6 and Spring Boot
    3, along with best practices to ensure the security and reliability of your applications,
    and practical ideas to improve your application’s functionalities.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is aimed at novice Java programmers, recent computer science graduates,
    coding boot camp alumni, and professionals who are new to creating real-world
    web APIs and services. It is also a valuable resource for Java developers interested
    in transitioning to web development and seeking a comprehensive introduction to
    web service development. The ideal reader possesses knowledge of fundamental programming
    constructs, data structures, and algorithms in Java, but lacks the practical web
    development experience necessary to begin working as a web developer.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B19349_01.xhtml#_idTextAnchor014), *RESTful Web Service Fundamentals*,
    drives you through the fundamentals of RESTful APIs, or, for short, REST APIs,
    and their design paradigm. These basics will provide you with a solid platform
    for developing a RESTful web service. You will also learn about the best practices
    while designing APIs. This chapter will also introduce the example e-commerce
    app that will be used across the book while learning about the different aspects
    of API development.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B19349_02.xhtml#_idTextAnchor048), *Spring Concepts and REST
    APIs*, explores the Spring fundamentals and features that are required to implement
    REST, gRPC, and GraphQL APIs using the Spring Framework. This will provide the
    technical perspective required for developing an example e-commerce app.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B19349_03.xhtml#_idTextAnchor080), *API Specifications and Implementation*,
    makes use of OpenAPI and Spring to implement the REST APIs. We have chosen a design-first
    approach to implementation. You will make use of the OpenAPI specification to
    first design the APIs and later implement them. You will also learn how to handle
    the errors that occur during the serving of the request. Here, the APIs of the
    example e-commerce app will be designed and implemented for reference.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B19349_04.xhtml#_idTextAnchor097), *Writing Business Logic for
    APIs*, helps you implement the API’s code in terms of business logic, along with
    data persistence in the H2 database. You will write services and repositories
    for implementation. You will also add hypermedia and ETag headers to API responses
    for optimal performance and caching.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B19349_05.xhtml#_idTextAnchor116), *Asynchronous API Design*,
    covers asynchronous or reactive API design, where calls will be asynchronous and
    non-blocking. We’ll develop these APIs using Spring WebFlux, which is itself based
    on Project Reactor ([https://projectreactor.io](https://projectreactor.io)). First,
    we’ll walk through the reactive programming fundamentals and then migrate the
    existing e-commerce REST APIs (the previous chapter’s code) to asynchronous (reactive)
    APIs to make things easier by correlating and comparing the existing (imperative)
    way and reactive way of programming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B19349_06.xhtml#_idTextAnchor148), *Securing REST Endpoints Using
    Authorization and Authentication*, explains how you can secure these REST endpoints
    using Spring Security. You’ll implement token-based authentication and authorization
    for REST endpoints. Successful authentication will provide two types of tokens
    – a `Admin`, `User`, and so on. These roles will be used as authorization to make
    sure that REST endpoints can only be accessed if the user holds a certain role.
    We’ll also briefly discuss **cross-site request forgery** (**CSRF**) and **cross-origin
    resource** **sharing** (**CORS**).'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B19349_07.xhtml#_idTextAnchor169), *Designing a User Interface*,
    concludes the end-to-end development and communication between different layers
    of the online shopping app. This UI app will be a `Login`, `Product Listing`,
    `Product Detail`, `Cart`, and `Order Listing`. By the end of the chapter, you
    will have learned about SPA and UI component development using React and consuming
    REST APIs using the browser’s in-built Fetch API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B19349_08.xhtml#_idTextAnchor201), *Testing APIs*, introduces
    manual and automated testing of APIs. You will learn about unit and integration
    test automation. After learning about automation in this chapter, you will be
    able to make both types of testing an integral part of the build. You will also
    set up the Java code coverage tool to calculate the different code coverage metrics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B19349_09.xhtml#_idTextAnchor215), *Deployment of Web Services*,
    explains the fundamentals of containerization, Docker, and Kubernetes. You will
    then use this concept to containerize the example e-commerce app using Docker.
    This container will then be deployed in a Kubernetes cluster. You are going to
    use minikube for Kubernetes, which makes learning and Kubernetes-based development
    easier.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B19349_10.xhtml#_idTextAnchor233), *Getting Started with gRPC*,
    introduces the gRPC fundamentals.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B19349_11.xhtml#_idTextAnchor250), *gRPC API Development and
    Testing*, implements gRPC-based APIs. You will learn how to write a gRPC server
    and client, along with writing APIs based on gRPC. In the latter part of the chapter,
    you will be introduced to microservices and how they will help you to design modern,
    scalable architecture. Here, you will go through the implementation of two services
    – a gRPC server and a gRPC client.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B19349_12.xhtml#_idTextAnchor272), *Adding Logging and Tracing
    to Services*, explores the logging and monitoring tool called the **Elasticsearch,
    Logstash, Kibana** (**ELK**) stack, and Zipkin. These tools will then be used
    to implement the distributed logging and tracing of the request/response of the
    API calls. You will learn how to publish and analyze the logging and tracing of
    different requests and logs related to responses. You will also use Zipkin to
    monitor the performance of API calls.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B19349_13.xhtml#_idTextAnchor288), *Getting Started with GraphQL*,
    talks about the fundamentals of GraphQL – the **schema definition language** (**SDL**),
    queries, mutations, and subscriptions. This knowledge will help you in the next
    chapter, where you will implement an API based on GraphQL. Over the course of
    this chapter, you will learn about the basics of the GraphQL schema and solving
    the N+1 problem.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B19349_14.xhtml#_idTextAnchor313), *GraphQL API Development
    and Testing*, explains GraphQL-based API development and its testing. You will
    implement GraphQL-based APIs for an example application in this chapter. A GraphQL
    server implementation will be developed based on the design-first approach.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Ensure you have the following hardware and software:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Software/hardware covered in** **the book** | **Operating** **system requirements**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Java 17 | Windows, macOS, or Linux (any) |'
  prefs: []
  type: TYPE_TB
- en: '| Any Java IDE such as Netbeans, IntelliJ, or Eclipse | An internet connection
    to clone the code from GitHub and download the dependencies and libraries |'
  prefs: []
  type: TYPE_TB
- en: '| Docker |  |'
  prefs: []
  type: TYPE_TB
- en: '| Kubernetes (minikube) |  |'
  prefs: []
  type: TYPE_TB
- en: '| cURL or any API client such as Insomnia |  |'
  prefs: []
  type: TYPE_TB
- en: '| Node 18.x |  |'
  prefs: []
  type: TYPE_TB
- en: '| VS Code |  |'
  prefs: []
  type: TYPE_TB
- en: '| The ELK stack and Zipkin |  |'
  prefs: []
  type: TYPE_TB
- en: Each chapter will contain special instructions to install the required tools
    if applicable.
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3](https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3).
    If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “If we are using `Link` in any of the models, then
    the generated models would use the mapped `org.springframework.hateoas.Link` class
    instead of the model defined in the YAML file.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “Select **System info** from the **Administration** panel.”'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Modern API Development with Spring 6 and Spring Boot 3*, we’d
    love to hear your thoughts! Please [click here to go straight to the Amazon review
    page](https://packt.link/r/1-804-61327-4) for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: 'Do you like to read on the go but are unable to carry your print books everywhere?     Is your eBook purchase not compatible with the device of your choice?'
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B19349_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/9781804613276](https://packt.link/free-ebook/9781804613276)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 1 – RESTful Web Services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, you will develop and test production-ready and evolving REST-based
    APIs supported by HATEOAS and ETags. API specifications will be written using
    OpenAPI specifications (Swagger). You will learn the fundamentals of reactive
    API development using Spring WebFlux. By the end of this part, you will know the
    fundamentals of REST APIs, their best practices, and how to write evolving APIs.
    After completing this part, you will be able to develop sync and async (reactive)
    non-blocking APIs.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part contains the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B19349_01.xhtml#_idTextAnchor014), *RESTful Web Service Fundamentals*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B19349_02.xhtml#_idTextAnchor048), *Spring Concepts and REST
    APIs*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B19349_03.xhtml#_idTextAnchor080), *API Specifications and Implementation*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B19349_04.xhtml#_idTextAnchor097), *Writing Business Logic for
    APIs*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B19349_05.xhtml#_idTextAnchor116), *Asynchronous API Design*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
