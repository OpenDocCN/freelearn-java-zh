["```java\n<configuration>\n  <property>\n    <name>fs.defaultFS</name>\n    <value>hdfs://localhost:9000</value>\n  </property>\n</configuration>\n```", "```java\n<configuration>\n  <property>\n    <name>dfs.replication</name>\n    <value>1</value>\n  </property>\n</configuration>\n```", "```java\n<configuration>\n  <property>\n    <name>mapred.job.tracker</name>\n    <value>localhost:9001</value>\n  </property>\n</configuration>\n```", "```java\nssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa \ncat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys\n\n```", "```java\n./sbin/start-all.sh\n\n```", "```java\n ./bin/hadoop fs -mkdir -p /karaf/cookbook\n\n```", "```java\n./bin/hadoop fs -ls /karaf\nFound 1 items\ndrwxr-xr-x   - joed supergroup          0 2014-05-15 21:47 /karaf/cookbook\n\n```", "```java\n<features name=\"com.packt.chapter.nine-${project.version}\">\n\n  <repository>mvn:org.apache.cxf.karaf/apache-cxf/3.0.0/xml/features</repository>\n\n  <feature name='xml-specs-api' version='${project.version}' resolver='(obr)' start-level='10'>\n    <bundle dependency='true'>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.0/</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.2/</bundle>\n    <bundle>mvn:org.codehaus.woodstox/stax2-api/</bundle>\n    <bundle>mvn:org.codehaus.woodstox/woodstox-core-asl/</bundle>\n    <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/</bundle>\n  </feature>\n\n  <feature name='hdfs2' version='${project.version}' resolver='(obr)' start-level='50'>\n    <feature>xml-specs-api</feature>\n    <feature>cxf-jaxrs</feature>\n    <bundle dependency='true'>mvn:commons-lang/commons-lang/2.6</bundle>\n    <bundle dependency='true'>mvn:com.google.guava/guava/16.0.1</bundle>\n    <bundle dependency='true'>mvn:com.google.protobuf/protobuf-java/</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.guice/</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jsch/</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.paranamer/</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.avro/1.7.3_1</bundle>\n    <bundle dependency='true'>mvn:org.apache.commons/commons-compress/</bundle>\n    <bundle dependency='true'>mvn:org.apache.commons/commons-math3/3.1.1</bundle>\n    <bundle dependency='true'>mvn:commons-cli/commons-cli/1.2</bundle>\n    <bundle dependency='true'>mvn:commons-configuration/commons-configuration/</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.commons-httpclient/</bundle>\n    <bundle dependency='true'>mvn:io.netty/netty/3.9.2.Final</bundle>\n    <bundle dependency='true'>mvn:org.codehaus.jackson/jackson-core-asl/1.9.12</bundle>\n    <bundle dependency='true'>mvn:org.codehaus.jackson/jackson-mapper-asl/1.9.12</bundle>\n    <bundle dependency=\"true\">mvn:org.codehaus.jackson/jackson-jaxrs/1.9.12</bundle>\n    <bundle dependency=\"true\">mvn:org.codehaus.jackson/jackson-xc/1.9.12</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.snappy-java</bundle>\n    <bundle dependency='true'>mvn:commons-codec/commons-codec/</bundle>\n    <bundle dependency='true'>mvn:commons-collections/commons-collections/3.2.1</bundle>\n    <bundle dependency='true'>mvn:commons-io/commons-io/</bundle>\n    <bundle dependency='true'>mvn:commons-net/commons-net/</bundle>\n    <bundle dependency='true'>mvn:org.apache.zookeeper/zookeeper/</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlenc/0.52_1</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xerces/</bundle>\n    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlresolver/</bundle>\n    <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.hadoop-client/</bundle>\n  </feature>\n\n</features>\n```", "```java\nkaraf@root()> list | grep -i hadoop\n151 | Active |  50 | 2.4.0.1     | Apache ServiceMix :: Bundles :: hadoop-client\n\n```", "```java\n    <Include-Resource>\n      {maven-resources},\n      @org.apache.servicemix.bundles.hadoop-client-2.4.0_1.jar!/core-default.xml,\n      @org.apache.servicemix.bundles.hadoop-client-2.4.0_1.jar!/hdfs-default.xml,\n      @org.apache.servicemix.bundles.hadoop-client-2.4.0_1.jar!/mapred-default.xml,\n      @org.apache.servicemix.bundles.hadoop-client-2.4.0_1.jar!/hadoop-metrics.properties\n    </Include-Resource>\n    ```", "```java\n    <DynamicImport-Package>*</DynamicImport-Package>\n    ```", "```java\n        ClassLoader tccl = Thread.currentThread().getContextClassLoader();\n          try {\n            Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n            .\n          } catch (IOException e) {\n            e.printStackTrace();\n          } finally {\n            Thread.currentThread().setContextClassLoader(tccl);\n          }\n        ```", "```java\n        Configuration conf = new Configuration();\n          conf.set(\"fs.hdfs.impl\", org.apache.hadoop.hdfs.DistributedFileSystem.class.getName());\n          conf.set(\"fs.file.impl\", org.apache.hadoop.fs.LocalFileSystem.class.getName());\n        ```", "```java\n    <dependencies>\n      <dependency>\n        <groupId>org.osgi</groupId>\n        <artifactId>org.osgi.core</artifactId>\n        <version>5.0.0</version>\n      </dependency>\n      <dependency>\n        <groupId>org.osgi</groupId>\n        <artifactId>org.osgi.compendium</artifactId>\n        <version>5.0.0</version>\n      </dependency>\n      <dependency>\n        <groupId>org.osgi</groupId>\n        <artifactId>org.osgi.enterprise</artifactId>\n        <version>5.0.0</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.servicemix.bundles</groupId>\n        <artifactId>org.apache.servicemix.bundles.hadoop-client</artifactId>\n        <version>2.4.0_1</version>\n      </dependency>\n      <!-- custom felix gogo command -->\n      <dependency>\n        <groupId>org.apache.karaf.shell</groupId>\n        <artifactId>org.apache.karaf.shell.console</artifactId>\n        <version>3.0.0</version>\n      </dependency>\n    </dependencies>\n    ```", "```java\n    <plugin>\n      <groupId>org.apache.felix</groupId>\n      <artifactId>maven-bundle-plugin</artifactId>\n      <version>2.4.0</version>\n      <extensions>true</extensions>\n      <configuration>\n        <instructions>\n          <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n\n          <Export-Package>\n            com.packt.hadoop.demo*\n          </Export-Package>\n          <Import-Package>\n            org.osgi.service.blueprint;resolution:=optional,\n            org.apache.felix.service.command,\n            org.apache.felix.gogo.commands,\n            org.apache.karaf.shell.console,\n            org.apache.hadoop*,\n            *\n          </Import-Package>\n\n          <Include-Resource>\n            {maven-resources},\n            @org.apache.servicemix.bundles.hadoop-client-2.4.0_1.jar!/core-default.xml,\n            @org.apache.servicemix.bundles.hadoop-client-2.4.0_1.jar!/hdfs-default.xml,\n            @org.apache.servicemix.bundles.hadoop-client-2.4.0_1.jar!/mapred-default.xml,\n            @org.apache.servicemix.bundles.hadoop-client-2.4.0_1.jar!/hadoop-metrics.properties\n          </Include-Resource>\n\n          <DynamicImport-Package>*</DynamicImport-Package>\n        </instructions>\n      </configuration>\n    </plugin>\n    ```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n    <blueprint default-activation=\"eager\">\n      <!-- Define RecipeBookService Services, and expose them. -->\n      <bean id=\"hdfsConfigService\" class=\"com.packt.hadoop.demo.hdfs.HdfsConfigServiceImpl\" init-method=\"init\" destroy-method=\"destroy\"/>\n\n      <service ref=\"hdfsConfigService\" interface=\"com.packt.hadoop.demo.api.HdfsConfigService\"/>\n\n      <!-- Apache Karaf Commands -->\n      <command-bundle >\n        <command>\n          <action class=\"com.packt.hadoop.demo.commands.ReadConfigs\">\n            <property name=\"hdfsConfigService\" ref=\"hdfsConfigService\"/>\n          </action>\n        </command>\n        <command>\n          <action class=\"com.packt.hadoop.demo.commands.StoreConfigs\">\n            <property name=\"hdfsConfigService\" ref=\"hdfsConfigService\"/>\n          </action>\n        </command>\n\n      </command-bundle>\n    </blueprint>\n    ```", "```java\n        package com.packt.hadoop.demo.api;\n\n        public interface HdfsConfigService {\n\n          static final String HDFS_LOCATION = \"/karaf/cookbook/etc\";\n\n          void storeConfigs();\n\n          void readConfigs();\n        }\n        ```", "```java\n        public class HdfsConfigServiceImpl implements HdfsConfigService {\n\n          private final static String BASE_HDFS = \"hdfs://localhost:9000\";\n\n          @Override\n          public void storeConfigs() {\n            String KARAF_etc = System.getProperty(\"karaf.home\") + \"/etc\";\n            Collection<File> files = FileUtils.listFiles(new File(KARAF_etc), new String[]{\"cfg\"}, false);\n\n            for (File f : files) {\n              System.out.println(f.getPath());\n\n              ClassLoader tccl = Thread.currentThread().getContextClassLoader();\n              try {\n                Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n                String cfg = FileUtils.readFileToString(f);\n\n                Path pt = new Path(BASE_HDFS + HDFS_LOCATION + \"/\" + f.getName());\n\n                Configuration conf = new Configuration();\n                conf.set(\"fs.hdfs.impl\", org.apache.hadoop.hdfs.DistributedFileSystem.class.getName());\n                conf.set(\"fs.file.impl\", org.apache.hadoop.fs.LocalFileSystem.class.getName());\n\n                FileSystem fs = FileSystem.get(conf);\n\n                BufferedWriter br = new BufferedWriter(new OutputStreamWriter(fs.create(pt, true)));\n                // TO append data to a file, use fs.append(Path f)\n\n                br.write(cfg);\n                br.close();\n              } catch (IOException e) {\n                e.printStackTrace();\n              } finally {\n                Thread.currentThread().setContextClassLoader(tccl);\n              }\n            }\n          }\n\n          @Override\n          public void readConfigs() {\n            try {\n\n              FileSystem fs = FileSystem.get(new Configuration());\n              FileStatus[] status = fs.listStatus(new Path(BASE_HDFS + HDFS_LOCATION));\n              for (int i = 0;i < status.length;i++) {\n                BufferedReader br = new BufferedReader(new InputStreamReader(fs.open(status[i].getPath())));\n                String line;\n                line = br.readLine();\n                while (line != null) {\n                  System.out.println(line);\n                  line = br.readLine();\n                }\n              }\n            } catch (Exception e) {\n              e.printStackTrace();\n            }\n          }\n\n          public void init() {\n\n          }\n\n          public void destroy() {\n\n          }\n        }\n        ```", "```java\n    <!-- Apache Karaf Commands -->\n    <command-bundle >\n      <command>\n        <action class=\"com.packt.hadoop.demo.commands.ReadConfigs\">\n          <property name=\"hdfsConfigService\" ref=\"hdfsConfigService\"/>\n        </action>\n      </command>\n      <command>\n        <action class=\"com.packt.hadoop.demo.commands.StoreConfigs\">\n          <property name=\"hdfsConfigService\" ref=\"hdfsConfigService\"/>\n        </action>\n      </command>\n\n    </command-bundle>\n    ```", "```java\n    karaf@root()> feature:repo-add mvn:com.packt/chapter-9-recipe1/1.0.0-SNAPSHOT/xml/features\n    Adding feature url mvn:com.packt/chapter-9-recipe1/1.0.0-SNAPSHOT/xml/features\n\n    karaf@root()> feature:install hdfs2\n    karaf@root()>\n\n    karaf@root()> list\n    START LEVEL 100 , List Threshold: 50\n     ID | State  | Lvl | Version        | Name\n    --------------------------------------------------------------\n    126 | Active |  50 | 2.6            | Commons Lang\n    127 | Active |  50 | 16.0.1         | Guava: Google Core Libraries for Java\n    128 | Active |  50 | 2.5.0          | Protocol Buffer Java API\n    129 | Active |  50 | 3.0.0.1        | Apache ServiceMix :: Bundles :: guice \n    130 | Active |  50 | 0.1.51.1       | Apache ServiceMix :: Bundles :: jsch \n    131 | Active |  50 | 2.6.0.1        | Apache ServiceMix :: Bundles :: paranamer \n    132 | Active |  50 | 1.7.3.1        | Apache ServiceMix :: Bundles :: avro \n    133 | Active |  50 | 1.8.1          | Apache Commons Compress\n    134 | Active |  50 | 3.1.1          | Commons Math\n    135 | Active |  50 | 1.2            | Commons CLI\n    136 | Active |  50 | 1.10.0         | Apache Commons Configuration\n    137 | Active |  50 | 3.1.0.7        | Apache ServiceMix :: Bundles :: commons-httpclient\n    138 | Active |  50 | 3.9.2.Final    | The Netty Project\n    139 | Active |  50 | 1.9.12         | Jackson JSON processor\n    140 | Active |  50 | 1.9.12         | Data mapper for Jackson JSON processor\n    141 | Active |  50 | 1.9.12         | JAX-RS provider for JSON content type, using Jackson data binding\n    142 | Active |  50 | 1.9.12         | XML Compatibility extensions for Jackson data binding\n    143 | Active |  50 | 1.0.4.1_1      | Apache ServiceMix :: Bundles :: snappy-java\n    144 | Active |  50 | 1.9.0          | Apache Commons Codec\n    145 | Active |  50 | 3.2.1          | Commons Collections\n    146 | Active |  50 | 2.4.0          | Commons IO\n    147 | Active |  50 | 3.3.0          | Commons Net\n    148 | Active |  50 | 3.4.6          | ZooKeeper Bundle\n    149 | Active |  50 | 0.52.0.1       | Apache ServiceMix :: Bundles :: xmlenc\n    150 | Active |  50 | 2.11.0.1       | Apache ServiceMix :: Bundles :: xercesImpl\n    151 | Active |  50 | 2.4.0.1        | Apache ServiceMix :: Bundles :: hadoop-client\n    152 | Active |  80 | 1.0.0.SNAPSHOT | Chapter 9 :: Manage Big Data with Apache Hadoop - HDFS Client Example.\n    karaf@root()>\n\n    ```", "```java\n    karaf@root()>  install –s mvn:com.packt/chapter-9-recipe1/1.0.0-SNAPSHOT\n\n    ```", "```java\n    karaf@root()> test:storeconfigs \n    karaf@root()> test:readconfigs \n    karaf@root()>\n\n    ```"]