["```java\nimport greenfoot.*;\nimport java.nio.*;\nimport java.nio.file.*;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class AvoiderGameOverWorld extends World {\n  public AvoiderGameOverWorld() {\n    super(600, 400, 1);\n  }\n\n  public void act() {\n    if( Greenfoot.mouseClicked(this) ) {\n      AvoiderWorld world = new AvoiderWorld();\n      Greenfoot.setWorld(world);\n    }\n  }\n\n  public void setPlayerHighScore(String s) {\n    Label scoreBoardMsg = new Label(\"Your Score: \" + s, 35);\n    Label highScoreMsg = new Label(\"Your Best: \" + recordAndReturnHighScore(s), 35);\n    addObject(scoreBoardMsg, getWidth()/2, getHeight()*2/3);\n    addObject(highScoreMsg, getWidth()/2, (getHeight()*2/3)+45);\n  }\n\n  private String recordAndReturnHighScore(String s) {\n    String hs = null;\n    try {\n      Path scoreFile = Paths.get(\"./scoreFile.txt\");\n\n      if( Files.exists(scoreFile) ) {\n        byte[] bytes = Files.readAllBytes(scoreFile);\n        hs = new String(bytes);\n\n        if( Integer.parseInt(s) > Integer.parseInt(hs) ) {\n          Files.write(scoreFile, s.getBytes());\n          hs = s;\n        }\n      } else {\n        Files.write(scoreFile, s.getBytes());\n        hs = s;\n      }\n\n    } catch( IOException e ) {\n      System.out.println(\"IOException\");\n    }\n\n    return hs;\n  }\n}\n```", "```java\nimport greenfoot.*;\nimport java.awt.Color;\n\npublic class Label extends Actor\n{\n  GreenfootImage msg;\n\n  public Label(String s, int size) {\n    this(s, size, Color.white);\n  }\n\n  public Label(String s, int size, Color c) {\n    msg = new GreenfootImage(s, size, c, null);\n    setImage(msg);\n  }\n}\n```", "```java\npublic void endGame() {\n  bkgMusic.stop();\n  AvoiderGameOverWorld go = new AvoiderGameOverWorld();\n  go.setPlayerHighScore(Integer.toString(scoreBoard.getScore()));\n  Greenfoot.setWorld(go);\n}\n```", "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class BadgeCenter //Implemented as a Singleton\n{\n  private int clovers, rocks, enemies, cupcakes;\n  int rockBadges;\n  private String previous;\n  private ArrayList<Badge> badges = new ArrayList<Badge>();\n  private static final BadgeCenter INSTANCE = new BadgeCenter();\n\n  private BadgeCenter() {\n    clovers = rocks = enemies = cupcakes = 0;\n    rockBadges = 0;\n  }\n\n  public static BadgeCenter getInstance() {\n    return INSTANCE;\n  }\n\n  public void hitClover() {\n    ++clovers;\n    previous = \"clover\";\n    if( clovers % 20 == 0 ) {\n      if( clovers > 80 ) {\n        awardBadge(\"Magically Delicious \");\n      } else {\n        awardBadge(clovers + \" Clovers \");\n      }\n    }\n  }\n\n  public void hitRock() {\n    if( previous != \"rock\" ) {\n      rocks = 0;\n    }\n    ++rocks;\n    previous = \"rock\";\n    if( rocks > 2 ) {\n      rockBadges++;\n      rocks = 0;\n    }\n  }\n\n  public void hitEnemy() {\n    ++enemies;\n    previous = \"enemy\";\n    if( enemies % 10 == 0 ) {\n      if( enemies > 60 ) {\n        awardBadge( \"Unbreakable \" );\n      } else {\n        awardBadge(\"Hit \" + enemies + \" times \");\n      }\n    }\n  }\n\n  public void hitCupcake() {\n    ++cupcakes; // Check if under 3 when return badges\n    previous = \"cupcake\";\n  }\n\n  public List<Badge> getBadges() {\n    if( cupcakes < 3 ) {\n      awardBadge(\"Master Avoider \");\n    }\n    if( rockBadges > 0 ) {\n      awardBadge(\"Turkey x \" + rockBadges + \" \");\n    }\n    cupcakes = 0;\n    return badges;\n  }\n\n  private void awardBadge(String title) {\n    badges.add(new Badge(title));\n  }\n\n}\n```", "```java\npublic AvoiderGameOverWorld() {\n  super(600, 400, 1);\n\n  List<Badge> badgeList = BadgeCenter.getInstance().getBadges();\n  int yPos = 130;\n  while(!badgeList.isEmpty()) {\n    Badge nextBadge = badgeList.remove(0);\n    addObject(nextBadge, 60, yPos);\n    yPos += 70;\n  }\n\n}\n```", "```java\nimport java.util.List;\n```", "```java\nimport greenfoot.*;\nimport java.awt.Color;\n\npublic class Badge extends Actor {\n  GreenfootImage bkg;\n  GreenfootImage msg;\n\n  public Badge(String s) {\n    bkg = getImage();\n    msg = new GreenfootImage(s, 14, Color.white, null);\n    bkg.drawImage(msg, 10, 20);\n    setImage(bkg);\n  }\n\n}\n```", "```java\nimport greenfoot.*; \n\npublic class AvoiderGameIntroScreen extends World {\n  Actor startButton, creditButton, storyButton;\n\n  public AvoiderGameIntroScreen() {  \n    super(600, 400, 1); \n    startButton = addButton(\"Start Game\", getWidth()/2, getHeight()*2/3);\n    creditButton = addButton(\"Credits Screen\", getWidth()/2, (getHeight()*2/3)+40);\n    storyButton = addButton(\"Story Screen\", getWidth()/2, (getHeight()*2/3)+80);\n  }\n\n  public void act() {\n    if( Greenfoot.mouseClicked(startButton) ) {\n      AvoiderWorld world = new AvoiderWorld();\n      Greenfoot.setWorld(world);\n    } else if( Greenfoot.mouseClicked(creditButton) ) {\n      AvoiderGameCreditScreen world = new AvoiderGameCreditScreen();\n      Greenfoot.setWorld(world);\n    } else if( Greenfoot.mouseClicked(storyButton) ) {\n      AvoiderGameStoryScreen world = new AvoiderGameStoryScreen();\n      Greenfoot.setWorld(world);\n    }\n  }\n\n  private Actor addButton(String s, int x, int y) {\n    Actor button = new Label(s, 24);\n    addObject(button, x, y);\n    return button;\n  }\n}\n```", "```java\nimport greenfoot.*;\nimport java.awt.Color;\n\npublic class Score extends Actor{\n  Label msg;\n  int counter = 0;\n\n  public Score() {\n    msg = new Label(\"0\", 24, Color.black);\n  }\n\n  protected void addedToWorld(World w) {\n    w.addObject(msg, getX(), getY() + 5);\n  }\n\n  public void addScore(int i) {\n    counter = counter + i;\n    updateImage();\n  }\n\n  public int getScore() {\n    return counter;\n  }\n\n  private void updateImage() {\n    getWorld().removeObject(msg);\n    msg = new Label(Integer.toString(counter), 24, Color.black);\n    getWorld().addObject(msg, getX(), getY() + 5);\n  }\n\n}\n```", "```java\npublic void sayAhhh() {\n  ahhh.play();\n}\n```", "```java\npublic void sayWoot() {\n  woot.play();\n}\n```", "```java\nprivate GreenfootSound woot;\nprivate GreenfootSound ahhh;\n```", "```java\nwoot = new GreenfootSound(\"sounds/woot.wav\");\nahhh = new GreenfootSound(\"sounds/ahhh.wav\");\n```", "```java\nprotected void checkHitAvatar() {\n  Avatar a = (Avatar) getOneIntersectingObject(Avatar.class);\n  if( a != null ) {\n    bc.hitCupcake();\n    a.sayWoot();\n    a.stun();\n    getWorld().removeObject(this);\n  }\n}\n```", "```java\nprotected void checkHitAvatar() {\n  Avatar a = (Avatar) getOneIntersectingObject(Avatar.class);\n  if( a != null ) {\n    bc.hitClover();\n    a.sayWoot();\n    a.lagControls();\n    getWorld().removeObject(this);\n  }\n}\n```", "```java\nprotected void checkHitAvatar() {\n  Avatar a = (Avatar) getOneIntersectingObject(Avatar.class);\n  if( a != null ) {\n    bc.hitRock();\n    a.sayAhhh();\n    a.addHealth();\n    getWorld().removeObject(this);\n  }\n}\n```", "```java\nprivate void increaseLevel() {\n  int score = scoreBoard.getScore();\n\n  if( score > nextLevel ) {\n    enemySpawnRate += 4;\n    enemySpeed++;\n    cupcakeFrequency += 3;\n    cloverFrequency += 3;\n    healthFrequency += 1;\n    nextLevel += 50;\n  }\n}\n```"]