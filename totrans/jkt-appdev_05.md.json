["```java\n<form id=\"customerForm\">\n  <!-- layout markup omitted for brevity -->\n  <label for=\"salutation\">Salutation</label>\n  <select id=\"salutation\" name=\"salutation\" >\n    <option value=\"\"> </option>\n    <option value=\"Mr\">Mr</option>\n    <option value=\"Mrs\">Mrs</option>\n    <option value=\"Miss\">Miss</option>\n    <option value=\"Ms\">Ms</option>\n    <option value=\"Dr\">Dr</option>\n  </select>\n  <label for=\"firstName\">First Name</label>\n  <input type=\"text\" maxlength=\"10\" id=\"firstName\"\n    name=\"firstName\" placeholder=\"First Name\">\n  <label for=\"middleName\">Middle Name</label>\n  <input type=\"text\" maxlength=\"10\"  id=\"middleName\"\n    name=\"middleName\" placeholder=\"Middle Name\">\n  <label for=\"lastName\">Last Name</label>\n  <input type=\"text\" maxlength=\"20\"  id=\"lastName\"\n    name=\"lastName\" placeholder=\"Last Name\">\n  <button type=\"submit\" id=\"submitBtn\" >Submit</button>\n</form>\n```", "```java\n<script>\n  async function createCustomer(json) {\n    try {\n      const response = await fetch(  'http://localhost:8080/\nCrudController/resources/customercontroller/', {\n        method: 'POST',\n        body: json,\n        headers: {\n          'Content-Type': 'application/json'\n}\n      });\n      document.querySelector(\"#msg\").innerHTML =\n        \"Customer saved successfully.\"\n    } catch (error) {\n      document.querySelector(\"#msg\").innerHTML =\n        \"There was an error saving customer data.\";\n    }\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"form submitted\");\n    const formData = new FormData(event.target);\n    var formDataObject = {};\n    formData.forEach(function (value, key) {\n      formDataObject[key] = value;\n    });\n    var json = JSON.stringify(formDataObject);\n    createCustomer(json);\n  }\n  const form = document.querySelector('#customerForm');\n  form.addEventListener('submit', handleSubmit);\n</script>\n```", "```java\npackage com.ensode.jakartaeebook.microservices.crudcontroller.service;\n//imports omitted for brevity\n@Path(\"/customercontroller\")\npublic class CustomerControllerService {\n  @OPTIONS\n  public Response options() {\n    LOG.log(Level.INFO, \"CustomerControllerService.options() \ninvoked\");\n    return Response.ok(\"\")\n      .header(\"Access-Control-Allow-Origin\",\n        \"http://localhost:8080\")\n      .header(\"Access-Control-Allow-Headers\",\n        \"origin, content-type, accept, authorization\")\n      .header(\"Access-Control-Allow-Credentials\", \"true\")\n      .header(\"Access-Control-Allow-Methods\",\n        \"GET, POST, PUT, DELETE, OPTIONS, HEAD\")\n      .header(\"Access-Control-Max-Age\", \"1209600\")\n        .build();\n  }\n  @POST\n  @Consumes(MediaType.APPLICATION_JSON)\n  public Response addCustomer(Customer customer) {\n    Response response;\n    Response persistenceServiceResponse;\n    CustomerPersistenceClient client = new \n      CustomerPersistenceClient();\n    persistenceServiceResponse = client.create(customer);\n    client.close();\n    if (persistenceServiceResponse.getStatus() == 201) {\n      response = Response.ok(\"{}\").\n        header(\"Access-Control-Allow-Origin\",\n        \"http://localhost:8080\").build();\n    } else {\n      response = Response.serverError().\n        header(\"Access-Control-Allow-Origin\",\n        \"http://localhost:8080\").build();\n    }\n    return response;\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.microservices.crudcontroller.restclient;\n//imports omitted\npublic class CustomerPersistenceClient {\n  private final WebTarget webTarget;\n  private final Client client;\n  private static final String BASE_URI =\n   \"http://localhost:8080/CrudPersistence/resources\";\n  public CustomerPersistenceClient() {\n    client = ClientBuilder.newClient();\n    webTarget = client.target(BASE_URI).path(\n      \"customerpersistence\");\n  }\n  public Response create(Customer customer)\n    throws ClientErrorException {\n    return webTarget.request(\n      MediaType.APPLICATION_JSON).post(\n      Entity.entity(customer,\n      MediaType.APPLICATION_JSON), Response.class);\n  }\n  public void close() {\n    client.close();\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.microservices.crudpersistence.service;\n//imports omitted for brevity\n@ApplicationScoped\n@Path(\"customerpersistence\")\npublic class CustomerPersistenceService {\n  private static final Logger LOG =\n    Logger.getLogger(\n      CustomerPersistenceService.class.getName());\n  @Context\n  private UriInfo uriInfo;\n  @Inject\n  private CrudDao customerDao;\n  @POST\n  @Consumes(MediaType.APPLICATION_JSON)\n  public Response create(Customer customer) {\n    try {\n      customerDao.create(customer);\n    } catch (Exception e) {\n      LOG.log(Level.SEVERE, \"Exception caught\", e);\n      return Response.serverError().build();\n    }\n    return Response.created(uriInfo.getAbsolutePath()).build();\n  }\n}\n```", "```java\npackage com.ensode.jakartaeebook.microservices.crudpersistence.dao;\n//imports omitted for brevity\n@ApplicationScoped\n@DataSourceDefinition(name = \n    \"java:app/jdbc/microservicesCrudDatasource\",\n        className = \"org.h2.jdbcx.JdbcDataSource\",\n        url = \"jdbc:h2:tcp://127.0.1.1:9092/mem:microservicescrud\",\n        user = \"sa\",\n        password = \"\")\npublic class CrudDao {\n  @PersistenceContext(unitName = \"CustomerPersistenceUnit\")\n  private EntityManager em;\n  @H2DatabaseWrapper\n  public void create(Customer customer) {\n    em.persist(customer);\n  }\n}\n```"]