["```java\nbuildscript {\n     repositories {\n         mavenCentral()\n     }\n\n     dependencies {\n         classpath 'me.tatarka:gradle-retrolambda:3.6.1'\n     }\n }\n\n apply plugin: 'com.android.application'\n apply plugin: 'me.tatarka.retrolambda'\n\n android {\n     compileSdkVersion 25\n     buildToolsVersion \"25.0.2\"\n     defaultConfig {\n         applicationId \"com.packtpub.rxjavademo\"\n         minSdkVersion 22\n         targetSdkVersion 25\n         versionCode 1\n         versionName \"1.0\"\n         testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n     }\n     buildTypes {\n         release {\n             minifyEnabled false\n             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n         }\n     }\n     compileOptions {\n         sourceCompatibility JavaVersion.VERSION_1_8\n         targetCompatibility JavaVersion.VERSION_1_8\n     }\n }\n\n dependencies {\n     compile fileTree(dir: 'libs', include: ['*.jar'])\n     androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n         exclude group: 'com.android.support', module: 'support-annotations'\n     })\n     compile 'com.android.support:appcompat-v7:25.3.1'\n     compile 'com.android.support.constraint:constraint-layout:1.0.2'\n     testCompile 'junit:junit:4.12'\n }\n```", "```java\n compile 'io.reactivex.rxjava2:rxjava:2.1.0'\n compile 'io.reactivex.rxjava2:rxandroid:2.0.1'\n compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'\n```", "```java\nbuildscript {\n     repositories {\n         mavenCentral()\n     }\n\n     dependencies {\n         classpath 'me.tatarka:gradle-retrolambda:3.6.1'\n     }\n }\n\n apply plugin: 'com.android.application'\n apply plugin: 'me.tatarka.retrolambda'\n\n android {\n     compileSdkVersion 25\n     buildToolsVersion \"25.0.2\"\n     defaultConfig {\n         applicationId \"com.packtpub.rxjavademo\"\n         minSdkVersion 22\n         targetSdkVersion 25\n         versionCode 1\n         versionName \"1.0\"\n         testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n     }\n     buildTypes {\n         release {\n             minifyEnabled false\n             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n         }\n     }\n     compileOptions {\n         sourceCompatibility JavaVersion.VERSION_1_8\n         targetCompatibility JavaVersion.VERSION_1_8\n     }\n }\n\n dependencies {\n     compile fileTree(dir: 'libs', include: ['*.jar'])\n     androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n         exclude group: 'com.android.support', module: 'support-annotations'\n     })\n     compile 'com.android.support:appcompat-v7:25.3.1'\n     compile 'com.android.support.constraint:constraint-layout:1.0.2'\n\n     compile 'io.reactivex.rxjava2:rxjava:2.1.0'\n     compile 'io.reactivex.rxjava2:rxandroid:2.0.1'\n     compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'\n\n     testCompile 'junit:junit:4.12'\n }\n```", "```java\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <android.support.constraint.ConstraintLayout\n\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     tools:context=\"com.packtpub.rxjavademo.MainActivity\">\n\n     <TextView\n         android:id=\"@+id/my_text_view\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n         android:text=\"Hello World!\"\n         app:layout_constraintBottom_toBottomOf=\"parent\"\n         app:layout_constraintLeft_toLeftOf=\"parent\"\n         app:layout_constraintRight_toRightOf=\"parent\"\n         app:layout_constraintTop_toTopOf=\"parent\" />\n\n </android.support.constraint.ConstraintLayout>\n```", "```java\n package com.packtpub.rxjavademo;\n\n import android.support.v7.app.AppCompatActivity;\n import android.os.Bundle;\n import android.widget.TextView;\n import java.util.concurrent.TimeUnit;\n import io.reactivex.Observable;\n import io.reactivex.android.schedulers.AndroidSchedulers;\n\n public class MainActivity extends AppCompatActivity {\n\n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_main);\n\n         TextView myTextView = (TextView) findViewById(R.id.my_text_view);\n\n         Observable.just(\"Goodbye World!\")\n                     .delay(3, TimeUnit.SECONDS)\n                     .observeOn(AndroidSchedulers.mainThread())\n                     .subscribe(s -> myTextView.setText(s));\n     }\n }\n```", "```java\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <android.support.constraint.ConstraintLayout\n\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     tools:context=\"com.packtpub.rxjavademo.MainActivity\">\n\n     <LinearLayout \n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n         android:orientation=\"vertical\"\n         tools:layout_editor_absoluteY=\"8dp\"\n         tools:layout_editor_absoluteX=\"8dp\">\n\n     <Button\n         android:id=\"@+id/increment_button\"\n         android:text=\"Increment\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\" />\n     <TextView\n         android:id=\"@+id/my_text_view\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n         android:text=\"0\"/>\n </LinearLayout>\n\n </android.support.constraint.ConstraintLayout>\n```", "```java\n package com.packtpub.rxjavademo;\n\n import android.os.Bundle;\n import android.support.v7.app.AppCompatActivity;\n import android.widget.Button;\n import android.widget.TextView;\n\n import com.jakewharton.rxbinding2.view.RxView;\n\n public class MainActivity extends AppCompatActivity {\n\n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_main);\n\n         TextView myTextView = (TextView) findViewById(R.id.my_text_view);\n         Button incrementButton = (Button) findViewById(R.id.increment_button);\n\n         //broadcast clicks into a cumulative increment, and display in TextView\n         RxView.clicks(incrementButton)\n                 .map(o -> 1)\n                 .scan(0,(total, next) -> total + next)\n                 .subscribe(i -> myTextView.setText(i.toString()));\n     }\n }\n```", "```java\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <android.support.constraint.ConstraintLayout \n\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     tools:context=\"com.packtpub.rxjavaapp.MainActivity\">\n\n     <TextView\n         android:id=\"@+id/timer_field\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n         android:text=\"0\"\n         app:layout_constraintBottom_toBottomOf=\"parent\"\n         app:layout_constraintLeft_toLeftOf=\"parent\"\n         app:layout_constraintRight_toRightOf=\"parent\"\n         app:layout_constraintTop_toTopOf=\"parent\" />\n\n </android.support.constraint.ConstraintLayout>\n```", "```java\n package com.packtpub.rxjavaapp;\n\n import android.support.v7.app.AppCompatActivity;\n import android.os.Bundle;\n import android.widget.TextView;\n\n import java.util.concurrent.TimeUnit;\n\n import io.reactivex.Observable;\n import io.reactivex.android.schedulers.AndroidSchedulers;\n import io.reactivex.disposables.Disposable;\n\n public class MainActivity extends AppCompatActivity {\n\n     private final Observable<String> timer;\n     private Disposable disposable;\n\n     MainActivity() {\n         timer = Observable.interval(1, TimeUnit.SECONDS)\n                 .map(i -> Long.toString(i))\n                 .observeOn(AndroidSchedulers.mainThread());\n     }\n\n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_main);\n     }\n\n     @Override\n     protected void onPause() {\n         super.onPause();\n         disposable.dispose();\n     }\n\n     @Override\n     protected void onResume() {\n         super.onResume();\n         TextView tv = (TextView) findViewById(R.id.timer_field);\n         disposable = timer.subscribe(s -> tv.setText(s));\n\n     }\n\n     @Override\n     protected void onDestroy() {\n         super.onDestroy();\n         if (disposable != null)\n             disposable.dispose();\n     }\n }\n```", "```java\n package com.packtpub.rxjavaapp;\n\n import android.support.v7.app.AppCompatActivity;\n import android.os.Bundle;\n import android.widget.TextView;\n\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicInteger;\n\n import io.reactivex.Observable;\n import io.reactivex.android.schedulers.AndroidSchedulers;\n import io.reactivex.disposables.Disposable;\n\n public class MainActivity extends AppCompatActivity {\n\n     private final Observable<String> timer;\n     private final AtomicInteger lastValue = new AtomicInteger(0);\n     private Disposable disposable;\n\n     MainActivity() {\n         timer = Observable.interval(1, TimeUnit.SECONDS)\n                 .map(i -> 1)\n                 .startWith(Observable.fromCallable(lastValue::get))\n                 .scan((current,next) -> current + next)\n                 .doOnNext(lastValue::set)\n                 .map(i -> Integer.toString(i))\n                 .observeOn(AndroidSchedulers.mainThread());\n     }\n\n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_main);\n     }\n\n     @Override\n     protected void onPause() {\n         super.onPause();\n         disposable.dispose();\n     }\n\n     @Override\n     protected void onResume() {\n         super.onResume();\n         TextView tv = (TextView) findViewById(R.id.timer_field);\n         disposable = timer.subscribe(s -> tv.setText(s));\n\n     }\n\n     @Override\n     protected void onDestroy() {\n         super.onDestroy();\n\n         if (disposable != null)\n             disposable.dispose();\n     }\n }\n```"]