["```java\nimport java.nio.ByteBuffer;\nimport java.nio.channels.AsynchronousFileChannel;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.nio.file.StandardOpenOption;\nimport java.util.concurrent.Future;\n```", "```java\npublic class CH12AsyncFileReadExample {\n  public static void main(String[] args) {\n    Path path = Paths.get(\"ch12.txt\");\n    try (AsynchronousFileChannel fileChannel = AsynchronousFileChannel.open(path, StandardOpenOption.READ)) {\n      ByteBuffer buffer = ByteBuffer.allocate(1024);\n      Future<Integer> result = fileChannel.read(buffer, 0);\n      while (!result.isDone()) {\n        System.out.println(\"Processing something else while reading \n        input...\");\n      }\n      int bytesRead = result.get();\n      System.out.println(bytesRead + \" bytes read\");\n      buffer.flip();\n      byte[] data = new byte[bytesRead];\n      buffer.get(data);\n      System.out.println(\"Read data: \" + new String(data));\n    } catch (Exception e) {\n       System.err.println(\"Error encountered: \" + e.getMessage());\n    }\n  }\n}\n```", "```java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\npublic class CH12BufferedReadWriteExample {\n  public static void main(String[] args) {\n    String inputFilePath = \"input.txt\";\n    String outputFilePath = \"output.txt\";\n    try (BufferedReader reader = new BufferedReader(new \n    FileReader(inputFilePath));\n    BufferedWriter writer = new BufferedWriter(new \n    FileWriter(outputFilePath))) {\n      String line;\n      while ((line = reader.readLine()) != null) {\n        writer.write(line);\n        writer.newLine();\n      }\n    } catch (IOException e) {\n        System.err.println(\"An error occurred: \" + e.getMessage());\n    }\n  }\n}\n```", "```java\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n```", "```java\npublic class CH12JDBCBatchExample {\n  public static void main(String[] args) {\n    String url = \"jdbc:mysql://localhost/testdb\";\n    String user = \"root\";\n    String password = \"password\";\n```", "```java\n    String sql = \"INSERT INTO staff (name, department) VALUES (?, ?)\";\n    try (Connection conn = DriverManager.getConnection(url, user, \n    password);\n      PreparedStatement statement = conn.prepareStatement(sql)) {\n      conn.setAutoCommit(false); // Turn off auto-commit\n      // Add batch operations\n      statement.setString(1, \"Brenda\");\n      statement.setString(2, \"Marketing\");\n      statement.addBatch();\n      statement.setString(1, \"Chris\");\n      statement.setString(2, \"Warehouse\");\n      statement.addBatch();\n      statement.setString(1, \"Diana\");\n      statement.setString(2, \"HR\");\n      statement.addBatch();\n      int[] updateCounts = statement.executeBatch();\n      conn.commit(); // Commit all the changes\n      System.out.println(\"Rows inserted: \" + updateCounts.length);\n    } catch (SQLException e) {\n       System.err.println(\"SQL Exception: \" + e.getMessage());\n    }\n  }\n}\n```", "```java\n    mn create-app example.micronaut.CH12Service --features=http-server\n    ```", "```java\n    package example.micronaut;\n    import io.micronaut.http.annotation.Controller;\n    import io.micronaut.http.annotation.Get;\n    @Controller(\"/ch12\")\n    public class CH12Controller {\n        @Get(\"/\")\n        public String index() {\n            return \"Hello from CH12's Micronaut!\";\n        }\n    }\n    ```", "```java\n    ./gradlew run\n    ```", "```java\nimport org.eclipse.microprofile.config.inject.ConfigProperty;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.MediaType;\n@Path(\"/hello\")\npublic class CH12HelloController {\n    @ConfigProperty(name = \"username\")\n    String username;\n    @GET\n    @Produces(MediaType.TEXT_PLAIN)\n    public String hello() {\n        return \"Hello \" + username + \", from MicroProfile!\";\n    }\n}\n```"]