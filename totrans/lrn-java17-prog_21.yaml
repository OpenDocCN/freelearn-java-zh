- en: Assessments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B18388_01_ePub.xhtml#_idTextAnchor015) – Getting Started with
    Java 17'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: c) Java Development Kit
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b) Java Class Library
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d) Java Standard Edition
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b) Integrated Development Environment
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) Project building, b) Project configuration, c) Project documentation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) boolean, b) numeric
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) long, c) short, d) byte
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d) Value representation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) \\ , b) 2_0 , c) 2__0f , d) \f
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) % , c) & , d) ->
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) 0
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b) false, false
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d) 4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c) Compilation error
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b) 2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d) 20 -1
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c) The x value is within the 11 range
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c) result = 32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) A variable can be declared, b) A variable can be assigned
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b) A selection statement, d) An increment statement
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B18388_02_ePub.xhtml#_idTextAnchor045) – Java Object-Oriented
    Programming (OOP)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: a), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B18388_03_ePub.xhtml#_idTextAnchor079) – Java Fundamentals'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: a), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18388_04_ePub.xhtml#_idTextAnchor110) – Exception Handling'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B18388_05_ePub.xhtml#_idTextAnchor121) – Strings, Input/Output,
    and Files'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c), d) (notice the usage of the `mkdir()` method, instead of `mkdirs()`)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18388_06_ePub.xhtml#_idTextAnchor141) – Data Structures, Generics,
    and Popular Utilities'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B18388_07_ePub.xhtml#_idTextAnchor169) – Java Standard and External
    Libraries'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B18388_08_ePub.xhtml#_idTextAnchor187) – Multithreading and Concurrent
    Processing'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18388_09_ePub.xhtml#_idTextAnchor205) – JVM Structure and Garbage
    Collection'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B18388_10_ePub.xhtml#_idTextAnchor230) – Managing Data in a
    Database'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B18388_11_ePub.xhtml#_idTextAnchor247) – Network Programming'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The correct answer may include FTP, SMTP, HTTP, HTTPS, WebSocket, SSH, Telnet,
    LDAP, DNS, or some other protocols
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answer may include UDP, TCP, SCTP, DCCP, or some other protocols
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`java.net.http`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: UDP
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`java.net`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Transmission Control Protocol
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: They are synonyms
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The TCP session is identified by IP address and port of the source and IP address
    and port of the destination
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`ServerSocket` can be used without the client running. It just listens on the
    specified port'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: UDP
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: TCP
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answers may include HTTP, HTTPS, Telnet, FTP, or SMTP
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: They are synonyms
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: They are synonyms
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`/something/something?par=42`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answer may include binary format, header compression, multiplexing,
    or push capability
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`java.net.http.HttpClient`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`java.net.http.WebSocket`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No difference
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`java.util.concurrent.CompletableFuture`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B18388_12_ePub.xhtml#_idTextAnchor266) – Java GUI Programming'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Stage
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Node
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Application
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`void start(Stage pm)`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`static void launch(String... args)`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`--module-path` and `--add-modules`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`void stop()`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`WebView`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Media`, `MediaPlayer`, `MediaView`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`--add-exports`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Any five from the following list: `Blend`, `Bloom`, `BoxBlur`, `ColorAdjust`,
    `DisplacementMap`, `DropShadow`, `Glow`, `InnerShadow`, `Lighting`, `MotionBlur`,
    `PerspectiveTransform`, `Reflection`, `ShadowTone`, and `SepiaTone`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B18388_13_ePub.xhtml#_idTextAnchor281) – Functional Programming'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`void`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`boolean`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: None
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`T`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`R`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The enclosing context
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Location::methodName`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B18388_14_ePub.xhtml#_idTextAnchor296) – Java Standard Streams'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: a), b)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`of()`, without parameters, produces an empty stream'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`java.util.Set`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '135'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '42'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '2121'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No, but it extends the functional interface `Consumer` and can be passed around
    as such
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: None
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '3'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '1.5'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 42, X, a
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Compilation error, because `peek()` cannot return anything
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '2'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: An alternative `Optional` object
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`a`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Any of `filter()`, `map()`, and `flatMap()`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Any of `distinct()`, `limit()`, `sorted()`, `reduce()`, and `collect()`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B18388_15_ePub.xhtml#_idTextAnchor315) – Reactive Programming'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Non-Blocking Input/Output
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reactive eXtension
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`java.util.concurrent`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The blocking operator name starts with **blocking**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A hot observable emits values at its own pace. A cold observable emits the next
    value after the previous one has reached the Terminal operator
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The observable stops emitting values and the pipeline stops operating
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For example, any two from the following: `buffer()`, `flatMap()`, `groupBy()`,
    `map()`, `scan()`, and `window()`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For example, any two from the following: `debounce()`, `distinct()`, `elementAt(long
    n)`, `filter()`, `firstElement()`, `ignoreElements()`, `lastElement()`, `sample()`,
    `skip()`, and `take()`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Drop excessive values, take the latest, use buffer
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`subscribeOn()`, `observeOn()`, `fromFuture()`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 16*](B18388_16_ePub.xhtml#_idTextAnchor337) – Java Microbenchmark
    Harness'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: b), c), d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a dependency on JMH to the project (or classpath, if run manually) and add
    the annotation `@Benchmark` to the method you would like to test for performance
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As the main method using a Java command with an explicitly named main class,
    as the main method using a java command with an executable `.jar` file, and using
    an IDE running as the main method or using a plugin and running an individual
    method
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Any two of the following: `Mode.AverageTime`, `Mode.Throughput`, `Mode.SampleTime`,
    and `Mode.SingleShotTime`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Any two of the following: `TimeUnit.NANOSECONDS`, `TimeUnit.MICROSECONDS`,
    `TimeUnit.MILLISECONDS`, `TimeUnit.SECONDS`, `TimeUnit.MINUTES`, `TimeUnit.HOURS`,
    and `TimeUnit.DAYS`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using an object of a class with the annotation `@State`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the annotation `@Param` in front of the `state` property
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the annotation `@CompilerConrol`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using a parameter of the type `Blackhole` that consumes the produced result
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the annotation `@Fork`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 17*](B18388_17_ePub.xhtml#_idTextAnchor356) – Best Practices for
    Writing High-Quality Code'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: a), b), c)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Generally, it is recommended but not required. It is required for certain situations,
    for example, an when object of the class is going to be placed and searched inside
    a hash-based data structure
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`obj1` is less than `obj2`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`StringBuilder`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Allowing the implementation to change without changing the client code
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: More control over the code evolution and code flexibility for accommodating
    a change
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: More reliable code, quicker to write, less testing, easier for other people
    to understand
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Other programmers that are going to maintain your code and you some time later
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No, but it is very helpful to you
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
