["```java\n<html>\n  <head>\n    <title>Simple Form Page\n    </title>\n  </head>\n  <body>\n    <form method=\"post\">\n      <p>Please enter your given name:\n        <input type=\"text\" name=\"givenname\"/>\n      </p>\n      <p>\n        <input type=\"Submit\" value=\"Send\"/>\n     </p>\n   </form>\n  </body>\n</html>\n```", "```java\ntitle=My+First+Blog+Post&content=Hello+World\n```", "```java\n<input type=\"text\"\n       id=\"title\"\n       name=\"title\"\n       th:value=\"${title}\">\n```", "```java\n@PostMapping(\"create\")\npublic void createFromRequestParam(\n    @RequestParam String title) {\n    log.info(\"The title is \" + title);\n}\n```", "```java\n@PostMapping(\"create-multiple-values\")\npublic ModelAndView createBlogPostFromMultipleValues(\n  @RequestParam(name = \"title\")\n  String title,\n  @RequestParam(name = \"slug\")\n  String slug,\n  @RequestParam(name = \"content\")\n  String content,\n  @RequestParam(name = \"visible\", defaultValue = \"visible\")\n  boolean visible) {\n  BlogPost createdBlogPost = createBlogPost(title,\n                                            slug,\n                                            content,\n                                            visible);\n  return new ModelAndView(\n               \"blogposts/show\",\n               \"blogPost\",\n               createdBlogPost);\n}\n```", "```java\n<form action=\"#\" th:action=\"@{/blogposts/create-multiple\nvalues}\" method=\"post\">\n  <div class=\"form-group\">\n    <label for=\"title\">Title</label>\n    <input type=\"text\"\n           // […]\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</\nbutton>\n</form>\n```", "```java\n@Data\npublic class BlogPost {\n    private LocalDateTime publicationDate;\n    private String slug;\n    private String title;\n    private String content;\n}\n```", "```java\n<form action=\"#\" th:action=\"@{/blogposts/create}\"\nth:object=\"${blogPostCommand}\" method=\"post\">\n  <input type=\"text\" id=\"title\" th:field=\"*{title}\">\n  <input type=\"text\" id=\"slug\" th:field=\"*{slug}\">\n  <button type=\"submit\">Submit</button>\n</form>\n```", "```java\n@Data\npublic class CreateBlogPostCommand {\n    private String title;\n    private String slug;\n    private String content;\n    private boolean visible;\n}\n```", "```java\n@GetMapping(\"new-backing-bean\")\npublic ModelAndView renderFormViewForBackingBean() {\n    CreateBlogPostCommand createBlogPostCommand =\n        new CreateBlogPostCommand();\n    createBlogPostCommand.setTitle(\"Default Title\");\n\n    return new ModelAndView(\"blogposts/form-backing-bean\",\n                            \"createBlogPostCommand\",\n                            createBlogPostCommand);\n}\n\n} @PostMapping(\"create-backing-bean\")\npublic ModelAndView createBlogPostFromBackingBean(@\nModelAttribute\n   CreateBlogPostCommand createBlogPostCommand) {\n    BlogPost createdBlogPost = createBlogPost(\n             createBlogPostCommand.getTitle(),\n             createBlogPostCommand.getSlug(),\n             createBlogPostCommand.getContent(),\n             createBlogPostCommand.isVisible());\n\n    return new ModelAndView(\"blogposts/show\",\n                            \"blogPost\",\n                            createdBlogPost);\n}\n```", "```java\n<form action=\"#\" th:action=\"@{/blogposts/create-backing-\nbean}\" th:object=\"${createBlogPostCommand}\" method=\"post\">\n  <div class=\"form-group\">\n    <label for=\"title\">Title</label>\n    <input type=\"text\"\n           class=\"form-control\"\n            // […]\n    </div>\n   <button type=\"submit\" class=\"btn btn-primary\">Submit</\nbutton>\n</form>\n```", "```java\n@Data\n@NoArgsConstructor\npublic class CreateValidatedBlogPostCommand {\n    @NotBlank\n    @Size(max = 140)\n    // title is not allowed to be empty\n    // or longer than 140 characters\n    private String title;\n\n    @Size(min = 3, max = 60)\n    // slug must be between 3 and 60 characters long\n    private String slug;\n\n    @NotBlank\n    // content must not be empty\n    private String content;\n\n    private boolean visible;\n}\n```", "```java\n@PostMapping(\"create-validated-bean\")\npublic String createBlogPostFromValidatedBean(\n        @Validated @ModelAttribute CreateValidatedBlogPostCommand\ncreateValidatedBlogPostCommand,\n        BindingResult bindingResult,\n        Model model) {\n    if (bindingResult.hasErrors()) {\n        return \"blogposts/form-validated-bean\";\n    }\n    //...\n    return \"blogposts/show\";\n}\n```", "```java\n@Data\npublic class CreateValidatedBlogPostCommand {\n    @NotBlank\n    @Size(max = 140)\n    private String title;\n    @Size(min = 3, max = 60, message = \"{slug.size}\")\n    private String slug;\n    @NotBlank\n    private String content;\n    private boolean visible;\n}\n```", "```java\n@GetMapping(\"new-validated-bean\")\npublic ModelAndView renderFormViewForValidatedBean() {\n  CreateValidatedBlogPostCommand\n    createValidatedBlogPostCommand =\n      new CreateValidatedBlogPostCommand();\ncreateValidatedBlogPostCommand.setTitle(\"Default Title\");\n\nreturn new ModelAndView(\"blogposts/form-validated-bean\",\n                        \"createValidatedBlogPostCommand\",\n                        createValidatedBlogPostCommand);\n}\n\n@PostMapping(\"create-validated-bean\")\npublic String createBlogPostFromValidatedBean(\n          @Validated @ModelAttribute\n          CreateValidatedBlogPostCommand\n            createValidatedBlogPostCommand,\n          BindingResult bindingResult,\n          Model model) {\n  if (bindingResult.hasErrors()) {\n    return \"blogposts/form-validated-bean\";\n  }\n\n  BlogPost createdBlogPost =\n             createBlogPost(\n               createValidatedBlogPostCommand.getTitle(),\n               createValidatedBlogPostCommand.getSlug(),\n               createValidatedBlogPostCommand.getContent(),\n               createValidatedBlogPostCommand.isVisible());\n\n model.addAttribute(\"blogPost\", createdBlogPost);\n return \"blogposts/show\";\n}\n```", "```java\n<form action=\"#\"\n      th:action=\"@{/blogposts/create-validated-bean}\"\n      th:object=\"${createValidatedBlogPostCommand}\"\n      // […]\n    </div>\n  </div>\n  <button type=\"submit\"\n          class=\"btn btn-primary\">Submit</button>\n</form>\n```", "```java\nslug.size=Size has to be between 3 and 60!\n```", "```java\n@Size(min = 3, max = 60, message = \"{slug.size}\")\nprivate String slug;\n```", "```java\nNotBlank.createValidatedBlogPostCommand.title=The title must not\nbe blank!\n```", "```java\nNotBlank.createValidatedBlogPostCommand.title=The title\nmust not be blank!\n```", "```java\nNotBlank.createValidatedBlogPostCommand.title=Der Titel\ndarf nicht leer sein!\n```", "```java\n<div>\n    <label for=\"textValue\">Text Value:</label>\n    <input type=\"text\" id=\"textValue\" th:field=\"*{textValue}\">\n</div>\n<div>\n    <label for=\"numberValue\">Number Value</label>\n    <input type=\"number\" id=\"numberValue\"\nth:field=\"*{numberValue}\">\n</div>\n<div>\n    <label for=\"passwordValue\">Password Value</label>\n    <input type=\"password\" id=\"passwordValue\"\nth:field=\"*{passwordValue}\">\n</div>\n<div>\n    <label for=\"hiddenValue\">Hidden Value</label>\n    <input type=\"hidden\" id=\"hiddenValue\"\nth:field=\"*{hiddenValue}\">\n</div>\n```", "```java\n<input type=\"radio\"\n       id=\"radioVal1\"\n       value=\"Radio Value 1\"\n       th:field=\"*{radioValue}\">\n<label for=\"radioVal1\">Radio Value1</label>\n<input type=\"radio\"\n       id=\"radioVal2\"\n       value=\"Radio Value 2\"\n       th:field=\"*{radioValue}\">\n<label for=\"radioVal2\">Radio Value 2</label>\n```", "```java\n<div\n  th:each=\"dynamicRadioOption : ${dynamicRadioOptions}\">\n     <input type=\"radio\"\n            th:field=\"*{dynamicRadioValue}\"\n            th:value=\"${dynamicRadioOption}\"/>\n     <label th:for=\"${#ids.prev('dynamicRadioValue')}\"\n            th:text=\"#{${'radioValue.' + dynamicRadioOption}}\">\n       Value\n  </label>\n</div>\n```", "```java\n<input type=\"submit\" value=\"Submit\">\n```", "```java\n<div>\n  <label th:for=\"${#ids.next('singleSelectValue')}\">\n    Single Select Value</label>\n  <select th:field=\"*{singleSelectValue}\">\n    <option th:each=\"selectOption : ${allSelectOptions}\"\n            th:value=\"${selectOption}\"\n            th:text=\"#{${'selectOption.' + selectOption}}\">\n      selectOption\n   </option>\n  </select>\n</div>\n```", "```java\n<div>\n  <label th:for=\"${#ids.next('singleListValue')}\">\n    Single List Value\n  </label>\n  <select th:field=\"*{singleListValue}\" size=\"5\">\n    <option th:each=\"selectOption : ${allSelectOptions}\"\n            th:value=\"${selectOption}\"\n            th:text=\"#{${'selectOption.' + selectOption}}\">\n      selectOption\n    </option>\n  </select>\n</div>\n```", "```java\n<div>\n  <label th:for=\"${#ids.next('multipleListValue')}\">\n    Single List Value\n  </label>\n    <select th:field=\"*{multipleListValue}\"\n            size=\"5\"\n            multiple=\"multiple\">\n        <option th:each=\"selectOption : ${allSelectOptions}\"\n                th:value=\"${selectOption}\"\n                th:text=\"#{${'selectOption.' + selectOption}}\">\n          selectOption\n        </option>\n    </select>\n</div>\n```", "```java\n<textarea th:field=\"*{textareaValue}\"\n          th:rows=\"${textareaRows}\"\n          cols=\"40\"></textarea>\n```", "```java\n<div>\n    <span th:text=\"*{safeTextValue}\">safeTextValue</span>\n</div>\n<h2>Text Area for Unsafe Text</h2>\n<div>\n    <span th:utext=\"*{unsafeTextValue}\">unsafeTextValue</span>\n</div>\n```", "```java\nprivate boolean slugVisible;\n```", "```java\nprivate BlogPost initBlogPost() {\n    BlogPost blogPost = new BlogPost();\n    blogPost.setSlugVisible(true);\n\n    return blogPost;\n}\n```", "```java\n<div class=\"form-group\">\n  <label for=\"title\">Slug <input type=\"checkbox\"\n                                 id=\"slugVisible\"\n\nth:field=\"*{slugVisible}\"></label>\n  <input type=\"text\"\n         th:if=\"*{slugVisible}\"\n         class=\"form-control\"\n         id=\"slug\"\n         th:field=\"*{slug}\"\n         placeholder=\"Blog Post Slug\">\n</div>\n```"]