- en: '21'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '21'
- en: Installation Instructions for macOS
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: macOS安装说明
- en: In this chapter, we will learn how to set up the tools required to run the commands
    described in this book on macOS. We will also learn how to get access to the source
    code of the book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何设置在macOS上运行本书中描述的命令所需的工具。我们还将学习如何获取本书源代码的访问权限。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Technical requirements
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术要求
- en: Installing tools
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装工具
- en: Accessing the source code
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问源代码
- en: If you are using a Windows PC, you should follow the instructions in *Chapter
    22*, *Installation Instructions for Microsoft Windows with WSL 2 and Ubuntu*.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Windows PC，应遵循*第22章*中关于使用WSL 2和Ubuntu的Microsoft Windows安装说明。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: All of the commands described in this book are run on a MacBook Pro with macOS
    Ventura and use **bash**, a command shell. All commands have been verified on
    both an Intel and Apple silicon-based MacBook Pro.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有命令都在配备macOS Ventura的MacBook Pro上运行，并使用**bash**，一个命令行shell。所有命令都在基于Intel和Apple硅的MacBook
    Pro上进行了验证。
- en: 'If you are using another shell, such as **zsh**, I recommend that you switch
    to bash before running commands from this book using this command:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是其他shell，例如**zsh**，我建议在运行本书中的命令之前使用以下命令切换到bash：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installing tools
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装工具
- en: 'In this section, we will learn how to install and configure the tools. Here
    is a list of the tools we will install, with a link to more information on downloading
    and installation, if required:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何安装和配置工具。以下是我们将安装的工具列表，如有需要，附有下载和安装的更多信息链接：
- en: '**Git**: [https://git-scm.com/downloads](https://git-scm.com/downloads)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Git**: [https://git-scm.com/downloads](https://git-scm.com/downloads)'
- en: '**Docker Desktop for Mac**: [https://hub.docker.com/editions/community/docker-ce-desktop-mac/](https://hub.docker.com/editions/community/docker-ce-desktop-mac/)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker Desktop for Mac**: [https://hub.docker.com/editions/community/docker-ce-desktop-mac/](https://hub.docker.com/editions/community/docker-ce-desktop-mac/)'
- en: '**Java**: [https://adoptium.net/installation](https://adoptium.net/installation)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Java**: [https://adoptium.net/installation](https://adoptium.net/installation)'
- en: '**curl**: [https://curl.haxx.se/download.html](https://curl.haxx.se/download.html)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**curl**: [https://curl.haxx.se/download.html](https://curl.haxx.se/download.html)'
- en: '**jq**: [https://stedolan.github.io/jq/download/](https://stedolan.github.io/jq/download/)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**jq**: [https://stedolan.github.io/jq/download/](https://stedolan.github.io/jq/download/)'
- en: '**The Spring Boot CLI**: [https://docs.spring.io/spring-boot/docs/3.0.4/reference/html/getting-started.html#getting-started.installing.cli](https://docs.spring.io/spring-boot/docs/3.0.4/reference/html/getting-started.html#getting-started.installing.cli)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spring Boot CLI**: [https://docs.spring.io/spring-boot/docs/3.0.4/reference/html/getting-started.html#getting-started.installing.cli](https://docs.spring.io/spring-boot/docs/3.0.4/reference/html/getting-started.html#getting-started.installing.cli)'
- en: '**Siege**: [https://github.com/JoeDog/siege#where-is-it](https://github.com/JoeDog/siege#where-is-it)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Siege**: [https://github.com/JoeDog/siege#where-is-it](https://github.com/JoeDog/siege#where-is-it)'
- en: '**Helm**: [https://helm.sh/docs/intro/install/](https://helm.sh/docs/intro/install/)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Helm**: [https://helm.sh/docs/intro/install/](https://helm.sh/docs/intro/install/)'
- en: '**kubectl**: [https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/](https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**kubectl**: [https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/](https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/)'
- en: '**Minikube**: [https://minikube.sigs.k8s.io/docs/start/](https://minikube.sigs.k8s.io/docs/start/)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Minikube**: [https://minikube.sigs.k8s.io/docs/start/](https://minikube.sigs.k8s.io/docs/start/)'
- en: '**Istioctl**: [https://istio.io/latest/docs/setup/getting-started/#download](https://istio.io/latest/docs/setup/getting-started/#download)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Istioctl**: [https://istio.io/latest/docs/setup/getting-started/#download](https://istio.io/latest/docs/setup/getting-started/#download)'
- en: 'The following versions have been used when writing this book:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写本书时使用了以下版本：
- en: '**Git**: v2.37.1'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Git**: v2.37.1'
- en: '**Docker Desktop for Mac**: v4.12.0'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker Desktop for Mac**: v4.12.0'
- en: '**Java**: v17.0.6'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Java**: v17.0.6'
- en: '**curl**: v7.86.0'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**curl**: v7.86.0'
- en: '**jq**: v1.6'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**jq**: v1.6'
- en: '**Spring Boot CLI**: v3.0.4'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spring Boot CLI**: v3.0.4'
- en: '**Siege**: v4.1.6'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Siege**: v4.1.6'
- en: '**Helm**: v3.11.1'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Helm**: v3.11.1'
- en: '**kubectl**: v1.26.1'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**kubectl**: v1.26.1'
- en: '**Minikube**: v1.29.0'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Minikube**: v1.29.0'
- en: '**Istioctl**: v1.17.0'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Istioctl**: v1.17.0'
- en: Most of the tools will be installed using the **Homebrew** package manager ([https://brew.sh/](https://brew.sh/)),
    so we will start by installing Homebrew. After that, we will install most of the
    tools using Homebrew and wrap up by installing the remaining tools.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数工具将使用**Homebrew**包管理器（[https://brew.sh/](https://brew.sh/））安装，因此我们将首先安装Homebrew。之后，我们将使用Homebrew安装大多数工具，并以安装剩余工具结束。
- en: For tools where control is required over the version that is installed – not
    just installing the latest available – I find Homebrew insufficient. When it comes
    to `minikube`, `kubectl`, and `istioctl`, it is important to install versions
    that are compatible with each other, specifically when it comes to the versions
    of Kubernetes that they support. Simply installing and upgrading to the latest
    versions can lead to situations where incompatible versions of `minikube`, Kubernetes,
    and Istio are used.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于需要控制安装版本的工具——而不仅仅是安装最新版本——我发现Homebrew不足。当涉及到`minikube`、`kubectl`和`istioctl`时，安装相互兼容的版本非常重要，特别是当涉及到它们支持的Kubernetes版本时。简单地安装和升级到最新版本可能会导致`minikube`、Kubernetes和Istio使用不兼容的版本。
- en: For supported Kubernetes versions when it comes to Istio, see [https://istio.io/latest/about/supported-releases/#support-status-of-istio-releases](https://istio.io/latest/about/supported-releases/#support-status-of-istio-releases).
    For `minikube`, see [https://minikube.sigs.k8s.io/docs/handbook/config/#selecting-a-kubernetes-version](https://minikube.sigs.k8s.io/docs/handbook/config/#selecting-a-kubernetes-version).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 关于Istio支持的Kubernetes版本，请参阅[https://istio.io/latest/about/supported-releases/#support-status-of-istio-releases](https://istio.io/latest/about/supported-releases/#support-status-of-istio-releases)。对于`minikube`，请参阅[https://minikube.sigs.k8s.io/docs/handbook/config/#selecting-a-kubernetes-version](https://minikube.sigs.k8s.io/docs/handbook/config/#selecting-a-kubernetes-version)。
- en: Installing Homebrew
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Homebrew
- en: 'If you don’t have Homebrew installed already, you can install it with the following
    command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有安装Homebrew，可以使用以下命令安装：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Installing Homebrew also installs the command-line tools for **Xcode**, if they
    are not already installed, so it might take a while.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Homebrew也会安装**Xcode**的命令行工具，如果它们尚未安装，可能需要一些时间。
- en: 'Verify the installation of Homebrew with the following command:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令验证Homebrew的安装：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Expect a response such as the following:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 预期以下响应：
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Using Homebrew to install tools
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Homebrew安装工具
- en: 'On macOS, `curl` is already pre-installed and `git` was installed as part of
    the installation of the command-line tools for Xcode, required by Homebrew. Homebrew
    can be used to install Docker, Java, jq, the Spring Boot CLI, Helm, and Siege
    with the following commands:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS上，`curl`已经预安装，`git`是作为Homebrew所需的Xcode命令行工具的一部分安装的。可以使用以下命令使用Homebrew安装Docker、Java、jq、Spring
    Boot CLI、Helm和Siege：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Brew installs the tools in different folders on Intel and Apple silicon-based
    Macs, in `/usr/local` and `/opt/homebrew` respectively.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Brew在基于Intel和Apple硅的Mac上安装工具到不同的文件夹中，分别在`/usr/local`和`/opt/homebrew`。
- en: Java is installed using the distribution called **Eclipse Temurin**; for more
    information, see [https://adoptium.net/temurin/](https://adoptium.net/temurin/).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Java使用名为**Eclipse Temurin**的发行版安装；更多信息请参阅[https://adoptium.net/temurin/](https://adoptium.net/temurin/)。
- en: Install tools without Homebrew
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无需Homebrew安装工具
- en: When it comes to installing `minikube`, `kubectl`, and `istioctl`, we will avoid
    using `brew` for improved control over what versions we install. The commands
    look slightly different on Intel and Apple silicon-based Macs, so will go through
    them separately.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到安装`minikube`、`kubectl`和`istioctl`时，我们将避免使用`brew`以更好地控制我们安装的版本。在基于Intel和Apple硅的Mac上，命令看起来略有不同，所以我们将分别介绍它们。
- en: Install tools on an Intel-based Mac
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在基于Intel的Mac上安装工具
- en: 'To install the `kubectl` version used in this book, run the following commands:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装本书中使用的`kubectl`版本，请运行以下命令：
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To install the `minikube` version used in this book, run the following commands:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装本书中使用的`minikube`版本，请运行以下命令：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To install the `istioctl` version used in this book, run the following commands:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装本书中使用的`istioctl`版本，请运行以下命令：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Install tools on an Apple silicon-based Mac
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在基于Apple硅的Mac上安装工具
- en: 'To install the `kubectl` version used in this book, run the following commands:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装本书中使用的`kubectl`版本，请运行以下命令：
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To install the `minikube` version used in this book, run the following commands:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装本书中使用的`minikube`版本，请运行以下命令：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To install the `istioctl` version used in this book, run the following commands:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装本书中使用的`istioctl`版本，请运行以下命令：
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If you want to use the latest versions, with the risk of incompatible versions
    as described above, you should be able to install `minikube`, `kubectl`, and `istioctl`
    with Homebrew using the following commands:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用最新版本，存在上述不兼容版本的风险，你应该可以使用以下命令使用Homebrew安装`minikube`、`kubectl`和`istioctl`：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: With the tools installed, we need to take some post-installation actions before
    we can verify the installations.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Post-installation actions
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We need to take some actions after installing Java and Docker to make them
    work properly:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '**Java**'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add a command to your login script to set up the `JAVA_HOME` environment variable:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If you are not using `~/.bash_profile` as your login script, you need to replace
    it with the login script you use, for example, `~/.zshrc`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: 'Apply the settings in your current terminal session:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Docker**'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To be able to run the examples in this book, it is recommended that you configure
    Docker so that it can use most of the CPUs except a few (allocating all CPUs to
    Docker can make the computer unresponsive when tests are running) and 10 GB of
    memory, if available. The initial chapters will work fine with less memory allocated,
    for example, 6 GB. But the more features we add later in the book, the more memory
    will be required by the Docker host to be able to run all the microservices smoothly.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: Before we can configure Docker, we must ensure that the Docker daemon is running.
    You can start Docker as you start any application on a Mac, for example, by using
    **Spotlight** or opening the `Application` folder in **Finder** and starting it
    from there.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: 'To configure Docker, click on the Docker icon in the status bar and select
    **Preferences…**. Go to the **Resources** tab in the **Preferences** settings
    for Docker and set **CPUs** and **Memory**, as illustrated by the following screenshot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B19825_21_01.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
- en: 'Figure 21.1: Docker Desktop resource configuration'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: 'If you don’t want to start Docker manually after a system startup, you can
    go to the **General** tab and select the **Start Docker Desktop when you log in**
    option, as shown in the screenshot below:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated with medium
    confidence](img/B19825_21_02.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: 'Figure 21.2: Docker Desktop general configuration'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Finalize the configuration by clicking on the **Apply & Restart** button.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: With the post-installation actions performed, we can verify that the tools are
    installed as expected.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: Verifying the installations
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To verify the tool installations, run the following commands to print each
    tool’s version:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'These commands will return output like the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B19825_21_03.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
- en: 'Figure 21.3: Versions used'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: With the tools installed and verified, let’s see how we can access the source
    code for this book.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: Accessing the source code
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The source code for this book can be found in the GitHub repository: [https://github.com/PacktPublishing/Microservices-with-Spring-Boot-and-Spring-Cloud-Third-Edition](https://github.com/PacktPublishing/Microservices-with-Spring-Boot-and-Spring-Cloud-Third-Edition).'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: To be able to run the commands that are described in this book, download the
    source code to a folder and set up an environment variable, `$BOOK_HOME`, that
    points to that folder.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'Sample commands are as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 示例命令如下：
- en: '[PRE15]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The Java source code is written for Java SE 8 and uses a Java SE 17 JRE when
    executed in Docker containers. The following versions of Spring are used:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Java 源代码是为 Java SE 8 编写的，并在 Docker 容器中执行时使用 Java SE 17 JRE。以下版本的 Spring 被使用：
- en: '**Spring Framework**: 6.0.6'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spring 框架**：6.0.6'
- en: '**Spring Boot**: 3.0.4'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spring Boot**：3.0.4'
- en: '**Spring Cloud**: 2022.0.1'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spring Cloud**：2022.0.1'
- en: The code examples in each chapter all come from the source code in `$BOOK_HOME/ChapterNN`,
    where `NN` is the number of the chapter. The code examples in the book are in
    many cases edited to remove irrelevant parts of the source code, such as comments,
    imports, and log statements.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章中的代码示例都来自 `$BOOK_HOME/ChapterNN` 中的源代码，其中 `NN` 是章节的编号。本书中的代码示例在许多情况下都经过编辑，以删除源代码中不相关的部分，例如注释、导入和日志语句。
- en: Using an IDE
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 IDE
- en: I recommend that you work with your Java code using an IDE that supports the
    development of Spring Boot applications, such as Visual Studio Code, Spring Tool
    Suite, or IntelliJ IDEA Ultimate Edition. However, you don’t need an IDE to be
    able to follow the instructions in this book.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议您使用支持 Spring Boot 应用程序开发的 IDE 来编写 Java 代码，例如 Visual Studio Code、Spring Tool
    Suite 或 IntelliJ IDEA Ultimate 版本。然而，您不需要 IDE 就能遵循本书中的说明。
- en: The structure of the code
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码结构
- en: 'Each chapter consists of a number of Java projects, one for each microservice
    and Spring Cloud service, plus a couple of library projects used by the other
    projects. *Chapter 14* contains the largest number of projects; its project structure
    looks like this:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章都包含多个 Java 项目，每个微服务和 Spring Cloud 服务一个，再加上几个其他项目使用的库项目。*第 14 章* 包含的项目数量最多；其项目结构如下：
- en: '[PRE16]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'All projects are built using Gradle and have a file structure that follows
    Gradle’s standard conventions:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 所有项目都是使用 Gradle 构建的，并且文件结构遵循 Gradle 的标准约定：
- en: '[PRE17]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: For more information on how to organize a Gradle project, see [https://docs.gradle.org/current/userguide/organizing_gradle_projects.html](https://docs.gradle.org/current/userguide/organizing_gradle_projects.html).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何组织 Gradle 项目的更多信息，请参阅 [https://docs.gradle.org/current/userguide/organizing_gradle_projects.html](https://docs.gradle.org/current/userguide/organizing_gradle_projects.html)。
- en: With this, we have the required tools installed for macOS and the source code
    for the book downloaded. In the next chapter, we will learn how to set up the
    tools in a Windows environment.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些工具，我们已经为 macOS 安装了所需的工具，并下载了本书的源代码。在下一章中，我们将学习如何在 Windows 环境中设置这些工具。
- en: Summary
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to install, configure, and verify the tools
    required to run the commands described in this book on macOS. For development,
    we will use `git`, `docker`, `java`, and `spring`. To create a Kubernetes environment
    to deploy our microservice at runtime, we will use `minikube`, `helm`, `kubectl`,
    and `istioctl`. Finally, to run tests to verify that the microservices work as
    expected at runtime, we will use `curl`, `jq`, and `siege`.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何在 macOS 上安装、配置和验证运行本书中描述的命令所需的工具。对于开发，我们将使用 `git`、`docker`、`java`
    和 `spring`。为了在运行时创建 Kubernetes 环境，我们将使用 `minikube`、`helm`、`kubectl` 和 `istioctl`。最后，为了运行测试以验证微服务在运行时按预期工作，我们将使用
    `curl`、`jq` 和 `siege`。
- en: We also learned how to access the source code from GitHub and how the source
    code is structured.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学习了如何从 GitHub 访问源代码以及源代码的结构。
- en: In the next chapter, we will learn how to set up the same tools in an environment
    based on Microsoft Windows with **Windows Subsystem for Linux v2** (**WSL 2**),
    where we will use a Linux server based on Ubuntu.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何在基于 Microsoft Windows 的环境中设置相同的工具，该环境使用 **Windows Subsystem for
    Linux v2**（**WSL 2**），我们将使用基于 Ubuntu 的 Linux 服务器。
