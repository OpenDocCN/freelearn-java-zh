["```java\npublic class Outer { \n    private int outerInt = 20; \n    public class Inner { \n        int innerInt = outerInt;     // Can Inner access outerInt? \n    } \n} \n```", "```java\n// Decompiled class Outer \npublic class Outer { \n    public class Inner { \n        int innerInt; \n        final Outer this$0; \n\n        public Inner() { \n            this$0 = Outer.this; \n            super(); \n            innerInt = outerInt; \n        } \n    } \n    public Outer() { \n        outerInt = 20; \n    } \n    private int outerInt; \n} \n```", "```java\npublic class Outer$Inner { \n    int innerInt; \n    final Outer this$0; \n\n    public Outer$Inner() { \n        this$0 = Outer.this; \n        super(); \n        innerInt = outerInt; \n    } \n}\n```", "```java\n    --add-modules\n```", "```java\nclass HelloNoCompilation { \n    public static void main(String[] args) { \n        System.out.println(\"No compilation! Are you kidding me?\"); \n    } \n} \n```", "```java\n    > java HelloNoCompilation.java\n```", "```java\nclass HelloNoCompilation { \n    public static void main(String[] args) { \n        System.out.println(\"No compilation! Are you kidding me?\"); \n        EstablishedOrg org = new EstablishedOrg(); \n        org.invite(); \n        System.out.println(new Startup().name); \n    } \n} \nclass Startup { \n    String name = \"CoolAndExciting\"; \n} \ninterface Employs { \n    default void invite() { \n        System.out.println(\"Want to work with us?\"); \n    } \n} \nclass EstablishedOrg implements Employs { \n    String name = \"OldButStable\"; \n} \n```", "```java\n    > java HelloNoCompilation.java\n```", "```java\n    No compilation! Are you kidding me?\n    Want to work with us?\n    CoolAndExciting  \n```", "```java\n    > javac HelloNoCompilation.java\n```", "```java\n    > java HelloNoCompilation.java  \n```", "```java\n    error: class found on application class path: HelloNoCompilation  \n```"]