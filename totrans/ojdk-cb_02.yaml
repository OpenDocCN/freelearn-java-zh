- en: Chapter 2. Building OpenJDK 6
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 构建OpenJDK 6
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Preparing CA certificates
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备CA证书
- en: Building OpenJDK 6 on Ubuntu Linux 12.04 LTS
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Ubuntu Linux 12.04 LTS上构建OpenJDK 6
- en: Setting up the minimum build environment for the most compatible Linux builds
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为最兼容的Linux构建设置最小构建环境
- en: Installing Cygwin for Windows builds
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Windows构建安装Cygwin
- en: Building 32-bit FreeType libraries for OpenJDK 6 on Windows
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上为OpenJDK 6构建32位FreeType库
- en: Building 64-bit FreeType libraries for OpenJDK 6 on Windows
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上为OpenJDK 6构建64位FreeType库
- en: Building 32-bit OpenJDK 6 on Windows 7 SP1
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows 7 SP1上构建32位OpenJDK 6
- en: Building 64-bit OpenJDK 6 on Windows 7 x64 SP1
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows 7 x64 SP1上构建64位OpenJDK 6
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: OpenJDK 6 is a free and open source implementation of the Java Platform, Standard
    Edition Version 6\. Currently, this project is actively maintained by the community
    with the leading role held by Red Hat, Inc.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 6是Java平台标准版6的免费和开源实现。目前，该项目由社区积极维护，由红帽公司担任主导角色。
- en: Among all Java Platform versions, Java 6 had the longest lifetime. Its Reference
    Implementation Sun Java 6 was released in December 2006, and OpenJDK 7, the Reference
    Implementation of the next version of the Java Platform, wasn't out until July
    2011\. During these 5 years, a lot of applications were built on this platform
    version.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有Java平台版本中，Java 6的寿命最长。其参考实现Sun Java 6于2006年12月发布，而Java平台下一个版本的参考实现OpenJDK
    7直到2011年7月才推出。在这5年期间，许多应用程序都是基于这个平台版本构建的。
- en: 'Also, during these years the authors of Reference Implementation, Sun Microsystems,
    were acquired by the Oracle Corporation, and so the product was renamed Oracle
    Java. In February 2013, Oracle ended public support for Oracle Java 6, but it
    didn''t mean the end of Java 6: Red Hat, Inc. took the leading role in OpenJDK
    6 and now it continues to release new versions on a regular basis.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在这些年间，参考实现的作者Sun Microsystems被甲骨文公司收购，因此该产品被更名为Oracle Java。2013年2月，甲骨文公司结束了Oracle
    Java 6的公共支持，但这并不意味着Java 6的终结：红帽公司担任OpenJDK 6的主导角色，现在它继续定期发布新版本。
- en: The OpenJDK 6 codebase differs greatly from both Oracle and Sun Java 6 and OpenJDK
    7 codebases. It started as a fork of OpenJDK 7 build 20, and the first version
    that passed the Java Compatibility Kit test suite was released before the general
    availability of OpenJDK 7\. The versioning scheme differs from the versioning
    of Oracle Java 6\. Each release doesn't have an update number and only has a build
    number, such as b01 and b02\. At the time of writing this book, the release from
    January 2014 is Version b30.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 6代码库与Oracle和Sun Java 6以及OpenJDK 7代码库都大相径庭。它最初是OpenJDK 7构建20的一个分支，第一个通过Java兼容性工具包测试套件的版本在OpenJDK
    7正式发布之前就已经发布。版本方案与Oracle Java 6的版本方案不同。每个版本都没有更新号，只有构建号，例如b01和b02。在撰写本书时，2014年1月的发布版本为b30。
- en: 'You can see the family tree of OpenJDK 6 in the following diagram:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下图表中看到OpenJDK 6的家族树：
- en: '![Introduction](img/8405_02_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![简介](img/8405_02_01.jpg)'
- en: 'Diagram reference: [https://blogs.oracle.com/darcy/entry/openjdk_6_genealogy](https://blogs.oracle.com/darcy/entry/openjdk_6_genealogy)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图表参考：[https://blogs.oracle.com/darcy/entry/openjdk_6_genealogy](https://blogs.oracle.com/darcy/entry/openjdk_6_genealogy)
- en: OpenJDK 6 is supported on Linux, Windows, and Solaris operating systems. Only
    Windows and Linux versions will be discussed further. For both Linux and Windows
    operating systems, x86 and x86_64 architectures are supported. To conform with
    the OpenJDK terminology, the **i586** term will be used for x86 architecture and
    **amd64** will be used for the x86_64 one. OpenJDK 6 does not support cross compilation,
    so the i586 operating system must be used to build the i586 version, and the same
    is true for amd64\. The build process for both architectures is almost the same
    for the Linux version, but differs a lot for the Windows one.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 6支持Linux、Windows和Solaris操作系统。以下将仅讨论Windows和Linux版本。对于Linux和Windows操作系统，支持x86和x86_64架构。为了符合OpenJDK术语，将使用**i586**术语表示x86架构，而**amd64**将用于x86_64架构。OpenJDK
    6不支持交叉编译，因此必须使用i586操作系统来构建i586版本，对于amd64也是如此。对于Linux版本，这两个架构的构建过程几乎相同，但对于Windows版本则大相径庭。
- en: Preparing CA certificates
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备CA证书
- en: '**Public-key cryptography** is used widely on the Internet. When the web browser
    opens a secured website, it checks the server-side certificate against the website
    domain name. To perform such checks, all web browsers have a list of **Certificate
    Authority** (**CA**) certificates that may be used to sign server-side certificates
    of websites. Such checks may be disabled but they are a necessary part of secure
    web browsing, client banking, and so on.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**公钥加密**在互联网上被广泛使用。当网络浏览器打开一个安全网站时，它会将服务器端证书与网站域名进行核对。为了执行此类检查，所有网络浏览器都有一个可能用于签署网站服务器端证书的**证书颁发机构**（**CA**）证书列表。此类检查可能被禁用，但它们是安全网络浏览、客户端银行等必要的一部分。'
- en: When website access is used by a Java program (for example, to download a file
    from a secure site), programs such as the browser in the preceding example should
    check the site certificate. Such a check is usually performed by the underlying
    SSL API implementation, and with the browser, the list of CA certificates must
    be available to the OpenJDK runtime.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当Java程序（例如，从安全站点下载文件）使用网站访问时，前面的示例中的浏览器等程序应检查网站证书。此类检查通常由底层SSL API实现执行，并且对于浏览器，CA证书列表必须对OpenJDK运行时可用。
- en: Such a list is stored in the `openjdk_directory/jre/security/cacerts` file in
    the **Java KeyStore** (**JKS**) format. In official OpenJDK 6 tarballs, the `cacerts`
    file contains no certificates. If runtime with such empty file is used to access
    a secured website, an obscure exception will be thrown.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此列表以**Java密钥库**（**JKS**）格式存储在`openjdk_directory/jre/security/cacerts`文件中。在官方OpenJDK
    6的tar包中，`cacerts`文件不包含任何证书。如果使用这样的空文件进行运行时访问安全网站，将会抛出一个难以理解的异常。
- en: 'The following code snippet will cause the exception with the root cause:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段将导致异常，其根本原因如下：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Getting ready
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To prevent such an exception, a proper `cacerts` file should be prepared. It
    may be used during the OpenJDK build or added to the `jre/security` directory
    later. The list of CA certificates should be obtained and converted to the JKS
    format. To download and convert the CA list, we will need a recent version of
    the Ubuntu (or similar Linux-based) operating system with `cURL` and `keytool`
    utilities installed. You will also need `cat`, `awk`, and `csplit` standard utilities;
    these should be already installed as part of the `coreutils` package.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止此类异常，应准备一个合适的`cacerts`文件。它可以在OpenJDK构建过程中使用，或者稍后添加到`jre/security`目录中。应获取CA证书列表并将其转换为JKS格式。为了下载和转换CA列表，我们需要一个安装了`cURL`和`keytool`实用工具的较新版本的Ubuntu（或类似基于Linux的）操作系统。您还需要`cat`、`awk`和`csplit`标准实用工具；这些工具应作为`coreutils`包的一部分已经安装。
- en: How to do it...
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps will help us to prepare CA certificates:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助我们准备CA证书：
- en: 'Install the `cURL` utility:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`cURL`实用工具：
- en: '[PRE1]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Install the `keytool` utility as part of the prebuilt OpenJDK package:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`keytool`实用工具作为预构建OpenJDK包的一部分进行安装：
- en: '[PRE2]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Download the CA list used by the Firefox web browser, preconverted in the PEM
    format from the `cURL` library website into the `cacert.pem` file:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从cURL库网站下载Firefox网络浏览器使用的CA列表，预先转换为PEM格式到`cacert.pem`文件：
- en: '[PRE3]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Split the `cacert.pem` file into multiple files with the `cert_` prefix. Each
    file will contain a single CA certificate:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`cert_`前缀将`cacert.pem`文件分割成多个文件。每个文件将包含一个CA证书：
- en: '[PRE4]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create a JKS keystore and load all CA certificates there using `keytool`:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个JKS密钥库，并使用`keytool`将所有CA证书加载到其中：
- en: '[PRE5]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Check the `cacerts` file''s contents:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`cacerts`文件的内容：
- en: '[PRE6]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now the `cacerts` file is ready to use.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`cacerts`文件已准备好使用。
- en: How it works...
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: A list of CA certificates used by the Firefox web browser is freely available
    as part of the open source security library from Mozilla called NSS. This list
    is available in text format at [http://mxr.mozilla.org/mozilla/source/security/nss/lib/ckfw/builtins/certdata.txt](http://mxr.mozilla.org/mozilla/source/security/nss/lib/ckfw/builtins/certdata.txt).
    We have used the same file but preconverted it in to PEM format, which is available
    at the cURL website.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Firefox网络浏览器使用的CA证书列表作为Mozilla开源安全库的一部分免费提供，该库称为NSS。此列表以文本格式在[http://mxr.mozilla.org/mozilla/source/security/nss/lib/ckfw/builtins/certdata.txt](http://mxr.mozilla.org/mozilla/source/security/nss/lib/ckfw/builtins/certdata.txt)处可用。我们使用了相同的文件，但预先将其转换为PEM格式，该格式可在cURL网站上找到。
- en: 'The `keytool` utility understands certificates in the PEM format, but it can
    only load certificates one-by-one, so the big PEM file is split beforehand. Also,
    the `keytool` utility has strict requirements from the PEM files: no text content
    is allowed before `/-----BEGIN CERTIFICATE-----/` and after `/-----END CERTIFICATE-----/`
    strings. The `awk` utility is used to strip unneeded prefixes and postfixes.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`keytool` 工具理解 PEM 格式的证书，但它只能逐个加载证书，因此需要事先将大的 PEM 文件分割。此外，`keytool` 工具对 PEM
    文件有严格的要求：不允许在 `/-----BEGIN CERTIFICATE-----/` 和 `/-----END CERTIFICATE-----/`
    字符串之前或之后有文本内容。使用 `awk` 工具来删除不需要的前缀和后缀。'
- en: Then the `csplit` utility is used to split the file using `/-----BEGIN CERTIFICATE-----/`
    separators.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用 `csplit` 工具使用 `/-----BEGIN CERTIFICATE-----/` 分隔符来分割文件。
- en: Next, the split files are loaded into the keystore one by one. The keystore
    is created on the first certificate load.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将分割的文件逐个加载到密钥库中。密钥库是在第一次加载证书时创建的。
- en: The `changeit` password is used for this keystore, which may be quite an unsecure
    choice for the password. However, this does not matter for the `cacerts` file
    because the CA certificates contain only public keys and need not be hidden behind
    the password.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`changeit` 密码用于此密钥库，这可能是一个相当不安全的密码选择。然而，对于 `cacerts` 文件来说，这并不重要，因为 CA 证书只包含公钥，不需要隐藏在密码后面。'
- en: There's more...
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Most of this recipe is not specific to the Ubuntu operating system; any Unix-like
    environment (for example, Cygwin on Windows) would suffice.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方的大部分内容并非特定于 Ubuntu 操作系统；任何类 Unix 环境（例如，Windows 上的 Cygwin）都足够使用。
- en: Bash scripts in this recipe can be replaced by any other scripting language
    such as Python or PowerShell.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方中的 Bash 脚本可以被任何其他脚本语言（如 Python 或 PowerShell）替换。
- en: Instead of the CA list from Firefox, any other set of CA certificates may be
    used. Some CA certificates may be removed, for example a particular CA certificate
    not trusted by the user, or some additional CA certificates may be added, for
    example inner corporate CA certificates to access a company's intranet resources.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用除 Firefox 中的 CA 列表之外的任何其他 CA 证书集。可能需要删除某些 CA 证书，例如用户不信任的特定 CA 证书，或者可能添加一些额外的
    CA 证书，例如访问公司内部网络资源的内部企业 CA 证书。
- en: See also
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The source of the script used in this recipe is the `obuildfactory` project
    on GitHub at [https://github.com/hgomez/obuildfactory/blob/2075649116e32a5f0bbf8fc7b2791769387eda92/openjdk7/macosx/build.sh#L54](https://github.com/hgomez/obuildfactory/blob/2075649116e32a5f0bbf8fc7b2791769387eda92/openjdk7/macosx/build.sh#L54)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此配方中使用的脚本的来源是 GitHub 上的 `obuildfactory` 项目，网址为 [https://github.com/hgomez/obuildfactory/blob/2075649116e32a5f0bbf8fc7b2791769387eda92/openjdk7/macosx/build.sh#L54](https://github.com/hgomez/obuildfactory/blob/2075649116e32a5f0bbf8fc7b2791769387eda92/openjdk7/macosx/build.sh#L54)
- en: The cURL utility manual at [http://curl.haxx.se/docs/manpage.html](http://curl.haxx.se/docs/manpage.html)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cURL 工具手册 [http://curl.haxx.se/docs/manpage.html](http://curl.haxx.se/docs/manpage.html)
- en: The keytool utility manual at [http://docs.oracle.com/javase/6/docs/technotes/tools/windows/key](http://docs.oracle.com/javase/6/docs/technotes/tools/windows/key)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: keytool 工具手册 [http://docs.oracle.com/javase/6/docs/technotes/tools/windows/key](http://docs.oracle.com/javase/6/docs/technotes/tools/windows/key)
- en: Building OpenJDK 6 on Ubuntu Linux 12.04 LTS
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Ubuntu Linux 12.04 LTS 上构建 OpenJDK 6
- en: The build process of OpenJDK relies heavily on Unix-like development tools.
    Linux-based operating systems usually have top notch support for such tools, so
    building OpenJDK on Linux can be simpler than on Windows. For major distributions
    such as Fedora or Ubuntu, build toolchain and all dependencies are already included
    in distributions as packages and can be installed easily.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 的构建过程严重依赖于类 Unix 开发工具。基于 Linux 的操作系统通常对这些工具提供顶级支持，因此，在 Linux 上构建 OpenJDK
    可能比在 Windows 上简单。对于像 Fedora 或 Ubuntu 这样的主要发行版，构建工具链和所有依赖项已经作为软件包包含在发行版中，可以轻松安装。
- en: Ubuntu 12.04 LTS was chosen for this book because it is one of the most popular
    Linux distributions. For readers running other operating Ubuntu 12.04, virtual
    images may be found online for the most popular virtualization tools, such as
    Oracle VirtualBox or VMware.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 Ubuntu 12.04 LTS 作为本书的操作系统，因为它是最受欢迎的 Linux 发行版之一。对于运行其他操作系统的 Ubuntu 12.04
    的读者，可以在网上找到用于最流行的虚拟化工具（如 Oracle VirtualBox 或 VMware）的虚拟镜像。
- en: To build binaries for i586 and amd64 architectures, corresponding versions of
    Ubuntu should be used. Build instructions are exactly the same for both architectures,
    so they won't be mentioned further in this recipe.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要为 i586 和 amd64 架构构建二进制文件，应使用相应的 Ubuntu 版本。对于这两个架构，构建说明完全相同，因此在此配方中不会进一步提及。
- en: Getting ready
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will need a clean Ubuntu 12.04 (server or desktop version)
    running.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此配方，我们需要一个干净的 Ubuntu 12.04（服务器或桌面版本）运行。
- en: How to do it...
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following steps will help us to build OpenJDK:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助我们构建 OpenJDK：
- en: 'Install prepackaged binaries of OpenJDK 6:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 OpenJDK 6 的预打包二进制文件：
- en: '[PRE7]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Install GCC toolchain and build dependencies:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 GCC 工具链和构建依赖项：
- en: '[PRE8]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Download and decompress official OpenJDK 6 build 30 tarball:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并解压官方 OpenJDK 6 构建版本 30 的 tarball：
- en: '[PRE9]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Open the `jdk/make/javax/sound/jsoundalsa/Makefile` file with your favorite
    text editor and change line 68 from `LDFLAGS += -lasound` to:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您喜欢的文本编辑器打开 `jdk/make/javax/sound/jsoundalsa/Makefile` 文件，并将第 68 行从 `LDFLAGS
    += -lasound` 更改为：
- en: '[PRE10]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Create a new text file `buildenv.sh` with the following environment settings:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `buildenv.sh` 的新文本文件，包含以下环境设置：
- en: '[PRE11]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Import the environment into the current shell session (note a dot and a space
    before it):'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将环境导入当前 shell 会话（注意它前面有一个点和空格）：
- en: '[PRE12]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Start the build process from the `openjdk-6-src-b30-21_jan_2014` directory:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `openjdk-6-src-b30-21_jan_2014` 目录开始构建过程：
- en: '[PRE13]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Wait for the build to finish, and try to run the newly built binaries:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待构建完成，然后尝试运行新构建的二进制文件：
- en: '[PRE14]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How it works...
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Prepackaged binaries of OpenJDK 6 are required because some of the build steps
    are run using the external Java runtime.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 预打包的二进制文件是必需的，因为一些构建步骤是使用外部 Java 运行时运行的。
- en: The `build-dep` command is used to install all the dependencies that are required
    to build the specified package. As Ubuntu packaged OpenJDK 6 is quite close to
    the official OpenJDK 6, this command will install almost all of the required dependencies.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`build-dep` 命令用于安装构建指定软件包所需的所有依赖项。由于 Ubuntu 打包的 OpenJDK 6 与官方 OpenJDK 6 非常接近，此命令将安装几乎所有所需的依赖项。'
- en: The `libmotif-dev` package is the only additional package required. It contains
    the Motif GUI toolkit header files.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`libmotif-dev` 软件包是唯一需要的额外软件包。它包含 Motif GUI 工具包的头文件。'
- en: The `jdk/make/javax/sound/jsoundalsa/Makefile` file adjustment is required to
    conform with the Ubuntu 12.04 GCC 4.6 toolchain. It is not required for the original
    GCC 4.2 toolchain and may not be required for more recent OpenJDK 6 official sources,
    because this change is going to be included in OpenJDK 6 upstream.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 需要对 `jdk/make/javax/sound/jsoundalsa/Makefile` 文件进行调整，以符合 Ubuntu 12.04 GCC 4.6
    工具链。对于原始 GCC 4.2 工具链，可能不需要此调整，并且对于更近期的 OpenJDK 6 官方源代码，可能也不需要，因为此更改将被包含在 OpenJDK
    6 上游。
- en: The `tee` command is used to write output to the logfile and the screen simultaneously.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`tee` 命令用于同时将输出写入日志文件和屏幕。'
- en: After a successful build on the amd64 platform, JDK files will be placed in
    `build/linux-amd64/j2sdk-image` and JRE files will be placed in `build/linux-amd64/j2re-image`.
    On the i586 platform, the `build/linux-i586` path will be used instead.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在 amd64 平台上成功构建后，JDK 文件将放置在 `build/linux-amd64/j2sdk-image`，JRE 文件将放置在 `build/linux-amd64/j2re-image`。在
    i586 平台上，将使用 `build/linux-i586` 路径。
- en: There's more...
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: 'Javadoc generation takes a lot of time and is the most memory consuming step
    of the build. It may be skipped with an additional environment variable:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Javadoc 生成过程耗时很多，是构建过程中最消耗内存的步骤。可以通过设置一个额外的环境变量来跳过：
- en: '[PRE15]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This build has generated a milestone tag and a build number `b00`. The predefined
    build number and milestone may be set using additional environment variables:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此构建已生成一个里程碑标签和构建号 `b00`。预定义的构建号和里程碑可以通过额外的环境变量设置：
- en: '[PRE16]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `cacerts` file may be provided during the build using an additional environment
    variable:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建过程中可以使用额外的环境变量提供 `cacerts` 文件：
- en: '[PRE17]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: For amd64 builds, preinstalled Java provided by the `ALT_BOOTDIR` variable may
    be either the amd64 or i586 build. The i586 binaries consume less memory and may
    be used for amd64 builds on limited hardware.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 amd64 构建，由 `ALT_BOOTDIR` 变量提供的预安装 Java 可以是 amd64 或 i586 构建。i586 二进制文件消耗更少的内存，并且可以在硬件有限的情况下用于
    amd64 构建。
- en: The build process for OpenJDK 6 is effectively single-threaded; parallel builds
    (using `make -j N`) are not supported for this version.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 6 的构建过程实际上是单线程的；对于此版本，不支持并行构建（使用 `make -j N`）。
- en: See also
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The previous recipe *Preparing CA certificates*
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 之前的配方 *准备 CA 证书*
- en: The official build instructions for OpenJDK 6 at [http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html)
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenJDK 6 的官方构建说明在 [http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html)
- en: The source bundles of the current OpenJDK 6 version from Red Hat, Inc. at [https://java.net/projects/openjdk6/downloads](https://java.net/projects/openjdk6/downloads)
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自 Red Hat, Inc. 的当前 OpenJDK 6 版本的源代码包，请访问 [https://java.net/projects/openjdk6/downloads](https://java.net/projects/openjdk6/downloads)
- en: The source bundles of older versions of OpenJDK 6 from Oracle at [http://download.java.net/openjdk/jdk6/promoted/](http://download.java.net/openjdk/jdk6/promoted/)
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自 Oracle 的较旧版本 OpenJDK 6 的源代码包，请访问 [http://download.java.net/openjdk/jdk6/promoted/](http://download.java.net/openjdk/jdk6/promoted/)
- en: The mailing list thread about problems with `jsoundalsa` on Ubuntu 12.04 noted
    previously at [http://mail.openjdk.java.net/pipermail/jdk6-dev/2014-January/003222.html](http://mail.openjdk.java.net/pipermail/jdk6-dev/2014-January/003222.html)
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Ubuntu 12.04 上 `jsoundalsa` 问题之前提到的邮件列表线程，请访问 [http://mail.openjdk.java.net/pipermail/jdk6-dev/2014-January/003222.html](http://mail.openjdk.java.net/pipermail/jdk6-dev/2014-January/003222.html)
- en: Setting up the minimum build environment for the most compatible Linux builds
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置最兼容的 Linux 构建的最小构建环境
- en: OpenJDK 6 on Linux was developed for and most excessively tested with those
    GCC toolchains available at that time. Modern Linux distributions have newer toolchains,
    for example, Ubuntu 12.04 has GCC 4.6\. Newer toolchains may have more advanced
    optimizations and provide slightly faster code, but older ones should be more
    stable for OpenJDK.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 上的 OpenJDK 6 是为当时可用的 GCC 工具链开发的，并且进行了过度的测试。现代 Linux 发行版有更新的工具链，例如，Ubuntu
    12.04 有 GCC 4.6。更新的工具链可能有更先进的优化，并提供略微更快的代码，但较旧的工具链应该对 OpenJDK 更稳定。
- en: 'Oracle published the minimum build environment description for OpenJDK 6\.
    It says:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle 发布了 OpenJDK 6 的最小构建环境描述。它说：
- en: '*"Building with the MBE will generate the most compatible bits that install
    on, and run correctly on, the most variations of the same base OS and hardware
    architecture."*'
  id: totrans-105
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"使用 MBE 构建将生成与同一基础操作系统和硬件架构的更多变体兼容的位，并且可以安装和正确运行。"* '
- en: We are going to build OpenJDK 6 on one of the minimum build environment platforms—Debian
    Linux 5.0 Lenny. The build instructions are exactly the same for i586 and amd64
    architectures, so they won't be mentioned further in this recipe.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在以下最小构建环境平台之一上构建 OpenJDK 6——Debian Linux 5.0 Lenny。对于 i586 和 amd64 架构，构建说明完全相同，因此在此配方中不再提及。
- en: The build steps are similar to the previous recipe so we'll concentrate on different
    steps.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 构建步骤与之前的配方类似，所以我们将专注于不同的步骤。
- en: Getting ready
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this recipe, we will need Debian Lenny running. Installation images may be
    downloaded from the Debian CDImage archive. Lenny may not be compatible with some
    of the hardware on newer laptops, but should run fine with virtualization tools
    such as Oracle VirtualBox or VMware.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中，我们需要运行 Debian Lenny。安装镜像可以从 Debian CDImage 存档下载。Lenny 可能与一些较新笔记本电脑上的某些硬件不兼容，但应该可以在
    Oracle VirtualBox 或 VMware 等虚拟化工具上正常运行。
- en: How to do it...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps will help us to set up the minimum build environment:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助我们设置最小构建环境：
- en: 'Add archive repositories to the `/etc/apt/sources.list` file:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将存档仓库添加到 `/etc/apt/sources.list` 文件：
- en: '[PRE18]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Install OpenJDK 6 binaries and build dependencies:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 OpenJDK 6 二进制文件和构建依赖项：
- en: '[PRE19]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Download and decompress Apache Ant:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并解压 Apache Ant：
- en: '[PRE20]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Create a new text file `buildenv.sh` with environment settings, and import
    its content into the current bash shell:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含环境设置的新的文本文件 `buildenv.sh`，并将其内容导入当前 bash shell：
- en: '[PRE21]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Download and decompress the official OpenJDK 6 build 30 tarball:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并解压官方 OpenJDK 6 构建版本 30 的 tarball：
- en: '[PRE22]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Start the build process from the `openjdk-6-src-b30-21_jan_2014` directory:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `openjdk-6-src-b30-21_jan_2014` 目录开始构建过程：
- en: '[PRE23]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Wait for the build to finish.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待构建完成。
- en: How it works...
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Archive repository setup is required because the official Lenny repositories
    are no longer available.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 需要设置存档仓库，因为官方 Lenny 仓库已不再可用。
- en: A newer version of Apache Ant is required because the bundled Version 1.7.0
    in Lenny is too old and OpenJDK 6 requires Ant 1.7.1 or higher.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 需要一个更新的 Apache Ant 版本，因为 Lenny 中捆绑的 1.7.0 版本太旧，OpenJDK 6 需要 Ant 1.7.1 或更高版本。
- en: There's more...
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Other older Linux distributions such as Ubuntu 8.04 or Fedora 9 also may be
    used as the minimum build environment.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 其他较老的 Linux 发行版，如 Ubuntu 8.04 或 Fedora 9，也可以用作最小构建环境。
- en: See also
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Building OpenJDK 6 on Ubuntu Linux 12.04 LTS* recipe
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在 Ubuntu Linux 12.04 LTS 上构建 OpenJDK 6* 的配方'
- en: The official build instructions for OpenJDK, 6 with the description of minimum
    build platforms, at [http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html#MBE](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html#MBE)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenJDK 的官方构建说明，6 版本，包括最小构建平台的描述，可在 [http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html#MBE](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html#MBE)
    找到
- en: The Debian CDImages archive at [http://cdimage.debian.org](http://cdimage.debian.org)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian CDImages 存档位于 [http://cdimage.debian.org](http://cdimage.debian.org)
- en: Installing Cygwin for Windows builds
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Cygwin for Windows 版本
- en: Like most of the other cross-platform open source projects, OpenJDK uses Unix-like
    tools for the build process. Tools such as `gmake`, `awk`, and `cpio` are ubiquitous
    for the Unix and Linux world and may be found on almost any Unix-like platform.
    However, these tools are based on Unix process behavior, and that becomes a problem
    when we want to run them on Windows.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 与大多数其他跨平台开源项目一样，OpenJDK 使用类似 Unix 的工具进行构建过程。例如 `gmake`、`awk` 和 `cpio` 在 Unix
    和 Linux 世界中无处不在，几乎可以在任何类似 Unix 的平台上找到。然而，这些工具基于 Unix 进程行为，当我们想在 Windows 上运行它们时，这会成为一个问题。
- en: Cygwin is a set of free and open source tools being developed by Red Had, Inc.
    and provides limited support for the Unix-like environment in Windows. It is required
    to build OpenJDK on Windows.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Cygwin 是由 Red Hat, Inc. 开发的一套免费和开源工具，为 Windows 提供对类似 Unix 环境的有限支持。在 Windows
    上构建 OpenJDK 时是必需的。
- en: OpenJDK requires Cygwin i586 for both i586 and amd64 builds. The installation
    procedure is the same for both Windows 7 SP1 i586 and Windows 7 SP1 amd64 so we
    won't mention architecture further in this recipe.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 需要 Cygwin i586 来进行 i586 和 amd64 构建。对于 Windows 7 SP1 i586 和 Windows 7
    SP1 amd64 的安装程序是相同的，所以我们在此配方中不会进一步提及架构。
- en: Getting ready
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To install and successfully use Cygwin, we'll need a clean installation of Windows
    7 SP1 without antivirus software running.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装并成功使用 Cygwin，我们需要一个干净的 Windows 7 SP1 安装，且没有运行防病毒软件。
- en: How to do it...
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps will help us to install Cygwin:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助我们安装 Cygwin：
- en: Download `setup-x86.exe` from the [http://cygwin.com/](http://cygwin.com/) website.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://cygwin.com/](http://cygwin.com/) 网站下载 `setup-x86.exe`。
- en: Run the installer and choose [http://mirrors.kernel.org](http://mirrors.kernel.org)
    as a packages' mirror.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行安装程序，并将 [http://mirrors.kernel.org](http://mirrors.kernel.org) 作为软件包的镜像。
- en: 'Choose the additional packages:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择附加软件包：
- en: '[PRE24]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Perform the installation into the directory with the path in ASCII letters or
    numbers without spaces.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将安装程序安装到包含 ASCII 字母或数字路径的目录中，路径中不应包含空格。
- en: How it works...
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Any antivirus software (or similar software that may scan the memory of other
    applications) is prohibited because it may interfere with Cygwin. Cygwin uses
    complex techniques to simulate the fork functionality of Unix on Windows. These
    techniques may not work with antivirus scanners running.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 任何防病毒软件（或可能扫描其他应用程序内存的类似软件）都是禁止的，因为它可能会干扰 Cygwin。Cygwin 使用复杂的技术在 Windows 上模拟
    Unix 的 fork 功能。这些技术在运行防病毒扫描器的情况下可能不起作用。
- en: Only the i586 version on Cygwin is supported to build OpenJDK. The amd64 Cygwin
    may or may not work.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 只有 Cygwin 上的 i586 版本支持构建 OpenJDK。amd64 Cygwin 可能或可能不支持。
- en: 'The Cygwin community hosts a lot of packages'' mirrors worldwide. We use the
    [https://www.kernel.org/](https://www.kernel.org/) mirror as one that should have
    the most complete set of prebuilt packages:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Cygwin 社区在全球范围内托管了许多软件包的镜像。我们使用 [https://www.kernel.org/](https://www.kernel.org/)
    镜像，因为它应该拥有最完整的预构建软件包集：
- en: The `binutils` package is required for the `ar` utility. This is a special kind
    of archiver that may be used to create and update static libraries
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`binutils` 软件包是 `ar` 实用工具所必需的。这是一种特殊的归档器，可以用来创建和更新静态库'
- en: The `m4` package is required to work with classic Unix macro processor scripts
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`m4` 软件包是用于与经典 Unix 宏处理器脚本一起工作的必需品'
- en: The `cpio` utility is used as an archiver because it may be much faster than
    the more popular tar utility in some environments
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cpio` 实用工具被用作归档器，因为在某些环境中，它可能比更流行的 tar 实用工具快得多'
- en: The `procps` package is required for the free utility, which is used to get
    information about free and used memory
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`procps` 软件包对于免费实用工具是必需的，该工具用于获取有关空闲和已用内存的信息'
- en: There's more...
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: OpenJDK 6 can also be built using commercial MKS toolkit. This method provides
    shorter build times, but is not supported for OpenJDK 8 and above.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 6 也可以使用商业 MKS 工具包构建。这种方法提供了更短的构建时间，但不支持 OpenJDK 8 及以上版本。
- en: 'A Cygwin installation may be copied from one Windows box to another without
    installation. This may be useful for builds on clean Windows boxes. Besides the
    usual windows binaries, Cygwin uses special kinds of symlink files, for example,
    `bin/awk` actually points to `bin/gawk.exe`. These symlinks may be crippled if
    loaded into or from version control systems such as Git. This problem may be circumvented
    by replacing symlinks with copies of actual binaries with symlink names: `gawk.exe`
    to `awk.exe` and so on.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Cygwin的安装可以从一个Windows系统复制到另一个系统而不需要安装。这对于在干净的Windows系统上构建可能很有用。除了常用的Windows二进制文件外，Cygwin还使用特殊类型的符号链接文件，例如，`bin/awk`实际上指向`bin/gawk.exe`。如果将这些符号链接加载到或从版本控制系统（如Git）中，它们可能会损坏。可以通过用具有符号链接名称的实际二进制文件的副本替换符号链接来解决这个问题：`gawk.exe`到`awk.exe`等等。
- en: See also
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关阅读
- en: The official build instructions for OpenJDK 6 with the list of required Cygwin
    packages at [http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html#cygwin](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html#cygwin)
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenJDK 6的官方构建说明以及所需的Cygwin软件包列表，请参阅[http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html#cygwin](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html#cygwin)
- en: The list of applications that may interfere with Cygwin at [https://cygwin.com/faq/faq.html#faq.using.bloda](https://cygwin.com/faq/faq.html#faq.using.bloda)
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能干扰Cygwin的应用程序列表，请参阅[https://cygwin.com/faq/faq.html#faq.using.bloda](https://cygwin.com/faq/faq.html#faq.using.bloda)
- en: The Cygwin user's guide at [https://www.cygwin.com/cygwin-ug-net/cygwin-ug-net.html](https://www.cygwin.com/cygwin-ug-net/cygwin-ug-net.html)
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cygwin用户指南，请参阅[https://www.cygwin.com/cygwin-ug-net/cygwin-ug-net.html](https://www.cygwin.com/cygwin-ug-net/cygwin-ug-net.html)
- en: Building 32-bit FreeType libraries for OpenJDK 6 on Windows
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上为OpenJDK 6构建32位FreeType库
- en: The majority of fonts used in modern software are encoded in vector format for
    proper scaling support. There are multiple standards for vector fonts, for example,
    Metafont from Professor Donald E. Knuth, Type1 from Adobe, TrueType from Apple
    and Microsoft, and OpenType from Adobe and Microsoft.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现代软件中使用的多数字体都编码为矢量格式，以支持适当的缩放。矢量字体有多个标准，例如，唐纳德·E·克努特教授的Metafont，Adobe的Type1，Apple和Microsoft的TrueType，以及Adobe和Microsoft的OpenType。
- en: Rasterization of vector fonts is a remarkably complex task and most desktop
    software (such as web browsers or text processors) use third-party libraries to
    work with fonts.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 矢量字体的光栅化是一个非常复杂的过程，大多数桌面软件（如网页浏览器或文本处理器）都使用第三方库来处理字体。
- en: Sun Microsystems licensed a third-party closed-source font library for use in
    Sun Java implementations. Sources of this library could not be released to public
    along with the initial release of OpenJDK. The Font Scaler Replacement Project
    was launched in the early days of OpenJDK to adopt an open source font library
    instead.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Sun Microsystems为Sun Java实现许可了一个第三方闭源字体库。这个库的源代码不能与OpenJDK的初始版本一起发布。在OpenJDK早期，启动了字体缩放器替换项目，以采用开源字体库。
- en: FreeType is a free and open source (under permissive license) font rasterization
    library. It is used widely in open source desktop software. FreeType was chosen
    by the OpenJDK team as a replacement for the closed-source font library and is
    now used by OpenJDK on all supported platforms. Prebuilt static and dynamic FreeType
    libraries are required for OpenJDK builds on Windows.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: FreeType是一个免费的开源（在宽松许可下）字体光栅化库。它在开源桌面软件中得到广泛应用。OpenJDK团队选择了FreeType作为闭源字体库的替代品，现在在所有支持的平台上使用。Windows上的OpenJDK构建需要预构建的静态和动态FreeType库。
- en: Getting ready
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe we should have Windows 7 SP1 i586 running.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们应该有一个运行Windows 7 SP1 i586的系统。
- en: How to do it...
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps will help us in building FreeType:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助我们构建FreeType：
- en: Install Visual Studio.NET 2003 to the default installation path. Only Prerequisites
    and Visual C++ components are required.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Visual Studio.NET 2003安装到默认安装路径。只需要先决条件和Visual C++组件。
- en: Download the FreeType 2.5.2 source tarball from [http://freetype.org/](http://freetype.org/)
    and decompress it.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[http://freetype.org/](http://freetype.org/)下载FreeType 2.5.2源代码tar包并解压。
- en: 'Open the file `include\config\ftoption.h` and uncomment:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开文件`include\config\ftoption.h`并取消注释：
- en: '[PRE25]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Change lines `/* #define FT_EXPORT(x) extern x */` and `/* #define FT_EXPORT_DEF(x)
    x */` to:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '将行`/* #define FT_EXPORT(x) extern x */`和`/* #define FT_EXPORT_DEF(x) x */`更改为：'
- en: '[PRE26]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Open the project file `builds\windows\visualc\freetype.dsw` in Visual Studio.NET
    2003.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Visual Studio.NET 2003中打开项目文件`builds\windows\visualc\freetype.dsw`。
- en: Change `Solution Configuration` to `Release Multithreaded` and build the solution.
    The `freetype252MT.lib` file will be placed into the `objs` directory.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `Solution Configuration` 更改为 `Release Multithreaded` 并构建解决方案。`freetype252MT.lib`
    文件将被放置在 `objs` 目录中。
- en: Rename the file `freetype.lib` and save it for OpenJDK builds.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重命名文件 `freetype.lib` 并将其保存以用于 OpenJDK 构建。
- en: In **Project Properties** change **Configuration Type** to **Dynamic Library
    (.dll)** and build the solution. The `freetype.dll` and `freetype.exp` files will
    be placed into the `objs\release_mt` directory.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **项目属性** 中将 **配置类型** 更改为 **动态库 (.dll)** 并构建解决方案。`freetype.dll` 和 `freetype.exp`
    文件将被放置在 `objs\release_mt` 目录中。
- en: The directory with three result files will be denoted by the `ALT_FREETYPE_LIB_PATH`
    environment variable during OpenJDK builds.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OpenJDK 构建过程中，带有三个结果文件的目录将由 `ALT_FREETYPE_LIB_PATH` 环境变量表示。
- en: How it works...
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `FT_CONFIG_OPTION_SUBPIXEL_RENDERING` macro enables subpixel rendering functionality
    in FreeType implementation.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`FT_CONFIG_OPTION_SUBPIXEL_RENDERING` 宏在 FreeType 实现中启用亚像素渲染功能。'
- en: The `FT_EXPORT` and `FT_EXPORT_DEF` macros should be adjusted with the calling
    conventions for the current platform. We changed them to use Windows-specific
    calling conventions.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 应该根据当前平台的调用约定调整 `FT_EXPORT` 和 `FT_EXPORT_DEF` 宏。我们将它们更改为使用 Windows 特定的调用约定。
- en: FreeType has no predefined project file for Visual Studio.NET 2003\. Instead,
    we are using the project file created for Visual Studio 6.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: FreeType 没有为 Visual Studio.NET 2003 预定义项目文件。相反，我们正在使用为 Visual Studio 6 创建的项目文件。
- en: See also
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Building 64-bit FreeType libraries for OpenJDK 6 on Windows* recipe
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在 Windows 上为 OpenJDK 6 构建 64 位 FreeType 库* 配方'
- en: The FreeType official website [http://freetype.org/](http://freetype.org/)
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FreeType 官方网站 [http://freetype.org/](http://freetype.org/)
- en: Professor Donald E. Knuth's interview covering Metafont and TrueType at [http://www.advogato.org/article/28.html](http://www.advogato.org/article/28.html)
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 教授 Donald E. Knuth 关于 Metafont 和 TrueType 的访谈，请访问 [http://www.advogato.org/article/28.html](http://www.advogato.org/article/28.html)
- en: 'The *OpenJDK: Font Scaler Replacement Project* page at [http://openjdk.java.net/projects/font-sc](http://openjdk.java.net/projects/font-sc)'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*OpenJDK: 字体缩放器替换项目* 页面 [http://openjdk.java.net/projects/font-sc](http://openjdk.java.net/projects/font-sc)'
- en: Building 64-bit FreeType libraries for OpenJDK 6 on Windows
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Windows 上为 OpenJDK 6 构建 64 位 FreeType 库
- en: The FreeType build for Windows amd64 is similar to the i586 build but has a
    much more complex configuration. Contrary to the i586 version, the amd64 library
    can be built with freely available tools using Microsoft Visual Studio 2005 Express
    Edition with the Windows Server 2003 SP1 Platform SDK.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: Windows amd64 的 FreeType 构建 与 i586 构建 类似，但配置更为复杂。与 i586 版本不同，amd64 库可以使用 Microsoft
    Visual Studio 2005 Express Edition 和 Windows Server 2003 SP1 平台 SDK 中的免费工具进行构建。
- en: Getting ready
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we need to have Windows 7 SP1 amd64 running.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个配方，我们需要运行 Windows 7 SP1 amd64。
- en: How to do it...
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps will help us in building FreeType:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助我们构建 FreeType：
- en: Download the Visual Studio 2005 Express Edition from [http://www.microsoft.com/en-in/default.aspx](http://www.microsoft.com/en-in/default.aspx)
    and install it to the default location. The messages about Windows 7 compatibility
    problems may be ignored.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://www.microsoft.com/en-in/default.aspx](http://www.microsoft.com/en-in/default.aspx)
    下载 Visual Studio 2005 Express Edition 并将其安装到默认位置。关于 Windows 7 兼容性问题的消息可以忽略。
- en: Install `VS80sp1-KB926748-X86-INTL` and `VS80sp1-KB932232-X86-ENU` Visual Studio
    updates.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 `VS80sp1-KB926748-X86-INTL` 和 `VS80sp1-KB932232-X86-ENU` Visual Studio 更新。
- en: Download Windows Server 2003 SP1 Platform SDK from [http://www.microsoft.com/en-in/default.aspx](http://www.microsoft.com/en-in/default.aspx)
    and install it using the default installation path. AMD-64 components are required
    for the build.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://www.microsoft.com/en-in/default.aspx](http://www.microsoft.com/en-in/default.aspx)
    下载 Windows Server 2003 SP1 平台 SDK 并使用默认安装路径进行安装。构建需要 AMD-64 组件。
- en: Perform steps 2, 3, and 4 from the previous recipe to download and adjust FreeType
    sources.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行上一个配方中的步骤 2、3 和 4 以下载和调整 FreeType 源代码。
- en: From the **Start** menu go to **Microsoft Platform SDK for Windows Server 2003
    SP1** | **Open Build Environment Window** | **Windows Server 2003 64-bit Build
    Environment** | **Set Win Svr 2003 x64 Build Env (Retail)**.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**开始**菜单进入**Microsoft Platform SDK for Windows Server 2003 SP1** | **打开构建环境窗口**
    | **Windows Server 2003 64位构建环境** | **设置 Win Svr 2003 x64 构建环境 (零售)**。
- en: 'From the `cmd.exe` window that appears, run (the administrator permissions
    warning may be ignored):'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从出现的 `cmd.exe` 窗口中运行（管理员权限警告可以忽略）：
- en: '[PRE27]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In the main menu navigate to **Tools** | **Options** | **Projects and Solutions**
    | **VC++ Directories** and adjust the following directories:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主菜单中导航到**工具** | **选项** | **项目和解决方案** | **VC++ 目录**，并调整以下目录：
- en: '[PRE28]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Open the FreeType solution at this path `freetype-2.5.2\builds\windows\vc2005\freetype.sln`.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开位于此路径的FreeType解决方案`freetype-2.5.2\builds\windows\vc2005\freetype.sln`。
- en: In the menu, navigate to **Project** | **Properties** | **Configuration Properties**
    | **Configuration Manager** and choose **<New ...>** under **Active solution platform**.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在菜单中，导航到**项目** | **属性** | **配置属性** | **配置管理器**，并在**活动解决方案平台**下选择**<新建 ...>**。
- en: Type `new platform x64` and choose **Win32** from **Copy settings from**.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`new platform x64`，并从**从以下设置复制**中选择**Win32**。
- en: On the **Configuration Manager** form, navigate to **Active solution configuration**
    | **LIB Release Multithreaded** and then go to **Active solution platform** |
    **x64**.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置管理器**表单中，导航到**活动解决方案配置** | **LIB 发布多线程**，然后转到**活动解决方案平台** | **x64**。
- en: On the same form, in the grid for the FreeType project, navigate to **Configuration**
    | **Release multithreaded** and leave the **Win32** value under the **Platform**
    menu.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在同一表单中，在FreeType项目的网格中，导航到**配置** | **发布多线程**，并在**平台**菜单下保留**Win32**值。
- en: In the **Configuration Properties** menu, check whether **Configuration Type**
    is set to **Static Library (.lib)**.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置属性**菜单中，检查**配置类型**是否设置为**静态库 (.lib**)。
- en: Navigate to **Configuration Properties** | **C/C++** | **Preprocessor** and
    change the **WIN32** value in the **Processor Definitions** string to **WIN64**.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**配置属性** | **C/C++** | **预处理器**，并将**处理器定义**字符串中的**WIN32**值更改为**WIN64**。
- en: Run **Build Solution** under **Build**, the `freetype252MT.lib` library will
    be placed into the `freetype-2.5.2\objs\win32\vc2005` directory. Rename it to
    `freetype.lib`, and save it for later.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**构建**下的**构建解决方案**运行，`freetype252MT.lib`库将被放置到`freetype-2.5.2\objs\win32\vc2005`目录中。将其重命名为`freetype.lib`，并保存以备后用。
- en: In the **Configuration Properties** menu, change **Configuration Type** to **Dynamic
    Library (.dll)** and choose **Apply**.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置属性**菜单中，将**配置类型**更改为**动态库 (.dll**)并选择**应用**。
- en: Navigate to **Configuration Properties** | **Linker** | **Input** and put `bufferoverflowU.lib`
    into the **Additional Dependencies** field.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**配置属性** | **链接器** | **输入**，并将`bufferoverflowU.lib`放入**附加依赖项**字段。
- en: Navigate to **Configuration Properties** | **Linker** | **Command Line** and
    put `/MACHINE:AMD64` into the **Additional options** field.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**配置属性** | **链接器** | **命令行**，并将`/MACHINE:AMD64`放入**附加选项**字段。
- en: Clean and build the solution. Target libraries `freetype.dll` and `freetype.exp`
    will be placed into the `freetype-2.5.2\objs\release_mt` directory.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清理并构建解决方案。目标库`freetype.dll`和`freetype.exp`将被放置到`freetype-2.5.2\objs\release_mt`目录中。
- en: The directory with three result files will be denoted by the `ALT_FREETYPE_LIB_PATH`
    environment variable during OpenJDK builds.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在OpenJDK构建期间，带有三个结果文件的目录将由`ALT_FREETYPE_LIB_PATH`环境变量表示。
- en: How it works...
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Visual Studio 2005 Express does not support amd64 architecture, so the setup
    to use amd64 compilers from Windows SDK takes most of this recipe.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2005 Express不支持amd64架构，因此使用Windows SDK中的amd64编译器的设置占据了此食谱的大部分。
- en: See also
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Building 32-bit FreeType libraries for OpenJDK 6 on Windows* recipe
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在Windows上为OpenJDK 6构建32位FreeType库**的食谱'
- en: The FreeType official website [http://freetype.org/](http://freetype.org/)
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FreeType官方网站[http://freetype.org/](http://freetype.org/)
- en: Building 32-bit OpenJDK 6 on Windows 7 SP1
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows 7 SP1上构建32位OpenJDK 6
- en: Windows builds are much more cumbersome than Linux ones. Despite that, GCC toolchain
    is available on Windows. Through the MinGW project, OpenJDK uses official Microsoft
    compilers from Visual Studio and Windows SDK. This brings a lot of complications
    because the Microsoft toolchain doesn't work well with the Unix-like environment
    provided by Cygwin.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: Windows构建比Linux构建要复杂得多。尽管如此，Windows上也有GCC工具链。通过MinGW项目，OpenJDK使用来自Visual Studio和Windows
    SDK的官方Microsoft编译器。这带来了很多复杂性，因为Microsoft工具链与Cygwin提供的类Unix环境不兼容。
- en: Visual Studio.NET 2003 is required to build i586 binaries. OpenJDK 6 on Windows
    i586 is the only version in this book that cannot be built using freely available
    tools. VS 2003 was chosen for OpenJDK 6 because it supports Windows 2000, which
    was critical at the time of Sun Java 6's development.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 需要Visual Studio.NET 2003来构建i586二进制文件。Windows i586上的OpenJDK 6是本书中唯一不能使用免费工具构建的版本。选择VS
    2003用于OpenJDK 6是因为它支持Windows 2000，这在Sun Java 6开发时期至关重要。
- en: Getting ready
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we should have Windows 7 SP1 i586 running with no antivirus
    software installed. Antivirus software is not allowed because it may interfere
    with the Cygwin runtime.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个配方，我们应该有一个没有安装任何防病毒软件的 Windows 7 SP1 i586 运行。不允许使用防病毒软件，因为它可能会干扰 Cygwin
    运行时。
- en: How to do it...
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps will help us to build OpenJDK 6:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助我们构建 OpenJDK 6：
- en: Install Visual Studio.NET 2003 to the default installation path. Only the prerequisites
    and the Visual C++.NET component are required.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Visual Studio.NET 2003 安装到默认安装路径。只需要先决条件和 Visual C++.NET 组件。
- en: Install or copy the preinstalled version of Cygwin to `c:\cygwin`.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将预安装的 Cygwin 版本安装或复制到 `c:\cygwin`。
- en: 'Download and install Microsoft DirectX 9.0 SDK (Summer 2004) to the default
    installation path. Note that this distribution is not available anymore from the
    [http://www.microsoft.com/en-in/default.aspx](http://www.microsoft.com/en-in/default.aspx)
    website. We can download it from some other places online and check the file details:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Microsoft DirectX 9.0 SDK（夏季 2004）下载并安装到默认安装路径。请注意，此分发版不再可以从 [http://www.microsoft.com/en-in/default.aspx](http://www.microsoft.com/en-in/default.aspx)
    网站获取。我们可以从其他在线位置下载它，并检查文件详细信息：
- en: '[PRE29]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Download Platform Software Development Kit Redistributable: Microsoft Layer
    for Unicode on Windows 95, 98, and Me Systems, 1.1.3790.0 from [http://www.microsoft.com/en-in/default.aspx](http://www.microsoft.com/en-in/default.aspx)
    and install it into the `c:\unicows` directory.'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://www.microsoft.com/en-in/default.aspx](http://www.microsoft.com/en-in/default.aspx)
    下载平台软件开发工具包可再分发版：Windows 95、98 和 Me 系统的 Unicode 层，版本 1.1.3790.0，并将其安装到 `c:\unicows`
    目录。
- en: Download `unicows.lib` from the `openjdk-unofficial-builds` GitHub project and
    put this into the `c:\unicows` directory too.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `openjdk-unofficial-builds` GitHub 项目下载 `unicows.lib`，并将其放入 `c:\unicows` 目录。
- en: Download the Apache Ant version 1.8.4 ZIP distribution from the [http://apache.org/](http://apache.org/)
    website and decompress it into the `c:\ant` directory.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://apache.org/](http://apache.org/) 网站下载 Apache Ant 版本 1.8.4 ZIP 分发版，并将其解压缩到
    `c:\ant` 目录。
- en: Download GNU make utility binary from the [http://www.cmake.org/](http://www.cmake.org/)
    website using [http://www.cmake.org/files/cygwin/make.exe-cygwin1.7](http://www.cmake.org/files/cygwin/make.exe-cygwin1.7),
    rename it to `make.exe`, and put it into the `c:\make` directory.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://www.cmake.org/](http://www.cmake.org/) 网站下载 GNU make 工具的二进制文件，使用 [http://www.cmake.org/files/cygwin/make.exe-cygwin1.7](http://www.cmake.org/files/cygwin/make.exe-cygwin1.7)，将其重命名为
    `make.exe`，并将其放入 `c:\make` 目录。
- en: Create the `c:\path_prepend` directory and copy the `find.exe` and `sort.exe`
    files from the Cygwin installation.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `c:\path_prepend` 目录，并从 Cygwin 安装中复制 `find.exe` 和 `sort.exe` 文件。
- en: Download the prebuilt FreeType libraries from the `openjdk-unofficial-builds`
    GitHub project (directory `6_32`) and put the binaries into the `c:\freetype`
    directory and header files into the `c:\freetype\include` directory.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `openjdk-unofficial-builds` GitHub 项目（目录 `6_32`）下载预构建的 FreeType 库，并将二进制文件放入
    `c:\freetype` 目录，将头文件放入 `c:\freetype\include` 目录。
- en: Install OpenJDK 6 binaries or Oracle Java 6 into `c:\jdk6`.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 OpenJDK 6 二进制文件或 Oracle Java 6 安装到 `c:\jdk6`。
- en: 'Download the official OpenJDK 6 build 30 sources tarball from the [https://java.net/projects/openjdk6/downloads](https://java.net/projects/openjdk6/downloads)
    web page and decompress it into the `c:\sources` directory (warning: the tarball
    does not include the `root` directory)'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://java.net/projects/openjdk6/downloads](https://java.net/projects/openjdk6/downloads)
    网页下载官方 OpenJDK 6 构建版本 30 的源代码 tarball，并将其解压缩到 `c:\sources` 目录（警告：tarball 不包括 `root`
    目录）
- en: 'In the `sa.make` file at `hotspot\make\windows\makefiles`, change line 100
    from `SA_CFLAGS = $(SA_CFLAGS) /ZI` to:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `hotspot\make\windows\makefiles` 目录下的 `sa.make` 文件中，将第 100 行从 `SA_CFLAGS =
    $(SA_CFLAGS) /ZI` 修改为：
- en: '[PRE30]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Create a `build.bat` batch file and write the following environment variables
    settings there:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `build.bat` 批处理文件，并在其中写入以下环境变量设置：
- en: '[PRE31]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Run `build.bat` from Windows Explorer. The `cmd.exe` window should appear with
    bash launched.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Windows 资源管理器运行 `build.bat`。应该会出现一个带有启动 bash 的 `cmd.exe` 窗口。
- en: 'From the bash Command Prompt run the following commands:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 bash 命令提示符下运行以下命令：
- en: '[PRE32]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Launch another Cygwin console and run the following commands:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动另一个 Cygwin 控制台，并运行以下命令：
- en: '[PRE33]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Wait for the build to finish.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待构建完成。
- en: How it works...
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Cygwin installation is covered in the *Installing Cygwin for Windows builds*
    recipe of this chapter.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: Cygwin 安装在本章的 *为 Windows 构建安装 Cygwin* 配方中介绍。
- en: Directories in the root of disk `C` are used here for brevity. Generally, arbitrary
    paths consisting of ASCII letters or numbers and without spaces can be used.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简洁起见，这里使用磁盘 `C` 的根目录。通常，可以使用由ASCII字母或数字组成的任意路径，且不包含空格。
- en: Visual Studio 2003 is not officially supported on Windows 7\. It warns about
    possible compatibility problems and may have glitches in the GUI interface, but
    its command-line tools work fine and the GUI interface is not needed for the OpenJDK
    build.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2003 在Windows 7上不受官方支持。它警告可能存在兼容性问题，并且可能在GUI界面中出现故障，但它的命令行工具运行良好，并且对于OpenJDK构建不需要GUI界面。
- en: The newer version of DirectX SDK may also be used.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用更新的DirectX SDK版本。
- en: Different GNU make versions may have different problems on Windows. This particular
    version from the `cmake` project was tested on different Windows versions and
    works fine.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的GNU make版本在Windows上可能存在不同的问题。这个特定版本来自 `cmake` 项目，已在不同的Windows版本上进行了测试，并且运行良好。
- en: This recipe uses prebuilt FreeType 2.4.10 libraries from the `openjdk-unofficial-builds`
    GitHub project. FreeType may be built from sources using Visual Studio 2003\.
    Please see the *Building 32-bit FreeType libraries for OpenJDK 6 on Windows* recipe
    in this chapter.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本使用来自 `openjdk-unofficial-builds` GitHub项目的预构建FreeType 2.4.10库。可以使用Visual
    Studio 2003从源代码构建FreeType。请参阅本章中的 *在Windows上为OpenJDK 6构建32位FreeType库* 脚本。
- en: A patch for HotSpot serviceability `Makefile` file is required to circumvent
    the VS2003 bug discovered after one of the recent security updates. This change
    is going to be upstreamed into official OpenJDK 6 sources and may not be required
    for more recent source tarballs.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 需要一个针对HotSpot服务性 `Makefile` 文件的补丁来绕过在最近的安全更新之后发现的VS2003错误。这个更改将被上传到官方OpenJDK
    6源代码中，并且可能对于更新的源代码包不再需要。
- en: In environment settings, additional attention should be paid to the order of
    the contents of the `PATH` variable order. The `sort` and `find` Cygwin utilities
    go at the start of the `PATH` variable so they are not overshadowed by Windows
    utilities with the same name but a different functionality. The `make` utility
    is going goes before Cygwin to not be so they are not overshadowed by another
    version of make that may be included in the Cygwin installation.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在环境设置中，应特别注意 `PATH` 变量内容的顺序。`sort` 和 `find` Cygwin实用程序位于 `PATH` 变量的开头，这样它们就不会被具有相同名称但功能不同的Windows实用程序所掩盖。`make`
    实用程序位于Cygwin之前，这样就不会被可能包含在Cygwin安装中的另一个版本的 `make` 所掩盖。
- en: The `chmod 777` command is required to fix Cygwin file permissions that may
    cause errors in later stages of the build.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '`chmod 777` 命令是必需的，以修复可能导致构建后期阶段出现错误的Cygwin文件权限。'
- en: The `make` output will be redirected to the `make.log` file. The `2>&1` statement
    ensures that both `stdout` and `stderr` will be redirected.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`make` 输出将被重定向到 `make.log` 文件。`2>&1` 语句确保 `stdout` 和 `stderr` 都将被重定向。'
- en: The `tail -f` command allows us to watch the contents of the `make.log` file
    as they are written during the build process.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`tail -f` 命令允许我们在构建过程中监视 `make.log` 文件的内容。'
- en: The `pause > nul` command is added at the end of the batch file to prevent the
    `cmd.exe` window from disappearing in the case of runtime errors.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在批处理文件末尾添加了 `pause > nul` 命令，以防止在运行时错误的情况下 `cmd.exe` 窗口消失。
- en: There's more...
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: To build the most compatible binaries, the same recipe should be used, but the
    Windows 2000 operating system should be used instead of Windows 7.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建最兼容的二进制文件，应使用相同的脚本，但应使用Windows 2000操作系统而不是Windows 7。
- en: In Windows 2000, the `chmod 777` command is not required.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows 2000中，不需要使用 `chmod 777` 命令。
- en: See also
  id: totrans-269
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Installing Cygwin for Windows builds* recipe
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Windows上安装Cygwin构建* 脚本'
- en: The *Building OpenJDK 6 on Ubuntu Linux 12.04 LTS* recipe, for information about
    build tuning
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Ubuntu Linux 12.04 LTS上构建OpenJDK 6* 脚本，有关构建调优的信息'
- en: The *Building 32-bit FreeType libraries for OpenJDK 6 on Windows* recipe
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Windows上为OpenJDK 6构建32位FreeType库* 脚本'
- en: The *Preparing CA certificates* recipe
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*准备CA证书* 脚本'
- en: The official build instructions for OpenJDK 6 at [http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html)
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenJDK 6的官方构建说明请参阅 [http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html)
- en: The mailing list thread about the Serviceability HotSpot patch at [http://mail.openjdk.java.net/pipermail/jdk6-dev/2013-December/003163.html](http://mail.openjdk.java.net/pipermail/jdk6-dev/2013-December/003163.html)
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Serviceability HotSpot 修补程序的邮件列表线程，请参阅 [http://mail.openjdk.java.net/pipermail/jdk6-dev/2013-December/003163.html](http://mail.openjdk.java.net/pipermail/jdk6-dev/2013-December/003163.html)
- en: Building 64-bit OpenJDK 6 on Windows 7 x64 SP1
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Windows 7 x64 SP1 上构建 64 位 OpenJDK 6
- en: The amd64 build on Windows 7 is similar to the i586 build, but has additional
    complications.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 7 上的 amd64 构建与 i586 构建类似，但有一些额外的复杂性。
- en: Cygwin (at least the more common i586 version) works much worse on amd64 Windows.
    Due to a much bigger address space size, Cygwin fork techniques work much slower
    and are less reliable.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: Cygwin（至少是更常见的 i586 版本）在 amd64 Windows 上运行得要差得多。由于地址空间大小大得多，Cygwin 分叉技术运行得慢，且可靠性较低。
- en: Visual Studio.NET 2003 does not support the amd64 architecture so the Windows
    Server 2003 SP1 Platform SDK is used instead.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio.NET 2003 不支持 amd64 架构，因此使用 Windows Server 2003 SP1 平台 SDK。
- en: Getting ready
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we should have Windows 7 SP1 i586 running with no antivirus
    software installed. Antivirus software is not allowed because it may interfere
    with the Cygwin runtime.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个配方，我们应该有一个没有安装任何防病毒软件的 Windows 7 SP1 i586 运行。不允许使用防病毒软件，因为它可能会干扰 Cygwin
    运行时。
- en: How to do it...
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following steps will help us to build OpenJDK:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助我们构建 OpenJDK：
- en: Download the Windows Server 2003 SP1 Platform SDK from the Microsoft website
    and install it using the default installation path. AMD-64 and MDAC (Microsoft
    Data Access Services) components are required for the build.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Microsoft 网站下载 Windows Server 2003 SP1 平台 SDK，并使用默认安装路径进行安装。构建需要 AMD-64 和
    MDAC（Microsoft 数据访问服务）组件。
- en: Perform steps 2 to 11 from the *Building 32-bit OpenJDK 6 on Windows 7 SP1*
    recipe (for FreeType libraries use `6_64` directory).
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照从 *在 Windows 7 SP1 上构建 32 位 OpenJDK 6* 的配方中的步骤 2 到 11 进行（对于 FreeType 库使用 `6_64`
    目录）。
- en: Step 12 from the previous recipe is not required for the amd64 build and may
    be skipped.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前一个配方中的步骤 12 对于 amd64 构建不是必需的，可以跳过。
- en: 'Create a `build.bat` batch file and write the following environment variables
    settings:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `build.bat` 批处理文件，并写入以下环境变量设置：
- en: '[PRE34]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Follow steps 14 to 17 from the previous recipe.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照前一个配方中的步骤 14 到 17 进行。
- en: How it works...
  id: totrans-290
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Most of the notes from the i586 build are also valid for the amd64 build except
    those specific to VS2003.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数来自 i586 构建的说明也适用于 amd64 构建，除了那些特定于 VS2003 的。
- en: Patch to serviceability `Makefile` is not required because that part of `Makefile`
    is specific to i586 builds.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 修补 `Makefile` 以提高可服务性不是必需的，因为 `Makefile` 的这部分是针对 i586 构建的。
- en: There's more...
  id: totrans-293
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: To build the most compatible binaries, the same recipe should be used, but the
    Windows 2003 Server amd64 operating system should be used instead of Windows 7.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建最兼容的二进制文件，应使用相同的配方，但应使用 Windows 2003 Server amd64 操作系统而不是 Windows 7。
- en: In Windows 2003, the `chmod 777` command is not required.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 2003 中，不需要 `chmod 777` 命令。
- en: See also
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Installing Cygwin for Windows builds* recipe
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为 Windows 构建安装 Cygwin* 的配方'
- en: The *Building OpenJDK 6 on Ubuntu Linux 12.04 LTS* recipe, for information about
    build tuning
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于构建调整的信息，请参阅 *在 Ubuntu Linux 12.04 LTS 上构建 OpenJDK 6* 的配方
- en: The *Building 64-bit FreeType libraries for OpenJDK 6 on Windows* recipe
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在 Windows 上为 OpenJDK 6 构建 64 位 FreeType 库* 的配方'
- en: The *Preparing* *CA certificates* recipe
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*准备* *CA 证书* 的配方'
- en: The official build instructions for OpenJDK 6 at [http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html)
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenJDK 6 的官方构建说明，请参阅 [http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html](http://hg.openjdk.java.net/jdk6/jdk6/raw-file/tip/README-builds.html)
