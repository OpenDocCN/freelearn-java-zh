["```java\n@GetMapping // or other similar annotation\nResultType operationName(InputType1 input1,\n                         InputType2 input2...) {\n    statement1;\n    statement2;\n    ...\n    return ...;\n} \n```", "```java\n@GetMapping // or other similar annotation\nList<ResultType> collectionReturningOperationName(\n                 InputType1 input1, InputType2 input2...) {\n    statement1;\n    statement2;\n    ...\n    return ...;\n} \n```", "```java\n@GetMapping // or other similar annotation\nMono<ResultType> operationName(InputType1 input1, InputType2 input2...) {\n    return reactiveDataSource()\n        .map (item -> transformation 1)\n        .map (transformation 2...);\n}\n@GetMapping // or other similar annotation\nFlux<ResultType> collectionReturningOperationName(InputType1 input1,\n                                                  InputType2 input2...) {\n    return reactiveDataSource()\n        .map (item -> transformation 1)\n        .map (transformation 2...);\n} \n```", "```java\n@Path(\"/api/products\")\npublic class ProductResource { \n```", "```java\n @PUT\n    @Path(\"{productId}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response createOrUpdateProduct(\n        @PathParam(\"productId\") @ValidSku String productId,\n        @Valid ProductInput productInput) { \n```", "```java\n @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public List<ProductOutput> getProducts() { \n```", "```java\n @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    @Path(\"{productId}\")\n    public ProductOutput getProductById(\n        @PathParam(\"productId\") @ValidSku String productId) { \n```", "```java\n @PATCH\n    @Path(\"{productId}\")\n    public ProductOutput editProduct(\n        @PathParam(\"productId\") @ValidSku String productId,\n        @Valid ProductDescriptionInput input) { \n```", "```java\n @DELETE\n    @Path(\"{productId}\")\n    public Response deleteProduct(\n        @PathParam(\"productId\") @ValidSku String productId) { \n```", "```java\npackage com.packt.productapi.adapter.exception;\nimport com.packt.productapi.adapter.inbound.rest.dto.ProblemDetail;\nimport jakarta.ws.rs.core.Response;\nimport jakarta.ws.rs.ext.ExceptionMapper;\nimport jakarta.ws.rs.ext.Provider;\n@Provider\npublic class NotFoundExceptionMapper implements ExceptionMapper<EntityNotFoundException> {\n    @Override\n    public Response toResponse(EntityNotFoundException\n                               entityNotFoundException) {\n        return Response.status(Response.Status.NOT_FOUND)\n                .entity(new ProblemDetail(\n                        Response.Status.NOT_FOUND.getReasonPhrase(),\n                        Response.Status.NOT_FOUND.getStatusCode(),\n                        entityNotFoundException.getMessage()))\n                .build();\n    }\n} \n```", "```java\n./mvnw compile quarkus:dev \n```", "```java\ncurl -v -X PUT http://localhost:8080/api/products/AK12345 -d '{\"name\":\"testprod235\",\"description\":\"test description\",\"price\":123.45}' -H 'Content-Type: application/json' \n```", "```java\ncurl -v http://localhost:8080/api/products/ \n```", "```java\n<dependency>\n<groupId>io.quarkus</groupId>\n<artifactId>quarkus-smallrye-openapi</artifactId>\n</dependency> \n```", "```java\n<plugin>\n    <groupId>org.openapitools</groupId>\n    <artifactId>openapi-generator-maven-plugin</artifactId>\n...\n            <configuration>\n                <inputSpec>${project.basedir}/\n                  src/main/resources/Order_Management_API.yml</inputSpec>\n                <generatorName>jaxrs-spec</generatorName>\n                <apiPackage>\n                    com.packt.ordermanagementapi.adapter.inbound.rest\n                </apiPackage>\n                <modelPackage>\n                    com.packt.ordermanagementapi.adapter.inbound.rest.dto\n                </modelPackage>\n                <modelNameSuffix>Dto</modelNameSuffix>\n                <configOptions>\n                    <useJakartaEe>true</useJakartaEe>\n                    <interfaceOnly>true</interfaceOnly>\n                    <useSwaggerAnnotations>false\n... \n```", "```java\n./mvnw clean compile \n```", "```java\n<plugin>\n    <groupId>org.codehaus.mojo</groupId>\n    <artifactId>build-helper-maven-plugin</artifactId>\n    <executions>\n        <execution>\n            <phase>generate-sources</phase>\n            <goals>\n                <goal>add-source</goal>\n            </goals>\n            <configuration>\n                <sources>${basedir}/target/\n                         generated-sources/openapi/src</sources>\n            </configuration>\n        </execution>\n    </executions>\n</plugin> \n```", "```java\npublic class OrderResource implements OrdersApi {\n    @Override\n    public OrderResponseDto ordersPost(OrderRequestBodyDto\n                                       orderRequestBodyDto) {\n        return null;\n    }\n    @Override\n    public List<OrderResponseDto> ordersGet() {\n        return List.of(new OrderResponseDto().id(\"1\"));\n    }\n... \n```", "```java\n{\n  \"customer\":  {\n    \"customerType\": \"person\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"streetAddress\": \"1234, Rest Street\",\n    \"city\": \"Javatown\",\n    \"postalCode\": \"12345\"\n  },\n  \"products\": [\n    {\n      \"productSKU\": \"AK12345\",\n      \"quantity\": 1\n    }\n  ]\n} \n```", "```java\n./mvnw package \n```", "```java\njava -jar target/product-api-helidon.jar \n```"]