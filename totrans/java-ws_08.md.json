["```java\n/folder_1/folder_2/[...]/folder_n/file.extension\n```", "```java\nimport java.io.*;\nimport java.util.*;\npublic class Example01 {\n    public static void main(String[] args) throws IOException {\n        String pathString = System.getProperty(\"java.io.tmpdir\");\n        String [] fileNames = new File(pathString).list();\n        for (int i = 0; i < 5; i++ ) {\n            System.out.println(fileNames[i]);\n        }\n    }\n}\n```", "```java\nSlack Crashes\n+~JF8916325484854780029.tmp\ngnome-software-CAXF1Z\n.XIM-unix\n.X1001-lock\nProcess finished with exit code 0\n```", "```java\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n```", "```java\nimport java.io.IOException;\nimport java.nio.file.*;\nimport java.util.*;\npublic class Example02 {\n    public static void main(String[] args) throws IOException {\n        String pathString = System.getProperty(\"java.io.tmpdir\");\n        List<String> fileNames = new ArrayList<>();\n        DirectoryStream<Path> directoryStream;\n        directoryStream = Files.newDirectoryStream(Paths.get(pathString));\n        for (Path path : directoryStream) {\n            fileNames.add(path.toString());\n        }\n        for (int i = 0; i < 5; i++ ) {\n            System.out.println(fileNames.get(i));\n        }\n    }\n}\n```", "```java\n/tmp/Slack Crashes\n/tmp/+~JF8916325484854780029.tmp\n/tmp/gnome-software-CAXF1Z\n/tmp/.XIM-unix\n/tmp/.X1001-lock\nProcess finished with exit code 0\n```", "```java\nimport java.io.IOException;\nimport java.nio.file.*;\nimport java.util.stream.Stream;\npublic class Example03 {\n    public static void main(String[] args) throws IOException {\n        String pathString = System.getProperty(\"java.io.tmpdir\");\n        Path path = Paths.get(pathString);\n        Stream<Path> fileNames = Files.list(path);\n        fileNames.limit(5).forEach(System.out::println);\n    }\n}\n```", "```java\nExample04.java\n17         for (int i = 0; i < 5; i++ ) {\n18             String filePath = fileNames.get(i);\n19             String fileType = Files.isDirectory(Paths.get(filePath)) ? \"Dir\" :                \"Fil\";\n20            System.out.println(fileType + \" \" + filePath);\n21         }\nhttps://packt.live/2o43Yhe\n```", "```java\nDir /tmp/Slack Crashes\nFil /tmp/+~JF8916325484854780029.tmp\nDir /tmp/gnome-software-CAXF1Z\nDir /tmp/.XIM-unix\nFil /tmp/.X1001-lock\nProcess finished with exit code 0\n```", "```java\nimport java.io.IOException;\nimport java.nio.file.*;\nimport java.util.*;\nimport java.util.stream.Collectors;\npublic class Example05 {\n    public static void main(String[] args) throws IOException {\n        String pathString = System.getProperty(\"user.home\");\n        List<Path> subDirectories = Files.walk(Paths.get(pathString), 1)\n                    .filter(Files::isDirectory)\n                    .collect(Collectors.toList());\n        for (int i = 0; i < 5; i++ ) {\n            Path filePath = subDirectories.get(i);\n            String fileType = Files.isDirectory(filePath) ? \"Dir\" : \"Fil\";\n            System.out.println(fileType + \" \" + filePath);\n        }\n    }\n}\n```", "```java\nDir /home/<userName>\nDir /home/<userName>/.gnome\nDir /home/<userName>/Vídeos\nDir /home/<userName>/.shutter\nDir /home/<userName>/opt\nProcess finished with exit code 0\n```", "```java\n    List<Path> subDirectories = Files.walk(Paths.get(pathString), 2)\n                    .filter(Files::isDirectory)\n                    .collect(Collectors.toList());\n    ```", "```java\n    Exception in thread \"main\" java.io.UncheckedIOException: java.nio.file.AccessDeniedException: /home/<userName>/.gvfs\n          at java.nio.file.FileTreeIterator.fetchNextIfNeeded(FileTreeIterator.java:88)\n          at java.nio.file.FileTreeIterator.hasNext(FileTreeIterator.java:104)\n    [...]\n          at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n          at Example04.main(Example04.java:13)\n    Caused by: java.nio.file.AccessDeniedException: /home/<userName>/.gvfs\n          at sun.nio.fs.UnixException.translateToIOException(UnixException.java:84)\n          at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\n    [...]\n          at java.nio.file.FileTreeIterator.fetchNextIfNeeded(FileTreeIterator.java:84)\n          ... 9 more\n    Process finished with exit code 1\n    ```", "```java\n    String pathString = System.getProperty(\"user.home\");\n    Path path = Paths.get(pathString);\n    Stream<Path> fileNames = Files.list(path).filter(Files::isDirectory);\n    fileNames.limit(5).forEach(System.out::println);\n    ```", "```java\n    fileNames.limit(5).forEach( (item) -> {\n        System.out.println(item.toString());\n        try {\n            Stream<Path> fileNames2 = Files.list(item).filter(Files::isDirectory);\n            fileNames2.forEach(System.out::println);\n        } catch (IOException ioe) {}\n    });\n    ```", "```java\n    /home/<userName>/.gnome\n    /home/<userName>/.gnome/apps\n    /home/<userName>/Vídeos\n    /home/<userName>/Vídeos/technofeminism\n    /home/<userName>/Vídeos/Webcam\n    /home/<userName>/Vídeos/thumbnail\n    /home/<userName>/.shutter\n    /home/<userName>/.shutter/profiles\n    /home/<userName>/opt\n    /home/<userName>/opt/Python-3.4.4\n    /home/<userName>/.local\n    /home/<userName>/.local/share\n    /home/<userName>/.local/bin\n    /home/<userName>/.local/lib\n    Process finished with exit code 0\n    ```", "```java\n    Path path = Paths.get(System.getProperty(\"user.home\"));\n    Files.walkFileTree(path, Collections.emptySet(), 2, new SimpleFileVisitor<Path>() {\n        @Override\n        public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes       attrs) {\n            System.out.println(dir.toString());\n            return FileVisitResult.CONTINUE;\n        }\n    });\n    ```", "```java\n    /home/<userName>/.gnome/apps\n    /home/<userName>/Vídeos/technofeminism\n    /home/<userName>/Vídeos/Webcam\n    [...]\n    /home/<userName>/.local/lib\n    Exception in thread \"main\" java.nio.file.AccessDeniedException: /home/<userName>/.gvfs\n          at sun.nio.fs.UnixException.translateToIOException(UnixException.        java:84)\n          at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.        java:102)\n          at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.        java:107)\n          at sun.nio.fs.UnixFileSystemProvider.        newDirectoryStream(UnixFileSystemProvider.java:427)\n          at java.nio.file.Files.newDirectoryStream(Files.java:457)\n          at java.nio.file.FileTreeWalker.visit(FileTreeWalker.java:300)\n          at java.nio.file.FileTreeWalker.next(FileTreeWalker.java:372)\n          at java.nio.file.Files.walkFileTree(Files.java:2706)\n          at Exercise01.main(Exercise01.java:11)\n    Process finished with exit code 1\n    ```", "```java\n    @Override\n    public FileVisitResult visitFileFailed(Path file, IOException exc)\n            throws IOException {\n        System.out.println(\"visitFileFailed: \" + file);\n        return FileVisitResult.CONTINUE;\n    }\n    ```", "```java\n    /home/<userName>/.gnome/apps\n    /home/<userName>/Vídeos/technofeminism\n    [...]\n    /home/<userName>/.local/lib\n    visitFileFailed: /home/<userName>/.gvfs\n    /home/<userName>/.config/Atom\n    [...]\n    /home/<userName>/drive_c/Program Files\n    /home/<userName>/drive_c/Program Files (x86)\n    /home/<userName>/drive_c/users\n    /home/<userName>/drive_c/windows\n    /home/<userName>/.swt/lib\n    Process finished with exit code 0\n    ```", "```java\nExercise01.java\n1  import java.io.IOException;\n2  import java.nio.file.*;\n3  import java.nio.file.attribute.BasicFileAttributes;\n4  import java.util.Collections;\n5  \n6  public class Exercise01 {\n7      public static void main(String[] args) throws IOException {\n8          Path path = Paths.get(System.getProperty(\"user.home\"));\n9  \n10         Files.walkFileTree(path, Collections.emptySet(), 2, new          SimpleFileVisitor<Path>() {\n11 \n12              @Override\n13              public FileVisitResult preVisitDirectory(Path dir,                 BasicFileAttributes attrs) {\n14                 System.out.println(dir.toString());\n15                 return FileVisitResult.CONTINUE;\n16             }\nhttps://packt.live/35MN9Zd\n```", "```java\nFiles.createFile(newFilePath);\n```", "```java\nFiles.createDirectories(newDirPath);\n```", "```java\nFiles.exists(path);\n```", "```java\nExample06.java\n1  import java.io.IOException;\n2  import java.nio.file.Files;\n3  import java.nio.file.Path;\n4  import java.nio.file.Paths;\n5  \n6  public class Example06 {\n7      public static void main(String[] args) {\n8          String pathString = System.getProperty(\"user.home\") + \"/javaTemp/\";\n9          Path pathDirectory = Paths.get(pathString);\n10         if(Files.exists(pathDirectory)) {\n11             System.out.println(\"WARNING: directory exists already at: \" +                  pathString);\n12         } else {\n13             try {\n14                 // Create the directory\n15                 Files.createDirectories(pathDirectory);\n16                 System.out.println(\"New directory created at: \" + pathString);\n17             } catch (IOException ioe) {\n18                 System.out.println(\"Could not create the directory\");\n19                 System.out.println(\"EXCEPTION: \" + ioe.getMessage());\n20             }\n21         }\nhttps://packt.live/2MSEPhX\n```", "```java\nNew directory created at: /home/<userName>/javaTemp/\nNew file created at: /home/<userName>/javaTemp/temp.txt\nProcess finished with exit code 0\n```", "```java\nWARNING: directory exists already at: /home/<userName>/javaTemp/\nWARNING: file exists already at: /home/<userName>/javaTemp/temp.txt\nProcess finished with exit code 0\n```", "```java\n-rw-r--r--  1 userName dialout   0 maj 15 13:57 /[...]/temp.txt\n```", "```java\ntry {\n    Files.write(pathFile, Arrays.asList(\"hola\"));\n    System.out.println(\"Text added to the file: \" + pathFile);\n} catch (IOException ioe) {\n    System.out.println(\"EXCEPTION: \" + ioe.getMessage());\n}\n```", "```java\nWARNING: directory exists already at: /home/<userName>/javaTemp/\nWARNING: file exists already at: /home/<userName>/javaTemp/temp.txt\nText added to the file: /home/<userName>/javaTemp/temp.txt\nProcess finished with exit code 0\n```", "```java\nFiles.write(pathFile, Arrays.asList(\"hola\"), StandardOpenOption.APPEND);\n```", "```java\nExample07.java\n8  public class Example07 {\n9      public static void main(String[] args) {\n10         String pathString = System.getProperty(\"user.home\") +              \"/javaTemp/temp.txt\";\n11         Path pathFile = Paths.get(pathString);\n12         String text = \"Hola,\\nme da un refresco,\\npor favor?\";\n13 \n14         if(Files.exists(pathFile))\n15             try {\n16                 Files.write(pathFile, Arrays.asList(text),                      StandardOpenOption.APPEND);\n17                 System.out.println(\"Text added to the file: \" + pathFile);\n18             } catch (IOException ioe) {\n19                 System.out.println(\"EXCEPTION: \" + ioe.getMessage());\n20             }\n21     }\nhttps://packt.live/2MrBV4B\n```", "```java\nhola\nHola,\nme da un refresco,\npor favor?\n```", "```java\nDirectory structure for folder: /folderA/folderB/.../folderN\nfolderN\n    folderN1\n        folderN11\n        folderN12\n        ...\n    folderN2\n        folderN21\n        folderN22\n        ...\n    folderN3\n        folderN31\n        folderN32\n        ...\n    ...\n    folderNN\n```", "```java\n    Files.walkFileTree(path, Collections.emptySet(), 10, new SimpleFileVisitor<Path>() ...\n    ```", "```java\n    // get the path to the init directory\n    String [] pathArray = path.toString().split(\"/\");\n    int depthInit = pathArray.length;\n    // get the path to the current folder\n    String [] fileArray = dir.toString().split(\"/\");\n    int depthCurrent = fileArray.length;\n    // write the indents\n    for (int i = depthInit; i < depthCurrent; i++) {\n        System.out.print(\"    \");\n        // HINT: copy to list or write to file here\n    }\n    // write the directory name\n    System.out.println(fileArray[fileArray.length – 1]);\n    // HINT: copy to list or write to file here\n    ```", "```java\nimport java.io.IOException;\nimport java.nio.file.*;\nimport java.util.List;\npublic class Example08 {\n    public static void main(String[] args) {\n        String pathString = System.getProperty(\"user.home\") + \"/javaTemp/temp.txt\";\n        Path pathFile = Paths.get(pathString);\n        try {\n            List<String> fileContent = Files.readAllLines(pathFile);\n            // this will go through the buffer containing the whole file\n            // and print it line by one to System.out\n            for (String content:fileContent){\n                System.out.println(content);\n            }\n        } catch (IOException ioe) {\n            System.out.println(\"WARNING: there was an issue with the file\");\n        }\n    }\n}\n```", "```java\nhola\nHola,\nme da un refresco,\npor favor?\nProcess finished with exit code 0\n```", "```java\nWARNING: there was an issue with the file\nProcess finished with exit code 0\n```", "```java\nimport java.io.IOException;\nimport java.nio.file.*;\npublic class Example09 {\n    public static void main(String[] args) {\n        String pathString = System.getProperty(\"user.home\") + \"/javaTemp/temp.txt\";\n        Path pathFile = Paths.get(pathString);\n        try {\n            Files.lines(pathFile).forEach(System.out::println);\n        } catch (IOException ioe) {\n            System.out.println(\"WARNING: there was an issue with the file\");\n        }\n    }\n}\n```", "```java\n#user information\nname=Ramiro\nfamilyName=Rodriguez\nuserName=ramiroz\nage=37\nbgColor=#000000\n```", "```java\nExample10.java\n17     public static void main(String[] args) throws IOException {\n18         String pathString = System.getProperty(\"user.home\") +              \"/javaTemp/user.properties\";\n19 \n20         FileInputStream fileStream = null;\n21         try {\n22             fileStream = new FileInputStream(pathString);\n23             PrintOutProperties(fileStream);\n24         } catch (FileNotFoundException fnfe) {\n25             System.out.println(\"WARNING: could not find the properties file\");\n26         } catch (IOException ioe) {\n27             System.out.println(\"WARNING: problem processing the properties                  file\");\n28         } finally {\n29             if (fileStream != null) {\n30                 fileStream.close();\n31             }\n32         }\n33     }\nhttps://packt.live/2Bry4OK\n```", "```java\nname: Ramiro\nfamily name: Rodriguez\nnick: ramiroz\nage: 37\nbackground color: #000000\nProcess finished with exit code 0\n```", "```java\nusr@localhost:~/[...]/Exercise02$ java Exercise02 myProperties.properties name=Petra\n```", "```java\n    if (Files.exists(pathFile)) {\n        properties = LoadProperties(pathString);\n    }\n    ```", "```java\n    public static Properties LoadProperties (String pathString)   throws IOException {\n        Properties properties = new Properties();\n        FileInputStream fileInputStream = null;\n        try {\n            fileInputStream = new FileInputStream(pathString);\n            properties.load(fileInputStream);\n        } catch (FileNotFoundException fnfe) {\n            System.out.println(\"WARNING: could not find the properties file\");\n        } catch (IOException ioe) {\n            System.out.println(\"WARNING: problem processing the properties           file\");\n        } finally {\n            if (fileInputStream != null) {\n                fileInputStream.close();\n            }\n        }\n        return properties;\n    }\n    ```", "```java\n    for (int i = 1; i < args.length; i++) {\n        String [] keyValue = args[i].split(\"=\");\n        properties.setProperty(keyValue[0], keyValue[1]);\n    }\n    ```", "```java\n    FileOutputStream fileOutputStream = new FileOutputStream(pathString);\n    ```", "```java\n    java.time.LocalDate.now()\n    ```", "```java\n    properties.store(fileOutputStream, \"# modified on: \" + java.time.LocalDate.now());\n    ```", "```java\n    public static void PrintOutProperties(Properties properties) {\n        Enumeration keys = properties.keys();\n        for (int i = 0; i < properties.size(); i++) {\n            String key = keys.nextElement().toString();\n            System.out.println( key + \": \" + properties.getProperty(key) );\n        }\n    }\n    ```", "```java\n    [...]/Exercise02$ java Exercise02 user.properties name=Pedro\n    age: 37\n    familyName: Rodriguez\n    name: Pedro\n    bgColor: #000000\n    userName: ramiroz\n    ```", "```java\nimport java.io.IOException;\nimport java.nio.file.*;\nimport java.util.*;\npublic class Example11 {\n    public static void main(String[] args) {\n        String pathString = System.getProperty(\"user.home\") + \"/javaTemp/numbers.txt\";\n        Path pathFile = Paths.get(pathString);\n        // if the numbers file doesn't exist, create a file with 10 random numbers\n        // between 0 and 10, so that we can make something with them\n        if (Files.notExists(pathFile)) {\n            int [] numbers = new int[10];\n            for (int i = 0; i < 10; i++) {\n                numbers[i] = (int) (Math.random() * 10);\n            }\n```", "```java\n<contents of javaTemp/numbers.txt>\n5\n3\n1\n3\n6\n2\n6\n2\n7\n8\n```", "```java\nRaw data\n5313626278\n```", "```java\nfileContent.stream().sorted().forEach(System.out::print) \n```", "```java\nSorted data\n1223356678\n```", "```java\nfileContent.stream().map( x -> Integer.parseInt(x)*2).forEach(System.out::print):\n```", "```java\nMapped data\n106261241241416\n```", "```java\nSystem.out.println(\n                    fileContent\n                            .stream()\n                            .map(x -> Integer.parseInt(x))\n                            .reduce(Integer::sum));\n```", "```java\nSum of data\nOptional[43]\n```", "```java\nimport java.io.FileInputStream;\nimport java.io.IOException;\npublic class Example12 {\n    public static void main(String[] args) throws IOException {\n        FileInputStream inStream = null;\n        try {\n            inStream = new FileInputStream(\n                     System.getProperty(\"user.home\") + \"/javaTemp/temp.txt\");\n            int c;\n            while ((c = inStream.read()) != -1) {\n                System.out.print(c);\n            }\n        } finally {\n            if (inStream != null) {\n                inStream.close();\n            }\n        }\n    }\n}\n```", "```java\n1041111089710721111089744101091013210097321171103211410110211410111599111441011211111432102971181111146310\nProcess finished with exit code 0\n```", "```java\n97    a    107    k    117    u\n98    b    108    l    118    v\n99    c    109    m    119    w\n100    d    110    n    120    x\n101    e    111    o    121    y\n102    f    112    p    122    z\n103    g    113    q\n104    h    114    r\n105    I    115    s\n106    j    116    t\n```", "```java\nExample13.java\n5  public class Example13 {\n6      public static void main(String[] args) throws IOException {\n7          BufferedReader inStream = null;\n8  \n9          try {\n10             FileReader fileReader = new FileReader(\n11                     System.getProperty(\"user.home\") + \"/javaTemp/temp.txt\");\n12             inStream = new BufferedReader(fileReader);\n13             String line;\n14             while ((line = inStream.readLine()) != null) {\n15                 System.out.println(line);\n16             }\nhttps://packt.live/2BsKIgh\n```", "```java\nhola\nHola,\nme da un refresco,\npor favor?\nProcess finished with exit code 0\n```", "```java\nExample14.java\n14         try (\n15             ServerSocket serverSocket =\n16                 new ServerSocket(Integer.parseInt(args[0]));\n17             Socket clientSocket = serverSocket.accept();     \n18             PrintWriter out =\n19                 new PrintWriter(clientSocket.getOutputStream(),                      true);                   \n20             BufferedReader in = new BufferedReader(\n21                 new InputStreamReader(clientSocket.getInputStream()));\n22         ) {\n23             String inputLine;\n24             while ((inputLine = in.readLine()) != null) {\n25                 out.println(inputLine);\n26             }\n27         } catch (IOException e) {\n28             System.out.println(\"Exception caught when trying to listen on port \"\n29                 + portNumber + \" or listening for a connection\");\n30             System.out.println(e.getMessage());\n31         }\nhttps://packt.live/2oLURSR\n```", "```java\nif (args.length != 1) {\n    System.err.println(\"Usage: java EchoServer <port number>\");\n    System.exit(1);\n}\n```", "```java\nusr@localhost:~/IdeaProjects/[...]/Example14$ java Example14 8080\n```", "```java\nExample15.java \n15         try (\n16                 Socket echoSocket = new Socket(hostName, portNumber);\n17                 PrintWriter out =18                   new PrintWriter(echoSocket.getOutputStream(), true);\n19                 BufferedReader in =20                   new BufferedReader(\n21                      new InputStreamReader(echoSocket.getInputStream()));\n22                 BufferedReader stdIn =23                   new BufferedReader(\n24                      new InputStreamReader(System.in))\n25         ) {\n26             String userInput;\n27             while ((userInput = stdIn.readLine()) != null) {\n28                 out.println(userInput);\n29                 System.out.println(\"echo: \" + in.readLine());\n30             }\nhttps://packt.live/33OrP3t\n```", "```java\nusr@localhost:~/IdeaProjects/[...]/Example14$ java Example15 127.0.0.1 8080\n```", "```java\nHello\necho: Hello\n```", "```java\nHello\necho: 37-Hello\n```", "```java\n    while ((userInput = stdIn.readLine()) != null) {\n        out.println(userInput);\n        if (userInput.substring(0,3).equals(\"bye\")) {\n            System.out.println(\"Bye bye!\");\n            System.exit(0);\n        }\n        System.out.println(\"echo: \" + in.readLine());\n    }\n    ```", "```java\n    int contID = 0;\n    while ((inputLine = in.readLine()) != null) {\n        contID++;\n        out.println(contID + \"-\" + inputLine);\n        if (inputLine.substring(0,3).equals(\"bye\")) {\n            System.out.println(\"Bye bye!\");\n            System.exit(0);\n        }\n    }\n    ```"]