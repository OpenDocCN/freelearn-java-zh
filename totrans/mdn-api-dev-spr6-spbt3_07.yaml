- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Designing a User Interface
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计用户界面
- en: In the previous chapter, you implemented authentication and authorization using
    Spring Security; that chapter also included all the example e-commerce app APIs.
    In this chapter, you will develop the frontend of an example e-commerce app using
    the React library. This UI app will then consume the APIs developed in the previous
    chapter, [*Chapter 6*](B19349_06.xhtml#_idTextAnchor148), *Securing REST Endpoints
    Using Authorization and Authentication*. This UI app will be a **single-page application**
    (**SPA**) that consists of interactive components such as *Login*, *Product Listing*,
    *Product Detail*, *Cart*, and *Order Listing*. This chapter will conclude the
    end-to-end development and communication between different layers of an online
    shopping app. By the end of this chapter, you will have learned about SPAs, UI
    component development using React, and consuming the REST APIs using the browser’s
    built-in **Fetch API**.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你使用了Spring Security实现了身份验证和授权；那一章还包含了所有示例电子商务应用的API。在本章中，你将使用React库开发示例电子商务应用的前端。这个UI应用将消费上一章中开发的API，[*第6章*](B19349_06.xhtml#_idTextAnchor148)，*使用授权和身份验证保护REST端点*。这个UI应用将是一个**单页应用**（**SPA**），包括交互式组件，如*登录*、*产品列表*、*产品详情*、*购物车*和*订单列表*。本章将完成在线购物应用不同层之间的端到端开发和通信。到本章结束时，你将了解SPA、使用React进行UI组件开发以及使用浏览器的内置**Fetch
    API**消费REST API。
- en: 'This chapter will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Learning React fundamentals
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习React基础知识
- en: Exploring React components and other features
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索React组件和其他功能
- en: Designing e-commerce app components
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计电子商务应用组件
- en: Consuming APIs using Fetch
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Fetch消费API
- en: Implementing authentication
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现身份验证
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You need the following prerequisites for developing and executing the code:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 开发和执行代码需要以下先决条件：
- en: 'You should be familiar with JavaScript: `data types`, `variables`, `functions`,
    `loops`, and `array` methods such as `map()`, `Promises`, and `async`, and so
    on.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该熟悉JavaScript：`数据类型`、`变量`、`函数`、`循环`以及`数组`方法，例如`map()`、`Promises`和`async`等。
- en: Node.js 18.x with `npm install` `yarn -g`).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js 18.x以及`npm install` `yarn -g`。
- en: '**Visual Studio Code** (**VS Code**): This is a free source code editor. You
    can use any other source code editor of your choice.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio Code**（**VS Code**）：这是一个免费的源代码编辑器。你可以使用任何其他你选择的源代码编辑器。'
- en: React 18 libraries that will be included when you use `create-react-app`.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你使用`create-react-app`时将包含的React 18库。
- en: Let’s get the ball rolling!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: 'Please visit the following link to check the code for this chapter:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 请访问以下链接以检查本章的代码：
- en: '[https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/tree/main/Chapter07](https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/tree/main/Chapter07)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/tree/main/Chapter07](https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/tree/main/Chapter07)'
- en: Learning React fundamentals
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习React基础知识
- en: React is a declarative library used to build interactive and dynamic UIs, including
    isolated small components. It is also sometimes referred to as a framework because
    it is as capable as and comparable with other JavaScript frameworks such as AngularJS.
    However, React is a library and works with other supported libraries, including
    React Router, React Redux, and so on. You normally use it to develop SPAs, but
    it can also be used to develop full stack applications.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: React是一个用于构建交互式和动态UI的声明式库，包括隔离的小组件。它有时也被称为框架，因为它与其他JavaScript框架（如AngularJS）一样强大且具有可比性。然而，React是一个库，可以与其他支持的库一起使用，包括React
    Router、React Redux等。你通常用它来开发SPA，但它也可以用于开发全栈应用。
- en: React is used to build the view layer of the application per the MVC architecture.
    You can build reusable UI components with their own state. You can use either
    plain JavaScript with HTML or **JavaScript Syntax Extension** (**JSX**) for templating.
    We’ll be using JSX in this chapter, which employs a **virtual Document Object
    Model** (**VDOM**) for dynamic changes and interactions.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: React根据MVC架构用于构建应用视图层。你可以使用它们自己的状态构建可重用的UI组件。你可以使用纯JavaScript和HTML或**JavaScript语法扩展**（**JSX**）进行模板化。我们将在本章中使用JSX，它使用**虚拟文档对象模型**（**VDOM**）进行动态更改和交互。
- en: Let’s create a new React app using the `create-react-app` utility next. This
    utility scaffolds and provides the basic app structure that you’ll use to develop
    the example e-commerce app frontend.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Creating a React app
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can configure and build a React UI app from scratch. However, as mentioned,
    React provides a `create-react-app` utility that bootstraps and builds a basic
    running app template. You can take it further to build a full-fleshed UI application.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: 'Its syntax is shown here:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: $ npx create-react-app ecomm-uiCreating a new React app in /Users/dev/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/Chapter07/ecomm-ui.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Installing packages. This might take a couple of minutes.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Installing react, react-dom, and react-scripts with cra-template...
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: //… stripped output for brevity
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: added 1418 packages in 50s
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Success! Created ecomm-ui at /Users/sourabhsharma/dev/pws/java/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/Chapter07/ecomm-ui
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: //… stripped output for brevity
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Inside that directory
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: 'We suggest that you begin by typing:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: cd ecomm-ui
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: npm start
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: $ cd ecomm-ui$ code .
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: $ npm start
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: ecomm-ui├── README.md
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: ├── node_modules
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: ├── package.json
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: ├── package-lock.json
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: ├── .gitignore
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: ├── public
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: │ ├── favicon.ico
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: │ ├── index.html
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: │ ├── logo192.png
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: │ ├── logo512.png
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: │ ├── manifest.json
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: │ └── robots.txt
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: └── src
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: ├── App.css
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: ├── App.js
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: ├── App.test.js
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: ├── index.css
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: ├── index.js
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: ├── logo.svg
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: ├── reportWebVitals.js
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: └── setupTests.js
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '"scripts": {    "start": "react-scripts start",'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '"build": "react-scripts build",'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '"test": "react-scripts test",'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '"eject": "react-scripts eject"'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: import React from 'react';import ReactDOM from 'react-dom/client';
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: import './index.css';
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: import App from './App';
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: const root = ReactDOM.createRoot(document.getElementById('root'));
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: root.render(
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: <React.StrictMode>
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: <App />
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: </React.StrictMode>
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: export default const Header = (props) => {  return (
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: <h1>{props.title}</h1>
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: )
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: export default class Header extends React.Component {  render() {
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: <h1>{this.props.title}</h1>
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: )
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: <Header title="Sample Ecommerce App" />
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: <div className="w-32"> <img className="h-24" src={item?.imageUrl} alt="" />
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: <div className="flex flex-col justify-between
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: ml-4 flexgrow">
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: <Link to={"/products/" + item.id} className="font-bold
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: text-sm text-indigo-500 hover:text-indigo-700">
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '{item?.name}'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: </Link>
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '<span className="text-xs">Author: {author}</span>'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: <button className="font-semibold hover:text-red-500
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: text-indigo-500 text-xs text-left"
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: onClick={() => removeItem(item.id)}>
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: Remove
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: </button>
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: import {useState} from "react";
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: const [total, setTotal] = useState(0);
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'import {createContext} from "react";import ReactDOM from "react-dom";const
    LoggedInContext = createContext();const App = () => {  return (    <LoggedInContext.Provider
    isUserLoggedIn=true>      <ProductList/>    <LoggedInContext.Provider/>  );}const
    ProductList = () => { return (   <LoggedInContext.Consumer> { isUserLoggedIn =>    <div>Is
    user logged-in: {isUserLoggedIn}</div>   } <LoggedInContext.Consumer> );}ReactDOM.render(<App/>,document.getElementById("root"));'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: import {createContext, useContext} from "react";import ReactDOM from "react-dom";
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: const LoggedInContext = createContext();
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: const App = () => {
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: <LoggedInContext.Provider isUserLoggedIn=true>
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: <ProductList/>
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: <LoggedInContext.Provider/>
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: const ProductList = () => {
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: const isUserLoggedIn = useContext(LoggedInContext);
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '<div>Is user logged-in: {isUserLoggedIn}</div>'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: ReactDOM.render(<App/>, document.getElementById("root"));
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: const [state, dispatch] = useReducer(reducer, initialState);
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: $ npm install -D tailwindcss
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '$ npx tailwindcss initCreated Tailwind CSS config file: tailwind.config.js'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: /** @type {import('tailwindcss').Config} */module.exports = {
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: 'content: [],'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: 'theme: {'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: 'extend: {},'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: 'plugins: [],'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'module.exports = {  content: ["./src/**/*.{js,jsx,ts,tsx}",'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '"./public/index.html"],'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: 'theme: {'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'extend: {},'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: 'plugins: [],'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '@tailwind base;@tailwind components;'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '@tailwind utilities;'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: import React from 'react';import ReactDOM from 'react-dom/client';
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: import './index.css';
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: import App from './App';
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: import reportWebVitals from './reportWebVitals';
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: const root = ReactDOM.createRoot(document.getElementById('root'));
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: // … rest of the code removed for brevity
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: const Header = () => {  return (
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: <header className="p-2 border-b-2
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: border-gray-300 bggray-200">
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: <h1 className="text-lg font-bold">
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: Ecommerce App</h1>
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: </header>
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: export default Header;
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: const Footer = () => {  return (
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: <footer
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: className="text-center p-2 border-t-2 bggray-
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: 200 border-gray-300 text-sm">
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: No &copy; by Ecommerce App.{" "}
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: <a href=https://github.com/PacktPublishing/Modern-
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: API-Development-with-Spring-and-Spring-Boot>
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: Modern API development with Spring and
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: Spring Boot
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: </a>
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: </footer>
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: export default Footer;
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: const Container = () => {  return (
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: <div className="flex-grow flex-shrink-0 p-4">
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: <p>Hello, text/element would appear in container</p>
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: export default Container;
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: import Header from "./components/Header";import Footer from "./components/Footer";
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: import Container from "./components/Container";
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: function App() {
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: <div className="flex flex-col min-h-screen h-full">
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: <Header />
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: <Container />
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: <Footer />
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: export default App;
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: class Config {  SCHEME = process.env.SCHEME ? process.env.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: 'SCHEME : "http";'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: 'HOST = process.env.HOST ? process.env.HOST : "localhost";'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: 'PORT = process.env.PORT ? process.env.PORT : "8080";'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: CART_URL = `${this.SCHEME}://${this.HOST}:$
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '{this.PORT}/api/v1/carts`;'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: // truncated code for brevity
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: defaultHeaders() {
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: return {
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '"Content-Type": "application/json",'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: 'Accept: "application/json",'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: …
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: // src/api/Config.jstokenExpired() {
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: const expDate = Number(localStorage.getItem
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: (this.EXPIRATION));
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: if (expDate > Date.now()) {
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: return false;
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: return true;
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: storeAccessToken(token) {  localStorage.setItem(this.ACCESS_TOKEN, `Bearer ${token}`);
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: localStorage.setItem(this.EXPIRATION,
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: this.getExpiration(token));
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: getExpiration(token) {
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: 'let encodedPayload = token ? token.split(".")[1] : null;'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: if (encodedPayload) {
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: encodedPayload = encodedPayload.replace
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: (/-/g, "+").replace(/_/g, "/");
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: const payload = JSON.parse(window.atob
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: (encodedPayload));
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: 'return payload?.exp ? payload?.exp * 1000 : 0;'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: return 0;
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: import Config from "./Config";class ProductClient {
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: constructor() { this.config = new Config(); }
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: async fetchList() {
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: return fetch(this.config.PRODUCT_URL, {
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: 'method: "GET",'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: 'mode: "cors",'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: 'headers: { ...this.config.defaultHeaders(),},'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: .then((res) => Promise.all([res, res.json()]))
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: .then(([res, json]) => {
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: 'if (!res.ok) { return { success: false, error: json };}'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: 'return { success: true, data: json };'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: '}).catch((e) => {'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: return this.handleError(e);
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: '});'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: …
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: …
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: async fetch(prodId) {   return fetch(this.config.PRODUCT_URL + "/" + prodId,
    {
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: 'method: "GET",'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: 'mode: "cors",'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: 'headers: { ...this.config.defaultHeaders(),},'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: .then((res) => Promise.all([res,  res.json()]))
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: .then(([res, json]) => {
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: 'if (!res.ok) { return { success: false, error: json }; }'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: 'return { success: true, data: json };'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: '}).catch((e) => {'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: this.handleError(e);
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: '});'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: handleError(error) {
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: const err = new Map([
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: '[TypeError, "Problem fetching the response."],'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: '[SyntaxError, "Problem parsing the response."],'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: '[Error, error.message],'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: ']).get(error.constructor);'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: return err;
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: export default ProductClient;
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: // other importsimport Products from "./Products";
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: const ProductList = ({ auth }) => {
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: const [productList, setProductList] = useState();
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: const [noRecMsg, setNoRecMsg] = useState("Loading...");
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: const { dispatch } = useCartContext();
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
- en: useEffect(() => {
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: async function fetchProducts() {
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
- en: const res = await new ProductClient().fetchList();
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) { setProductList(res.data); }
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: else { setNoRecMsg(res); }
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
- en: async function fetchCart(auth) {
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: const res = await new CartClient(auth).fetch();
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) {
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
- en: dispatch(updateCart(res.data.items));
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: if (res.data?.items && res.data.items?.length < 1)
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: setNoRecMsg("Cart is empty.");
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
- en: setNoRecMsg(res && typeof res === "string"?
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: 'res : res?.error?.message);'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: if (auth?.token) fetchCart(auth);
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: fetchProducts();
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: '}, []);'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: // rest of the code …
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: return (   <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: '{productList ? ('
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: <div className="flex flex-wrap -mx-1 lg:-mx-4">
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: <Products auth={auth} productList={productList ?
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: 'productList : []} />'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: ') : ('
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: <div className="text-lg
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: font-semibold">{noRecMsg}</div>
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: )}
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
- en: export default ProductList;
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: import ProductCard from "./ProductCard";const Products = ({ auth, productList
    }) => {
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
- en: return ( <> {productList.map((item) => (
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
- en: <ProductCard key={item.id} product={item} auth={auth} /> ))}
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
- en: export default Products;
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '{productList.map((item, index) => (  <ProductCard key={index} product={item}
    auth={auth} />))}'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: $ npm install react-router-dom
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: import { useState } from "react";import { Link, useNavigate } from "react-router-dom";
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
- en: import CartClient from "../api/CartClient";
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
- en: import { updateCart, useCartContext } from "../hooks/CartContext";
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
- en: const ProductCard = ({ auth, product }) => {
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
- en: const navigate = new useNavigate();
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: const cartClient = new CartClient(auth);
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
- en: const { cartItems, dispatch } = useCartContext();
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
- en: const [msg, setMsg] = new useState("");
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: // continue …
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: const add = async () => {  const isLoggedIn = checkLogin();
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: if (isLoggedIn && product?.id) {
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
- en: const res = await callAddItemApi();
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) {
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: if (res.data?.length > 0) {
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
- en: setMsg("Product added to bag.");
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
- en: dispatch(updateCart(res.data));
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: '} else { setMsg(res && typeof res === "string" ? res :'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
- en: res.error.message); }
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
- en: const checkLogin = () => {
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
- en: if (!auth.token) {
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
- en: navigate("/login");
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
- en: return false;
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
- en: return true;
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
- en: const callAddItemApi = async () => {
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: const qty = findQty(product.id);
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
- en: return cartClient.addOrUpdate({
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: 'id: product.id,'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: 'quantity: qty + 1,'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: 'unitPrice: product.price,'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: '});'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: const findQty = (id) => {
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: const idx = cartItems.findIndex((i) => i.id === id);
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
- en: if (~idx) { return cartItems[idx].quantity; }
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: return 0;
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: // ProductCard.jsconst buy = async () => {
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
- en: const isLoggedIn = checkLogin();
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
- en: if (isLoggedIn && product?.id) {
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: const res = await callAddItemApi();
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) { navigate("/cart"); }
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
- en: 'else { setMsg(res && typeof res === "string" ? res :'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: res.error.message); }
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: return ( <div id={product.id} className="my-1 px-1 w-full…">
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
- en: <figure className="bg-gray-100 rounded-xl p-8 …">
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: <img className="w-72 h-72 mx-auto"
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
- en: src={product.imageUrl}alt={product.name} />
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
- en: <div className="pt-4 md:p-6 text-center xs:pl-2 …">
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
- en: <form className="flex-auto">
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: <div className="flex flex-wrap items-center …">
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
- en: <h1 className="w-full flex-none font-bold mb-2.5 …">
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: <Link to={`/products/${product.id}`}>
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
- en: '{product.name}</Link>'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
- en: </h1>
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
- en: <div className="text-4xl leading-7 font-bold …">
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: '{"$"}'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
- en: '{product.price.toFixed(2)}'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: <div className="text-sm font-medium text-gray-400 …">
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
- en: In stock
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
- en: <div className="flex space-x-3 mt-8 mb-4 text-sm …">
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
- en: <div className="flex-auto flex justify-between">
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
- en: <button className="w-1/2…"
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
- en: type="button" onClick={buy}>
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
- en: Buy now
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
- en: </button>
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
- en: <button className="flex…"
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
- en: type="button" onClick={add}>
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
- en: Add to bag
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
- en: </button>
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
- en: <p className="text-sm text-gray-500 text-left">
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
- en: Free shipping on all local orders.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
- en: </p>
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
- en: </form>
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
- en: </figure>
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
- en: export default ProductCard;
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: import {Link, useParams, useNavigate} from "react-router-dom";import ProductClient
    from "../api/ProductClient";
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
- en: // Other imports removed for brevity
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
- en: const ProductDetail = ({ auth }) => {
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
- en: const { id } = useParams();
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
- en: // Other declaration removed for brevity
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
- en: // Other functions removed for brevity
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
- en: useEffect(() => {
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
- en: async function getProduct(id) {
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
- en: const client = new ProductClient();
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
- en: const res = await client.fetch(id);
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) { setProduct(res.data); }
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
- en: async function fetchCart(auth) {
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
- en: const res = await new CartClient(auth).fetch();
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) {
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
- en: console.log(res.data);
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
- en: dispatch(updateCart(res.data.items));
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
- en: if (auth?.token) fetchCart(auth);
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
- en: getProduct(id);
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
- en: '}, [id]);'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
- en: return ( /* JSX Template */ );
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
- en: export default ProductDetail;
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: import { useState } from "react";export default function useToken() {
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
- en: const getToken = () => {
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
- en: const tokenResponse = localStorage.getItem
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
- en: ("tokenResponse");
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
- en: const info = tokenResponse ? JSON.parse
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
- en: '(tokenResponse) : "";'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
- en: return info;
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
- en: const [token, setToken] = useState(getToken());
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
- en: const saveToken = (tokenResponse) => {
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
- en: localStorage.setItem("tokenResponse", JSON.stringify
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
- en: (tokenResponse));
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
- en: setToken(tokenResponse);
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
- en: 'return { setToken: saveToken, token, };'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: import { useNavigate } from "react-router-dom";import { useState } from "react";
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
- en: import PropTypes from "prop-types";
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
- en: 'Login.propTypes = { auth: PropTypes.object.isRequired, };'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
- en: const Login = ({ uri, auth }) => {
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
- en: const [username, setUserName] = useState();
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
- en: const [password, setPassword] = useState();
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
- en: const [errMsg, setErrMsg] = useState();
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
- en: const navigate = useNavigate();
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
- en: const cancel = () => {
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
- en: const l = navigate.length;
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
- en: 'l > 2 ? navigate.goBack() : navigate("/");'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
- en: const handleSubmit = async € => {
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
- en: e.preventDefault();
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
- en: const res = await auth.loginUser({ username, password });
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) {
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
- en: setErrMsg(null);
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
- en: navigate(uri ? uri":""/");
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
- en: '} else { setErrMsg('
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
- en: res && typeof res ="= "str"ng" ?
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
- en: 'res : "Unsuccessful");'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
- en: return (/* JSX Template */ );
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: import React, { createContext, useReducer, useContext }  from "react";
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
- en: export const CartContext = createContext();
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
- en: function useCartContext() { return useContext(CartContext); }
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
- en: export const UPDATE_CART = "UPDATE_CART";
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
- en: export const ADD_ITEM = "ADD_ITEM";
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
- en: export const REMOVE_ITEM = "REMOVE_ITEM";
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
- en: export function updateCart(items) {
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
- en: 'return { type: UPDATE_CART, items };'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
- en: export function addItem(item) {
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
- en: 'return { type: ADD_ITEM, item };'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
- en: export function removeItem(index) {
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
- en: 'return { type: REMOVE_ITEM, index };'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
- en: export function cartReducer(state, action) {
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
- en: switch (action.type) {
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
- en: 'case UPDATE_CART:'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
- en: return [...action?.items];
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
- en: 'case ADD_ITEM:'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
- en: return [...state, action.item];
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
- en: 'case REMOVE_ITEM:'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
- en: const list = [...state];
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
- en: list.splice(action.index, 1);
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
- en: return list;
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
- en: 'default:'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
- en: return state;
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
- en: const CartContextProvider = (props) => {
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
- en: const [cartItems, dispatch] = useReducer(cartReducer, []);
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
- en: const cartData = { cartItems, dispatch };
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
- en: return <CartContext.Provider value={cartData} {...props} />;
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
- en: export { CartContextProvider, useCartContext };
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: // other importsimport { removeItem, updateCart, useCartContext }
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
- en: from "../hooks/CartContext";
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
- en: import CartItem from "./CartItem";
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
- en: const Cart = ({ auth }) => {
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
- en: const [grandTotal, setGrandTotal] = useState(0);
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
- en: const [noRecMsg, setNoRecMsg] = useState("Loading...");
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
- en: const navigate = useNavigate();
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
- en: const cartClient = new CartClient(auth);
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
- en: const orderClient = new OrderClient(auth);
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
- en: const customerClient = new CustomerClient(auth);
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
- en: const { cartItems, dispatch } = useCartContext();
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
- en: // continue …
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: // continue src/components/Cart.jsconst calTotal = (items) => {
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
- en: let total = 0;
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
- en: items?.forEach((i) => (
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
- en: total = total + i?.unitPrice * i?.quantity));
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
- en: return total.toFixed(2);
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
- en: const increaseQty = async (id) => {
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
- en: const idx = cartItems.findIndex((i) => i.id === id);
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
- en: if (~idx) {
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
- en: cartItems[idx].quantity = cartItems[idx].quantity + 1;
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
- en: const res = await cartClient.addOrUpdate
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
- en: (cartItems[idx]);
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) {
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
- en: refreshCart(res.data);
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
- en: if (res.data?.length < 1) { setNoRecMsg
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
- en: ("Cart empty"); }
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
- en: setNoRecMsg(res && typeof res === "string" ?
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
- en: 'res : res.error.message);'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
- en: '}; // continue …'
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: // continue src/components/Cart.jsconst decreaseQty = async (id) => {
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
- en: const idx = cartItems.findIndex((i) => i.id === id);
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
- en: if (~idx && cartItems[idx].quantity <= 1) {
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
- en: return deleteItem(id);
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
- en: '} else if (cartItems[idx]?.quantity > 1) {'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
- en: cartItems[idx].quantity = cartItems[idx].quantity - 1;
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
- en: const res = await cartClient.addOrUpdate
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
- en: (cartItems[idx]);
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) {
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
- en: refreshCart(res.data);
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
- en: if (res.data?.length < 1) { setNoRecMsg
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
- en: ("Empty cart"); }
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
- en: return;
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
- en: setNoRecMsg(res && typeof res === "string" ?
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
- en: 'res : res?.error?.message);'
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
- en: const deleteItem = async (id) => {
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
- en: const idx = cartItems.findIndex((i) => i.id === id);
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
- en: if (~idx) {
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
- en: const res = await cartClient.remove(cartItems[idx].id);
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) {
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
- en: dispatch(removeItem(idx));
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
- en: if (res.data?.length < 1) { setNoRecMsg
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
- en: ("Item removed");}
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
- en: setNoRecMsg(
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
- en: 'res && typeof res === "string" ? res:'
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
- en: '"There is an error performing the remove.");'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
- en: '}; // continue …'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-629
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: // continue src/components/Cart.jsconst refreshCart = (items) => {
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
- en: setGrandTotal(calTotal(items));
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
- en: dispatch(updateCart(items));
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
- en: useEffect(() => {
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
- en: async function fetch() {
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
- en: const res = await cartClient.fetch();
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) {
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
- en: refreshCart(res.data.items);
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
- en: if (res.data?.items && res.data.items?.length < 1) {
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
- en: setNoRecMsg("Cart is empty.");
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
- en: setNoRecMsg(res && typeof res === "string" ?
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
- en: 'res : res.error.message);'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
- en: fetch();
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
- en: '}, []); // continue …'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-649
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: // continue src/components/Cart.js  const checkout = async () => {
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
- en: const res = await customerClient.fetch();
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) {
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
- en: const payload = {
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
- en: 'address: { id: res.data.addressId },'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
- en: 'card: { id: res.data.cardId },'
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
- en: const orderRes = await orderClient.add(payload);
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
- en: if (orderRes && orderRes.success) {
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
- en: navigate("/orders");
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
- en: setNoRecMsg(orderRes && typeof
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
- en: orderRes === "string"
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
- en: '? orderRes : "Couldn''t process checkout.");'
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
- en: setNoRecMsg(res && typeof res === "string" ?
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
- en: 'res : "error retreiving customer");'
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
- en: return (/* JSX Template */ );
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-672
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: // importsconst CartItem=({item, increaseQty, decreaseQty, removeItem }) =>
    {
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
- en: 'const d = item ? item.description?.split(".") : [];'
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
- en: const author = d && des.length > 0 ? d
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
- en: '[d.length - 1] : "";'
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
- en: const [total, setTotal] = useState();
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
- en: const calTotal = (item) => {
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
- en: setTotal((item?.unitPrice * item?.quantity)
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
- en: ?.toFixed(2));
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
- en: const updateQty = (qty) => {
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
- en: if (qty === -1) { decreaseQty(item?.id); }
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
- en: else if (qty === 1) { increaseQty(item?.id); }
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
- en: else { return false; }
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
- en: calTotal(item);
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
- en: useEffect(() => { calTotal(item); }, []);
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
- en: return (/* JSX Template */ );
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-691
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: // importsconst Orders = ({ auth }) => {
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
- en: const [orders, setOrders] = useState([]);
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
- en: const formatDate = (dt) => {
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
- en: return dt && new Date(dt).toLocaleString();
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
- en: useEffect(() => {
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
- en: async function fetchOrders() {
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
- en: const client = new OrderClient(auth);
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
- en: const res = await client.fetch();
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
- en: if (res && res.success) { setOrders(res.data); }
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
- en: fetchOrders();
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
- en: '}, []);'
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
- en: return (/* JSX Template */ );
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-707
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: import { BrowserRouter as Router, Route, Routes }   from "react-router-dom";
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
- en: // other imports
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
- en: function App() {
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
- en: const { token, setToken } = useToken();
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
- en: const auth = new Auth(token, setToken);
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
- en: const LoginComponent = (props) => (
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
- en: <Login {...props} uri="/login" auth={auth} />
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
- en: const ProductListComponent = (props) =>
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
- en: <ProductList auth={auth} />;
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
- en: // continue …
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: // App.js continuereturn (
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
- en: <div className="flex flex-col min-h-screen h-full ">
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
- en: <Router>
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
- en: <Header userInfo={token} auth={auth} />
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
- en: <div className="flex-grow flex-shrink-0 p-4">
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
- en: <CartContextProvider>
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
- en: <Routes>
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
- en: <Route path="/" exact
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
- en: element={<ProductListComponent />} />
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
- en: <Route
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
- en: path="/login"
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
- en: 'element={token ? <ProductListComponent /> :'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
- en: <LoginComponent />} />
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
- en: <Route
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
- en: path="/cart"
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
- en: 'element={token ? <Cart auth={auth} /> :'
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
- en: <LoginComponent />} />
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
- en: <Route
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
- en: path="/orders"
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
- en: 'element={token ? <Orders auth={auth} /> :'
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
- en: <LoginComponent />} />
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
- en: <Route
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
- en: path="/products/:id"
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
- en: element={<ProductDetail auth={auth} />} />
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
- en: <Route path="*" exact element={<NotFound />} />
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
- en: </Routes>
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
- en: </CartContextProvider>
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
- en: <Footer />
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
- en: </Router>
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
- en: export default App;
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-754
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: $ java -jar build/libs/Chapter06-0.0.1-SNAPSHOT.jar.
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-756
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: $ yarn start
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-758
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
