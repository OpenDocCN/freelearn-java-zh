- en: Chapter 1. Getting Started with WildFly
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 开始使用WildFly
- en: Java Enterprise Edition provides a standard to develop enterprise software,
    but allows the developers to choose its specific implementation. For every technology
    that is included in the Java EE (Enterprise Edition) specification, there is a
    reference implementation; an open source library or component that fulfills all
    of the requirements. Companies and organizations can create their own versions
    of the components, which means that there is no central Java EE platform that
    everybody uses. In place of that, we get multiple approaches on the implemented
    specification, with improvements and optimizations for specific cases. At the
    time of writing this, there are about 20 certified (full) implementations of Java
    EE 6 and three implementations of Java EE 7.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Java企业版提供了一种开发企业软件的标准，但允许开发者选择其特定的实现。对于Java EE（企业版）规范中包含的每一项技术，都有一个参考实现；一个满足所有要求的开源库或组件。公司和组织可以创建自己版本的组件，这意味着没有所有人都使用的中央Java
    EE平台。取而代之的是，我们得到了多种实现规范的方法，针对特定情况进行了改进和优化。在撰写本文时，大约有20个Java EE 6的认证（完整）实现和三个Java
    EE 7的实现。
- en: An application server is a runtime environment that provides applications with
    all the Java EE components. Glassfish is the reference implementation sponsored
    by Oracle, but beginning from Version 4 (created for Java EE 7), there is no longer
    commercial support for it. In this book, you will learn how to develop applications
    on the WildFly Application Server, previously known as the JBoss Application Server.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 应用服务器是一个提供所有Java EE组件的运行时环境。Glassfish是由Oracle赞助的参考实现，但从版本4（为Java EE 7创建）开始，它不再提供商业支持。在这本书中，你将学习如何在WildFly应用服务器上开发应用程序，之前被称为JBoss应用服务器。
- en: JBoss is a division of Red Hat, which seeks to provide a developer-friendly
    open source ecosystem for enterprise development. Currently, the company supports
    multiple projects (around 100), and some of them are implementations of Java EE
    specifications. The enterprise elements are combined in JBoss's own application
    server, WildFly.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: JBoss是红帽公司的一个部门，旨在为企业管理开发提供开发者友好的开源生态系统。目前，该公司支持多个项目（大约100个），其中一些是Java EE规范的实现。企业元素被整合到JBoss自己的应用服务器WildFly中。
- en: It is worth noting that the name change from JBoss AS to WildFly was made to
    separate the application server from the company and other subprojects. The name
    was chosen in a public vote (more information on this is available at [http://jbossas.jboss.org/rename/vote](http://jbossas.jboss.org/rename/vote)).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，从JBoss AS更名为WildFly是为了将应用服务器与公司和其他子项目区分开来。这个名字是通过公开投票选出的（更多信息可在[http://jbossas.jboss.org/rename/vote](http://jbossas.jboss.org/rename/vote)找到）。
- en: The new release features a scalable and high performing web server called Undertow,
    which supports the HTTP upgrade mechanism and WebSocket protocol. What's more,
    the new version of the container is even faster than JBoss Application Server
    7, and offers a unified configuration mechanism. However, the main essence of
    the latest release is the Java EE 7 compliance, which allows developers to use
    technologies from the newest version of the Java EE specification.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本推出了一个可扩展且性能高的Web服务器Undertow，它支持HTTP升级机制和WebSocket协议。更重要的是，新版本的容器甚至比JBoss应用服务器7更快，并提供了一个统一的配置机制。然而，最新版本的核心是Java
    EE 7兼容性，这允许开发者使用Java EE规范最新版本的技术。
- en: 'The focus of this book is on application development; therefore, we will first
    need to gather all resources required to deliver our applications. In this chapter,
    we will cover the following topics in detail:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的重点是应用开发；因此，我们首先需要收集所有交付应用程序所需的资源。在本章中，我们将详细介绍以下主题：
- en: An overview of Java EE and WildFly
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java EE和WildFly概述
- en: Preparing your environment for the installation of software
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备您的环境以安装软件
- en: Downloading and installing WildFly
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载和安装WildFly
- en: Verifying the WildFly installation
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证WildFly的安装
- en: Installing other resources needed for development
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装开发所需的其他资源
- en: An overview of Java EE and WildFly
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java EE和WildFly概述
- en: Java EE (formerly called J2EE) is an umbrella specification embracing a standard
    set of technologies for server-side Java development. Java EE technologies include
    Java Servlet, **JavaServer** **Pages** (**JSPs**), **JavaServer** **Faces** (**JSFs**),
    **Enterprise** **JavaBeans** (**EJB**), **Contexts and** **Dependency Injection**
    (**CDI**), **Java Messaging** **Service** (**JMS**), **Java** **Persistence API**
    (**JPA**), **Java API for XML** **Web Services** (**JAX-WS**), and **Java API**
    **for RESTful Web Services** (**JAX-RS**), among others. The newest version of
    Java EE extends the range of available technologies even further by providing
    support for Batch Applications, Concurrency Utilities, **JSON Processing** (**JSON-P**)
    and WebSocket. Several commercial and open source application servers exist, which
    allow developers to run applications compliant with Java EE; WildFly (formerly
    known as JBoss AS) is the leading open source solution adopted by developers and,
    although this is difficult to measure in exact terms, it is likely to be the most
    widely used application server in the market.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE（以前称为 J2EE）是一个包含用于服务器端 Java 开发的标准技术集合的规范。Java EE 技术包括 Java Servlet、**JavaServer
    Pages**（**JSPs**）、**JavaServer Faces**（**JSFs**）、**企业 JavaBeans**（**EJB**）、**上下文和依赖注入**（**CDI**）、**Java
    消息服务**（**JMS**）、**Java 持久化 API**（**JPA**）、**Java API for XML Web Services**（**JAX-WS**）和
    **Java API for RESTful Web Services**（**JAX-RS**）等。Java EE 的最新版本通过提供对批处理应用程序、并发实用工具、**JSON
    处理**（**JSON-P**）和 WebSocket 的支持，进一步扩展了可用技术的范围。存在多个商业和开源应用服务器，允许开发者运行符合 Java EE
    的应用程序；WildFly（以前称为 JBoss AS）是开发者采用的主要开源解决方案，尽管很难用精确的术语来衡量，但它可能是市场上使用最广泛的应用服务器。
- en: As with all application servers compliant with Java EE, WildFly ships with all
    the required libraries to allow us to develop and deploy Java applications that
    are built on the Java EE platform.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 与所有符合 Java EE 的应用服务器一样，WildFly 随带所有必需的库，使我们能够开发并部署基于 Java EE 平台构建的 Java 应用程序。
- en: WildFly and Enterprise Application Platform
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WildFly 和企业应用平台
- en: WildFly and previous JBoss Application Servers were freely available for the
    community in the form of downloadable binary packages (for major releases) or
    buildable source code (for bug fixing releases). These versions are called community
    releases and are free to use for development and production.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 和之前的 JBoss 应用服务器以可下载的二进制包（针对主要版本）或可构建的源代码（针对错误修复版本）的形式免费提供给社区。这些版本被称为社区发布版，可用于开发和生产。
- en: 'JBoss also releases more stable and hardened versions of software of the community
    builds, which are called **Enterprise Application Platform** (**EAP**), a commercial
    product with support service from Red Hat. Red Hat calls this kind of relationship
    between projects as upstream/downstream. The community builds are the source of
    changes and innovations for the downstream, the code is downstream. The commercial
    version numeration differed from the community line, but it was an extended variant
    of the community releases (for example, EAP 6.1.0 was built on JBoss 7.2.0, which
    was available only on GitHub in the form of buildable source code; the same goes
    for EAP 6.2.0 and JBoss 7.3.0). EAP builds have a more complex licensing system;
    the usage terms depend on the maturity of the build and are as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: JBoss 还发布了社区构建软件的更稳定和加固版本，这些版本被称为 **企业应用平台**（**EAP**），这是一个由 Red Hat 提供支持服务的商业产品。Red
    Hat 将项目之间的这种关系称为上游/下游。社区构建是下游变化和创新的来源，代码是下游。商业版本编号与社区版本不同，但它是社区发布的扩展变体（例如，EAP
    6.1.0 是基于 JBoss 7.2.0 构建的，仅以可构建源代码的形式在 GitHub 上提供；EAP 6.2.0 和 JBoss 7.3.0 也是如此）。EAP
    构建具有更复杂的许可系统；使用条款取决于构建的成熟度，如下所示：
- en: '**EAP Alpha** is free for the developers and production use, as they are an
    equivalent of the standard community version with optional fixes included. The
    corresponding community binaries may not be available for download, as they would
    be similar to the EAP Alpha version.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EAP 预览版**对开发者和生产使用都是免费的，因为它们相当于包含可选修复的标准社区版本。相应的社区二进制文件可能不可下载，因为它们将与 EAP
    预览版类似。'
- en: '**EAP Beta** is available to developers for free (after registration to a subscription
    program), but cannot be used in production.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EAP 测试版**对开发者免费提供（在注册订阅计划后），但不能用于生产。'
- en: '**EAP Final** is also available to developers for free, but additionally, new
    security patches are available only in the paid subscription.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EAP Final** 也对开发者免费提供，但除此之外，只有付费订阅中才有新的安全补丁。'
- en: 'The distribution model proposed by JBoss allows the developers to work for
    free on the same version as the one used in production. This is a huge benefit,
    especially since the competitive solution from Oracle (Glassfish: the reference
    implementation of a Java EE compliant server) no longer has a version with commercial
    support.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: JBoss 提出的分发模型允许开发者免费使用与生产环境中相同的版本。这是一个巨大的好处，特别是由于来自 Oracle 的竞争解决方案（Glassfish：Java
    EE 服务器参考实现）不再有带商业支持的版本。
- en: Welcome to Java EE 7
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 欢迎使用 Java EE 7
- en: 'Java EE 7 includes several improvements and additions to the existing version.
    The new version is focused on three themes: developer productivity, HTML5, and
    providing new features required by enterprise applications. The following sections
    list the major improvements to the specifications that are of interest to enterprise
    application developers.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7 包含了对现有版本的几个改进和新增功能。新版本专注于三个主题：开发者生产力、HTML5 和提供企业应用程序所需的新功能。以下章节列出了对企业应用程序开发者感兴趣的主要规范改进。
- en: If you are starting your adventure with Java EE, feel free to skip this section.
    The technologies described in the following sections will be covered in future
    chapters in more detail.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您刚开始 Java EE 的冒险之旅，请随意跳过本节。以下章节将更详细地介绍后续章节中描述的技术。
- en: JavaServer Faces 2.2 – JSR 344
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JavaServer Faces 2.2 – JSR 344
- en: 'Java EE 7 includes a new version of the JSF specification, which is not so
    revolutionary as 2.0, but still provides some appealing additions for developers.
    The key features delivered by JSF 2.2 are as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7 包含了 JSF 规范的新版本，它不像 2.0 那样革命性，但仍然为开发者提供了一些吸引人的新增功能。JSF 2.2 提供的关键特性如下：
- en: The HTML5 markup is now supported by the usage of pass-through elements and
    attributes. Earlier, custom attributes would have to be supported by an extended
    renderer for every component. The new constructs allow the developer to pass additional
    HTML attributes to the markup generated by JSF components.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在通过使用透传元素和属性支持 HTML5 标记。以前，每个组件都需要一个扩展渲染器来支持自定义属性。
- en: The flow scope has been introduced with `@FlowScoped`, which makes the creation
    of wizards (dialogs with multiple steps) easier.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 `@FlowScoped` 引入了流程作用域，这使得创建向导（具有多个步骤的对话框）变得更加容易。
- en: The Ajax-based file upload is now supported out of the box.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 Ajax 的文件上传现在已直接支持。
- en: Also, stateless views have been presented as a way to improve performance.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，还提出了无状态视图作为提高性能的方法。
- en: Enterprise JavaBeans 3.2 – JSR 345
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 企业 JavaBeans 3.2 – JSR 345
- en: 'Compared to EJB 3.1, the Version 3.2 is a minor update of the existing version.
    It concentrates mainly on marking some older features as obsolete (they are now
    optional, which means that not every Java EE 7-compliant application server will
    support them). The optional features are connected with persistence to web services
    based on EJB 2.1 and JAX-RPC. The main enhancements provided by the new specification
    are as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 与 EJB 3.1 相比，3.2 版本是对现有版本的微小更新。它主要集中于标记一些较旧的功能为过时（它们现在是可选的，这意味着并非每个 Java EE
    7 兼容的应用服务器都将支持它们）。这些可选功能与基于 EJB 2.1 和 JAX-RPC 的 Web 服务持久性相关。新规范提供的主要增强如下：
- en: Life cycle methods for stateful session beans can now be transactional.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有状态会话 Bean 的生命周期方法现在可以是事务性的。
- en: The Timer Service API, now allows you to access all active timers in the current
    EJB module.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定时器服务 API 现在允许您访问当前 EJB 模块中的所有活动定时器。
- en: A new container provided role (`**`) has been introduced. It can be used to
    indicate any authenticated user (without taking his or her actual roles into account).
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已引入了一个新的容器提供角色（`**`），它可以用来表示任何经过身份验证的用户（不考虑其实际角色）。
- en: Passivation of stateful session beans can now be disabled.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在可以禁用有状态会话 Bean 的钝化。
- en: Transactional parts of the EJB specification have been extracted and reused
    in other parts of the Java EE platform (the transaction support has been placed
    in the JTA 1.2 specification). For instance, the transactional behavior can now
    be used in CDI beans, thanks to the introduction of the `@Transactional` annotation.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: EJB 规范的事务部分已被提取并用于 Java EE 平台的其他部分（事务支持已放置在 JTA 1.2 规范中）。例如，由于引入了 `@Transactional`
    注解，现在可以在 CDI Bean 中使用事务行为。
- en: Java Persistence API 2.1 – JSR 338
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Java 持久性 API 2.1 – JSR 338
- en: JPA was introduced as a standard part of Java EE in Version 5 of the specification.
    JPA was intended to replace entity beans as the default object-relational mapping
    framework for Java EE. JPA adopted ideas from third-party object-relational frameworks,
    such as Hibernate and JDO, and made them a part of the standard version.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: JPA 被引入为 Java EE 规范第 5 版的标准部分。JPA 的目的是作为 Java EE 的默认对象关系映射框架来取代实体 Bean。JPA 采纳了来自第三方对象关系框架（如
    Hibernate 和 JDO）的想法，并将它们作为标准版本的一部分。
- en: 'JPA 2.1 is an improvement over JPA 2.0 as it provides several facilities for
    developers, which are as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: JPA 2.1 相比 JPA 2.0 是一个改进，因为它为开发者提供了以下几项便利：
- en: It provides a standardized schema generation mechanism, thanks to an extended
    set of annotations and `persistence.xml` properties
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了一个标准化的模式生成机制，这得益于扩展的注解集和 `persistence.xml` 属性。
- en: It adds support for type conversion, by the introduction of the `@Converter`
    annotation
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过引入 `@Converter` 注解添加了对类型转换的支持。
- en: Stored procedures are now supported by the Entity Manager API, so that the use
    of the SQL query mechanism for them is no longer required
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实体管理器 API 现在支持存储过程，因此不再需要使用 SQL 查询机制
- en: Criteria API has been extended by bulk updates and deletes
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过批更新和删除扩展了 Criteria API
- en: Injection is possible into entity listener classes along with the usage of life
    cycle callback methods
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以将注入到实体监听器类中，同时使用生命周期回调方法。
- en: Named queries can now be created during runtime
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在可以在运行时创建命名查询。
- en: The **JPA Query Language** (**JPQL**) has been extended with new database functions
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JPA 查询语言**（**JPQL**）已扩展了新的数据库函数'
- en: Additionally, Java EE 7-compliant containers must now support preconfigured
    data sources (along with other resources), which can be instantly used by JPA
    entities.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Java EE 7 兼容的容器现在必须支持预配置的数据源（以及其他资源），这些资源可以由 JPA 实体即时使用。
- en: WildFly uses Hibernate as its JPA provider and is shipped with a ready-to-use
    H2 in-memory database. The default data source points to the H2 instance hosted
    inside of the application server.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 使用 Hibernate 作为其 JPA 提供程序，并附带一个可立即使用的 H2 内存数据库。默认数据源指向应用程序服务器内部托管的一个
    H2 实例。
- en: Contexts and Dependency Injection for Java EE 1.1 – JSR 346
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Java EE 1.1 的上下文和依赖注入 – JSR 346
- en: 'Version 1.1 of **Contexts and Dependency Injection** (**CDI**) provides improvements
    for the issues identified in CDI after its introduction in Java EE 6\. The process
    of simplifying the programming model started in Version 1.0 and is now being continued.
    The areas covered by the update are as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**上下文和依赖注入**（**CDI**）的 1.1 版本提供了对 Java EE 6 中引入 CDI 后识别出的问题的改进。简化编程模型的过程从 1.0
    版本开始，现在正在继续。更新涵盖的领域如下：'
- en: CDI is now enabled by default (without the need to add the `bean.xml` file to
    the deployment), with the possibility to specify the desired component scanning
    mode.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CDI 默认启用（无需将 `bean.xml` 文件添加到部署中），并且可以指定所需的组件扫描模式。
- en: More fine-grained control over the bean discovery mechanism is now available
    for the developer, thanks to the use of the `@Vetoed` annotation and class or
    packages filters in `beans.xml`. Interceptors, decorators, and alternatives can
    now be globally enabled for the whole application using the `@Priority` annotation,
    instead of enabling every module.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发者现在可以通过使用 `@Vetoed` 注解和 `beans.xml` 中的类或包过滤器来获得对 Bean 发现机制的更细粒度控制。现在可以使用 `@Priority`
    注解全局启用整个应用程序的拦截器、装饰器和替代方案，而不是为每个模块启用。
- en: Event metadata can now be examined when a CDI event is handled.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当处理 CDI 事件时，现在可以检查事件元数据。
- en: Interceptors have been enhanced with the possibility to be executed around constructor
    invocation.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拦截器已增强，可以围绕构造函数调用执行。
- en: Finally, the new version contains a significant number of enhancements for the
    development of portable extensions.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，新版本包含了对可移植扩展开发的大量增强。
- en: Weld is the CDI implementation internally used in WildFly.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Weld 是 WildFly 内部使用的 CDI 实现。
- en: Java Servlet API 3.1 – JSR 340
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Java Servlet API 3.1 – JSR 340
- en: 'The new version of the Java Servlet API has a clear focus on new features.
    The most important of them is the HTTP upgrade mechanism, which allows the client
    and server to start a conversation in HTTP 1.1, and negotiate another protocol
    for subsequent requests. This feature was used to implement the WebSockets mechanism
    in Java EE 7\. Other features of the new version of specification are as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本的 Java Servlet API 明确关注新特性。其中最重要的是 HTTP 升级机制，它允许客户端和服务器在 HTTP 1.1 中开始对话，并协商后续请求的另一个协议。该特性被用于在
    Java EE 7 中实现 WebSocket 机制。规范新版本的其他特性如下：
- en: Non-blocking I/O API for Servlets has been provided to improve scalability of
    web applications
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 Servlets 提供了非阻塞 I/O API，以改善 Web 应用程序的可伸缩性
- en: Multiple security improvements have been introduced; the most notable of them
    is the possibility to set the default security semantics for all HTTP methods
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了多项安全改进；其中最值得注意的是可以为所有 HTTP 方法设置默认的安全语义
- en: JAX-RS, the Java API for RESTful Web Services 2.0 – JSR 339
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JAX-RS，Java API for RESTful Web Services 2.0 – JSR 339
- en: 'In Java EE 7, the JAX-RS specification has been enriched with some long-awaited
    features. The version has changed from 1.1 to 2.0 because of the major impact
    of the improvements that came with the new specification. The most important features
    are listed as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Java EE 7 中，JAX-RS 规范增加了一些长期期待的功能。由于新规范带来的改进具有重大影响，版本已从 1.1 更改为 2.0。以下是最重要的特性列表：
- en: The client API is now part of the specification, so the usage of third-party
    libraries is no longer needed. The implementation of the specification is required
    to provide a REST client that conforms to the common API.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端 API 现在是规范的一部分，因此不再需要第三方库。规范的实施必须提供一个符合通用 API 的 REST 客户端。
- en: Asynchronous requests are now supported so that the client does not have to
    passively wait for the completion of the task.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在支持异步请求，这样客户端就不必被动等待任务的完成。
- en: Filters and handlers have been introduced as a common mechanism to provide extension
    points for the developer. They can be used for cross-cutting concerns, such as
    auditing and security.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了过滤器和处理程序作为为开发者提供扩展点的通用机制。它们可用于跨切面关注点，如审计和安全。
- en: Bean Validation has been integrated into JAX-RS, making constraint annotations
    usable for request parameters.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bean Validation 已集成到 JAX-RS 中，使得约束注解可用于请求参数。
- en: WildFly comes bundled with RESTEasy, an implementation of JAX-RS 2.0.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 随带 RESTEasy，这是 JAX-RS 2.0 的一个实现。
- en: Java Message Service 2.0 – JSR 343
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Java 消息服务 2.0 – JSR 343
- en: 'The JSR 343 is the first update for the JMS specification in over a decade.
    Once more, the main theme of the update is the simplification of the API. The
    new API dramatically decreases the amount of boilerplate code that has to be written
    by the programmer while still maintaining backwards compatibility. Other new features
    are listed as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: JSR 343 是十多年来 JMS 规范的第一个更新。更新再次以简化 API 为主题。新的 API 大大减少了程序员必须编写的样板代码量，同时仍然保持向后兼容。其他新特性如下：
- en: Asynchronous message sending is now supported, so the application does not have
    to be blocked until an acknowledgment from the server is received
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在支持异步消息发送，因此应用程序不必在收到服务器的确认之前被阻塞
- en: Messages can now be sent with a scheduled delay for the delivery
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在可以设置延迟交付的消息
- en: HornetQ is the JMS provider used and developed by JBoss. It is possible to use
    it outside of WildFly as a standalone message broker.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: HornetQ 是由 JBoss 使用和开发的 JMS 提供商。它可以在 WildFly 之外作为独立的消息代理使用。
- en: Bean Validation 1.1 – JSR 349
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Bean Validation 1.1 – JSR 349
- en: 'The process of updating the Bean Validation in Java EE 7 concentrates on two
    main features:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 Java EE 7 中的 Bean Validation 的过程集中在两个主要特性上：
- en: Methods validation, which allows the developer to validate parameters and return
    values
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法验证，允许开发者验证参数和返回值
- en: Tighter CDI integration, which changes the life cycle of the elements of the
    validation framework, allowing the developer to use dependency injection in his
    or her own `ConstraintValidator` implementations
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更紧密的 CDI 集成，这改变了验证框架元素的生命周期，允许开发者在其自己的 `ConstraintValidator` 实现中使用依赖注入
- en: Concurrency utilities for Java EE 1.0 – JSR 236
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Java EE 1.0 的并发实用工具 – JSR 236
- en: Concurrency utilities is a new feature pack to use multithreading in Java EE
    application components. The new specification provides `ManagedExecutorService`
    (a container-aware version of `ExecutorService` known from Java SE), which can
    be used to delegate the execution of tasks to a separate thread. These managed
    tasks could use most of the features that are available for application components
    (such as EJBs or Servlets). It is also possible to schedule cyclic or delayed
    tasks using new `ManagedScheduledExecutorService`. These new additions to the
    platform are filling a functional gap for Java EE, which was very hard to overcome
    within its architecture earlier on.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 并发实用工具是一个新的功能包，用于在Java EE应用组件中使用多线程。新的规范提供了`ManagedExecutorService`（Java SE中已知的`ExecutorService`的容器感知版本），可以用来将任务的执行委托给一个单独的线程。这些管理任务可以使用大多数适用于应用组件的功能（例如EJB或Servlet）。还可以使用新的`ManagedScheduledExecutorService`来安排周期性或延迟的任务。这些平台的新增功能填补了Java
    EE的功能空白，这在早期架构中是非常难以克服的。
- en: Batch applications for the Java Platform 1.0 – JSR 352
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Java平台1.0的批处理应用程序 – JSR 352
- en: 'Batch jobs were another area of enterprise application development, which was
    not covered by earlier versions of Java EE. The new batch processing framework
    is used to provide a common solution to run tasks that are executed without user
    interaction. Java EE provides the developer with the following options:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 批处理作业是另一个企业级应用开发领域，在Java EE的早期版本中没有涉及。新的批处理框架被用来提供一个通用的解决方案来运行无需用户交互的任务。Java
    EE为开发者提供了以下选项：
- en: Batch runtime for the execution of jobs
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批处理作业执行运行时
- en: A job description language (based on XML)
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于XML的作业描述语言
- en: The Java API for the implementation of the business logic for the batch tasks
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批处理任务业务逻辑实现的Java API
- en: jBeret, which is the batching framework used in WildFly
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jBeret，这是WildFly中使用的批处理框架
- en: Java API for JSON Processing 1.0 – JSR 353
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JSON处理的Java API 1.0 – JSR 353
- en: 'Java EE 7 now comes with out-of-the-box JSON processing, so the developer is
    no longer forced to use external libraries for this task. The new API allows JSON
    processing to use two approaches: object model (DOM based) and streaming (event-based).'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7现在自带了开箱即用的JSON处理功能，因此开发者不再被迫使用外部库来完成这项任务。新的API允许JSON处理使用两种方法：对象模型（基于DOM）和流式处理（基于事件）。
- en: Java API for WebSocket 1.0 – JSR 356
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: WebSocket 1.0的Java API – JSR 356
- en: To fully support the development of applications based on HTML5, Java EE 7 requires
    a standardized technology for two-way communication between the server and the
    user's browser. The WebSocket API allows the developer to define server-side endpoints,
    which will maintain a TCP connection for every client that will connect to them
    (using, for instance, a JavaScript API). Before the new specification, developers
    had to use vendor-specific libraries and not portable solutions to achieve the
    same goal.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完全支持基于HTML5的应用程序的开发，Java EE 7需要一种标准化的技术来实现服务器与用户浏览器之间的双向通信。WebSocket API允许开发者定义服务器端端点，这些端点将为每个连接到它们的客户端维护一个TCP连接（例如，使用JavaScript
    API）。在新规范之前，开发者必须使用供应商特定的库和非便携式解决方案来实现相同的目标。
- en: New features in WildFly
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WildFly的新特性
- en: 'The eighth release of WildFly is based on modular architecture introduced in
    the previous release named JBoss AS 7\. It has improved on several key points,
    including areas of performance and management. The most important change for the
    developers is that this release implements the Java EE 7 standard completely.
    Some of the most notable improvements include the following:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly的第八次发布基于在之前版本JBoss AS 7中引入的模块化架构。它在多个关键点进行了改进，包括性能和管理领域。对于开发者来说，最重要的变化是这次发布完全实现了Java
    EE 7标准。其中一些最显著的改进包括以下内容：
- en: WildFly 8 implements all standards presented by Java EE 7 specifications, which
    are also described in this chapter.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WildFly 8实现了Java EE 7规范中提出的所有标准，这些标准也在本章中进行了描述。
- en: The web server module was completely rewritten under the name Undertow. It supports
    both blocking and non-blocking operations. Early performance tests (for example,
    [http://www.techempower.com/benchmarks/#section=data-r6&hw=i7&test=plaintext](http://www.techempower.com/benchmarks/#section=data-r6&hw=i7&test=plaintext))
    show major performance improvements in HTTP request handling. Undertow is also
    available as a separate project and is possible to be used without WildFly.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络服务器模块在名称为 Undertow 的情况下被完全重写。它支持阻塞和非阻塞操作。早期的性能测试（例如，[http://www.techempower.com/benchmarks/#section=data-r6&hw=i7&test=plaintext](http://www.techempower.com/benchmarks/#section=data-r6&hw=i7&test=plaintext)）显示了
    HTTP 请求处理方面的重大性能提升。Undertow 也可以作为一个独立的项目使用，并且可以在不使用 WildFly 的情况下使用。
- en: The final WildFly release has reduced the number of used ports. Now, it uses
    only two of them, one (`9990`) for management, JMX, and web administration, and
    the second one (`8080`) for standard services, including HTTP, WebSockets, remote
    JNDI, and EJB invocations.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最终的 WildFly 版本减少了使用的端口号数量。现在，它只使用两个端口，一个（`9990`）用于管理、JMX 和网络管理，另一个（`8080`）用于标准服务，包括
    HTTP、WebSockets、远程 JNDI 和 EJB 调用。
- en: Now, it is possible to limit a user's management permissions using the Management
    **role based access control** (**RBAC**). All configuration changes can be tracked
    using the audit log.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，可以使用管理**基于角色的访问控制**（**RBAC**）来限制用户的管理权限。所有配置更改都可以通过审计日志进行跟踪。
- en: For previous releases, any upgrade operation requires a completely new server
    installation. WildFly brings the patching feature, allowing to install and rollback
    modules using management protocols.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于之前的版本，任何升级操作都需要完全新的服务器安装。WildFly 带来了打补丁的功能，允许使用管理协议安装和回滚模块。
- en: In the next section, we will describe all the required steps to install and
    start a new application server.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将描述安装并启动一个新的应用程序服务器所需的所有步骤。
- en: Installing the server and client components
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装服务器和客户端组件
- en: The first step in learning about the application server will be to install all
    the necessary components on your machine in order to run it. The application server
    itself requires just a JDK environment to be installed.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 了解应用程序服务器的第一步是在您的机器上安装所有必要的组件以运行它。应用程序服务器本身只需要安装 JDK 环境。
- en: As far as hardware requirements are concerned, you should be aware that the
    server distribution, at the time of writing this, requires about 130 MB of hard
    disk space, and allocates a minimum of 64 MB and a maximum of 512 MB for a standalone
    server.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 就硬件要求而言，您应该知道，在撰写本文时，服务器发行版需要大约 130 MB 的硬盘空间，并为独立服务器分配了最小 64 MB 和最大 512 MB。
- en: 'In order to get started, we will need to go over this checklist:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始，我们需要检查以下清单：
- en: Install JDK where WildFly will run
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 WildFly 将运行的地方安装 JDK
- en: Install WildFly
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 WildFly
- en: Install the Eclipse development environment
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Eclipse 开发环境
- en: Install the Maven build management tool
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Maven 构建管理工具
- en: At the end of this chapter, you will have all the instruments to get started
    with the application server.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将拥有启动应用程序服务器所需的所有工具。
- en: Installing Java SE
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Java SE
- en: The first mandatory requirement is to install a JDK 8 environment. The Java
    SE download site can be found at [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 第一项强制性要求是安装 JDK 8 环境。Java SE 下载网站可在 [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    找到。
- en: Choose the latest version of Java SE 8 and install it. If you don't know how
    to install it, please take a look at [http://docs.oracle.com/javase/8/docs/technotes/guides/install/install_overview.html](http://docs.oracle.com/javase/8/docs/technotes/guides/install/install_overview.html).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 Java SE 8 的最新版本并安装它。如果您不知道如何安装，请参阅[http://docs.oracle.com/javase/8/docs/technotes/guides/install/install_overview.html](http://docs.oracle.com/javase/8/docs/technotes/guides/install/install_overview.html)。
- en: Testing the installation
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试安装
- en: 'Once you have completed your installation, run the `java -version` command
    from a command prompt to verify that it is correctly installed. Here is the expected
    output from a Windows machine:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 完成安装后，从命令提示符运行 `java -version` 命令以验证其是否正确安装。以下是来自 Windows 机器的预期输出：
- en: '[PRE0]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installing WildFly
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 WildFly
- en: The JBoss WildFly application server can be downloaded for free from [http://wildfly.org/downloads/](http://wildfly.org/downloads/).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: JBoss WildFly 应用程序服务器可以从 [http://wildfly.org/downloads/](http://wildfly.org/downloads/)
    免费下载。
- en: 'As you can see in the following screenshot, at the moment of writing this book,
    the latest stable release of WildFly is 8.1.0.Final, which features a Certified
    Java EE 7 full profile:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如以下截图所示，在撰写本书时，WildFly 的最新稳定版本为 8.1.0.Final，它具有经过认证的 Java EE 7 全功能配置：
- en: '![Installing WildFly](img/00002.jpeg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![安装 WildFly](img/00002.jpeg)'
- en: Once you have chosen the appropriate server distribution, you will then be warned
    that this download is part of a community release and, as such, is not supported.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了适当的服务器发行版，您将被告知此下载是社区发布的一部分，因此不受支持。
- en: Note
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you need Enterprise support for your applications, you can opt for the Red
    Hat Enterprise Application Platform.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要为您的应用程序提供企业级支持，可以选择 Red Hat Enterprise Application Platform。
- en: Compared to the community version, the EAP has gone through different quality
    tests and might be different in terms of features/packaging. More information
    about the differences between EAP and the community version can be found at the
    beginning of this chapter. However, at the time of writing this book, EAP does
    not yet support Java EE 7, and no road map is publicly available.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 与社区版本相比，EAP 经过了不同的质量测试，可能在功能/打包方面有所不同。有关 EAP 和社区版本之间差异的更多信息，请参阅本章开头。然而，在撰写本书时，EAP
    还不支持 Java EE 7，且没有公开的路线图。
- en: Installing WildFly is a piece of cake; it does not require anything else besides
    unpacking the `wildfly-8.1.0.Final.zip` archive.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 WildFly 简单易行；除了解压缩 `wildfly-8.1.0.Final.zip` 归档之外，不需要其他任何东西。
- en: Windows users can simply use any uncompressing utility, such as built-in compressed
    folders (in newer Windows releases), WinZip, WinRAR, or 7-Zip taking care to choose
    a folder name that does not contain empty spaces and white spaces. Unix/Linux
    should use the `$ unzip wildfly-8.1.0.Final.zip` unzip shell command to explode
    the archive.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 用户可以使用任何解压缩工具，例如内置的压缩文件夹（在新版 Windows 中），WinZip，WinRAR 或 7-Zip，注意选择不包含空格和空白的文件夹名称。Unix/Linux
    应使用 `$ unzip wildfly-8.1.0.Final.zip` 解压缩 shell 命令来展开归档。
- en: Note
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Security warning**'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全警告**'
- en: Unix/Linux users should be aware that WildFly does not require root privileges,
    as none of the default ports used by WildFly are below the privileged port range
    of `1024`. To reduce the risk of users gaining root privileges through WildFly,
    install and run WildFly as a non-root user.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Unix/Linux 用户应知道 WildFly 不需要 root 权限，因为 WildFly 使用的默认端口都不低于 `1024` 的特权端口范围。为了降低用户通过
    WildFly 获得root权限的风险，请以非root用户安装并运行 WildFly。
- en: Starting WildFly
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动 WildFly
- en: 'After you have installed WildFly, it is wise to perform a simple start up test
    to validate that there are no major problems with your Java VM / operating system
    combination. To test your installation, move to the `bin` directory of your `JBOSS_HOME`
    (the path to which you have unzipped your application server) directory and issue
    the following command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 WildFly 后，进行简单的启动测试以验证您的 Java VM /操作系统组合没有出现重大问题是明智的。要测试您的安装，请转到您的 `JBOSS_HOME`
    目录的 `bin` 目录（您已解压缩应用程序服务器的路径）并执行以下命令：
- en: '[PRE1]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following is a screenshot of a sample WildFly start-up console:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例 WildFly 启动控制台的截图：
- en: '![Starting WildFly](img/00003.jpeg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![启动 WildFly](img/00003.jpeg)'
- en: The preceding command starts up a WildFly standalone instance, which is equivalent
    to starting the application server with the `run.bat/run.sh` script used by earlier
    JBoss AS releases. You will notice how amazingly fast the new release of the application
    server is; this is due to the modular architecture introduced in Version 7 of
    JBoss AS, which only starts up necessary parts of the application server container
    needed by the loaded applications.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令启动了一个 WildFly 独立实例，这与使用早期 JBoss AS 版本中使用的 `run.bat/run.sh` 脚本启动应用程序服务器等效。您将注意到新版本的应用程序服务器启动速度之快令人惊讶；这归功于
    JBoss AS 7 版本中引入的模块化架构，该架构只启动加载应用程序所需的应用程序服务器容器中的必要部分。
- en: 'If you need to customize the start-up properties of your application server,
    open the `standalone.conf` file (or `standalone.conf.bat` for Windows users),
    where the memory requirements of Wildfly have been declared. Here is the Linux
    core section of this file:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要自定义应用程序服务器的启动属性，请打开 `standalone.conf` 文件（或 Windows 用户的 `standalone.conf.bat`），其中已声明
    Wildfly 的内存需求。以下是该文件的 Linux 核心部分：
- en: '[PRE2]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: So, by default, the application server starts with a minimum memory requirement
    of 64 MB of heap space and a maximum of 512 MB. This will be just enough to get
    started; however, if you need to run more robust Java EE applications on it, you
    will likely require at least 1 GB of heap space or 2 GB or more, depending on
    your application type. Generally speaking, 32-bit machines cannot execute a process
    whose space exceeds 2 GB; however, on 64-bit machines, there is essentially no
    limit to the process size.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，默认情况下，应用服务器以至少64 MB的堆空间和最多512 MB的最大堆空间启动。这足以开始；然而，如果你需要在上面运行更健壮的Java EE应用程序，你可能至少需要1
    GB的堆空间，或者根据应用程序类型，可能需要2 GB或更多。一般来说，32位机器无法执行超过2 GB空间的过程；然而，在64位机器上，实际上没有进程大小的限制。
- en: 'You can verify that the server is reachable from the network by simply pointing
    your browser to the application server''s welcome page, which can be accessed
    from the well-known address, `http://localhost:8080`. The welcome page of WildFly
    is shown in the following screenshot:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过将浏览器指向应用服务器的欢迎页面来验证服务器是否可以从网络访问，该页面可以通过众所周知的地址`http://localhost:8080`访问。WildFly的欢迎页面如下所示：
- en: '![Starting WildFly](img/00004.jpeg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![启动WildFly](img/00004.jpeg)'
- en: Connecting to the server with the command-line interface
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用命令行界面连接到服务器
- en: If you have been using previous releases of the application server, you might
    have heard about the twiddle command-line utility that queried MBeans installed
    on the application server. This utility has been replaced by a more sophisticated
    interface named the command-line interface(**CLI**); it can be found in `JBOSS_HOME/bin`.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你之前使用过应用服务器的早期版本，你可能听说过twiddle命令行实用程序，该实用程序查询应用服务器上安装的MBeans。这个实用程序已被一个更复杂的界面所取代，称为命令行界面(**CLI**)；它可以在`JBOSS_HOME/bin`中找到。
- en: 'Just launch the `jboss-cli.bat` script (or `jboss-cli.sh` for Linux users),
    and you will be able to manage the application server via a shell interface. This
    is shown in the following screenshot:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 只需启动`jboss-cli.bat`脚本（或Linux用户的`jboss-cli.sh`），你就可以通过shell界面管理应用服务器。这将在以下截图展示：
- en: '![Connecting to the server with the command-line interface](img/00005.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![使用命令行界面连接到服务器](img/00005.jpeg)'
- en: We started an interactive shell session that can also use the command-line completion
    (by pressing the *Tab* key) to match partly typed command names. No more searches
    are needed to find the exact syntax of commands!
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们启动了一个交互式shell会话，也可以使用命令行补全（通过按*Tab*键）来匹配部分输入的命令名称。不再需要搜索以找到命令的确切语法！
- en: Note
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In the previous screenshot, we connected to the server using the `connect` command;
    it uses the loopback server address and plugs into port `9990` by default.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一张截图，我们使用`connect`命令连接到服务器；它默认使用回环服务器地址，并连接到端口`9990`。
- en: The command-line interface is discussed in depth in [Chapter 9](part0048_split_000.html#page
    "Chapter 9. Managing the Application Server"), *Managing the Application Server*,
    which is all about server management interfaces; we will, however, get an initial
    taste of its basic functionalities in the next sections to get you accustomed
    to this powerful tool.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行界面在[第9章](part0048_split_000.html#page "第9章。管理应用服务器")中进行了深入讨论，*管理应用服务器*，这是关于服务器管理界面的全部内容；然而，我们将在下一节中初步了解其基本功能，以便让你熟悉这个强大的工具。
- en: Stopping WildFly
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 停止WildFly
- en: The easiest way to stop WildFly is by sending an interrupt signal with *Ctrl*
    + *C*.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 停止WildFly最简单的方法是通过发送中断信号*Ctrl* + *C*。
- en: 'However, if your WildFly process was launched in the background or, rather,
    is running on another machine, you can use the CLI interface to issue an immediate
    shutdown command:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你的WildFly进程是在后台启动的，或者更确切地说，是在另一台机器上运行，你可以使用CLI界面发出立即关闭命令：
- en: '[PRE3]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Locating the shutdown script
  id: totrans-149
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定位关闭脚本
- en: 'There is actually one more option to shut down the application server that
    is pretty useful, if you need to shut down the server from within a script. This
    option consists of passing the `--` connect option to the admin shell, thereby
    switching off the interactive mode as shown in the following command line:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上还有一个选项可以关闭应用服务器，这在需要从脚本中关闭服务器时非常有用。此选项包括将`--`连接选项传递给管理shell，从而关闭交互模式，如下所示命令行：
- en: '[PRE4]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Stopping WildFly on a remote machine
  id: totrans-152
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在远程机器上停止WildFly
- en: 'Shutting down the application server that is running on a remote machine is
    just a matter of providing the server''s remote address to the CLI, and for security
    reasons, a username and password, as shown in the following code snippet (see
    the next chapter to learn more about user creation):'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭在远程机器上运行的 应用服务器只需将服务器的远程地址提供给 CLI，出于安全原因，还需要用户名和密码，以下代码片段显示了这一点（参见下一章了解有关用户创建的更多信息）：
- en: '[PRE5]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: However, you have to remember that you need access to a given port because often,
    it may be blocked by a firewall.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你必须记住你需要访问一个特定的端口，因为通常，它可能会被防火墙阻止。
- en: Restarting WildFly
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重启 WildFly
- en: The command-line interface contains many useful commands. One of the most interesting
    options is the ability to reload the AS configuration or parts of it using the
    `reload` command.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行界面包含许多有用的命令。其中最有趣的一个选项是使用 `reload` 命令重新加载 AS 配置或其部分。
- en: 'When issued on the root node path of the AS server, the `reload` command can
    reload the services'' configuration:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 当在 AS 服务器根节点路径上执行时，`reload` 命令可以重新加载服务的配置：
- en: '[PRE6]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Installing the Eclipse environment
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Eclipse 环境
- en: The development environment used in this book is Eclipse, which is known by
    Java developers worldwide, and it contains a huge set of plugins to expand its
    functionalities. Besides this, Eclipse is the first IDE that is compatible with
    the new application server.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 本书所使用的开发环境是 Eclipse，这是全球 Java 开发者所熟知的，它包含了一整套插件来扩展其功能。除此之外，Eclipse 是第一个兼容新应用服务器的
    IDE。
- en: So, let's move to the download page of Eclipse, which is located at [http://www.eclipse.org](http://www.eclipse.org).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们转到 Eclipse 的下载页面，它位于 [http://www.eclipse.org](http://www.eclipse.org)。
- en: 'From here, download the latest Enterprise Edition (at the time of writing this
    book, it is Version 4.4 and is also known as Luna). The compressed package contains
    all the Java EE plugins already installed. This is shown in the following screenshot:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里下载最新的企业版（在撰写本书时，版本为 4.4，也称为 Luna）。压缩包中包含了已经安装的所有 Java EE 插件。以下截图显示了这一过程：
- en: '![Installing the Eclipse environment](img/00006.jpeg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Eclipse 环境](img/00006.jpeg)'
- en: Once you have unzipped the previously downloaded file, you will see a folder
    named `eclipse`. In this folder, you will find the Eclipse application (a big
    blue dot). It is recommended that you create a shortcut on the desktop to simplify
    the launching of Eclipse. Note that, just as with WildFly, Eclipse does not have
    an installation process. Once you have unzipped the file, you are done!
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦解压之前下载的文件，你将看到一个名为 `eclipse` 的文件夹。在这个文件夹中，你可以找到 Eclipse 应用程序（一个大的蓝色圆点）。建议你在桌面上创建一个快捷方式以简化
    Eclipse 的启动。请注意，与 WildFly 一样，Eclipse 没有安装过程。一旦解压文件，你就完成了！
- en: Installing JBoss Tools
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 JBoss Tools
- en: 'The next step will be installing the JBoss AS plugin that is a part of the
    suite of plugins named JBoss Tools. Installing new plugins in Eclipse is pretty
    simple; just follow these steps:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步将是安装 JBoss AS 插件，它是名为 JBoss Tools 的插件套件的一部分。在 Eclipse 中安装新插件非常简单；只需按照以下步骤操作：
- en: From the menu, navigate to **Help** | **Install New Software**.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单中，导航到 **帮助** | **安装新软件**。
- en: Then, click on the **Add** button, where you will enter JBoss Tools' download
    URL (along with a description), [http://download.jboss.org/jbosstools/updates/development/luna/](http://download.jboss.org/jbosstools/updates/development/luna/).
    This is shown in the following screenshot:![Installing JBoss Tools](img/00007.jpeg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击 **添加** 按钮，在这里你将输入 JBoss Tools 的下载 URL（以及描述），[http://download.jboss.org/jbosstools/updates/development/luna/](http://download.jboss.org/jbosstools/updates/development/luna/)。以下截图显示了这一过程：![安装
    JBoss Tools](img/00007.jpeg)
- en: As you can see in the preceding screenshot, you need to check the **JBossAS
    Tools** plugin and move forward to the next option to complete the installation
    process.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前一个截图所示，你需要检查 **JBossAS Tools** 插件，然后继续到下一个选项以完成安装过程。
- en: Note
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Enter `JBossAS` into the filter field to quickly find the JBoss AS Tools plugin
    among the large set of JBoss Tools.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在过滤器字段中输入 `JBossAS` 以快速在大量的 JBoss Tools 中找到 JBoss AS 工具插件。
- en: Once done, restart the process when prompted.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，根据提示重新启动进程。
- en: Note
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can also download JBoss Tools as individual zip files for an offline installation.
    See JBoss Tools Downloads at [http://tools.jboss.org/downloads/](http://tools.jboss.org/downloads/).
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还可以将 JBoss Tools 作为单独的 zip 文件下载以进行离线安装。请参阅 [http://tools.jboss.org/downloads/](http://tools.jboss.org/downloads/)
    上的 JBoss Tools 下载。
- en: Now, you should be able to see WildFly listed as a server by navigating to **New**
    | **Server** from the upper menu and expanding the **JBoss Community** option,
    as shown in the following screenshot:![Installing JBoss Tools](img/00008.jpeg)
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您应该能够通过从菜单中选择**新建** | **服务器**并展开**JBoss Community**选项来在**新服务器**中看到 WildFly，如图所示：![安装
    JBoss Tools](img/00008.jpeg)
- en: Completing the server installation in Eclipse is quite straightforward as it
    just requires pointing to the folder where your server distribution is; we will
    therefore leave this to you to implement as a practical exercise.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Eclipse 中完成服务器安装相当简单，只需指向您的服务器发行版所在的文件夹即可；因此，我们将把这个留给你作为实践练习来实现。
- en: Alternative development environments
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 替代开发环境
- en: Since this book is all about development, we should also account for some other
    alternatives that might suit your programming style or your company standards
    better. So, another valid alternative is IntelliJ IDEA, which is available at
    [http://www.jetbrains.com/idea/index.html](http://www.jetbrains.com/idea/index.html).
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这本书全部关于开发，我们也应该考虑一些可能更适合您的编程风格或公司标准的其他替代方案。因此，另一个有效的替代方案是 IntelliJ IDEA，可在[http://www.jetbrains.com/idea/index.html](http://www.jetbrains.com/idea/index.html)找到。
- en: IntelliJ IDEA is a code-centric IDE focused on developer productivity. The editor
    exhibits a nice understanding of your code and makes great suggestions right when
    you need them and is always ready to help you shape your code.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: IntelliJ IDEA 是一个以代码为中心的 IDE，专注于提高开发者的生产力。编辑器能够很好地理解您的代码，并在您需要时提供出色的建议，并且始终准备帮助您塑造代码。
- en: Two versions of this product exist—Community edition and Ultimate edition—that
    require a license. In order to use Java EE and the WildFly plugin, you need to
    download the ultimate edition from [http://www.jetbrains.com/idea/download/index.html](http://www.jetbrains.com/idea/download/index.html)
    and then simply install it using the installation wizard.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 该产品有两种版本——社区版和终极版，需要许可证。为了使用 Java EE 和 WildFly 插件，您需要从[http://www.jetbrains.com/idea/download/index.html](http://www.jetbrains.com/idea/download/index.html)下载终极版，然后使用安装向导简单地安装它。
- en: 'Once you have installed the Ultimate edition, you will be able to get started
    with developing applications with WildFly by going to **File** | **Settings**
    and choosing the **IDE Settings** option. Here, you can choose to add new application
    server environments. This is shown in the following screenshot:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了终极版，您可以通过转到**文件** | **设置**并选择**IDE 设置**选项来开始使用 WildFly 开发应用程序。在这里，您可以选择添加新的应用程序服务器环境。这在上面的屏幕截图中显示：
- en: '![Alternative development environments](img/00009.jpeg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![替代开发环境](img/00009.jpeg)'
- en: Another development option that is quite popular among developers is NetBeans
    ([http://netbeans.org](http://netbeans.org)), which has support for WildFly in
    its releases 7.4 and 8.0, but requires installation of additional plugins available
    in the NetBeans plugins registry.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个在开发者中相当受欢迎的开发选项是 NetBeans ([http://netbeans.org](http://netbeans.org))，它在
    7.4 和 8.0 版本中支持 WildFly，但需要在 NetBeans 插件注册表中安装额外的插件。
- en: Installing Maven
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Maven
- en: 'Besides graphical tools, you are strongly encouraged to learn about Maven,
    the popular build and release management tool. By using Maven, you will enjoy
    the following things:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 除了图形工具之外，强烈建议您学习 Maven，这是一个流行的构建和发布管理工具。通过使用 Maven，您将享受到以下好处：
- en: A standard structure for all your projects
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有项目的标准结构
- en: A centralized and automatic management of dependencies
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖项的集中和自动管理
- en: Maven is distributed in several formats, for your convenience, and can be downloaded
    from [http://maven.apache.org/download.html](http://maven.apache.org/download.html).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 以几种格式分发，为了您的方便，可以从[http://maven.apache.org/download.html](http://maven.apache.org/download.html)下载。
- en: Once the download is complete, unzip the distribution archive (for example,
    `apache-maven-3.1.1-bin.zip` for Windows) to the directory in which you wish to
    install Maven 3.1.0 (or the latest available version), for example, `C:\\Programs\apache-maven-3.1.1`.
    Some operating systems such as Linux or OS X offer Maven packages in their application
    repositories.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，将发行版存档（例如，Windows 上的 `apache-maven-3.1.1-bin.zip`）解压缩到您希望安装 Maven 3.1.0（或最新可用版本）的目录中，例如，`C:\\Programs\apache-maven-3.1.1`。一些操作系统（如
    Linux 或 OS X）在其应用程序仓库中提供 Maven 软件包。
- en: Once done, add the `M2_HOME` environment variable to your system so that it
    will point to the folder where Maven has been unpacked.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，将 `M2_HOME` 环境变量添加到您的系统中，使其指向 Maven 解包的文件夹。
- en: Next, update the `PATH` environment variable by adding the Maven binaries to
    your system path. For example, on the Windows platform, you should include `%M2_HOME%/bin`
    in order to make Maven available on the command line.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，通过将 Maven 二进制文件添加到系统路径中来更新 `PATH` 环境变量。例如，在 Windows 平台上，你应该包含 `%M2_HOME%/bin`
    以便在命令行上使用 Maven。
- en: Some additional Maven learning materials are available on the Sonatype website
    in the form of free books; refer to [http://www.sonatype.com/resources/books](http://www.sonatype.com/resources/books).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 一些额外的 Maven 学习材料以免费书籍的形式可在 Sonatype 网站上找到；请参阅 [http://www.sonatype.com/resources/books](http://www.sonatype.com/resources/books)。
- en: Testing the installation
  id: totrans-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试安装
- en: 'Once you have completed your installation, run the `mvn` version to verify
    that Maven has been correctly installed. Refer to the following code snippet to
    verify the correct installation:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您完成安装，运行 `mvn` 版本来验证 Maven 是否已正确安装。请参考以下代码片段以验证正确的安装：
- en: '[PRE7]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Downloading the example code**'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在 [http://www.packtpub.com](http://www.packtpub.com) 的账户中下载您购买的所有 Packt
    书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问 [http://www.packtpub.com/support](http://www.packtpub.com/support)
    并注册，以便将文件直接通过电子邮件发送给您。
- en: Summary
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we ran our first mile on the track to application server development.
    We introduced the new features of the application server and had an overview of
    the Java Platform Enterprise Edition in Version 7, also known as Java EE 7.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们在应用服务器开发的道路上迈出了第一步。我们介绍了应用服务器的最新功能，并对 Java 平台企业版（版本 7）进行了概述，也称为 Java
    EE 7。
- en: Next, we discussed the installation of the WildFly AS and all the core components
    that include JDK and a set of development tools, such as Eclipse and Maven, which
    will be your companions on this journey.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们讨论了 WildFly AS 的安装以及所有核心组件的安装，包括 JDK 和一系列开发工具，如 Eclipse 和 Maven，这些工具将是您在这段旅程中的伴侣。
- en: In the next chapter, we will summarize all the application server features with
    a special focus on the components and commands needed to deliver an application,
    which is the main aim of this book.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将总结所有应用服务器的功能，特别关注交付应用程序所需的组件和命令，这是本书的主要目标。
