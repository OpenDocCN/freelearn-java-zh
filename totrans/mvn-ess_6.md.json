["```java\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-assembly-plugin</artifactId>\n      <executions>\n        <execution>\n          <id>copy_components</id>\n          <phase>test</phase>\n          <goals>\n            <goal>attached</goal>\n          </goals>\n          <configuration>\n            <filters>\n              <filter>\n                ${basedir}/src/assembly/filter.properties\n              </filter>\n            </filters>\n            <descriptors>\n              <descriptor>src/assembly/dist.xml</descriptor>\n            </descriptors>\n          </configuration>\n        </execution>\n        <execution>\n          <id>dist</id>\n          <phase>package</phase>\n          <goals>\n            <goal>attached</goal>\n          </goals>\n          <configuration>\n            <filters>\n              <filter>\n                ${basedir}/src/assembly/filter.properties\n              </filter>\n            </filters>\n            <descriptors>\n              <descriptor>src/assembly/bin.xml</descriptor>\n              <descriptor>src/assembly/src.xml</descriptor>\n              <descriptor>src/assembly/docs.xml</descriptor>\n            </descriptors>\n          </configuration>\n        </execution>\n      </executions>\n    </plugin>\n```", "```java\n<descriptors>\n   <descriptor>src/assembly/bin.xml</descriptor>\n   <descriptor>src/assembly/src.xml</descriptor>\n   <descriptor>src/assembly/docs.xml</descriptor>\n</descriptors>\n```", "```java\n<assembly>\n  <formats>\n    <format>zip</format>\n  </formats>\n```", "```java\n<plugin>\n  <executions>\n    <execution>\n      <configuration>\n        <formats>\n <format>zip</format>\n        </formats>   \n      </configuration>\n    </execution>\n  </executions>\n</plugin>\n```", "```java\n  <includeBaseDirectory>false</includeBaseDirectory>\n```", "```java\n  <fileSets>\n    <fileSet>\n      <directory>target/wso2carbon-core-4.2.0</directory>\n      <outputDirectory>wso2is-${pom.version}</outputDirectory>\n      <excludes>\n        <exclude>**/*.sh</exclude>\n```", "```java\n        <exclude>**/wso2server.bat</exclude>\n        <exclude>**/axis2services/sample01.aar</exclude>\n```", "```java\n        <exclude>**/axis2services/Echo.aar</exclude>\n        <exclude>**/axis2services/Version.aar</exclude>\n        <exclude>**/pom.xml</exclude>\n        <exclude>**/version.txt</exclude>\n        <exclude>**/README*</exclude>\n        <exclude>**/carbon.xml</exclude>\n        <exclude>**/axis2/*</exclude>\n        <exclude>**/LICENSE.txt</exclude>\n        <exclude>**/INSTALL.txt</exclude>\n        <exclude>**/release-notes.html</exclude>\n        <exclude>**/claim-config.xml</exclude>\n        <exclude>**/log4j.properties</exclude>\n        <exclude>**/registry.xml</exclude>\n      </excludes>\n    </fileSet>\n\n    <fileSet>\n      <directory>\n       ../p2-profile-gen/target/wso2carbon-core-4.2.0/repository/conf/identity\n      </directory>\n      <outputDirectory>wso2is-${pom.version}/repository/conf/identity\n      </outputDirectory>\n      <includes>\n        <include>**/*.xml</include>\n      </includes>\n```", "```java\n    </fileSet>\n    <fileSet>\n      <directory>\n      ../p2-profile-gen/target/wso2carbon-core-4.2.0/repository/resources/security/ldif\n      </directory>\n\n      <outputDirectory>wso2is-${pom.version}/repository/resources/security/ldif\n      </outputDirectory>\n      <includes>\n        <include>identityPerson.ldif</include>\n        <include>scimPerson.ldif</include>\n        <include>wso2Person.ldif</include>\n      </includes>\n```", "```java\n    </fileSet>\n\n    <fileSet>\n      <directory>\n      ../p2-profile-gen/target/wso2carbon-core-4.2.0/repository/deployment/server/webapps\n      </directory>\n      <outputDirectory>${pom.artifactId}-${pom.version}/repository/deployment/server/webapps\n      </outputDirectory>\n      <includes>\n        <include>oauth2.war</include>\n      </includes>\n```", "```java\n    </fileSet>\n\n    <fileSet>\n      <directory>\n        ../p2-profile-gen/target/wso2carbon-core-4.2.0/repository/deployment/server/webapps\n      </directory>\n      <outputDirectory>${pom.artifactId}-${pom.version}/repository/deployment/server/webapps\n      </outputDirectory>\n      <includes>\n        <include>authenticationendpoint.war</include>\n      </includes>\n    </fileSet>\n\n    <fileSet>\n      <directory>\n        ../styles/service/src/main/resources/web/styles/css\n      </directory>\n      <outputDirectory>${pom.artifactId}-${pom.version}/resources/allthemes/Default/admin\n      </outputDirectory>\n      <includes>\n        <include>**/**.css</include>\n      </includes>\n```", "```java\n    </fileSet>\n\n    <fileSet>\n      <directory>\n       ../p2-profile-gen/target/WSO2-CARBON-PATCH-4.2.0-0006\n      </directory>\n      <outputDirectory>\n        wso2is-${pom.version}/repository/components/patches/\n      </outputDirectory>\n      <includes>\n        <include>**/patch0006/*.*</include>\n      </includes>\n```", "```java\n    </fileSet>\n  </fileSets>\n\n  <files>\n```", "```java\n    <file>\n      <source>../p2-profile-gen/target/WSO2-CARBON-PATCH-${carbon.kernel.version}-0006/lib/org.wso2.ciphertool-1.0.0-wso2v2.jar\n      </source>\n      <outputDirectory>\n        ${pom.artifactId}-${pom.version}/lib/\n      </outputDirectory>\n      <filtered>true</filtered>\n      <fileMode>644</fileMode>\n    </file>\n  <files>\n</assembly>\n```", "```java\n<descriptors>\n  <descriptor>src/assembly/dist.xml</descriptor>\n</descriptors>\n```", "```java\n<assembly>\n  <formats>\n    <format>zip</format>\n  </formats>\n  <includeBaseDirectory>false</includeBaseDirectory>\n  <fileSets>\n    <!-- Copying p2 profile and osgi bundles-->\n    <fileSet>\n      <directory>\n        ../p2-profile-gen/target/wso2carbon-core-4.2.0/repository/components\n      </directory>\n      <outputDirectory>wso2is-${pom.version}/repository/components\n      </outputDirectory>\n      <excludes>\n        <exclude>**/eclipse.ini</exclude>\n        <exclude>**/*.lock</exclude>\n        <exclude>**/.data</exclude>\n        <exclude>**/.settings</exclude>\n      </excludes>\n    </fileSet>\n  </fileSets>\n  <dependencySets>\n <dependencySet>\n      <outputDirectory>\n         wso2is-${pom.version}/repository/deployment/client/modules\n      </outputDirectory>\n      <includes>\n        <include>org.apache.rampart:rampart:mar</include>\n      </includes>\n </dependencySet>\n  </dependencySets>\n</assembly>\n```", "```java\n<dependency>\n  <groupId>org.apache.rampart</groupId>\n  <artifactId>rampart</artifactId>\n  <type>mar</type>\n  <version>1.6.1-wso2v12</version>\n</dependency>\n```", "```java\n<includes>\n  <include>org.apache.rampart:rampart:mar</include>\n</includes>\n```", "```java\n<includes>\n  <include>\n    org.apache.rampart:rampart:mar:1.6.1-wso2v12\n  </include>\n</includes>\n```", "```java\n<plugin>\n  <groupId>org.apache.maven.plugins</groupId>\n  <artifactId>maven-assembly-plugin</artifactId>\n  <executions>\n    <execution>\n      <id>distribution-package</id>\n      <phase>package</phase>\n      <goals>\n        <goal>single</goal>\n      </goals>\n      <configuration>\n        <finalName>axis2-${project.version}</finalName>\n        <descriptors> \n          <descriptor>\n src/main/assembly/war-assembly.xml\n          </descriptor>\n          <descriptor>\n src/main/assembly/src-assembly.xml\n          </descriptor>\n          <descriptor>\n src/main/assembly/bin-assembly.xml\n          </descriptor>\n        </descriptors>\n      </configuration>\n    </execution>\n  </executions>\n</plugin>\n```", "```java\n<assembly>\n  <id>bin</id>\n  <includeBaseDirectory>true</includeBaseDirectory> \n  <baseDirectory>axis2-${version}</baseDirectory>\n  <formats>\n    <!--<format>tar.gz</format>  \n    //uncomment,if tar.gz archive needed-->\n    <format>zip</format>\n  </formats>\n```", "```java\n  <fileSets>    \n     ………………..\n  </fileSets>\n\n  <dependencySets>\n    <dependencySet>\n      <useProjectArtifact>false</useProjectArtifact>\n\n```", "```java\n      <outputDirectory>lib</outputDirectory>\n      <includes>\n        <include>*:*:jar</include>\n      </includes>\n      <excludes>\n        <exclude>\n org.apache.geronimo.specs:geronimo-activation_1.1_spec:jar\n        </exclude>\n      </excludes>\n    </dependencySet>\n    <dependencySet>\n      <useProjectArtifact>false</useProjectArtifact>\n      <outputDirectory>lib/endorsed</outputDirectory>\n      <includes>\n        <include>javax.xml.bind:jaxb-api:jar</include>\n      </includes>\n    </dependencySet>\n    <dependencySet>\n      <useProjectArtifact>false</useProjectArtifact>\n      <includes>\n        <include>org.apache.axis2:axis2-webapp</include>\n      </includes>\n      <unpack>true</unpack>\n\n```", "```java\n      <outputDirectory>webapp</outputDirectory>\n      <unpackOptions>\n        <includes>\n          <include>WEB-INF/classes/**/*</include>\n          <include>WEB-INF/web.xml</include>\n          <include>axis2-web/**/*</include>\n        </includes>\n      </unpackOptions>\n    </dependencySet>\n  </dependencySets>\n</assembly>\n```", "```java\n<assembly>\n  <id>war</id>\n  <includeBaseDirectory>false</includeBaseDirectory>\n  <formats>\n    <format>zip</format>\n  </formats>\n  <dependencySets>\n    <dependencySet>\n      <useProjectArtifact>false</useProjectArtifact>\n      <includes>\n        <include>org.apache.axis2:axis2-webapp</include>\n      </includes>\n      <outputFileNameMapping>axis2.war</outputFileNameMapping>\n    </dependencySet>\n  </dependencySets>\n  <fileSets>\n    <fileSet>\n      <directory>../..</directory>\n      <outputDirectory></outputDirectory>\n        <includes>\n          <include>LICENSE.txt</include>\n          <include>NOTICE.txt</include>\n          <include>README.txt</include>\n          <include>release-notes.html</include>\n        </includes>\n      <filtered>true</filtered>\n    </fileSet>\n  </fileSets>\n</assembly>\n```", "```java\n<filters>\n  <filter>${basedir}/src/assembly/filter.properties</filter>\n</filters>\n```", "```java\nproduct.name=WSO2 Identity Server \nproduct.key=IS \nproduct.version=5.0.0 \nhotdeployment=true \nhotupdate=true \ndefault.server.role=IdentityServer\n```", "```java\n$ mvn assembly:help -Ddetail=true\n\n```", "```java\n[ERROR] Could not find goal 'help' in plugin org.apache.maven.plugins:maven-assembly-plugin:2.2-beta-2 among available goals assembly, attach-assembly-descriptor, attach-component-descriptor, attached, directory-inline, directory, directory-single, single, unpack -> [Help 1]\n\n```", "```java\n           |-pom.xml\n           |-modules\n             |- json-parser\n                |- src/main/java/com/packt/json/JSONParser.java\n                |- pom.xml\n             |- distribution\n                |- src/main/assembly/dist.xml\n                |- pom.xml\n    ```", "```java\n    package com.packt.json;\n\n    import java.io.File;\n    import java.io.FileReader;\n    import org.json.simple.JSONObject;\n\n    public class JSONParser {\n\n      public static void main(String[] args) {\n\n      FileReader fileReader;\n      JSONObject json;\n\n      org.json.simple.parser.JSONParser parser;\n      parser = new org.json.simple.parser.JSONParser();\n\n        try {\n\n          if (args == null || args.length == 0 || args[0] == null || !new File(args[0]).exists())   \n          {\n            System.out.println(\"No valid JSON file provided\");\n          } else {\n            fileReader = new FileReader(new File(args[0]));\n            json = (JSONObject) parser.parse(fileReader);\n\n            if (json != null) {\n              System.out.println(json.toJSONString());\n            }\n          }\n         } catch (Exception e) {\n          e.printStackTrace();\n         }\n      }\n    }\n    ```", "```java\n    <project>\n\n      <modelVersion>4.0.0</modelVersion>\n      <groupId>com.packt</groupId>\n      <artifactId>json-parser</artifactId>\n      <version>1.0.0</version>\n      <packaging>jar</packaging>\n      <name>PACKT JSON Parser</name>\n\n      <dependencies>\n         <dependency>\n          <groupId>com.googlecode.json-simple\n          </groupId>\n          <artifactId>json-simple</artifactId>\n          <version>1.1</version>\n        </dependency>\n      </dependencies>\n\n    </project>\n    ```", "```java\n    <project>\n      <modelVersion>4.0.0</modelVersion>\n      <groupId>com.packt</groupId>\n      <artifactId>json-parser-dist</artifactId>\n      <version>1.0.0</version>\n      <packaging>jar</packaging>\n      <name>PACKT JSON Parser Distribution</name>\n\n      <dependencies>\n    <!—\n    Under the dependencies section we have to specify all the dependent jars that must be assembled into the final artifact. In this case we have two jar files. The first one is the external dependency that we used to parse the JSON file and the second one includes the class \n    we wrote.\n    -->\n        <dependency>\n          <groupId>com.googlecode.json-simple</groupId>\n          <artifactId>json-simple</artifactId>\n          <version>1.1</version>\n        </dependency>\n        <dependency>\n          <groupId>com.packt</groupId>\n          <artifactId>json-parser</artifactId>\n          <version>1.0.0</version>\n        </dependency>\n      </dependencies>\n\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-assembly-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>distribution-package</id>\n                <phase>package</phase>\n                <goals>\n                  <goal>single</goal>\n                </goals>\n                <configuration>\n                  <finalName>json-parser</finalName>\n                  <descriptors>\n                    <descriptor>\n     src/main/assembly/dist.xml\n                    </descriptor>\n                  </descriptors>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n\n    <!—\n    Even though the maven-jar-plugin is inherited from the super pom, here we have redefined it because we need to add some extra configurations. Since we need to make our final archive executable, we need to define the class to be executable in the jar manifest. Here we have set com.packt.json.JSONParser as our main class. Also – the classpath is set to the lib directory. If you look at the assembly descriptor used in the assembly plugin, you will notice that, the dependent jar files are copied into the lib directory. The manifest configuration in the maven-jar-plugin will result in the following manifest file (META-INF/MANIFEST.MF).\n\n    Manifest-Version: 1.0\n    Archiver-Version: Plexus Archiver\n    Created-By: Apache Maven\n    Built-By: prabath\n    Build-Jdk: 1.6.0_65\n    Main-Class: com.packt.json.JSONParser\n    Class-Path: lib/json-simple-1.1.jar lib/json-parser-\n    1.0.0.jar\n    -->\n\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-jar-plugin</artifactId>\n            <version>2.3.1</version>\n            <configuration>\n              <archive>\n                <manifest>\n     <addClasspath>true</addClasspath>\n     <classpathPrefix>lib/</classpathPrefix>\n     <mainClass>com.packt.json.JSONParser\n     </mainClass>\n                </manifest>\n              </archive>\n            </configuration>\n          </plugin>\n\n        </plugins>\n      </build>\n    </project>\n    ```", "```java\n    <assembly>\n      <id>bin</id>\n      <formats>\n        <format>zip</format>\n      </formats>\n\n      <dependencySets>\n        <dependencySet>\n          <useProjectArtifact>false</useProjectArtifact>\n          <outputDirectory>lib</outputDirectory>\n          <unpack>false</unpack>\n        </dependencySet>\n      </dependencySets>\n\n      <fileSets>\n        <fileSet>\n          <directory>${project.build.directory}</directory>\n          <outputDirectory></outputDirectory>\n          <includes>\n     <include>*.jar</include>\n     </includes>\n        </fileSet>\n      </fileSets>\n    </assembly>\n    ```", "```java\n    <project>\n      <modelVersion>4.0.0</modelVersion>\n      <groupId>com.packt</groupId>\n      <artifactId>json-parser-aggregator</artifactId>\n      <version>1.0.0</version>\n      <packaging>pom</packaging>\n      <name>PACKT JSON Parser Aggregator</name>\n      <modules>\n        <module>modules/json-parser</module>\n        <module>modules/distribution</module>\n      </modules>\n    </project>\n    ```", "```java\n    [INFO] ----------------------------------------------------\n    [INFO] Reactor Summary:\n    [INFO] \n    [INFO] PACKT JSON Parser............... SUCCESS [  1.790 s]\n    [INFO] PACKT JSON Parser Distribution.. SUCCESS [  0.986 s]\n    [INFO] PACKT JSON Parser Aggregator.... SUCCESS [  0.014 s]\n    [INFO] ----------------------------------------------------\n    [INFO] BUILD SUCCESS\n    [INFO] ----------------------------------------------------\n\n    ```", "```java\n    $ java -jar json-parser/json-parser-dist-1.0.0.jar\n\n    ```", "```java\n    $ java -jar json-parser/json-parser-dist-1.0.0.jar myjsonfile.json\n\n    ```", "```java\n    {\n     \"bookName\"  : \"Mastering Maven\", \"publisher\" : \"PACKT\"\n    }\n\n    ```"]