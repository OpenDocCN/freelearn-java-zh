["```java\ndef divide(event, context):\n    params = event.get('queryStringParameters') or {}\n    numerator = int(params.get('numerator', 10))\n    denominator = int(params.get('denominator', 2)) \n    body = { \n        \"message\": \"Results of %s / %s = %s\" % ( \n            numerator, \n            denominator,\n            numerator // denominator,\n        ) \n    } \n\n    response = { \n        \"statusCode\": 200,\n        \"body\": json.dumps(body)\n    } \n\n    return response\n```", "```java\n$ curl \"https://5gj9zthyv1.execute-api.us-west-2.amazonaws.com/dev?numerator=12&denominator=3\"\n{\"message\": \"Results of 12 / 3 = 4\"}\n```", "```java\n$ curl \"https://5gj9zthyv1.execute-api.us-west-2.amazonaws.com/dev?numerator=10&denominator=0\"\n{\"message\": \"Internal server error\"}\n```", "```java\nfrom raven_python_lambda import RavenLambdaWrapper\n\n@RavenLambdaWrapper()\ndef divide(event, context):\n    # Code\n```", "```java\nprovider:\n  name: aws\n  runtime: python3.6\n  region: ${env:AWS_REGION}\n  state: ${env:$ENV}\n  environment:\n    SENTRY_ENVIRONMENT: ${env:ENV}\n    SENTRY_DSN: ${env:SENTRY_DSN}\n```", "```java\nimport rollbar\n\ntoken = os.getenv('ROLLBAR_KEY', 'missing_api_key')\nrollbar.init(token, os.getenv('ENV', 'dev'))\n\n@rollbar.lambda_function\ndef divide(event, context):\n    # code\n```", "```java\nimport structlog\nstructlog.configure(\n        processors=[structlog.processors.JSONRenderer()]\n)\nlog = structlog.get_logger()\n```", "```java\ndef divide(event, context):\n    params = event.get('queryStringParameters') or {}\n    log.msg('start', **params)\n\n    numerator = int(params.get('numerator', 10))\n    denominator = int(params.get('denominator', 2))\n\n    # do division\n\n    log.msg('finish',\n            numerator=numerator,\n            denominator=denominator,\n            quotient=numerator // denominator)\n```", "```java\ndef session_detail(event, context):\n    http_method = event['httpMethod']\n\n    status_code = 200\n    response = {}\n\n    try:\n        response = handle_session_detail(http_method, event)\n    except Http404 as e:\n        status_code = 404\n        response = {'errors': [str(e)]}\n    except Exception as e:\n        status_code = 500\n        response = {'errors': ['Unexpected server error']}\n\n    response = {\n        'statusCode': status_code,\n        'body': json.dumps(response),\n        'headers': CORS_HEADERS,\n    }\n\n    return response \n```", "```java\ndef test_session_detail_hanlder_404(mocker):\n    mock_handler = mocker.patch('handler.handle_session_detail')\n    mock_handler.side_effect = Http404('Test 404 error')\n\n    event = {'httpMethod': 'POST'}\n    response = handler.session_detail(event, None)\n    assert_404(response)\n    body = get_body_from_response(response)\n    assert body == {'errors': ['Test 404 error']}\n    mock_handler.assert_called_once_with('POST', event)\n```", "```java\nprovider:\n  name: aws \n  runtime: python3.6\n  memorySize: 128 \n  region: ${env:AWS_REGION}\n  environment:\n    CUPPING_DB_USERNAME: ${env:CUPPING_DB_USERNAME}\n    CUPPING_DB_PASSWORD: ${env:CUPPING_DB_PASSWORD}\n    CUPPING_DB_NAME: ${env:CUPPING_DB_NAME}\n```", "```java\nsls deploy -s $ENV\n```", "```java\nprovider:\n  name: aws \n  runtime: python3.6\n  region: ${env:AWS_REGION}\n  state: ${env:$ENV}\n  environment:\n    SENTRY_ENVIRONMENT: ${env:ENV}\n    SENTRY_DSN: ${env:SENTRY_DSN}\n    ROLLBAR_KEY: ${env:ROLLBAR_KEY}\n```", "```java\nimport boto3\nimport base64\n\nkey_id = \"arn:aws:kms:us-west-2:9802947738:key/fc5753bd-2842-4ff8-b9a7-61299f4a88c2\"\nclient = boto3.client('kms')\n\ndef encrypt():\n    stuff = client.encrypt(KeyId=key_id, Plaintext='supersecret')\n    binary_encrypted = stuff[u'CiphertextBlob']\n    encrypted_password = base64.b64encode(binary_encrypted)\n    print(\"Encrypted password:\\n\", encrypted_password.decode())\n```", "```java\nEncrypted password:\nAQICAHjgjPISkW/L824chyDIq2L43l5kDvqZM/+/CA8zfz94vQGfycexNX4Jq6mbciymbUh7AAAAaTBnBgkqhkiG9w0BBwagWjBYAgEAMFMGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMymQpnyP3KXAODTaZAgEQgCZ7+oORwCkkT0DUYfILp3Vg1sVGhx0acy1TU2jZAvB54IwrJg6cuA==\n```", "```java\n$ aws kms encrypt --key-id arn:aws:kms:us-west-2:9802947738:key/fc5753bd-2842-4ff8-b9a7-61299f4a88c2 --plaintext supersecret\n{\n \"KeyId\": \"arn:aws:kms:us-west-2:679892560156:key/cc0e82fe-bf27-4362-9bf0-292546c81aa8\", \n \"CiphertextBlob\": \"AQICAHjgjPISkW/L824chyDIq2L43l5kDvqZM/+/CA8zfz94vQEON2GSPC5mwzgXBO1bYb4CAAAAaTBnBgkqhkiG9w0BBwagWjBYAgEAMFMGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMEuLd/v+4Hi4M4U6RAgEQgCY1j2xQQG3kRrrSZ2vq0l2uTuQb4GVJTb7pbVd3AbEV7U2HfWGx9A==\"\n}\n```", "```java\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - KMS:Decrypt\n      Resource: ${env:KMS_KEY_ARN}\n```", "```java\nprint(\"Decrypt the secret password\")\nclient = boto3.client('kms')\nbinary_encrypted = base64.b64decode(os.environ['DB_PASSWORD'])\nresults = client.decrypt(CiphertextBlob=binary_encrypted)\ndb_password = results['Plaintext'].decode()\n```", "```java\nplugins:\n  - serverless-prune-plugin\n```", "```java\ncustom:\n  prune:\n    automatic: true\n    number: 2\n```", "```java\n# sls deploy -s dev \nServerless: Packaging service... \nServerless: Excluding development dependencies... \nServerless: Checking Stack update progress... \n.................... \nServerless: Stack update finished... \nstack: error-handler-dev \napi keys: \n None \nendpoints: \n GET - https://3gz9zt2yv1.execute-api.us-west-2.amazonaws.com/dev \n GET - https://3gz9zt2yv1.execute-api.us-west-2.amazonaws.com/dev/process \nfunctions: \n divide: error-handler-dev-divide \n process: error-handler-dev-process \nServerless: Prune: Running post-deployment pruning \nServerless: Prune: Querying for deployed versions \nServerless: Prune: error-handler-dev-divide has 11 additional versions published and 0 aliases, 9 versions selected for deletion \nServerless: Prune: Deleting error-handler-dev-divide v9... \n.....\nServerless: Prune: Deleting error-handler-dev-divide v1... \nServerless: Prune: error-handler-dev-process has 11 additional versions published and 0 aliases, 9 versions selected for deletion \nServerless: Prune: Deleting error-handler-dev-process v9... \n.....\nServerless: Prune: Deleting error-handler-dev-process v1... \nServerless: Prune: Pruning complete. \nServerless: Removing old service versions...\n```"]