["```java\ncom.packt.masterjbpm6.SequenceTest\n```", "```java\nsequenceflows.bpmn\n```", "```java\ncom.packt.masterjbpm6.gateway.GatewayParallelTest\n```", "```java\ngateway_parallel.bpmn\n```", "```java\nOrder order = new Order();\norder.setNote(\"urgent\");\norder.setCost(110);\n```", "```java\nkcontext.getKnowledgeRuntime().insert(order);\n```", "```java\n  ksession.insert(order);\n  ksession.fireAllRules();\n```", "```java\ncom.packt.masterjbpm6.gateway.GatewayExclusiveTest\n```", "```java\ngateway_exclusive.bpmn\n```", "```java\ncom.packt.masterjbpm6.gateway.GatewayInclusiveTest\n```", "```java\ngateway_inclusive.bpmn\n```", "```java\ncom.packt.masterjbpm6.gateway.GatewayEventAndTaskTest\n```", "```java\ngateway_event_and_task.bpmn\n```", "```java\ncom.packt.masterjbpm6.gateway.GatewayEventTest\n```", "```java\ngateway_event.bpmn\n```", "```java\nProcessInstancestartProcess(String processId, Map<String, Object> parameters);\n```", "```java\n<bpmn2:signal id=\"Signal_1\" name=\"customerPhoneCall\"/>\n<bpmn2:signalEventDefinition id=\"SignalEventDefinition_1\" signalRef=\"Signal_1\"/>\n```", "```java\n<bpmn2:signal id=\"customerPhoneCall\" name=\"customerPhoneCall\"/>\n<bpmn2:signalEventDefinition id=\"_05nSUW_YEeSWR_CUOywjGQ\" signalRef=\"customerPhoneCall\"/>\n```", "```java\ncom.packt.masterjbpm6.event.StartTest (method testSignalStart)\n```", "```java\nstart_signal.bpmn\n```", "```java\ncom.packt.masterjbpm6.event.BoundaryTest (method testBoundaryWithCancel)\n```", "```java\nboundary.bpmn\n```", "```java\nsendSignal(\"Message-messageCancelService\", \"cancelled by ADMIN\");\n```", "```java\nSendMessageTaskHandler messagehandler = new SendMessageTaskHandler();\nmessagehandler.setKnowledgeRuntime(ksession);\nksession.getWorkItemManager().registerWorkItemHandler(\"Send Task\",messagehandler);\n```", "```java\npublic void executeWorkItem(WorkItemworkItem, WorkItemManager manager) {\nksession.signalEvent(\"Message-startmessage\", \"processdata\");\n```", "```java\ncom.packt.masterjbpm6.event.StartTest (method testMessageStartFromMessageThrow)\n```", "```java\nstart_message_catch.bpmn, start_message_throw.bpmn\n```", "```java\ncom.packt.masterjbpm6.event.ErrorTest (method testBoundaryErrors)\n```", "```java\nerrorboundary.bpmn\n```", "```java\nMap<String, Object> params = new HashMap<String, Object>();\n// \"1\" for a runtime exception; \"2\" for a FileNotFoundException\nString trigger = \"1\";\nparams.put(\"triggerexceptionflag\", trigger);\nProcessInstance processInstance = ksession.startProcess(\"errorboundary\", params);\n```", "```java\nString trigger=(String)context.getVariable (\"triggerexceptionflag\");\nif (trigger.equals (\"1\"))\n{\nthrow new RuntimeException(\"a runtime exception\");\n}\nelse\n{\nthrow new FileNotFoundException(\"a filenotfoundexception exception\");\n}\n```", "```java\nThrowable exc=(Throwable )context.getVariable (\"exceptionvar\");\nSystem.out.println(\"log error message:\"+exc.getMessage());\n```", "```java\ncom.packt.masterjbpm6.event.ErrorEndTest (method testSubprocessStartError)\n```", "```java\nerrorsubprocess.bpmn\n```", "```java\ncom.packt.masterjbpm6.event.CompensationTest (method testCompensationEvent)\n```", "```java\ncompensateorder.bpmn\n```", "```java\nksession.signalEvent(\"Compensation\",\n  CompensationScope.IMPLICIT_COMPENSATION_PREFIX\n    + \"compensateorder\", pi.getId());\n```", "```java\n\"implicit:compensateorder\"\n```", "```java\nksession.signalEvent(\"Compensation\", \"_2\", pi.getId());\n```", "```java\n<bpmn2:scriptTask id=\"_2\" name=\"prepare order\" scriptFormat=\"http://www.java.com/java\">\n```", "```java\ncom.packt.masterjbpm6.event.CompensationTest (methods testGlobalCompensationWithSignal and testSpecificCompensationWithSignal respectively).\n```", "```java\ncom.packt.masterjbpm6.event.CompensationTest (method testSubprocessCompensationEndEvent)\n```", "```java\ncompensateendsubprocess.bpmn\n```", "```java\ncom.packt.masterjbpm6.event.ConditionalTest (method testSubprocessStartError)\n```", "```java\nconditional.bpmn\n```", "```java\n[users:mario|groups:]@[60s]@not-started\n```", "```java\ncom.packt.masterjbpm6.activity.TaskTest (testReassign method)\n```", "```java\nreassign.bpmn\n```", "```java\nentityId=email:locale:displayname:[member,member]\n```", "```java\nnino=nino@domain.com:en-UK:nino\n```", "```java\nfrom:mario|tousers:simo|togroups:|replyTo:|subject:warning|body:the task has not been started in 10s !@10s@not-started\n```", "```java\ncom.packt.masterjbpm6.task.TaskTest (methods testDelegateReadyStateAndSkip, testForwardAndSkip, testSuspendAndResume)\n```", "```java\ndelegate_forward.bpmn\n```", "```java\ncom.packt.masterjbpm6.activity.ScriptTaskTest\n```", "```java\nscript.bpmn\n```", "```java\nOrder order=(Order)kcontext.getVariable (\"order\");\norder.setNote (\"order modified\");\n```", "```java\ncom.packt.masterjbpm6.test.ServiceTaskTest\n```", "```java\nservicetask.bpmn\n```", "```java\ncom.packt.masterjbpm6.task.RuleTaskTest\n```", "```java\nrule.bpmn, rule.drl\n```", "```java\nglobal StringBuffer newnote;\nglobal com.packt.masterjbpm6.pizza.model.Order orderglobal;\n\nrule \"checkorder\" ruleflow-group \"masterRuleGroup\"\n    when\n        $o: com.packt.masterjbpm6.pizza.model.Order (cost>100)\n    then\n    {\n      System.out.println (\"checkorder triggered\");\n      String desc=\"big order ! (cost=\"+$o.getCost()+\")\";\n      orderglobal.setNote(\"URGENT\");\n      newnote.append (desc);\n    }\nEnd\n```", "```java\nksession.insert(order);\n```", "```java\nksession.setGlobal(\"orderglobal\", order);\n```", "```java\ncom.packt.masterjbpm6.task.TaskTest (method testSendReceive)\n```", "```java\nsend_receive.bpmn\n```", "```java\nVoid registerWorkItemHandler(String workItemName, WorkItemHandler handler);\n```", "```java\ncom.packt.masterjbpm6.task.AsyncTaskTest\n```", "```java\nasynctaskprocess.bpmn\n```", "```java\n<bpmn2:callActivity drools:waitForCompletion=\"true\" drools:independent=\"true\" name=\"CallActivity\" calledElement=\"callactivitySubprocess\">\n```", "```java\ncom.packt.masterjbpm6.task.CallactivityTaskTest (testIndependentSubprocess method)\n```", "```java\ncallactivity.bpmn (parent process), callactivitySub1.bpmn (subprocess called by the callActivity construct)\n```", "```java\ncom.packt.masterjbpm6.task.CallactivityTaskTest (method testAbortProcess)\n```", "```java\ncallactivityabort.bpmn (parent process), callactivitysubprocessabort.bpmn (subprocess called by the call activity construct)\n```", "```java\nksession.signalEvent(\"report1\", null, processInstance.getId());\n```", "```java\ncom.packt.masterjbpm6.task.AdHocSubprocessTest\n```", "```java\nadhocsubprocess.bpmn\n```", "```java\ncom.packt.masterjbpm6.task.MultiInstanceTest\n```", "```java\nmultiinstance.bpmn\n```", "```java\nList<Pizza> myList = new ArrayList<Pizza>();\nmyList.add(new Pizza(PizzaType.getType(Types.MARGHERITA), \"margherita\"));\nmyList.add(new Pizza(PizzaType.getType(Types.NAPOLI), \"assorreta!\"));\nparams.put(\"list\", myList);\nProcessInstance processInstance = ksession.startProcess(\"multiinstance\", params);\n```", "```java\nSystem.out.println(\"pizza desc \" + item.getDesc());\n```", "```java\ncom.packt.masterjbpm6.task.LaneTest\n```", "```java\nlane.bpmn\n```", "```java\ncom.packt.masterjbpm6.task.DataObjectTest\n```", "```java\ndata-object.bpmn\n```"]