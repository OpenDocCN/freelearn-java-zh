["```java\npublic class LoginFormLayout extends VerticalLayout {\n\n    private TextField username = new PasswordField();\n    private PasswordField password = new PasswordField();\n    private Button logIn = new Button();\n    private CheckBox rememberMe = new CheckBox();\n\n    public LoginFormLayout() {\n        ...\n        addComponents(username, password, logIn, rememberMe);\n    }\n    ...\n}\n```", "```java\npublic class LoginFormFactory {\n\n    public static Component getComponent() {\n\n        ... create and configure all required components\n\n        return new VerticalLayout(\n                username, password, button, rememberMe);\n    }\n}\n```", "```java\npublic class LoginFormComponent extends Composite {\n\n    public LoginFormComponent() {\n\n        ... create and configure all required components\n\n        VerticalLayout layout = new VerticalLayout(\n                username, password, button, rememberMe);\n\n        setCompositionRoot(layout);\n    }\n\n    ... getters and setters\n}\n```", "```java\nLoginForm loginForm = new LoginForm()\nloginForm.addLoginListener(e ->  {\n    String password = e.getLoginParameter(\"password\");\n    String username = e.getLoginParameter(\"username\");\n    ...\n});\n```", "```java\nLoginForm loginForm = new LoginForm() {\n    @Override\n    protected Component createContent(TextField username,\n            PasswordField password, Button loginButton) {\n\n        CheckBox rememberMe = new CheckBox();\n        rememberMe.setCaption(\"Remember me\");\n\n        return new VerticalLayout(username, password, loginButton,\n                rememberMe);\n    }\n};\n```", "```java\npublic class LoginFormComponent extends Composite {\n\n    private TextField username;\n    private PasswordField password;\n    private CheckBox rememberMe = new CheckBox();\n\n    public LoginFormComponent() {\n        LoginForm loginForm = new LoginForm() {\n            @Override\n            protected Component createContent(TextField username,\n                    PasswordField password, Button loginButton) {\n                LoginFormComponent.this.username = userNameField;\n                LoginFormComponent.this.password = passwordField;\n\n                rememberMe.setCaption(\"Remember me\");\n\n                return new VerticalLayout(username,password,\n                        loginButton, rememberMe);\n            }\n        };\n\n        setCompositionRoot(loginForm);\n    }\n}\n```", "```java\npublic class LoginFormComponent extends Composite {\n\n    public interface LoginListener {\n        void logInClicked(LoginFormComponent loginForm);\n    }\n    ...\n\n    private LoginListener loginListener;\n\n    public LoginFormComponent(LoginListener loginListener) {\n        this();\n        this.loginListener = loginListener;\n    }\n\n    public LoginFormComponent() {\n        ...\n\n        loginForm.addLoginListener(this::logInClicked);\n        ...\n    }\n\n    public void setLoginListener(LoginListener loginListener) {\n        this.loginListener = loginListener;\n    }\n\n    private void logInClicked(LoginForm.LoginEvent loginEvent) {\n        if (loginListener != null) {\n            loginListener.logInClicked(this);\n        }\n    }\n}\n```", "```java\npublic class LoginFormComponent extends Composite {\n    ...\n\n    public String getUsername() {\n        return username.getValue();\n    }\n\n    public String getPassword() {\n        return password.getValue();\n    }\n\n    public boolean isRememberMe() {\n        return rememberMe.getValue();\n    }\n}\n```", "```java\npublic class LoginFormComponent extends Composite {\n    ...\n\n    private String usernameCaption = \"Username\";\n    private String passwordCaption = \"Password\";\n    private String loginButtonCaption = \"Log in\";\n    private String rememberMeCaption = \"Remember me\";\n\n    public LoginFormComponent() {\n        LoginForm loginForm = new LoginForm() {\n            @Override\n            protected Component createContent(...) {\n                username.setPlaceholder(usernameCaption);\n                password.setPlaceholder(passwordCaption);\n                loginButton.setCaption(loginButtonCaption);\n                rememberMe.setCaption(rememberMeCaption);\n                ... \n           }\n        };\n\n        ...\n    }\n\n    public void setUsernameCaption(String usernameCaption) {\n        this.usernameCaption = usernameCaption;\n    }\n\n    ... similar setters for password, login, and remember me ...\n} \n```", "```java\npublic class Messages { \n\n    private static final TreeSet<String> baseNames = \n            new TreeSet<>(); \n\n    public static void addBundle(String baseName) { \n        baseNames.add(baseName); \n    } \n\n    public static String get(String key) { \n        return baseNames.stream() \n                .map(baseName -> ResourceBundle.getBundle( \n                        baseName, UI.getCurrent().getLocale())) \n                .filter(bundle -> bundle.containsKey(key)) \n                .map(bundle -> bundle.getString(key)) \n                .findFirst().get(); \n    } \n\n} \n```", "```java\nauth.username=Username\nauth.password=Password\nauth.login=Login\nauth.rememberMe=Remember me\nauth.logout=Logout\nauth.bad.credentials=Wrong username or password\n```", "```java\nauth.username=Usuario\nauth.password=Contrase\\u00f1a\nauth.login=Acceder\nauth.rememberMe=Recordarme\nauth.logout=Salir\nauth.bad.credentials=Usuario o contrase√±a incorrectos\n```", "```java\nloginForm.setCaptions( \n        Messages.get(\"auth.username\"), \n        Messages.get(\"auth.password\"), \n        Messages.get(\"auth.login\"), \n        Messages.get(\"auth.rememberMe\")); \n```", "```java\nstatic {\n    Messages.addBundle(\"messages\");\n}\n```"]