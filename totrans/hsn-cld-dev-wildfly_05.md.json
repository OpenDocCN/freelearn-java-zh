["```java\n(...)\n\n    <dependencyManagement>\n        <dependencies>\n <!-- 1 -->\n <dependency>\n                <groupId>org.jboss.arquillian</groupId>\n                <artifactId>arquillian-bom</artifactId>\n                <version>${version.arquillian}</version>\n                <type>pom</type>\n                <scope>import</scope> </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.wildfly.swarm</groupId>\n            <artifactId>jaxrs</artifactId>\n            <version>${version.wildfly.swarm}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.wildfly.swarm</groupId>\n            <artifactId>cdi</artifactId>\n            <version>${version.wildfly.swarm}</version>\n        </dependency>\n <!-- 2 -->\n <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>${version.junit}</version>\n            <scope>test</scope> </dependency>\n        <!-- 3 -->\n <dependency>\n            <groupId>org.jboss.arquillian.junit</groupId>\n            <artifactId>arquillian-junit-container</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <!-- 4 -->\n        <dependency>\n            <groupId>org.wildfly.swarm</groupId>\n            <artifactId>arquillian</artifactId>\n            <version>${version.wildfly.swarm}</version>\n            <scope>test</scope> </dependency>\n\n    </dependencies>\n\n(...)\n\n</project>\n```", "```java\npackage org.packt.swarm.petstore.catalog;\n\nimport org.packt.swarm.petstore.catalog.model.Item;\n\nimport javax.enterprise.context.ApplicationScoped;\nimport java.util.HashMap;\nimport java.util.Map;\n\n@ApplicationScoped\npublic class CatalogService {\n\n    private Map<String, Item> catalog = new HashMap<>();\n\n    public CatalogService(){\n        Item turtle = new Item();\n        turtle.setItemId(\"turtle\");\n        turtle.setName(\"turtle\");\n        turtle.setQuantity(5);\n        turtle.setDescription(\"Slow, friendly reptile. Let your busy self see how it spends 100 years of his life laying on sand and swimming.\");\n        catalog.put(\"turtle\", turtle);\n    }\n\n    public Item searchById(String itemId){\n        return catalog.get(itemId);\n    }\n\n}\n```", "```java\npackage org.packt.swarm.petstore.catalog;\n\nimport org.jboss.arquillian.container.test.api.Deployment;\nimport org.jboss.arquillian.junit.Arquillian;\nimport org.jboss.shrinkwrap.api.ShrinkWrap;\nimport org.jboss.shrinkwrap.api.asset.EmptyAsset;\nimport org.jboss.shrinkwrap.api.spec.JavaArchive;\nimport org.junit.Assert;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.packt.swarm.petstore.catalog.model.Item;\n\nimport javax.inject.Inject;\n\n//1\n@RunWith(Arquillian.class)\npublic class CatalogServiceTest {\n\n //2\n    @Deployment\n    public static JavaArchive createDeployment() {\n return ShrinkWrap.create(JavaArchive.class)\n .addClasses(Item.class,CatalogService.class)\n .addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\");\n    }\n\n //3\n    @Inject\n    CatalogService catalogService; \n //4\n    @Test\n    public void testSearchById() {\n Assert.assertEquals(catalogService.searchById(\"turtle\").getName(),\"turtle\");\n    }\n}\n```", "```java\nmvn clean wildfly-swarm:run\n```", "```java\npackage org.packt.swarm.petstore.catalog;\n\nimport org.jboss.arquillian.junit.Arquillian;\nimport org.junit.Assert;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.wildfly.swarm.arquillian.DefaultDeployment;\n\nimport javax.inject.Inject;\n\n@RunWith(Arquillian.class)\n//1 @DefaultDeployment\npublic class CatalogServiceTest {\n\n    @Inject\n    CatalogService catalogService;\n\n    @Test\n    public void testSearchById() {\n        Assert.assertEquals(catalogService.searchById(\"turtle\").getName(),\"turtle\");\n    }\n}\n```", "```java\npackage org.packt.swarm.petstore.catalog;\n\nimport org.jboss.arquillian.container.test.api.Deployment;\nimport org.jboss.arquillian.junit.Arquillian;\nimport org.jboss.shrinkwrap.api.ShrinkWrap;\nimport org.jboss.shrinkwrap.api.asset.EmptyAsset;\nimport org.jboss.shrinkwrap.api.spec.JavaArchive;\nimport org.junit.Assert;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.packt.swarm.petstore.catalog.model.Item;\nimport org.wildfly.swarm.Swarm;\nimport org.wildfly.swarm.arquillian.CreateSwarm;\n\nimport javax.inject.Inject;\nimport java.net.URL;\n\n//1\n@RunWith(Arquillian.class)\npublic class CatalogServiceTest {\n\n    @Deployment\n    public static JavaArchive createDeployment() {\n        return ShrinkWrap.create(JavaArchive.class)\n                .addClasses(Item.class, CatalogService.class)\n //1\n .addAsResource(\"datasources.yml\")\n .addAsResource(\"META-INF/persistence.xml\")\n .addAsResource(\"META-INF/load.sql\")\n                .addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\");\n    }\n\n //2\n    @CreateSwarm\n    public static Swarm createSwarm() throws Exception {\n Swarm swarm = new Swarm();\n        //3\n        ClassLoader cl = CatalogServiceTest.class.getClassLoader();\n        URL dataSourcesConfig = cl.getResource(\"datasources.yml\");\n        //4\n        swarm.withConfig(dataSourcesConfig);\n        return swarm;\n    }\n\n    //4\n    @Inject\n    CatalogService catalogService;\n\n    //5\n    @Test\n    public void testSearchById() {\n        Assert.assertEquals(catalogService.searchById(\"turtle\").getName(),\"turtle\");\n    }\n}\n```", "```java\n(...)\n\n    <dependencies>\n    (...)\n        <dependency>\n            <groupId>org.wildfly.swarm</groupId>\n            <artifactId>arquillian</artifactId>\n            <version>${version.wildfly.swarm}</version>\n            <scope>test</scope>\n        </dependency>\n\n <!-- 1 -->\n <dependency>\n            <groupId>org.jboss.resteasy</groupId>\n            <artifactId>resteasy-client</artifactId>\n            <version>${resteasy.version}</version>\n            <scope>test</scope> </dependency>\n\n <!-- 2 -->\n <dependency>\n            <groupId>org.jboss.resteasy</groupId>\n            <artifactId>resteasy-jackson-provider</artifactId>\n            <version>${resteasy.version}</version>\n            <scope>test</scope> </dependency>\n\n    </dependencies>\n(...)\n```", "```java\npackage org.packt.swarm.petstore.catalog;\n\nimport org.jboss.arquillian.container.test.api.Deployment;\nimport org.jboss.arquillian.container.test.api.RunAsClient;\nimport org.jboss.arquillian.junit.Arquillian;\nimport org.jboss.arquillian.test.api.ArquillianResource;\nimport org.jboss.shrinkwrap.api.ShrinkWrap;\nimport org.jboss.shrinkwrap.api.asset.EmptyAsset;\nimport org.jboss.shrinkwrap.api.spec.WebArchive;\nimport org.junit.Assert;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.packt.swarm.petstore.catalog.model.Item;\nimport org.wildfly.swarm.Swarm;\nimport org.wildfly.swarm.arquillian.CreateSwarm;\n\nimport javax.ws.rs.client.Client;\nimport javax.ws.rs.client.ClientBuilder;\nimport javax.ws.rs.client.WebTarget;\nimport java.net.URL;\n\n@RunWith(Arquillian.class)\npublic class CatalogServiceTest {\n\n    @Deployment\n    public static WebArchive createDeployment() {\n        return ShrinkWrap.create(WebArchive.class)\n //1\n .addClasses(Item.class, CatalogService.class, CatalogResource.class, CatalogApplication.class)\n                .addAsResource(\"datasources.yml\")\n                .addAsResource(\"META-INF/persistence.xml\")\n                .addAsResource(\"META-INF/load.sql\")\n                .addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\");\n    }\n\n    @CreateSwarm\n    public static Swarm createSwarm() throws Exception {\n        Swarm swarm = new Swarm();\n        ClassLoader cl = CatalogServiceTest.class.getClassLoader();\n        URL dataSourcesConfig = cl.getResource(\"datasources.yml\");\n        swarm.withConfig(dataSourcesConfig);\n        return swarm;\n    }\n\n //2\n    private static Client client;\n\n //3\n    @BeforeClass\n    public static void setUpClient() {\n client = ClientBuilder.newClient();\n    }\n\n //4\n    @ArquillianResource\n    private URL url;\n\n //5\n    private Item testEndpoint(String itemId) {\n WebTarget target = client.target(url + \"item/\"+itemId);\n        return target.request(\"application/json\").get(Item.class);\n    }\n\n    @Test\n //6 @RunAsClient\n    public void testSearchById() {\n //7\n Assert.assertEquals(testEndpoint(\"turtle\").getName(),\"turtle\");\n        Assert.assertEquals(testEndpoint(\"hamster\").getName(),\"hamster\");\n    }\n}\n```"]