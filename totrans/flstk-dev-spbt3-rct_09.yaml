- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Setting Up the Environment and Tools – Frontend
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置环境和工具 – 前端
- en: This chapter describes the development environment and tools that are needed
    for React so that you can start frontend development. In this chapter, we will
    create a simple starter React app by using the Vite frontend tooling.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章描述了开发 React 所需的开发环境和工具，以便您可以开始前端开发。在本章中，我们将使用 Vite 前端工具创建一个简单的入门级 React 应用。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主题：
- en: Installing Node.js
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Node.js
- en: Installing Visual Studio Code
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Visual Studio Code
- en: Creating and running a React app
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和运行一个 React 应用
- en: Debugging a React app
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试 React 应用
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The following GitHub link will be required: [https://github.com/PacktPublishing/Full-Stack-Development-with-Spring-Boot-3-and-React-Fourth-Edition/tree/main/Chapter07](https://github.com/PacktPublishing/Full-Stack-Development-with-Spring-Boot-3-and-React-Fourth-Edition/tree/main/Chapter07).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的 GitHub 链接将是必需的：[https://github.com/PacktPublishing/Full-Stack-Development-with-Spring-Boot-3-and-React-Fourth-Edition/tree/main/Chapter07](https://github.com/PacktPublishing/Full-Stack-Development-with-Spring-Boot-3-and-React-Fourth-Edition/tree/main/Chapter07)。
- en: Installing Node.js
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Node.js
- en: '**Node.js** is an open-source, JavaScript-based, server-side environment. It
    is available for multiple operating systems, such as Windows, macOS, and Linux,
    and is required to develop React apps.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**Node.js** 是一个开源的、基于 JavaScript 的服务器端环境。它适用于多个操作系统，如 Windows、macOS 和 Linux，并且是开发
    React 应用所必需的。'
- en: The Node.js installation package can be found at [https://nodejs.org/en/download/](https://nodejs.org/en/download/).
    Download the latest **Long-Term Support** (**LTS**) version for your operating
    system. In this book, we are using the Windows 10 operating system, and you can
    get the Node.js MSI installer for it, which makes installation really straightforward.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js 安装包可以在 [https://nodejs.org/en/download/](https://nodejs.org/en/download/)
    找到。为您的操作系统下载最新的 **长期支持** (**LTS**) 版本。在本书中，我们使用的是 Windows 10 操作系统，您可以获取适用于它的 Node.js
    MSI 安装程序，这使得安装变得非常简单。
- en: 'When you execute the installer, you will go through the installation wizard,
    and you can do so using the default settings:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行安装程序时，您将进入安装向导，您可以使用默认设置进行操作：
- en: '![](img/B19818_07_01.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B19818_07_01.png)'
- en: 'Figure 7.1: Node.js installation'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1：Node.js 安装
- en: 'Once the installation is complete, we can check that everything proceeded correctly.
    Open PowerShell, or whatever terminal you are using, and type the following commands:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，我们可以检查一切是否按预期进行。打开 PowerShell 或您正在使用的任何终端，并输入以下命令：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'These commands should show you the installed versions of Node.js and `npm`:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令应显示已安装的 Node.js 和 `npm` 版本：
- en: '![](img/B19818_07_02.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B19818_07_02.png)'
- en: 'Figure 7.2: Node.js and npm versions'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2：Node.js 和 npm 版本
- en: '`npm` comes with the Node.js installation and is a package manager for JavaScript.
    We will use this a lot in the following chapters when we install different Node.js
    modules in our React app.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`npm` 随 Node.js 安装而来，是 JavaScript 的包管理器。在接下来的章节中，当我们为 React 应用安装不同的 Node.js
    模块时，我们会大量使用它。'
- en: There is another package manager called **Yarn** that you can use as well, but
    we will use `npm` because it comes with the Node.js installation. Yarn has some
    advantages, such as better overall performance due to its caching mechanism.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个名为 **Yarn** 的包管理器，您也可以使用，但我们将使用 `npm`，因为它随 Node.js 安装而来。Yarn 有一些优点，例如由于其缓存机制而具有更好的整体性能。
- en: Next, we will install a code editor.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将安装一个代码编辑器。
- en: Installing Visual Studio Code
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Visual Studio Code
- en: '**Visual Studio Code** (**VS Code**) is an open-source code editor for multiple
    programming languages. It was developed by Microsoft. There are many different
    code editors available, such as Atom and Sublime, and you can use something other
    than VS Code if you are familiar with it.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Visual Studio Code** (**VS Code**) 是一个开源的多语言代码编辑器。它由微软开发。有许多不同的代码编辑器可供选择，例如
    Atom 和 Sublime，如果您熟悉其他编辑器，您可以使用其他编辑器。'
- en: Eclipse, which we used for backend development, is optimized for Java development.
    VS Code can also be used for Java and Spring Boot development, so it is possible
    to use only one editor for both backend and frontend development if you prefer.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用于后端开发的 Eclipse，针对 Java 开发进行了优化。VS Code 也可以用于 Java 和 Spring Boot 开发，因此如果您愿意，可以使用一个编辑器同时进行后端和前端开发。
- en: VS Code is available for Windows, macOS, and Linux, and you can download it
    from [https://code.visualstudio.com/](https://code.visualstudio.com/). Installation
    for Windows is done with the MSI installer, and you can execute the installation
    with default settings.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code 可用于 Windows、macOS 和 Linux，您可以从 [https://code.visualstudio.com/](https://code.visualstudio.com/)
    下载它。Windows 的安装使用 MSI 安装程序完成，并且您可以使用默认设置执行安装。
- en: 'The following screenshot shows the workbench for VS Code. On the left-hand
    side is the activity bar, which you can use to navigate between different views.
    Next to the activity bar is a sidebar that contains different views, such as the
    project file explorer. The editor takes up the rest of the workbench:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了 VS Code 的工作台。在左侧是活动栏，您可以使用它在不同视图之间导航。活动栏旁边是一个侧边栏，其中包含不同的视图，例如项目文件资源管理器。编辑器占据了工作台的大部分空间：
- en: '![Figure 6.3 – VS Code workbench ](img/B19818_07_03.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3 – VS Code 工作台](img/B19818_07_03.png)'
- en: 'Figure 7.3: VS Code workbench'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3：VS Code 工作台
- en: VS Code provides an integrated terminal that you can use to create and run React
    apps. The terminal can be found in the **View | Terminal** menu. You can use this
    in later chapters when we create more React apps.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code 提供了一个集成的终端，您可以使用它创建和运行 React 应用程序。终端可以在 **视图 | 终端** 菜单中找到。您可以在后面的章节中创建更多
    React 应用程序时使用它。
- en: VS Code extensions
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VS Code 扩展
- en: There are a lot of extensions available for different programming languages
    and frameworks. If you open **Extensions** from the activity bar, you can search
    for different ones.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 可用于不同编程语言和框架的扩展有很多。如果您从活动栏打开 **扩展**，您可以搜索不同的扩展。
- en: One really useful extension for React development is **Reactjs code snippets**,
    which we recommend installing. It has multiple code snippets available for React.js
    apps, which makes the development process faster. VS Code code snippet extensions
    can significantly enhance your workflow by saving time, promoting consistency,
    and reducing errors.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一个对 React 开发非常有用的扩展是 **Reactjs 代码片段**，我们推荐您安装。它为 React.js 应用程序提供了多个代码片段，这使得开发过程更快。VS
    Code 代码片段扩展可以通过节省时间、提高一致性和减少错误来显著提高您的效率。
- en: 'The following screenshot shows the Reactjs code snippets installation page:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了 Reactjs 代码片段的安装页面：
- en: '![](img/B19818_07_04.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19818_07_04.png)'
- en: 'Figure 7.4: React js code snippets'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4：React js 代码片段
- en: 'The **ESLint** extension helps you find typos and syntax errors quickly and
    makes formatting source code easier:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**ESLint** 扩展帮助您快速查找拼写错误和语法错误，并使格式化源代码变得更容易：'
- en: '![](img/B19818_07_05.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19818_07_05.png)'
- en: 'Figure 7.5: ESLint extension'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.5：ESLint 扩展
- en: ESLint ([https://eslint.org/](https://eslint.org/)) is an open-source linter
    for JavaScript, and it helps you to find and fix problems in your source code.
    ESLint can highlight errors and warnings directly within the VS Code editor to
    help you identify and fix issues as you write code. Errors and warnings are shown
    in red or yellow underlines, and if you hover over these lines, you can see information
    about the specific error or warning. VS Code also provides a **Problems** panel
    that shows all ESLint errors and warnings. ESLint is flexible, and it can be configured
    using the `.eslintrc` file. You can define which rules are enabled and at what
    error level.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: ESLint ([https://eslint.org/](https://eslint.org/)) 是一个开源的 JavaScript 代码检查工具，它帮助您在源代码中查找和修复问题。ESLint
    可以在 VS Code 编辑器中直接突出显示错误和警告，帮助您在编写代码时识别和修复问题。错误和警告以红色或黄色下划线显示，并且当您将鼠标悬停在这些行上时，您可以看到有关特定错误或警告的信息。VS
    Code 还提供了一个 **问题** 面板，显示所有 ESLint 错误和警告。ESLint 是灵活的，并且可以使用 `.eslintrc` 文件进行配置。您可以定义哪些规则被启用以及错误级别。
- en: '**Prettier** is a code formatter. With the Prettier extension, you can get
    automatic code formatting:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**Prettier** 是一个代码格式化工具。使用 Prettier 扩展，您可以获得自动代码格式化：'
- en: '![](img/B19818_07_06.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19818_07_06.png)'
- en: 'Figure 7.6: Prettier extension'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.6：Prettier 扩展
- en: You can set it in VS Code so that code is formatted automatically after you
    save it, by going to **Settings** from the **File | Preferences** menu and then
    searching for **Format On Save**.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 VS Code 中设置它，以便在保存后自动格式化代码，方法是转到 **文件 | 首选项** 菜单中的 **设置**，然后搜索 **保存时格式化**。
- en: These are just a few examples of the great extensions you can get for VS Code.
    We recommend you install all of them and test them out yourself.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是您可以为 VS Code 获取的众多优秀扩展的几个示例。我们建议您安装所有这些扩展并亲自测试它们。
- en: In the next section, we will create our first React app and learn how to run
    and modify it.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将创建我们的第一个 React 应用程序，并学习如何运行和修改它。
- en: Creating and running a React app
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和运行 React 应用程序
- en: Now that we have Node.js and our code editor installed, we are ready to create
    our first React.js app. We will use the **Vite** frontend tool ([https://vitejs.dev/](https://vitejs.dev/))
    for this. There are excellent React frameworks available, like Next.js or Remix,
    that can be used as well, but Vite is a good option to learn React basics. Vite
    provides a really fast development server, and you don’t have to do any complex
    configuration to start coding.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了Node.js和我们的代码编辑器，我们准备好创建我们的第一个React.js应用了。我们将使用**Vite**前端工具（[https://vitejs.dev/](https://vitejs.dev/)）来完成这项工作。有很好的React框架可用，如Next.js或Remix，也可以使用，但Vite是学习React基础知识的好选择。Vite提供了一个非常快的开发服务器，您不需要进行任何复杂的配置就可以开始编码。
- en: In the past, **Create React App** (**CRA**) was the most popular tool for creating
    React projects, but its usage has decreased, and it is no longer recommended by
    official documentation. Vite offers many advantages over CRA (such as its faster
    development server).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，**Create React App**（**CRA**）是创建React项目的最流行工具，但其使用量已下降，并且官方文档不再推荐使用它。Vite相对于CRA提供了许多优势（例如其更快的开发服务器）。
- en: We are using Vite version 4.3 in this book. You should verify the commands against
    the Vite documentation if you are using some other version. Also, check the Node.js
    version requirements, and upgrade your Node.js installation if your package manager
    warns you about it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用Vite版本4.3。如果您使用的是其他版本，请根据Vite文档验证命令。此外，检查Node.js版本要求，并在包管理器警告您的情况下升级您的Node.js安装。
- en: 'Here are the steps you need to follow to make your first React project using
    Vite:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您需要遵循的步骤，以使用Vite创建您的第一个React项目：
- en: Open PowerShell, or another terminal that you are using, and move to a folder
    where you want to create your project.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开PowerShell或您正在使用的另一个终端，并将文件夹移动到您想要创建项目的地方。
- en: 'Type the following `npm` command, which uses the latest version of Vite:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下`npm`命令，它使用Vite的最新版本：
- en: '[PRE1]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To use the same Vite major version that we are using in this book, you can
    also specify the Vite version in the command:'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使用本书中使用的相同的Vite主版本，您也可以在命令中指定Vite版本：
- en: '[PRE2]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The command starts the project creation wizard. If this is the first time you
    are creating a Vite project, you will get a message prompting you to install the
    `create-vite` package. Press *y* to proceed.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 命令启动项目创建向导。如果您是第一次创建Vite项目，您将收到一条消息，提示您安装`create-vite`包。按*y*继续。
- en: 'In the first phase, type your project name – in this case, `myapp`:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一阶段，输入您的项目名称——在本例中为`myapp`：
- en: '![](img/B19818_07_07.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19818_07_07.png)'
- en: 'Figure 7.7: Project name'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7：项目名称
- en: 'Then, you will select a **framework**. In this phase, select the **React**
    framework. Note that Vite isn’t tied to React and can be used to bootstrap projects
    in lots of different frontend frameworks:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您将选择一个**框架**。在这个阶段，选择**React**框架。请注意，Vite并不局限于React，也可以用于启动许多不同的前端框架：
- en: '![](img/B19818_07_08.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19818_07_08.png)'
- en: 'Figure 7.8: Framework selection'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8：框架选择
- en: 'In the final step, you will select a **variant**. We’ll first learn the basics
    of React with JavaScript and later move on to TypeScript. So, in this phase, we
    will select **JavaScript**:![](img/B19818_07_09.png)Figure 7.9: Project variant'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最后一步，您将选择一个**变体**。我们首先将学习使用JavaScript的React基础知识，然后转向TypeScript。因此，在这个阶段，我们将选择**JavaScript**：![](img/B19818_07_09.png)图7.9：项目变体
- en: '**SWC** (**Speedy Web Compiler**) is a fast JavaScript and TypeScript compiler
    written in Rust. It is a faster alternative to Babel, which is normally used.'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**SWC**（**快速Web编译器**）是一个用Rust编写的快速JavaScript和TypeScript编译器。它是一个比通常使用的Babel更快的替代品。'
- en: 'Once the app has been created, move into your app folder:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦创建了应用，请进入您的应用文件夹：
- en: '[PRE3]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, install dependencies using the following command:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用以下命令安装依赖项：
- en: '[PRE4]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Finally, run your app using the following command, which starts the app in
    development mode:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用以下命令运行您的应用，该命令以开发模式启动应用：
- en: '[PRE5]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, you should see the following message in your terminal:'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，您应该在终端中看到以下消息：
- en: '![](img/B19818_07_10.png)'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/B19818_07_10.png)'
- en: 'Figure 7.10: Run your project'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.10：运行您的项目
- en: 'Open your browser and navigate to the URL that is shown in your terminal after
    the **Local:** text (in the example, it is `http://localhost:5173/`, but it might
    be different in your case):'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的浏览器，导航到终端中显示的**Local:**文本后面的URL（在示例中为`http://localhost:5173/`，但您的可能不同）：
- en: '![](img/B19818_07_11.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19818_07_11.png)'
- en: 'Figure 7.11: React app'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.11：React应用
- en: You can stop the development server by pressing *q* in your terminal.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过在终端中按*q*来停止开发服务器。
- en: To build a minified version of your app for production, you can use the `npm
    run build` command, which builds your app in the build folder. We will look more
    closely at deployment in *Chapter 17*, *Deploying Your Application*.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要为生产环境构建您应用的压缩版本，您可以使用`npm run build`命令，该命令将在构建文件夹中构建您的应用。我们将在第 17 章 *部署您的应用*
    中更详细地讨论部署。
- en: Modifying a React app
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改 React 应用
- en: 'Now, we will learn how to modify the React app that we created using Vite.
    We will use VS Code, which we installed earlier:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将学习如何使用 Vite 创建的 React 应用进行修改。我们将使用之前安装的 VS Code：
- en: Open your React project folder with VS Code by selecting **File | Open folder**.
    You should see the app’s structure in the file explorer. The most important folder
    in this phase is the `src` folder, which contains the JavaScript source code:![](img/B19818_07_12.png)
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 VS Code 通过选择 **文件 | 打开文件夹** 来打开您的 React 项目文件夹。您应该在文件资源管理器中看到应用的架构。在这个阶段，最重要的文件夹是
    `src` 文件夹，其中包含 JavaScript 源代码：![](img/B19818_07_12.png)
- en: 'Figure 7.12: Project structure'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.12：项目结构
- en: You can also open VS Code by typing the `code .` command into the terminal.
    This command opens VS Code and the folder where you are located.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以通过在终端中输入`code .`命令来打开 VS Code。此命令将打开 VS Code 以及您所在的文件夹。
- en: 'Open the `App.jsx` file from the `src` folder in the code editor. Modify the
    text inside the `<h1>` element to `Hello React` and save the file. You don’t need
    to know anything else about this file at the moment. We will go deeper into this
    topic in *Chapter 8*, *Getting Started with React*:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码编辑器中打开 `src` 文件夹中的 `App.jsx` 文件。将 `<h1>` 元素内的文本修改为 `Hello React` 并保存文件。您目前不需要了解此文件的其他内容。我们将在第
    8 章 *React 入门* 中更深入地探讨此主题：
- en: '![](img/B19818_07_13.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19818_07_13.png)'
- en: 'Figure 7.13: App.js code'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.13：App.js 代码
- en: 'Now, if you look at the browser, you should immediately see that the header
    text has changed. Vite provides the **Hot Module Replacement** (**HMR**) feature,
    which updates a React component automatically when you modify its source code
    or styles in your React project, without the need for manual page refreshing:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果您查看浏览器，应该会立即看到标题文本已更改。Vite 提供了 **热模块替换** (**HMR**) 功能，当您在 React 项目中修改其源代码或样式时，它会自动更新
    React 组件，无需手动刷新页面：
- en: '![](img/B19818_07_14.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19818_07_14.png)'
- en: 'Figure 7.14: Modified React app'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.14：修改后的 React 应用
- en: Debugging a React app
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试 React 应用
- en: To debug React apps, we should also install **React Developer Tools**, which
    is available for Chrome, Firefox, and Edge browsers. Chrome plugins can be installed
    from the Chrome Web Store ([https://chrome.google.com/webstore/category/extensions](https://chrome.google.com/webstore/category/extensions)),
    while Firefox add-ons can be installed from the Firefox add-ons site ([https://addons.mozilla.org](https://addons.mozilla.org)).
    After you have installed React Developer Tools, you should see a new **Components**
    tab in your browser’s developer tools once you navigate to your React app.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了调试 React 应用，我们还应该安装 **React 开发者工具**，它适用于 Chrome、Firefox 和 Edge 浏览器。Chrome
    插件可以从 Chrome 网上应用店安装（[https://chrome.google.com/webstore/category/extensions](https://chrome.google.com/webstore/category/extensions)），而
    Firefox 扩展插件可以从 Firefox 扩展网站安装（[https://addons.mozilla.org](https://addons.mozilla.org)）。安装
    React 开发者工具后，当您导航到您的 React 应用时，您应该在浏览器开发者工具中看到一个新的 **组件** 选项卡。
- en: 'You can open the developer tools by pressing *Ctrl* + *Shift* + *I* (or *F12*)
    in the Chrome browser. The following screenshot shows the developer tools in the
    browser. The **Components** tab shows a visual representation of the React component
    tree, and you can use the search bar to find components. If you select a component
    in the component tree, you will see more specific information about it in the
    right-hand panel:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在 Chrome 浏览器中按 *Ctrl* + *Shift* + *I*（或 *F12*）来打开开发者工具。以下截图显示了浏览器中的开发者工具。**组件**选项卡显示了
    React 组件树的视觉表示，您可以使用搜索栏来查找组件。如果您在组件树中选择一个组件，您将在右侧面板中看到更多关于它的具体信息：
- en: '![](img/B19818_07_15.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19818_07_15.png)'
- en: 'Figure 7.15: React Developer Tools'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.15：React 开发者工具
- en: We will see that the browser’s developer tools are really important, and it
    is useful to open them during development so that you can see errors and warnings
    immediately. The **Console** in developer tools is where you can log messages,
    warnings, and errors from your JavaScript or TypeScript code. The **Network**
    tab shows all the requests made by a web page, including their status codes, response
    times, and content. This is good for optimizing the performance of your web app
    and diagnosing network-related issues.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到浏览器的开发者工具非常重要，在开发期间打开它们非常有用，这样您可以立即看到错误和警告。开发者工具中的**控制台**是您可以从 JavaScript
    或 TypeScript 代码中记录消息、警告和错误的地方。**网络**选项卡显示了网页发出的所有请求，包括它们的状态码、响应时间和内容。这对于优化您的 Web
    应用性能和诊断网络相关问题是很有帮助的。
- en: Summary
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we installed everything that is needed to start our frontend
    development with React. First, we installed Node.js and the VS Code editor. Then,
    we used Vite to create our first React app. Finally, we ran the app, demonstrated
    how to modify it, and introduced debugging tools. We will continue to use Vite
    in the following chapters.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们安装了启动 React 前端开发所需的一切。首先，我们安装了 Node.js 和 VS Code 编辑器。然后，我们使用 Vite 创建了我们的第一个
    React 应用。最后，我们运行了该应用，演示了如何修改它，并介绍了调试工具。在接下来的章节中，我们将继续使用 Vite。
- en: In the next chapter, we will familiarize ourselves with the basics of React
    programming.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将熟悉 React 编程的基础知识。
- en: Questions
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are Node.js and `npm`?
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Node.js 和 `npm` 是什么？
- en: How do you install Node.js?
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何安装 Node.js？
- en: What is VS Code?
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是 VS Code？
- en: How do you install VS Code?
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何安装 VS Code？
- en: How do you create a React app with Vite?
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用 Vite 创建 React 应用？
- en: How do you run a React app?
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何运行 React 应用？
- en: How do you make basic modifications to your app?
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何对您的应用进行基本修改？
- en: Further reading
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Here are some useful resources that will extend the knowledge we have learned
    in this chapter:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些有用的资源，可以帮助我们扩展本章学到的知识：
- en: '*React 18 Design Patterns and Best Practices*, by Carlos Santana Roldán ([https://www.packtpub.com/product/react-18-design-patterns-and-best-practices-fourth-edition/9781803233109](https://www.packtpub.com/product/react-18-design-patterns-and-best-practices-fourth-edition/9781803233109))'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*React 18 设计模式和最佳实践*，由 Carlos Santana Roldán 编著 ([https://www.packtpub.com/product/react-18-design-patterns-and-best-practices-fourth-edition/9781803233109](https://www.packtpub.com/product/react-18-design-patterns-and-best-practices-fourth-edition/9781803233109))'
- en: '*JavaScript in Visual Studio Code*, by Microsoft ([https://code.visualstudio.com/docs/languages/javascript](https://code.visualstudio.com/docs/languages/javascript))'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*JavaScript 在 Visual Studio Code 中*，由微软提供 ([https://code.visualstudio.com/docs/languages/javascript](https://code.visualstudio.com/docs/languages/javascript))'
- en: '*TypeScript in Visual Studio Code*, by Microsoft ([https://code.visualstudio.com/docs/languages/typescript](https://code.visualstudio.com/docs/languages/typescript))'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*TypeScript 在 Visual Studio Code 中*，由微软提供 ([https://code.visualstudio.com/docs/languages/typescript](https://code.visualstudio.com/docs/languages/typescript))'
- en: Learn more on Discord
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Discord 上了解更多
- en: 'To join the Discord community for this book – where you can share feedback,
    ask the author questions, and learn about new releases – follow the QR code below:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 要加入本书的 Discord 社区——在那里您可以分享反馈、向作者提问，并了解新版本——请扫描下面的二维码：
- en: '[https://packt.link/FullStackSpringBootReact4e](https://packt.link/FullStackSpringBootReact4e)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/FullStackSpringBootReact4e](https://packt.link/FullStackSpringBootReact4e)'
- en: '![](img/QR_Code10796108009382640.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code10796108009382640.png)'
