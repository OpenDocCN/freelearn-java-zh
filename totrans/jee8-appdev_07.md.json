["```java\npackage net.ensode.javaeebook.websocketchat.serverendpoint; \n\nimport java.io.IOException; \nimport java.util.logging.Level; \nimport java.util.logging.Logger; \nimport javax.websocket.OnClose; \nimport javax.websocket.OnMessage; \nimport javax.websocket.OnOpen; \nimport javax.websocket.Session; \nimport javax.websocket.server.ServerEndpoint; \n\n@ServerEndpoint(\"/websocketchat\")\npublic class WebSocketChatEndpoint {\n\n    private static final Logger LOG = Logger.getLogger(WebSocketChatEndpoint.class.getName());\n\n    @OnOpen\n    public void connectionOpened() {\n        LOG.log(Level.INFO, \"connection opened\");\n    }\n\n    @OnMessage\n    public synchronized void processMessage(Session session, String\n        message) {\n        LOG.log(Level.INFO, \"received message: {0}\", message);\n\n        try {\n            for (Session sess : session.getOpenSessions()) {\n if (sess.isOpen()) {\n sess.getBasicRemote().sendText(message);\n }\n }\n        } catch (IOException ioe) {\n            LOG.log(Level.SEVERE, ioe.getMessage());\n        }\n    }\n\n    @OnClose\n    public void connectionClosed() {\n        LOG.log(Level.INFO, \"connection closed\");\n    }\n\n}\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<!DOCTYPE html> \n<html  \n> \n<head> \n<title>WebSocket Chat</title> \n<meta name=\"viewport\" content=\"width=device-width\"/> \n<script type=\"text/javascript\"> \nvar websocket; \nfunction init() { \nwebsocket = new WebSocket( \n'ws://localhost:8080/websocketchat/websocketchat'); \n\nwebsocket.onopen = function(event) { \nwebsocketOpen(event) \n}; \nwebsocket.onmessage = function(event) { \nwebsocketMessage(event) \n}; \nwebsocket.onerror = function(event) { \nwebsocketError(event) \n}; \n\n} \n\nfunction websocketOpen(event) { \nconsole.log(\"webSocketOpen invoked\"); \n} \n\nfunction websocketMessage(event) { \nconsole.log(\"websocketMessage invoked\"); \ndocument.getElementById('chatwindow').value += '\\r' + \nevent.data; \n} \n\nfunction websocketError(event) { \nconsole.log(\"websocketError invoked\"); \n} \n\nfunction sendMessage() { \nvar userName = \ndocument.getElementById('userName').value; \nvar msg = \ndocument.getElementById('chatinput').value; \n\nwebsocket.send(userName + \": \" + msg); \n} \n\nfunction closeConnection(){ \nwebsocket.close(); \n} \n\nwindow.addEventListener(\"load\", init);  \n</script> \n</head> \n<body> \n<form jsf:prependId=\"false\"> \n<input type=\"hidden\" id=\"userName\" \nvalue=\"#{user.userName}\"/> \n<table border=\"0\"> \n<tbody> \n<tr> \n<td> \n<label for=\"chatwindow\"> \nChat Window \n</label> \n</td> \n<td> \n<textArea id=\"chatwindow\" rows=\"10\"/> \n</td> \n</tr> \n<tr> \n<td> \n<label for=\"chatinput\"> \nType Something Here \n</label> \n</td> \n<td> \n<input type=\"text\" id=\"chatinput\"/>  \n<input id=\"sendBtn\" type=\"button\" value=\"Send\"  \n onclick=\"sendMessage()\"/> \n</td> \n</tr> \n<tr> \n<td></td> \n<td> \n<input type=\"button\" id=\"exitBtn\" value=\"Exit\"  \n onclick=\"closeConnection()\"/> \n</td> \n</tr> \n</tbody> \n</table> \n</form> \n</body> \n</html> \n```", "```java\npackage net.ensode.websocketjavaclient;\n\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport javax.websocket.ClientEndpoint;\nimport javax.websocket.CloseReason;\nimport javax.websocket.ContainerProvider;\nimport javax.websocket.DeploymentException;\nimport javax.websocket.OnClose;\nimport javax.websocket.OnError;\nimport javax.websocket.OnMessage;\nimport javax.websocket.OnOpen;\nimport javax.websocket.Session;\nimport javax.websocket.WebSocketContainer;\n\n@ClientEndpoint\npublic class WebSocketClient {\n\n    private String userName;\n    private Session session;\n    private final WebSocketJavaClientFrame webSocketJavaClientFrame;\n\n    public WebSocketClient(WebSocketJavaClientFrame\n        webSocketJavaClientFrame) {\n        this.webSocketJavaClientFrame = webSocketJavaClientFrame;\n\n        try {\n            WebSocketContainer webSocketContainer =\n ContainerProvider.getWebSocketContainer();\n webSocketContainer.connectToServer(this, \n new URI(\n\n \"ws://localhost:8080/websocketchat/websocketchat\"));\n        } catch (DeploymentException |\n                      IOException | URISyntaxException ex) {\n            ex.printStackTrace();\n        }\n\n    }\n\n    @OnOpen\n    public void onOpen(Session session) {\n        System.out.println(\"onOpen() invoked\");\n        this.session = session;\n    }\n\n @OnClose\n    public void onClose(CloseReason closeReason) {\n        System.out.println(\"Connection closed, reason: \"\n                + closeReason.getReasonPhrase());\n    }\n\n    @OnError\n    public void onError(Throwable throwable) {\n        System.out.println(\"onError() invoked\");\n        throwable.printStackTrace();\n    }\n\n    @OnMessage\n    public void onMessage(String message, Session session) {\n        System.out.println(\"onMessage() invoked\");\n          webSocketJavaClientFrame.getChatWindowTextArea().\n            setText(\n            webSocketJavaClientFrame.getChatWindowTextArea().\n            getText() + \"\\n\" + message);\n    }\n\n    public void sendMessage(String message) {\n        try {\n            System.out.println(\"sendMessage() invoked, message = \" \n             + message);\n            session.getBasicRemote().sendText(userName + \": \" +\n             message);\n        } catch (IOException ex) {\n            ex.printStackTrace();\n        }\n    }\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n\n}\n```"]