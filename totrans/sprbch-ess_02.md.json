["```java\n<beans xmlns:batch=\"http://www.springframework.org/schema/batch\"\n\nxsi:schemaLocation=\"http://www.springframework.org/schema/beans \nhttp://www.springframework.org/schema/beans/spring-beans-3.0.xsd \nhttp://www.springframework.org/schema/batch \nhttp://www.springframework.org/schema/batch/spring-batch-3.0.xsd\">\n\n<batch:job id=\"readDetailsJob\"> \n... \n</batch:job>\n\n</beans>\n```", "```java\n<beans xmlns:batch ... >\n<batch:job id=\"jobId\">\n  <batch:step id=\"stepId\">\n    <batch:tasklet ref=\"beanReference\">\n      <batch:chunk reader=\"dataReader\" \n        processor=\"dataProcessor\" \n        writer=\"dataWriter\" commit-interval=\"500\" />\n    </batch:tasklet>\n  </batch:step>\n  <batch:step>\n  ...\n  </batch:step>\n</batch:job>\n</beans>\n```", "```java\n<beans xmlns:batch ... >\n<batch:job id=\"jobId\">\n  <batch:step id=\"stepId\">\n    ...\n  </batch:step>\n  <batch:validator ref=\"validatorId\"/>\n</batch:job>\n\n<bean id=\"validatorId\" class=\"beans.JobParametersValidator\">\n  <property name=\"Keys\">\n    <set>\n      <value>keyValues</value>\n    </set>\n  </property>\n</bean>\n</beans>\n```", "```java\n    <step id=\"loading\">\n      <tasklet task-executor=\"taskExecutor\">...</tasklet>\n    </step>\n    ```", "```java\n    <job id=\"jobId\">\n      <split id=\"splitId\" task-executor=\"taskExecutor\"\n        next=\"step3\">\n        <flow>\n          <step id=\"step1\" next=\"step2\"/>\n          <step id=\"step2\"/>\n        </flow>\n      </split>\n      <step id=\"step3\"/>\n    </job>\n    <beans:bean id=\"taskExecutor\" class=\"TaskExecutor\"/>\n    ```", "```java\n<step id=\"firstBatchStepOne\"> \n  <tasklet ref=\"firstBatch\"/> \n</step> \n<job id=\"firstBatchJob\"> \n  <step id=\"stepOne\" parent=\"firstBatchStepOne\"/> \n</job>\n<bean id=\"firstBatch\" class=\"FirstBatch\"/>\n```", "```java\n<step id=\"firstBatchStepOne\"> \n  <tasklet ref=\"firstBatch\" start-limit=\"6\">\n  ...\n  </tasklet> \n</step> \n<job id=\"firstBatchJob\"> \n  <step id=\"stepOne\" parent=\"firstBatchStepOne\"/> \n</job>\n<bean id=\"firstBatch\" class=\"FirstBatch\"/>\n```", "```java\n<step id=\"firstBatchStepOne\"> \n  <tasklet ref=\"firstBatch\">\n    <chunk reader=\"itemReader\" processor=\"itemProcessor\" writer=\"itermWriter\" commit-interval=\"150\"/>\n  </tasklet> \n</step> \n<job id=\"firstBatchJob\"> \n  <step id=\"stepOne\" parent=\"firstBatchStepOne\"/> \n</job>\n<bean id=\"firstBatch\" class=\"FirstBatch\"/>\n<bean id=\"itemReader\" class=\"ItemReader\"/>\n<bean id=\"itemProcessor\" class=\"ItemProcessor\"/>\n<bean id=\"itemWriter\" class=\"ItemProcessor\"/>\n```", "```java\n<step id=\"firstBatchStepOne\"> \n  <tasklet ref=\"firstBatch\" transaction-manager=\"transactionManager\">\n  ...\n  </tasklet> \n</step> \n<job id=\"firstBatchJob\"> \n  <step id=\"stepOne\" parent=\"firstBatchStepOne\"/> \n</job>\n<bean id=\"firstBatch\" class=\"FirstBatch\"/>\n<bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n  <property name=\"dataSource\" ref=\"DataSource\"/>\n</bean>\n```", "```java\n<bean id=\"jobRepository\" class=\"org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean\">\n  <property name=\"transactionManager-ref\" \n    ref=\"transactionManager\"/>\n</bean>\n<bean id=\"transactionManager\"\nclass=\"org.springframework.batch.support.transaction.ResourcelessTransactionManager\"/>\n<job id=\"deductionsJob\" job-repository=\"jobRepository\">\n...\n</job>\n```", "```java\n<bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\"> \n  <property name=\"driverClassName\" value=\"${batch.jdbc.driver}\" /> \n  <property name=\"url\" value=\"${batch.jdbc.url}\" /> \n  <property name=\"username\" value=\"${batch.jdbc.user}\" /> \n  <property name=\"password\" value=\"${batch.jdbc.password}\" /> \n</bean> \n<bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\" lazy-init=\"true\"> \n  <property name=\"dataSource\" ref=\"dataSource\" /> \n</bean> \n<job-repository id=\"jobRepository\" data-source=\"dataSource\" \ntransaction-manager=\"transactionManager\"/>\n```", "```java\n<bean id=\"processBean\" class=\"JobProcessBean\" scope=\"step\"> \n  <property name=\"name\" value=\"#{jobParameters[name]}\"/> \n</bean>\n```", "```java\n    import org.springframework.batch.core.JobExecution; \n    import org.springframework.batch.core.JobExecutionListener; \n    public class JobStatusListener implements JobExecutionListener {\n    public void beforeJob(JobExecution jobExecution) { \n      System.out.println(\"Job: \" + \n      jobExecution.getJobInstance().getJobName() + \" is beginning\"); \n    } \n    public void afterJob(JobExecution jobExecution) { \n      System.out.println(\"Job: \" + jobExecution.getJobInstance(). \n      getJobName() + \" has completed\");\n      System.out.println(\"The Job Execution status is: \" + \n      jobExecution.getStatus()); \n    }\n    }\n    ```", "```java\n    <job id=\"employeeDeductionsJob\">\n      <listeners>\n        <listener ref=\"jobStatusListener\"/>\n      </listeners>\n    </job>\n    ```", "```java\n    import org.springframework.batch.core.JobExecution; \n    import org.springframework.batch.core.JobExecutionListener;\n    import org.springframework.batch.core.annotation.AfterJob;\n    import org.springframework.batch.core.annotation.BeforeJob; \n    public class JobStatusListener { \n    @BeforeJob \n    public void beforeJob(JobExecution jobExecution) { \n      System.out.println(\"Job: \" + \n      jobExecution.getJobInstance().getJobName() + \" is \n      beginning\");\n    } \n    @AfterJob \n    public void afterJob(JobExecution jobExecution) { \n      System.out.println(\"Job: \" + jobExecution.getJobInstance().getJobName() + \" has completed\");\n      System.out.println(\"The Job Execution status is: \" + \n      jobExecution.getStatus());  \n    }\n    }\n    ```", "```java\nString[] springConfig  = {\"batch/firstBatch.xml\"};\ncontext = new ClassPathXmlApplicationContext(springConfig);\nJobLauncher jobLauncher = (JobLauncher) context.getBean(\"jobLauncher\");\nJob job = (Job) context.getBean(\"firstBatchJob\");\nJobExecution execution = jobLauncher.run(job, new JobParameters());\nSystem.out.println(\"Exit Status : \" + execution.getStatus());\n```", "```java\n<bean id=\"jobLauncher\"\nclass=\"org.springframework.batch.core.launch.support.SimpleJobLauncher\">\n  <property name=\"jobRepository\" ref=\"jobRepository\"/>\n</bean>\n```", "```java\n<bean id=\"jobLauncher\"\nclass=\"org.springframework.batch.core.launch.support.SimpleJobLauncher\">\n<property name=\"jobRepository\" ref=\"jobRepository\"/>\n<property name=\"taskExecutor\">\n<bean class=\"org.springframework.core.task.SimpleAsyncTaskExecutor\"/>\n</property>\n</bean>\n```", "```java\n> java -classpath \"/lib/*\" org.springframework.batch.core.launch.support.CommandLineJobRunner firstBatch.xml firstBatchJob schedule.date(date)=2007/05/05\n\n```", "```java\n@Controller\npublic class JobLauncherController {\n@Autowired\nJobLauncher jobLauncher;\n@Autowired\nJob job;\n@RequestMapping(\"/jobLauncher.html\")\npublic void handle() throws Exception {\n  jobLauncher.run(job, new JobParameters());\n}\n}\n```", "```java\nSet<Long> executions =jobOperator.getRunningExecutions(\"jobName\");\nIf( executions.iterator().hasNext()) {\njobOperator.stop(executions.iterator().next());\n}\n```", "```java\n<bean id=\"jobOperator\" class=\"org.springframework.batch.core.launch.support. SimpleJobOperator\">\n<property name=\"jobExplorer\">\n<bean class=\" org.springframework.batch.core.explore.support. JobExplorerFactoryBean\">\n<property name=\"dataSource\" ref=\"dataSource\"/>\n</bean>\n</property>\n<property name=\"jobRepository\" ref=\"jobRepository\"/>\n<property name=\"jobRegistry\" ref=\"jobRegistry\"/>\n<property name=\"jobLauncher\" ref=\"jobLauncher\"/>\n</bean>\n```"]