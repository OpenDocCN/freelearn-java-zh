["```java\n #On Linux\n javac -cp 'lib/*' -d classes -sourcepath src $(find src -name *.java)\n\n #On Windows\n javac -cp lib\\*;classes -d classes src\\com\\packt\\model\\*.java\n      src\\com\\packt\\*.java\n```", "```java\n #On Linux:\n java -cp lib/*:classes/ com.packt.Sample\n #On Windows:\n java -cp lib\\*;classes com.packt.Sample\n```", "```java\n jar cvfm sample.jar manifest.mf -C classes .\n```", "```java\n      jdeps -cp classes/:lib/* classes/com/packt/Sample.class\n```", "```java\n      jdeps -verbose:package -cp classes/:lib/*\n      classes/com/packt/Sample.class\n```", "```java\n jdeps -verbose:class -cp classes/:lib/*      classes/com/packt/Sample.class\n```", "```java\n      jdeps -summary -cp classes/:lib/* classes/com/packt/Sample.class\n```", "```java\n        jdeps -jdkinternals -cp classes/:lib/*\n classes/com/packt/Sample.class\n```", "```java\n jdeps -s -cp lib/* sample.jar\n```", "```java\n jdeps -p java.util sample.jar\n```", "```java\n jdeps -p java.util.concurrent sample.jar\n```", "```java\n jdeps -include 'com.packt.*' -cp lib/* sample.jar\n```", "```java\n jdeps -p 'com.packt.model' sample.jar\n```", "```java\n jdeps -m java.httpclient\n```", "```java\n jdeps --require java.logging -m java.sql\n```", "```java\n Sample.class -> classes\n      Sample.class -> lib/jackson-core-2.8.4.jar\n      Sample.class -> lib/jackson-databind-2.8.4.jar\n      Sample.class -> java.base\n      Sample.class -> jdk.unsupported\n```", "```java\n com.packt  -> com.fasterxml.jackson.core.type  jackson-core-2.8.4.jar\n      com.packt  -> com.fasterxml.jackson.databind   jackson-databind-\n                                                     2.8.4.jar\n      com.packt  -> com.packt.model                  sample.jar\n```", "```java\n        public static Boolean isPrime(Integer number){\n          if ( number == 1 ) { return false; }\n          return IntStream.range(2,num).noneMatch(i -> num % i == 0 );\n        }\n```", "```java\n        public static Integer sumOfFirstNPrimes(Integer count){\n          return IntStream.iterate(1,i -> i+1)\n                          .filter(j -> isPrime(j))\n                          .limit(count).sum();\n        }\n```", "```java\n        public static Boolean isEven(Integer number){\n          return number % 2 == 0;\n        }\n```", "```java\n        public static Integer sumOfFirstNEvens(Integer count){\n          return IntStream.iterate(1,i -> i+1)\n                          .filter(j -> isEven(j))\n                          .limit(count).sum();\n        }\n\n        public static Integer sumOfFirstNOdds(Integer count){\n          return IntStream.iterate(1,i -> i+1)\n                          .filter(j -> !isEven(j))\n                          .limit(count).sum();\n        }\n```", "```java\nprivate static Integer computeFirstNSum(Integer count, IntPredicate filter){\n  return IntStream.iterate(1,i -> i+1)\n                  .filter(filter)\n                  .limit(count).sum();\n }\n```", "```java\npublic static Integer sumOfFirstNPrimes(Integer count){\n  return computeFirstNSum(count, (i -> isPrime(i)));\n}\n\npublic static Integer sumOfFirstNEvens(Integer count){\n  return computeFirstNSum(count, (i -> isEven(i)));\n}\n\npublic static Integer sumOfFirstNOdds(Integer count){\n  return computeFirstNSum(count, (i -> !isEven(i)));\n}\n```", "```java\nmodule math.util{\n  exports com.packt.math;\n}\n```", "```java\nprivate static Integer acceptChoice(Scanner reader){\n  System.out.println(\"************Advanced Calculator************\");\n  System.out.println(\"1\\. Prime Number check\");\n  System.out.println(\"2\\. Even Number check\");\n  System.out.println(\"3\\. Sum of N Primes\");\n  System.out.println(\"4\\. Sum of N Evens\");\n  System.out.println(\"5\\. Sum of N Odds\");\n  System.out.println(\"6\\. Exit\");\n  System.out.println(\"Enter the number to choose operation\");\n  return reader.nextInt();\n}\n```", "```java\nswitch(choice){\n  case 1:\n    System.out.println(\"Enter the number\");\n    Integer number = reader.nextInt();\n    if (MathUtil.isPrime(number)){\n      System.out.println(\"The number \" + number +\" is prime\");\n    }else{\n      System.out.println(\"The number \" + number +\" is not prime\");\n    }\n  break;\n  case 2:\n    System.out.println(\"Enter the number\");\n    Integer number = reader.nextInt();\n    if (MathUtil.isEven(number)){\n      System.out.println(\"The number \" + number +\" is even\");\n    }\n  break;\n  case 3:\n    System.out.println(\"How many primes?\");\n    Integer count = reader.nextInt();\n    System.out.println(String.format(\"Sum of %d primes is %d\", \n          count, MathUtil.sumOfFirstNPrimes(count)));\n  break;\n  case 4:\n    System.out.println(\"How many evens?\");\n    Integer count = reader.nextInt();\n    System.out.println(String.format(\"Sum of %d evens is %d\", \n          count, MathUtil.sumOfFirstNEvens(count)));\n  break;\n  case 5: \n    System.out.println(\"How many odds?\");\n    Integer count = reader.nextInt();\n    System.out.println(String.format(\"Sum of %d odds is %d\", \n          count, MathUtil.sumOfFirstNOdds(count)));\n  break;\n}\n```", "```java\nmodule calculator{\n  requires math.util;\n}\n```", "```java\njavac -d mods --module-source-path . $(find . -name \"*.java\")\n```", "```java\njava --module-path mods -m calculator/com.packt.calculator.Calculator\n```", "```java\n|application_root_directory\n|--module1_root\n|----module-info.java\n|----com\n|------packt\n|--------sample\n|----------MyClass.java\n|--module2_root\n|----module-info.java\n|----com\n|------packt\n|--------test\n|----------MyAnotherClass.java\n```", "```java\n{Annotation} [open] module ModuleName { {ModuleStatement} }\n```", "```java\nModuleStatement:\n  requires {RequiresModifier} ModuleName ;\n  exports PackageName [to ModuleName {, ModuleName}] ;\n  opens PackageName [to ModuleName {, ModuleName}] ;\n  uses TypeName ;\n  provides TypeName with TypeName {, TypeName} ;\n```", "```java\n javac -d mods --module-source-path . $(find . -name *.java)\n```", "```java\n      jar --create --file=mlib/math.util@1.0.jar --module-version 1.0\n      -C mods/math.util .\n```", "```java\n jar --create --file=mlib/calculator@1.0.jar --module-version 1.0 \n      --main-class com.packt.calculator.Calculator -C mods/calculator .\n```", "```java\n java -p mlib -m calculator\n```", "```java\njar -d --file=mlib/calculator@1.0.jar\n```", "```java\ncalculator@1.0\n  requires mandated java.base\n  requires math.util\n  conceals com.packt.calculator\n  main-class com.packt.calculator.Calculator\n\njar -d --file=mlib/math.util@1.0.jar\n```", "```java\nmath.util@1.0\n  requires mandated java.base\n  exports com.packt.math\n```", "```java\njavac -d classes --module-source-path . $(find math.util -name *.java)\nmkdir mlib\njar --create --file mlib/math.util.jar -C classes/math.util .\n```", "```java\njar -d --file mlib/math.util@1.0.jar\nmath.util@1.0\n  requires mandated java.base\n  exports com.packt.math\n```", "```java\njavac -d classes/ --source-path calculator $(find calculator -name *.java)\n```", "```java\njavac --class-path mlib/* -d classes/ --source-path calculator $(find calculator -name *.java)\n```", "```java\njava -cp classes:mlib/* com.packt.calculator.NonModularCalculator\n```", "```java\n#Compiling math util\n\njavac -d math_util/out/classes/ -sourcepath math_util/src $(find math_util/src -name *.java)\njar --create --file=math_util/out/math.util.jar \n-C math_util/out/classes/ .\n\n#Compiling banking util\n\njavac -d banking_util/out/classes/ -sourcepath banking_util/src $(find banking_util/src -name *.java)\njar --create --file=banking_util/out/banking.util.jar \n-C banking_util/out/classes/ .\n\n#Compiling calculator\n\njavac -cp calculator/lib/*:math_util/out/math.util.jar:banking_util/out/banking.util.jar -d calculator/out/classes/ -sourcepath calculator/src $(find calculator/src -name *.java)\n```", "```java\njar --create --file=calculator/out/calculator.jar -C calculator/out/classes/ .\n```", "```java\njava -cp calculator/out/classes:calculator/lib/*:math_util/out/math.util.jar:banking_util/out/banking.util.jar com.packt.calculator.Calculator\n```", "```java\njdeps -summary -R -cp calculator/lib/*:math_util/out/*:banking_util/out/* calculator/out/calculator.jar\n```", "```java\nbanking.util.jar -> java.base\ncalculator.jar -> banking_util/out/banking.util.jar\ncalculator.jar -> calculator/lib/jackson-databind-2.8.4.jar\ncalculator.jar -> java.base\ncalculator.jar -> math_util/out/math.util.jar\njackson-annotations-2.8.4.jar -> java.base\njackson-core-2.8.4.jar -> java.base\njackson-databind-2.8.4.jar -> calculator/lib/jackson-annotations-2.8.4.jar\njackson-databind-2.8.4.jar -> calculator/lib/jackson-core-2.8.4.jar\njackson-databind-2.8.4.jar -> java.base\njackson-databind-2.8.4.jar -> java.logging\njackson-databind-2.8.4.jar -> java.sql\njackson-databind-2.8.4.jar -> java.xml\nmath.util.jar -> java.base\n```", "```java\n        module banking.util{   \n          exports com.packt.banking;\n        }\n```", "```java\n javac -d mods --module-source-path src $(find src -name *.java)\n```", "```java\n jar --create --file=mlib/banking.util.jar -C mods/banking.util .\n```", "```java\njava --add-modules ALL-MODULE-PATH --module-path ../6_bottom_up_migration_after/mods/banking.util -cp calculator/out/classes:calculator/lib/*:math_util/out/math.util.jar com.packt.calculator.Calculator\n```", "```java\n        module math.util{\n          exports com.packt.math;\n        }\n```", "```java\n javac -d mods --module-source-path src $(find src -name *.java)\n```", "```java\n jar --create --file=mlib/math.util.jar -C mods/math.util .\n```", "```java\n java --add-modules ALL-MODULE-PATH --module-path\n      ../6_bottom_up_migration_after/mods/banking.util:\n      ../6_bottom_up_migration_after/mods/math.util \n      -cp calculator/out/classes:calculator/lib/*\n      com.packt.calculator.Calculator\n```", "```java\n$ pwd \n/root/java9-samples/chp3/6_bottom_up_migration_after\n$ cp ../6_bottom_up_migration_before/calculator/lib/*.jar mlib/\n$ mv mlib/jackson-annotations-2.8.4.jar mods/jackson.annotations.jar\n$ mv mlib/jackson-core-2.8.4.jar mods/jackson.core.jar\n$ mv mlib/jackson-databind-2.8.4.jar mods/jackson.databind.jar\n```", "```java\njava --add-modules ALL-MODULE-PATH --module-path ../6_bottom_up_migration_after/mods:../6_bottom_up_migration_after/mlib -cp calculator/out/classes com.packt.calculator.Calculator\n```", "```java\n        module calculator{ \n          requires math.util; \n          requires banking.util; \n          requires jackson.databind; \n          requires jackson.core; \n          requires jackson.annotations; \n        }\n```", "```java\n javac -d mods --module-path mlib:mods --module-source-path src $(find src -name *.java)\n```", "```java\n jar --create --file=mlib/calculator.jar --main-\n      class=com.packt.calculator.Calculator -C mods/calculator .\n```", "```java\n java -p mlib:mods -m calculator\n```", "```java\n$ javac -d math_util/out/classes/ -sourcepath math_util/src $(find math_util/src -name *.java)\n\n$ jar --create --file=math_util/out/math.util.jar \n-C math_util/out/classes/ .\n\n$ javac -d banking_util/out/classes/ -sourcepath banking_util/src $(find banking_util/src -name *.java)\n\n$ jar --create --file=banking_util/out/banking.util.jar \n-C banking_util/out/classes/ .\n\n$ javac -cp calculator/lib/*:math_util/out/math.util.jar:banking_util/out/banking.util.jar -d calculator/out/classes/ -sourcepath calculator/src $(find calculator/src -name *.java)\n\n$ java -cp calculator/out/classes:calculator/lib/*:math_util/out/math.util.jar:banking_util/out/banking.util.jar com.packt.calculator.Calculator\n```", "```java\n $ cp ../7_top_down_migration_before/calculator/lib/jackson-\n      annotations-\n 2.8.4.jar mlib/jackson.annotations.jar \n\n $ cp ../7_top_down_migration_before/calculator/lib/jackson-core-\n      2.8.4.jar\n mlib/jackson.core.jar \n\n $ cp ../7_top_down_migration_before/calculator/lib/jackson-databind-\n 2.8.4.jar mlib/jackson.databind.jar \n\n $ cp ../7_top_down_migration_before/banking_util/out/banking.util.jar \n      mlib/ \n\n $ cp ../7_top_down_migration_before/math_util/out/math.util.jar mlib/\n```", "```java\n     $ ls mlib\n      banking.util.jar  jackson.annotations.jar  jackson.core.jar \n jackson.databind.jar  math.util.jar\n```", "```java\n        module calculator{ \n          requires math.util; \n          requires banking.util; \n          requires jackson.databind; \n          requires jackson.core; \n          requires jackson.annotations; \n        }\n```", "```java\n #On Linux\n javac -d mods --module-path mlib --module-source-path src $(find\n      src -name *.java)\n\n #On Windows\n javac -d mods --module-path mlib --module-source-path src \n      src\\calculator\\module-info.java \n      src\\calculator\\com\\packt\\calculator\\Calculator.java \n      src\\calculator\\com\\packt\\calculator\\commands\\*.java\n```", "```java\n jar --create --file=mlib/calculator.jar --main-\n      class=com.packt.calculator.Calculator -C mods/calculator/ .\n```", "```java\n java --module-path mlib -m calculator\n```", "```java\n        module banking.util{\n          exports com.packt.banking; \n        }\n```", "```java\n #On Linux\n javac -d mods --module-path mlib --module-source-path src $(find \n      src -name *.java)\n\n #On Windows\n javac -d mods --module-path mlib --module-source-path src \n      src\\banking.util\\module-info.java \n      src\\banking.util\\com\\packt\\banking\\BankUtil.java\n```", "```java\n jar --create --file=mlib/banking.util.jar -C mods/banking.util/ .\n```", "```java\n java --module-path mlib -m calculator\n```", "```java\n        module math.util{ \n          exports com.packt.math; \n        }\n```", "```java\n #On Linux\n javac -d mods --module-path mlib --module-source-path src $(find \n      src -name *.java)\n\n #On Windows\n javac -d mods --module-path mlib --module-source-path src \n      src\\math.util\\module-info.java \n      src\\math.util\\com\\packt\\math\\MathUtil.java\n```", "```java\n jar --create --file=mlib/math.util.jar -C mods/math.util/ .\n```", "```java\n java --module-path mlib -m calculator\n```", "```java\n        public String id; \n        public String title; \n        public String author;\n```", "```java\n        public static BookService getInstance(){ \n          ServiceLoader<BookServiceProvider> sl = \n                 ServiceLoader.load(BookServiceProvider.class);\n          Iterator<BookServiceProvider> iter = sl.iterator(); \n          if (!iter.hasNext()) \n            throw new RuntimeException(\"No service providers found!\");\n\n          BookServiceProvider provider = null; \n          while(iter.hasNext()){ \n            provider = iter.next(); \n            System.out.println(provider.getClass()); \n          } \n          return provider.getBookService(); \n        }\n```", "```java\n        public interface BookServiceProvider{ \n          public BookService getBookService(); \n        }\n```", "```java\n        module book.service{ \n          exports com.packt.model; \n          exports com.packt.service; \n          exports com.packt.spi; \n          uses com.packt.spi.BookServiceProvider; \n        }\n```", "```java\n        public void create(Book book){ \n          System.out.println(\"Mongodb Create book ... \" + book.title); \n        } \n\n        public Book read(String id){ \n          System.out.println(\"Mongodb Reading book ... \" + id); \n          return new Book(id, \"Title\", \"Author\"); \n        } \n\n        public void update(Book book){ \n          System.out.println(\"Mongodb Updating book ... \" + book.title); \n        }\n\n        public void delete(String id){ \n          System.out.println(\"Mongodb Deleting ... \" + id); \n        }\n```", "```java\n        @Override \n        public BookService getBookService(){ \n          return new MongoDbBookService(); \n        }\n```", "```java\n        module mongodb.book.service{ \n          requires book.service; \n          provides com.packt.spi.BookServiceProvider \n                   with com.packt.mongodb.MongoDbBookServiceProvider; \n        }\n```", "```java\n        public class BookManager{ \n          public static void main(String[] args){ \n            BookService service = BookService.getInstance();\n            System.out.println(service.getClass()); \n            Book book = new Book(\"1\", \"Title\", \"Author\"); \n            service.create(book); \n            service.read(\"1\"); \n            service.update(book); \n            service.delete(\"1\"); \n          }\n        }\n```", "```java\n $ javac -d mods --module-source-path src $(find src -name *.java) \n $ java --module-path mods -m book.manage/com.packt.manage.BookManager \n class com.packt.mongodb.MongoDbBookServiceProvider\n class com.packt.mongodb.service.MongoDbBookService\n Mongodb Create book ... Title\n Mongodb Reading book ... 1\n Mongodb Updating book ... Title\n Mongodb Deleting ... 1\n```", "```java\n        module sqldb.book.service{ \n          requires book.service; \n          provides com.packt.spi.BookServiceProvider \n                   with com.packt.sqldb.SqlDbBookServiceProvider; \n        }\n```", "```java\n        @Override \n        public BookService getBookService(){     \n          return new SqlDbBookService(); \n        }\n```", "```java\n $ javac -d mods --module-source-path src $(find src -name *.java) \n $ java --module-path mods -m book.manage/com.packt.manage.BookManager \n class com.packt.sqldb.SqlDbBookServiceProvider\n class com.packt.mongodb.MongoDbBookServiceProvider\n class com.packt.mongodb.service.MongoDbBookService\n Mongodb Create book ... Title\n Mongodb Reading book ... 1\n Mongodb Updating book ... Title\n Mongodb Deleting ... 1\n```", "```java\n $ javac -d mods --module-path mlib --module-source-path src $(find \n      src - name *.java)\n```", "```java\n     $ jar --create --file mlib/math.util.jar -C mods/math.util . \n\n $ jar --create --file=mlib/calculator.jar --main-\n class=com.packt.calculator.Calculator -C mods/calculator/ .\n```", "```java\n $ jlink --module-path mlib:$JAVA_HOME/jmods --add-modules \n calculator,math.util --output image --launcher \n launch=calculator/com.packt.calculator.Calculator\n```", "```java\n    $ ./image/bin/launch \n\n ************Advanced Calculator************\n 1\\. Prime Number check\n 2\\. Even Number check\n 3\\. Sum of N Primes\n 4\\. Sum of N Evens\n 5\\. Sum of N Odds\n 6\\. Exit\n Enter the number to choose operation\n```", "```java\npublic class CollectionsDemo{\n  public static void main(String[] args){\n    Map<String, String> map = new HashMap<>();\n    map.put(\"key1\", \"value1\");\n    map.put(\"key2\", \"value3\");\n    map.put(\"key3\", \"value3\");\n    map.forEach((k,v) -> System.out.println(k + \", \" + v));\n  }\n}\n```", "```java\n$ javac -d mods --module-source-path src src\\demo\\module-info.java src\\demo\\com\\packt\\CollectionsDemo.java\n$ java --module-path mods -m demo/com.packt.CollectionsDemo\n```", "```java\nkey1, value1\nkey2, value3\nkey3, value3\n```", "```java\n $ javac --release 8 -d mods src\\demo\\com\\packt\\CollectionsDemo.java\n```", "```java\n $jar --create --file mlib/demo.jar --main-class \n      com.packt.CollectionsDemo -C mods/ .\n```", "```java\n $ java -version\n java version \"9\"\n Java(TM) SE Runtime Environment (build 9+179)\n Java HotSpot(TM) 64-Bit Server VM (build 9+179, mixed mode)\n\n $ java -jar mlib/demo.jar\n key1, value1\n key2, value3\n key3, value3\n```", "```java\n $ \"%JAVA8_HOME%\"\\bin\\java -version \n java version \"1.8.0_121\"\n Java(TM) SE Runtime Environment (build 1.8.0_121-b13)\n Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)\n\n $ \"%JAVA8_HOME%\"\\bin\\java -jar mlib\\demo.jar\n key1, value1\n key2, value3\n key3, value3\n```", "```java\n $ javac -d mods src\\demo\\com\\packt\\CollectionsDemo.java \n $ jar --create --file mlib/demo.jar --main-class \n      com.packt.CollectionsDemo -C mods/ .\n```", "```java\n $ java -jar mlib/demo.jar \n key1, value1\n key2, value3\n key3, value3\n```", "```java\n $ \"%JAVA8_HOME%\"\\bin\\java -version\n java version \"1.8.0_121\"\n Java(TM) SE Runtime Environment (build 1.8.0_121-b13)\n Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)\n```", "```java\n$ java -jar mlib\\demo.jar\n\nException in thread \"main\" java.lang.UnsupportedClassVersionError:\n\ncom/packt/CollectionsDemo has been compiled by a more recent version of the Java Runtime (class file version 53.0), this version of the Java Runtime only recognizes class file versions up to 52.0\n```", "```java\n        public class CollectionUtil{\n          public static List<String> list(String ... args){\n            System.out.println(\"Using Arrays.asList\");\n            return Arrays.asList(args);\n          }\n\n          public static Set<String> set(String ... args){\n            System.out.println(\"Using Arrays.asList and set.addAll\");\n            Set<String> set = new HashSet<>();\n            set.addAll(list(args));\n            return set;\n          }\n        }\n\n        public class FactoryDemo{\n          public static void main(String[] args){\n            System.out.println(CollectionUtil.list(\"element1\", \n                       \"element2\", \"element3\"));\n            System.out.println(CollectionUtil.set(\"element1\", \n                       \"element2\", \"element3\"));\n          }\n        }\n```", "```java\n        public class CollectionUtil{\n          public static List<String> list(String ... args){\n            System.out.println(\"Using factory methods\");\n            return List.of(args);\n          }\n          public static Set<String> set(String ... args){\n            System.out.println(\"Using factory methods\");\n            return Set.of(args);\n          }\n        }\n```", "```java\n javac -d mods --release 8 src\\8\\com\\packt\\*.java\n      javac -d mods9 --release 9 src\\9\\com\\packt\\*.java\n```", "```java\n jar --create --file mr.jar --main-class=com.packt.FactoryDemo \n      -C mods . --release 9 -C mods9 .\n```", "```java\n java -jar mr.jar\n [element1, element2, element3]\n Using factory methods\n [element2, element3, element1]\n```", "```java\n      #Linux\n $ /usr/lib/jdk1.8.0_144/bin/java -version\n java version \"1.8.0_144\"\n Java(TM) SE Runtime Environment (build 1.8.0_144-b01)\n Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)\n $ /usr/lib/jdk1.8.0_144/bin/java -jar mr.jar\n Using Arrays.asList\n [element1, element2, element3]\n Using Arrays.asList and set.addAll\n Using Arrays.asList\n [element1, element2, element3]\n\n #Windows\n $ \"%JAVA8_HOME%\"\\bin\\java -version \n java version \"1.8.0_121\"\n Java(TM) SE Runtime Environment (build 1.8.0_121-b13)\n Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)\n $ \"%JAVA8_HOME%\"\\bin\\java -jar mr.jar\n Using Arrays.asList\n [element1, element2, element3]\n Using Arrays.asList and set.addAll\n Using Arrays.asList\n [element1, element2, element3]\n```", "```java\njar -tvf mr.jar\n```", "```java\njar -xvf mr.jar\n\n$ cat META-INF/MANIFEST.MF\nManifest-Version: 1.0\nCreated-By: 9 (Oracle Corporation)\nMain-Class: com.packt.FactoryDemo\nMulti-Release: true\n```", "```java\n      12_services_using_maven\n |---book-manage\n |---book-service\n |---mongodb-book-service\n |---sqldb-book-service\n |---pom.xml\n```", "```java\n        <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n        <project \n\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \n         http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n          <modelVersion>4.0.0</modelVersion>\n          <groupId>com.packt</groupId>\n          <artifactId>services_using_maven</artifactId>\n          <version>1.0</version>\n          <packaging>pom</packaging>\n          <modules>\n            <module>book-service</module>\n            <module>mongodb-book-service</module>\n            <module>sqldb-book-service</module>\n            <module>book-manage</module>\n          </modules>\n          <build>\n            <plugins>\n              <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.6.1</version>\n                <configuration>\n                  <source>9</source>\n                  <target>9</target>\n                  <showWarnings>true</showWarnings>\n                  <showDeprecation>true</showDeprecation>\n                </configuration>\n              </plugin>\n            </plugins>\n          </build>\n        </project>\n```", "```java\n book-service\n |---pom.xml\n |---src\n |---main\n |---book.service\n |---module-info.java\n |---com\n |---packt\n |---model\n |---Book.java\n |---service\n |---BookService.java\n |---spi\n |---BookServiceProvider.java\n```", "```java\n        <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n        <project \n\n        xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \n        http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n          <modelVersion>4.0.0</modelVersion>\n          <parent>\n            <groupId>com.packt</groupId>\n            <artifactId>services_using_maven</artifactId>\n            <version>1.0</version>\n          </parent>\n          <artifactId>book-service</artifactId>\n          <version>1.0</version>\n          <build>\n            <sourceDirectory>src/main/book.service</sourceDirectory>\n          </build>\n        </project>\n```", "```java\n        module book.service{\n          exports com.packt.model;\n          exports com.packt.service;\n          exports com.packt.spi;\n          uses com.packt.spi.BookServiceProvider;\n       }\n```", "```java\n       public class Book{\n         public Book(String id, String title, String author){\n           this.id = id;\n           this.title = title\n           this.author = author;\n         }\n         public String id;\n         public String title;\n         public String author;\n       }\n```", "```java\n         public abstract class BookService{\n           public abstract void create(Book book); \n           public abstract Book read(String id); \n           public abstract void update(Book book); \n           public abstract void delete(String id);\n           public static BookService getInstance(){ \n             ServiceLoader<BookServiceProvider> sl      \n                  ServiceLoader.load(BookServiceProvider.class);          \n             Iterator<BookServiceProvider> iter = sl.iterator();        \n             if (!iter.hasNext())\n                throw new RuntimeException(\"No service providers found!\");              \n             BookServiceProvider provider = null;        \n             while(iter.hasNext()){\n               provider = iter.next();\n               System.out.println(provider.getClass());        \n             }        \n             return provider.getBookService(); \n           }\n        }\n```", "```java\n        public interface BookServiceProvider{\n          public BookService getBookService();\n        }\n```", "```java\nmvn clean install\n```"]