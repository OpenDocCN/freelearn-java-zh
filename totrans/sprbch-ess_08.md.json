["```java\n<step id=\"employeePayProcessing\">\n<tasklet task-executor=\"taskExecutor\">\n<chunk reader=\"employeeWorkingDaysReader\" processor=\"employeePayProcessor\"\nwriter=\"employeeSalariesWriter\"/>\n</tasklet>\n</step>\n<beans:bean id=\"taskExecutor\"\nclass=\"org.springframework.core.task.SimpleAsyncTaskExecutor\">\n<beans:property name=\"concurrencyLimit\" value=\"20\"/>\n</beans:bean>\n```", "```java\n<job id=\"employeePayProcessing\">\n<split id=\"splitProcess\" task-executor=\"taskExecutor\" next=\"payCalculations\">\n<flow>\n<step id=\"readEmployeeData\" parent=\"stepOne\" next=\"processEmployeeData\"/>\n<step id=\"processEmployeeData\" parent=\"stepTwo\"/>\n</flow>\n<flow>\n<step id=\"organizationDataSetup\" parent=\"stepThree\"/>\n</flow>\n</split>\n<step id=\"payCalculations\" parent=\"stepFour\"/>\n</job>\n<beans:bean id=\"taskExecutor\" class=\" org.springframework.core.task.SimpleAsyncTaskExecutor\"/>\n```", "```java\npublic interface ChunkProvider<T> {\nvoid postProcess(StepContribution contribution, Chunk<T> chunk);\nChunk<T> provide(StepContribution contribution) throws Exception;\n}\n```", "```java\npublic interface ChunkProcessor<I> {\nvoid process(StepContribution contribution, Chunk<I> chunk) throws Exception;\n}\n```", "```java\n<step id=\"initialStep\">\n<partition step=\"stepPartition\" handler=\"handler\"/>\n</step>\n<beans:bean class=\"org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler\">\n<beans:property name=\"taskExecutor\" ref=\"taskExecutor\"/>\n<beans:property name=\"step\" ref=\"stepPartition\"/>\n<beans:property name=\"gridSize\" value=\"10\"/>\n</beans:bean>\n```"]