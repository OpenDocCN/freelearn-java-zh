["```java\nimport greenfoot.*;\n\npublic class Rocket extends Actor {\n  private int speedX = 1;\n  private int speedY = 0;\n  private static final int SPEED = 2;\n  private static final int BOUNDARY = 20;\n\n  public void act() {\n    handleKeyPresses();\n    boundedMove();\n    checkForCrash();\n  }\n\n  private void handleKeyPresses() {\n    handleArrowKey(\"down\", 0, SPEED);\n    handleArrowKey(\"up\", 0, -SPEED);\n    handleArrowKey(\"left\", -SPEED, 0);\n    handleArrowKey(\"right\", SPEED, 0);\n  }\n\n  private void handleArrowKey(String k, int sX, int sY) {\n    if( Greenfoot.isKeyDown(k) ) {\n      speedX = sX;\n      speedY = sY;\n    }\n  }\n\n  private void boundedMove() {\n    int newX = Math.max(BOUNDARY, speedX+getX());\n    newX = Math.min(getWorld().getWidth()-BOUNDARY, newX);\n    int newY = Math.max(BOUNDARY, speedY+getY());\n    newY = Math.min(getWorld().getHeight()-BOUNDARY, newY);\n    setLocation(newX,newY);\n  }\n\n  private void checkForCrash() {\n    Actor w = getOneIntersectingObject(Obstacle.class);\n    if( w != null ) {\n      Greenfoot.stop();\n    }\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class CloudsWorld extends World {\n\n  public CloudsWorld() {\n    super(600, 400, 1, false);\n    prepare();\n  }\n\n  public void act() {\n    generateBackgroundClouds();\n    generateWalls();\n  }\n\n  private void generateBackgroundClouds() {\n    generateActor(5, new Cloud1());\n    generateActor(4, new Cloud2());\n    generateActor(3, new Cloud3());\n  }\n\n  private void generateWalls() {\n    generateActor(5, new Wall());\n  }\n\n  private void generateActor(int chance, Actor a) {\n    if( Greenfoot.getRandomNumber(1000) < chance) {\n      int randY = Greenfoot.getRandomNumber(300) + 50;\n      addObject(a, getWidth()+20, randY);\n    }\n  }\n\n  private void prepare(){\n    Rocket rocket = new Rocket();\n    addObject(rocket, 90, 200);\n  }\n}\n```", "```java\n// NOTE: DO NOT PUT THIS CODE IN YOUR CLOUDSWORLD CLASS\npublic void act() {\n  generateEnemies();\n  generateStars(-1);\n  generatePowerItems();\n  increaseLevel();\n}\n```", "```java\nimport greenfoot.*;\n\npublic abstract class SideScrollingActor extends Actor\n{\n  public int speed = -1; // Moves right to left\n  private static final int BOUNDARY = 100;\n\n  public void act()\n  {\n    move(speed);\n    checkOffScreen();\n  }\n\n  private void checkOffScreen() {\n    if( getX() < -BOUNDARY || getX() > getWorld().getWidth() + BOUNDARY) {\n      getWorld().removeObject(this);\n    }\n  }\n}\n```", "```java\nimport greenfoot.*; \n\npublic class Cloud1 extends SideScrollingActor {\n  private static final int SPEEDRANGE = 3;\n  public Cloud1() {\n    speed = -(Greenfoot.getRandomNumber(SPEEDRANGE) + 1);\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class Obstacle extends SideScrollingActor{\n}\n```", "```java\nimport greenfoot.*; \npublic class Wall extends Obstacle {\n}\n```", "```java\nimport greenfoot.*;\nimport java.util.List;\n\npublic class HikingWorld extends World {\n  private int xOffset = 0;\n  private final static int SWIDTH = 600;\n  private final static int SHEIGHT = 400;\n  private final static int WWIDTH = 2400;\n  private GreenfootImage bimg;\n\n  public HikingWorld() {\n    super(SWIDTH, SHEIGHT, 1, false);\n    bimg = new GreenfootImage(\"HikingWorldBackground.png\");\n    shiftWorld(0);\n    prepare();\n  }\n\n  public void shiftWorld(int dx) {\n    if( (xOffset + dx) <= 0 && (xOffset + dx) >= SWIDTH - WWIDTH) {\n      xOffset = xOffset + dx;\n      shiftWorldBackground(dx);\n      shiftWorldActors(dx);\n    }\n  }\n\n  private void shiftWorldBackground(int dx) {\n    GreenfootImage bkgd = new GreenfootImage(SWIDTH, SHEIGHT);\n    bkgd.drawImage(bimg, xOffset, 0);\n    setBackground(bkgd);\n  }\n\n  private void shiftWorldActors(int dx) {\n    List<ScrollingActor> saList =\n    getObjects(ScrollingActor.class);\n    for( ScrollingActor a : saList ) {\n      a.setAbsoluteLocation(dx);\n    }\n  }\n\n  private void prepare() {\n    HedgeHog hh1 = new HedgeHog();\n    addObject(hh1, 900, 250);\n    Lemur l = new Lemur();\n    addObject(l, 1200, 300);\n    HedgeHog hh2 = new HedgeHog();\n    addObject(hh2, 1500, 250);\n    Lake lake = new Lake();\n    addObject(lake, 2100, 300);\n    Hiker hiker = new Hiker();\n    addObject(hiker, 90, 275);\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class Hiker extends Actor\n{\n  private int speedX = 1;\n  private static final int SPEED = 2;\n  private static final int BOUNDARY = 40;\n\n  public void act() {\n    handleKeyPresses();\n    boundedMove();\n    checkAtLake();\n  }\n\n  private void handleKeyPresses() {\n    handleArrowKey(\"left\", -SPEED);\n    handleArrowKey(\"right\", SPEED);\n  }\n\n  private void handleArrowKey(String k, int sX) {\n    if( Greenfoot.isKeyDown(k) ) {\n      speedX = sX;\n    }\n  }\n\n  private void boundedMove() {\n    if( speedX+getX() <= BOUNDARY ) {\n      setLocation(BOUNDARY, getY());\n      ((HikingWorld)getWorld()).shiftWorld(-speedX);\n    } else if( speedX+getX() >= getWorld().getWidth()-BOUNDARY ) {\n      setLocation(getWorld().getWidth()-BOUNDARY, getY());\n      ((HikingWorld)getWorld()).shiftWorld(-speedX);\n    } else {\n      setLocation(getX()+speedX, getY());\n    }\n    speedX = 0;\n  }\n\n  private void checkAtLake() {\n    // Do something cool if make it to the lake...\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class ScrollingActor extends Actor {\n  public void setAbsoluteLocation(int dx) {\n    setLocation(getX()+dx, getY());\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class HedgeHog extends ScrollingActor {\n}\n```", "```java\nimport greenfoot.*;\nimport java.util.List;\n\npublic class HikingWorld extends World {\n  private int xOffset = 0;\n  private int yOffset = 0;\n  private final static int SWIDTH = 600;\n  private final static int SHEIGHT = 400;\n  private final static int WWIDTH = 1200;\n  private final static int WHEIGHT = 1200;\n  private GreenfootImage bimg;\n\n  public HikingWorld() {  \n    super(SWIDTH, SHEIGHT, 1, false); \n    bimg = new GreenfootImage(\"HikingWorldBackground2D.png\");\n    shiftWorld(0,0);    \n    prepare();\n  }\n\n  public void shiftWorld(int dx, int dy) {\n    if( (xOffset + dx) <= 0 && (xOffset + dx) >= SWIDTH - WWIDTH) {\n      xOffset = xOffset + dx;\n      shiftWorldBackground(dx, 0);\n      shiftWorldActors(dx, 0);\n    }\n    if( (yOffset + dy) <= 0 && (yOffset + dy) >= SHEIGHT - WHEIGHT) {\n      yOffset = yOffset + dy;\n      shiftWorldBackground(0, dy);\n      shiftWorldActors(0, dy);\n    }\n  }\n\n  private void shiftWorldBackground(int dx, int dy) {\n      GreenfootImage bkgd = new GreenfootImage(SWIDTH, SHEIGHT);\n      bkgd.drawImage(bimg, xOffset, yOffset);\n      setBackground(bkgd);\n  }\n\n  private void shiftWorldActors(int dx, int dy) {\n    List<ScrollingActor> saList = getObjects(ScrollingActor.class);\n    for( ScrollingActor a : saList ) {\n      a.setAbsoluteLocation(dx, dy);\n    }\n  }\n\n  private void prepare() {\n    HedgeHog hh1 = new HedgeHog();\n    addObject(hh1, 600, 600);\n    Lemur l = new Lemur();\n    addObject(l, 300, 900);\n    HedgeHog hh2 = new HedgeHog();\n    addObject(hh2, 900, 300);\n    Lake lake = new Lake();\n    addObject(lake, 900, 1100);\n    Hiker hiker = new Hiker();\n    addObject(hiker, 90, 275);\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class Hiker extends Actor {\n  private int speedX = 1;\n  private int speedY = 1;\n  private static final int SPEED = 2;\n  private static final int BOUNDARY = 40;\n\n  public void act() {\n    handleKeyPresses();\n    boundedMove();\n    checkAtLake();\n  }\n\n  private void handleKeyPresses() {\n    handleArrowKey(\"left\", -SPEED, 0);\n    handleArrowKey(\"right\", SPEED, 0);\n    handleArrowKey(\"up\", 0, -SPEED);\n    handleArrowKey(\"down\", 0, SPEED);\n  }\n\n  private void handleArrowKey(String k, int sX, int sY) {\n    if( Greenfoot.isKeyDown(k) ) {\n      speedX = sX;\n      speedY = sY;\n    }\n  }\n\n  private void boundedMove() {\n\n    if( speedX+getX() <= BOUNDARY ) {\n      setLocation(BOUNDARY, getY());\n      ((HikingWorld)getWorld()).shiftWorld(-speedX, 0);\n    } else if( speedX+getX() >= getWorld().getWidth()-BOUNDARY ) {\n      setLocation(getWorld().getWidth()-BOUNDARY, getY());\n      ((HikingWorld)getWorld()).shiftWorld(-speedX, 0);\n    } else {\n      setLocation(getX()+speedX, getY());\n    }\n\n    if( speedY+getY() <= BOUNDARY ) {\n      setLocation(getX(), BOUNDARY);\n      ((HikingWorld)getWorld()).shiftWorld(0, -speedY);\n    } else if( speedY+getY() >= getWorld().getHeight()-BOUNDARY ) {\n      setLocation(getX(), getWorld().getHeight()-BOUNDARY);\n      ((HikingWorld)getWorld()).shiftWorld(0, -speedY);\n    } else {\n      setLocation(getX(), getY()+speedY);\n    }\n    speedX = 0;\n    speedY = 0;\n  }\n\n  private void checkAtLake() {\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class ScrollingActor extends Actor {\n  public void setAbsoluteLocation(int dx, int dy) {\n    setLocation(getX()+dx, getY()+dy);\n  }\n}\n```", "```java\nimport greenfoot.*;\nimport java.util.List;\n\npublic class HikingWorld extends World {\n  private int xOffset = 0;\n  private final static int SWIDTH = 600;\n  private final static int SHEIGHT = 400;\n  private final static int WWIDTH = 1200;\n  private final static int TWIDTH = 25;\n  private final static int THEIGHT = 25;\n\n  private final static String[] WORLD = {\n    \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\",\n    \"BWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWUUWWUUWWUUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWUUWWUUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWUUUUUUWWUUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWUUWWUUWWUUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWUUWWUUWWUUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWB\",\n    \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"\n  };\n\n  public HikingWorld() {\n    super(SWIDTH, SHEIGHT, 1, false);\n    createWorldFromTiles();\n    shiftWorld(0);\n    prepare();\n  }\n\n  public void shiftWorld(int dx) {\n    if( (xOffset + dx) <= 0 && (xOffset + dx) >= SWIDTH - WWIDTH) {\n      xOffset = xOffset+dx;\n      shiftWorldActors(dx);\n    }\n  }\n\n  private void shiftWorldActors(int dx) {\n    List<ScrollingActor> saList =\n    getObjects(ScrollingActor.class);\n    for( ScrollingActor a : saList ) {\n      a.setAbsoluteLocation(dx);\n    }\n  }\n\n  private void createWorldFromTiles() {\n    for( int i=0; i < WORLD.length; i++ ) {\n      for( int j=0; j < WWIDTH/TWIDTH; j++ ) {\n        addActorAtTileLocation(WORLD[i].charAt(j), j, i);\n      }\n    }\n  }\n\n  private void addActorAtTileLocation(char c, int x, int y) {\n    Actor tile = null;\n    switch(c) {\n      case 'W':\n      tile = new WhiteBlock();\n      break;\n      case 'B':\n      tile = new BlackBlock();\n      break;\n      case 'U':\n      tile = new BlueBlock();\n      break;\n    }\n    if( tile != null) \taddObject(tile, 12+x*TWIDTH, 12+y*THEIGHT);\n  }\n\n  private void prepare() {\n    Lake lake = new Lake();\n    addObject(lake, WWIDTH-300, 300);\n    Hiker hiker = new Hiker();\n    addObject(hiker, 90, 275);\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class Hiker extends Actor {\n  private int speedX = 1;\n  private static final int SPEED = 2;\n  private static final int BOUNDARY = 40;\n\n  public void act() {\n    handleKeyPresses();\n    boundedMove();\n    checkAtLake();\n  }\n\n  private void handleKeyPresses() {\n    handleArrowKey(\"left\", -SPEED);\n    handleArrowKey(\"right\", SPEED);\n  }\n\n  private void handleArrowKey(String k, int sX) {\n    if( Greenfoot.isKeyDown(k) ) {\n      speedX = sX;\n    }\n  }\n\n  private void boundedMove() {\n    if( speedX+getX() <= BOUNDARY ) {\n      setLocation(BOUNDARY, getY());\n      ((HikingWorld)getWorld()).shiftWorld(-speedX);\n    } else if( speedX+getX() >= getWorld().getWidth()-BOUNDARY ) {\n      setLocation(getWorld().getWidth()-BOUNDARY, getY());\n      ((HikingWorld)getWorld()).shiftWorld(-speedX);\n    } else {\n      setLocation(getX()+speedX, getY());\n    }\n    speedX = 0;\n  }\n\n  private void checkAtLake() {\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class ScrollingActor extends Actor {\n  public void setAbsoluteLocation(int dx) {\n    setLocation(getX()+dx, getY());\n  }\n}\n```", "```java\nimport greenfoot.*;\n\npublic class BlackBlock extends ScrollingActor {\n}\n```", "```java\nimport greenfoot.*;\n\npublic class Lake extends ScrollingActor {\n}\n```"]