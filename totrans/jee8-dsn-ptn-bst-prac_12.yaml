- en: MicroProfile
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MicroProfile
- en: This chapter will provide an overview of the Eclipse MicroProfile project, covering
    its goals, the expectations of its outcome, when it should be used, and the benefits
    of using it to develop our application. This chapter is only an overview and we
    will not explore how to implement applications using the MicroProfile project.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将概述 Eclipse MicroProfile 项目，包括其目标、预期成果、何时使用以及使用它来开发我们的应用程序的好处。本章仅是一个概述，我们不会探讨如何使用
    MicroProfile 项目实现应用程序。
- en: 'The following is the central topic that will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下将是本章将涵盖的中心主题：
- en: Explaining the Eclipse MicroProfile project approach
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解释 Eclipse MicroProfile 项目方法
- en: Explaining the Eclipse MicroProfile project approach
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解释 Eclipse MicroProfile 项目方法
- en: Today, the use of microservices architecture is rapidly increasing. New tools
    have emerged to facilitate and develop microservice applications using MicroProfile
    patterns and best practices. The Eclipse MicroProfile project was created in order
    to make it possible to develop applications with microservices architecture, using
    the power of Java EE to optimize the Enterprise Java for microservices architecture.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，微服务架构的使用正在迅速增加。出现了新的工具，以促进和开发使用 MicroProfile 模式和最佳实践的微服务应用程序。Eclipse MicroProfile
    项目的创建是为了使使用 Java EE 的力量来优化企业 Java 以适应微服务架构成为可能。
- en: 'The Eclipse MicroProfile project is an umbrella of specs used to develop applications
    with microservices architecture. This umbrella contains some specs of Java EE
    and some proprietary specs (created with Eclipse MicroProfile). With this, the
    Eclipse MicroProfile project allows us to develop microservice applications using
    specifications of Java EE, such as CDI, JAX-RS, and JSON-B. Furthermore, the MicroProfile
    project provides portable microservices architecture across multiple Enterprise
    Java runtimes and permits interoperable microservices architecture, which allows
    communication among polyglot runtimes (not just Java). So far, the current version
    of the Eclipse MicroProfile project is 2.0 and has the following specifications:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile 项目是一系列规范，用于使用微服务架构开发应用程序。这个伞形项目包含一些 Java EE 规范和一些专有规范（由
    Eclipse MicroProfile 创建）。因此，Eclipse MicroProfile 项目允许我们使用 Java EE 规范，如 CDI、JAX-RS
    和 JSON-B，来开发微服务应用程序。此外，MicroProfile 项目在多个企业 Java 运行时之间提供可移植的微服务架构，并允许互操作微服务架构，这允许多语言运行时（不仅仅是
    Java）之间的通信。到目前为止，Eclipse MicroProfile 项目的当前版本是 2.0，具有以下规范：
- en: Eclipse MicroProfile Config 1.3
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile Config 1.3
- en: Eclipse MicroProfile Fault Tolerance 1.1
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile 故障转移 1.1
- en: Eclipse MicroProfile Health Check 1.0
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile 健康检查 1.0
- en: Eclipse MicroProfile JWT Authentication 1.1
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile JWT 认证 1.1
- en: Eclipse MicroProfile Metrics 1.1
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile Metrics 1.1
- en: Eclipse MicroProfile OpenAPI 1.0
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile OpenAPI 1.0
- en: Eclipse MicroProfile OpenTracing 1.1
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile OpenTracing 1.1
- en: Eclipse MicroProfile Rest Client 1.1
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile Rest 客户端 1.1
- en: CDI 2.0
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CDI 2.0
- en: Common Annotations 1.3
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见注解 1.3
- en: JAX-RS 2.1
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JAX-RS 2.1
- en: JSON-B 1.0
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON-B 1.0
- en: JSON-P 1.1
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON-P 1.1
- en: The MicroProfile project was designed to be portable across multiples runtimes,
    but it is only portable if we develop it using the preceding specifications. If
    we use an additional API or framework, portability is not guaranteed. Furthermore,
    the MicroProfile project supports Java 8 but does not support Java 7 and earlier
    versions.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: MicroProfile 项目被设计为可以在多个运行时之间移植，但只有当我们使用前面的规范来开发它时，它才是可移植的。如果我们使用额外的 API 或框架，则可移植性不能保证。此外，MicroProfile
    项目支持 Java 8，但不支持 Java 7 及更早版本。
- en: Eclipse MicroProfile Config 1.3
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile Config 1.3
- en: Applications need to read configurations on the same internal or external location.
    The Eclipse MicroProfile Config 1.3 makes it possible to obtain configuration
    properties from some internal or external sources to the application, made available
    through dependency injection or lookup. With this, we can implement an external
    configuration store pattern and consume the configuration properties. The format
    of configurations can be system properties, system environment variables, `.properties`,
    `.xml`, or data source.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序需要从相同的内部或外部位置读取配置。Eclipse MicroProfile Config 1.3 使得从一些内部或外部来源获取配置属性成为可能，这些属性通过依赖注入或查找提供。通过这种方式，我们可以实现外部配置存储模式并消费配置属性。配置的格式可以是系统属性、系统环境变量、`.properties`、`.xml`
    或数据源。
- en: Eclipse MicroProfile Fault Tolerance 1.1
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile 故障转移 1.1
- en: Applications using a microservices architecture need to have fault tolerance. Fault
    tolerance is about leveraging different strategies to guide the execution and
    the result of logic. Eclipse MicroProfile Fault Tolerance 1.1 provides the ability
    to decouple the business logic from the execution logic separating these logics.
    With this, we can process an API, such as TimeOut, RetryPolicy, Fallback, Bulkhead,
    and Circuit Breaker, which are the most popular concepts used with microservices.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用微服务架构的应用程序需要具备容错能力。容错是关于利用不同的策略来引导逻辑的执行和结果。Eclipse MicroProfile容错1.1提供了将业务逻辑与执行逻辑解耦的能力，分离这些逻辑。有了这个功能，我们可以处理API，如TimeOut、RetryPolicy、Fallback、Bulkhead和Circuit
    Breaker，这些都是与微服务一起使用的最流行概念。
- en: Eclipse MicroProfile Health Check 1.0
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile健康检查1.0
- en: In a microservices architecture, the ability to promote a health check of services
    is very important when it comes to detecting faults. Eclipse MicroProfile Health
    Check 1.0 provides the ability to verify the state of a computing node from another
    machine. With this, we can implement the health endpoint monitoring patternusing
    a MicroProfile project feature, as described in [Chapter 11](2f8a0a53-0ca6-4f8f-8248-d62db3021f4c.xhtml),* Operational
    Patterns.*
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在微服务架构中，当涉及到检测故障时，提升服务健康检查的能力非常重要。Eclipse MicroProfile健康检查1.0提供了从另一台机器验证计算节点状态的能力。有了这个功能，我们可以使用MicroProfile项目功能实现健康端点监控模式，如第11章[2f8a0a53-0ca6-4f8f-8248-d62db3021f4c.xhtml]中所述的*操作模式*。
- en: Eclipse MicroProfile JWT authentication 1.1
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile JWT身份验证1.1
- en: Today, microservices architecture is most commonly implemented using the RESTful
    architecture style. However, the RESTful architecture style works with stateless
    services and does not provide its own security. Thus, the most common practice
    is to create services with token-based security. Eclipse MicroProfile JWT Authentication
    1.1 provides **role-based access control** (**RBAC**), microservice endpoints
    using **OpenID Connect** (**OIDC**), and **JSON Web Tokens** (**JWT**).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，微服务架构最常使用的是RESTful架构风格。然而，RESTful架构风格与无状态服务协同工作，并且不提供自身的安全性。因此，最常见的做法是创建基于令牌的安全服务。Eclipse
    MicroProfile JWT身份验证1.1提供了**基于角色的访问控制**（**RBAC**），使用**OpenID Connect**（**OIDC**）的微服务端点，以及**JSON
    Web Tokens**（**JWT**）。
- en: Eclipse MicroProfile Metrics 1.1
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile指标1.1
- en: Metrics are very important to microservices architecture. This is because they
    allow us to better evaluate our services. Eclipse MicroProfile Metrics 1.1 provides
    a unified way for MicroProfile servers to export monitoring data to management
    agents. Metrics will also provide a common Java API for exposing their telemetry
    data. This feature can be used to generate information about the application,
    making it possible to implement the health endpoint monitoring pattern in order
    to allow this pattern to evaluate our services better.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 指标对于微服务架构非常重要。这是因为它们使我们能够更好地评估我们的服务。Eclipse MicroProfile指标1.1为MicroProfile服务器提供了一个统一的出口，将监控数据导出到管理代理。指标还将提供一个通用的Java
    API，用于公开它们的遥测数据。这个功能可以用来生成有关应用程序的信息，使得能够实现健康端点监控模式，以便更好地评估我们的服务。
- en: Eclipse MicroProfile OpenAPI 1.0
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile OpenAPI 1.0
- en: When we develop a microservice application, we create services that communicate
    between themselves. With this, the API documentation is very important for minimizing
    errors by not knowing the contract. Consequently, the Eclipse MicroProfile OpenAPI
    1.0 provides a unified Java API for the OpenAPI v3 specification that all application
    developers can use to expose their API documentation. We can, therefore, create
    a contract between services, and the API is exposed.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们开发微服务应用程序时，我们创建相互通信的服务。因此，API文档对于通过不了解合同来最小化错误非常重要。因此，Eclipse MicroProfile
    OpenAPI 1.0提供了一个统一的Java API，用于OpenAPI v3规范，所有应用程序开发者都可以使用它来公开他们的API文档。因此，我们可以创建服务之间的合同，并且API被公开。
- en: Eclipse MicroProfile OpenTracing 1.1
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile OpenTracing 1.1
- en: In a microservice application, analyzing or debugging operation workflows is
    difficult. To facilitate debugging, we can use OpenTracing. OpenTracing is a standard
    API for instrumenting microservices for distributed tracing, which helps to troubleshoot
    microservices by examining and logging requests as they propagate through a distributed
    system.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在微服务应用程序中，分析或调试操作工作流是困难的。为了便于调试，我们可以使用OpenTracing。OpenTracing是一个用于分布式跟踪的微服务仪器化标准API，它通过检查和记录请求在分布式系统中传播来帮助调试微服务。
- en: Eclipse MicroProfile OpenTracing 1.1 defines an API and associated behaviors
    that allow services to easily participate in a distributed tracing environment.
    With this, we can analyze or debug a workflow of operations without adding any
    code in order to complete the tracing.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile OpenTracing 1.1 定义了一个 API 和相关的行为，允许服务轻松参与分布式跟踪环境。有了这个，我们可以分析或调试操作的工作流程，而无需添加任何代码以完成跟踪。
- en: Eclipse MicroProfile REST Client 1.1
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile REST Client 1.1
- en: In a microservices architecture, communication is generally effected by an HTTP
    protocol using RESTful. We then need to create a client that sends an HTTP request obeying
    the defined contract. In this case, the Eclipse MicroProfile REST client provides
    a type-safe approach for invoking RESTful services over HTTP. The MicroProfile
    REST client builds upon the JAX-RS 2.1 APIs for consistency and ease of use.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在微服务架构中，通信通常是通过 HTTP 协议使用 RESTful 实现的。然后我们需要创建一个客户端，该客户端发送遵守定义合同的 HTTP 请求。在这种情况下，Eclipse
    MicroProfile REST 客户端提供了一种类型安全的调用 HTTP 上 RESTful 服务的途径。MicroProfile REST 客户端基于
    JAX-RS 2.1 API，以确保一致性和易用性。
- en: CDI 2.0
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CDI 2.0
- en: The MicroProfile project has a Java EE specification embedded inside itself.
    One of these specifications is CDI, which provides the base for a growing number
    of APIs included in MicroProfile 2.0\. The use of implementations beyond CDI 2.0
    in MicroProfile is allowed but not required, as of version 2.0 of MicroProfile.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: MicroProfile 项目在其内部嵌入了一个 Java EE 规范。其中之一是 CDI，它为 MicroProfile 2.0 中包含的越来越多的
    API 提供了基础。自 MicroProfile 2.0 版本起，允许使用 CDI 2.0 以外的实现，但不是必需的。
- en: Common annotations 1.3
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见注释 1.3
- en: The MicroProfile project has some Java EE specifications embedded inside itself.
    One of these specifications is Common annotations, which provides annotations
    for common semantic concepts across a variety of individual technologies in the
    Java SE and Java EE platforms. The use of implementations beyond Common annotations
    1.3 in MicroProfile is allowed but not required, as of version 2.0 of MicroProfile.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: MicroProfile 项目在其内部嵌入了一些 Java EE 规范。其中之一是常见注释，它为 Java SE 和 Java EE 平台上的各种个别技术提供了跨多种语义概念的注释。自
    MicroProfile 2.0 版本起，允许使用 Common annotations 1.3 以外的实现，但不是必需的。
- en: JAX-RS 2.1
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JAX-RS 2.1
- en: The Eclipse MicroProfile project has Java EE specifications embedded inside
    itself. One of these specifications is JAX-RS, which provides both standard client
    and server APIs for RESTful communication by MicroProfile 2.0 applications. The
    use of implementations beyond JAX-RS 2.1 in MicroProfile is allowed but not required,
    as of version 2.0 of MicroProfile.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile 项目在其内部嵌入了一些 Java EE 规范。其中之一是 JAX-RS，它为 MicroProfile 2.0
    应用程序提供了标准客户端和服务器 API，用于 RESTful 通信。自 MicroProfile 2.0 版本起，允许使用 JAX-RS 2.1 以外的实现，但不是必需的。
- en: JSON-B 1.0
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JSON-B 1.0
- en: Another of the Java EE specifications embedded in the MicroProfile project is
    JSON-B, which is included as part of MicroProfile 2.0 to provide standard APIs
    for binding JSON documents to Java code. The use of implementations beyond JSON-B
    1.0 in MicroProfile is allowed but not required, as of version 2.0 of MicroProfile.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: MicroProfile 项目中嵌入的另一个 Java EE 规范是 JSON-B，它作为 MicroProfile 2.0 的一部分包含在内，旨在提供将
    JSON 文档绑定到 Java 代码的标准 API。自 MicroProfile 2.0 版本起，允许使用 JSON-B 1.0 以外的实现，但不是必需的。
- en: JSON-P 1.1
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JSON-P 1.1
- en: Another Java EE specification embedded in The MicroProfile project is JSON-P,
    which is part of MicroProfile 2.0 and designed to provide standard APIs for processing
    JSON documents. The use of implementations beyond JSON-P 1.1 in MicroProfile is
    allowed but not required, as of version 2.0 of MicroProfile.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: MicroProfile 项目中嵌入的另一个 Java EE 规范是 JSON-P，它是 MicroProfile 2.0 的一部分，旨在提供处理 JSON
    文档的标准 API。自 MicroProfile 2.0 版本起，允许使用 JSON-P 1.1 以外的实现，但不是必需的。
- en: Why should we use the MicroProfile project?
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我们应该使用 MicroProfile 项目？
- en: Using the MicroProfile project, we can create applications with microservices
    architecture using features of Java EE and running on Java EE runtimes. Furthermore,
    using MicroProfiles means that we can create applications with features of metrics,
    fault tolerance, documentation, separate configurations of the application, and
    easy debugging, including a decoupled business code from the code of these features.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 MicroProfile 项目，我们可以利用 Java EE 的特性创建具有微服务架构的应用程序，并在 Java EE 运行时上运行。此外，使用
    MicroProfiles 意味着我们能够创建具有指标、容错、文档、应用程序的独立配置以及易于调试等特性的应用程序，包括将业务代码与这些特性的代码解耦。
- en: Java EE is a widely-tested umbrella of specifications. The idea behind using
    these specifications to create applications with microservices architecture is
    highly beneficial; the use of specifications makes users free from vendors and
    also makes the application portable across runtimes.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 是一套经过广泛测试的规范。使用这些规范来创建具有微服务架构的应用程序的想法非常有益；使用规范使用户免受供应商的约束，同时也使应用程序能够在不同的运行时之间移植。
- en: Community
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社区
- en: The Eclipse MicroProfile project is maintained by the MicroProfile community
    ([http://microprofile.io/](http://microprofile.io/)), which is a semi-new community.
    The main players in this group are IBM, Red Hat, Tomitribe, Payara, the **London
    Java Community** (**LJC**), and SouJava. The aim of this project is to be a community-based
    project. It also aims to iterate and innovate in short cycles, get community approval,
    release a new version, and repeat. With the growth of applications developed with
    a microservices architecture, the use of MicroProfile will increase and other
    features will also be introduced, ultimately growing the power of MicroProfile.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile 项目由 MicroProfile 社区（[http://microprofile.io/](http://microprofile.io/））维护，这是一个半新的社区。这个群体中的主要参与者包括
    IBM、Red Hat、Tomitribe、Payara、**伦敦 Java 社区**（**LJC**）和 SouJava。这个项目的目标是成为一个基于社区的项目。它还旨在在短时间内迭代和创新，获得社区批准，发布新版本，并重复这个过程。随着使用微服务架构开发的应用程序的增长，MicroProfile
    的使用将增加，还将引入其他功能，最终增强 MicroProfile 的能力。
- en: Future work
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 未来工作
- en: 'The Eclipse MicroProfile project has supported some Java EE specifications,
    but the aim is to grow this support and add other Java EE specifications. The
    expectation is that the following specifications are the next to be inserted into
    the MicroProfile project:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse MicroProfile 项目支持了一些 Java EE 规范，但目标是扩大这种支持并添加其他 Java EE 规范。预期以下规范将是下一个被纳入
    MicroProfile 项目的：
- en: JCache
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JCache
- en: Persistence
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持久化
- en: Bean validation
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bean 验证
- en: WebSockets
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WebSockets
- en: Summary
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at an overview of the Eclipse MicroProfile project.
    Within this overview, we discussed what the Eclipse MicroProfile project is, what
    its specifications are, why we use the MicroProfile project, and what future developments
    are in store for the Eclipse MicroProfile project.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们概述了 Eclipse MicroProfile 项目。在这个概述中，我们讨论了 Eclipse MicroProfile 项目是什么，它的规范是什么，为什么我们使用
    MicroProfile 项目，以及 Eclipse MicroProfile 项目的未来发展方向。
- en: This chapter is only intended to be an overview and doesn't aim to teach us
    how to use MicroProfile. If you want to learn more about the Eclipse MicroProfile
    project, please visit [https://projects.eclipse.org/projects/technology.microprofile/releases/microprofile-2.0](https://projects.eclipse.org/projects/technology.microprofile/releases/microprofile-2.0).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 本章仅作为一个概述，并不旨在教我们如何使用 MicroProfile。如果您想了解更多关于 Eclipse MicroProfile 项目的信息，请访问
    [https://projects.eclipse.org/projects/technology.microprofile/releases/microprofile-2.0](https://projects.eclipse.org/projects/technology.microprofile/releases/microprofile-2.0)。
