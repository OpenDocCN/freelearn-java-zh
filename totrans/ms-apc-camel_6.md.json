["```java\npublic interface Component extends CamelContextAware {\n\n   Endpoint createEndpoint(String uri) throws Exception;\n\n   EndpointConfiguration createConfiguration(String uri) throws Exception;\n\n   ComponentConfiguration createComponentConfiguration();\n\n   boolean useRawUri();\n\n}\n```", "```java\nMockComponent mockComponent = new MockComponent();\ncamelContext.addComponent(\"mock\", mockComponent);\ncamelContext.addComponent(\"my\", mockComponent);\n```", "```java\nclass=com.packt.camel.MyComponent\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<blueprint >\n\n  <bean class=\"com.packt.camel.MyComponent\">\n  </bean>\n\n  <camelContext >\n  </camelContext>\n\n</blueprint>\n```", "```java\nfrom(\"my:options\")\n```", "```java\npublic interface Endpoint extends IsSingleton, Service {\n\nString getEndpointUri();\n\nEndpointConfiguration getEndpointConfiguration();\n\nProducer createProducer() throws Exception;\n\nConsumer createConsumer(Processor processor) throws Exception;\n\nPollingConsumer createPollingConsumer() throws Exception;\n\n}\n```", "```java\n<to uri=\"my:option\"/>\n```", "```java\n<from uri=\"my:option\"/>\n```", "```java\n$ bin/karaf\n\n```", "```java\nkaraf@root()> feature:repo-add camel 2.12.4\nkaraf@root()> feature:install camel-blueprint\nkaraf@root()> feature:install camel-jetty\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<blueprint >\n\n  <camelContext >\n      <route>\n          <from uri=\"jetty:http://0.0.0.0:8181/poll\"/>\n          <pollEnrich uri=\"file:/tmp/in\"/>\n          <to uri=\"log:poller\"/>\n      </route>\n  </camelContext>\n\n</blueprint>\n```", "```java\nHello chapter6a\n```", "```java\n2015-01-06 15:00:16,291 | INFO  | qtp827039346-71  | poller | 70 - org.apache.camel.camel-core - 2.12.4 | Exchange[ExchangePattern: InOut, BodyType: org.apache.camel.component.file.GenericFile, Body: [Body is file based: GenericFile[/tmp/in/test.txt]]]\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project  \nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.packt.camel.component</groupId>\n  <artifactId>camel-packt</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <packaging>bundle</packaging>\n\n  <properties>\n      <camel.version>2.12.4</camel.version>\n  </properties>\n\n  <dependencies>\n      <dependency>\n          <groupId>org.apache.camel</groupId>\n          <artifactId>camel-core</artifactId>\n          <version>${camel.version}</version>\n      </dependency>\n      <dependency>\n          <groupId>org.slf4j</groupId>\n          <artifactId>slf4j-api</artifactId>\n          <version>1.7.7</version>\n      </dependency>\n  </dependencies>\n\n  <build>\n      <plugins>\n          <plugin>\n              <groupId>org.apache.felix</groupId>\n              <artifactId>maven-bundle-plugin</artifactId>\n              <extensions>true</extensions>\n              <version>2.3.7</version>\n              <configuration>\n                  <instructions>\n                      <Import-Package>\n                          org.slf4j;resolution:=optional,\n                          *\n                      </Import-Package>\n                      <Export-Package>\n                          com.packt.camel.component*\n                      </Export-Package>\n                      <Export-Service>\n                          org.apache.camel.spi.ComponentResolver;component=packt\n                      </Export-Service>\n                  </instructions>\n              </configuration>\n          </plugin>\n      </plugins>\n  </build>\n\n</project>\n```", "```java\nclass=com.packt.camel.component.PacktComponent\n```", "```java\npackage com.packt.camel.component;\n\nimport org.apache.camel.CamelContext;\nimport org.apache.camel.Endpoint;\nimport org.apache.camel.impl.DefaultComponent;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.util.Map;\n\npublic class PacktComponent extends DefaultComponent {\n\n  private final static Logger LOGGER = LoggerFactory.getLogger(PacktComponent.class);\n\n  public PacktComponent() {\n      LOGGER.debug(\"Creating Packt Camel Component\");\n  }\n\n  public PacktComponent(CamelContext camelContext) {\n      super(camelContext);\n      LOGGER.debug(\"Creating Packt Camel Component\");\n  }\n\n  @Override\n  protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n      LOGGER.debug(\"Creating Packt Camel Endpoint\");\n      PacktEndpoint packtEndpoint = new PacktEndpoint(uri, this);\n      setProperties(packtEndpoint, parameters);\n      return packtEndpoint;\n  }\n\n}\n```", "```java\npackage com.packt.camel.component;\n\nimport org.apache.camel.Component;\nimport org.apache.camel.Processor;\nimport org.apache.camel.impl.DefaultEndpoint;\n\npublic class PacktEndpoint extends DefaultEndpoint {\n\n  public PacktEndpoint(String uri, Component component) {\n      super(uri, component);\n  }\n\n  public PacktProducer createProducer() {return new PacktProducer(this);\n  }\n\n  public PacktConsumer createConsumer(Processor processor) throws Exception {\n      return new PacktConsumer(this, processor);\n  }\n\n  public boolean isSingleton() {\n      return false;\n  }\n\n}\n```", "```java\npackage com.packt.camel.component;\n\nimport org.apache.camel.Endpoint;\nimport org.apache.camel.Exchange;\nimport org.apache.camel.ExchangePattern;\nimport org.apache.camel.Processor;\nimport org.apache.camel.impl.DefaultConsumer;\nimport org.apache.camel.impl.DefaultExchange;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.ServerSocket;\nimport java.net.Socket;\n\npublic class PacktConsumer extends DefaultConsumer {\n\n  private final static Logger LOGGER = LoggerFactory.getLogger(PacktConsumer.class);\n\n  private ServerSocket serverSocket;\n\n  public PacktConsumer(Endpoint endpoint, Processor processor) throws Exception {\n      super(endpoint, processor);\n      serverSocket = new ServerSocket(4444);\n      LOGGER.debug(\"Creating Packt Consumer ...\");\n  }\n\n  @Override\n  protected void doStart() throws Exception {\n      LOGGER.debug(\"Starting Packt Consumer ...\");\n      new Thread(new AcceptThread()).start();\n      super.doStart();\n  }\n\n  @Override\n  protected void doStop() throws Exception {\n      super.doStop();\n      LOGGER.debug(\"Stopping Packt Consumer ...\");\n      if (serverSocket != null) {\n          serverSocket.close();\n      }\n  }\n\n  class AcceptThread implements Runnable {\n\n      public void run() {\n          while (true) {\n            // create the exchange\n            Exchange exchange = new DefaultExchange(getEndpoint(), ExchangePattern.InOut);\n            Socket clientSocket = null;\n            try {\n                clientSocket = serverSocket.accept();\n                PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);\n                BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\n                String inputLine = in.readLine();\n                if (inputLine != null) {\n                    LOGGER.debug(\"Get input line: {}\", inputLine);\n                    exchange.getIn().setBody(inputLine, String.class);\n                    // send the exchange to the next processor\n                    getProcessor().process(exchange);\n                    // get out message\n                    String response = exchange.getOut().getBody(String.class);\n                    if (response == null) {\n                        response = exchange.getIn().getBody(String.class);\n                    }\n                    if (response != null) {\n                        out.println(response);\n                    }\n                }\n            } catch (Exception e) {\n                exchange.setException(e);\n            } finally {\n                if (clientSocket != null) {\n                    try {\n                        clientSocket.close();\n                    } catch (Exception e) {\n                        // nothing to do\n                    }\n                }\n            }\n        }\n    }\n\n  }\n\n}\n```", "```java\npackage com.packt.camel.component;\n\nimport org.apache.camel.Endpoint;\nimport org.apache.camel.Exchange;\nimport org.apache.camel.impl.DefaultProducer;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.Socket;\n\npublic class PacktProducer extends DefaultProducer {\n\n  private final static Logger LOGGER = LoggerFactory.getLogger(PacktProducer.class);\n\n  public PacktProducer(Endpoint endpoint) {\n    super(endpoint);\n    LOGGER.debug(\"Creating Packt Producer ...\");\n}\n\n  public void process(Exchange exchange) throws Exception {\n      LOGGER.debug(\"Processing exchange\");\n      String input = exchange.getIn().getBody(String.class);\n      LOGGER.debug(\"Get input: {}\", input);\n      LOGGER.debug(\"Connecting to socket on localhost:4444\");\n      Socket socket = new Socket(\"localhost\", 4444);\n      PrintWriter out = new PrintWriter(socket.getOutputStream(), true);\n      BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n      out.println(input);\n      String fromServer = in.readLine();\n      LOGGER.debug(\"Get reply from server: {}\", fromServer);\n      LOGGER.debug(\"Populating the exchange\");\n      exchange.getIn().setBody(fromServer, String.class);\n  }\n\n}\n```", "```java\n$ mvn clean install\n[INFO] Scanning for projects...\n[INFO] \n[INFO] --------------------------------------------------------------\n[INFO] Building camel-packt 1.0-SNAPSHOT\n[INFO] --------------------------------------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ camel-packt ---\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ camel-packt ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 1 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ camel-packt ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 4 source files to /home/jbonofre/Workspace/sample/chapter6b/target/classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ camel-packt ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /home/jbonofre/Workspace/sample/chapter6b/src/test/resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ camel-packt ---\n[INFO] No sources to compile\n[INFO]\n[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ camel-packt ---\n[INFO] No tests to run.\n[INFO]\n[INFO] --- maven-bundle-plugin:2.3.7:bundle (default-bundle) @ camel-packt ---\n[INFO]\n[INFO] --- maven-install-plugin:2.5.1:install (default-install) @ camel-packt ---\n[INFO] Installing /home/jbonofre/Workspace/sample/chapter6b/target/camel-packt-1.0-SNAPSHOT.jar to /home/jbonofre/.m2/repository/com/packt/camel/component/camel-packt/1.0-SNAPSHOT/camel-packt-1.0-SNAPSHOT.jar\n[INFO] Installing /home/jbonofre/Workspace/sample/chapter6b/pom.xml to /home/jbonofre/.m2/repository/com/packt/camel/component/camel-packt/1.0-SNAPSHOT/camel-packt-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --- maven-bundle-plugin:2.3.7:install (default-install) @ camel-packt ---\n[INFO] Installing com/packt/camel/component/camel-packt/1.0-SNAPSHOT/camel-packt-1.0-SNAPSHOT.jar\n[INFO] Writing OBR metadata\n[INFO] --------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] --------------------------------------------------------------\n[INFO] Total time: 2.105s\n[INFO] Finished at: Fri Jan 09 10:59:35 CET 2015\n[INFO] Final Memory: 15M/303M\n[INFO] --------------------------------------------------------------\n\n```", "```java\n$ bin/karaf\nkaraf@root()> feature:repo-add camel 2.12.4\nAdding feature url mvn:org.apache.camel.karaf/apache-camel/2.12.4/xml/features\nkaraf@root()> feature:install camel-blueprint\n\n```", "```java\nkaraf@root()> bundle:install mvn:com.packt.camel.component/camel-packt/1.0-SNAPSHOT\nBundle ID: 73\nkaraf@root()> bundle:start 73\n\n```", "```java\nkaraf@root()> la|grep -i packt\n73 | Active   |  80 | 1.0.0.SNAPSHOT  | camel-packt\n\n```", "```java\nkaraf@root()> bundle:services 73\n\ncamel-packt (73) provides:\n--------------------------\n[org.apache.camel.spi.ComponentResolver]\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<blueprint >\n\n      <camelContext >\n              <route id=\"server\">\n                      <from uri=\"packt:server\"/>\n                      <to uri=\"log:server\"/>\n                      <setBody><simple>Echo ${body}</simple></setBody>\n              </route>\n              <route id=\"client\">\n                      <from uri=\"timer:fire?period=5000\"/>\n                      <setBody><constant>chapter6b</constant></setBody>\n                      <to uri=\"packt:client\"/>\n                      <to uri=\"log:client\"/>\n              </route>\n      </camelContext>\n\n</blueprint>\n```", "```java\n2015-01-09 11:58:25,758 | INFO  | Thread-16      | server | 70 - org.apache.camel.camel-core - 2.12.4 | Exchange[ExchangePattern: InOut, BodyType: String, Body: chapter6b]\n2015-01-09 11:58:25,771 | INFO  | 1 - timer://fire | client | 70 - org.apache.camel.camel-core - 2.12.4 | Exchange[ExchangePattern: InOnly, BodyType: String, Body: Echo chapter6b]\n2015-01-09 11:58:30,741 | INFO  | Thread-16 | server | 70 - org.apache.camel.camel-core - 2.12.4 | Exchange[ExchangePattern: InOut, BodyType: String, Body: chapter6b]\n2015-01-09 11:58:30,742 | INFO  | 1 - timer://fire | client | 70 - org.apache.camel.camel-core - 2.12.4 | Exchange[ExchangePattern: InOnly, BodyType: String, Body: Echo chapter6b]\n\n```"]