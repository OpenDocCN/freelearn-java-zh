["```java\n    docker run -d --name consul -p 8500:8500 consul\n    ```", "```java\n    micronaut:\n      application:\n        name: pet-owner\n      router:\n        static-resources:\n          swagger:\n            paths: classpath:META-INF/swagger\n            mapping: /swagger/**\n    datasources:\n      default:\n        url: \"jdbc:postgresql://localhost:5432/postgres\"\n        username: postgres\n        password: postgres\n        driverClassName: org.postgresql.Driver\n    jpa:\n      default:\n        entity-scan:\n          packages:\n            - com.packtpub.micronaut.domain\n        properties:\n          hibernate:\n            show_sql: false\n            dialect: org.hibernate.dialect.PostgreSQL95Dialect\n            enable_lazy_load_no_trans: true\n    ```", "```java\n<dependency>\n   <groupId>io.micronaut</groupId>\n   <artifactId>micronaut-discovery-client</artifactId>\n</dependency>\n```", "```java\nmicronaut:\n  application:\n    name: pet-owner\n  config-client:\n    enabled: true\nconsul:\n  client:\n    config:\n      enabled: true\n      format: yaml\n      defaultZone: «${CONSUL_HOST:localhost}:${CONSUL_PORT:8500}»\n      path: \"config/pet-owner/\"\n    registration:\n      enabled: true\n```", "```java\n<!-- Swagger -->\n<dependency>\n  <groupId>io.swagger.core.v3</groupId>\n  <artifactId>swagger-annotations</artifactId>\n  <version>${swagger.version}</version>\n  <scope>compile</scope>\n</dependency>\n```", "```java\n<path>\n  <groupId>io.micronaut.openapi</groupId>\n  <artifactId>micronaut-openapi</artifactId>\n  <version>2.3.1</version>\n</path>\n```", "```java\n@OpenAPIDefinition(\n    info = @Info(\n        title = \"pet-owner-service\",\n        version = \"1.0\",\n        description = \"Pet Owner APIs\"\n    )\n)\n@Singleton\npublic class Application {\n…\n}\n```", "```java\n<!-- Service discovery -->\n    <dependency>\n      <groupId>io.micronaut</groupId>\n      <artifactId>micronaut-discovery-client</artifactId>\n    </dependency>\n```", "```java\nconsul:\n  client:\n    registration:\n      enabled: true\n```", "```java\n@Client(id = \"pet-owner\")\npublic interface OwnerResourceClient {\n    @Post(\"/api/owners\")\n    HttpResponse<OwnerDTO> createOwner(@Body OwnerDTO \n     ownerDTO);\n    @Put(\"/api/owners\")\n    HttpResponse<OwnerDTO> updateOwner(@Body OwnerDTO \n     ownerDTO);\n    @Get(\"/api/owners\")\n    HttpResponse<List<OwnerDTO>> getAllOwners(HttpRequest \n     request, Pageable pageable);\n    @Get(\"/api/owners/{id}\")\n    Optional<OwnerDTO> getOwner(@PathVariable Long id);\n    @Delete(\"/api/owners/{id}\")\n    HttpResponse deleteOwner(@PathVariable Long id);\n}\n```", "```java\n@Controller(\"/api\")\npublic class OwnerResourceClientController {\n    @Inject\n    OwnerResourceClient ownerResourceClient;\n    @Post(\"/owners\")\n    public HttpResponse<OwnerDTO> createOwner(OwnerDTO \n     ownerDTO) {\n        return ownerResourceClient.createOwner(ownerDTO);\n    }\n    @Put(\"/owners\")\n    HttpResponse<OwnerDTO> updateOwner(@Body OwnerDTO \n      ownerDTO) {\n        return ownerResourceClient.updateOwner(ownerDTO);\n    }\n    @Get(\"/owners\")\n    public HttpResponse<List<OwnerDTO>> \n     getAllOwners(HttpRequest request, Pageable pageable) {\n        return ownerResourceClient.getAllOwners(request, \n         pageable);\n    }\n    @Get(\"/owners/{id}\")\n    public Optional<OwnerDTO> getOwner(@PathVariable Long \n     id) {\n        return ownerResourceClient.getOwner(id);\n    }\n    @Delete(\"/owners/{id}\")\n    HttpResponse deleteOwner(@PathVariable Long id) {\n        return ownerResourceClient.deleteOwner(id);\n    }\n}\n```", "```java\n@Client(id = \"pet-clinic\")\npublic interface VetResourceClient {\n    @Post(\"/api/vets\")\n    HttpResponse<VetDTO> createVet(@Body VetDTO vetDTO);\n    @Put(\"/api/vets\")\n    HttpResponse<VetDTO> updateVet(@Body VetDTO vetDTO);\n    …\n}\n```", "```java\n@Controller(\"/api\")\npublic class VetResourceClientController {\n    @Inject\n    VetResourceClient vetResourceClient;\n    @Post(\"/vets\")\n    public HttpResponse<VetDTO> createVet(VetDTO vetDTO) {\n        return vetResourceClient.createVet(vetDTO);\n    }\n    @Put(\"/vets\")\n    public HttpResponse<VetDTO> updateVet(VetDTO vetDTO) {\n        return vetResourceClient.updateVet(vetDTO);\n    }\n    …\n}\n```", "```java\n@Client(id = \"pet-clinic-reviews\")\npublic interface VetReviewResourceClient {\n    @Post(\"/api/vet-reviews\")\n    HttpResponse<VetReviewDTO> createVetReview(@Body \n      VetReviewDTO vetReviewDTO);\n    @Put(\"/api/vet-reviews\")\n    HttpResponse<VetReviewDTO> updateVetReview(@Body \n     VetReviewDTO vetReviewDTO);\n    …\n}\n```", "```java\n@Controller(\"/api\")\npublic class VetReviewResourceClientController {\n    @Inject\n    VetReviewResourceClient vetReviewResourceClient;\n    @Post(\"/vet-reviews\")\n    public HttpResponse<VetReviewDTO> \n     createVetReview(VetReviewDTO vetReviewDTO) {\n        return vetReviewResourceClient.createVetReview\n         (vetReviewDTO);\n    }\n    @Put(\"/vet-reviews\")\n    public HttpResponse<VetReviewDTO> \n     updateVetReview(VetReviewDTO vetReviewDTO) {\n        return vetReviewResourceClient.updateVetReview\n         (vetReviewDTO);\n    }\n    …\n}\n```", "```java\n@Retryable(attempts = \"5\", delay = \"2s\", multiplier = \"1.5\", maxDelay = \"20s\")\n@Client(id = \"pet-owner\")\npublic interface OwnerResourceClient {\n  …\n}\n```", "```java\n@Client(id = \"pet-owner\")\n@CircuitBreaker(delay = \"5s\", attempts = \"3\", multiplier = \"2\", reset = \"300s\")\npublic interface PetResourceClient {\n    @Post(\"/api/pets\")\n    HttpResponse<PetDTO> createPet(@Body PetDTO petDTO);\n    @Put(\"/api/pets\")\n    HttpResponse<PetDTO> updatePet(@Body PetDTO petDTO);\n    …\n}\n```", "```java\n@Fallback\npublic class PetResourceFallback implements PetResourceClient {\n    @Override\n    public HttpResponse<PetDTO> createPet(PetDTO petDTO) {\n        return HttpResponse.ok();\n    }\n    @Override\n    public HttpResponse<PetDTO> updatePet(PetDTO petDTO) {\n        return HttpResponse.ok();\n    }\n    @Override\n    public HttpResponse<List<PetDTO>> \n      getAllPets(HttpRequest request, Pageable pageable) {\n        return HttpResponse.ok();\n    }\n    @Override\n    public Optional<PetDTO> getPet(Long id) {\n        return Optional.empty();\n    }\n    @Override\n    public HttpResponse deletePet(Long id) {\n        return HttpResponse.noContent();\n    }\n}\n```"]