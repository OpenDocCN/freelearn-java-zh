- en: Preparing the Environment and Running Code Samples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The instructions in this chapter are based on our experience of installing JDK
    and SBT and running code samples in late 2018\. Installation instructions like
    this usually become outdated as soon as they are published because of the rapid
    pace at which the software is updated; please bear this in mind as you work through
    this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Installing software
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The recommended way to install JDK, Scala, and SBT is by using the SDK manager
    available at [https://sdkman.io](https://sdkman.io). Please refer to the instructions
    on the web page to complete the installation.
  prefs: []
  type: TYPE_NORMAL
- en: Further, we'll describe the process of manual installation for Java and SBT.
    For your convenience, we've packaged the commands represented in further screenshots
    as scripts for OS X and Linux and made them available in the `Appendix` folder
    in the GitHub repository at: [https://github.com/PacktPublishing/Learn-Scala-Programming/tree/master/Appendix](https://github.com/PacktPublishing/Learn-Scala-Programming/tree/master/Appendix)[.](https://github.com/PacktPublishing/Learn-Scala---Fundamentals-of-Scala-2.13/tree/master/appendix_a)
  prefs: []
  type: TYPE_NORMAL
- en: Installing Java Virtual Machine (JVM)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At the moment, as of writing this, the last available JDK version available
    at [http://jdk.java.net](http://jdk.java.net) was 11\. Scala 2.13 requires Java
    1.8+.
  prefs: []
  type: TYPE_NORMAL
- en: It is possible to install Java on Linux or macOS X platforms by using one of
    the existing tools, such as `apt` or `yum`, using the package manager for Linux
    or `brew` for an OS X environment. Please use the help pages and guides available
    for the respective tools if you intend to install the JDK this way.
  prefs: []
  type: TYPE_NORMAL
- en: 'The manual installation of Java consists of three steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the package from the internet. The choice of distribution files
    for different platforms is offered at [http://jdk.java.net/11/](http://jdk.java.net/11/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Extracting the installation file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Updating the environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'With Linux or OS X, you can use the following sequence of shell commands to
    perform all these steps, as shown in the next two screenshots:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d7d75094-6d8d-4804-893b-cba9b1cd1b99.png)'
  prefs: []
  type: TYPE_IMG
- en: Installing JDK 11 in OS X
  prefs: []
  type: TYPE_NORMAL
- en: 'The installation flow in Linux is so similar that we have even refrained from
    putting arrows into the screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/33be544f-24d2-43a4-bd9d-1c845eefb4da.png)'
  prefs: []
  type: TYPE_IMG
- en: The same steps in Linux
  prefs: []
  type: TYPE_NORMAL
- en: On Windows, you'll need to use the web browser to download the installation
    package, the file navigator to unpack it, and system settings to update the path
    variable. Please be aware that Java 11 is only available as a 64-bit version,
    so if you have a 32-bit system you have to install one of the previous versions
    of the JVM.
  prefs: []
  type: TYPE_NORMAL
- en: 'Please follow the steps outlined in the following screenshots to perform the
    setup:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, download the installation file from the internet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2a3b6cb3-0c6d-4315-9903-66869c3881d2.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 1\. Downloading the installation with the web browser
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, extract the Java runtime from the archive:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4f666bc2-4403-4505-ae59-c70618c840ac.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 2\. Extracting binaries from the downloaded bundle
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the system path needs to be extended by altering the corresponding property:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9c935e09-1a76-4775-a639-815347093c32.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 3\. Five actions to update the environment
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, the version of Java can be checked:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/33ff7064-b738-4782-a3b6-37f6ff5547ac.png)'
  prefs: []
  type: TYPE_IMG
- en: Finishing the installation and checking the Java version
  prefs: []
  type: TYPE_NORMAL
- en: The next step after installing Java is the installation of SBT. You are not
    required to have Scala installed separately to be able to work with the sample
    code for this book.
  prefs: []
  type: TYPE_NORMAL
- en: Installing SBT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the SBT, the simple build tool, there are installation options: using tools
    such as `apt-get`, `brew`, or `macports`, or doing it manually. First, we''ll
    cover the manual setup.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For Linux and macOS, the procedure is the same as with JDK:'
  prefs: []
  type: TYPE_NORMAL
- en: Obtain the installation package.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Unzip the downloaded file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Update the environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The latest version of the SBT can be found on the respective website at [https://www.scala-sbt.org/download.html](https://www.scala-sbt.org/download.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'On Linux or macOS, you can use the command line in a way shown in the next
    screenshot to perform these three installation steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e5064e69-66a9-424d-ad6f-0a0dd058b6ba.png)'
  prefs: []
  type: TYPE_IMG
- en: We have included an installation script in the `Appendix` folder in the GitHub
    repository to save you some typing.
  prefs: []
  type: TYPE_NORMAL
- en: 'On Windows, the installation is done a bit differently. The website will offer
    you an MSI package for download, which can be installed after downloading by double-clicking
    on it, as shown in the next screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/aab88dec-f2b8-467a-b4cf-8ef6bd8fa2bc.png)'
  prefs: []
  type: TYPE_IMG
- en: Downloading an SBT installation package
  prefs: []
  type: TYPE_NORMAL
- en: 'After the SBT installer is downloaded, it can be executed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/251df549-2467-4479-9121-26e973347062.png)'
  prefs: []
  type: TYPE_IMG
- en: Steps to start the SBT installation
  prefs: []
  type: TYPE_NORMAL
- en: After the installation has started, just follow the steps in the wizard to finish
    the setup.
  prefs: []
  type: TYPE_NORMAL
- en: Working with the code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The code examples for this book can be found in the GitHub repository under
    the following URL: [https://github.com/PacktPublishing/Learn-Scala-Programming](https://github.com/PacktPublishing/Learn-Scala-Programming).'
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will give you a short introduction to how to download and
    work with the source code using the SBT console and Scala REPL.
  prefs: []
  type: TYPE_NORMAL
- en: Getting the code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The recommended way to install the accompanying code is by cloning it using
    Git utilities. As we're updating and improving the code if needed, this will allow
    us to get future changes easily. Please refer to the installation instructions
    for the Git tools for your operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this case, there are no Git tools available; the source code can be downloaded
    using a web browser or other download tool. There is a Download ZIP button in
    the GitHub repository which will generate the proper URL to be used for the download,
    as shown next:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e87e2fb8-4e2d-4446-a752-ca983d6a7bc8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following screenshot demonstrates both approaches for cloning and downloading
    the source code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/45831d0b-4a67-4863-9770-afb7c37c08f7.png)'
  prefs: []
  type: TYPE_IMG
- en: Cloning or downloading the source code concludes the first-time setup procedure.
  prefs: []
  type: TYPE_NORMAL
- en: Working with the source code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The source code is organized in such a way that each chapter has its own folder,
    named by convention as [Chapter 1](7bfb7bf2-2fc8-41a3-a34f-73d262e5c674.xhtml), *An
    Introduction to Scala 2.13*, to [Chapter 15](ae25231b-af47-4138-82a9-e14a94ace448.xhtml),
    *Project 2 - Building Microservices with Lagom*. You can experiment with examples
    by navigating to the appropriate folder and starting SBT. It is recommended to
    occasionally issue the `git pull` command for the cloned repository to get recent
    updates and bug fixes, shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ff2ea739-834a-4553-80f9-b63a09283cbb.png)'
  prefs: []
  type: TYPE_IMG
- en: Each chapter has its own configuration files, `project/build.properties` and `build.sbt`.
    The former configure the version of the SBT to be used, the latter the required
    version of Scala and other dependencies. The SBT will download and cache all configured
    versions as required. This is why we don't need a separate installation of Scala.
  prefs: []
  type: TYPE_NORMAL
- en: Using the SBT console
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After starting SBT, one lands in the interactive mode or SBT **shell**. The
    shell allows for the issuing of different commands to drive SBT to test, execute,
    or do something else with the source code. The most important for our purposes
    are the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`exit`: Closes the SBT and exits into the Terminal shell'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`test`: Runs all test suites in the current project (if there are any in the
    `src/test/scala` folder)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The next screenshot shows how SBT compiles and runs tests for [Chapter 11](87c2e446-3730-49ae-b86b-fc8269678399.xhtml),
    *An Introduction to the Akka and Actor Models*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f90c6086-2533-4ea2-8df0-9f52acc956d5.png)'
  prefs: []
  type: TYPE_IMG
- en: '`run`: Runs the main class if there is a single main class in the project.
    This command will throw an exception in the case that it fails to detect the `main`
    class. If there are multiple main classes, the SBT will ask you to pick one of
    them to run. This behavior is represented by the following screenshot:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/b3fc59b3-53e4-4aca-ac84-9dcbfea3195d.png)'
  prefs: []
  type: TYPE_IMG
- en: '`console`: Starts scala REPL'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using REPL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'REPL is a tool for evaluating expressions in Scala. It can be started from
    the command line by entering `scala` or directly from the SBT session. The nice
    thing about starting it from the SBT shell is that all of the dependencies configured
    for the project will be available, as shown in the next screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6fe5c0c2-d415-4ea9-a2c4-993ce82efe76.png)'
  prefs: []
  type: TYPE_IMG
- en: Please refer to the Scala documentation at [https://docs.scala-lang.org/overviews/repl/overview.html](https://docs.scala-lang.org/overviews/repl/overview.html)
    to learn how to use REPL efficiently.
  prefs: []
  type: TYPE_NORMAL
- en: To exit REPL and return to the SBT shell, enter `:q`.
  prefs: []
  type: TYPE_NORMAL
