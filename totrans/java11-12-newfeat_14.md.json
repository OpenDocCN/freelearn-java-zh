["```java\nenum Size {XS, S, M, L, XL, XXL};          \nclass Shirt { \n    private int length; \n    public void setSize(Size size) { \n        switch(size) { \n            case XS :   length = 10; \n                        System.out.println(length); \n                        break; \n            case S  :   length = 12; \n                        System.out.println(length); \n                        break; \n            case M  :   length = 14; \n                        System.out.println(length); \n            case L  :   length = 16; \n                        break; \n            case XL :   length = 18; \n                        System.out.println(length); \n                        break; \n            case XXL:   length = 20; \n                        System.out.println(length); \n                        break; \n        } \n    } \n} \n```", "```java\nShirt s = new Shirt(); \ns.setSize(Size.XXL); \nSystem.out.println(s.length);\n```", "```java\n20 \n20 \n```", "```java\nShirt s = new Shirt(); \ns.setSize(Size.M); \nSystem.out.println(s.length); \n```", "```java\n14 \n16 \n```", "```java\nenum SingleUsePlastic {STRAW, BAG, SPOON, FORK, KNIFE, PLATE, BOTTLE}; \n\nclass Planet { \n    private static long damage; \n    public void use(SingleUsePlastic plastic) { \n        switch(plastic) { \n            case STRAW :    damage += 10; \n                            break; \n            case BAG   :    damage += 11; \n                            break; \n            case SPOON :    damage += 7; \n                            break; \n            case FORK  :    damage += 7; \n                            break; \n            case KNIFE :    damage += 7; \n                            break; \n            case PLATE :    damage += 15; \n                            break; \n            case BOTTLE:    damage = 20; \n                            break; \n        } \n    } \n} \n```", "```java\ndamage += switch(plastic) { \n                case STRAW -> 10; \n                case BAG -> 11; \n                case SPOON, FORK, KNIFE -> 7; \n                case PLATE -> 15; \n                case BOTTLE -> 20; \n          }; \n```", "```java\nclass Planet { \n    private static long damage; \n    public void use(SingleUsePlastic plastic) { \n        damage += switch(plastic) { \n            case STRAW -> 10; \n            case BAG -> 11; \n            case SPOON, FORK, KNIFE -> 7; \n            case PLATE -> { \n                                int radius = 20;  // Local variable           \n\n                                break (radius < 10 ? 15 : 20); // Using \n                                                    // break to return \n                                                    // a value \n                          } \n            case BOTTLE -> 20; \n        }; \n    } \n} \n```", "```java\nclass Planet { \n    private static long damage; \n    public void use(SingleUsePlastic plastic) { \n        damage += switch(plastic) { \n            case STRAW : break 10;      // Use colon (:) to start code,  \n                                        // Use break to return val \n            case BAG   : break 11; \n            case SPOON, FORK, KNIFE : break 7; \n            case PLATE : int radius = 6;         // no need \n                                                // of using curly brace\n                         break (radius < 10 ? 15 : 20); // Using \n                                                       // break to  \n                                                      // return a value \n            case BOTTLE : break 20; \n        }; \n    } \n} \n```", "```java\nint sum(int x, int y) {                   // return type of method is \n                                         // int \n    int result = x + y; \n    return result;                        // returns int value \n}\nvoid output(List<Integer> list) {         // return type of method is \n                                         // void\n    if (list == null)\n        return;                           // exit method without \n                                          // returning a value\n    else {\n        for (Integer i : list)\n            System.out.println(i);\n    }\n    System.out.println(\"End of method\");  // this doesn't execute if \n                                         // list is null\n}\n```", "```java\nclass Planet { \n    private static long damage; \n    public void use(SingleUsePlastic plastic) { \n        damage += switch(plastic) { \n            case SPOON, FORK, KNIFE -> 7; \n        }; \n    } \n} \n```", "```java\nclass Planet { \n    private static long damage; \n    public void use(SingleUsePlastic plastic) { \n        damage += switch(plastic) { \n            case SPOON, FORK, KNIFE -> 7; \n            // Adding (1) or (2), or both will enable the code to \n            // compile\n            case PLATE -> 10;     // line number (1)\n            default -> 100;       // line number (2)\n        }; \n    } \n}\n```", "```java\nString getBook(String name) {\n    String bookName = switch(name) { \n        case \"Shreya\" -> \"Harry Potter\";\n        case \"Paul\" -> \"Management tips\";\n        case \"Harry\" -> \"Life of Pi\";\n        default -> \"Design Patters - everyone needs this\";   \n    };\n    return bookName;\n} \n```", "```java\n String getBook(String name) {\n    String bookName = null;\n    switch(name) {                                    // NOT returning \n                                                     // a value\n        case \"Shreya\" -> bookName = \"Harry Potter\";\n        case \"Paul\" -> bookName = \"Management tips\";\n        case \"Harry\" -> bookName = \"Life of Pi\";      // default case \n                                                    // not included\n    }\n    return bookName;\n}\n```", "```java\nString day = // assign a value here    \nswitch(day) {                                    \n    case \"Sun\" -> System.out.println(\"OSS-Jav\");\n    case \"Mon\", \"Tue\" -> {\n        // some simple/complex code\n    }\n    default -> throw new RuntimeException(\"Running out of projects\");\n}\n```", "```java\nclass Planet { \n    private static long damage; \n    public void use(SingleUsePlastic plastic) { \n        myLabel:                                           // Label  \n            for (...) { \n                damage += switch(plastic) { \n                    case SPOON, FORK, KNIFE : break 7;    \n                    case PLATE : continue myLabel;         // NOT \n                                                           // allowed \n                                                           // illegal                                                            \n                                                           // jump \n                                                           // through                                                             \n                                                           // switch \n                                                          // expression \n                }; \n            } \n    } \n}\n```"]