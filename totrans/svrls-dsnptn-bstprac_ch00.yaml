- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Serverless architectures are changing the way software systems are being built
    and operated. When compared with systems that use physical servers or virtual
    machines, many tools, techniques, and patterns remain the same; however, there
    are several things that can or need to change drastically. To fully capitalize
    on the benefits of serverless systems, tools, patterns, and best practices should
    be thought through carefully before embarking on a serverless journey.
  prefs: []
  type: TYPE_NORMAL
- en: This book introduces and describes reusable patterns applicable to almost any
    type of serverless application, whether it be web systems, data processing, big
    data, or Internet of Things. You will learn, by example and explanation, about
    various patterns within a serverless context, such as RESTful APIs, GraphQL, proxy,
    fan-out, messaging, lambda architecture, and MapReduce, as well as when to use
    these patterns to make your applications scalable, performant, and fault tolerant.
    This book will take you through techniques for Continuous Integration and Continuous
    Deployment as well as designs for testing, securing, and scaling your serverless
    applications. Learning and applying these patterns will speed up your development
    lifecycle, while also improving the overall application architecture when building
    on top of your serverless platform of choice.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is aimed at software engineers, architects, and anyone who is interested
    in building serverless applications using a cloud provider. Readers should be
    interested in learning popular patterns to improve agility, code quality, and performance,
    while also avoiding some of the pitfalls that new users may fall into when starting
    with serverless systems. Programming knowledge and basic serverless computing
    concepts are assumed.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](svrls-dsnptn-bstprac_ch01.html), *Introduction, *covers the basics
    of serverless systems and discusses when serverless architectures may or may not
    be a good fit. Three categories of serverless patterns are introduced and briefly
    explained.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](svrls-dsnptn-bstprac_ch02.html), *A Three-Tier Web Application
    Using REST, *walks you through a full example of building a traditional web application
    using a REST API powered by AWS Lambda, along with serverless technologies for
    hosting HTML, CSS, and JavaScript for the frontend code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](svrls-dsnptn-bstprac_ch03.html), *A Three-Tier Web Application
    Pattern with GraphQL*, introduces GraphQL and explains the changes needed to turn
    the previous REST API into a GraphQL API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](svrls-dsnptn-bstprac_ch04.html), *Integrating Legacy APIs with
    the Proxy Pattern*, demonstrates how it''s possible to completely change an API
    contract while using a legacy API backend using nothing other than AWS API Gateway.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](svrls-dsnptn-bstprac_ch05.html), *Scaling Out with the Fan-Out
    Pattern, *teaches you one of the most basic serverless patterns around, where
    a single event triggers multiple parallel serverless functions, resulting in quicker
    execution times over a serial implementation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](svrls-dsnptn-bstprac_ch06.html), *Asynchronous Processing with
    the Messaging Pattern, *explains different classes of messaging patterns and demonstrates
    how to put messages onto a queue using a serverless data producer, and process
    those messages downstream with a serverless data consumer.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](svrls-dsnptn-bstprac_ch07.html),* Data Processing Using the Lambda
    Pattern*, explains how you can use multiple subpatterns to create two planes of
    computation, which provide views into historical aggregated data as well as real-time
    data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](svrls-dsnptn-bstprac_ch08.html),* The MapReduce Pattern, *explores
    an example implementation of aggregating large volumes of data in parallel, similar
    to the way systems such as Hadoop work.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](svrls-dsnptn-bstprac_ch09.html), *Deployment and CI/CD Patterns, *explain
    how to set up Continuous Integration and Continuous Delivery for serverless projects
    and what to keep in mind when doing so, in addition to showing examples of continuous
    deployment.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](svrls-dsnptn-bstprac_ch10.html),* Error Handling and Best Practices, *reviews
    the tools and techniques for automatically tracking unexpected errors as well
    as several best practices and tips when creating serverless applications.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Almost all of the examples in this book use the Serverless Framework to manage
    AWS resources and Lambda functions. Installation instructions for the Serverless
    Framework can be found at [https://serverless.com/framework/docs/getting-started/](https://serverless.com/framework/docs/getting-started/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In addition to the Serverless Framework, readers will need to have an AWS account
    to run the examples. For those new to AWS, you can create a new account, which
    comes with a year of usage in their Free Tier, at [https://aws.amazon.com](https://aws.amazon.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'During the course of this book, you will need the following tools:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AWS Lambda
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS RDS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS API Gateway
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS DynamoDB
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS S3
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS SQS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS Rekognition
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS Kinesis
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS SNS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: We will learn how to use these tools through the course of this book.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Serverless-Design-Patterns-and-Best-Practices](https://github.com/PacktPublishing/Serverless-Design-Patterns-and-Best-Practices). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "To test this, we need to set the timeout of the `divide`
    function to 4 seconds and put a `time.sleep(3)` in the middle of the application
    code."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "The following screenshot shows Invocation errors from the AWS
    Lambda monitoring page for the `divide` function:"'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).[](https://www.packtpub.com/)
  prefs: []
  type: TYPE_NORMAL
