["```java\n$ mkdir $HOME/apache\n$ unzip $HOME/Downloads/apache-maven-3.6.1-bin.zip -d $HOME/apache \n```", "```java\n $ export PATH=$PATH:$HOME/apache/apache-maven-3.6.1/bin\n```", "```java\n $ mvn --version\n Apache Maven 3.6.1 \n Maven home: /home/francesco/apache/apache-maven-3.6.1\n Java version: 1.8.0_191, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.191.b13-0.fc29.x86_64/jre\n Default locale: en_US, platform encoding: UTF-8\n OS name: \"linux\", version: \"4.18.16-300.fc29.x86_64\", arch: \"amd64\", family: \"unix\"\n```", "```java\n$ mvn -Dplugin=io.quarkus:quarkus-maven-plugin help:describe\n\n```", "```java\n Name: Quarkus - Maven Plugin\n Description: Build parent to bring in required dependencies\n Group Id: io.quarkus\n Artifact Id: quarkus-maven-plugin\n Version: 1.0.0.Final\n Goal Prefix: quarkus\n\n This plugin has 11 goals:\n\n quarkus:add-extension\n Description: (no description available)\n\n quarkus:add-extensions\n Description: Allow adding an extension to an existing pom.xml file. \n Because you can add one or several extension in one go, there are 2 \n mojos:\n add-extensions and add-extension. Both supports the extension and\n extensions parameters.\n\n quarkus:analyze-call-tree\n Description: (no description available)\n\n quarkus:build\n Description: (no description available)\n\n quarkus:create\n Description: This goal helps in setting up Quarkus Maven project with\n quarkus-maven-plugin, with sensible defaults\n\n quarkus:create-example-config\n Description: (no description available)\n\n quarkus:dev\n Description: The dev mojo, that runs a quarkus app in a forked process\n\n quarkus:help\n Description: Display help information on quarkus-maven-plugin.\n Call mvn quarkus:help -Ddetail=true -Dgoal=<goal-name> to display parameter\n details.\n\n quarkus:list-extensions\n Description: (no description available)\n\n quarkus:native-image\n Description: (no description available)\n\n quarkus:remote-dev\n Description: The dev mojo, that connects to a remote host\n```", "```java\n$ mvn io.quarkus:quarkus-maven-plugin:1.0.0.Final:create \\\n -DprojectGroupId=com.packt.quarkus.Chapter02 \\\n -DprojectArtifactId=hello-rest \\\n -DclassName=\"com.packt.quarkus.Chapter02.SimpleRest\" \\\n -Dpath=\"/helloworld\"\n```", "```java\n ├── mvnw\n ├── mvnw.cmd\n ├── pom.xml\n └── src\n     ├── main\n     │   ├── docker\n     │   │   ├── Dockerfile.jvm\n     │   │   └── Dockerfile.native\n     │   ├── java\n     │   │   └── com\n     │   │       └── packt\n     │   │           └── quarkus\n     │   │               └── Chapter02\n     │   │                   └── SimpleRest.java\n     │   └── resources\n     │       ├── application.properties\n     │       └── META-INF\n     │           └── resources\n     │               └── index.html\n     └── test\n         └── java\n             └── com\n                 └── packt\n                     └── quarkus\n                         └── Chapter02\n                             ├── NativeSimpleRestIT.java\n                             └── SimpleRestTest.java\n```", "```java\n<dependencyManagement>\n  <dependencies>\n    <dependency>\n      <groupId>${quarkus.platform.group-id}</groupId>\n      <artifactId>${quarkus.platform.artifact-id}</artifactId>\n      <version>${quarkus.platform.version}</version>\n      <type>pom</type>\n      <scope>import</scope>\n    </dependency>\n  </dependencies>\n</dependencyManagement>\n<build>\n  <plugins>\n    <plugin>\n      <groupId>io.quarkus</groupId>\n      <artifactId>quarkus-maven-plugin</artifactId>\n      <version>${quarkus-plugin.version}</version>\n      <executions>\n        <execution>\n          <goals>\n            <goal>build</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n</build>\n```", "```java\n<dependency>\n   <groupId>io.quarkus</groupId>\n   <artifactId>quarkus-resteasy</artifactId>\n</dependency>\n```", "```java\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/helloworld\")\npublic class SimpleRest {\n\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String hello() {\n         return \"hello\";\n     }\n}\n```", "```java\n$ mvn compile quarkus:dev\n\n```", "```java\n[INFO] Scanning for projects...\n. . . .\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ hello-rest ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 2 resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ hello-rest ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 1 source file to /home/francesco/git/packt/Hands-On-Cloud-Native-Applications-with-Java-and-Quarkus/chapter2/hello-rest/target/classes\n[INFO] \n[INFO] --- quarkus-maven-plugin:1.0.0.Final:dev (default-cli) @ hello-rest ---\nListening for transport dt_socket at address: 5005\n2019-11-11 13:10:34,493 INFO  [io.qua.dep.QuarkusAugmentor] (main) Beginning quarkus augmentation\n2019-11-11 13:10:35,078 INFO  [io.qua.dep.QuarkusAugmentor] (main) Quarkus augmentation completed in 585ms\n2019-11-11 13:10:35,395 INFO  [io.quarkus] (main) Quarkus 1.0.0.CR1 started in 1.079s. Listening on: http://0.0.0.0:8080\n2019-11-11 13:10:35,397 INFO  [io.quarkus] (main) Profile dev activated. Live Coding activated.\n2019-11-11 13:10:35,397 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n```", "```java\n $ curl http://localhost:8080/helloworld\n hello\n```", "```java\nmvn io.quarkus:quarkus-maven-plugin:1.0.0.Final:create \\\n -DprojectGroupId=com.packt.quarkus.Chapter02 \\\n -DprojectArtifactId=hello-rest \\\n -DclassName=\"com.packt.quarkus.Chapter02.SimpleRest\" \\\n -Dpath=\"/helloworld\" \\\n -DbuildTool=gradle\n```", "```java\nbuildscript {\n    repositories {\n        mavenLocal()\n    }\n    dependencies {\n        classpath \"io.quarkus:quarkus-gradle-\n        plugin:${quarkusPluginVersion}\"\n    }\n}\n\nplugins {\n    id 'java'\n}\n\napply plugin: 'io.quarkus'\n\nrepositories {\n     mavenLocal()\n     mavenCentral()\n}\n\ndependencies {\n    implementation enforcedPlatform(\"${quarkusPlatformGroupId}:\n    ${quarkusPlatformArtifactId}:${quarkusPlatformVersion}\")\n    implementation 'io.quarkus:quarkus-resteasy'\n\n    testImplementation 'io.quarkus:quarkus-junit5'\n    testImplementation 'io.rest-assured:rest-assured'\n\n    nativeTestImplementation 'io.quarkus:quarkus-junit5'\n    nativeTestImplementation 'io.rest-assured:rest-assured'\n}\n\ngroup 'org.acme'\nversion '1.0.0-SNAPSHOT'\n\ncompileJava {\n    options.compilerArgs << '-parameters'\n}\n\njava {\n    sourceCompatibility = JavaVersion.VERSION_1_8\n    targetCompatibility = JavaVersion.VERSION_1_8\n}\n```", "```java\n./gradlew quarkusDev\n```", "```java\npublic class SimpleRest {\n\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String hello() {\n return \"hello changed!\";\n     }\n }          \n```", "```java\n$ curl http://localhost:8080/helloworld\n hello changed!\n```", "```java\n$ netstat -an | grep 5005\n tcp        0      0 0.0.0.0:5005            0.0.0.0:*               LISTEN    \n```", "```java\npackage com.packt.quarkus.chapter2;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.PathParam;\nimport javax.ws.rs.core.MediaType;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n@Path(\"/helloworld\")\npublic class SimpleRest {\n    protected final Logger log = LoggerFactory.getLogger(this.getClass());\n @GET\n @Produces(MediaType.TEXT_PLAIN)\n @Path(\"/{name}\")\n public String hello(@PathParam(\"name\") String name) {\n\n log.info(\"Called with \"+name);\n return \"hello \"+name;\n }\n\n    @GET\n    @Produces(MediaType.TEXT_PLAIN)\n    public String hello() {\n        return \"hello\";\n    }\n} \n```", "```java\n $ curl http://localhost:8080/helloworld/frank\n```", "```java\npackage com.packt.quarkus.chapter2;\n\nimport io.quarkus.test.junit.QuarkusTest;\nimport org.junit.jupiter.api.Test;\n\nimport static io.restassured.RestAssured.given;\nimport static org.hamcrest.CoreMatchers.is;\n\n@QuarkusTest\npublic class SimpleRestTest {\n\n     @Test\n     public void testHelloEndpoint() {\n         given()\n           .when().get(\"/helloworld\")\n           .then()\n              .statusCode(200)\n              .body(is(\"hello\"));\n     }\n\n}\n```", "```java\n<dependency>\n   <groupId>io.quarkus</groupId>\n   <artifactId>quarkus-junit5</artifactId>\n   <scope>test</scope>\n </dependency>\n <dependency>\n   <groupId>io.rest-assured</groupId>\n   <artifactId>rest-assured</artifactId>\n   <scope>test</scope>\n </dependency>\n```", "```java\n$ mvn clean test\n```", "```java\n[INFO] Running com.packt.quarkus.chapter2.SimpleRestTest\n 2019-05-16 11:04:21,166 INFO  [io.qua.dep.QuarkusAugmentor] (main) Beginning quarkus augmentation\n 2019-05-16 11:04:21,832 INFO  [io.qua.dep.QuarkusAugmentor] (main) Quarkus augmentation completed in 669ms\n 2019-05-16 11:04:22,108 INFO  [io.quarkus] (main) Quarkus 1.0.0.Final started in 0.265s. Listening on: http://[::]:8081\n 2019-05-16 11:04:22,109 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n [INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.958 s - in com.packt.quarkus.chapter2.SimpleRestTest\n\n2019-05-16 11:04:23,263 INFO \n\n[io.quarkus] (main) Quarkus stopped in 0.005s\n [INFO]\n [INFO] Results:\n [INFO]\n [INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n [INFO]\n [INFO] -----------------------------------------------------------------------\n [INFO] BUILD SUCCESS\n [INFO] -----------------------------------------------------------------------\n```", "```java\n@Test\npublic void testHelloEndpointHeader() {\n    given()\n      .when().get(\"/helloworld\")\n         .then()\n         .statusCode(200)\n         .body(is(\"hello\"))\n           .and()\n            .header(\"Content-Length\",\"6\");\n}\n```", "```java\n@Test\npublic void testHelloEndpointQueryParam() {\n    given()\n      .param(\"name\",\"Frank\")\n      .when().get(\"/helloworld\")\n         .then()\n         .statusCode(200)\n         .body(is(\"hello\"));\n\n}\n```", "```java\n@Test\npublic void testHelloEndpointPathParam() {\n\n given()\n .pathParam(\"name\", \"Frank\")\n .when().get(\"/helloworld/{name}\")\n .then()\n .statusCode(200)\n .body(is(\"hello Frank\"));\n}\n```", "```java\n@Test\npublic void testTimedHelloEndpointPathParam() {\n\n given()\n .pathParam(\"name\", \"Frank\")\n .when().get(\"/helloworld/{name}\")\n .then()\n .time(lessThan(1000L))\n .body(is(\"hello Frank\"));\n}\n```", "```java\nquarkus.http.test-port=9081\n```", "```java\n<profile>\n <id>native</id>\n  <activation>\n    <property>\n      <name>native</name>\n    </property>\n  </activation>\n  <build>\n    <plugins>\n      <plugin>\n        <artifactId>maven-failsafe-plugin</artifactId>\n        <version>${surefire-plugin.version}</version>\n        <executions>\n          <execution>\n            <goals>\n              <goal>integration-test</goal>\n              <goal>verify</goal>\n            </goals>\n            <configuration>\n              <systemProperties>\n                <native.image.path>${project.build.directory}\n                  /${project.build.finalName}-runner\n                </native.image.path>\n              </systemProperties>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n  <properties>\n    <quarkus.package.type>native</quarkus.package.type>\n  </properties>\n</profile>\n```", "```java\n$ mvn package -Pnative\n```", "```java\n[INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 60485ms\n```", "```java\nNov 11 14:49 hello-rest-1.0-SNAPSHOT-runner\n```", "```java\n$ target/hello-rest-1.0-SNAPSHOT-runner\n```", "```java\n2019-11-11 14:53:38,619 INFO  [io.quarkus] (main) hello-rest 1.0-SNAPSHOT (running on Quarkus 1.0.0.CR1) started in 0.014s. Listening on: http://0.0.0.0:8080\n2019-11-11 14:53:38,619 INFO  [io.quarkus] (main) Profile prod activated. \n2019-11-11 14:53:38,619 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n```", "```java\n$ ps -o pid,rss,command -p $(pgrep -f hello-rest)\n```", "```java\nPID   RSS   COMMAND\n27919 18720 target/hello-rest-1.0-SNAPSHOT-runner\n```", "```java\n$ curl http://localhost:8080/helloworld\n hello\n```", "```java\n@NativeImageTest\npublic class NativeSimpleRestIT extends SimpleRestTest {\n\n    // Execute the same tests but in native mode.\n}\n```", "```java\nexport GRAALVM_HOME=/path/to/graal\n```", "```java\n$ mvn verify -Pnative\n```", "```java\n[INFO] Running com.packt.quarkus.chapter2.SimpleRestTest\n 2019-05-16 11:35:22,509 INFO  [io.qua.dep.QuarkusAugmentor] (main) Beginning quarkus augmentation\n 2019-05-16 11:35:23,084 INFO  [io.qua.dep.QuarkusAugmentor] (main) Quarkus augmentation completed in 575ms\n 2019-05-16 11:35:23,419 INFO  [io.quarkus] (main) Quarkus 1.0.0.Final started in 0.319s. Listening on: http://[::]:8081\n 2019-05-16 11:35:23,419 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n 2019-05-16 11:35:24,354 INFO  [com.pac.qua.cha.SimpleRest] (XNIO-1 task-1) Called with Frank\n 2019-05-16 11:35:24,598 INFO  [com.pac.qua.cha.SimpleRest] (XNIO-1 task-1) Called with Frank\n [INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.215 s - in com.packt.quarkus.chapter2.SimpleRestTest\n```"]