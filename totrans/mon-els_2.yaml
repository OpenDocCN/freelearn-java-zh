- en: Chapter 2. Installation and the Requirements for Elasticsearch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **Java Runtime Environment** (**JRE**) is the only requirement to run Elasticsearch.
  prefs: []
  type: TYPE_NORMAL
- en: The official Elasticsearch documentation recommends that you use either Oracle
    Java 8 (update 20 or later), or Oracle Java 7 (update 55 or later). Once you choose
    your version of the JRE, we recommend that all your nodes use the same version
    to maintain compatibility. Using different versions of Java across your cluster
    or using Java versions earlier than the ones specified here, can lead to data
    corruption. Once you choose a version of Elasticsearch, all the nodes in your
    cluster should use the same version.
  prefs: []
  type: TYPE_NORMAL
- en: While it is possible to run Elasticsearch on both Windows and Linux, this book
    focuses on using it exclusively in a Linux environment. The Elasticsearch documentation
    is centered on Linux and most of the Elasticsearch community runs the software
    on Linux. However, there is no reason a production cluster of Elasticsearch cannot
    run on Windows.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will specifically cover installation instructions for Ubuntu, CentOS,
    and Red Hat Enterprise Linux (RHEL), but any Linux distribution will work. Readers
    should use 64-bit operating systems rather than 32-bit operating systems because
    the former allows more memory allocation for the JRE.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter covers the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Elasticsearch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring Elasticsearch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing monitoring tools (Elasticsearch-head, Bigdesk, and Marvel)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cluster requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Elasticsearch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At the time of writing this book, Elasticsearch 2.3.2 is the current stable
    release and Elasticsearch 5 is in alpha testing. For production clusters, we recommend
    using the 2.3.2 release and quickly updating to the 5 general availability (GA)
    release once it is available. Note that while Elasticsearch 5 is compatible with
    indices created in Elasticsearch 2.x, there have also been some API changes and
    feature deprecations after the 1.x release. Readers should account for these important
    changes before upgrading. More details on upgrading from 2.x to 5 can be found
    on the Elastic website at the following URLS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.elastic.co/blog/elasticsearch-5-0-0-alpha1-released](https://www.elastic.co/blog/elasticsearch-5-0-0-alpha1-released)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.elastic.co/blog/elasticsearch-5-0-0-alpha2-released](https://www.elastic.co/blog/elasticsearch-5-0-0-alpha2-released)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Notable API changes include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Indices from Elasticsearch 1.x must first be upgraded to 2.x before finally
    moving to version 5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The deprecated `filtered`, `or`, and `and` queries were removed in favor of
    the `bool`, `must`, and `should` queries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `string` mapping was deprecated in favor of the `text` and `keyword` fields
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `index` mapping property is now set to `true` / `false` instead of `analyzed`
    / `not_analyzed` / `no`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Significant changes to the Percolate API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `_id` values are limited to 512 bytes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While examples in this book use the 2.3.2 Elasticsearch release, all examples
    should be compatible with the upcoming 5.0 release.
  prefs: []
  type: TYPE_NORMAL
- en: The latest version of Elasticsearch is available at [https://www.elastic.co/downloads/elasticsearch](https://www.elastic.co/downloads/elasticsearch)
    in `.zip`, `.tar.gz`, `.rpm`, and `.deb` formats. It doesn't matter how Elasticsearch
    is installed, but because it is simpler, we recommend using the `.deb` installer
    for Ubuntu users, the `.rpm` installer for CentOS or RHEL users, and the `.tar.gz`
    or `.zip` version for users of other Linux distributions, or for users who require
    a more customized setup. Elasticsearch also provides official `yum` and `apt-get`
    repositories.
  prefs: []
  type: TYPE_NORMAL
- en: Examples in this chapter assume that the user installed Elasticsearch with the
    `.rpm` or `.deb` installer, or through the official `yum` or `apt-get` repositories.
    This should also be similar for users who installed with the `.zip` and `.tar.gz`
    installers.
  prefs: []
  type: TYPE_NORMAL
- en: DEB/RPM installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, download the most up-to-date package from [https://elastic.co](https://elastic.co):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the following to install the DEB package on an Ubuntu or Debian-compatible
    system:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Run the following to install the RPM package on a CentOS, RHEL, or another
    compatible system:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The yum and apt-get repositories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The official `yum` and `apt-get` repositories are a great way to install Elasticsearch.
    However, make sure that you use the *official* repositories. Many third-party
    `yum` and `apt-get` Elasticsearch repositories are available, but they may not
    have the latest stable release.
  prefs: []
  type: TYPE_NORMAL
- en: Ubuntu/Debian and apt-get
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To install Elasticsearch using `apt-get` follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable the repository via `apt-get`, first add the `gpg` key:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Then, add the repository via the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Finally, use your package manager to install the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: CentOS/RHEL and yum
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For `yum`, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the `gpg` key:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Then, create a new yum repository at `/etc/yum.repos.d/elasticsearch.repo`
    with the following content:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install the package with the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Start Elasticsearch with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Then verify installation, test to see whether Elasticsearch is running and
    loaded via the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'You should get this response:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'To verify that we are able to write data to Elasticsearch, use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'This returns the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'We fetch the data, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'This returns the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'As a sanity check, try a nonexisting record:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'This should return an expected `false` for `found`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Configuration files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It is worth noting the Elasticsearch installation location, specifically the
    configuration files and the log files. For example, on Ubuntu, run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: This will show that the installation placed the logs in `/var/log/elasticsearch`
    and the config files in `/etc/elasticsearch`. Any settings for Elasticsearch (not
    related to logging) are in `elasticsearch.yml` while `logging.yml` handles logging.
  prefs: []
  type: TYPE_NORMAL
- en: We will delve into these files and their respective settings further throughout
    the book.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring an Elasticsearch cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section will cover some basic Elasticsearch configuration in addition to
    a few changes that will positively impact your cluster's performance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Most Elasticsearch configuration changes will be applied to `elasticsearch.yml`.
    For our installation of Elasticsearch on Ubuntu, this file is located at `/etc/elasticsearch/elasticsearch.yml`.
    Elasticsearch internal configuration changes are applied to `elasticsearch.yml`.
    Environmental variables can be set in the application''s startup script. For our
    installation of Elasticsearch 2.3.2 on Ubuntu, these files are in the following
    locations:'
  prefs: []
  type: TYPE_NORMAL
- en: Internal Configuration is located at
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/etc/elasticsearch/` `elasticsearch.yml`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Environmental Variable Configuration is located at
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/etc/defau` `lts/elasticsearch`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Cluster name
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A wonderful thing about Elasticsearch is the ease with which you can build a
    cluster. Elasticsearch nodes on the same local area network (LAN) will automatically
    form a cluster with each other if they have the configuration variable `cluster.name`
    set to the same value.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if we store tweets from Twitter in our cluster, we may want to
    set `cluster.name` to `twitter_development`. Later on, we may want to create another
    cluster with the name `twitter_production` to hold all of our production data.
  prefs: []
  type: TYPE_NORMAL
- en: 'To modify this setting, edit the `Elasticsearch.yml` file and look for the
    `cluster.name` setting. Change this value to: `cluster.name: tw` `itter_development`.'
  prefs: []
  type: TYPE_NORMAL
- en: The default value for `cluster.name` is `elasticsearch`. It is fine to use this
    in solo development, but be careful using it when you are on a LAN with other
    developers. If you start a new Elasticsearch with the default `cluster.name` value
    and someone else on your network is also running Elasticsearch with the default
    configuration, you'll notice that data from their Elasticsearch instance will
    start replicating in your machine.
  prefs: []
  type: TYPE_NORMAL
- en: Memory configuration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Elasticsearch recommends setting the heap size to half of the available RAM
    on the machine, but no more than 30.5 GB. We are using a machine with 16 GB of
    RAM, so we''ll set the heap size to 8 GB. This configuration change is made to
    the `ES_HEAP_SIZE` environment variable in `/etc/defaykts/elasticsear` `ch`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Open file limit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Linux limits the number of file descriptors a process can have open at one time.
    This limit exists because every time a process opens a file descriptor, it uses
    a little bit of memory. If there were no limit on the number of open files, a
    process could potentially open enough files to cause the entire system to run
    out of memory and crash.
  prefs: []
  type: TYPE_NORMAL
- en: By default, this limit is set to `1024`, which is too low for Elasticsearch.
    The official Elasticsearch documentation recommends upping this value to `32`
    `k` or `64k` for open files.
  prefs: []
  type: TYPE_NORMAL
- en: The maximum file limit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The most up-to-date `.rpm` and `.deb` installers will automatically increase
    the maximum open file limit in Elasticsearch to `65535`. However, if you use an
    older version of the `.deb` or `.rpm`, or run Elasticsearch from the tarball,
    you'll have to increase the limit manually.
  prefs: []
  type: TYPE_NORMAL
- en: 'To check the maximum number of open files allocated to your current user, run
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: The user has a maximum of `65535` files. However, this does *not* mean Elasticsearch
    is assigned this number of files. This may mean that Elasticsearch is running
    as a different user or that it was started with different environment settings.
  prefs: []
  type: TYPE_NORMAL
- en: 'To check the maximum number of open files allocated to Elasticsearch, run the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The result should look something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: We see that `max_file_descriptors` was set to `1024`, so we'll have to increase
    it. If your output says `65535`, skip to the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Make sure that this is for the appropriate node; this `curl` command will display
    the `max_file` descriptors for all nodes in your cluster.
  prefs: []
  type: TYPE_NORMAL
- en: Updating max file descriptors on Ubuntu Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Edit the `/etc/security/limits.conf` file and add the following lines to the
    end of the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `*` symbol means *all users*. You can also set this to just the user that
    runs the Elasticsearch process.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling pluggable authentication modules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If we connect to the Linux server over SSH, we''ll have to ensure that PAM
    authentication is enabled. These instructions are the same if you use Ubuntu or
    CentOS/RHEL. To make this configuration change, edit the `sshd_config` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Ensure that this line is present:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, restart your SSH server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Verifying the open file limit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Log out and log back in again to make these changes take effect, then restart
    the Elasticsearch server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, be sure to verify that these changes took effect. It is not enough
    to verify that `ulimit -n` returns `65536`. It is also important to ensure that
    the Elasticsearch user was started up properly with the increased maximum open
    file limit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'This should result in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: This time we see that `max_file_d` `escriptors` is set to `65536`.
  prefs: []
  type: TYPE_NORMAL
- en: Disabling swapping
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is important to disable memory swapping on your operating system or Elasticsearch
    process.
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable swapping until your system is rebooted, run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'To disable swapping even after your system is rebooted, edit the `/etc/fstab`
    file, and comment out any lines with the word `swap` in them. For us, this looked
    like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'To disable swap for just Elasticsearch, you''ll first have to set your Elasticsearch
    heap size using `ES_HEAP_SIZE` and set the process maximum amount of locked memory
    to `ulimited` as the root user. If you use the `.rpm` or `.deb` installer, both
    of these settings can be changed in the `/etc/init.d/elasticsearch` startup script.
    Specifically, uncomment and update these lines, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: (My machine has 512 MB of memory, so I'm setting `ES_HEAP_SIZE` to `256m`.)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'A little further down:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, edit your `elasticsearch.yml` file, and add the line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, reboot your Elasticsearch node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, verify that this setting worked by running the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: This is the response.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding your cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Elasticsearch has many different moving parts, and it can get a little complicated
    to ensure that everything runs properly. Fortunately, there are some great open
    source monitoring tools that are available to help you keep tabs on your cluster.
    This section will cover how to install some of the most popular and useful monitoring
    tools on your cluster, and the following two chapters will go into these tools
    in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Elasticsearch-head
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Elasticsearch-head is a simple, free, open source tool that provides a high-level
    examination of your cluster. It is one of the most useful tools used when administering
    and monitoring the health of a cluster. Elasticsearch-head only needs to be installed
    on one node in your cluster. However, we recommend installing it on all nodes
    for redundancy. It's installed as an Elasticsearch plugin.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have an Internet connection, you can install Elasticsearch-head with
    the Elasticsearch `plugin` utility, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: The location of the `plugin` script may vary.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next command assumes that you installed Elasticsearch using the `.rpm`
    or `.deb` file, but if you are unsure where the plugin script is in your installation,
    go ahead and try running the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'For me, this returns the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: If you don't have an Internet connection on your Elasticsearch instance, you
    can download the Elasticsearch-head plugin, transfer it to your server, and install
    it using the following methods.
  prefs: []
  type: TYPE_NORMAL
- en: 'From a machine with an Internet connection, we use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'From the Elasticsearch server, we use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'If you run an old version of Elasticsearch, you may have to restart your node
    before you can open Elasticsearch-head:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'Try out the plugin by visiting `http://elasticsearch-server:9200/_plugin/head/`
    (for a test environment, `elasticsearch-server` is probably `localhost`). You
    should see something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Elasticsearch-head](img/B03798_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Installing Bigdesk
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Bigdesk is a free, open source Elasticsearch plugin that allows you to see your
    cluster's CPU, memory, and disk usage. It's a great tool to dig into performance
    issues with a cluster and, like Elasticsearch-head, it only needs to be installed
    on one node in your cluster. We still recommend installing it on all nodes for
    redundancy.
  prefs: []
  type: TYPE_NORMAL
- en: Here's how to install Bigdesk.
  prefs: []
  type: TYPE_NORMAL
- en: 'Online installation is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Offline installation is has more than one method.
  prefs: []
  type: TYPE_NORMAL
- en: 'From a machine with an Internet connection, use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'From the Elasticsearch server, use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'As with Elasticsearch-head, if you run an old version of Elasticsearch, you
    may have to restart your node before you can open Bigdesk:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Try out the plugin by visiting `http://elasticsearch-server:9200/_plugin/bigdesk/`
    (for a test environment, elasticsearch-server is probably localhost). You should
    see something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Bigdesk](img/B03798_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Marvel
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Marvel is a powerful monitoring tool created by the makers of Elasticsearch.
    It''s free for use in development, but there''s a subscription fee to use it in
    production. Marvel consists of the following two components:'
  prefs: []
  type: TYPE_NORMAL
- en: Marvel Agent (requires Marvel License).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Marvel Dashboard (requires Kibana).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To install the Marvel Agent:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Online installation is as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Offline installation is as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Restart Elasticsearch after installing the Marvel Agent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'To install the Marvel Dashboard, use the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, install Kibana:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, install the Marvel Dashboard as a Kibana plugin:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Start Kibana:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open the Marvel Dashboard by visiting `http://server-name:5601/` (for a test
    environment, `server-name` is probably `localhost`). You should see something
    like the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Marvel](img/B03798_02_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Cluster requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The requirements for your cluster—the number of nodes and the hardware specifications
    of each node—depend on several factors, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Total volume of data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data ingest rate
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Average record size
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data mapping
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Types of queries being run
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System performance requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There's no one size fits all formula to determine cluster requirements for a
    given Elasticsearch use case. The best approach is to meticulously test performance
    while changing variables, such as shard size, the number of nodes in the cluster,
    and hardware configurations until an optimal solution is found. This section focuses
    on high-level guidelines to consider when configuring your cluster.
  prefs: []
  type: TYPE_NORMAL
- en: It's a good idea to run at least three nodes in a production environment and
    to set data replication to *1*, which asks Elasticsearch to maintain one copy
    of each shard in the cluster. This configuration will ensure that if a node goes
    down, your cluster won't lose any data.
  prefs: []
  type: TYPE_NORMAL
- en: Elasticsearch tends to be more memory intensive than CPU intensive. Any modern
    64-bit processor is likely adequate to run Elasticsearch. In general, this favors
    more processor cores over faster clock speeds.
  prefs: []
  type: TYPE_NORMAL
- en: Each node in the cluster should have minimum 512 MB of RAM, and half of this
    should be allocated to Elasticsearch. The Elasticsearch documentation recommends
    allocating no more than 30.5 GB of memory to an Elasticsearch node because the
    JVM compresses internally stored memory addresses when heap sizes are less than
    30.5 GB but is no longer able to do so when the allocated heap is larger than
    30.5 GB. A good rule of thumb is to have no more than 64 GB of total memory per
    node. Moreover, when determining your total memory requirement for a cluster,
    you will likely need much less total system memory than your total index size,
    but the specific amount will vary depending on your use case.
  prefs: []
  type: TYPE_NORMAL
- en: When considering storage for an Elasticsearch cluster, prefer internal drives
    to **network attached storage** (**NAS**) solutions. Using solid-state drives
    instead of traditional hard drives will greatly improve overall system performance.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter covered Elasticsearch installation, configuration, monitoring tools,
    and cluster requirements. Tools such as Elasticsearch-head, Bigdesk, and Marvel
    all lay the groundwork to monitor your cluster and analyze its performance. However,
    you still have to know what aspects to look for and how to find them. In the next
    chapter, we will examine Elasticsearch-head and Bigdesk further, and discuss important
    things to look for in these tools when monitoring an Elasticsearch cluster.
  prefs: []
  type: TYPE_NORMAL
