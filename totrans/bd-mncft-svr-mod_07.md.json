["```java\npublic class NoRain extends JavaPlugin implements Listener\n```", "```java\ngetServer().getPluginManager().registerEvents(this, this);\n```", "```java\ngetServer().getPluginManager().registerEvents(new WeatherListener(), this);\n```", "```java\npublic void onWeatherChange(WeatherChangeEvent event)\n```", "```java\n@EventHandler\n```", "```java\n@EventHandler (ignoreCancelled = true)\npublic void onWeatherChange(WeatherChangeEvent event) {\n}\n```", "```java\n@EventHandler (ignoreCancelled = true, priority = EventPriority.LOW) \n```", "```java\npackage com.codisimus.norain;\n\nimport org.bukkit.event.EventHandler;\nimport org.bukkit.event.EventPriority;\nimport org.bukkit.event.Listener;\nimport org.bukkit.event.weather.WeatherChangeEvent;\nimport org.bukkit.plugin.java.JavaPlugin;\n\npublic class NoRain extends JavaPlugin implements Listener {\n  @Override\n  public void onEnable() {\n    getServer().getPluginManager().registerEvents(this, this);\n  }\n\n  @EventHandler (ignoreCancelled = true, priority =EventPriority.LOW)\n  public void onWeatherChange(WeatherChangeEvent event) {\n    event.setCancelled(true);\n  }\n}\n```", "```java\nif (event.toWeatherState()) {\n  event.setCancelled(true);\n}\n```", "```java\n@EventHandler (ignoreCancelled = true, priority = EventPriority.MONITOR)\npublic void onPlayerCommand(PlayerCommandPreprocessEvent event) {\n  //Check if the Player is attempting to change the weather\n  if (event.getMessage().startsWith(\"/toggledownfall\")) {\n    //Verify that the Player has permission to change the weather\n    if (event.getPlayer().hasPermission(\"minecraft.command.toggledownfall\")) {\n      //Allow the Rain to start for this occasion\n      denyRain = false;\n    }\n  }\n}\n```", "```java\nevent.setCancelled(false);\n```", "```java\npackage com.codisimus.norain;\n\nimport org.bukkit.event.EventHandler;\nimport org.bukkit.event.EventPriority;\nimport org.bukkit.event.Listener;\nimport org.bukkit.event.player.PlayerCommandPreprocessEvent;\nimport org.bukkit.event.weather.WeatherChangeEvent;\nimport org.bukkit.plugin.java.JavaPlugin;\n\npublic class NoRain extends JavaPlugin implements Listener {\n  //This is a variable that our two methods will use to \"communicate\" with each other\n  private boolean denyRain = true;\n\n  @Override\n  public void onEnable() {\n    //Register all of the EventHandlers within this class\n    getServer().getPluginManager().registerEvents(this, this);\n  }\n\n  @EventHandler (ignoreCancelled = true, priority =EventPriority.LOW)\n  public void onWeatherChange(WeatherChangeEvent event) {\n    if (event.toWeatherState()) { //Rain is trying to turn on\n      //Cancel the event if denyRain is set to true\n      event.setCancelled(denyRain);\n    }\n    //Reset the denyRain value until next time a Player issues the /toggledownfall command\n    denyRain = true;\n  }\n\n  @EventHandler (ignoreCancelled = true, priority =EventPriority.MONITOR)\n  public void onPlayerCommand(PlayerCommandPreprocessEvent event) {\n    //Check if the Player is attempting to change the weather\n    if (event.getMessage().startsWith(\"/toggledownfall\")) {\n      //Verify that the Player has permission to change the weather\n      if (event.getPlayer().hasPermission(\"minecraft.command.toggledownfall\")) { \n        //Allow the Rain to start for this occasion\n        denyRain = false;\n      }\n    }\n  }\n}\n```", "```java\ngetServer().getPluginManager().registerEvents(this, this);\n```", "```java\nif (event.getEntityType() == EntityType.ZOMBIE) {\n}\n```", "```java\npackage com.codisimus.mobenhancer;\n\nimport org.bukkit.entity.EntityType;\nimport org.bukkit.event.EventHandler;\nimport org.bukkit.event.Listener;\nimport org.bukkit.event.entity.CreatureSpawnEvent;\nimport org.bukkit.plugin.java.JavaPlugin;\n\npublic class MobEnhancer extends JavaPlugin implements Listener {\n  @Override\n  public void onEnable() {\n    //Register all of the EventHandlers within this class\n    getServer().getPluginManager().registerEvents(this, this);\n  }\n\n  @EventHandler\n  public void onMobSpawn(CreatureSpawnEvent event) {\n    if (event.getEntityType() == EntityType.ZOMBIE) {\n      int health = 40;\n      event.getEntity().setMaxHealth(health);\n      event.getEntity().setHealth(health);\n    }\n  }\n}\n```", "```java\nHandlerList.unregisterAll(this);\n```"]