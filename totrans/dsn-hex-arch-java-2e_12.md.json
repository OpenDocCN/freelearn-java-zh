["```java\n<dependencies>\n  <dependency>\n    <groupId>io.quarkus</groupId>\n    <artifactId>quarkus-resteasy-reactive</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>io.quarkus</groupId>\n    <artifactId>quarkus-resteasy-reactive-\n      jackson</artifactId>\n  </dependency>\n</dependencies>\n```", "```java\n    @ApplicationScoped\n    @Path(\"/router\")\n    public class RouterManagementAdapter {\n        @Inject\n        RouterManagementUseCase routerManagementUseCase;\n        /** Code omitted **/\n    }\n    ```", "```java\n    @GET\n    @Path(\"/{id}\")\n    public Uni<Response> retrieveRouter(Id id) {\n        return Uni.createFrom()\n                .item(\n                   routerManagementUseCase.\n                   retrieveRouter(id))\n                .onItem()\n                .transform(\n                 router -> router != null ?\n                 Response.ok(f) :\n                 Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                    Builder::build);\n    ```", "```java\n    @DELETE\n    @Path(\"/{id}\")\n    public Uni<Response> removeRouter(@PathParam(\"id\") Id\n      id) {\n        return Uni.createFrom()\n                .item(\n                 routerManagementUseCase.removeRouter(id))\n                .onItem()\n                .transform(\n                 router -> router != null ?\n                 Response.ok(router) :\n                 Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                  Builder::build);\n    }\n    ```", "```java\n    @POST\n    @Path(\"/\")\n    public Uni<Response> createRouter(CreateRouter cre\n      ateRouter) {\n        /** Code omitted **/\n        return Uni.createFrom()\n                .item(\n                   routerManagementUseCase.\n                   persistRouter(router))\n                .onItem()\n                .transform(\n                 router -> router != null ?\n                 Response.ok(f) :\n                 Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                   Builder::build);\n    }\n    ```", "```java\n    @POST\n    @Path(\"/add\")\n    public Uni<Response> addRouterToCoreRouter(AddRouter\n      addRouter) {\n        /** Code omitted **/\n        return Uni.createFrom()\n                .item(routerManagementUseCase.\n                        addRouterToCoreRouter(router,\n                          coreRouter))\n                .onItem()\n                .transform(\n                 router -> router != null ?\n                 Response.ok(router) :\n                 Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                   Builder::build);\n    }\n    ```", "```java\n    @DELETE\n    @Path(\"/{routerId}/from/{coreRouterId}\")\n    public Uni<Response> removeRouterFromCoreRouter(\n        /** Code omitted **/\n        return Uni.createFrom()\n                .item(routerManagementUseCase.\n                        removeRouterFromCoreRouter(\n                        router, coreRouter))\n                .onItem()\n                .transform(\n                 router -> router != null ?\n                      Response.ok(f) :\n                      Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                   Builder::build);\n    }\n    ```", "```java\n    @ApplicationScoped\n    @Path(\"/switch\")\n    public class SwitchManagementAdapter {\n        @Inject\n        SwitchManagementUseCase switchManagementUseCase;\n        @Inject\n        RouterManagementUseCase routerManagementUseCase;\n        /** Code omitted **/\n    }\n    ```", "```java\n    @GET\n    @Path(\"/{id}\")\n    public Uni<Response> retrieveSwitch(@PathParam(\"id\")\n      Id switchId) {\n        return Uni.createFrom()\n                .item(\n                 switchManagementUseCase.\n                 retrieveSwitch(switchId))\n                .onItem()\n                .transform(\n                 aSwitch -> aSwitch != null ?\n                 Response.ok(aSwitch) :\n                 Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                   Builder::build);\n    }\n    ```", "```java\n    @POST\n    @Path(\"/create/{edgeRouterId}\")\n    public Uni<Response> createAndAddSwitchToEdgeRouter(\n                CreateSwitch createSwitch,\n                @PathParam(\"edgeRouterId\") Id\n                  edgeRouterId){\n        /** Code omitted **/\n        return Uni.createFrom()\n                .item((EdgeRouter)\n                  routerManagementUseCase.\n                  persistRouter(router))\n                .onItem()\n                .transform(\n                 router -> router != null ?\n                 Response.ok(f) :\n                 Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                  Builder::build);\n    }\n    ```", "```java\n    @DELETE\n    @Path(\"/{switchId}/from/{edgeRouterId}\")\n    public Uni<Response> removeSwitchFromEdgeRouter(\n            @PathParam(\"switchId\") Id switchId,\n            @PathParam(\"edgeRouterId\") Id\n              edgeRouterId) {\n        /** Code omitted **/\n        return Uni.createFrom()\n                .item(\n                 (EdgeRouter)routerManagementUseCase.\n                  persistRouter(router))\n                .onItem()\n                .transform(\n                 router -> router != null ?\n                 Response.ok(f) :\n                 Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                  Builder::build);\n    }\n    ```", "```java\n    @ApplicationScoped\n    @Path(\"/network\")\n    public class NetworkManagementAdapter {\n        @Inject\n        SwitchManagementUseCase switchManagementUseCase;\n        @Inject\n        NetworkManagementUseCase networkManagementUseCase;\n        /** Code omitted **/\n    }\n    ```", "```java\n    @POST\n    @Path(\"/add/{switchId}\")\n    public Uni<Response> addNetworkToSwitch(AddNetwork\n      addNetwork, @PathParam(\"switchId\") Id switchId) {\n        /** Code omitted **/\n        return Uni.createFrom()\n                .item(\n                  networkManagementUseCase.\n                   addNetworkToSwitch(\n                   network, networkSwitch))\n                .onItem()\n                .transform(\n                  f -> f != null ?\n                  Response.ok(f) :\n                  Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                   Builder::build);\n    }\n    ```", "```java\n    @DELETE\n    @Path(\"/{networkName}/from/{switchId}\")\n    public Uni<Response> removeNetworkFromSwitch(@Path\n      Param(\"networkName\") String networkName, @Path\n        Param(\"switchId\") Id         switchId) {\n        /** Code omitted **/\n        return Uni.createFrom()\n                .item(\n                 networkManagementUseCase.\n                 removeNetworkFromSwitch(\n                 networkName, networkSwitch))\n                .onItem()\n                .transform(\n                  f -> f != null ?\n                  Response.ok(f) :\n                  Response.ok(null))\n                .onItem()\n                .transform(Response.Response\n                  Builder::build);\n    }\n    ```", "```java\n<dependencies>\n  <dependency>\n      <groupId>io.quarkus</groupId>\n      <artifactId>quarkus-smallrye-openapi</artifactId>\n  </dependency>\n</dependencies>\n```", "```java\nquarkus.swagger-ui.always-include=true\nquarkus.swagger-ui.urls-primary-name=Topology & Inventory\nquarkus.swagger-ui.theme=material\nquarkus.swagger-ui.title=Topology & Inventory - Network\n  Management System\nquarkus.swagger-ui.footer=&#169; 2021 | Davi Vieira\nquarkus.swagger-ui.display-operation-id=true\nmp.openapi.extensions.smallrye.info.title=Topology & Inven\n  tory API\nmp.openapi.extensions.smallrye.info.version=1.0\nmp.openapi.extensions.smallrye.info.description=Manage net\n  works assets\n```", "```java\n@ApplicationScoped\n@Path(\"/router\")\n@Tag(name = \"Router Operations\", description = \"Router man\n  agement operations\")\npublic class RouterManagementAdapter {\n    @GET\n    @Path(\"/retrieve/{id}\")\n    @Operation(operationId = \"retrieveRouter\",\n    description = \"Retrieve a router from the network\n      inventory\")\n    public Uni<Response> retrieveRouter(@PathParam(\"id\")\n      Id id) {\n     /** Code omitted **/\n}\n```", "```java\n$ mvn clean package\n$ java -jar bootstrap/target/bootstrap-1.0-SNAPSHOT-runner.jar\n```", "```java\nhttp://localhost:8080/q/swagger-ui/\n```", "```java\n<dependencies>\n  <dependency>\n    <groupId>io.rest-assured</groupId>\n    <artifactId>rest-assured</artifactId>\n    <scope>test</scope>\n  </dependency>\n</dependencies>\n```", "```java\n@Test\n@Order(1)\npublic void retrieveRouter() throws IOException {\n    var expectedRouterId =\n      \"b832ef4f-f894-4194-8feb-a99c2cd4be0c\";\n    var routerStr = given()\n            .contentType(\"application/json\")\n            .pathParam(\"routerId\", expectedRouterId)\n            .when()\n            .get(\"/router/retrieve/{routerId}\")\n            .then()\n            .statusCode(200)\n            .extract()\n            .asString();\n    var actualRouterId =\n    getRouterDeserialized(routerStr).getId().getUuid()\n      .toString();\n    assertEquals(expectedRouterId, actualRouterId);\n}\n```", "```java\npublic static Router getRouterDeserialized(String jsonStr)\n  throws IOException {\n    var mapper = new ObjectMapper();\n    var module = new SimpleModule();\n    module.addDeserializer(Router.class, new\n      RouterDeserializer());\n    mapper.registerModule(module);\n    var router = mapper.readValue(jsonStr, Router.class);\n    return router;\n}\n```", "```java\npublic class RouterDeserializer extends StdDeserial\n  izer<Router> {\n    /** Code omitted **/\n    @Override\n    public Router deserialize(JsonParser jsonParser,\n    DeserializationContext ctxt)\n            throws IOException {\n        JsonNode node =\n        jsonParser.getCodec().readTree(jsonParser);\n        var id = node.get(\"id\").get(\"uuid\").asText();\n        var vendor = node.get(\"vendor\").asText();\n        var model = node.get(\"model\").asText();\n        var ip = node.get(\"ip\").get(\"ipAddress\").asText();\n        var location = node.get(\"location\");\n        var routerType = RouterType.valueOf(\n          node.get(\"routerType\").asText());\n        var routersNode = node.get(\"routers\");\n        var switchesNode = node.get(\"switches\");\n        /** Code omitted **/\n}\n```", "```java\nvar router = RouterFactory.getRouter(\n        Id.withId(id),\n        Vendor.valueOf(vendor),\n        Model.valueOf(model),\n        IP.fromAddress(ip),\n        getLocation(location),\n        routerType);\n```", "```java\nfetchChildRouters(routerType, routersNode, router);\nfetchChildSwitches(routerType, switchesNode, router);\n```", "```java\nvar actualRouterId = getRouterDeserialized(router\n  Str).getId().getUuid().toString();\nassertEquals(expectedRouterId, actualRouterId);\n```", "```java\n$ mvn test\n```", "```java\n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running dev.davivieira.topologyinventory.framework.adapters.input.rest.NetworkManagementAdapterTest\n2021-09-29 00:47:36,825 INFO  [io.quarkus] (main) Quarkus 2.2.1.Final on JVM started in 2.550s. Listening on: http://localhost:8081\n2021-09-29 00:47:36,827 INFO  [io.quarkus] (main) Profile test activated.\n2021-09-29 00:47:36,827 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy-reactive, resteasy-reactive-jackson, smallrye-context-propagation, smallrye-openapi, swagger-ui]\n[EL Info]: 2021-09-29 00:47:38.812--ServerSession(751658062)--EclipseLink, version: Eclipse Persistence Services - 3.0.1.v202104070723\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.418 s - in dev.davivieira.topologyinventory.framework.adapters.input.rest.NetworkManagementAdapterTest\n[INFO] Running dev.davivieira.topologyinventory.framework.adapters.input.rest.RouterManagementAdapterTest\n[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.226 s - in dev.davivieira.topologyinventory.framework.adapters.input.rest.RouterManagementAdapterTest\n[INFO] Running dev.davivieira.topologyinventory.framework.adapters.input.rest.SwitchManagementAdapterTest\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 s - in dev.davivieira.topologyinventory.framework.adapters.input.rest.SwitchManagementAdapterTest\n2021-09-29 00:47:39,675 INFO  [io.quarkus] (main) Quarkus stopped in 0.032s\n```"]