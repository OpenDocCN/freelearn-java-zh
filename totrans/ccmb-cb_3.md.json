["```java\nFeature: Home Page\n\n  Background: flow till home page\n    Given user is on Application home page\n\n  Scenario: Home Page Default content\n    Then user gets a GitHub Bootcamp section\n\n  Scenario: GitHub Bootcamp Section\n    When user focuses on GitHub Bootcamp Section\n    Then user gets an option to setup git\n\n  Scenario: Top Banner content\n    When user focuses on Top Banner\n    Then user gets an option of home page\n```", "```java\n    @important\n    Feature: Home Page\n\n      Background: flow till home page\n        Given user is on Application home page\n\n     @sanity\n      Scenario: Home Page Default content\n        Then user gets a GitHub Bootcamp section\n\n     @regression\n      Scenario: GitHub Bootcamp Section\n        When user focuses on GitHub Bootcamp Section\n        Then user gets an option to setup git\n\n     @sanity @regression\n      Scenario: Top Banner content\n        When user focuses on Top Banner\n        Then user gets an option of home page\n    ```", "```java\n    mvn test -Dcucumber.options=\"--tags @important\"\n\n    ```", "```java\n    mvn test -Dcucumber.options=\"--tags @sanity\"\n\n    ```", "```java\n@important\nFeature: Home Page\n\n  Background: flow till home page\n    Given user is on Application home page\n\n  @sanity\n  Scenario: Home Page Default content\n    Then user gets a GitHub Bootcamp section\n\n  @regression\n  Scenario: GitHub Bootcamp Section\n    When user focuses on GitHub Bootcamp Section\n    Then user gets an option to setup git\n\n  @sanity @regression\n  Scenario: Top Banner content\n    When user focuses on Top Banner\n    Then user gets an option of home page\n```", "```java\n    mvn test -Dcucumber.options=\"--tags @sanity --tags @regression\"\n\n    ```", "```java\n    mvn test -Dcucumber.options=\"--tags @regression,@sanity\"\n\n    ```", "```java\n    @important\n    Feature: Home Page\n\n      Background: flow till home page\n        Given user is on Application home page\n\n      @sanity @wip\n      Scenario: Home Page Default content\n        Then user gets a GitHub Bootcamp section\n\n      @regression @wip\n      Scenario: GitHub Bootcamp Section\n        When user focuses on GitHub Bootcamp Section\n        Then user gets an option to setup git\n\n      @sanity @regression\n      Scenario: Top Banner content\n        When user focuses on Top Banner\n    Then user gets an option of home page\n    ```", "```java\n    mvn test -Dcucumber.options=\"--tags @sanity,@regression --tags @wip\"\n\n    ```", "```java\nFeature: Home Page\n\n  Background: flow till home page\n    Given user is on Application home page\n\n  @sanity @wip\n  Scenario: Home Page Default content\n    Then user gets a GitHub Bootcamp section\n\n  @regression @wip\n  Scenario: GitHub Bootcamp Section\n    When user focuses on GitHub Bootcamp Section\n    Then user gets an option to setup git\n```", "```java\n    package com.automation;\n\n    import org.openqa.selenium.WebDriver;\n    import org.openqa.selenium.firefox.FirefoxDriver;\n\n    import cucumber.api.java.After;\n    import cucumber.api.java.Before;\n\n    public class Hooks {\n\n      public static WebDriver driver = null;\n\n      public static String browser = \"firefox\";\n      public static String baseURL = \"https://GitHub.com/\";\n\n      @Before\n      public static void createDriver() {\n\n        System.out.println(\"Inside Before\");\n        createDriver(browser);\n        OpenURL(baseURL);\n      }\n\n      public static void createDriver(final String browserId) {\n        if (browserId.equalsIgnoreCase(\"firefox\")) {\n          driver = new FirefoxDriver();\n        }\n      }\n\n      public static void OpenURL(String baseURL) {\n        //Maximize window\n        driver.manage().window().maximize();\n\n        // Open URL on window\n        driver.get(baseURL);\n      }\n\n      @After\n      public void tearDown() {\n\n        System.out.println(\"Inside After\");\n        driver.quit();\n      }\n\n    }\n    ```", "```java\nFeature: Home Page\n\n  Background: flow till home page\n    Given user is on Application home page\n\n  @web\n  Scenario: Home Page Default content on Web\n    Then user gets a GitHub Bootcamp section\n\n  @rest\n  Scenario: GitHub account REST Service\n    When user sends a GET request\n```", "```java\n    package com.automation;\n\n    import org.openqa.selenium.WebDriver;\n\n    import cucumber.api.java.After;\n    import cucumber.api.java.Before;\n\n    public class Hooks {\n\n      public static WebDriver driver = null;\n\n      public static String browser = \"firefox\";\n      public static String baseURL = \"https://GitHub.com/\";\n\n      @Before(\"@web\")\n      public static void createDriver() {\n\n        System.out.println(\"Inside Web Hook\");\n        //sample code\n      }\n\n      @Before(\"@rest\")\n      public static void createrestBuilder() {\n\n        System.out.println(\"Inside REST Hook\");\n        //sample code\n      }\n\n      @After\n      public void tearDown() {\n\n        System.out.println(\"Inside After\");\n        //Sample Code  }\n\n    }\n    ```", "```java\n@important\nFeature: Home Page\n\n  Background: flow till home page\n    Given user is on Application home page\n\n  @sanity\n  Scenario: Home Page Default content\n    Then user gets a GitHub Bootcamp section\n\n  @regression\n  Scenario: GitHub Bootcamp Section\n    When user focuses on GitHub Bootcamp Section\n    Then user gets an option to setup git\n\n  @sanity @regression\n  Scenario: Top Banner content\n    When user focuses on Top Banner\n    Then user gets an option of home page\n```", "```java\n    @Before(\"@sanity,@regression\")\n    public void taggedHookMethod1() {\n\n    System.out.println(\"tagged hook - sanity OR regression\");\n    }  \n    ```", "```java\n    @Before({\"@sanity\",\"@regression\"})\n      public void taggedHookMethod2() {\n\n        System.out.println(\"tagged hook - Sanity AND Regression\");\n\n    }\n    ```", "```java\n    @Before({\"@important\",\"~@regression\"})\n      public void taggedHookMethod3() {\n\n        System.out.println(\"Tagged hook- important but NOT regression\");\n      }\n    ```", "```java\n    @Before({\"@important\",\"@regression,@wip\"})\n    public void taggedHookMethod4() {\n\n        System.out.println(\"Tagged hook - (important+regression) OR (important AND wip)\");\n    }\n    ```", "```java\n    @Before(\"@sanity,@wip\")\n    ```", "```java\n    @Before({\"@sanity\",\"@regression\"})\n    ```", "```java\n    @Before({\"@important\",\"~@regression\"})\n    ```"]