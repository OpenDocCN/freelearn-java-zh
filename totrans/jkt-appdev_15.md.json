["```java\n<h:body>\n  <h:form>\n    <h:commandLink action=\"#{customerController.listSetup}\"\n      value=\"View all customers\"/>\n  </h:form>\n</h:body>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.controller;\n//imports omitted for brevity\n@Named\n@SessionScoped\npublic class CustomerController implements Serializable {\n  //variable declarations omitted\n  public String listSetup() {\n    reset(true);\n    return \"/customer/List\";\n  }\n  private void reset(boolean resetFirstItem) {\n    customer = null;\n    customerItems = null;\n    pagingInfo.setItemCount(-1);\n    if (resetFirstItem) {\n      pagingInfo.setFirstItem(0);\n    }\n  }\n  //additional methods omitted\n}\n```", "```java\n<h:form styleClass=\"jsfcrud_list_form\">\n  <h:outputText escape=\"false\" value=\"(No customers found)\"\n    rendered=\n      \"#{customerController.pagingInfo.itemCount == 0}\" />\n   <!-- Additional markup omitted →\n   <h:commandButton\n     action=\"#{customerController.createSetup}\"\n     value=\"New Customer\"/>\n</form>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.controller;\n//imports omitted\n@Named\n@SessionScoped\npublic class CustomerController implements Serializable {\n  private Customer customer = null;\n  private PagingInfo pagingInfo = null;\n  //additional variable declarations omitted\n  public String createSetup() {\n    reset(false);\n    customer = new Customer();\n    List<Address> addressList = new ArrayList<>(1);\n    Address address = new Address();\n    List<Telephone> telephoneList = new ArrayList<>(1);\n    Telephone telephone = new Telephone();\n    address.setCustomer(customer);\n    addressList.add(address);\n    telephone.setCustomer(customer);\n    telephoneList.add(telephone);\n    customer.setAddressList(addressList);\n    customer.setTelephoneList(telephoneList);\n    return \"/customer/New\";\n  }\n  private void reset(boolean resetFirstItem) {\n    customer = null;\n    customerItems = null;\n    pagingInfo.setItemCount(-1);\n    if (resetFirstItem) {\n      pagingInfo.setFirstItem(0);\n    }\n  }\n}\n```", "```java\npackage com.ensode.jakartaeealltogether.entity;\n//imports omitted\n@Entity\n@Table(name = \"CUSTOMERS\")\npublic class Customer implements Serializable {\n  private static final long serialVersionUID = 1L;\n  @Id\n  @Basic(optional = false)\n  @GeneratedValue(strategy = GenerationType.AUTO)\n  @Column(name = \"CUSTOMER_ID\")\n  private Integer customerId;\n  @Column(name = \"FIRST_NAME\")\n  private String firstName;\n  @Column(name = \"LAST_NAME\")\n  private String lastName;\n  @Column(name = \"EMAIL\")\n  private String email;\n  @OneToMany(mappedBy = \"customer\",\n    cascade = CascadeType.ALL)\n  private List<Address> addressList;\n  @OneToMany(mappedBy = \"customer\",\n    cascade = CascadeType.ALL)\n  private List<Telephone> telephoneList;\n  //methods omitted\n}\n```", "```java\n <h:selectOneMenu id=\"selectOneAddr\" value=\n   \"#{customerController.customer.addressList[0].\n      addressType}\" required=\"true\">\n   <f:selectItems id=\"selectOneAddrOpts\" value=\"#{addressTypeController.addressTypeItemsAvailableSelectOne}\"/>\n</h:selectOneMenu>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.controller;\n//imports omitted\n@Named\n@SessionScoped\npublic class AddressTypeController implements Serializable {\n  @EJB\n  private AddressTypeDao dao;\n  public SelectItem[]\n        getAddressTypeItemsAvailableSelectOne() {\n    return JsfUtil.getSelectItems(\n        dao.findAddressTypeEntities(), true);\n  }\n}\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.util;\n//imports omitted\npublic class JsfUtil {\n  public static SelectItem[] getSelectItems(List<?> entities, \n    boolean selectOne) {\n    int size = selectOne ? entities.size() + 1 :\n      entities.size();\n    SelectItem[] items = new SelectItem[size];\n    int i = 0;\n    if (selectOne) {\n      items[0] = new SelectItem(\"\", \"---\");\n      i++;\n    }\n    for (Object x : entities) {\n      items[i++] = new SelectItem(x, x.toString());\n    }\n    return items;\n  }\n}\n```", "```java\n<h:commandButton action=\"#{customerController.create}\"\n  value=\"Save\"/>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.controller;\n//imports omitted\n@Named\n@SessionScoped\npublic class CustomerController implements Serializable {\n  @EJB\n  private CustomerDao dao;\n  //additional methods and variable declarations omitted\n  public String create() {\n    try {\n      dao.create(customer);\n      JsfUtil.addSuccessMessage(\n        \"Customer was successfully created.\");\n    } catch (Exception e) {\n      JsfUtil.ensureAddErrorMessage(e,\n        \"A persistence error occurred.\");\n      return null;\n    }\n    return listSetup();\n  }\n}\n```", "```java\n<h:commandLink value=\"View\" action=\"#{customerController.detailSetup}\">\n  <f:param name=\"jsfcrud.currentCustomer\" value=\"#{jsfcrud_class['com.ensode.jakartaeealltogether.faces.util.JsfUtil'].jsfcrud_method['getAsConvertedString'][item1][customerController.converter].jsfcrud_invoke}\"/>\n</h:commandLink>\n```", "```java\n<?xml version='1.0' encoding='UTF-8'?>\n<faces-config version=\"4.0\"\n\n    xsi:schemaLocation=\"https://jakarta.ee/xml/ns/jakartaee https://\n      jakarta.ee/xml/ns/jakartaee/web-facesconfig_4_0.xsd\">\n  <application>\n    <el-resolver>\n      com.ensode.jakartaeealltogether.faces.util.JsfCrudELResolver\n    </el-resolver>\n  </application>\n</faces-config>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.util;\n//imports omitted\npublic class JsfCrudELResolver extends ELResolver {\n  //variable declarations omitted\n  @Override\n  public Object getValue(ELContext context, Object base,\n    Object property) {\n    //use reflection to determine which method to invoke\n  }\n  //additional methods omitted\n}\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.controller;\n//imports omitted\n@Named\n@SessionScoped\npublic class CustomerController implements Serializable {\n  @PostConstruct\n  public void init() {\n    converter = new CustomerConverter();\n  }\n  private Customer customer = null;\n  private CustomerConverter converter = null;\n  //additional variable declarations omitted\n  public String detailSetup() {\n    return scalarSetup(\"/customer/Detail\");\n  }\n  private String scalarSetup(String destination) {\n    reset(false);\n    customer = (Customer) JsfUtil.\n      getObjectFromRequestParameter(\n       \"jsfcrud.currentCustomer\", converter, null);\n    if (customer == null) {\n     //error handling code omitted\n    }\n    return destination;\n  }\n  //additional methods omitted\n}\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.util;\n//imports omitted\npublic class JsfUtil {\n  public static String getRequestParameter(String key) {\n    return FacesContext.getCurrentInstance().getExternalContext().\n    getRequestParameterMap().get(key);\n  }\n  public static Object getObjectFromRequestParameter(String requestParameterName, Converter converter, UIComponent component) {\n    String theId =\n     JsfUtil.getRequestParameter(requestParameterName);\n    return converter.getAsObject(\n      FacesContext.getCurrentInstance(), component, theId);\n  }\n  //additional methods omitted\n}\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.converter;\n//imports omitted\n@FacesConverter(forClass = Customer.class)\npublic class CustomerConverter implements Converter {\n  @Override\n  public Object getAsObject(FacesContext facesContext, UIComponent component, String string) {\n    if (string == null || string.length() == 0) {\n      return null;\n    }\n    Integer id = Integer.valueOf(string);\n    CustomerController controller =\n      (CustomerController) facesContext.getApplication().\n     getELResolver().getValue(\n     facesContext.getELContext(), null,\n     \"customerController\");\n    return controller.findCustomer(id);\n  }\n  //additional methods omitted\n}\n```", "```java\n<h:commandLink value=\"Edit\" action=\"#{customerController.editSetup}\">\n  <f:param name=\"jsfcrud.currentCustomer\" value=\n\"#{jsfcrud_class['com.ensode.jakartaeealltogether.faces.util.JsfUtil'].jsfcrud_method['getAsConvertedString'][item1][customerController.converter].jsfcrud_invoke}\"/>\n</h:commandLink>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.controller;\n//imports omitted\n@Named\n@SessionScoped\npublic class CustomerController implements Serializable {\n  private Customer customer = null;\n  //additional variable declarations omitted\n  public String editSetup() {\n    return scalarSetup(\"/customer/Edit\");\n  }\n  private String scalarSetup(String destination) {\n    reset(false);\n    customer = (Customer) JsfUtil.\n      getObjectFromRequestParameter(\n      \"jsfcrud.currentCustomer\", converter, null);\n    if (customer == null) {\n      //error handling code omitted\n    }\n    return destination;\n  }\n  //additional methods omitted\n}\n```", "```java\n<h:commandButton action=\"#{customerController.edit}\"\n  value=\"Save\">\n  <f:param name=\"jsfcrud.currentCustomer\"\n  value=\n\"#{jsfcrud_class['com.ensode.jakartaeealltogether.faces.util.JsfUtil'].jsfcrud_method['getAsConvertedString'][customerController.customer][customerController.converter].jsfcrud_invoke}\"/>\n</h:commandButton>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.controller;\n//imports omitted\n@Named\n@SessionScoped\npublic class CustomerController implements Serializable {\n  private Customer customer = null;\n  private CustomerConverter converter = null;\n  //additional variable declarations omitted\n  @EJB\n  private CustomerDao dao;\n  public String edit() {\n    String customerString = converter.getAsString(\n      FacesContext.getCurrentInstance(), null, customer);\n    String currentCustomerString =\n      JsfUtil.getRequestParameter(\n      \"jsfcrud.currentCustomer\");\n    if (customerString == null ||\n        customerString.length() == 0 ||\n        !customerString.equals(currentCustomerString)) {\n      String outcome = editSetup();\n      if (\"customer_edit\".equals(outcome)) {\n        JsfUtil.addErrorMessage(\n          \"Could not edit customer. Try again.\");\n      }\n      return outcome;\n    }\n    try {\n      dao.edit(customer);\n      JsfUtil.addSuccessMessage(\n        \"Customer was successfully updated.\");\n    } catch (Exception e) {\n      //exception handling code omitted\n    }\n    return detailSetup();\n  }\n  //additional methods omitted\n}\n```", "```java\npackage com.ensode.jakartaeealltogether.dao;\n//imports omitted\n@Stateless\npublic class CustomerDao implements Serializable {\n  @Resource\n  private EJBContext ejbContext;\n  @PersistenceContext\n  private EntityManager em;\n  public void edit(Customer customer) throws Exception {\n    try {\n      customer = em.merge(customer);\n    } catch (Exception ex) {\n      ejbContext.setRollbackOnly();\n      String msg = ex.getLocalizedMessage();\n      if (msg == null || msg.length() == 0) {\n        Integer id = customer.getCustomerId();\n        if (findCustomer(id) == null) {\n          throw new NonexistentEntityException(\n            \"The customer with id \" + id +\n            \" no longer exists.\");\n        }\n      }\n      throw ex;\n    }\n  }\n}\n```", "```java\n<h:commandLink value=\"Delete\"\n  action=\"#{customerController.destroy}\">\n  <f:param name=\"jsfcrud.currentCustomer\" value=\n\"#{jsfcrud_class['com.ensode.jakartaeealltogether.faces.util.JsfUtil'].jsfcrud_method['getAsConvertedString'][item1][customerController.converter].jsfcrud_invoke}\"/>\n</h:commandLink>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.controller;\n//imports omitted\n@Named\n@SessionScoped\npublic class CustomerController implements Serializable {\n  @EJB\n  private CustomerDao dao;\n  //additional variable declarations omitted\n  public String destroy() {\n    String idAsString =\n     JsfUtil.getRequestParameter(\"jsfcrud.currentCustomer\");\n    Integer id = Integer.valueOf(idAsString);\n    try {\n      dao.destroy(id);\n      JsfUtil.addSuccessMessage(\n        \"Customer was successfully deleted.\");\n    } catch (Exception e){\n      //exception handling logic omitted\n    }\n    return relatedOrListOutcome();\n  }\n  //additional methods omitted\n}\n```", "```java\npackage com.ensode.jakartaeealltogether.dao;\n//imports omitted\n@Stateless\npublic class CustomerDao implements Serializable {\n  @Resource\n  private EJBContext ejbContext;\n  @PersistenceContext\n  private EntityManager em;\n  public void destroy(Integer id) throws\n    NonexistentEntityException, RollbackFailureException,\n    Exception {\n    try {\n      Customer customer;\n      try {\n        customer = em.getReference(Customer.class, id);\n        customer.getCustomerId();\n      } catch (EntityNotFoundException enfe) {\n        throw new NonexistentEntityException(\n          \"The customer with id \" + id +\n          \" no longer exists.\", enfe);\n      }\n      em.remove(customer);\n    } catch (Exception ex) {\n      try {\n        ejbContext.setRollbackOnly();\n      } catch (Exception re) {\n        throw new RollbackFailureException(\"An error \"\n            + \"occurred attempting to roll back\", re);\n      }\n      throw ex;\n    }\n  }\n  //additional methods omitted\n}\n```", "```java\n <h:commandLink action=\"#{customerController.prev}\"\n value=\"Previous #{customerController.pagingInfo.batchSize}\"\n      rendered=\"#{customerController.renderPrevLink}\"/>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.controller;\n//imports omitted\n@Named\n@SessionScoped\npublic class CustomerController implements Serializable {\n  @PostConstruct\n  public void init() {\n    pagingInfo = new PagingInfo();\n  }\n  private PagingInfo pagingInfo = null;\n  private boolean renderPrevLink;\n  @EJB\n  private CustomerDao dao;\n  //additional variable declarations omitted\n  public PagingInfo getPagingInfo() {\n    if (pagingInfo.getItemCount() == -1) {\n      pagingInfo.setItemCount(dao.getCustomerCount());\n    }\n    return pagingInfo;\n  }\n  public boolean getRenderPrevLink() {\n    return renderPrevLink;\n  }\n  public String next() {\n    reset(false);\n    getPagingInfo().nextPage();\n    renderPrevLink = getPagingInfo().getFirstItem() >=\n      getPagingInfo().getBatchSize();\n    return \"List\";\n  }\n  public String prev() {\n    reset(false);\n    getPagingInfo().previousPage();\n    renderPrevLink = getPagingInfo().getFirstItem() >=\n      getPagingInfo().getBatchSize();\n    return \"List\";\n  }\n  //additional methods omitted\n}\n```", "```java\n<h:commandLink action=\"#{customerController.next}\" value=\"Next #{customerController.pagingInfo.batchSize}\" rendered=\"#{customerController.pagingInfo.lastItem + customerController.pagingInfo.batchSize le customerController.pagingInfo.itemCount}\"\n```", "```java\n<h:commandLink action=\"#{customerController.next}\" value=\"Remaining #{customerController.pagingInfo.itemCount - customerController.pagingInfo.lastItem}\"\n                       rendered=\"#{customerController.pagingInfo.lastItem lt\n  customerController.pagingInfo.itemCount and\n  customerController.pagingInfo.lastItem +\n  customerController.pagingInfo.batchSize gt\n  customerController.pagingInfo.itemCount}\"/>\n```", "```java\npackage com.ensode.jakartaeealltogether.faces.util;\npublic class PagingInfo {\n  private int batchSize = 5;\n  private int firstItem = 0;\n  private int itemCount = -1;\n  //trivial setters and getters omitted\n  public int getFirstItem() {\n    if (itemCount == -1) {\n      throw new IllegalStateException(\n        \"itemCount must be set before invoking \" +\n        \"getFirstItem\");\n    }\n    if (firstItem >= itemCount) {\n      if (itemCount == 0) {\n        firstItem = 0;\n      } else {\n        int zeroBasedItemCount = itemCount - 1;\n        double pageDouble = zeroBasedItemCount / batchSize;\n        int page = (int) Math.floor(pageDouble);\n        firstItem = page * batchSize;\n      }\n    }\n    return firstItem;\n  }\n  public int getLastItem() {\n    getFirstItem();\n    int lastItem = firstItem + batchSize > itemCount ?\n      itemCount : firstItem + batchSize;\n    return lastItem;\n  }\n  public void nextPage() {\n    getFirstItem();\n    if (firstItem + batchSize < itemCount) {\n      firstItem += batchSize;\n    }\n  }\n  public void previousPage() {\n    getFirstItem();\n    firstItem -= batchSize;\n    if (firstItem < 0) {\n      firstItem = 0;\n    }\n  }\n}\n```"]