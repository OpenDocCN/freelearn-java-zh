["```java\n @Test\n public void searchProduct() {\n\n        // find search box and enter search string\n        WebElement searchBox = driver.findElement(By.name(\"q\"));\n\n        searchBox.sendKeys(\"Phones\");\n\n        WebElement searchButton =\n                driver.findElement(By.className(\"search-button\"));\n\n        searchButton.click();\n\n        assertThat(driver.getTitle())\n                .isEqualTo(\"Search results for: 'Phones'\");\n    }\n```", "```java\n<!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\" >\n\n<suite name=\"Chapter 1\" verbose=\"1\">\n    <listeners>\n        <listener class-name=\"com.vimalselvam.testng.listener.ExtentTestNgFormatter\"/>\n    </listeners>\n    <test name=\"Search Test\">\n <parameter name=\"searchWord\" value=\"phones\"/>\n <parameter name=\"items\" value=\"3\"/>\n        <classes>\n            <class name=\"com.example.SearchTest\"/>\n        </classes>\n    </test>\n</suite>\n```", "```java\n@Parameters({\"searchWord\", \"items\"})\n@Test\npublic void searchProduct(String searchWord, int items) {\n\n    // find search box and enter search string\n    WebElement searchBox = driver.findElement(By.name(\"q\"));\n\n    // use searchWord parameter value from XML suite file\n searchBox.sendKeys(searchWord);\n\n    WebElement searchButton =\n            driver.findElement(By.className(\"search-button\"));\n\n    searchButton.click();\n\n    assertThat(driver.getTitle())\n            .isEqualTo(\"Search results for: '\" + searchWord  + \"'\");\n\n    List<WebElement> searchItems = driver\n            .findElements(By.xpath(\"//h2[@class='product-name']/a\"));\n\n    assertThat(searchItems.size())\n .isEqualTo(items);\n}\n```", "```java\npublic class SearchTest {\n\n    WebDriver driver;\n\n @DataProvider(name = \"searchWords\")\n public Object[][] provider() {\n return new Object[][]{\n {\"phones\", 3},\n                {\"music\", 5},\n                {\"iphone 5s\", 0}\n };\n    }\n\n    @BeforeMethod\n    public void setup() {\n        ...\n    }\n    ...\n}\n```", "```java\npublic class SearchTest {\n\n    WebDriver driver;\n\n    @DataProvider(name = \"searchWords\")\n    public Object[][] provider() {\n      ...\n    }\n\n    @BeforeMethod\n    public void setup() {\n\n        System.setProperty(\"webdriver.chrome.driver\",\n                \"./src/test/resources/drivers/chromedriver\");\n        driver = new ChromeDriver();\n        driver.get(\"http://demo-store.seleniumacademy.com/\");\n\n    }\n\n    @Test(dataProvider = \"searchWords\")\n    public void searchProduct(String searchWord, int items) {\n\n        // find search box and enter search string\n        WebElement searchBox = driver.findElement(By.name(\"q\"));\n\n        searchBox.sendKeys(searchWord);\n\n        WebElement searchButton =\n                driver.findElement(By.className(\"search-button\"));\n\n        searchButton.click();\n\n        assertThat(driver.getTitle())\n                .isEqualTo(\"Search results for: '\" + searchWord + \"'\");\n\n List<WebElement> searchItems = driver\n                .findElements(By.xpath(\"//h2[@class='product-name']/a\"));\n\n        assertThat(searchItems.size())\n .isEqualTo(items);\n    }\n\n    @AfterMethod\n    public void tearDown() {\n        driver.quit();\n    }\n}\n```", "```java\nsearchWord,items\nphones,3\nmusic,5\niphone 5s,0\n```", "```java\n<dependency>\n    <groupId>com.opencsv</groupId>\n    <artifactId>opencsv</artifactId>\n    <version>3.4</version>\n</dependency>\n```", "```java\npublic class SearchTest {\n\n    WebDriver driver;\n\n    @DataProvider(name = \"searchWords\")\n public Iterator<Object[]> provider() throws Exception {\n\n CSVReader reader = new CSVReader(\n new FileReader(\"./src/test/resources/data/data.csv\")\n , ',', '\\'', 1);\n\n        List<Object[]> myEntries = new ArrayList<Object[]>();\n        String[] nextLine;\n        while ((nextLine = reader.readNext()) != null) {\n myEntries.add(nextLine);\n        }\n reader.close();\n        return myEntries.iterator();\n    }\n\n    @BeforeMethod\n    public void setup() {\n\n        System.setProperty(\"webdriver.chrome.driver\",\n                \"./src/test/resources/drivers/chromedriver\");\n        driver = new ChromeDriver();\n        driver.get(\"http://demo-store.seleniumacademy.com/\");\n\n    }\n\n    @Test(dataProvider = \"searchWords\")\n    public void searchProduct(String searchWord, String items) {\n\n        // find search box and enter search string\n        WebElement searchBox = driver.findElement(By.name(\"q\"));\n\n        searchBox.sendKeys(searchWord);\n\n        WebElement searchButton =\n                driver.findElement(By.className(\"search-button\"));\n\n        searchButton.click();\n\n        assertThat(driver.getTitle())\n                .isEqualTo(\"Search results for: '\" + searchWord + \"'\");\n\n        List<WebElement> searchItems = driver\n                .findElements(By.xpath(\"//h2[@class='product-name']/a\"));\n\n        assertThat(searchItems.size())\n                .isEqualTo(Integer.parseInt(items));\n    }\n\n    @AfterMethod\n    public void tearDown() {\n        driver.quit();\n    }\n}\n```", "```java\n@DataProvider(name = \"searchWords\")\npublic Iterator<Object[]> provider() throws Exception {\n\n    CSVReader reader = new CSVReader(\n            new FileReader(\"./src/test/resources/data/data.csv\")\n            , ',', '\\'', 1);\n\n    List<Object[]> myEntries = new ArrayList<Object[]>();\n    String[] nextLine;\n    while ((nextLine = reader.readNext()) != null) {\n        myEntries.add(nextLine);\n    }\n    reader.close();\n    return myEntries.iterator();\n}\n```", "```java\n@DataProvider(name = \"searchWords\")\npublic Object[][] provider() throws Exception {\n    SpreadsheetData spreadsheetData = new SpreadsheetData();\n    return spreadsheetData.getCellData(\"./src/test/resources/data/data.xlsx\");\n}\n```", "```java\npublic class SpreadsheetData {\n    public String[][] getCellData(String path) throws InvalidFormatException, IOException {\n        FileInputStream stream = new FileInputStream(path);\n        Workbook workbook = WorkbookFactory.create(stream);\n        Sheet s = workbook.getSheetAt(0);\n        int rowcount = s.getLastRowNum();\n        int cellcount = s.getRow(0).getLastCellNum();\n        String data[][] = new String[rowcount][cellcount];\n        for (int rowCnt = 1; rowCnt <= rowcount; rowCnt++) {\n            Row row = s.getRow(rowCnt);\n            for (int colCnt = 0; colCnt < cellcount; colCnt++) {\n                Cell cell = row.getCell(colCnt);\n                try {\n                    if (cell.getCellType() == cell.CELL_TYPE_STRING) {\n                        data[rowCnt - 1][colCnt] = cell.getStringCellValue();\n                    } else {\n                        data[rowCnt - 1][colCnt] = String.valueOf(cell.getNumericCellValue());\n                    }\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return data;\n    }\n}\n```", "```java\nInputStream spreadsheet = new FileInputStream(\"./src/test/resources/data/data.xlsx\"); \nreturn new SpreadsheetData(spreadsheet).getData(); \n```"]