["```java\nvoid method(String s){\n```", "```java\n    if(s.equals(\"abc\")){\n```", "```java\n        System.out.println(\"Equals abc\");\n```", "```java\n    } else {\n```", "```java\n        System.out.println(\"Not equal\");\n```", "```java\n    }\n```", "```java\n}\n```", "```java\ntry {\n```", "```java\n    method(null);\n```", "```java\n} catch (Exception ex){\n```", "```java\n    System.out.println(\"catchException1():\");\n```", "```java\n    System.out.println(ex.getClass().getCanonicalName());  \n```", "```java\n                       //prints: java.lang.NullPointerException\n```", "```java\n    waitForStackTrace();\n```", "```java\n    ex.printStackTrace();  //prints: see the screenshot\n```", "```java\n    if(ex instanceof NullPointerException){\n```", "```java\n        //do something\n```", "```java\n    } else {\n```", "```java\n        //do something else\n```", "```java\n    }\n```", "```java\n}\n```", "```java\ncatchException1():                                                  \njava.lang.NullPointerException                                      \njava.lang.NullPointerException: Cannot invoke \"String.equals(Object)\" because \"s\" is null                                                 \n     at com.packt.learnjava.ch04_exceptions.Framework.method(Framework.java:14)\n     at com.packt.learnjava.ch04_exceptions.Framework.catchException1(Framework.java:24)\n     at com.packt.learnjava.ch04_exceptions.Framework.main(Framework.java:8)\n```", "```java\nvoid someMethod(String s){\n```", "```java\n    try {\n```", "```java\n       method(s);\n```", "```java\n    } catch (NullPointerException ex){\n```", "```java\n       //do something\n```", "```java\n    } catch (Exception ex){\n```", "```java\n       //do something else\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nvoid someMethod(String s){\n```", "```java\n    try {\n```", "```java\n        method(s);\n```", "```java\n    } catch (NullPointerException ex){\n```", "```java\n        //do something\n```", "```java\n    } catch (RuntimeException ex){\n```", "```java\n        //do something else\n```", "```java\n    } catch (Exception ex){\n```", "```java\n        //do something different\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nvoid someMethod(String s){\n```", "```java\n    try {\n```", "```java\n        method(s);\n```", "```java\n    } catch (Exception ex){\n```", "```java\n        //do something\n```", "```java\n    }\n```", "```java\n}\n```", "```java\ntry (Connection conn = DriverManager\n```", "```java\n               .getConnection(\"dburl\", \"username\", \"password\");\n```", "```java\n     ResultSet rs = conn.createStatement()\n```", "```java\n               .executeQuery(\"select * from some_table\")) {\n```", "```java\n    while (rs.next()) {\n```", "```java\n        //process the retrieved data\n```", "```java\n    }\n```", "```java\n} catch (SQLException ex) {\n```", "```java\n    //Do something\n```", "```java\n    //The exception was probably caused \n```", "```java\n    //by incorrect SQL statement\n```", "```java\n}\n```", "```java\nvoid method(Connection conn, ResultSet rs) {\n```", "```java\n    try (conn; rs) {\n```", "```java\n        while (rs.next()) {\n```", "```java\n            //process the retrieved data\n```", "```java\n        }\n```", "```java\n    } catch (SQLException ex) {\n```", "```java\n        //Do something\n```", "```java\n        //The exception was probably caused \n```", "```java\n        //by incorrect SQL statement\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nStatement createStatement() throws SQLException;\n```", "```java\nvoid throwsDemo() throws SQLException {\n```", "```java\n    Connection conn = \n```", "```java\n      DriverManager.getConnection(\"url\",\"user\",\"pass\");\n```", "```java\n    ResultSet rs = conn.createStatement().executeQuery(\n```", "```java\n      \"select * ...\");\n```", "```java\n    try (conn; rs) {\n```", "```java\n        while (rs.next()) {\n```", "```java\n            //process the retrieved data\n```", "```java\n        }\n```", "```java\n    } finally { \n```", "```java\n        try {\n```", "```java\n           if(conn != null) {\n```", "```java\n              conn.close();\n```", "```java\n           }\n```", "```java\n        } finally {\n```", "```java\n           if(rs != null) {\n```", "```java\n               rs.close();\n```", "```java\n           }\n```", "```java\n        }\n```", "```java\n    }\n```", "```java\n}\n```", "```java\nclass MyCheckedException extends Exception{\n```", "```java\n    public MyCheckedException(String message){\n```", "```java\n        super(message);\n```", "```java\n    }\n```", "```java\n    //add code you need to have here\n```", "```java\n}\n```", "```java\nclass MyUncheckedException extends RuntimeException{\n```", "```java\n    public MyUncheckedException(String message){\n```", "```java\n        super(message);\n```", "```java\n    }\n```", "```java\n    //add code you need to have here\n```", "```java\n}\n```", "```java\nthrow new Exception(\"Something happened\"); \n```", "```java\nthrow new RuntimeException(\"Something happened\");\n```", "```java\nthrow new MyCheckedException(\"Something happened\");\n```", "```java\nthrow new MyUncheckedException(\"Something happened\");\n```", "```java\nthrow null;\n```", "```java\nthrow new NullPointerException;\n```", "```java\npublic someMethod(String s){\n```", "```java\n    //any code goes here\n```", "```java\n    assert(assertSomething(x, y, z));\n```", "```java\n    //any code goes here\n```", "```java\n}\n```", "```java\nboolean assertSomething(int x, String y, double z){\n```", "```java\n    //do something and return boolean\n```", "```java\n}\n```", "```java\n    try {\n        throw null;\n    } catch (RuntimeException ex) {\n        System.out.print(\"RuntimeException \");\n    } catch (Exception ex) {\n        System.out.print(\"Exception \");\n    } catch (Error ex) {\n        System.out.print(\"Error \");\n    } catch (Throwable ex) {\n        System.out.print(\"Throwable \");\n    } finally {\n        System.out.println(\"Finally \");\n    }\n    ```", "```java\n    void method1() throws Exception { throw null; }\n    void method2() throws RuntimeException { throw null; }\n    void method3() throws Throwable { throw null; }\n    void method4() throws Error { throw null; }\n    ```", "```java\n    throw new NullPointerException(\"Hi there!\"); //1\n    throws new Exception(\"Hi there!\");          //2\n    throw RuntimeException(\"Hi there!\");       //3\n    throws RuntimeException(\"Hi there!\");     //4\n    ```", "```java\n    assert (x > 3); //1\n    assert (x = 3); //2\n    assert (x < 4); //3\n    assert (x = 4); //4\n    ```"]