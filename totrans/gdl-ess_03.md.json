["```java\nhello-web\n├── build.gradle\n└── src\n └── main\n ├── java// source root\n │ └── com\n │     └── packtpub\n │         └── ge\n │             └── hello\n │                 ├── GreetingService.java\n │                 └── GreetingServlet.java\n └── webapp// web-app root\n ├── WEB-INF\n │ └── greet.jsp\n └── index.html\n\n```", "```java\n    <!doctype html>\n    <html>\n      <head>\n        <title>Hello Web</title>\n      </head>\n      <body>\n        <form action=\"greet\" method=\"post\">\n          <input type=\"text\" name=\"name\"/>\n          <input type=\"submit\"/>\n        </form>\n      </body>\n    </html>\n    ```", "```java\n    package com.packtpub.ge.hello;\n\n    import javax.servlet.*;\n    import javax.servlet.annotation.WebServlet;\n    import javax.servlet.http.*;\n    import java.io.IOException;\n\n    @WebServlet(\"/greet\")\n    public class GreetingServlet extends HttpServlet {\n\n      GreetingService service = new GreetingService();\n\n      @Override\n      public void doPost(HttpServletRequest request,\n                         HttpServletResponse response)\n        throws ServletException, IOException {\n\n        String name = request.getParameter(\"name\");\n        String message = service.greet(name);\n        request.setAttribute(\"message\", message);\n\n        RequestDispatcher dispatcher = getServletContext()\n          .getRequestDispatcher(\"/WEB-INF/greet.jsp\");\n\n        dispatcher.forward(request, response);\n      }\n\n    }\n    ```", "```java\n    <!doctype html>\n    <html>\n      <head>\n        <title>Hello Web</title>\n      </head>\n      <body>\n        <h1>${requestScope.message}</h1>\n      </body>\n    </html>\n    ```", "```java\napply plugin: 'war'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'\n}\n```", "```java\ndependencies {\n    compile 'org.springframework:spring-context:4.0.6.RELEASE'\n    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'\n}\n```", "```java\n$ gradle tasks --all\n…\nwar - Generates a war archive with all the compiled classes, the web-app content and the libraries. [classes]\n…\n\n```", "```java\n$ gradle war\n\n```", "```java\nhello-web\n├── build\n│ ├── classes\n│ │ └── main\n│ │     └── com\n│ │         └── packtpub\n│ │             └── ge\n│ │                 └── hello\n│ │                     ├── GreetService.class\n│ │                     └── GreetServlet.class\n│ ├── dependency-cache\n│ ├── libs\n│ │ └── hello-web.war\n│ └── tmp\n│     └── war\n│         └── MANIFEST.MF\n…\n\n```", "```java\n├── META-INF\n│ └── MANIFEST.MF\n├── WEB-INF\n│ ├── classes\n│ │ └── com\n│ │     └── packtpub\n│ │         └── ge\n│ │             └── hello\n│ │                 ├── GreetService.class\n│ │                 └── GreetServlet.class\n│ └── greet.jsp\n└── index.html\n\n```", "```java\nplugins {\n id \"org.akhikhl.gretty\" version \"1.2.4\"\n}\n\n```", "```java\nplugins {\n  id \"org.akhikhl.gretty\" version \"1.2.4\"\n  id \"war\"\n}\n```", "```java\n    gretty {\n      servletContainer = 'tomcat8'\n      port = 8080\n    }\n    ```", "```java\n    gretty {\n      servletContainer = 'jetty9'\n      port = 9080\n    }\n    ```", "```java\ndependencies {\n  compile 'org.springframework:spring-core:4.0.6.RELEASE'\n}\n```", "```java\ncompile group:'org.springframework', name:'spring-core', version:'4.0.6.RELEASE'\n```", "```java\nconfigurationName dep1, dep2, dep3…. \n```", "```java\nruntime 'org.slf4j:slf4j-nop:1.7+'\n```", "```java\n$ gradle dependencies\n…\n+--- org.slf4j:slf4j-nop:1.7+ -> 1.7.7\n|    \\--- org.slf4j:slf4j-api:1.7.7\n…\n\n```", "```java\n    runtime ('org.slf4j:slf4j-nop:1.7+') {\n        transitive = false\n    }\n```", "```java\n\\--- org.slf4j:slf4j-nop:1.7.2\n\n```", "```java\n    runtime ('org.slf4j:slf4j-nop:1.7.2') {\n        force = true  \n    }\n```", "```java\n+--- org.slf4j:slf4j-api:1.7.2\n\\--- org.slf4j:slf4j-nop:1.7.7\n \\--- org.slf4j:slf4j-api:1.7.7 -> 1.7.2\n\n```", "```java\nrepositories {\n  mavenCentral()  // shortcut to maven central\n  mavenLocal()    // shortcut to maven local (typically ~/.m2)\n  jcenter()       // shortcut to jcenter\n  maven {\n    url \"http://repo.company.com/maven\"\n  }\n  ivy {\n    url \"http://repo.company.com/ivy\"\n  }\n  flatDir {       // jars kept on local file system\n    dirs 'libDir'\n  }\n}\n```", "```java\nmaven {\n  url\"http://intranet.example.com/repo\"\n}\n```", "```java\nWordUtils.capitalize(String str)\n```"]