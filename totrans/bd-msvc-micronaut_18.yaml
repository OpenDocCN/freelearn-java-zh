- en: Assessment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The answers for chapters 1 to 9 are mostly theoretical or practical. So it is
    enough to have read through them to answer the questions in those chapters.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B16585_10_Final_VK_ePub.xhtml#_idTextAnchor172)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Internet of Things** (**IoT**) is a network of devices or things. These things
    could be anything from a human wearing a health monitor, a pet wearing a geolocation
    sensor, a car with a tire pressure sensor, a television with voice/visual capabilities,
    or a smart speaker.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We discussed this in the *Basics of IoT* section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Doorbells, locks, lightbulbs, speakers, televisions, healthcare systems, fitness
    systems, Google Home, Amazon Alexa, Apple Siri, Microsoft Cortana, and Samsung
    Bixby.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We discussed this in the *Basics of IoT* section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Alexa skills are like apps, and you can enable or disable skills using the Alexa
    app for a specific device. Skills are voice-based Alexa capabilities.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We discussed this in the *Basics of IoT* section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Intents capture events the end user wants to implement with their voice. An
    intent represents an action that is triggered by the user's spoken request. Intents
    in Alexa are specified in a JSON structure called intent schema. Built-in intents
    are **Cancel**, **Help**, **Stop**, **Navigate Home**, and **Fallback**. Some
    intents are basic, such as Help, and the skills should have a **Help** intent.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We discussed this in the *Basics of intents* section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Java, Node.js, C#, or Go.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We discussed this in the *Your first HelloWorld Alexa skill* section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`LaunchRequestHandler`. `LaunchRequestHandler` is the first intent code that
    is triggered whenever a skill is launched.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We discussed this in the *Your first HelloWorld Alexa skill* section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`@Singleton` annotation. To change any Alexa Java handler to work with Micronaut,
    all we need to do is to add the `@Singleton` annotation, which is the `javax.inject.Singleton`
    annotation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We discussed this in the *Integrating Micronaut with Alexa* section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B16585_11_Final_VK_ePub.xhtml#_idTextAnchor183)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are a few factors to consider when architecting microservices
    are the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Does your team know about microservices?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Is your business mature enough to adopt microservices?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you have an Agile DevOps practice and infrastructure?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you have a scalable on-premise or cloud infrastructure?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you have support to use modern tools and technology?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Is your database ready to be decentralized?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you have support from all the stakeholders?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: We discussed this in the *Architecting enterprise microservices* section.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'These are some design patterns:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Decomposition by business capability
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Decomposition by domain/sub-domains
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The API Gateway pattern
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The chained microservices pattern
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Database per service
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The command query responsibility segregation pattern
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The service discovery pattern
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The circuit breaker pattern
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The log aggregation pattern
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: We discussed this in the *Design* section.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following are a few factors to consider during the design phase of microservices:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Design patterns
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Security
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Authentication strategy
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Security rules
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Privilege-based access
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: OAuth and SSL
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Privacy-specific standards such as HIPPA, GDPR, and PIPEDA
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Encryption at rest and encryption in transit
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A data retention strategy and log archival strategy
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Local country regulations
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Technology currency/versions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: We discussed this in the *Design* section.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following are a few factors should you consider during the development
    phase of microservices:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Always use the latest stable and supported version for development
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Leverage automation testing
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Test at various levels such as unit testing, service testing, and integration
    testing
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use mocking and spying concepts during testing
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Emulate a real-world environment using containers or cloud infrastructure
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Synchronize development, QA, UAT, and PROD environments
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: During development, think about backward compatibility for the microservice
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Have a separate database for each microservice to achieve the fullest potential
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: We discussed this in the *Develop* section.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following are a few tools that are used in the deployment phase:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Containers
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtual machines
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The cloud
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Jib
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Jenkins
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DevOps Strategy and infrastructure to support Continuous Integration and Continuous
    Delivery
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: We discussed this in the *Deploy* section.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following are a few tools that are used in the manage and maintain phase:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Elasticsearch
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Logstash
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Kibana
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Prometheus
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Grafana
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Sonar
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: We discussed this in the *Manage and maintain* section.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following are types of scaling:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Vertical
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Horizontal
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Microservices horizontal
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: We discussed this in the *Scaling Micronaut* section.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: The tool used is **Microservices Horizontal** (container/services-based scaling).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We discussed this in the *Scaling Micronaut* section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
