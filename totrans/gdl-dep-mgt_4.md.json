["```java\napply plugin: 'java'\n\n// Set the archivesBaseName property,\n// to change the name of the\n// default project artifact.\narchivesBaseName = 'java_lib'\n\ntask artifactsInfo << {\n  // Find archives configuration\n  // and display file name(s)\n  // for artifacts belonging\n  // to the configuration.\n  configurations\n    .findByName('archives')\n    .allArtifacts\n    .each { artifact ->\n      println artifact.file.name\n    }\n}\n```", "```java\n$ gradle artifactsInfo\n:artifactsInfo\njava_lib.jar\n\nBUILD SUCCESSFUL\n\nTotal time: 1.088 secs\n\n```", "```java\n$ gradle buildArchives\n:compileJava\n:processResources\n:classes\n:jar\n:buildArchives\n\nBUILD SUCCESSFUL\n\nTotal time: 1.209 secs\n$ ls build/libs\njava_lib.jar\n\n```", "```java\napply plugin: 'java'\n\narchivesBaseName = 'java_lib'\n\n// Set project version,\n// which is then used in the \n// artifact name.\nversion = '2.3'\n\ntask artifactsInfo << {\nconfigurations\n    .findByName('archives')\n    .allArtifacts\n    .each { artifact ->\n      println artifact.file.name\n    }\n}\n```", "```java\n$ gradle artifactsInfo\n:artifactsInfo\njava_lib-2.3.jar\n\nBUILD SUCCESSFUL\n\nTotal time: 2.831 secs\n\n```", "```java\n// The base plugin adds the\n// build<ConfigurationName> and\n// upload<ConfigurationName> tasks\n// to our project.\napply plugin: 'base'\n\n// Add archive task that will\n// create a ZIP file with some\n// contents we want to be published.\ntask manual(type: Zip) {\n  baseName = 'manual'\n\n  from 'src/manual'\n}\n\n// Create a new artifacts configuration\n// with the name manualDistribution.\nconfigurations {\n  manualDistribution\n}\n\n// Use the manual archive task\n// to define the artifact for the\n// manualDistribution configuration.\n// Syntax:\n// configurationName archiveTask\nartifacts {\n  manualDistribution manual\n}\n```", "```java\n$ gradle buildManualDistribution\n:manual\n:buildManualDistribution\n\nBUILD SUCCESSFUL\n\nTotal time: 1.368 s\necs\n\n```", "```java\napply plugin: 'base'\n\nconfigurations {\n  readmeDistribution\n}\n\nartifacts {\n  // Use a file as artifact.\n  // Name and extension are extracted\n  // from the actual file.\n  readmeDistribution file('src/files/README.txt')\n}\n```", "```java\napply plugin: 'base'\n\nconfigurations {\n  readmeDistribution\n}\n\nartifacts {\n  // Define file artifact, but we also\n  // customize the file artifact\n  // name, extension and classifier.\n  readmeDistribution file('src/files/README.txt'), {\n    name 'PLEASE_READ_THIS'\n    extension ''\n    classifier 'docs'\n  }\n}\n```", "```java\napply plugin: 'base'\n\nconfigurations {\n  readmeDistribution\n}\n\n// New task that copies\n// a file to the build directory.\ntask docFiles(type:Copy) {\n  from 'src/files'\n  into \"${buildDir}/docs\"\n  include 'README.txt'\n}\n\nartifacts {\n  // Define file artifact.\n  readmeDistribution(file(\"${buildDir}/docs/README.txt\")) {\n    // Define which task is responsible\n    // for creating the file, so a\n    // task dependency is added for\n    // the buildReadmeDistribution and\n    // uploadReadmeDistribution tasks.\n    builtBy docFiles\n  }\n}\n```", "```java\n$ gradle buildReadmeDistribution\n:docFiles\n:buildReadmeDistribution\n\nBUILD SUCCESSFUL\n\nTotal time: 0.864 secs\n\n```", "```java\napply plugin: 'base'\n\nconfigurations {\n  readmeDistribution\n}\n\ntask docFiles(type:Copy) {\n  from 'src/files'\n  into \"${buildDir}/docs\"\n  include 'README.txt'\n}\n\nartifacts {\n  // Define file artifact.\n  readmeDistribution(\n    file: \"${buildDir}/docs/README.txt\",\n    name: 'DO_READ',\n    extension: 'me',\n    type: 'text',\n    classifier: 'docs'\n    builtBy: docFiles\n  )\n}\n```", "```java\napply plugin: 'java'\n\n// Define project properties.\ngroup = 'com.mrhaki.sample'\nversion = '2.1'\narchivesBaseName = 'sample'\n\n// Extra task to check the artifacts.\ntask artifactsInfo << {\n  configurations\n    .findByName('archives')\n    .allArtifacts\n    .each { artifact ->\n      println artifact.file.name\n    }\n}\n```", "```java\n$ gradle buildArchives artifactsInfo\n:compileJava\n:processResources\n:classes\n:jar\n:buildArchives\n:artifactsInfo\nsample-2.1.jar\n\nBUILD SUCCESSFUL\n\nTotal time: 7.643 secs\n$\n\n```", "```java\napply plugin: 'java'\n\n// Define project properties.\ngroup = 'com.mrhaki.sample'\nversion = '2.1'\narchivesBaseName = 'sample'\n\n// Create a JAR file with the\n// Java source files.\ntask sourcesJar(type: Jar) {\n  classifier = 'sources'\n\n  from sourceSets.main.allJava\n}\n\n// Create a JAR file with the output\n// of the javadoc task.\ntask javadocJar(type: Jar) {\n  classifier = 'javadoc'\n\n  from javadoc\n}\n\nartifacts {\n  // Add the new archive tasks\n  // to the artifacts configuration.\n  archives sourcesJar, javadocJar\n}\n\n// Extra task to check the artifacts.\ntask artifactsInfo << {\n  configurations\n    .findByName('archives')\n    .allArtifacts\n    .each { artifact ->\n      println artifact.file.name\n    }\n}\n```", "```java\n$ gradle buildArchives artifactsInfo\n:compileJava\n:processResources\n:classes\n:jar\n:javadoc\n:javadocJar\n:sourcesJar\n:buildArchives\n:artifactsInfo\nsample-2.1.jar\nsample-2.1-sources.jar\nsample-2.1-javadoc.jar\n\nBUILD SUCCESSFUL\n\nTotal time: 2.945 secs\n$\n\n```", "```java\napply plugin: 'java'\n\n// Define project properties.\ngroup = 'com.mrhaki.sample'\nversion = '2.1'\narchivesBaseName = 'sample'\n\n// We create a new source set\n// api, which contains the\n// Java sources. This means\n// Gradle will search for the\n// directory src/api/java.\nsourceSets {\n  api\n}\n\ntask apiJar(type: Jar) {\n  appendix = 'api'\n\n  // We use the output of the\n  // compilation of the api\n  // source set, to be the\n  // contents of this JAR file.\n  from sourceSets.api.output\n}\n\nartifacts {\n  // Assign apiJar archive task to the\n  // archives configuration.\n  archives apiJar\n}\n\n// Extra task to check the artifacts.\ntask artifactsInfo << {\n  configurations\n    .findByName('archives')\n    .allArtifacts\n    .each { artifact ->\n      println artifact.file.name\n    }\n}\n```", "```java\n$ gradle buildArchives artifactsInfo\n:compileApiJava\n:processApiResources\n:apiClasses\n:apiJar\n:compileJava\n:processResources\n:classes\n:jar\n:buildArchives\n:artifactsInfo\nsample-2.1.jar\nsample-api-2.1.jar\n\nBUILD SUCCESSFUL\n\nTotal time: 2.\n095 secs\n$\n\n```", "```java\napply plugin: 'java'\n\n// Define project properties.\ngroup = 'com.mrhaki.sample'\nversion = '2.1'\narchivesBaseName = 'sample'\n\n// Configure the uploadArchives task.\nuploadArchives {\n  // Define a local directory as the\n  // upload repository. The artifacts\n  // must be 'published' in this\n  // directory.\n  repositories {\n    flatDir(\n      name: 'upload-repository',\n      dirs: \"${projectDir}/lib-repo\")\n  }\n}\n```", "```java\n$ gradle uploadArchives\n:compileJava UP-TO-DATE\n:processResources UP-TO-DATE\n:classes UP-TO-DATE\n:jar UP-TO-DATE\n:uploadArchives\n\nBUILD SUCCESSFUL\n\nTotal time: 3.424 secs\n$ ls -1 lib-repo\nivy-2.1.xml\nivy-2.1.xml.sha1\nsample-2.1.jar\nsample-2.1.jar.sha1\n$\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ivy-module version=\"2.0\" >\n  <info organisation=\"com.mrhaki.sample\" module=\"java\" revision=\"2.1\" status=\"integration\" publication=\"20141126060840\">\n    <description/>\n  </info>\n  <configurations>\n    <conf name=\"archives\" visibility=\"public\" description=\"Configuration for archive artifacts.\"/>\n    <conf name=\"compile\" visibility=\"private\" description=\"Compile classpath for source set 'main'.\"/>\n    <conf name=\"default\" visibility=\"public\" description=\"Configuration for default artifacts.\" extends=\"runtime\"/>\n    <conf name=\"runtime\" visibility=\"private\" description=\"Runtime classpath for source set 'main'.\" extends=\"compile\"/>\n    <conf name=\"testCompile\" visibility=\"private\" description=\"Compile classpath for source set 'test'.\" extends=\"compile\"/>\n    <conf name=\"testRuntime\" visibility=\"private\" description=\"Runtime classpath for source set 'test'.\" extends=\"runtime,testCompile\"/>\n  </configurations>\n  <publications>\n    <artifact name=\"sample\" type=\"jar\" ext=\"jar\" conf=\"archives,runtime\"/>\n  </publications>\n</ivy-module>\n```", "```java\napply plugin: 'java'\n\n// Define project properties.\ngroup = 'com.mrhaki.sample'\nversion = '2.1'\narchivesBaseName = 'sample'\n\n// Define upload repository.\nrepositories {\n  flatDir(\n    name: 'upload-repository',\n    dirs: \"${projectDir}/repo\")\n}\n\n// Configure the uploadArchives task.\nuploadArchives {\n  // Refer to repository with the\n  // name 'upload-repository' as the\n  // repository for uploading artifacts.\n  repositories.add(\n    project.repositories.'upload-repository')\n}\n```", "```java\napply plugin: 'java'\n\n// Define project properties.\ngroup = 'com.mrhaki.sample'\nversion = '2.1'\narchivesBaseName = 'sample'\n\n// Define upload repository.\nrepositories {\n  flatDir(\n    name: 'upload-repository',\n    dirs: \"${projectDir}/lib-repo\")\n}\n\nuploadArchives {\n  // Exclude the descriptor file.\n  uploadDescriptor = false\n\n  repositories.add(\n    project.repositories.'upload-repository')\n}\n```", "```java\n$ gradle uploadArchives\n:compileJava\n:processResources\n:classes\n:jar\n:uploadArchives\n\nBUILD SUCCESSFUL\n\nTotal time: 1.463 secs\n$ ls -1 lib-repo\nsample-2.1.jar\nsam\nple-2.1.jar.sha1\n$\n\n```", "```java\nsigning.keyId = 8B00165A\nsigning.secretKeyRingFile = /Users/current/.gnupg/secring.gpg\nsigning.password = secret\n```", "```java\napply plugin: 'java'\napply plugin: 'signing'\n\ngroup = 'com.mrhaki.sample'\nversion = '2.1'\narchivesBaseName = 'sample'\n\n// Configure signing plugin.\nsigning {\n  // Define that we want to\n  // sign the artifacts belonging\n  // to the archives configuration.\n  sign configurations.archives\n}\n\nuploadArchives {\n  repositories {\n    flatDir(\n      name: 'local-repo',\n      dirs: \"${projectDir}/repo\")\n  }\n}\n```", "```java\n$ gradle uploadArchives\n:compileJava\n:processResources\n:classes\n:jar\n:signArchives\n:uploadArchives\n\nBUILD SUCCESSFUL\n\nTotal time: 4.305 secs\n$ ls -1 repo\nivy-2.1.xml\nivy-2.1.xml.sha1\nsample-2.1.asc\nsample-2.1.asc.sha1\nsample-2.1.jar\nsample-2.1.jar.sha1\n$\n\n```", "```java\napply plugin: 'signing'\n\nversion = '1.0'\n\n// New archive task to create\n// a ZIP file from some files.\ntask manualZip(type: Zip) {\n  archivesBaseName = 'manual'\n  from 'src/docroot'\n}\n\n// Configure signing plugin to\n// sign the output of the\n// manualZip task.\nsigning {\n  sign manualZip\n}\n\n// Create new configuration for\n// ZIP and signed ZIP artifacts.\nconfigurations {\n  manualDistribution\n}\n\n// Set artifacts to manualDistribution\n// configuration.\nartifacts {\n  manualDistribution(\n    manualZip,\n    signManualZip.singleSignature.file)\n}\n\n// Configure upload task for\n// manualDistribution configuration.\nuploadManualDistribution {\n  repositories {\n    flatDir {\n      dirs \"${projectDir}/repo\"\n    }\n  }\n}\n// Add task dependency so signing of\n// ZIP file is done before upload.\nuploadManualDistribution.dependsOn signManualZip\n```", "```java\n$ gradle uploadManualDistribution\n:manualZip\n:signManualZip\n:uploadManualDistribution\n\nBUILD SUCCESSFUL\n\nTotal time: 1.695 secs\n$ ls -1 repo\nivy-1.0.xml\nivy-1.0.xml.sha1\nmanual-1.0.zip\nmanual-1.0.zip-1.0.asc\nmanual-1.0.zip-1.0.asc.sha1\nmanual-1.0.zip.sha1\n$\n\n```"]