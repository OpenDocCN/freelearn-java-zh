["```java\n@RestController\npublic class BookInfoServiceController {\n    @RequestMapping(\"/book-info\")\n    public String bookInfo(@RequestParam String query) {\n```", "```java\n        String responseJson =\"{}\";\n        try {\n            String url = \"https://www.googleapis.com/                books/v1/volumes?q=\"+query+\"&key=<your google                     api key>\";\n            HttpClient client = HttpClient.newHttpClient();\n            HttpRequest request = HttpRequest.newBuilder()                .uri(URI.create(url)).build();\n            HttpResponse<String> response;\n            response =                 client.send(request, BodyHandlers.ofString());\n            responseJson = response.body();\n        } catch (Exception e) {\n            responseJson = \"{'error','\"+e.getMessage()+\"'}\";\n            e.printStackTrace();\n        } \n        return responseJson;\n    }\n}\n```", "```java\n./mvnw package\n```", "```java\njava -jar target/book-info-service-0.0.1-SNAPSHOT.jar\n```", "```java\nFROM adoptopenjdk/openjdk11:ubi\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} bookinfo.jar\nENTRYPOINT [\"java\",\"-jar\",\"/bookinfo.jar\"]\n```", "```java\ndocker build -t abvijaykumar/bookinfo-traditional .\n```", "```java\ndocker images\n```", "```java\ndocker run -p 8080:8080 abvijaykumar/bookinfo-traditional\n```", "```java\n  mn create-app com.abvijay.f.mn.bookinfoservice -b=maven\n| Application created at /Users/vijaykumarab/Google Drive/GraalVM-Book/Code/chapter9/mn/bookinfoservice\n```", "```java\njava -version\njava version \"11.0.10\" 2021-01-19 LTS\nJava(TM) SE Runtime Environment GraalVM EE 21.0.0.2 (build 11.0.10+8-LTS-jvmci-21.0-b06)\nJava HotSpot(TM) 64-Bit Server VM GraalVM EE 21.0.0.2 (build 11.0.10+8-LTS-jvmci-21.0-b06, mixed mode, sharing)\n```", "```java\n@Controller(\"/bookinfo\")\npublic class BookInfoController {\n    @Get(\"get-info\") \n    public String getBookInfo(String query) {\n        BookInfoService svc = new BookInfoService();\n        String ret = svc.fetch(query);\n        return ret;\n    }\n}\n```", "```java\n./mvnw package\n```", "```java\n./mvnw mn:run\n```", "```java\nmvn package -Dpackaging=docker\n```", "```java\nFROM openjdk:15-alpine\nWORKDIR /home/app\nCOPY classes /home/app/classes\nCOPY dependency/* /home/app/libs/\nEXPOSE 8080\nENTRYPOINT [\"java\", \"-cp\", \"/home/app/libs/*:/home/app/classes/\", \"com.abvijay.chapter9.mn.Application\"]\n```", "```java\ndocker build -t abvijaykumar/bookinfo-micronaut .\ndocker images\n```", "```java\ndocker run -p 8080:8080 abvijaykumar/bookinfo-micronaut  \n```", "```java\n __  __ _                                  _   \n|  \\/  (_) ___ _ __ ___  _ __   __ _ _   _| |_ \n| |\\/| | |/ __| '__/ _ \\| '_ \\ / _` | | | | __|\n| |  | | | (__| | | (_) | | | | (_| | |_| | |_ \n|_|  |_|_|\\___|_|  \\___/|_| |_|\\__,_|\\__,_|\\__|\n  Micronaut (v2.4.1)\n01:24:35.391 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 1566ms. Server Running: http://7df31221ee43:8080\n```", "```java\n./mvnw package -Dpackaging=native-image\ndocker images\n```", "```java\nmvn mn:dockerfile -Dpackaging=docker-native\n```", "```java\nFROM ghcr.io/graalvm/graalvm-ce:java11-21.0.0.2 AS builder\nRUN gu install native-image\nWORKDIR /home/app\nCOPY classes /home/app/classes\nCOPY dependency/* /home/app/libs/\nRUN native-image -H:Class=com.abvijay.chapter9.mn.Application -H:Name=application --no-fallback -cp \"/home/app/libs/*:/home/app/classes/\"\nFROM frolvlad/alpine-glibc:alpine-3.12\nRUN apk update andand apk add libstdc++\nCOPY --from=builder /home/app/application /app/application\nEXPOSE 8080\nENTRYPOINT [\"/app/application\"]\n```", "```java\n docker run -p 8080:8080 bookinfoservice\n```", "```java\n/app/application: /usr/lib/libstdc++.so.6: no version information available (required by /app/application)\n __  __ _                                  _\n|  \\/  (_) ___ _ __ ___  _ __   __ _ _   _| |_\n| |\\/| | |/ __| '__/ _ \\| '_ \\ / _` | | | | __|\n| |  | | | (__| | | (_) | | | | (_| | |_| | |_\n|_|  |_|_|\\___|_|  \\___/|_| |_|\\__,_|\\__,_|\\__|\n  Micronaut (v2.4.1)\n09:16:19.604 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 551ms. Server Running: http://da2bf01c90e4:8080\n```", "```java\n./mvnw compile quarkus:dev. \n```", "```java\n@Path(\"/bookinfo\")\npublic class BookInfoService {\n    @GET\n    @Produces(MediaType.TEXT_PLAIN)\n    @Path(\"/getBookInfo/{query}\")\n    public String getBookInfo(@PathParam String query) {\n        String responseJson = \"{}\";\n        try {\n            String url = \"https://www.googleapis.com/books/                v1/volumes?q=\" + query                     + \"andkey=<your google api key>\";\n            HttpClient client = HttpClient.newHttpClient();\n            HttpRequest request =                HttpRequest.newBuilder()                    .uri(URI.create(url)).build();\n            HttpResponse<String> response;\n            response = client.send(request,                BodyHandlers.ofString());\n            responseJson = response.body();\n        } catch (Exception e) {\n            responseJson =                 \"{'error', '\" + e.getMessage() + \"'}\";\n            e.printStackTrace();\n        }\n        return responseJson;\n    }\n}\n```", "```java\n<profiles>\n    <profile>\n        <id>native</id>\n        <properties>\n            <quarkus.package.type>native</quarkus.package.type>\n        </properties>\n    </profile>\n</profiles>\n```", "```java\nmvn package -Pnative\n```", "```java\n./bookinfoservice-1.0.0-SNAPSHOT-runner \n__  ____  __  _____   ___  __ ____  ______ \n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ \n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\   \n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/   \n2021-03-31 11:26:31,564 INFO  [io.quarkus] (main) bookinfoservice 1.0.0-SNAPSHOT native (powered by Quarkus 1.13.0.Final) started in 0.015s. Listening on: http://0.0.0.0:8080\n2021-03-31 11:26:31,843 INFO  [io.quarkus] (main) Profile prod activated. \n2021-03-31 11:26:31,843 INFO  [io.quarkus] (main) Installed features: [cdi, rest-client, rest-client-jsonb, resteasy]\n```", "```java\ndocker build -f ./src/main/docker/Dockerfile.jvm -t abvijaykumar/bookinfo-quarkus-jvm .\ndocker build -f ./src/main/docker/Dockerfile.jvm-legacy -t abvijaykumar/bookinfo-quarkus-jvm-legacy .\ndocker build -f ./src/main/docker/Dockerfile.native -t abvijaykumar/bookinfo-quarkus-native .\ndocker build -f ./src/main/docker/Dockerfile.native-distroless -t abvijaykumar/bookinfo-quarkus-native-distroless .\n```", "```java\n docker images\n```", "```java\nfn init --runtime java book-info-service-function\nCreating function at: ./book-info-service-function\nFunction boilerplate generated.\nfunc.yaml created.\n```", "```java\nschema_version: 20180708\nname: book-info-service-function\nversion: 0.0.1\nruntime: java\nbuild_image: fnproject/fn-java-fdk-build:jdk11-1.0.124\nrun_image: fnproject/fn-java-fdk:jre11-1.0.124\ncmd: com.example.fn.HelloFunction::handleRequest\n```", "```java\n    public String getBookInfo(String query) {\n        String responseJson = \"{}\";\n        try {\n            String url = \"https://www.googleapis.com/                books/v1/volumes?q=\" + query                     + \"&key=<your_google_api_key>\";\n            HttpClient client = HttpClient.newHttpClient();\n            HttpRequest request = HttpRequest.newBuilder()                .uri(URI.create(url)).build();\n            HttpResponse<String> response;\n            response = client.send(request,                BodyHandlers.ofString());\n            responseJson = response.body();\n        } catch (Exception e) {\n            responseJson =                 \"{'error', '\" + e.getMessage() + \"'}\";\n            e.printStackTrace();\n        }\n        return responseJson;    \n    }\n```", "```java\nfn create app book-info-service-app\nSuccessfully created app:  book-info-service-app\n```", "```java\nfn deploy --app book-info-service-app --local\nDeploying book-info-service-function to app: book-info-service-app\nBumped to version 0.0.2\nBuilding image book-info-service-function:0.0.2 .............................................................................................................\nUpdating function book-info-service-function using image book-info-service-function:0.0.2...\nSuccessfully created function: book-info-service-function with book-info-service-function:0.0.2\n```", "```java\n docker images\n```", "```java\n fn inspect function book-info-service-app book-info-service-function\n{\n    \"annotations\": {\n        \"fnproject.io/fn/invokeEndpoint\":\n        \"http://localhost:8080/invoke/        01F29E8SXKNG8G00GZJ0000002\"\n    },\n    \"app_id\": \"01F29E183WNG8G00GZJ0000001\",\n    \"created_at\": \"2021-04-02T14:02:25.587Z\",\n    \"id\": \"01F29E8SXKNG8G00GZJ0000002\",\n    \"idle_timeout\": 30,\n    \"image\": \"book-info-service-function:0.0.2\",\n    \"memory\": 128,\n    \"name\": \"book-info-service-function\",\n    \"timeout\": 30,\n    \"updated_at\": \"2021-04-02T14:02:25.587Z\"\n}\n```", "```java\necho -n 'java' | fn invoke book-info-service-app book-info-service-function\n{\n  \"kind\": \"books#volumes\",\n  \"totalItems\": 1941,\n  \"items\": [\n    {\n        \"kind\": \"books#volume\",\n        \"id\": \"Q3_QDwAAQBAJ\",\n        \"etag\": \"0Hl3HzInpzY\",\n        \"selfLink\": \"https://www.googleapis.com/            books/v1/volumes/Q3_QDwAAQBAJ\",\n                \"volumeInfo\": {\n        \"title\": \"Java Performance\",\n…\n```", "```java\nfn init --init-image fnproject/fn-java-native-init book-info-service-function-graal\nCreating function at: ./book-info-service-function-graal\nRunning init-image: fnproject/fn-java-native-init\nExecuting docker command: run --rm -e FN_FUNCTION_NAME=book-info-service-function-graal fnproject/fn-java-native-init\nfunc.yaml created.\n```", "```java\nCMD [\"com.abvijay.chapter9.fn.BookInfoService::BookInfoService\"]\n```", "```java\nfn create app book-info-service-app-graal\nSuccessfully created app:  book-info-service-app-graal\n```", "```java\ndocker images\n```"]