["```java\n    module app { \n      requires lib; \n    } \n    module lib { \n      exports lib.external; \n    } \n```", "```java\n    package packt.lib.external; \n    public interface LibApi { \n      static LibApi createInstance() { \n        return new LibApiImpl(); \n      } \n      public void testMethod(); \n    } \n```", "```java\n    package packt.lib.external; \n    class LibApiImpl implements LibApi { \n      public void testMethod() { \n        System.out.println(\"Test method executed\"); \n      } \n    } \n```", "```java\n    package packt.app; \n    import packt.lib.external.LibApiImpl; \n    public class App { \n      public static void main(String[] args) { \n        LibApiImpl api = new LibApiImpl(); \n        api.testMethod(); \n      } \n    } \n```", "```java\n$ javac --module-source-path src -d out $(find . -name '*.java') \n./src/app/packt/lib/external/App.java:3: error: LibApiImpl is not public in packt.lib.external; cannot be accessed from outside package \nimport packt.lib.external.LibApiImpl; \n                         ^ \n... \n```", "```java\n    package packt.app; \n    import packt.lib.external.LibApi; \n    public class App { \n      public static void main(String[] args) { \n        LibApi api = LibApi.createInstance(); \n        api.testMethod(); \n      } \n    } \n```", "```java\n$ javac --module-source-path src -d out $(find . -name '*.java') \n\n$ java --module-path out -m app/packt.app.App \n  Test method executed \n```", "```java\n    package packt.lib.external; \n    public class App { \n      public static void main(String[] args) { \n        System.out.println(\"Test\"); \n      } \n    } \n```", "```java\n$ javac --module-source-path src -d out $(find . -name '*.java') \n./src/app/packt/lib/external/App.java:1: error: package exists in another module: lib \npackage packt.lib.external; \n^ \n1 error \n```", "```java\n    module A { \n      requires B; \n    } \n\n    module B { \n      requires C; \n    } \n```", "```java\n    Logger getParentLogger() throws SQLFeatureNotSupportedException \n```", "```java\n    Logger myLogger = driver.getParentLogger();  \n```", "```java\n    module A { \n      requires B; \n    } \n\n    module B { \n      requires transitive C; \n    } \n```", "```java\n$ java -d java.sql \n  module java.sql@9 \n  exports java.sql \n  exports javax.sql \n  exports javax.transaction.xa \n  requires transitive java.logging \n  requires transitive java.xml \n  requires mandated java.base \n  uses java.sql.Driver \n```", "```java\n    module librarybundle { \n      requires transitive core.foo; \n      requires transitive core.foo; \n      requires transitive core.baz; \n    } \n```", "```java\n$ java -d java.se\n  java.se@9\n  requires java.scripting transitive\n  requires java.xml transitive\n  requires java.management.rmi transitive\n  requires java.logging transitive\n  requires java.sql transitive\n  requires java.base mandated\n  ...\n```", "```java\n$ java -d java.se.ee\n  java.se.ee@9\n  requires java.corba transitive\n  requires java.base mandated\n  ...\n  requires java.se transitive \n```", "```java\n    module B { \n      exports moduleb.public; \n      exports moduleb.privateA; // required only for module A \n    } \n```", "```java\n    module B { \n      exports moduleb.public; \n      exports moduleb.privateA; // required only for module A \n      exports moduleb.privateC; // required only for module C \n    } \n```", "```java\n    exports <package-name> to <module1>, <module2>,... ;\n```", "```java\n    module B { \n      exports moduleb.public;        // Public access to every module \n                                        that reads me  \n      exports moduleb.privateA to A; // Exported only to module A \n      exports moduleb.privateC to C; // Exported only to module C \n    } \n```", "```java\n$ java -d java.base \n  module java.base@9\n  ... \n  exports jdk.internal.ref to java.desktop, javafx.media \n  exports jdk.internal.math to java.desktop \n  exports sun.net.ext to jdk.net \n  exports jdk.internal.loader to java.desktop, java.logging, java.instrument, jdk.jlink\n```", "```java\n    module packt.addressbook.lib {   \n      requires transitive packt.contact; \n      requires transitive packt.sortutil; \n    } \n```", "```java\n    module packt.addressbook {   \n      requires java.logging; \n      requires packt.addressbook.lib; \n    }\n    module packt.addressbook.ui { \n      exports packt.addressbook.ui;  \n      requires java.logging; \n      requires javafx.base; \n      requires javafx.controls; \n      requires javafx.graphics; \n      requires packt.addressbook.lib; \n    } \n```", "```java\n    module packt.addressbook.ui { \n      exports packt.addressbook.ui;  \n      requires java.logging; \n      requires javafx.base; \n      requires javafx.controls; \n      requires javafx.graphics; \n      requires packt.addressbook.lib; \n    } \n```", "```java\n$ java -d javafx.controls \n  module javafx.controls@9\n  ... \n  requires transitive javafx.base \n  requires transitive javafx.graphics \n```", "```java\n    module packt.addressbook.ui { \n      exports packt.addressbook.ui;  \n      requires java.logging; \n      requires javafx.controls; \n      requires packt.addressbook.lib; \n    } \n```", "```java\n    module packt.addressbook.ui {   \n      exports packt.addressbook.ui to javafx.graphics;  \n      requires java.logging; \n      requires javafx.controls; \n      requires packt.addressbook.lib; \n    } \n```"]