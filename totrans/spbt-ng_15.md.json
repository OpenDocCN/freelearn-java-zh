["```java\nnpm i-D cypress @testing-library/cypress\n```", "```java\n\"test\": \"npx cypress open\"\n```", "```java\n{\n    \"extends\": \"../tsconfig.json\",\n    \"compilerOptions\": {\n        \"types\":[\"cypress\", \"@testing-library/cypress\"],\n        \"isolatedModules\": false,\n        \"allowJs\": true,\n        \"experimentalDecorators\": true,\n        \"skipLibCheck\": true\n    },\n    \"include\": [\n        \"./**/*.ts\",\n    ],\n    \"exclude\": []\n}\n```", "```java\nimport { defineConfig } from \"cypress\";\nexport default defineConfig({\n  e2e: {\n    setupNodeEvents(on, config) {\n      // implement node event listeners here\n    },\n    baseUrl: \"http://localhost:4200\",\n    video: false,\n  },\n});\n```", "```java\n<mat-card-title data-cy=\"auth-title\">{{title}}</mat-card-title>\n```", "```java\n/// <reference types=\"cypress\"/>\ndescribe(\"Anti Heroes Page\", () => {\n  // basic test\n  it(\"should display login page\", () => {\n    cy.visit(\"/\");\n    cy.url().should(\"include\", \"/login\");\n    cy.get(\"[data-cy=auth-title]\").should(\"contain\",\n                                          \"Login\");\n  });\n});\n```", "```java\n/// <reference types=\"cypress\"/>\ndeclare namespace Cypress {\n    interface Chainable {\n        getCommand(url: string, responseBody: Array<any>):\n          Chainable<any>;\n        deleteCommand(url: string): Chainable<any>;\n        postCommand(url: string, requestBody: any):\n          Chainable<any>;\n    }\n}\n```", "```java\nnpm i uuid\n```", "```java\nnpm i -D @types/uuid\n```", "```java\n    // @ts-check\n    ```", "```java\n    ///<reference path=\"../global.d.ts\" />\n    ```", "```java\n    /// <reference types=\"cypress\"/>\n    ```", "```java\n    import { v4 as uuidv4 } from \"uuid\";\n    ```", "```java\n    Cypress.Commands.add(\"getCommand\", (url: string, responseBody: Array<any>) => {\n    ```", "```java\n        cy.intercept(\"GET\", url, {\n    ```", "```java\n            statusCode: 200,\n    ```", "```java\n            body: responseBody,\n    ```", "```java\n        });\n    ```", "```java\n    });\n    ```", "```java\n    Cypress.Commands.add(\"deleteCommand\", (url: string) => {\n    ```", "```java\n        cy.intercept(\"DELETE\", url, {\n    ```", "```java\n            statusCode: 200,\n    ```", "```java\n        });\n    ```", "```java\n    });\n    ```", "```java\n    Cypress.Commands.add(\"postCommand\", (url: string, requestBody: any) => {\n    ```", "```java\n        requestBody.id = uuidv4();\n    ```", "```java\n        cy.intercept(\"POST\", url, {\n    ```", "```java\n            statusCode: 201,\n    ```", "```java\n            body: requestBody,\n    ```", "```java\n        });\n    ```", "```java\n    });\n    ```", "```java\n<mat-card>\n    <mat-card-title\n      data-cy=\"auth-title\">{{title}}</mat-card-title>\n    <mat-card-content>\n        <form [formGroup]=\"form\"\n          (ngSubmit)=\"submit()\">\n        <p *ngIf=\"error\" class=\"error\">\n            {{ error }}\n        </p>\n        <p>\n            <mat-form-field>\n            <input type=\"text\"\n              matInput placeholder=\"Username\"\n              formControlName=\"email\"\n              data-cy=\"email\">\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field>\n            <input type=\"password\"\n              matInput placeholder=\"Password\"\n              formControlName=\"password\"\n              data-cy=\"password\">\n            </mat-form-field>\n        </p>\n        <div class=\"button\">\n            <button type=\"submit\"\n              mat-button data-cy=\"submit-login\">\n              {{title}}</button>\n        </div>\n        <p *ngIf=\"title == 'Login'\" class=\"link\"\n          [routerLink]=\"['register']\"\n          routerLinkActive=\"router-link-active\">\n          Create account</p>\n        <p *ngIf=\"title == 'Register'\"\n          class=\"link\" [routerLink]=\"['']\"\n          routerLinkActive=\"router-link-active\">\n          Sign In</p>\n        </form>\n    </mat-card-content>\n</mat-card>\n```", "```java\n    <p>\n    ```", "```java\n      <mat-toolbar color=\"primary\">\n    ```", "```java\n        <span data-cy=\"logo\">Angular CRUD</span>\n    ```", "```java\n      </mat-toolbar>\n    ```", "```java\n    </p>\n    ```", "```java\n    <table mat-table [dataSource]=\"antiHeroes\" class=\"mat-elevation-z8\">\n    ```", "```java\n        <!-- Data for columns -->\n    ```", "```java\n        <ng-container *ngFor=\"let item of headers\"\n    ```", "```java\n          [matColumnDef]=\"item.fieldName\">\n    ```", "```java\n          <th mat-header-cell *matHeaderCellDef>\n    ```", "```java\n           {{item.headerName}} </th>\n    ```", "```java\n          <td mat-cell *matCellDef=\"let element\"\n    ```", "```java\n            data-cy=\"row\"> {{element[item.fieldName]}}\n    ```", "```java\n          </td>\n    ```", "```java\n        </ng-container>\n    ```", "```java\n        <!-- Actions for specific item -->\n    ```", "```java\n        <ng-container matColumnDef=\"actions\">\n    ```", "```java\n            <th mat-header-cell *matHeaderCellDef>\n    ```", "```java\n              Actions </th>\n    ```", "```java\n            <td mat-cell *matCellDef=\"let element\">\n    ```", "```java\n                <button (click)=\"selectAntiHero(element,\n    ```", "```java\n                  0)\" mat-raised-button color=\"primary\"\n    ```", "```java\n                  data-cy=\"view\">\n    ```", "```java\n                    <mat-icon>pageview</mat-icon> View\n    ```", "```java\n                </button>\n    ```", "```java\n                &nbsp;\n    ```", "```java\n                <button (click)=\"selectAntiHero(element,\n    ```", "```java\n                  1)\" mat-raised-button color=\"warn\"\n    ```", "```java\n                  data-cy=\"delete\">\n    ```", "```java\n                    <mat-icon>delete</mat-icon> Delete\n    ```", "```java\n                </button>\n    ```", "```java\n            </td>\n    ```", "```java\n        </ng-container>\n    ```", "```java\n        <tr mat-header-row\n    ```", "```java\n          *matHeaderRowDef=\"headerFields\"></tr>\n    ```", "```java\n        <tr mat-row *matRowDef=\"let row;\n    ```", "```java\n          columns: headerFields\"></tr>\n    ```", "```java\n      </table>\n    ```", "```java\n    <p>\n    ```", "```java\n      <mat-toolbar>\n    ```", "```java\n        <button mat-raised-button color=\"primary\"\n    ```", "```java\n          (click)=\"emitAction(0)\"data-cy=\"create\">\n    ```", "```java\n          <mat-icon>fiber_new</mat-icon> Create\n    ```", "```java\n        </button>\n    ```", "```java\n        &nbsp;\n    ```", "```java\n        <button mat-raised-button color=\"warn\"\n    ```", "```java\n          (click)=\"emitAction(1)\"data-cy=\"delete-all\">\n    ```", "```java\n          <mat-icon>delete</mat-icon> Delete All\n    ```", "```java\n        </button>\n    ```", "```java\n        <button mat-button color=\"danger\"\n    ```", "```java\n          (click)=\"logOut()\" data-cy=\"logout\">\n    ```", "```java\n          <mat-icon>logout</mat-icon> logout\n    ```", "```java\n        </button>\n    ```", "```java\n      </mat-toolbar>\n    ```", "```java\n    </p>\n    ```", "```java\n    <mat-card class=\"form-card\">\n    ```", "```java\n      <h2>{{ selectedAntiHero ? \"Update/View Hero\" :\n    ```", "```java\n        \"Create Hero\" }}</h2>\n    ```", "```java\n      <form class=\"anti-hero-form\" [formGroup]=\"form\">\n    ```", "```java\n        <mat-form-field class=\"example-full-width\"\n    ```", "```java\n          appearance=\"fill\"><mat-label>\n    ```", "```java\n          First Name</mat-label>\n    ```", "```java\n          <input matInput formControlName=\"firstName\"\n    ```", "```java\n            placeholder=\"Ex. Tony\" data-cy=\"firstName\"/>\n    ```", "```java\n        </mat-form-field><mat-form-field\n    ```", "```java\n          class=\"example-full-width\" appearance=\"fill\">\n    ```", "```java\n          <mat-label>Last Name</mat-label>\n    ```", "```java\n          <input matInput formControlName=\"lastName\"\n    ```", "```java\n            placeholder=\"Ex. Stark\" data-cy=\"lastName\"/>\n    ```", "```java\n        </mat-form-field>\n    ```", "```java\n        <mat-form-field class=\"example-full-width\"\n    ```", "```java\n          appearance=\"fill\"><mat-label>House</mat-label>\n    ```", "```java\n          <input matInput formControlName=\"house\"\n    ```", "```java\n            placeholder=\"Ex. California\" data-cy=\"house\"/>\n    ```", "```java\n            </mat-form-field><mat-form-field\n    ```", "```java\n            class=\"example-full-width\" appearance=\"fill\">\n    ```", "```java\n            <mat-label>Known As</mat-label>\n    ```", "```java\n          <input matInput formControlName=\"knownAs\"\n    ```", "```java\n            placeholder=\"Ex. Iron Man\" data-cy=\"knownAs\"\n    ```", "```java\n            /></mat-form-field><div class=\"button-group\">\n    ```", "```java\n          <button mat-raised-button color=\"primary\"\n    ```", "```java\n           (click)=\"emitAction()\" data-cy=\"action\"\n    ```", "```java\n          >{{ actionButtonLabel }}</button>\n    ```", "```java\n          &nbsp;\n    ```", "```java\n          <button mat-raised-button color=\"warn\"\n    ```", "```java\n            (click)=\"clear()\">Clear</button>\n    ```", "```java\n        </div>\n    ```", "```java\n      </form>\n    ```", "```java\n    </mat-card>\n    ```", "```java\n    /// <reference types=\"cypress\"/>\n    ```", "```java\n    describe(\"Login Page\", () => {\n    ```", "```java\n      beforeEach(() => {\n    ```", "```java\n        cy.fixture(\"anti-heroes\").then(function (data) {\n    ```", "```java\n          /* register custom commands. */\n    ```", "```java\n          cy.getCommand(\"/api/v1/anti-heroes\", data);\n    ```", "```java\n          cy.deleteCommand(\"/api/v1/anti-heroes/*\");\n    ```", "```java\n        });\n    ```", "```java\n        cy.visit(\"/\");\n    ```", "```java\n        cy.fixture(\"user\").then((data: { email: string;\n    ```", "```java\n          password: string }) => {\n    ```", "```java\n          cy.get(\"[data-cy=email]\").type(data.email);\n    ```", "```java\n          cy.get(\"[data-cy=password]\")\n    ```", "```java\n            .type(data.password);\n    ```", "```java\n          cy.get(\"[data-cy=submit-login]\").click();\n    ```", "```java\n        });\n    ```", "```java\n      });\n    ```", "```java\n      afterEach(() => {\n    ```", "```java\n        cy.get(\"[data-cy=logout]\").click();\n    ```", "```java\n      });\n    ```", "```java\n      it.skip(\"should display login page\", () => {\n    ```", "```java\n        cy.visit(\"/\");\n    ```", "```java\n        cy.url().should(\"include\", \"/login\");\n    ```", "```java\n        cy.get(\"[data-cy=auth-title]\").should(\"contain\",\n    ```", "```java\n          \"Login\");\n    ```", "```java\n      });\n    ```", "```java\n    });\n    ```", "```java\n    it(\"should display logo\", () => { cy.get(\"[data-cy=logo]\")\n    ```", "```java\n    .should(\"contain\", \"Angular CRUD\");\n    ```", "```java\n    });\n    ```", "```java\n    it(\"should render anti-heroes\", () => {\n    ```", "```java\n      cy.fixture(\"anti-heroes\").then(function (data) {\n    ```", "```java\n        cy.get(\"[data-cy=row]\").should(\"have.length\", 24);\n    ```", "```java\n      });\n    ```", "```java\n    });\n    ```", "```java\n    it(\"should remove a card after clicking a delete button\", () => { const index = 1;\n    ```", "```java\n      cy.get(\"[data-cy=delete]\").eq(index).click();\n    ```", "```java\n      cy.get(\"[data-cy=row]\").should(\"have.length\", 20);\n    ```", "```java\n    });\n    ```", "```java\n    it(\"should add a new hero\", () => { const firstName = \"Bucky\";\n    ```", "```java\n      const lastName = \"Barnes\";\n    ```", "```java\n      const house = \"Marvel\";\n    ```", "```java\n      const knownAs = \"The Winter Soldier\";\n    ```", "```java\n      cy.get(\"[data-cy=create]\").click();\n    ```", "```java\n      cy.get(\"[data-cy=firstName]\").type(firstName);\n    ```", "```java\n      cy.get(\"[data-cy=lastName]\").type(lastName);\n    ```", "```java\n      cy.get(\"[data-cy=house]\").type(house);\n    ```", "```java\n      cy.get(\"[data-cy=knownAs]\").type(knownAs);\n    ```", "```java\n      cy.postCommand(\"/api/v1/anti-heroes\", {\n    ```", "```java\n        firstName,lastName,house,knownAs,});\n    ```", "```java\n      cy.get(\"[data-cy=action]\").click();\n    ```", "```java\n      cy.fixture(\"anti-heroes\").then(function (data) {\n    ```", "```java\n        cy.get(\"[data-cy=row]\").should(\"have.length\", 24);\n    ```", "```java\n      });\n    ```", "```java\n    it.skip(\"should display login page\", () => {\n    ```"]