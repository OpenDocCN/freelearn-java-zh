- en: Deploying JEE Applications in the Cloud
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云中部署 JEE 应用程序
- en: In the last chapter, we learned how to develop JEE microservices and deploy
    them in Docker containers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何开发 JEE 微服务并将它们部署到 Docker 容器中。
- en: In this chapter, we will learn how to deploy JEE applications in the cloud,
    specifically in **Amazon Web Services** (**AWS**) cloud and Google Cloud Platform,
    using Eclipse tools. The focus is going to be more on using Eclipse tools to deploy
    JEE applications in the cloud, rather than learning about a specific cloud platform.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何在云中部署 JEE 应用程序，具体来说是在**亚马逊网络服务 (AWS**)云和谷歌云平台中，使用 Eclipse 工具。重点将更多地放在使用
    Eclipse 工具部署 JEE 应用程序在云上，而不是学习特定的云平台。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Deploying the JEE application in an AWS EC2 instance
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 AWS EC2 实例中部署 JEE 应用程序
- en: Deploying the REST web service in AWS Beanstalk
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 AWS Beanstalk 中部署 REST 网络服务
- en: Deploying a Docker container in Google Compute Engine
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在谷歌计算引擎中部署 Docker 容器
- en: Deploying a RESTful web service in Google App Engine
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在谷歌应用引擎中部署 RESTful 网络服务
- en: Deploying in the cloud
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云中部署
- en: There are many advantages to deploying applications in the cloud, such as scaling
    the application as per its load, and all the benefits of not having to maintain
    your own data center or physical machines. Other than hosting the application
    and flexibility, most cloud platforms also provide services like a database, file
    storage, messaging, and so on, which can be easily integrated into your applications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在云中部署应用程序有许多优点，例如根据其负载扩展应用程序，以及无需维护自己的数据中心或物理机器的所有好处。除了托管应用程序和灵活性之外，大多数云平台还提供数据库、文件存储、消息传递等服务，这些服务可以轻松集成到您的应用程序中。
- en: 'Deployment services provided by cloud platforms can be broadly classified as
    follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 云平台提供的部署服务可以大致分为以下几类：
- en: '**Infrastructure as a service (IaaS)**: In this service, you get **virtual
    machines** (**VMs**) with complete control. You can install any software on them
    and set up load balancing, storage, network, and security. It is like having your
    own data center in the cloud. Examples of IaaS are Amazon **Elastic Compute Cloud**
    (**EC2**) and Google Compute Engine.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施即服务 (IaaS)**: 在这项服务中，您将获得完全控制的**虚拟机 (VMs**)。您可以在它们上安装任何软件并设置负载均衡、存储、网络和安全。这就像在云中拥有自己的数据中心一样。IaaS
    的例子包括亚马逊**弹性计算云 (EC2**)和谷歌计算引擎。'
- en: '**Platform as a service (PaaS)**: In this service, you get VMs with OS and
    server software installed. Services like load balancing, security, network, and
    so on are also pre-configured for you (or made very easy to configure). Therefore,
    you can focus on just application deployment. You can take, for example, a WAR
    file and deploy it directly in a PaaS. Examples of PaaS are Amazon Elastic Beanstalk
    and Google App Engine.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台即服务 (PaaS)**: 在这项服务中，您将获得预装操作系统和服务器软件的虚拟机。负载均衡、安全、网络等服务也为您预先配置（或使配置变得非常简单）。因此，您可以专注于应用程序的部署。例如，您可以取一个
    WAR 文件并直接在 PaaS 中部署它。PaaS 的例子包括亚马逊弹性豆茎和谷歌应用引擎。'
- en: Though an IaaS offers more flexibility, it is more difficult to configure than
    a PaaS.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然IaaS提供了更多的灵活性，但它的配置比PaaS更困难。
- en: In the following sections, we will see how to deploy JEE applications in the
    aforementioned types of services in AWS and Google Cloud.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下章节中，我们将看到如何在 AWS 和谷歌云中部署上述类型的 JEE 应用程序。
- en: Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This book, and this chapter in particular, explains deployment for development
    and testing, and not production. Deployment for production is a vast and complex
    topic and requires many considerations like security, scaling, and so on, which
    are not in the scope of this book.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本书，尤其是本章，解释了开发和测试的部署，而不是生产部署。生产部署是一个庞大而复杂的话题，需要考虑许多因素，如安全性、扩展性等，这些都不在本书的范围之内。
- en: You need to have accounts with cloud service providers you want to use in order
    to use the services. Depending on the services you use and the load on your servers,
    deployment to the cloud could cost you a lot of money. However, almost all cloud
    providers offer their services for free so that you can try them out for a limited
    period of time. To follow examples in this chapter, make sure you have accounts
    with AWS Cloud ([https://aws.amazon.com/](https://aws.amazon.com/)) and Google
    Cloud Platform ([https://cloud.google.com](https://cloud.google.com)).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要拥有您想要使用的云服务提供商的账户才能使用服务。根据您使用的服务和服务器负载，云部署可能会花费您很多钱。然而，几乎所有的云提供商都提供免费服务，以便您可以尝试它们一段时间。为了遵循本章中的示例，请确保您有AWS云([https://aws.amazon.com/](https://aws.amazon.com/))和谷歌云平台([https://cloud.google.com](https://cloud.google.com))的账户。
- en: Deploying in AWS Cloud
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在AWS云中部署
- en: We will first create a user group and a user within it in AWS. When you set
    permissions on a user group, all users in that group also get the same permissions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在AWS中首先创建一个用户组，并在其中创建一个用户。当您设置用户组的权限时，该组中的所有用户也将获得相同的权限。
- en: Creating the user group and user
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建用户组和用户
- en: 'We will perform the following steps to create a user group:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将执行以下步骤来创建一个用户组：
- en: Go to the AWS Management Console ([https://console.aws.amazon.com/](https://console.aws.amazon.com/))
    and log in.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往AWS管理控制台([https://console.aws.amazon.com/](https://console.aws.amazon.com/))并登录。
- en: Select Services | IAM (Identity & Access Management) from the menu at the top.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从顶部的菜单中选择“服务 | IAM（身份与访问管理）”。
- en: Select Groups from the list on the left-hand side.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧的列表中选择“组”。
- en: Click the Create New Group button.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建新组”按钮。
- en: Follow the wizard to specify the group's name and attach the access policy.
    Let’s name the group `aws_eclipse_users`.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照向导指定组的名称并附加访问策略。让我们将组命名为`aws_eclipse_users`。
- en: Select the Administrator Access policy for the group.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择组的“管理员访问策略”。
- en: 'We will perform the following steps to create a user:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将执行以下步骤来创建一个用户：
- en: Select Users from the list on the left-hand side and click the Add User button.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧的列表中选择“用户”，然后点击“添加用户”按钮。
- en: Let’s set the User Name as aws_eclipse_user.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将用户名设置为aws_eclipse_user。
- en: In the Access Type options, select the AWS Management Console access option.
    The Require password reset option can be turned off if you so desire.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在访问类型选项中，选择AWS管理控制台访问选项。如果您希望，可以关闭“需要密码重置”选项。
- en: 'Click the Next: Permission button and then select the group we created previously,
    which is aws_eclipse_users.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“下一步：权限”按钮，然后选择我们之前创建的组，即aws_eclipse_users。
- en: Follow the steps on the page to complete the workflow, which ultimately leads
    to you creating the user.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照页面上的步骤完成工作流程，最终将引导您创建用户。
- en: Now, you should have the aws_eclipse_users group with Administrator Access and the aws_eclipse_user
    user in that group.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该有具有管理员访问权限的aws_eclipse_users组和该组中的aws_eclipse_user用户。
- en: The next step is to create an access key for the user. Go to the page that lists
    all users (click Users from the list on the left-hand side of the page) and click
    on the user aws_eclipse_user. Click on the Security credentials tab and then click
    the Create access key button. It creates an access key and displays Access key
    ID and Secret access key. Save this information for future use. AWS gives you
    the option to download the CSV file containing this information.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是为用户创建访问密钥。转到列出所有用户的页面（点击页面左侧的“用户”），然后点击用户aws_eclipse_user。点击“安全凭证”选项卡，然后点击“创建访问密钥”按钮。它创建了一个访问密钥，并显示了访问密钥ID和秘密访问密钥。为将来使用保存此信息。AWS为您提供下载包含此信息的CSV文件选项。
- en: Note
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Both Access Key ID and Secret Access Key are required to access AWS services
    from Eclipse. This is the only place AWS shows the Secret Access Key. If you lose
    this information, it is not possible to get it back later, so make sure that you
    save this information.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 访问AWS服务从Eclipse需要访问密钥ID和秘密访问密钥。这是AWS唯一显示秘密访问密钥的地方。如果您丢失了这些信息，以后将无法找回，所以请确保保存这些信息。
- en: 'Next, we will add a security group and specify inbound traffic rules for the
    same. In the AWS Management Console, go to Services | EC2 | Network & Security
    | Security Groups page. Click Create Security Group button. Enter Security group
    name as `eclipse-dev`. Enter any description (this is a mandatory field). Then
    create following inbound rules:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将添加一个安全组并指定相同的入站流量规则。在 AWS 管理控制台中，转到 服务 | EC2 | 网络 & 安全 | 安全组页面。点击 创建安全组
    按钮。输入 安全组名称 为 `eclipse-dev`。输入任何描述（这是一个必填字段）。然后创建以下入站规则：
- en: '| Type | Protocol | Port Range | Source |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 类型 | 协议 | 端口范围 | 源 |'
- en: '| SSH | TCP | 22 | Anywhere (*see the note following this table*) |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| SSH | TCP | 22 | 任何地方 (*见下表中的说明*) |'
- en: '| Custom TCP | TCP | 8080 | Anywhere |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 自定义 TCP | TCP | 8080 | 任何地方 |'
- en: Note
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: SSH inbound rule above will give access to your EC2 instance from any IP. If
    you want to limit access, do not select source as Anywhere, but set specific IPs,
    selecting Custom.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 上述 SSH 入站规则将允许从任何 IP 地址访问您的 EC2 实例。如果您想限制访问，请不要选择“任何地方”作为源，而是设置特定的 IP 地址，选择自定义。
- en: Because this chapter explains how to deploy JEE applications in xloud for development
    and testing, Source is selected as Anywhere (any IP).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 因为本章解释了如何在 xloud 中部署 JEE 应用程序以进行开发和测试，所以源被选择为“任何地方”（任何 IP）。
- en: The preceding security group will provide SSH access to any external IP on port
    22 and TCP access on port 8080.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的安全组将为端口 22 上的任何外部 IP 提供 SSH 访问，并为端口 8080 提供TCP 访问。
- en: Installing the AWS Toolkit for Eclipse
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Eclipse 的 AWS 工具包
- en: 'In this section, we will learn how to install the AWS Toolkit plugin in Eclipse.
    Go to the Eclipse menu''s Help | Eclipse Marketplace.... Search for the `AWS Toolkit`:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何在 Eclipse 中安装 AWS 工具包插件。转到 Eclipse 菜单的 帮助 | Eclipse 市场位置.... 搜索
    `AWS Toolkit`：
- en: '![](img/00242.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00242.jpeg)'
- en: 'Figure 13.1: Installing the AWS Toolkit for Eclipse'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.1：安装 Eclipse 的 AWS 工具包
- en: Install the plugin. We will see many features of this plugin later in this chapter.
    Visit [http://docs.aws.amazon.com/toolkit-for-eclipse/v1/user-guide/welcome.html](http://docs.aws.amazon.com/toolkit-for-eclipse/v1/user-guide/welcome.html)
    for the complete documentation.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 安装插件。在本章的后面部分，我们将看到这个插件的多项功能。访问 [http://docs.aws.amazon.com/toolkit-for-eclipse/v1/user-guide/welcome.html](http://docs.aws.amazon.com/toolkit-for-eclipse/v1/user-guide/welcome.html)
    获取完整文档。
- en: 'We need to configure the plugin with the Access Key ID and Secret Access Key
    we created in the previous section. Open Eclipse Preferences and go to AWS Toolkit
    preferences:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要使用上一节中创建的访问密钥 ID 和秘密访问密钥来配置插件。打开 Eclipse 首选项并转到 AWS 工具包首选项：
- en: '![](img/00243.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00243.jpeg)'
- en: 'Figure 13.2: Setting the Access Key ID and Secret Access Key AWS Toolkit preferences'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.2：设置访问密钥 ID 和秘密访问密钥 AWS 工具包首选项
- en: You can use the default profile or create a new profile. Enter the Access Key
    ID and Secret Access Key and click the Apply and Close button. This information
    will be used by the Eclipse plugin to access information about your configuration
    in AWS.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用默认配置文件或创建一个新的配置文件。输入访问密钥 ID 和秘密访问密钥，然后点击 应用和关闭 按钮。这些信息将被 Eclipse 插件用于访问
    AWS 中您的配置信息。
- en: 'Once the authentication is successful, you can access most of the information
    that you can on the AWS Console web page from within Eclipse. Switch to the AWS
    Management perspective (select Window | Perspective | Open Perspective or click
    the Open Perspective toolbar button in the upper-right corner):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦认证成功，您就可以在 Eclipse 中访问 AWS 控制台网页上大部分信息。切换到 AWS 管理视角（选择 窗口 | 视角 | 打开视角 或点击右上角的
    打开视角 工具栏按钮）：
- en: '![](img/00244.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00244.jpeg)'
- en: 'Figure 13.3: AWS Management perspective'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.3：AWS 管理视角
- en: Expand the Amazon EC2 category in AWS Explorer and you will see options for
    viewing EC2 AMIs, EC2 Instances, and more. **Amazon Machine Image** (**AMI**)
    can be considered a template from which multiple VM instances can be created.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AWS 探索器中展开 亚马逊 EC2 类别，您将看到查看 EC2 AMI、EC2 实例等选项。**亚马逊机器镜像**（**AMI**）可以被认为是一个模板，可以从它创建多个虚拟机实例。
- en: Launching the EC2 instance
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动 EC2 实例
- en: Now, let's create an EC2 instance from an AMI. If the EC2 AMI view is not already
    open in the AWS Management perspective in Eclipse, right-click on the AMIs node
    in AWS Explorer (see *Figure 13.3*) and select the Open EC2 AMIs view. This view
    could take a long time to load, because there are many AMIs available. We will
    select a Linux AMI that is available in the Free Tier (during your trial period).
    Unfortunately, it is not easy to search for this AMI in the Eclipse view because
    the view does not display or allow you to search AMIs based on their description.
    This means that you can’t search AMIs by typing `linux` into the search box. Surprisingly,
    the filter options for platforms in the view do not show the Linux option either,
    at least at the time of writing this book.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们从AMI创建一个EC2实例。如果EC2 AMI视图尚未在Eclipse的AWS管理视图中打开，请在AWS资源管理器中的AMIs节点上右键单击，并选择打开EC2
    AMIs视图。此视图可能需要很长时间才能加载，因为有许多AMI可供选择。我们将选择一个在免费层（在您的试用期间）可用的Linux AMI。不幸的是，在Eclipse视图中搜索此AMI并不容易，因为视图不显示或允许您根据描述搜索AMI。这意味着您不能通过在搜索框中输入`linux`来搜索AMI。令人惊讶的是，视图中的平台筛选选项也没有显示Linux选项，至少在撰写本书时是这样的。
- en: 'We are going to create an instance from AMI ID `ami-f63b1193` (you can see
    a better view of the list of AMIs when creating a new instance from the AWS Console
    web page). Type `ami-f63b1193` in the search box and you should see one result
    displayed in the view. Right-click on the AMI and select the Launch option:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从AMI ID `ami-f63b1193`创建一个实例（您可以在创建新实例时从AWS控制台网页中看到AMI列表的更好视图）。在搜索框中输入`ami-f63b1193`，您应该在视图中看到一个结果。右键单击AMI并选择启动选项：
- en: '![](img/00245.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00245.jpeg)'
- en: 'Figure 13.4: Launching an instance from AMI'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.4：从AMI启动实例
- en: Select the appropriate Instance Type. For this example, we will select the General
    Purpose Burstable Micro type.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 选择合适的实例类型。在本例中，我们将选择通用可扩展微实例类型。
- en: Select an Availability Zone. See [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions)
    for a list of availability zones.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 选择可用区。请参阅[https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions)获取可用区的列表。
- en: Next, select a Key Pair to connect to the instance from your host machine. If
    no key pairs are listed, click on the plus icon and add a new key pair. You just
    need to specify the name of the key and the location on your machine where it
    will be saved.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，选择一个密钥对以从您的宿主机连接到实例。如果没有列出密钥对，请单击加号图标并添加一个新的密钥对。您只需指定密钥的名称和它将在您的机器上保存的位置。
- en: 'Next, select a security group for the new instance. We will select the eclipse-dev
    security group (the wizard does not let you finish unless you select a Security
    Group and Key Pair). Click Finish. The new instance will be added to the list
    of instances in the EC2 Instances view. Note the status of the instance. When
    you have just created the instance, the status will be Pending. This will change
    to Running once the instance is successfully launched. Right-click on the instance
    to see the available menu options on the instance:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，选择一个新的实例的安全组。我们将选择`eclipse-dev`安全组（向导不允许您完成，除非您选择安全组和密钥对）。点击完成。新实例将被添加到EC2实例视图中的实例列表中。注意实例的状态。当您刚刚创建实例时，状态将是挂起。一旦实例成功启动，状态将变为运行。右键单击实例以查看实例上的可用菜单选项：
- en: '![](img/00246.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00246.jpeg)'
- en: 'Figure 13.5: The Context menu in the EC2 Instances view'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.5：EC2实例视图中的上下文菜单
- en: 'To open a shell to execute OS commands, select the Open Shell option from the
    pop-up menu:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开外壳以执行OS命令，从弹出菜单中选择打开外壳选项：
- en: '![](img/00247.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00247.jpeg)'
- en: 'Figure 13.6: An opened shell in an AWS instance'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.6：AWS实例中打开的外壳
- en: We are going to use this option (Open Shell) to execute commands in our instance.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用此选项（开放外壳）来在我们的实例中执行命令。
- en: Installing the CourseManagement EJB application in the EC2 instance
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在EC2实例中安装CourseManagement EJB应用程序
- en: In [Chapter 7](part0129.html#3R0OI0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55), *Creating
    JEE Applications with EJB*, we developed an EJB application for `CourseManagement`.
    We will see how to deploy this application in the EC2 instance that we created
    in the previous section. We will need to install GlassFish 5 and MySQL server
    in the instance. Although you can install these servers on separate instances
    (which is recommended for a production setup), we are going to install both of
    them in the same instance so that we can reduce the number of steps for creating
    a new instance. Let’s start by installing the GlassFish 5 Server.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](part0129.html#3R0OI0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55)，“使用EJB创建JEE应用程序”中，我们为`CourseManagement`开发了一个EJB应用程序。我们将看到如何将此应用程序部署在上一节中创建的EC2实例中。我们需要在实例中安装GlassFish
    5和MySQL服务器。虽然您可以在单独的实例上安装这些服务器（这在生产设置中是推荐的），但我们将把它们都安装在同一实例上，以便我们可以减少创建新实例的步骤数量。让我们首先安装GlassFish
    5服务器。
- en: Installing the GlassFish 5 Server
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装GlassFish 5服务器
- en: 'At the time of writing this chapter, the Linux instance that''s been created
    by AWS is preinstalled with JDK 7\. However, we have been using JDK 8 in this
    book. Therefore, we will start by uninstalling JDK 7 and installing JDK 8\. Open
    a shell in the instance from Eclipse (see the previous sections for details) and
    run the following commands:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写本章时，AWS创建的Linux实例已预装了JDK 7。然而，我们在本书中使用的是JDK 8。因此，我们将首先卸载JDK 7并安装JDK 8。在Eclipse中打开实例的shell（有关详细信息，请参阅前面的章节）并运行以下命令：
- en: '| **Commands** | **Description** |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '|'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE0]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '| Removes JDK 7 from the instance. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 从实例中移除JDK 7。 |'
- en: '|'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE1]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '| Installs JDK 8. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 安装JDK 8。 |'
- en: '|'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE2]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '| Downloads GlassFish 5. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 下载GlassFish 5。 |'
- en: '|'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE3]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '| Unzips the downloaded GlassFish 5 ZIP file. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 解压下载的GlassFish 5 ZIP文件。 |'
- en: '|'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE4]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '| Changes the password of the server. Default installation comes with an admin
    user and no password set. We need to set a password for the remote admin of the
    server to work. Note that the user ID is admin and that the old password is empty
    (no password). Set a new password, for example, `admin`. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 更改服务器的密码。默认安装包含一个名为admin的用户且未设置密码。我们需要为服务器的远程管理员设置一个密码，以便远程管理能够工作。请注意，用户ID是admin，旧密码为空（没有密码）。设置一个新密码，例如，`admin`。
    |'
- en: '|'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE5]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '| Starts the server. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| 启动服务器。 |'
- en: '|'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE6]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '| Checks if the server is up. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 检查服务器是否启动。 |'
- en: '|'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE7]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '| Enables the remote admin of the GlassFish 5 Server.  See the note following
    this table. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| 启用GlassFish 5服务器的远程管理。 参见此表后面的说明。 |'
- en: '|'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE8]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '| Creates a service so that it is started when the VM instance starts. After
    you run the `asadmin` command, run the `create-service` command at `asadmin>`
    prompt. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| 创建一个服务，以便在VM实例启动时启动。在运行`asadmin`命令后，在`asadmin>`提示符下运行`create-service`命令。
    |'
- en: '|'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE9]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '| Stops and starts the server so that the preceding changes take effect. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| 停止并启动服务器，以便使前面的更改生效。 |'
- en: Note
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Between writing this chapter and publishing of the book, the functionality
    to enable secure admin broke in GlassFish 5 if used with JDK version above 1.8.0.151\.
    Remote access to GlassFish 5 administration console fails with the following error
    (logged on `glassfish/domains/domain1logs/server.log`):'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写本章和本书出版之间，如果与JDK版本1.8.0.151以上一起使用，GlassFish 5的启用安全管理的功能会中断。远程访问GlassFish
    5管理控制台会失败，并出现以下错误（记录在`glassfish/domains/domain1logs/server.log`）：
- en: '`java.lang.NoClassDefFoundError: sun/security/ssl/SupportedEllipticPointFormatsExtension`'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`java.lang.NoClassDefFoundError: sun/security/ssl/SupportedEllipticPointFormatsExtension`'
- en: You can refer to the GlassFish 5 bug at [https://github.com/javaee/glassfish/issues/22407](https://github.com/javaee/glassfish/issues/22407).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以参考GlassFish 5的bug [https://github.com/javaee/glassfish/issues/22407](https://github.com/javaee/glassfish/issues/22407)。
- en: 'Now, we need to instruct AWS to allow TCP requests at port `4848` (for admin),
    `8080` (for access web applications), and `3306` (for remote connection to MySQL
    server) on this instance. We will do this by setting inbound rules on the security
    group on the instance. Recall that in the previous section we had selected the
    eclipse-dev security group. We need to set inbound rules on this group. Unfortunately,
    we can’t do this from the Eclipse plugin (at the time of writing this book). Login
    to AWS Console on the web and go to Services | EC2 and then to NETWORK & SECURITY
    | Security Groups. Right-click on the security group eclipse-user and select the Edit
    inbound rules option. Add rules to allow TCP traffic from the IP of your machine
    (from where you will remotely access the instance; you can use sites like [https://www.whatismyip.com/what-is-my-public-ip-address/](https://www.whatismyip.com/what-is-my-public-ip-address/)
    to find the real IP address of your machine):'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要指示 AWS 允许在此实例上端口 `4848`（用于管理员）、`8080`（用于访问 Web 应用程序）和 `3306`（用于远程连接到
    MySQL 服务器）上的 TCP 请求。我们将通过在此实例的安全组上设置入站规则来实现这一点。回想一下，在前一节中我们选择了 eclipse-dev 安全组。我们需要在此组上设置入站规则。不幸的是，我们无法从
    Eclipse 插件（在撰写本书时）中完成此操作。登录到 AWS 控制台网页，转到服务 | EC2，然后转到网络与安全 | 安全组。右键单击安全组 eclipse-user，选择“编辑入站规则”选项。添加规则以允许来自您机器
    IP（您将从该机器远程访问实例的地方）的 TCP 流量（您可以使用类似 [https://www.whatismyip.com/what-is-my-public-ip-address/](https://www.whatismyip.com/what-is-my-public-ip-address/)
    的网站来查找您机器的真实 IP 地址）：
- en: '![](img/00248.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00248.jpeg)'
- en: 'Figure 13.7: Setting inbound rules on the security group'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.7：在安全组中设置入站规则
- en: Note that if your machine receives a dynamic IP, then you will have to update
    it on the preceding page.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果您的机器接收动态 IP，那么您将不得不在上面的页面上更新它。
- en: You can now browse to the admin site of GlassFish 5 on your instance—go to `https://<your-instance-public-address>:4848`.
    You can find the public address from Eclipse view EC2 Instances, or from the AWS
    Console online.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以浏览到您实例上的 GlassFish 5 管理站点——转到 `https://<your-instance-public-address>:4848`。您可以从
    Eclipse 视图 EC2 实例或从 AWS 控制台在线找到公共地址。
- en: Installing the MySQL server
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 MySQL 服务器
- en: 'As mentioned previously, we will install the MySQL server in the same EC2 instance.
    You can also use an RDS instance from AWS, which is what Amazon recommends for
    MySQL databases. RDS has many advantages, but to keep things short, we will install
    MySQL in the same VM instance. Make sure that a shell is open on the instance,
    as explained earlier, and execute the following commands:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们将在这个 EC2 实例上安装 MySQL 服务器。您也可以使用 AWS 的 RDS 实例，这是亚马逊推荐用于 MySQL 数据库的实例。RDS
    有许多优点，但为了简洁起见，我们将在同一个 VM 实例上安装 MySQL。确保按照前面解释的那样，在实例上打开一个 shell，并执行以下命令：
- en: '| **Commands** | **Description** |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '|'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE10]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '| Installs MySQL |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| 安装 MySQL |'
- en: '|'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE11]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '| Activates the MySQL service |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| 激活 MySQL 服务 |'
- en: '|'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE12]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '| Starts the MySQL service |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 启动 MySQL 服务 |'
- en: '|'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE13]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '| Sets the password |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| 设置密码 |'
- en: '|'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE14]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '| Creates `course_management` database |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| 创建 `course_management` 数据库 |'
- en: '|'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE15]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '| Creates a new user |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| 创建新用户 |'
- en: '|'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE16]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '| Logs in to MySQL from the command line |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| 从命令行登录 MySQL |'
- en: '|'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE17]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '| Execute this at `mysql>` prompt to create a new user called `eclipse-user`
    |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| 在 `mysql>` 提示符下执行此命令以创建名为 `eclipse-user` 的新用户 |'
- en: '|'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE18]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '| Grants privileges to the new user |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 授予新用户权限 |'
- en: '|'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE19]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '| Exits the MySQL console |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| 退出 MySQL 控制台 |'
- en: You can now connect to this instance of the MySQL server from your host machine.
    But before you try to connect to the server, make sure that you have set an inbound
    rule on the EC2 instance to allow a connection from your machine (IP) on port
    `3306` (see *Figure 13.7*). You can then either connect from the Terminal (command
    line) or use MySQL Workbench (see [Chapter 1](part0008.html#7K4G0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55),
    *Introducing JEE and Eclipse*<q class="calibre207">,</q> for more information
    on installing MySQL Workbench). Use the public DNS name of the instance to connect.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以从您的宿主机连接到此 MySQL 服务器实例。但在尝试连接到服务器之前，请确保您已在 EC2 实例上设置了入站规则，允许从您的机器（IP）在端口
    `3306` 上进行连接（见 *图 13.7*）。然后您可以从终端（命令行）连接，或者使用 MySQL Workbench（见 [第 1 章](part0008.html#7K4G0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55)，*介绍
    JEE 和 Eclipse*<q class="calibre207">,</q> 了解有关安装 MySQL Workbench 的更多信息）。使用实例的公共
    DNS 名称进行连接。
- en: Create tables in this database as described in [Chapter 4](part0073.html#25JP20-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55),
    *Creating JEE Database Applications*. Alternatively, use `course_management.sql`,
    which is in the `CourseManagementEAR` folder in the source code for this chapter,
    to import the tables. In MySQL Workbench, select the Server | Data Import menu.
    Select Import from Self-Contained File and enter the path to `course_management.sql`.
    Select course_management as the Default Target Schema. Select Dump Structure and
    Data. Then, click the Start Import button.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 根据第4章[创建JEE数据库应用程序](part0073.html#25JP20-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55)中的说明在此数据库中创建表。或者，使用位于本章源代码`CourseManagementEAR`文件夹中的`course_management.sql`来导入表。在MySQL
    Workbench中，选择“服务器 | 数据导入”菜单。选择“从自包含文件导入”并输入`course_management.sql`的路径。将`course_management`作为默认目标模式。选择“结构和数据”。然后，点击“开始导入”按钮。
- en: Configuring the datasource in the GlassFish 5 Server
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在GlassFish 5服务器中配置数据源
- en: 'To configure our data source in the GlassFish 5 Server, we first need to download
    the MySQL JDBC driver. You can find a link to download the driver at [https://dev.mysql.com/downloads/connector/j/](https://dev.mysql.com/downloads/connector/j/).
    Execute the following commands in the shell that is open for our EC2 instance:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在GlassFish 5服务器中配置我们的数据源，首先需要下载MySQL JDBC驱动程序。您可以在[https://dev.mysql.com/downloads/connector/j/](https://dev.mysql.com/downloads/connector/j/)找到下载驱动程序的链接。在为我们的EC2实例打开的shell中执行以下命令：
- en: '| **Commands** | **Description** |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '|'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE20]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '| Downloads the driver |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| 下载驱动程序 |'
- en: '|'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE21]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '| Unzips the file |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| 解压文件 |'
- en: '|'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE22]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '| Copies the driver JAR file to a folder in the GlassFish Server classpath
    |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| 将驱动程序JAR文件复制到GlassFish服务器类路径中的一个文件夹 |'
- en: Restart the EC2 instance (this is necessary so that GlassFish 5 can load the
    MySQL JAR file). Then, follow the instructions in the *Configuring the datasource
    in Glassfish* section in [Chapter 7](part0129.html#3R0OI0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55), *Creating
    JEE Applications with EJB*. Make sure that you use the domain name of your EC2
    instance instead of localhost (specifically in Additional Properties when setting
    up the JDBC Connection Pool) when configuring the datasource. You can access the
    Admin console of GlassFish 5 by browsing to `https://<enter_domain_name_of_ec2_instance>:4848`.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 重启EC2实例（这是必要的，以便GlassFish 5可以加载MySQL JAR文件）。然后，按照[第7章](part0129.html#3R0OI0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55)中“配置Glassfish中的数据源”部分的说明操作，*使用EJB创建JEE应用程序*。确保在配置数据源时使用您的EC2实例域名而不是localhost（特别是在设置JDBC连接池的附加属性时）。您可以通过浏览到`https://<enter_domain_name_of_ec2_instance>:4848`来访问GlassFish
    5的管理控制台。
- en: Once you configure the connection pool and JDBC datasource in the GlassFish
    Admin console, deploy `CourseManagementMavenEAR-1.ear`. This is the same EAR file
    we created in [Chapter 7](part0129.html#3R0OI0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55),
    *Creating JEE Applications with EJB*, in the `CourseManagementMavenEAR` project
    (and dependent projects). For your convenience, the same EAR file is made available
    in the `CourseManagementEAR` folder in the source code for this chapter. In the
    Admin console, click Applications from the left-hand menu bar. Then, click the Deploy
    button. Select `CourseManagementMavenEAR-1.ear` from the `CourseManagementEAR`
    folder and deploy the application.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在GlassFish管理控制台中配置连接池和JDBC数据源后，部署`CourseManagementMavenEAR-1.ear`。这是我们[第7章](part0129.html#3R0OI0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55)中“使用EJB创建JEE应用程序”部分在`CourseManagementMavenEAR`项目（和相关项目）中创建的相同EAR文件。为了您的方便，相同的EAR文件也包含在本章源代码的`CourseManagementEAR`文件夹中。在管理控制台中，从左侧菜单栏点击“应用程序”。然后，点击“部署”按钮。从`CourseManagementEAR`文件夹中选择`CourseManagementMavenEAR-1.ear`并部署应用程序。
- en: Once the application is deployed successfully, you should be able to browse
    to `http://<ec2_instance_domain_name>:8080/CourseManagementMavenWebApp/course.xhtml`
    and see a list of Courses (or an empty list if there is no data).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序部署成功后，您应该能够浏览到`http://<ec2_instance_domain_name>:8080/CourseManagementMavenWebApp/course.xhtml`并看到课程列表（如果没有数据，则显示空列表）。
- en: You can save the preceding setup as a template by creating an AMI and creating
    future instances based on that AMI. To create an AMI from a running instance,
    browse to the AWS Console and select the Services | EC2 option. Then, go to the
    running instances list. Right-click on the instance you want to create an image
    from and select Create Image.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过创建AMI并将未来实例基于该AMI创建来将前面的设置保存为模板。要从运行实例创建AMI，请浏览到AWS控制台并选择“服务 | EC2”选项。然后，转到运行实例列表。右键单击您想要创建映像的实例，并选择“创建映像”。
- en: Installing the CourseManagmenet REST service using Elastic Beanstalk
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Elastic Beanstalk 安装 CourseManagmenet REST 服务
- en: Elastic Beanstalk (EBS) is a PaaS (Platform as a Service) offering from AWS
    ([https://aws.amazon.com/elasticbeanstalk/](https://aws.amazon.com/elasticbeanstalk/)).
    The idea is that you focus mostly on developing your application and leave configuration
    of servers (including installation of required software), load balancing, log
    file management, and so on to the PaaS provider. However, you do not have as much
    control over the servers in Elastic Beanstalk as you would when provisioning your
    own EC2 instances.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Beanstalk (EBS) 是 AWS（[https://aws.amazon.com/elasticbeanstalk/](https://aws.amazon.com/elasticbeanstalk/））提供的
    PaaS（平台即服务）产品。其理念是您主要关注应用程序的开发，并将服务器配置（包括所需软件的安装）、负载均衡、日志文件管理等留给了 PaaS 提供商。然而，在
    Elastic Beanstalk 中，您对服务器的控制不如您在配置自己的 EC2 实例时那么大。
- en: EBS provides preconfigured hosting solutions for different platforms, including
    one for Java. It provides servers with Tomcat preconfigured. You simply upload
    your WAR file and the application is deployed. In this section, we will learn
    how to deploy a RESTful web service in EBS.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: EBS 为不同平台提供预配置的托管解决方案，包括 Java 的一种。它提供预配置 Tomcat 的服务器。您只需上传您的 WAR 文件，应用程序就会被部署。在本节中，我们将学习如何在
    EBS 中部署 RESTful Web 服务。
- en: Recall that we developed the `CourseManagmenetREST` service in [Chapter 9](part0176.html#57R300-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55),
    *Creating Web Services*. We will deploy the same service using EBS in a Tomcat
    EBS platform. Make sure that you have created the WAR file for the `CourseManagmenetREST`
    project—import the project in Eclipse, if you haven't already done so, right-click
    on the project in Project Explorer, and select Run As | Maven Install. This will
    create the `CourseManagementREST-1.war` file in the `target` folder. We will deploy
    this WAR file using EBS in a Tomcat server.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，我们在 [第 9 章](part0176.html#57R300-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55)，“创建
    Web 服务”中开发了 `CourseManagmenetREST` 服务。我们将使用 EBS 在 Tomcat EBS 平台上部署相同的服务。确保您已创建了
    `CourseManagmenetREST` 项目的 WAR 文件——如果尚未导入项目，请在 Eclipse 中项目资源管理器中右键单击项目，选择运行 As
    | Maven 安装。这将创建 `target` 文件夹中的 `CourseManagementREST-1.war` 文件。我们将使用 EBS 在 Tomcat
    服务器上部署此 WAR 文件。
- en: Creating Elastic Beanstalk application from Eclipse
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Eclipse 创建 Elastic Beanstalk 应用程序
- en: 'We will first create a server for the EBS Tomcat platform in Eclipse. Go to
    the Servers view in Eclipse. In the default JEE perspective, this view is located
    in one of the tabs at the bottom, below editors. Right-click it and select New
    | Server:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先将在 Eclipse 中为 EBS Tomcat 平台创建一个服务器。转到 Eclipse 的服务器视图。在默认的 JEE 视图中，此视图位于底部的一个选项卡中，位于编辑器下方。右键单击它并选择新建
    | 服务器：
- en: '![](img/00249.jpeg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00249.jpeg)'
- en: 'Figure 13.8: Adding the Elastic Beanstalk server in Eclipse'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.8：在 Eclipse 中添加 Elastic Beanstalk 服务器
- en: 'From the Amazon Web Services group, select AWS Elastic Beanstalk for Tomcat
    8, or whichever is the latest Tomcat configuration that''s available. Keep the
    other default options. Click Next:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Amazon Web Services 组中选择 AWS Elastic Beanstalk for Tomcat 8，或可用的最新 Tomcat
    配置。保持其他默认选项。点击下一步：
- en: '![](img/00250.jpeg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00250.jpeg)'
- en: 'Figure 13.9: Configuring the EBS application and environment'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.9：配置 EBS 应用程序和环境
- en: 'Select the option to Create a new application. Let’s name this application
    `CourseManagementREST` and the environment `CourseManagementREST-env`. Since we
    are deploying a web application, either select Single Instance Web Server Environment or
    Load Balanced Web Server Environment from the Type drop-down box. The third type,
    Worker Environment, is normally used for long-running batch applications. Click
    Next. At this point, the plugin may warn you that the IAM operation is not allowed.
    Click OK to proceed:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 选择创建新应用程序的选项。让我们将此应用程序命名为 `CourseManagementREST`，环境为 `CourseManagementREST-env`。由于我们正在部署一个
    Web 应用程序，请从下拉框中选择单实例 Web 服务器环境或负载均衡 Web 服务器环境。第三种类型，工作环境，通常用于长时间运行的批处理应用程序。点击下一步。此时，插件可能会警告您
    IAM 操作不允许。点击确定继续：
- en: '![](img/00251.jpeg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00251.jpeg)'
- en: 'Figure 13.10: Selecting the instance profile and service role for the EBS application'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.10：选择 EBS 应用程序的实例配置文件和服务角色
- en: 'Keep the default values on the Permissions page and click Next:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在权限页面保持默认值并点击下一步：
- en: '![](img/00252.jpeg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00252.jpeg)'
- en: 'Figure 13.11: Selecting the key pair for EBS deployment'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.11：选择 EBS 部署的密钥对
- en: Check the Deploy with a key pair option and select a key from the list. If no
    key pairs are listed, click on the plus icon and add a new key pair. You just
    need to specify the name of the key and the location on your machine where it
    will be saved. Click Next.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 选择“使用密钥对部署”选项并从列表中选择一个密钥。如果没有列出密钥对，请点击加号图标并添加一个新的密钥对。你只需要指定密钥的名称和它在你的机器上的保存位置。点击下一步。
- en: 'If you have already imported the `CourseManagementREST` project from [Chapter
    9](part0176.html#57R300-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55), *Creating Web Services*,
    in the Eclipse workspace, then it will appear as an application that is available
    to deploy. Click the Add button to move it to the Configured list:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经从第 9 章[创建 Web 服务](part0176.html#57R300-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55)中导入
    `CourseManagementREST` 项目到 Eclipse 工作区，那么它将作为一个可部署的应用程序出现。点击“添加”按钮将其移动到“配置”列表中：
- en: '![](img/00253.jpeg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00253.jpeg)'
- en: 'Figure 13.12: Adding the application to deploy in EBS'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.12：将应用程序添加到 EBS 部署
- en: 'Click Finish. The EBS server we just added should appear in the Servers view:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 点击完成。我们刚刚添加的 EBS 服务器应该会出现在服务器视图中：
- en: '![](img/00254.jpeg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00254.jpeg)'
- en: 'Figure 13.13: Servers view with the EBS server added'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.13：添加了 EBS 服务器后的服务器视图
- en: 'Click the Start button (or right-click on the server and select the Start option).
    Eclipse asks for the version label for your deployment:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“开始”按钮（或右键单击服务器并选择“开始”选项）。Eclipse 会要求你输入部署的版本标签：
- en: '![](img/00255.jpeg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00255.jpeg)'
- en: 'Figure 13.14: Setting the version label for EBS deployment'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.14：设置 EBS 部署的版本标签
- en: Set the label (or keep the default one) and click OK. Once the server is started
    (you can check the status in the Servers view—make sure that the status is Started),
    browse to `http://<your-ebs-app-domain>/services/course/get/1`. You should see
    the XML output with details of course ID 1.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 设置标签（或保留默认标签）并点击确定。一旦服务器启动（你可以在服务器视图中检查状态——确保状态为已启动），浏览到 `http://<your-ebs-app-domain>/services/course/get/1`。你应该会看到包含课程
    ID 1 的详细信息的 XML 输出。
- en: 'To find the domain name of your EBS server, double-click on the server in the Servers
    view. This will display server properties in the editor:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到你的 EBS 服务器域名，在服务器视图中双击服务器。这将在编辑器中显示服务器属性：
- en: '![](img/00256.jpeg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00256.jpeg)'
- en: 'Figure 13.15: EBS server properties'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.15：EBS 服务器属性
- en: You can find the domain name in the Environment URL link. Click on the other
    tabs to see more information about the configuration of your server. Clicking
    on the Log tab shows your server log, which will be useful for troubleshooting
    problems.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在环境 URL 链接中找到域名。点击其他选项卡以查看有关服务器配置的更多信息。点击“日志”选项卡将显示你的服务器日志，这对于故障排除问题非常有用。
- en: 'If you want to see EC2 instances created by AWS for your Beanstalk application,
    click on the Environment Resources tab:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要查看 AWS 为你的 Beanstalk 应用程序创建的 EC2 实例，请点击“环境资源”选项卡：
- en: '![](img/00257.jpeg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00257.jpeg)'
- en: 'Figure 13.16: EC2 instances in EBS'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.16：EBS 中的 EC2 实例
- en: Right-click on the instance row and select Open Shell. This can also be useful
    for troubleshooting the application. Note that any changes (like installing software)
    you make to the EC2 instance in EBS will be lost when a new version of the app
    is deployed.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 右键单击实例行并选择打开外壳。这也可以用于故障排除应用程序。请注意，你对 EBS 中的 EC2 实例所做的任何更改（如安装软件）在部署新版本的应用程序时将会丢失。
- en: 'You can see EBS applications and environments in AWS Explorer in Eclipse:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 Eclipse 的 AWS 探索器中看到 EBS 应用程序和环境：
- en: '![](img/00258.jpeg)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00258.jpeg)'
- en: 'Figure 13.17: Browsing EBS applications and environments in AWS Explorer'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.17：在 AWS 探索器中浏览 EBS 应用程序和环境
- en: 'Login to the AWS Console and go to Services | Elastic Beanstalk to see all
    your applications and environments, including ones created from Eclipse:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 登录 AWS 控制台并转到服务 | 弹性豆舱，以查看所有应用程序和环境，包括从 Eclipse 创建的：
- en: '![](img/00259.jpeg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00259.jpeg)'
- en: 'Figure 13.18: EBS dashboard'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.18：EBS 仪表板
- en: If you have a WAR file to deploy/update, click the Upload and Deploy button
    and select the WAR file you want to deploy.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个要部署/更新的 WAR 文件，请点击“上传和部署”按钮并选择你想要部署的 WAR 文件。
- en: You can modify the configuration of your environment by clicking the Configuration
    link, which is just below the Dashboard. Options in the configuration page allow
    you to modify settings for instances, capacity, the load balancer, security settings,
    and more. If your application uses a database, then you can configure that too.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击仪表板下方的“配置”链接来修改你环境的配置。配置页面中的选项允许你修改实例、容量、负载均衡器、安全设置等设置。如果你的应用程序使用数据库，你也可以进行配置。
- en: You can browse the application, `CourseManagementREST`, by opening `<environment
    url in fig 13.15>/services/course/get/1`.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过打开 `<环境 URL 在图 13.15>/services/course/get/1` 来浏览应用程序，`CourseManagementREST`。
- en: For some reason if the application does not get deployed properly from Eclipse
    then redeploy the application from AWS Console by click on Upload and Deploy button
    in *Fig 13.18* and browse to the WAR file created in the `target` folder of the
    project (if the WAR file was not created, then right-click on the project and
    select Run As | Maven Install).
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于某种原因，应用程序从 Eclipse 无法正确部署，则可以通过点击 *图 13.18* 中的“上传和部署”按钮，从 AWS Console 重新部署应用程序，并浏览到项目
    `target` 文件夹中创建的 WAR 文件（如果未创建 WAR 文件，则右键单击项目并选择 Run As | Maven Install）。
- en: Elastic Beanstalk can significantly save time in deploying applications to the
    cloud. It requires a lot less setup and configuration.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Beanstalk 可以显著节省将应用程序部署到云中的时间。它需要的设置和配置要少得多。
- en: Deploying in Google Cloud
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Google Cloud 中部署
- en: 'In this section, we will see how to deploy JEE applications in Google Compute
    Engine (IaaS offering) and Google App Engine (PaaS offering). Compute Engine ([https://cloud.google.com/compute/](https://cloud.google.com/compute/))
    can be considered an AWS EC2 counterpart, and App Engine ([https://cloud.google.com/appengine](https://cloud.google.com/appengine)
    ) an Elastic Beanstalk counterpart. You need to have a Google account to login
    to Cloud Console at [https://console.cloud.google.com](https://console.cloud.google.com).
    You need to have at least one project created in Google Cloud to deploy applications.
    When you login to the Cloud Console, it will prompt you to create a project if
    there are no projects already available:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解如何在 Google Compute Engine（IaaS 提供服务）和 Google App Engine（PaaS 提供服务）中部署
    JEE 应用程序。Compute Engine ([https://cloud.google.com/compute/](https://cloud.google.com/compute/))
    可以被认为是 AWS EC2 的对应物，而 App Engine ([https://cloud.google.com/appengine](https://cloud.google.com/appengine)
    ) 可以被认为是 Elastic Beanstalk 的对应物。您需要有一个 Google 账户才能登录到 [https://console.cloud.google.com](https://console.cloud.google.com)
    的 Cloud Console。您需要在 Google Cloud 中创建至少一个项目才能部署应用程序。当您登录到 Cloud Console 时，如果没有可用的项目，它将提示您创建一个项目：
- en: '![](img/00260.jpeg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00260.jpeg)'
- en: 'Figure 13.19: Creating a Google Cloud project from the Dashboard'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.19：从仪表板创建 Google Cloud 项目
- en: All you need to enter in the Create Project page is the name of the project.
    The Project ID will be automatically selected for you. You should keep this Project
    ID handy, because many SDK commands need a Project ID as one of their parameters.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建项目页面中，您只需要输入项目的名称。项目 ID 将自动为您选择。您应该保留这个项目 ID，因为许多 SDK 命令需要一个项目 ID 作为它们的参数之一。
- en: If you already have projects, but want to create a new project for this book,
    open the Google Cloud Console web page and go to the IAM & admin | Manage resources
    page. Click the Create Project link on the page.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经有了项目，但想为这本书创建一个新的项目，请打开 Google Cloud Console 网页，转到 IAM & admin | 管理资源页面。点击页面上的“创建项目”链接。
- en: Setting up Google Cloud Tools
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Google Cloud Tools
- en: Setting up Google Cloud Tools requires multiple steps. Let’s start with installing
    the SDK.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 Google Cloud Tools 需要多个步骤。让我们从安装 SDK 开始。
- en: Installing the Google Cloud SDK
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Google Cloud SDK
- en: 'Download the SDK from [https://cloud.google.com/sdk/](https://cloud.google.com/sdk/).
    Unzip it and run the following command from the `bin` folder:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 从 [https://cloud.google.com/sdk/](https://cloud.google.com/sdk/) 下载 SDK。解压它，并从
    `bin` 文件夹运行以下命令：
- en: '[PRE23]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: See [https://cloud.google.com/sdk/docs/initializing](https://cloud.google.com/sdk/docs/initializing)
    for more options regarding initializing the SDK.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 有关初始化 SDK 的更多选项，请参阅 [https://cloud.google.com/sdk/docs/initializing](https://cloud.google.com/sdk/docs/initializing)。
- en: Installing Java extensions for the App Engine SDK
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 App Engine SDK 的 Java 扩展
- en: 'Run the following command (make sure that the Cloud SDK is installed and configured):'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令（确保已安装和配置 Cloud SDK）：
- en: '[PRE24]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: See [https://cloud.google.com/sdk/docs/managing-components](https://cloud.google.com/sdk/docs/managing-components)
    for details on managing Google Cloud components.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 有关管理 Google Cloud 组件的详细信息，请参阅 [https://cloud.google.com/sdk/docs/managing-components](https://cloud.google.com/sdk/docs/managing-components)。
- en: 'Next, set the default project name for `gcloud` commands:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，设置 `gcloud` 命令的默认项目名称：
- en: '[PRE25]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Installing Google Cloud Tools for Eclipse
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Google Cloud Tools for Eclipse
- en: 'To install the plugin for Google Cloud in Eclipse, open Eclipse Marketplace (select
    the menu Help | Eclipse Marketplace...). Search for Google Cloud Tools:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Eclipse 中安装 Google Cloud 插件，请打开 Eclipse Marketplace（选择菜单 Help | Eclipse Marketplace...）。搜索
    Google Cloud Tools：
- en: '![](img/00261.jpeg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00261.jpeg)'
- en: 'Figure 13.20: Installing the Google Cloud Tools plugin from the Marketplace'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.20：从市场安装 Google Cloud Tools 插件
- en: Setting Eclipse Preferences for Google Cloud Tools
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Google Cloud Tools 设置 Eclipse 首选项
- en: 'Open Eclipse Preferences and go to the Google Cloud Tools preferences:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 Eclipse 首选项并转到 Google Cloud Tools 首选项：
- en: '![](img/00262.jpeg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00262.jpeg)'
- en: 'Figure 13.21: Setting the SDK path in Google Cloud Tools preferences'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.21：在 Google Cloud Tools 首选项中设置 SDK 路径
- en: Enter the path to the folder where you unzipped the SDK in the SDK location field.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SDK 位置字段中输入您解压缩 SDK 的文件夹路径。
- en: Deploying the application in Google Compute Engine
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Google Compute Engine 中部署应用程序
- en: In this section, we will create an instance of a VM in Google Compute Engine
    and deploy a JEE application in it. Once we create a VM, we can follow the same
    steps we did to install the GlassFish Server and the *Course Management* application
    in the EC2 instance in the preceding *Installing the CourseManagement EJB application
    in an EC2 instance* section. But let’s deploy a different application in the Compute
    Engine. In the last chapter, we saw how to deploy JEE applications in Docker containers.
    So, let’s install Docker in a VM in Compute Engine and deploy the `CourseManagement`
    service in it. But first, let’s create a VM. Unfortunately, at the time of writing
    this book, Google Cloud Tools for Eclipse does not provide much support for working
    with Compute Engine. Therefore, we will be using either the Google Cloud Console
    web page or Terminal on the host machine.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将在 Google Compute Engine 中创建一个虚拟机实例并在其中部署一个 JEE 应用程序。一旦我们创建了一个虚拟机，我们就可以遵循与在前面
    *在 EC2 实例中安装 CourseManagement EJB 应用程序* 部分中安装 GlassFish 服务器和 *Course Management*
    应用程序相同的步骤。但让我们在 Compute Engine 中部署一个不同的应用程序。在上一章中，我们看到了如何在 Docker 容器中部署 JEE 应用程序。所以，让我们在
    Compute Engine 的虚拟机中安装 Docker 并部署 `CourseManagement` 服务。但首先，让我们创建一个虚拟机。不幸的是，在撰写本书时，Google
    Cloud Tools for Eclipse 并没有为与 Compute Engine 的工作提供很多支持。因此，我们将使用 Google Cloud Console
    网页或主机机器上的终端。
- en: Creating a VM instance in Google Compute Engine
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Google Compute Engine 中创建虚拟机实例
- en: Login to the Google Cloud Console ([https://console.cloud.google.com](https://console.cloud.google.com))
    and go to the Compute Engine | VM Instances page. Click the Create Instance link.
    Create an instance using Debian GNU/Linux boot disk. Make sure to select the Allow
    HTTP traffic and Allow HTTPS traffic options.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到 Google Cloud 控制台 ([https://console.cloud.google.com](https://console.cloud.google.com))
    并转到 计算引擎 | 虚拟机实例 页面。点击 创建实例 链接。使用 Debian GNU/Linux 引导盘创建实例。请确保选择 允许 HTTP 流量 和
    允许 HTTPS 流量 选项。
- en: Installing Docker in a VM instance
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在虚拟机实例中安装 Docker
- en: 'In the VM instances page, select the instance you want to use and drop down
    the SSH options (in the Connect column in the table):'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚拟机实例页面，选择您要使用的实例并下拉 SSH 选项（在表格的 连接 列中）：
- en: '![](img/00263.jpeg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00263.jpeg)'
- en: 'Figure 13.22: Opening an SSH connection to a VM instance'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.22：打开到虚拟机实例的 SSH 连接
- en: 'Select Open in browser window. This option opens a browser window and opens
    a SSH shell in the VM instance. Run the following commands in the shell to install
    Docker:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 选择在浏览器窗口中打开。此选项将在浏览器窗口中打开并打开虚拟机实例的 SSH shell。在 shell 中运行以下命令以安装 Docker：
- en: '| **Command** | **Description** |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '|'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE26]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '| Gets the latest version of packages and dependencies |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| 获取软件包和依赖项的最新版本 |'
- en: '|'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE27]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '| Downloads the Docker installer script |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| 下载 Docker 安装脚本 |'
- en: '|'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE28]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '| Runs the installer script |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| 运行安装脚本 |'
- en: See [https://docs.docker.com/install/linux/docker-ce/debian/](https://docs.docker.com/install/linux/docker-ce/debian/)
    for more information on installing Docker on a Debian distribution.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 有关在 Debian 发行版上安装 Docker 的更多信息，请参阅 [https://docs.docker.com/install/linux/docker-ce/debian/](https://docs.docker.com/install/linux/docker-ce/debian/)。
- en: 'Once Docker is installed, we need to execute a few commands so that the Docker
    command can be called without using `sudo` (Docker runs as the root):'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了 Docker，我们需要执行几个命令，以便可以在不使用 `sudo` 的情况下调用 Docker 命令（Docker 以 root 身份运行）：
- en: '| **Command** | **Description** |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '|'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE29]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '| Creates a Docker user group. It probably already exists. |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| 创建 Docker 用户组。它可能已经存在。 |'
- en: '|'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE30]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '| Adds a current user to the Docker group. |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| 将当前用户添加到 Docker 组中。 |'
- en: See [https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user](https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user)
    for more details.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多详细信息，请参阅 [https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user](https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user)。
- en: Log out of the shell and log back in (close the shell window and open a new
    shell window). If all of the preceding commands have been executed successfully,
    then you should be able to run the `docker ps` command without `sudo`.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 从外壳注销并重新登录（关闭外壳窗口并打开一个新的外壳窗口）。如果所有前面的命令都已成功执行，那么您应该能够在没有`sudo`的情况下运行`docker
    ps`命令。
- en: 'Next, we will install `docker-compose` in the instance (see [https://docs.docker.com/compose/install/](https://docs.docker.com/compose/install/)).
    Execute the following commands (the version number might be different in the command
    to install `docker-compose`):'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在实例中安装`docker-compose`（请参阅[https://docs.docker.com/compose/install/](https://docs.docker.com/compose/install/)）。执行以下命令（安装`docker-compose`的命令行版本号可能不同）：
- en: '| **Command** | **Description** |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '|'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE31]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '| Downloads `docker-compose` |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| 下载`docker-compose` |'
- en: '|'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE32]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '| Makes `docker-compose` executable |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| 使`docker-compose`可执行 |'
- en: 'We created `docker-compose` deployment configuration in [Chapter 12](part0229.html#6QCGQ0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55), *Microservices*.
    We will deploy the same in the VM instance we have created in this section. The
    source code for this chapter includes a folder named `coursemanagement-docker-compose`.
    Upload all files in that folder to the VM instance. You can either upload from
    the browser shell window or use the `gcloud` command from your host machine. In
    the browser shell, click on the Settings icon in the upper-right corner and select
    the Upload File option. Upload all of the files that are in the `coursemanagement-docker-compose`
    folder. To upload from Terminal, execute the following `gcloud` command after
    changing the folder to `coursemanagement-docker-compose`:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[第12章](part0229.html#6QCGQ0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55)中创建了`docker-compose`部署配置，*微服务*。我们将在本节中创建的虚拟机实例中部署相同的配置。本章的源代码包括一个名为`coursemanagement-docker-compose`的文件夹。将此文件夹中的所有文件上传到虚拟机实例。您可以从浏览器外壳窗口上传，或者使用主机机器上的`gcloud`命令。在浏览器外壳中，点击右上角的设置图标，选择上传文件选项。上传`coursemanagement-docker-compose`文件夹中的所有文件。要从终端上传，在将文件夹更改为`coursemanagement-docker-compose`后，执行以下`gcloud`命令：
- en: '[PRE33]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: This command copies all of the files in the current folder (which in our case
    is `coursemanagement-docker-compose`) to the user’s home folder in the instance.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将当前文件夹（在我们的案例中是`coursemanagement-docker-compose`）中的所有文件复制到实例中用户的主文件夹。
- en: 'Whichever method you use to upload the files, make sure that you have the following
    files in the VM instance:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您使用哪种方法上传文件，请确保您在虚拟机实例中有以下文件：
- en: '`course-management-db.dockerfile`'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`course-management-db.dockerfile`'
- en: '`course-management-service.dockerfile`'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`course-management-service.dockerfile`'
- en: '`docker-compose.yml`'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docker-compose.yml`'
- en: '`course-management-db.sql`'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`course-management-db.sql`'
- en: '`coursemanagementspring-0.0.1-SNAPSHOT.jar`'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`coursemanagementspring-0.0.1-SNAPSHOT.jar`'
- en: 'In the browser shell for the VM instance, execute the following command to
    set up the database and REST service in Docker containers:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚拟机实例的浏览器外壳中，执行以下命令以在Docker容器中设置数据库和REST服务：
- en: '[PRE34]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: See [Chapter 12](part0229.html#6QCGQ0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55), *Microservices*,
    for more details on the preceding files and the command. Once the command is executed
    successfully, browse to `http://<instance_external_ip>/course_management/courses`.
    You will just see an empty JSON array, because there is no data in the database.
    You can find the external IP of your instance from the Compute Engine | VM Instances
    page.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[第12章](part0229.html#6QCGQ0-d43a3a5ee6dd4ebc9d7c7e1cc8d7df55)，*微服务*，以获取有关前面文件和命令的更多详细信息。一旦命令执行成功，浏览到`http://<instance_external_ip>/course_management/courses`。您将只看到一个空的JSON数组，因为没有数据在数据库中。您可以从“计算引擎
    | 虚拟机实例”页面找到您实例的外部IP。
- en: Run the `docker-compose down` command to shut down the containers.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`docker-compose down`命令以关闭容器。
- en: Deploying the application in Google App Engine
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Google App Engine中部署应用程序
- en: App Engine is Google’s **Platform as a Service** (**PaaS**) offering, similar
    to Elastic Beanstalk from Amazon. In the section <q class="calibre207">Creating
    Elastic Beanstalk application from Eclipse</q>, we deployed the `CourseManagementREST`
    service using Elastic Beanstalk. In this section, we will learn how to deploy
    the same service using Google App Engine.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: App Engine是Google的**平台即服务**（**PaaS**），类似于亚马逊的Elastic Beanstalk。在《从Eclipse创建Elastic
    Beanstalk应用程序》这一节中，我们使用Elastic Beanstalk部署了`CourseManagementREST`服务。在本节中，我们将学习如何使用Google
    App Engine部署相同的服务。
- en: Let’s make a copy of the `CourseManagementREST` project. Right-click on the
    project in Eclipse Project Explorer and select Copy. Right-click anywhere in Project
    Explorer and select Paste. Eclipse will prompt you to name the project. Let’s
    name it `CourseManagementREST-GAE`. We will deploy this project using Google App
    Engine.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们复制 `CourseManagementREST` 项目。在 Eclipse 项目资源管理器中右键单击项目，然后选择复制。在项目资源管理器中的任何位置右键单击，然后选择粘贴。Eclipse
    将提示您命名项目。让我们将其命名为 `CourseManagementREST-GAE`。我们将使用 Google App Engine 部署此项目。
- en: Let’s configure our project as an App Engine project. Right-click on the CourseManagementREST-GAE
    project in Project Explorer and select Configure | Convert to App Engine Standard
    Project.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们配置我们的项目为 App Engine 项目。在项目资源管理器中右键单击 CourseManagementREST-GAE 项目，然后选择配置 |
    转换为 App Engine 标准项目。
- en: If you are creating a new project for deployment to Google App Engine, then
    go to the File | New | Google App Engine Standard Java Project menu. Or, go to
    the drop-down menu from the Google Cloud Platform icon in the toolbar and select
    Create New Project | Google App Engine Standard Java Project.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在创建一个用于部署到 Google App Engine 的新项目，请转到文件 | 新建 | Google App Engine 标准Java项目菜单。或者，从工具栏中的
    Google Cloud Platform 图标下拉菜单中选择创建新项目 | Google App Engine 标准Java项目。
- en: Before we deploy the project, remove `web.xml` from the `src/main/webapp/WEB-INF`
    folder. Google App Engine’s Java platform uses the Jetty server and it does not
    need `web.xml` for this deployment.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们部署项目之前，请从 `src/main/webapp/WEB-INF` 文件夹中删除 `web.xml`。Google App Engine 的
    Java 平台使用 Jetty 服务器，并且在此部署中不需要 `web.xml`。
- en: 'You may see an error stating `web.xml is missing and <failOnMissingWebXml>
    is set to true pom.xml` after deleting `web.xml`. To suppress this error, add
    the following property in `pom.xml`:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在删除 `web.xml` 后，您可能会看到一个错误，表明 `web.xml` 缺失，并且 `<failOnMissingWebXml>` 设置为 true。为了抑制此错误，请在
    `pom.xml` 中添加以下属性：
- en: '`<properties>`'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`<properties>`'
- en: '`    <failOnMissingWebXml>false</failOnMissingWebXml>   `'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '`    <failOnMissingWebXml>false</failOnMissingWebXml>   `'
- en: '`</properties>`'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '`</properties>`'
- en: 'To test this application locally, go to the Servers view, right-click on it,
    and select New | Server. Then, expand the Google group and select App Engine Standard:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 要在本地测试此应用程序，请转到服务器视图，右键单击它，然后选择新建 | 服务器。然后，展开 Google 组并选择 App Engine Standard：
- en: '![](img/00264.jpeg)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00264.jpeg)'
- en: 'Figure 13.23: Creating a local App Engine server'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.23：创建本地 App Engine 服务器
- en: 'Click Next and add the CourseManagementREST-GAE project for deployment:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 点击下一步并添加用于部署的 CourseManagementREST-GAE 项目：
- en: '![](img/00265.jpeg)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00265.jpeg)'
- en: 'Figure 13.24: Adding the CourseManagementREST-GAE project for deployment'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.24：为部署添加 CourseManagementREST-GAE 项目
- en: Click Finish and start the server from the Server view. Then, browse to `http://localhost:8080/services/course/get/1`
    to verify that the application has been deployed properly.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 点击完成并从服务器视图启动服务器。然后，浏览到 `http://localhost:8080/services/course/get/1` 以验证应用程序是否已正确部署。
- en: 'If you get errors regarding the JDK version in `pom.xml`, add the following
    section in `pom.xml`, above the dependencies section:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在 `pom.xml` 中遇到有关 JDK 版本的错误，请在 `pom.xml` 中的依赖项部分上方添加以下部分：
- en: '`<properties>`'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '`<properties>`'
- en: '`  <maven.compiler.source>1.8</maven.compiler.source>`'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '`  <maven.compiler.source>1.8</maven.compiler.source>`'
- en: '`  <maven.compiler.target>1.8</maven.compiler.target>`'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '`  <maven.compiler.target>1.8</maven.compiler.target>`'
- en: '`</properties>`'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '`</properties>`'
- en: 'Before you deploy this project to Google App Engine, you should make sure that
    an application has been created in Google App Engine. Browse to [https://console.cloud.google.com/appengine](https://console.cloud.google.com/appengine)
    and check if any application exists. If not, you can create an application from
    that page. Alternately, you can run the following command in Terminal:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在您将此项目部署到 Google App Engine 之前，您应该确保在 Google App Engine 中已创建应用程序。浏览到 [https://console.cloud.google.com/appengine](https://console.cloud.google.com/appengine)
    并检查是否存在任何应用程序。如果不存在，您可以从该页面创建应用程序。或者，您可以在终端中运行以下命令：
- en: '[PRE35]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'To deploy this project to Google App Engine, select the project in Project
    Explorer and the drop-down menu from the Google Cloud Platform toolbar button:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 要将此项目部署到 Google App Engine，请在项目资源管理器中选择项目，并从 Google Cloud Platform 工具栏按钮的下拉菜单中选择：
- en: '![](img/00266.jpeg)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00266.jpeg)'
- en: 'Figure 13.25: Deploying the project to Google App Engine'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.25：将项目部署到 Google App Engine
- en: 'Select the Deploy to App Engine Standard... menu:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 选择部署到 App Engine 标准菜单：
- en: '![](img/00267.jpeg)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00267.jpeg)'
- en: 'Figure 13.26: Setting deployment parameters for Google App Engine'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.26：设置 Google App Engine 的部署参数
- en: Select your Google account from the drop-down menu, if not already selected,
    and then select the Google Cloud project you want the application deployed to.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择你的 Google 账户，如果没有选择，然后选择你想要部署应用程序的 Google Cloud 项目。
- en: Once the project is deployed, browse to `https://<your_project_id>.appsport.com/services/course/get/1`
    to verify it.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦项目部署完成，请浏览到 `https://<your_project_id>.appsport.com/services/course/get/1`
    以验证它。
- en: To stop the application, you need to disable the application—open [https://console.cloud.google.com](https://console.cloud.google.com)
    and go to App Engine | Settings and click the Disable Application button.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 要停止应用程序，你需要禁用应用程序——打开 [https://console.cloud.google.com](https://console.cloud.google.com)，转到
    App Engine | 设置并点击“禁用应用程序”按钮。
- en: Summary
  id: totrans-327
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about two types of cloud deployment services provided
    by Amazon and Google. One is IaaS and the other is PaaS. PaaS lets you deploy
    your application in a pre-configured environment, while IaaS gives you complete
    control over deployment configuration. The IaaS offering from Amazon is called
    EC2 and the one from Google is called Compute Engine. The PaaS offering from Amazon
    is called Elastic Beanstalk and the one from Google is called App Engine.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了亚马逊和谷歌提供的两种云部署服务类型。一种是 IaaS，另一种是 PaaS。PaaS 允许你在预配置的环境中部署你的应用程序，而 IaaS
    则让你完全控制部署配置。亚马逊的 IaaS 提供服务称为 EC2，谷歌的称为 Compute Engine。亚马逊的 PaaS 提供服务称为 Elastic
    Beanstalk，谷歌的称为 App Engine。
- en: We deployed the `CourseManagement` EJB application in the GlassFish Server in
    an instance of Amazon EC2\. We then deployed the `CourseManagementREST` service
    in Elastic Beanstalk.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在亚马逊 EC2 的一个实例中的 GlassFish 服务器上部署了 `CourseManagement` EJB 应用程序。然后我们在 Elastic
    Beanstalk 中部署了 `CourseManagementREST` 服务。
- en: Then, we deployed a Docker container with the `CourseManagement` service in
    an instance of Google Compute Engine. Lastly, we deployed the `CourseManagementREST`
    service in Google App Engine.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在 Google Compute Engine 的一个实例中部署了一个带有 `CourseManagement` 服务的 Docker 容器。最后，我们在
    Google App Engine 中部署了 `CourseManagementREST` 服务。
- en: In the next chapter, we will learn how to secure JEE applications.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何确保 JEE 应用程序的安全。
