- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: GraalVM is a universal virtual machine that allows programmers to embed, compile,
    interoperate, and run applications written in JVM languages such as Java, Kotlin,
    and Groovy; non-JVM languages such as JavaScript, Python, WebAssembly, Ruby, and
    R; and LLVM languages such as C and C++.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: GraalVM 是一种通用的虚拟机，允许程序员将用 JVM 语言（如 Java、Kotlin 和 Groovy）编写的应用程序嵌入、编译、互操作和运行；非
    JVM 语言（如 JavaScript、Python、WebAssembly、Ruby 和 R）；以及 LLVM 语言（如 C 和 C++）。
- en: GraalVM provides the Graal **just-in-time** (**JIT**) compiler, an implementation
    of the Java Virtual Machine Compiler Interface (**JVMCI**), which is completely
    built on Java and uses Java JIT compiler (C2 compiler) optimization techniques
    as the baseline and builds on top of them. The Graal JIT compiler is much more
    sophisticated than the Java C2 JIT compiler. GraalVM is a drop-in replacement
    for the JDK, which means that all the applications that are currently running
    on the JDK should run on GraalVM without any application code changes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: GraalVM 提供了 Graal **即时**（**JIT**）编译器，这是 Java 虚拟机编译器接口（**JVMCI**）的一个实现，它完全基于
    Java，并使用 Java JIT 编译器（C2 编译器）优化技术作为基础，并在此基础上构建。Graal JIT 编译器比 Java C2 JIT 编译器更复杂。GraalVM
    是 JDK 的直接替代品，这意味着所有目前在 JDK 上运行的应用程序都应该在 GraalVM 上运行，而无需更改任何应用程序代码。
- en: GraalVM also provides **ahead-of-time** (**AOT**) compilation to build native
    images with static linking. GraalVM AOT compilation helps build native images
    that have a very small footprint and faster startup and execution, which is ideal
    for modern-day microservices architectures.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: GraalVM 还提供了**即时编译**（**AOT**）功能，以静态链接构建原生镜像。GraalVM AOT 编译有助于构建具有非常小体积、快速启动和执行速度的原生镜像，这对于现代微服务架构来说非常理想。
- en: While GraalVM is built on Java, it not only supports Java, but also enables
    polyglot development with JavaScript, Python, R, Ruby, C, and C++. It provides
    an extensible framework called Truffle that allows any language to be built and
    run on the platform.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 GraalVM 是基于 Java 构建的，但它不仅支持 Java，还使 JavaScript、Python、R、Ruby、C 和 C++ 等多种语言能够进行多语言开发。它提供了一个可扩展的框架
    Truffle，允许任何语言在平台上构建和运行。
- en: GraalVM is becoming the default runtime for running cloud-native Java microservices.
    Soon, all Java developers will be using GraalVM to run their cloud-native Java
    microservices. There are already a lot of microservices frameworks that are emerging
    in the market, such as Quarkus, Micronaut, Spring Native, and so on, that are
    built on GraalVM.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: GraalVM 正在成为运行云原生 Java 微服务的默认运行时。很快，所有 Java 开发者都将使用 GraalVM 来运行他们的云原生 Java 微服务。市场上已经出现了许多基于
    GraalVM 的微服务框架，例如 Quarkus、Micronaut、Spring Native 等。
- en: Developers working with Java will be able to put their knowledge to work with
    this practical guide to GraalVM and cloud-native microservice Java frameworks.
    The book provides a hands-on approach to implementation and associated methodologies
    that will have you up and running, and productive in no time. The book also provides
    step-by-step explanations of essential concepts with simple and easy-to-understand
    examples.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Java 一起工作的开发者将能够通过这本关于 GraalVM 和云原生微服务 Java 框架的实用指南来运用他们的知识。本书提供了实施和相关方法的动手实践方法，让您迅速上手并高效工作。本书还通过简单易懂的示例逐步解释了基本概念。
- en: This book is a hands-on guide for developers who wish to optimize their apps'
    performance and are looking for solutions. We will start by giving a quick introduction
    to the GraalVM architecture and how things work under the hood. Developers will
    quickly move on to explore the performance benefits they can gain by running their
    Java applications on GraalVM. We'll learn how to create native images and understand
    how AOT can improve application performance significantly. We'll then move on
    to explore examples of building polyglot applications and explore the interoperability
    between languages running on the same VM. We'll explore the Truffle framework
    to implement our own languages to run optimally on GraalVM. Finally, we'll also
    learn how GraalVM is specifically beneficial in cloud-native and microservices
    development.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是针对希望优化其应用程序性能并寻求解决方案的开发者的实用指南。我们将从简要介绍 GraalVM 架构和底层工作原理开始。开发者将迅速进入探索在 GraalVM
    上运行 Java 应用程序所能获得性能优势的阶段。我们将学习如何创建原生镜像，并了解 AOT 如何显著提高应用程序性能。然后，我们将探索构建多语言应用程序的示例，并探讨在同一虚拟机上运行的语言之间的互操作性。我们将探索
    Truffle 框架，以实现我们自己的语言在 GraalVM 上最优运行。最后，我们还将了解 GraalVM 在云原生和微服务开发中的具体益处。
- en: Who this book is for
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向对象
- en: The primary audience for this book is JVM developers looking to optimize their
    application's performance. This book would also be useful to JVM developers who
    are exploring options to develop polyglot applications by using tooling from the
    Python/R/Ruby/Node.js ecosystem. Since this book is for experienced developers/programmers,
    readers must be well-versed in software development concepts and should have good
    knowledge of working with programming languages.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的主要受众是希望优化其应用程序性能的JVM开发者。对于探索使用Python/R/Ruby/Node.js生态系统中的工具开发多语言应用程序的JVM开发者来说，本书也非常有用。由于本书面向经验丰富的开发者/程序员，读者必须熟悉软件开发概念，并且应该对使用编程语言有良好的了解。
- en: What this book covers
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[*Chapter 1*](B16878_01_Final_SK_ePub.xhtml#_idTextAnchor014), *Evolution of
    Java Virtual Machine,* walks through the evolution of JVM and how it optimized
    the interpreter and compiler. It will walk through C1 and C2 compilers, and the
    kind of code optimizations that JVM performs to run Java programs faster.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B16878_01_Final_SK_ePub.xhtml#_idTextAnchor014), *Java虚拟机的发展历程*，回顾了JVM的发展历程以及它是如何优化解释器和编译器的。它将介绍C1和C2编译器，以及JVM为了使Java程序运行更快而执行的代码优化类型。'
- en: '[*Chapter 2*](B16878_02_Final_SK_ePub.xhtml#_idTextAnchor028), *JIT, HotSpot,
    and GraalJIT,* takes a deep dive into how JIT compilers and Java HotSpot work
    and how JVM optimizes code at runtime.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B16878_02_Final_SK_ePub.xhtml#_idTextAnchor028), *JIT、HotSpot和GraalJIT*，深入探讨了JIT编译器和Java
    HotSpot的工作原理以及JVM如何在运行时优化代码。'
- en: '[*Chapter 3*](B16878_03_Final_SK_ePub.xhtml#_idTextAnchor054), *GraalVM Architecture,*
    provides an architecture overview of Graal and the various architecture components.
    The chapter goes into details on how GraalVM works and how it provides a single
    VM for multiple language implementations. This chapter also covers the optimizations
    GraalVM brings on top of standard JVM.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B16878_03_Final_SK_ePub.xhtml#_idTextAnchor054), *GraalVM架构*，提供了Graal和各个架构组件的架构概述。章节深入探讨了GraalVM的工作原理以及它是如何为多种语言实现提供单个虚拟机的。本章还涵盖了GraalVM在标准JVM之上带来的优化。'
- en: '[*Chapter 4*](B16878_04_Final_SK_ePub.xhtml#_idTextAnchor077), *Graal Just-In-Time
    Compiler**,* talks about the JIT compilation option of GraalVM. It goes through
    the various optimizations the Graal JIT compiler performs in detail. This is followed
    by a hands-on tutorial to use various compiler options to optimize the execution.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B16878_04_Final_SK_ePub.xhtml#_idTextAnchor077), *Graal即时编译器*，讨论了GraalVM的JIT编译选项。详细介绍了Graal
    JIT编译器执行的各项优化。随后是一个实战教程，讲解如何使用各种编译器选项来优化执行。'
- en: '[*Chapter 5*](B16878_05_Final_SK_ePub.xhtml#_idTextAnchor097), *Graal Ahead-of-Time
    Compiler and Native Image,* is a hands-on tutorial that walks through how to build
    native images and optimize and run these images with profile-guided optimization
    techniques.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B16878_05_Final_SK_ePub.xhtml#_idTextAnchor097), *Graal预编译器及原生图像*，是一个实战教程，讲解如何构建原生图像，并使用配置文件引导优化技术对这些图像进行优化和运行。'
- en: '[*Chapter 6*](B16878_06_Final_SK_ePub.xhtml#_idTextAnchor120), *Truffle – An
    Overview,* introduces the Truffle polyglot interoperability capabilities and high-level
    framework components. It also covers how data can be transferred between applications
    that are written in different languages that are running on GraalVM.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B16878_06_Final_SK_ePub.xhtml#_idTextAnchor120), *松露 - 概述*，介绍了Truffle的多语言互操作性功能和高级框架组件。它还涵盖了如何在运行在GraalVM上的不同语言编写的应用程序之间传输数据。'
- en: '[*Chapter 7*](B16878_07_Final_SK_ePub.xhtml#_idTextAnchor138), *GraalVM Polyglot
    – JavaScript and Node.js,* introduces the JavaScript and NodeJs. This is followed
    by a tutorial on how to use the Polyglot API for interoperability to interoperate
    between an example JavaScript and NodeJS application and a Python application.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B16878_07_Final_SK_ePub.xhtml#_idTextAnchor138), *GraalVM多语言 - JavaScript和Node.js*，介绍了JavaScript和NodeJs。随后是一个教程，讲解如何使用多语言API实现互操作性，以便在示例JavaScript和NodeJS应用程序与Python应用程序之间进行交互。'
- en: '[*Chapter 8*](B16878_08_Final_SK_ePub.xhtml#_idTextAnchor151), *GraalVM Polyglot
    – Java on Truffle, Python, and R,* introduces Python, R, and Java on Truffle (Espresso).
    This is followed by a tutorial on how to use the Polyglot API for interoperability
    between various languages.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B16878_08_Final_SK_ePub.xhtml#_idTextAnchor151), *GraalVM多语言 - Truffle上的Java、Python和R*，介绍了Python、R和Truffle（Espresso）上的Java。随后是一个教程，讲解如何使用多语言API实现各种语言之间的互操作性。'
- en: '[*Chapter 9*](B16878_09_Final_SK_ePub.xhtml#_idTextAnchor169), *GraalVM Polyglot
    – LLVM, Ruby, and WASM**,* introduces JavaScript and Node.js. This is followed
    by a tutorial on how to use the Polyglot API to interoperate between an example
    JavaScript/Node.js applications.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 9 章*](B16878_09_Final_SK_ePub.xhtml#_idTextAnchor169)，*GraalVM 多语言 – LLVM、Ruby
    和 WASM*，介绍了 JavaScript 和 Node.js。随后是一个教程，说明如何使用 Polyglot API 在示例 JavaScript/Node.js
    应用程序之间进行互操作。'
- en: '[*Chapter 10*](B16878_10_Final_SK_ePub.xhtml#_idTextAnchor187), *Microservices
    Architecture with GraalVM,* covers the modern microservices architecture and how
    new frameworks such as Quarkus and Micronaut implement Graal for the most optimum
    microservices architecture.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 10 章*](B16878_10_Final_SK_ePub.xhtml#_idTextAnchor187)，*使用 GraalVM 的微服务架构*，涵盖了现代微服务架构以及新框架如
    Quarkus 和 Micronaut 如何实现 Graal 以达到最优化微服务架构。'
- en: To get the most out of this book
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分利用本书
- en: This book is a hands-on guide, with step-by-step instructions on how to work
    with GraalVM. Throughout the book, the author has used very simple, easy-to-understand
    code samples that will help you to understand the core concepts of GraalVM. All
    the code samples are provided in a Git repository. You are expected to have good
    knowledge of the Java programming language. The book also touches upon Python,
    JavaScript, Node.js, Ruby, and R – but the examples are intentionally kept simple,
    for understanding, while focusing on demonstrating the polyglot interoperability
    concepts.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是一本实践指南，提供了如何使用 GraalVM 的逐步说明。在整个书中，作者使用了非常简单、易于理解的代码示例，这些示例将帮助您理解 GraalVM
    的核心概念。所有代码示例都提供在 Git 仓库中。您应具备良好的 Java 编程语言知识。本书还涉及 Python、JavaScript、Node.js、Ruby
    和 R，但示例故意保持简单，以便理解，同时专注于展示多语言互操作性概念。
- en: '![](img/B16878_Preface_Table_AM.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16878_Preface_Table_AM.jpg)'
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用的是本书的数字版，我们建议您亲自输入代码或通过 GitHub 仓库（下一节中提供链接）访问代码。这样做将帮助您避免与代码复制和粘贴相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Supercharge-Your-Applications-with-GraalVM](https://github.com/PacktPublishing/Supercharge-Your-Applications-with-GraalVM).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 GitHub 下载本书的示例代码文件：[https://github.com/PacktPublishing/Supercharge-Your-Applications-with-GraalVM](https://github.com/PacktPublishing/Supercharge-Your-Applications-with-GraalVM)。如果代码有更新，它将在现有的
    GitHub 仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的书籍和视频目录的代码包，可在 [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)
    上找到。查看它们吧！
- en: Code in Action
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码在行动
- en: Code in Action videos for this book can be viewed at [https://bit.ly/3eM5ewO](https://bit.ly/3eM5ewO).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 代码在行动视频可以在 [https://bit.ly/3eM5ewO](https://bit.ly/3eM5ewO) 上查看。
- en: Download the color images
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781800564909_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781800564909_ColorImages.pdf).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图/图表彩色图像的 PDF 文件。您可以从这里下载：[https://static.packt-cdn.com/downloads/9781800564909_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781800564909_ColorImages.pdf)。
- en: Conventions used
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "In Truffle, it is a Java class derived from `com.oracle.truffle.api.nodes.Node`."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟 URL、用户输入和 Twitter 账号。以下是一个示例：“在
    Truffle 中，它是一个从 `com.oracle.truffle.api.nodes.Node` 派生的 Java 类。”'
- en: 'A block of code is set as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下编写：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select **System info** from the **Administration** panel."'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或您在屏幕上看到的单词。例如，菜单或对话框中的单词在文本中显示如下。以下是一个示例：“从**管理**面板中选择**系统信息**。”'
- en: Tips or important notes
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要注意事项
- en: Appear like this.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 读者反馈始终受欢迎。
- en: '`customercare@packtpub.com`.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`customercare@packtpub.com`。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**：尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，如果您能向我们报告这一点，我们将不胜感激。请访问
    [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)，选择您的书籍，点击勘误表提交表单链接，并输入详细信息。'
- en: '`copyright@packt.com` with a link to the material.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`copyright@packt.com` 与材料链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com)。'
- en: Reviews
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。一旦您阅读并使用了这本书，为何不在您购买它的网站上留下评论呢？潜在读者可以查看并使用您的客观意见来做出购买决定，我们Packt可以了解您对我们产品的看法，我们的作者也可以看到他们对书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于Packt的信息，请访问 [packt.com](http://packt.com)。
