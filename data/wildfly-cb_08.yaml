- en: Chapter 8. Commanding the CLI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 命令行界面（CLI）的使用
- en: 'In this chapter, you will learn the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习以下食谱：
- en: Invoking CLI commands
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用CLI命令
- en: Checking the WildFly version
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查WildFly版本
- en: Checking WildFly operational mode
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查WildFly操作模式
- en: Getting the OS version
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取操作系统版本
- en: Getting the JVM version
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取JVM版本
- en: Checking the JVM options
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查JVM选项
- en: Checking JVM memories – heap-size and all
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查JVM内存 - 堆大小等
- en: Checking the server status
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查服务器状态
- en: Checking the JNDI tree view
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查JNDI树视图
- en: Invoking CLI commands declared in an external file
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用外部文件中声明的CLI命令
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, you will learn how to use the CLI to grab the information that
    you need. The CLI also provides a method to execute commands outside it, by specifying
    the WildFly to connect to and the command to be executed. Furthermore, WildFly
    provides you with an HTTP API, which can be used to perform action and to also
    retrieve information. Most of this API is used to perform system monitoring.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何使用CLI获取您所需的信息。CLI还提供了一个方法来执行它之外的操作，通过指定要连接的WildFly和要执行的操作。此外，WildFly还提供了一个HTTP
    API，可以用来执行操作并检索信息。这个API的大部分用于系统监控。
- en: As WildFly can be run in a standalone or domain mode, whenever it makes sense,
    we will use both modes because you may access the same information differently.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 由于WildFly可以以独立模式或域模式运行，每当有需要时，我们将使用这两种模式，因为您可能以不同的方式访问相同的信息。
- en: Within this chapter, we will simulate/use remote WildFly instances, just like
    the real scenario where you can apply the following recipes to connect to remote
    servers. It does not make sense trying the recipes in `localhost` without seeing
    any authentication and authorization issues.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将模拟/使用远程WildFly实例，就像实际场景中您可以将以下食谱应用于连接到远程服务器一样。在没有看到任何身份验证和授权问题的情况下尝试`localhost`上的食谱是没有意义的。
- en: To simulate a remote server, you can eventually use VirtualBox or Docker and
    then install WildFly as described in the first chapter.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要模拟远程服务器，您最终可以使用VirtualBox或Docker，然后按照第一章中描述的方式安装WildFly。
- en: I'm going to use WildFly running on a Linux container using the Docker tool
    version 1.5\. You can obviously use a real remote server, it would be the same;
    what counts is the WildFly platform being exposed
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用Docker工具版本1.5在Linux容器中运行的WildFly。显然，您可以使用真实的远程服务器，效果是一样的；重要的是WildFly平台是否暴露出来。
- en: By the way, the last chapter of this book is all about running WildFly within
    a Linux container using Docker, so if you are totally new to Docker (where have
    you been hiding?), have a look at the last chapter of this book, or grab a definitely
    excellent Docker book, *The Docker Book*, *James Turnbull* at [http://www.dockerbook.com](http://www.dockerbook.com)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一句，这本书的最后一章是关于使用Docker在Linux容器中运行WildFly的，所以如果您对Docker一无所知（您一直躲在哪里？），请查看这本书的最后一章，或者获取一本绝对优秀的Docker书籍，《Docker
    Book》，作者*James Turnbull*，[http://www.dockerbook.com](http://www.dockerbook.com)
- en: 'So, my Docker configuration says the following:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我的Docker配置如下：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Thus, my remote WildFly instance will be bound to that IP along with the usual
    WildFly ports such as `8080`, `9990` and `9999`. The same management user is the
    one used throughout the book: `wildfly` as username and `cookbook.2015` as password.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我的远程WildFly实例将绑定到该IP，以及WildFly的常用端口，如`8080`、`9990`和`9999`。相同的管理用户是本书中使用的：用户名为`wildfly`，密码为`cookbook.2015`。
- en: Invoking CLI commands
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调用CLI命令
- en: In this recipe, you will learn how to invoke CLI commands directly from your
    command line without accessing the CLI itself, let's say not in an interactive
    way. This technique might be helpful in case you have to script some processes,
    like stopping and starting servers in a sequence, deploying an application only
    if another one has already been deployed, and so on. Often times, you also need
    to monitor some state, thus you just need that number (as typically seen in Nagios).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，您将学习如何直接从您的命令行调用CLI命令，而不需要访问CLI本身，比如说不是以交互式的方式。这种技术在您需要脚本一些过程时可能很有用，比如按顺序停止和启动服务器，只有在另一个应用程序已经部署的情况下才部署应用程序，等等。很多时候，您还需要监控某些状态，因此您只需要那个数字（通常在Nagios中看到的那样）。
- en: Getting ready
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行WildFly，绑定到IP地址`192.168.59.103`。WildFly已经启动并运行。
- en: How to do it…
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'On your local PC, open a new terminal window and run the following commands:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的本地PC上，打开一个新的终端窗口并运行以下命令：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Obviously, you can extract just the information you need by using the `awk`
    command in the output (you can use whichever tool you are comfortable with), as
    follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，你可以通过在输出中使用`awk`命令提取你需要的信息（你可以使用你熟悉的任何工具），如下所示：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In case you are running WildFly in the domain mode, both the invocation and
    the result are the same.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在域模式下运行WildFly，调用和结果都是相同的。
- en: How it works…
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Actually, there is not much to say or explain, just that the `jboss-cli.sh`
    script invokes the `org.jboss.as.cli.CommandLineMain` class of the `wildfly-cli-1.0.0.Beta2.jar`
    library, passing all the arguments. The `--command` basically disables the interactive
    mode, executes the statements, and prints the output in the standard output before
    returning back to the standard input.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，没有太多可说的或解释的，只是`jboss-cli.sh`脚本调用了`wildfly-cli-1.0.0.Beta2.jar`库中的`org.jboss.as.cli.CommandLineMain`类，传递所有参数。`--command`基本上禁用了交互模式，执行语句，并在返回标准输入之前在标准输出中打印输出。
- en: 'What we have done is basically the following:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的基本上是以下操作：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: By the way, you cannot manipulate the output.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，你无法操作输出。
- en: There's more…
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly提供了一个额外的API，即HTTP API。让我们用一些网络命令行工具，如`curl`来尝试一下。
- en: curl
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: curl
- en: 'With a running WildFly instance, perform the following steps:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个运行的WildFly实例上，执行以下步骤：
- en: 'On you local PC, open a new terminal window and execute the following commands:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的本地PC上，打开一个新的终端窗口并执行以下命令：
- en: '[PRE4]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As you can see, `curl` complains about a `Digest` authentication for the `ManagementRealm`,
    which is the one used by WildFly management interfaces.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，`curl`对`ManagementRealm`的`Digest`认证提出了抱怨，这是WildFly管理接口所使用的。
- en: 'Let''s give the username `wildfly` and password `cookbook.2015` to the command,
    as follows:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们把用户名`wildfly`和密码`cookbook.2015`提供给命令，如下所示：
- en: '[PRE5]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Okay, it works; now remove the `--verbose` flag and execute the command again.
    You should get just `Kenny`, after entering the password.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，它工作了；现在移除`--verbose`标志并再次执行命令。你应该在输入密码后只得到`Kenny`。
- en: 'If you do not want to enter the password, you can pass it as an argument as
    well, with all the security concerns this comes with. For this, do as follows:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不想输入密码，你也可以将其作为参数传递，但这伴随着所有的安全担忧。为此，请按照以下操作进行：
- en: '[PRE6]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Checking the WildFly version
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查WildFly版本
- en: In this recipe, you will learn to check the version of WildFly that you are
    running by invoking a command to the CLI.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，你将学习如何通过向CLI调用命令来检查你正在运行的WildFly版本。
- en: Getting ready
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行WildFly，绑定到`192.168.59.103`作为IP。WildFly已经启动并运行。
- en: How to do it…
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'On your local PC, open a new terminal window and execute the following commands:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的本地PC上，打开一个新的终端窗口并执行以下命令：
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Obviously, you can extract just the information you need by using the `awk`
    command in the output (you can use whichever tool you are comfortable with), as
    follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，你可以通过在输出中使用`awk`命令提取你需要的信息（你可以使用你熟悉的任何工具），如下所示：
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In case you are running WildFly in the domain mode, the invocation and result
    would be the same.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在域模式下运行WildFly，调用和结果将是相同的。
- en: How it works…
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Here we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们告诉`jboss-cli.sh`脚本执行我们在`--command`参数中定义的命令，并将结果返回到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CLI，它将是这样的：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: By the way, you cannot manipulate the output.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，你无法操作输出。
- en: There's more…
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly提供了一个额外的API，即HTTP API。让我们用一些网络命令行工具，如`curl`来尝试一下。
- en: curl
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: curl
- en: 'With a running WildFly instance, perform the following steps:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个运行的WildFly实例上，执行以下步骤：
- en: 'Open a new terminal window and run the following commands:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并运行以下命令：
- en: '[PRE10]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As you can see `curl` complains about a Digest authentication for the `ManagementRealm`,
    which is the one used by WildFly management interfaces.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，`curl`对`ManagementRealm`的摘要认证提出了抱怨，这是WildFly管理接口所使用的。
- en: 'Let''s give the username `wildfly` and password `cookbook.2015` to the command,
    as follows:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们把用户名设置为`wildfly`，密码设置为`cookbook.2015`，如下所示：
- en: '[PRE11]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Okay, it works; now remove the `--verbose` flag and execute the command again.
    You should get just `9.0.0.Beta2`, after entering the password.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 好的，它工作了；现在移除`--verbose`标志并再次执行命令。输入密码后，你应该得到`9.0.0.Beta2`。
- en: 'If you do not want to enter the password, you can pass it as an argument as
    well, with all the security concerns this comes with, as follows:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不想输入密码，你也可以将其作为参数传递，但请注意这会带来所有的安全顾虑，如下所示：
- en: '[PRE12]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Checking WildFly operational mode
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查WildFly操作模式
- en: In this recipe, you will learn to check the operational mode that WildFly is
    running with by invoking a command to the CLI.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，你将学习如何通过向CLI发送命令来检查WildFly正在运行的操作模式。
- en: Getting ready
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行WildFly，绑定到IP地址`192.168.59.103`。WildFly已经启动并运行。
- en: How to do it…
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Obviously, you can extract just the information you need using the `awk` command
    in the output (you can use whichever tool you are comfortable with), as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，你可以使用`awk`命令从输出中提取所需的信息（你可以使用你熟悉的任何工具），如下所示：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'In case you are running WildFly in the domain mode, the invocation is the same,
    but the result would be as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在域模式下运行WildFly，调用方式相同，但结果如下：
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: That's it!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: How it works...
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Here we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉`jboss-cli.sh`脚本执行我们在`--command`参数中定义的命令，并将结果输出到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CLI，如下所示：
- en: '[PRE16]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: By the way, you cannot manipulate the output.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，你不能操纵输出。
- en: There's more…
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly提供了一个额外的API，即HTTP API。让我们用一些网络命令行工具，如`curl`来尝试它。
- en: curl
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: curl
- en: 'With a running WildFly instance, perform the following steps:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个运行的WildFly实例中，执行以下步骤：
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE17]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: As you can see, `curl` complains about a Digest authentication for `ManagementRealm`,
    which is the one used by WildFly management interfaces.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，`curl`对`ManagementRealm`的摘要认证提出了抱怨，这是WildFly管理接口所使用的。
- en: 'Let''s give the username and password to the command, as follows:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们把用户名和密码传递给命令，如下所示：
- en: '[PRE18]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Okay, it works; now remove the `--verbose` flag and execute the command again.
    You should get just `STANDALONE`, after entering the password.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，它工作了；现在移除`--verbose`标志并再次执行命令。输入密码后，你应该得到`STANDALONE`。
- en: 'If you do not want to enter the password, you can pass it as an argument as
    well, with all the security concerns this comes with, as follows:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不想输入密码，你也可以将其作为参数传递，但请注意这会带来所有的安全顾虑，如下所示：
- en: '[PRE19]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Getting the OS version
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取操作系统版本
- en: In this recipe, you will learn how to get the OS version that WildFly is running
    on by invoking a command to the CLI.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，你将学习如何通过向CLI发送命令来获取WildFly正在运行的操作系统版本。
- en: Getting ready
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行WildFly，绑定到IP地址`192.168.59.103`。WildFly已经启动并运行。
- en: How to do it…
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Open a new terminal window and run the following commands:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并运行以下命令：
- en: '[PRE20]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Obviously, you can extract just the information you need using the `awk` command
    in the output (you can use whichever tool you are comfortable with), as follows:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，你可以使用输出中的`awk`命令提取所需的信息（你可以使用你熟悉的任何工具），如下所示：
- en: '[PRE21]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In case you are running WildFly in the domain mode, the invocation is done
    as follows:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你在域模式下运行WildFly，调用方式如下：
- en: '[PRE22]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: That's it!
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: How it works…
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Here we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉`jboss-cli.sh`脚本执行我们在`--command`参数中定义的命令，并将结果输出到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CLI，如下所示：
- en: '[PRE23]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: By the way, you cannot manipulate the output.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，你不能操纵输出。
- en: There's more…
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly提供了一个额外的API，即HTTP API。让我们用一些网络命令行工具，如`curl`来尝试它。
- en: curl
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: curl
- en: 'With a running WildFly instance, perform the following steps:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个运行的 WildFly 实例中，执行以下步骤：
- en: 'Open a new terminal window and do as follows:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并按照以下步骤操作：
- en: '[PRE24]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: As you can see, `curl` complains about a Digest authentication for `ManagementRealm`,
    which is the one used by WildFly management interfaces.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，`curl` 对 `ManagementRealm` 的摘要认证提出了抱怨，这是 WildFly 管理接口所使用的。
- en: 'Let''s give the username and password to the command, as follows:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们把用户名和密码提供给命令，如下所示：
- en: '[PRE25]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Okay, it works; now remove the `--verbose` flag and execute the command again.
    You should get just the JSON output after entering the password, as follows:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，它工作了；现在移除 `--verbose` 标志并再次执行命令。你应该在输入密码后只得到以下 JSON 输出：
- en: '[PRE26]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Neat, but pretty ugly!
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 很整洁，但看起来相当丑陋！
- en: 'If you want to prettify the JSON output and you do not want to enter the password
    (you can pass it as an argument as well, with all the security concerns this comes
    with), you can do as follows:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想要美化 JSON 输出并且不想输入密码（你也可以将其作为参数传递，尽管这会带来所有的安全担忧），你可以这样做：
- en: '[PRE27]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: That's the way I like it!
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我喜欢的样子！
- en: Getting the JVM version
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取 JVM 版本
- en: In this recipe, you will learn how to get the JVM WildFly is running with by
    invoking a command to the CLI.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，你将学习如何通过向 CLI 发送命令来获取 WildFly 正在运行的 JVM。
- en: Getting ready
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 记住我正在远程运行 WildFly，绑定到 IP `192.168.59.103`。WildFly 已经启动并运行。
- en: How to do it…
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点……
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE28]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Obviously, you can extract just the information you need by using the `awk`
    command in the output (you can use whichever tool you are comfortable with), as
    follows:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，你可以通过使用输出中的 `awk` 命令（你可以使用你熟悉的任何工具）来提取你需要的信息，如下所示：
- en: '[PRE29]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你是在域模式下运行 WildFly，调用方式如下：
- en: '[PRE30]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: That's it!
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: How it works…
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: Here we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里告诉 `jboss-cli.sh` 脚本执行我们在 `--command` 参数中定义的命令，并将结果返回到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 CLI，它将是这样的：
- en: '[PRE31]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: By the way, you cannot manipulate the output.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，你无法操作输出。
- en: There's more…
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 提供了一个额外的 API，即 HTTP API。让我们用一些网络命令行工具，如 `curl` 来试试。
- en: curl
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: curl
- en: 'With a running WildFly instance, perform the following steps:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个运行的 WildFly 实例中，执行以下步骤：
- en: 'Open a new terminal window and run the following commands:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并运行以下命令：
- en: '[PRE32]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: As you can see, `curl` complains about a Digest authentication for `ManagementRealm`,
    which is the one used by WildFly management interfaces.
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，`curl` 对 `ManagementRealm` 的摘要认证提出了抱怨，这是 WildFly 管理接口所使用的。
- en: 'Let''s give the username and password to the command, as follows:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们把用户名和密码提供给命令，如下所示：
- en: '[PRE33]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Okay, it works; now remove the `--verbose` flag and execute the command again.
    You should get just the output after entering the password, as follows:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，它工作了；现在移除 `--verbose` 标志并再次执行命令。你应该在输入密码后只得到以下输出：
- en: '[PRE34]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'If you do not want to enter the password, you can pass it as an argument as
    well, with all the security concerns this comes with, as follows:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不想输入密码，你也可以将其作为参数传递，尽管这会带来所有的安全担忧，如下所示：
- en: '[PRE35]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: That's the way I like it!
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我喜欢的样子！
- en: More about the runtime type
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多关于运行时类型的信息
- en: 'The `runtime` type that we just used in the preceding steps, provides a lot
    of information that can be very helpful. Here is the complete list of all the
    information you can have in a pretty JSON format:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在前面步骤中使用的 `runtime` 类型提供了很多非常有用的信息。以下是在漂亮的 JSON 格式中你可以拥有的所有信息的完整列表：
- en: '[PRE36]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: As you can see, there is a lot of information, and with the `operation=attribute`
    directive, you can directly grab the attribute that you need. Otherwise use the
    `awk` command.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，有很多信息，并且使用 `operation=attribute` 指令，你可以直接获取你需要的属性。否则使用 `awk` 命令。
- en: Checking the JVM options
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查 JVM 选项
- en: In this recipe, you will learn how to get the JVM options used to run WildFly
    by invoking a command to the CLI.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，你将学习如何通过向 CLI 发送命令来获取运行 WildFly 所使用的 JVM 选项。
- en: Getting ready
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 记住我正在远程运行WildFly，绑定到IP地址`192.168.59.103`。WildFly已经启动并运行。
- en: How to do it…
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE37]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Obviously, you can extract just the information that you need by using the
    `awk` command in the output (you can use whichever tool you are comfortable with),
    as follows:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，您可以使用输出中的`awk`命令提取所需的信息（您可以使用您熟悉的任何工具），如下所示：
- en: '[PRE38]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在域模式下运行WildFly，调用方式如下：
- en: '[PRE39]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: That's it!
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: How it works…
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Here we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们告诉`jboss-cli.sh`脚本来执行我们在`--command`参数中定义的命令，并将结果返回到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CLI，操作如下：
- en: '[PRE40]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Remember, you cannot manipulate the output.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，您不能操作输出。
- en: There's more…
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly提供了一个额外的API，即HTTP API。让我们用一些网络命令行工具，如`curl`来尝试它。
- en: curl
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: curl
- en: 'With a running WildFly instance, perform the following steps:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个运行的WildFly实例中，执行以下步骤：
- en: 'Open a new terminal window and do as follows:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并按照以下步骤操作：
- en: '[PRE41]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: As you can see, `curl` complains about a Digest authentication for the `ManagementRealm`,
    which is the one used by WildFly management interfaces.
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您所见，`curl`对`ManagementRealm`的摘要认证提出了抱怨，这是WildFly管理接口所使用的。
- en: 'Let''s give the username and password to the command, as follows:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们把用户名和密码提供给命令，如下所示：
- en: '[PRE42]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Okay, it works; now remove the `--verbose` flag and execute the command again.
    You should get just the JSON output, after entering the password, as follows:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，它工作了；现在移除`--verbose`标志并再次执行命令。在输入密码后，您应该只得到以下JSON输出，如下所示：
- en: '[PRE43]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Neat, but pretty ugly!
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 很整洁，但看起来很丑！
- en: 'If you want to prettify the JSON output and you do not want to enter the password
    (you can pass it as an argument as well, with all the security concerns this comes
    with), you can do as follows:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想美化JSON输出并且不想输入密码（您也可以将其作为参数传递，尽管这会带来所有的安全问题），您可以这样做：
- en: '[PRE44]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: That's the way I like it!
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我喜欢的样子！
- en: Checking JVM memories – heap-size and all
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查JVM内存 - 堆大小和所有
- en: In this recipe, we will learn how to get the JVM memory information with regard
    to heap-size, non heap-size, metaspace size (PermGen until Java 7), eden, old,
    and survivor, by invoking a command to the CLI. There is a command for each of
    them.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将学习如何通过调用CLI命令来获取JVM内存信息，包括堆大小、非堆大小、元空间大小（Java 7之前的PermGen）、eden、old和survivor区域，如下所示。每个都有对应的命令。
- en: Getting ready
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 记住我正在远程运行WildFly，绑定到IP地址`192.168.59.103`。WildFly已经启动并运行。
- en: How to do it…
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: We will walk through the "`heap`", "`non-heap`", "`metaspace`" (PermGen until
    Java 7), "`eden`", "`old`", and the "`survivor`" area memories, separately.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分别走过"`heap`"、"`non-heap`"、"`metaspace`"（Java 7之前的PermGen）、"`eden`"、"`old`"和"`survivor`"区域内存。
- en: Heap
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 堆
- en: 'For information on heap memory, perform the following steps:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取堆内存信息，请执行以下步骤：
- en: 'Open a new terminal window and do as follows:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并按照以下步骤操作：
- en: '[PRE45]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Obviously, you can extract just the information you need using the `awk` command
    in the output (you can use whichever tool you are comfortable with), as follows:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，您可以使用输出中的`awk`命令提取所需的信息（您可以使用您熟悉的任何工具），如下所示：
- en: '[PRE46]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Tip
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you just need the number, which is a `long` datatype, use `$3` in the `print`
    statement.
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您只需要数字，它是一个`long`数据类型，请在`print`语句中使用`$3`。
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在域模式下运行WildFly，调用方式如下：
- en: '[PRE47]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: That's it!
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: Non-heap
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 非堆
- en: 'For information on non-heap memory, perform the following steps:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取非堆内存信息，请执行以下步骤：
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE48]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Obviously, you can extract just the information you need by using the `awk`
    command in the output (you can use whichever tool you are comfortable with), as
    follows:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，您可以使用输出中的`awk`命令提取所需的信息（您可以使用您熟悉的任何工具），如下所示：
- en: '[PRE49]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在域模式下运行WildFly，调用方式如下：
- en: '[PRE50]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: That's it!
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: Metaspace or PermGen
  id: totrans-230
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Metaspace或PermGen
- en: 'Metaspace is available since Java 1.8, while PermGen was available until Java
    1.7\. For the metaspace memory information, perform the following steps:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: Metaspace自Java 1.8起可用，而PermGen直到Java 1.7可用。对于元空间内存信息，请执行以下步骤：
- en: 'Open a new terminal window and do as follows:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并按照以下步骤操作：
- en: '[PRE51]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Obviously, you can extract just the information you need by using the `awk`
    command in the output (you can use whichever tool you are comfortable with). However,
    in this case, you should better use the `read-attribute` syntax and then use the
    `awk` command for the information you want, as follows:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，您可以通过使用输出中的`awk`命令来提取所需的信息（您可以使用您熟悉的任何工具）。然而，在这种情况下，您最好使用`read-attribute`语法，然后使用`awk`命令提取您想要的信息，如下所示：
- en: '[PRE52]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在域模式下运行WildFly，调用方式如下：
- en: '[PRE53]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: That's it!
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: Eden
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Eden
- en: 'For information on eden memory, perform the following steps:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取eden内存信息，请执行以下步骤：
- en: 'Open a new terminal window and give the following commands:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并输入以下命令：
- en: '[PRE54]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Obviously, you can extract just the information that you need by using the
    `awk` command in the output (you can use whichever tool you are comfortable with).
    However, in this case, you should better use the `read-attribute` syntax and then
    `awk` the information you want, as follows:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，您可以通过使用输出中的`awk`命令来提取所需的信息（您可以使用您熟悉的任何工具）。然而，在这种情况下，您最好使用`read-attribute`语法，然后`awk`您想要的信息，如下所示：
- en: '[PRE55]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在域模式下运行WildFly，调用方式如下：
- en: '[PRE56]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: That's it!
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: Old
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 旧
- en: 'For information regarding old memory, perform the following steps:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取旧内存信息，请执行以下步骤：
- en: 'Open a new terminal window and execute the following:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下操作：
- en: '[PRE57]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Obviously, you can extract just the information you need by using the `awk`
    command in the output (you can use whichever tool you are comfortable with). However,
    in this case, you should better use the `read-attribute` syntax and then `awk`
    the information you want, as follows:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，您可以通过使用输出中的`awk`命令来提取所需的信息（您可以使用您熟悉的任何工具）。然而，在这种情况下，您最好使用`read-attribute`语法，然后`awk`您想要的信息，如下所示：
- en: '[PRE58]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在域模式下运行WildFly，调用方式如下：
- en: '[PRE59]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: That's it!
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: Survivor
  id: totrans-257
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 幸存者
- en: 'For information regarding survivor memory, perform the following steps:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取幸存者内存信息，请执行以下步骤：
- en: 'Open a new terminal window and give the following commands:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并输入以下命令：
- en: '[PRE60]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Obviously, you can extract just the information you need by using the `awk`
    command in the output (you can use whichever tool you are comfortable with). However,
    in this case, you should better use the `read-attribute` syntax and then `awk`
    the information you want, as follows:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，您可以通过使用输出中的`awk`命令来提取所需的信息（您可以使用您熟悉的任何工具）。然而，在这种情况下，您最好使用`read-attribute`语法，然后使用`awk`命令提取您想要的信息，如下所示：
- en: '[PRE61]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在域模式下运行WildFly，调用方式如下：
- en: '[PRE62]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: That's it!
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: How it works…
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: Here we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉`jboss-cli.sh`脚本来执行我们在`--command`参数中定义的命令，并将结果返回到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CLI，它将是这样的：
- en: '[PRE63]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: By the way, you cannot manipulate the output.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，您无法操作输出。
- en: You can try the other memory spaces yourself, by replacing the memory name with
    the one that you are interested in.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以尝试自己替换感兴趣的内存名称，以尝试其他内存空间。
- en: There's more…
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly提供另一个API，即HTTP API。让我们用一些网络命令行工具，如`curl`来尝试它。
- en: Here we will examine just the JVM heap memory, as an example.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们将以JVM堆内存为例进行考察。
- en: Curl
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Curl
- en: 'Perform the following steps using curl:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 使用curl执行以下步骤：
- en: 'With a running WildFly instance, open a new terminal window and execute the
    following commands:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个运行的WildFly实例中，打开一个新的终端窗口并执行以下命令：
- en: '[PRE64]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: As you can see, `curl` complains about a Digest authentication for `ManagementRealm`,
    which is the one used by WildFly management interfaces.
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您所见，`curl`对`ManagementRealm`的摘要认证提出了抱怨，这是WildFly管理接口所使用的。
- en: 'Let''s give the username and password to the command, as follows:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们给命令提供用户名和密码，如下所示：
- en: '[PRE65]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Okay, it works; now remove the `--verbose` flag and execute the command again.
    You should get just the JSON output, after entering the password, as follows:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，它工作了；现在移除`--verbose`标志并再次执行命令。输入密码后，你应该只得到以下JSON输出：
- en: '[PRE66]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Neat, but pretty ugly!
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 很酷，但看起来很丑！
- en: 'If you want to prettify the JSON output and you do not want to enter the password
    (you can pass it as an argument as well, with all the security concerns this comes
    with), you can execute the following commands:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想要美化JSON输出并且不想输入密码（你也可以作为参数传递，但会带来所有的安全顾虑），你可以执行以下命令：
- en: '[PRE67]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: That's the way I like it!
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我喜欢的样子！
- en: Checking the server status
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查服务器状态
- en: In this recipe, we will learn how to check the state of a running WildFly instance,
    by invoking a command to the CLI.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将学习如何通过调用CLI命令来检查运行中的WildFly实例的状态。
- en: Getting ready
  id: totrans-290
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 记住我正在远程运行WildFly，绑定到IP地址`192.168.59.103`。WildFly已经启动并运行。
- en: How to do it…
  id: totrans-292
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Open a new terminal window and execute the following:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE68]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'You can extract just the information you need by using the `awk` command in
    the output (you can use whichever tool you are comfortable with), as follows:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在输出中使用`awk`命令提取所需的信息（你可以使用你熟悉的任何工具），如下所示：
- en: '[PRE69]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你以域模式运行WildFly，调用方式如下：
- en: '[PRE70]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: That's it!
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样了！
- en: How it works…
  id: totrans-300
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Here we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉`jboss-cli.sh`脚本来执行我们在`--command`参数中定义的命令，并将结果输出到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CLI，操作如下：
- en: '[PRE71]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: By the way, you cannot manipulate the output.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，你不能操纵输出。
- en: There's more…
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly提供另一个API，即HTTP API。让我们用一些网络命令行工具，如`curl`来尝试它。
- en: curl
  id: totrans-307
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: curl
- en: 'With a running WildFly instance, perform the following steps:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个运行的WildFly实例中，执行以下步骤：
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE72]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: As you can see, `curl` complains about a Digest authentication for `ManagementRealm`,
    which is the one used by WildFly management interfaces.
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，`curl`对`ManagementRealm`的摘要认证提出了抱怨，这是WildFly管理接口所使用的。
- en: 'Let''s give the username and password to the command, as follows:'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们给命令提供用户名和密码，如下所示：
- en: '[PRE73]'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Okay, it works; now remove the `--verbose` flag and execute the command again.
    You should get just `running`, after entering the password.
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，它工作了；现在移除`--verbose`标志并再次执行命令。输入密码后，你应该只得到`running`。
- en: 'If you do not want to enter the password, you can pass it as an argument as
    well, with all the security concerns this comes with. For this, execute the following:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不想输入密码，你也可以作为参数传递，但会带来所有的安全顾虑。为此，执行以下命令：
- en: '[PRE74]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Checking the JNDI tree view
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查JNDI树视图
- en: In this recipe, we will learn how to get the JNDI tree view of your WildFly
    instances, by invoking a command to the CLI. This might be useful in case you
    need to check whether some application context exits, if you need to know a datasource
    JNDI name, or if you need to lookup for an EJB.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将学习如何通过调用CLI命令来获取你的WildFly实例的JNDI树视图。这可能在你需要检查某些应用程序上下文是否存在、需要知道数据源JNDI名称或需要查找EJB时很有用。
- en: Getting ready
  id: totrans-319
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 记住我正在远程运行WildFly，绑定到IP地址`192.168.59.103`。WildFly已经启动并运行。
- en: How to do it…
  id: totrans-321
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Open a new terminal window and execute the as following:'
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE75]'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Obviously, you can extract just the information you need by using the `awk`
    command in the output (you can use whichever tool you are comfortable with).
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显然，你可以通过在输出中使用`awk`命令提取所需的信息（你可以使用你熟悉的任何工具），如下所示：
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你以域模式运行WildFly，调用方式如下：
- en: '[PRE76]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: That's it!
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样了！
- en: How it works…
  id: totrans-328
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Here we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉`jboss-cli.sh`脚本来执行我们在`--command`参数中定义的命令，并将结果输出到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CLI，操作如下：
- en: '[PRE77]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: The output would be the same as shown in the image of the *How to do it* section
    of this recipe.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将与本食谱中*如何操作*部分的图像显示相同。
- en: Invoking CLI commands declared in an external file
  id: totrans-333
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调用声明在外部文件中的CLI命令
- en: In this recipe, we will learn how to execute commands declared in a separate
    file, using the `jboss-cli.sh` script.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将学习如何使用`jboss-cli.sh`脚本执行在单独文件中声明的命令。
- en: Getting ready
  id: totrans-335
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行WildFly，绑定到IP地址`192.168.59.103`。WildFly已经启动并运行。
- en: Create a file named `wildfly-cookbook.cli`, and insert the listing command `ls`
    into it. Place the file in your local `$WILDFLY_HOME` folder.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`wildfly-cookbook.cli`的文件，并将列表命令`ls`插入其中。将文件放置在你的本地`$WILDFLY_HOME`文件夹中。
- en: Now it's time to invoke our commands through the CLI!
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候通过CLI调用我们的命令了！
- en: How to do it…
  id: totrans-339
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Open a new terminal window and execute the following:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下操作：
- en: '[PRE78]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: How it works…
  id: totrans-342
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Here we are telling the `jboss-cli.sh` script to read the commands defined inside
    the `wildfly-cookbook.2015` file, by the `--file` directive. The CLI reads our
    `wildfly-cookbook.cli` file and executes its commands.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉`jboss-cli.sh`脚本通过`--file`指令读取`wildfly-cookbook.2015`文件内定义的命令。CLI读取我们的`wildfly-cookbook.cli`文件并执行其命令。
- en: Using a file to store the commands needed to configure your WildFly instance
    is very useful to automate configuration.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 使用文件来存储配置你的WildFly实例所需的命令非常有用，可以自动化配置。
- en: Imagine a scenario where you need to scale a system automatically. Suppose you
    have all your applications' source code in a version-control-software repository
    such as `git`, along with the `.cli` configuration files. It would be a piece
    of cake to download your app, build it, configure your WildFly instance using
    the `.cli` files, deploy the app, and start the server!
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一个需要自动扩展系统的场景。假设你的所有应用程序源代码都在版本控制软件仓库中，例如`git`，以及`.cli`配置文件。下载你的应用程序，构建它，使用`.cli`文件配置WildFly实例，部署应用程序，并启动服务器将变得轻而易举！
- en: In the next chapter, we will discuss how to stop and start a server, deploy
    an application using the CLI, and much more.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论如何停止和启动服务器，使用CLI部署应用程序，以及更多内容。
