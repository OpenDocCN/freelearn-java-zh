- en: Additional Reference Material
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附加参考资料
- en: In this appendix, we will cover some reference material that we feel is helpful
    (and largely undocumented) but too comprehensive to insert in the chapters.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本附录中，我们将介绍一些我们认为有帮助（并且大部分未文档化）但内容过于全面而无法插入各章节的参考资料。
- en: Getting started with the JBCP calendar sample code
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用JBCP日历示例代码开始
- en: As we described in [Chapter 1](01.html), *Anatomy of an Unsafe Application*,
    we have assumed, that you have installed a JDK. You can download a JDK from Oracle's
    website [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
    You will need to have JDK 8 installed in order run the code samples. The codebase
    uses many JDK 8 features that are not compatible with JDK 7, and there has not
    been an attempt to sort out various JDK 9 issues with the IDEs as well as project
    dependencies.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[第1章](01.html)中描述的，《一个不安全应用程序的剖析》，我们假设你已经安装了一个JDK。您可以从Oracle的网站[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)下载一个JDK。为了运行代码示例，你需要安装JDK
    8。代码库使用了许多JDK 8的功能，这些功能与JDK 7不兼容，而且没有尝试解决IDE以及项目依赖项的各种JDK 9问题。
- en: Gradle Build Tool
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gradle构建工具
- en: All of the code in this book has been built using the Gradle Build Tool and
    is organized in a chapter-by-chapter multimodule build. You can find instructions
    and options for getting Gradle locally at [https://gradle.org/install/](https://gradle.org/install/).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有代码都是使用Gradle构建工具构建的，并且是按章节组织的多模块构建。您可以在[https://gradle.org/install/](https://gradle.org/install/)找到获取Gradle的说明和选项。
- en: A local installation of Gradle is not required as the root of the source code
    already has the Gradle wrapper installed. The Gradle wrapper can be installed
    in any submodule. You can find additional information about the Gradle wrapper
    at [https://docs.gradle.org/current/userguide/gradle_wrapper.html](https://docs.gradle.org/current/userguide/gradle_wrapper.html).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 由于源代码的根目录已经安装了Gradle包装器，因此不需要本地安装Gradle。Gradle包装器可以在任何子模块中安装。您可以在[https://docs.gradle.org/current/userguide/gradle_wrapper.html](https://docs.gradle.org/current/userguide/gradle_wrapper.html)找到有关Gradle包装器的更多信息。
- en: Downloading the example code
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com/). If you
    purchased this book from elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.packtpub.com](http://www.packtpub.com/)购买的所有Packt书籍的示例代码文件中下载。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: Gradle IDE plugins
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gradle IDE插件
- en: The codebase has been configured with the IntelliJ and Eclipse IDE plugin. This
    means Gradle can create all of the necessary IDE project files instead of manually
    importing the codebase, although you are not forced to use these plugins.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 代码库已经配置了IntelliJ和Eclipse IDE插件。这意味着Gradle可以创建所有必要的IDE项目文件，而不是手动导入代码库，尽管你并非强制使用这些插件。
- en: 'To use these plugins, open a Terminal or Command Prompt window to the root
    of the codebase. To execute the plugin, issue the following command on OSX or
    Linux:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用这些插件，请打开一个终端或命令提示符窗口，切换到代码库的根目录。要在OSX或Linux上执行插件，请发出以下命令：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After running this task, there will be several IDEA project files in each directory,
    as shown in the following screenshot:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此任务后，每个目录中都会有几个IDEA项目文件，如下面的屏幕截图所示：
- en: '![](img/21149c84-cf8c-4540-9b8d-954683eb6745.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/21149c84-cf8c-4540-9b8d-954683eb6745.png)'
- en: 'If you are on a Windows machine, you will issue the following command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是在Windows机器上，您将发出以下命令：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The previous examples execute the `gradlew` script, which is the Gradle wrapper,
    and then give the command for the IDE files to create. IntelliJ project files
    are created with the `idea` task, and STS or any Eclipse-based IDE's project files
    are created with the eclipse task.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的示例执行了`gradlew`脚本，这是Gradle包装器，然后给出了创建IDE文件的命令。IntelliJ项目文件是通过`idea`任务创建的，而STS或任何基于Eclipse的IDE的项目文件是通过eclipse任务创建的。
- en: 'After running the Eclipse task, there will be several Eclipse project files
    and directories in each directory:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 运行Eclipse任务后，每个目录中都会有几个Eclipse项目文件和目录：
- en: '![](img/7321c2a6-98e6-46da-9ffc-45576ad0d922.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7321c2a6-98e6-46da-9ffc-45576ad0d922.png)'
- en: IntelliJ IDEA
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IntelliJ IDEA
- en: Most of the diagrams used in this book were taken from IntelliJ IDEA from Jet
    Brains ([https://www.jetbrains.com/idea/](https://www.jetbrains.com/idea/)). IDEA
    has a wonderful support for multimodule Gradle builds.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用的大多数图表都来自Jet Brains的IntelliJ IDEA ([https://www.jetbrains.com/idea/](https://www.jetbrains.com/idea/)).
    IDEA对多模块Gradle构建提供了很好的支持。
- en: IDEA will allow you to import an existing project, or you can simply open the
    `build.gradle` file from the root of the source code base and IDEA will create
    the necessary project files for you.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: IDEA将允许你导入一个现有项目，或者你可以简单地从源代码基的根目录打开`build.gradle`文件，IDEA将为你创建必要的工作区文件。
- en: 'Once you have created the IDEA project files with the Gradle `idea` task, you
    can import the entire project using the Import Project option, as shown in the
    following screenshot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你使用Gradle `idea`任务创建了IDEA项目文件，你就可以使用以下截图所示的导入项目选项来导入整个项目：
- en: '![](img/16312474-b7e2-489c-bd09-428995160621.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/16312474-b7e2-489c-bd09-428995160621.png)'
- en: 'Then, you will be prompted to select various options for how IDEA will execute
    this Gradle build, as shown in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你将被提示选择各种选项，以确定IDEA如何执行此Gradle构建，如下截图所示：
- en: '![](img/6d274443-1449-4919-a5cb-8b1b498d56e2.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d274443-1449-4919-a5cb-8b1b498d56e2.png)'
- en: A special note for IDEA importing of Gradle projects
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于IDEA导入Gradle项目的一个特别说明
- en: In the previous listing, you will notice that there is an option to use Gradle
    wrapper task configuration, versus the option that was selected, which is to use
    the default Gradle wrapper (recommended) option. The only difference is the use
    of the Gradle wrapper task configuration option, which will create a Gradle wrapper
    instance in each and every project directory. This will be helpful if you want
    to execute build commands on a Terminal or command line and not have to install
    a local version of Gradle. Otherwise, IDEA handles the Gradle wrapper calls for
    all projects.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的列表中，你会注意到有一个使用Gradle包装器任务配置的选项，以及被选中的默认Gradle包装器（推荐）选项。唯一的区别是使用Gradle包装器任务配置选项，这将在每个项目目录中创建一个Gradle包装器实例。如果你想在终端或命令行上执行构建命令，又不想安装Gradle的本地版本，这将很有帮助。否则，IDEA为所有项目处理Gradle包装器调用。
- en: 'Once the project is imported, you will be able to work with any of the chapters,
    and the layout will look as shown in the following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦项目被导入，你将能够使用任何章节进行工作，布局如下截图所示：
- en: '![](img/013498d2-9ff9-44db-a8f7-6d0e3986f23f.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/013498d2-9ff9-44db-a8f7-6d0e3986f23f.png)'
- en: Spring Tool Suite or Eclipse
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Spring Tool Suite或Eclipse
- en: If using STS, we assume that you have access to **Spring Tool Suite** (**STS**)
    3.9.1\. You can download STS from [https://spring.io/tools/sts](https://spring.io/tools/sts).
    STS version 3.9.1 is based on Eclipse Oxygen 1a (4.7.1a) and you can find more
    information about the Oxygen release at [https://www.eclipse.org/ide/](https://www.eclipse.org/ide/).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用STS，我们假设你有访问**Spring Tool Suite** (**STS**) 3.9.1的权限。你可以从[https://spring.io/tools/sts](https://spring.io/tools/sts)下载STS。STS
    3.9.1基于Eclipse Oxygen 1a (4.7.1a)并且你可以在[https://www.eclipse.org/ide/](https://www.eclipse.org/ide/)找到更多关于Oxygen版本的详细信息。
- en: Creating a new workspace
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个新的工作区
- en: 'It is best to create a fresh workspace in order to minimize discrepancies with
    your environment, which can be done by performing the following steps:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最小化与你的环境之间的差异，最好创建一个新的工作区，可以通过执行以下步骤来实现：
- en: 'When you first open STS, it will prompt you for the workspace location. If
    you were previously using STS, you may need to go to File | Switch Workspace |
    Other to create a new workspace. We recommend entering a workspace location that
    does not contain any spaces. For example, take a look at the following screenshot:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你第一次打开STS时，它会提示你输入工作区位置。如果你之前使用过STS，你可能需要去文件|切换工作区|其他来创建一个新的工作区。我们建议输入不包含任何空格的工作区位置。例如，请查看以下截图：
- en: '![](img/ad4963ae-7169-497d-8750-8e53316c152f.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ad4963ae-7169-497d-8750-8e53316c152f.png)'
- en: 'Once you have created a new workspace, you will want to exit the welcome screen
    by clicking on the close button on the Welcome tab, as shown in the following
    screenshot:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你创建了一个新的工作区，你将想要通过点击欢迎标签上的关闭按钮来退出欢迎屏幕，如下截图所示：
- en: '![](img/160e24f4-4bd1-4d7d-bd2c-6459c034a6ab.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/160e24f4-4bd1-4d7d-bd2c-6459c034a6ab.png)'
- en: A sample code structure
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个示例代码结构
- en: The sample code is structured in a `.zip` file and contains folders of a multimodule
    Gradle project. Each folder is named `chapterNN`, where `NN` is the chapter number.
    Each `chapterNN` folder has additional folders containing each milestone project
    with the format `chapterNN.mm-calendar`, where `NN` is the chapter number and
    `mm` is the milestone within that chapter. For simplicity, we recommend that you
    extract the source to a path that does not contain any spaces. Each milestone
    is a checkpoint within the chapter and allows you to easily compare your code
    with the book's code. For example, `chapter02.03-calendar` contains the milestone
    number `03` within [Chapter 2](02.html), *Getting Started with Spring Security*,
    of the calendar application. The location of the preceding project would be `~/jbcpcalendar/chapter02/chapter02.03-calendar`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 示例代码以`.zip`文件的形式组织，包含了一个多模块Gradle项目的文件夹。每个文件夹都命名为`chapterNN`，其中`NN`是章节号。每个`chapterNN`文件夹还包括了包含每个里程碑项目的文件夹，文件夹格式为`chapterNN.mm-calendar`，其中`NN`是章节号，`mm`是该章节内的里程碑。为了简化操作，我们建议您将源代码解压到一个不包含任何空格的路径。每个里程碑都是章节内的检查点，允许您轻松地将自己的代码与书中的代码进行比较。例如，`chapter02.03-calendar`包含了[第二章](02.html)，*Spring
    Security入门*，日历应用程序中的里程碑号`03`。前一个项目的位置将是`~/jbcpcalendar/chapter02/chapter02.03-calendar`。
- en: '[Chapter 1](01.html), *Anatomy of an Unsafe Application*, and [Chapter 2](02.html),
    *Getting Started with Spring Security*, have been created as Spring IO projects,
    not using Spring Boot as a project base. [Chapter 3](03.html), *Custom Authentication*,
    converted the calendar project to a Spring Boot codebase, and in [Chapter 5](05.html),
    *Authentication with Spring Data*, JDBC was replaced with Spring Data as the persistence
    mechanism.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 第一章*一个不安全应用程序的剖析*和第二章*Spring Security入门*作为Spring IO项目创建，没有使用Spring Boot作为项目基础。第三章*自定义认证*将日历项目转换为Spring
    Boot代码库，在第五章*使用Spring Data进行认证*中，JDBC被Spring Data作为持久化机制所替代。
- en: In order to keep each chapter as independent as possible, most chapters in the
    book are built off of [Chapter 9](10.html), *Opening up to OpenID*, or [Chapter
    15](10.html), *Additional Spring Security Features*. This means that, in most
    cases, you can read through [Chapter 9](10.html), *Opening up to OpenID*, and
    then skip around to the other parts of the book. However, this also means that
    it is important to start each chapter with the chapter's milestone `00` source
    code rather than continuing to work on the code from the previous chapter. This
    ensures that your code starts in the same place that the chapter does.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使每个章节尽可能独立，书中的大部分章节都是基于[第九章](10.html)，*开放OpenID*，或[第十五章](10.html)，*额外的Spring
    Security特性*构建的。这意味着在大多数情况下，您可以阅读[第九章](10.html)，*开放OpenID*，然后跳到书的其它部分。然而，这也意味着开始每个章节时，使用章节里程碑`00`的源代码非常重要，而不是继续使用上一章节的代码。这确保了您的代码从章节开始的地方开始。
- en: While you can get through the entire book without performing any of the steps,
    we recommend starting each chapter with milestone `00` and implementing the steps
    in the book. This will ensure that you get the most out of the book. You can use
    the milestone versions to copy large portions of code or to compare your code
    if you run into problems.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然您可以在不执行任何步骤的情况下完成整本书，但我们建议您从每个章节的里程碑`00`开始，并实现书中的步骤。这将确保您能从书中获得最大的收益。您可以使用里程碑版本来复制大量代码，或者在遇到问题时比较您的代码。
- en: Importing the samples
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入示例代码
- en: Before we can import this Gradle project into Eclipse, you must install a Gradle
    plugin from the Eclipse marketplace. There are only two options at the time of
    writing this book. One is the Gradle IDE pack ([http://marketplace.eclipse.org/content/gradle-ide-pack](http://marketplace.eclipse.org/content/gradle-ide-pack)),
    but this project is not being maintained, and if you do install this plugin, Eclipse
    will warn you and suggest that you migrate to the **Buildship Gradle Integration**
    plugin ([http://marketplace.eclipse.org/content/buildship-gradle-integration](http://marketplace.eclipse.org/content/buildship-gradle-integration)).
    Once installed, you will have an option to import an existing Gradle project.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以将这个Gradle项目导入Eclipse之前，您必须在Eclipse市场安装一个Gradle插件。撰写本书时只有两个选项。一个是Gradle
    IDE包([http://marketplace.eclipse.org/content/gradle-ide-pack](http://marketplace.eclipse.org/content/gradle-ide-pack))，但这个项目没有得到维护，如果您安装这个插件，Eclipse会警告您，并建议您迁移到**Buildship
    Gradle集成**插件([http://marketplace.eclipse.org/content/buildship-gradle-integration](http://marketplace.eclipse.org/content/buildship-gradle-integration))。安装后，您将有一个导入现有Gradle项目的选项。
- en: 'Starting with our fresh workspace, perform the following steps:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 从我们全新的工作空间开始，执行以下步骤：
- en: 'Go to File | Import and select Existing Gradle Project, as shown in the following
    screenshot:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击文件|导入，选择现有Gradle项目，如下图所示：
- en: '![](img/4834d188-b45c-4fd4-889c-2e3095d8882e.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4834d188-b45c-4fd4-889c-2e3095d8882e.png)'
- en: 'Click on Next >, as shown in the following screenshot:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击下一步>，如下图所示：
- en: '![](img/7beefcf3-de67-4614-8435-7ee917b2c9e6.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7beefcf3-de67-4614-8435-7ee917b2c9e6.png)'
- en: 'Click on Next > as shown in the following screenshot:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击下一步>，如下图所示：
- en: '![](img/8473e740-aae3-4bfd-81ef-d0598572fcf5.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8473e740-aae3-4bfd-81ef-d0598572fcf5.png)'
- en: Make sure that you keep the defaults unless you want to use a local installation
    of Gradle.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你想使用Gradle的本地安装，否则请确保保持默认设置。
- en: 'Browse to the location you exported the code to and select the parent folder
    of the code. You will see all of the projects listed. You can select the projects
    you are interested in or leave all of the projects selected. If you decide to
    import all of the projects, you can easily focus on the current chapter since
    the naming conventions will ensure that the projects are sorted in the order that
    they are presented in the book:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览您导出代码的位置，并选择代码的父文件夹。您将看到所有项目列表。您可以选择您感兴趣的项目，也可以选择所有项目。如果您决定导入所有项目，您可以轻松地关注当前章节，因为命名约定将确保项目按它们在书中出现的顺序排序：
- en: '![](img/e2aaec89-9f73-4d01-9e6c-c66f2611b161.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e2aaec89-9f73-4d01-9e6c-c66f2611b161.png)'
- en: Click on Finish. All of the selected projects will be imported. If you have
    not used Gradle frequently, it will take a while to download your dependencies.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击完成。所选的所有项目将被导入。如果你不经常使用Gradle，它将需要一点时间来下载你的依赖项。
- en: An internet connection is required to download the dependencies.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 需要连接互联网以下载依赖项。
- en: Updated instructions for running the projects will be found in the `README.md`
    files in each section. This ensures that, as updates are made to STS, the code
    can still be built and run with the latest tools.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 每个部分的`README.md`文件中都可以找到运行项目的更新后的说明。这确保了，即使STS进行更新，代码仍然可以使用最新的工具进行构建和运行。
- en: Running the samples
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行示例
- en: There are a few things that are necessary in order to run the sample applications
    within IDEA or STS. In all of the projects, a Tomcat plugin has been configured
    in Gradle to run the embedded instance to help you get started faster.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在IDEA或STS中运行示例应用程序，需要做一些必要的事情。在所有项目中，Gradle中已经配置了Tomcat插件，以帮助您更快地开始。
- en: Starting the samples within IDEA
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在IDEA中启动示例
- en: Running milestone projects can be done by creating a `Run/Debug Configuration`
    entry for each project.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过为每个项目创建`运行/调试配置`条目来运行里程碑项目。
- en: 'Starting with our fresh workspace, perform the following steps:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 从我们全新的工作空间开始，执行以下步骤：
- en: 'Go to File | Run and select Edit Configurations..., as shown in the following
    screenshot:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击文件|运行，选择编辑配置...，如下图所示：
- en: '![](img/136e0bb4-4691-44dc-9da6-1c1827e08007.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/136e0bb4-4691-44dc-9da6-1c1827e08007.png)'
- en: 'You will be presented with options to add new configurations. Select the plus
    (+) sign in the upper-left corner to choose a new Gradle configuration, as shown
    in the following screenshot:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到添加新配置的选项。在左上角选择加号 (+) 符号来选择一个新的Gradle配置，如下图所示：
- en: '![](img/d3ec0e44-00e3-4504-b832-9b033bbe5c95.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d3ec0e44-00e3-4504-b832-9b033bbe5c95.png)'
- en: 'Now, you can give it a name like `chapter15.00 (bootRun)` and select the actual
    milestone directory for this configuration. Finally, enter `bootRun` under the
    Tasks option to execute, as shown in the following screenshot:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以给它起一个名字，比如`chapter15.00 (bootRun)`，并选择这个配置的实际里程碑目录。最后，在“任务”选项下输入`bootRun`以执行，如下图所示：
- en: '![](img/737ddcdd-54b1-4257-a48f-63f0ae3bfa6d.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/737ddcdd-54b1-4257-a48f-63f0ae3bfa6d.png)'
- en: 'Select the configuration you want to execute; click on the green run button
    or use the *Shift* + *F10* key, as shown in the following screenshot:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要执行的配置；点击绿色的运行按钮，或者使用以下截图中显示的*Shift* + *F10*键：
- en: '![](img/bbcba971-ad6f-4526-b522-1727abb57da1.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bbcba971-ad6f-4526-b522-1727abb57da1.png)'
- en: Gradle tasks
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gradle任务
- en: In [Chapter 1](01.html), *Anatomy of an Unsafe Application*, and [Chapter 2](02.html),
    *Getting Started with Spring Security*, the Gradle task to run the project will
    be *tomcatRun*. For the rest of the chapters in the book, Spring Boot has been
    used, and the Gradle task to start the project will be `bootRun`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](01.html)，*一个不安全应用程序的剖析*，和[第2章](02.html)，*Spring Security入门*中，运行项目的Gradle任务将是*tomcatRun*。本书其余章节中，使用了Spring
    Boot，并且启动项目的Gradle任务将是`bootRun`。
- en: Starting the samples within STS
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在STS中启动示例
- en: 'In STS, a run configuration is also created and the same information needs
    to be included for each milestone project to run, as depicted in the following
    screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在STS中，还会创建一个运行配置，每个里程碑项目都需要包含相同的信息，如下图所示：
- en: '![](img/8a02174d-f990-49ee-bb58-8773adacd329.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a02174d-f990-49ee-bb58-8773adacd329.png)'
- en: Using HTTPS within STS
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在STS中使用HTTPS
- en: Some of the chapters' sample code (that is, [Chapter 8](09.html), *Client Certificate
    Authentication with TLS*, [Chapter 9](10.html), *Opening up to OAuth2*, and [Chapter
    10](11.html), *Single Sign-On with the Central Authentication Service*) requires
    the use of HTTPS in order for the sample code to work.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 书中某些章节示例代码（即[第8章](09.html)，*使用TLS的客户端证书认证*，[第9章](10.html)，*开放到OAuth2*，和[第10章](11.html)，*与中央认证服务单点登录*)需要使用HTTPS，以便示例代码能够工作。
- en: All of the projects have been configured to run HTTPS; most of the configuration
    is managed in properties or YAM files.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 所有项目都已配置为运行HTTPS；大部分配置都在属性文件或YAML文件中管理。
- en: Now, when you run the sample code on the embedded Tomcat server from Gradle,
    you can connect to `http://localhost:8080 or to https://localhost:8443`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当您从Gradle在嵌入式Tomcat服务器上运行示例代码时，您可以连接到`http://localhost:8080`或`https://localhost:8443`。
- en: HTTPS setup in Tomcat
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Tomcat中的HTTPS设置
- en: In this section, we outline how to set up HTTPS in Tomcat to provide TLS to
    our application. All of the included projects are running in an embedded Tomcat
    instance, but we will cover the certificate creation process as well as some tips
    for running these applications in a standalone Tomcat instance.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将概述如何在Tomcat中设置HTTPS，以向我们的应用程序提供TLS。所有包含的项目都在一个内嵌的Tomcat实例中运行，但我们还将介绍证书创建过程以及运行这些应用程序在独立的Tomcat实例中的一些技巧。
- en: Generating a server certificate
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成服务器证书
- en: 'If you do not already have a certificate, you must first generate one. If you
    wish, you can skip this step and use the `tomcat.keystore` file, which contains
    a certificate that is located in the `etc` directory in the book''s sample source.
    Enter the following command lines at the Command Prompt:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有证书，您必须首先生成一个。如果您愿意，可以跳过这一步，并使用位于本书示例源代码中`etc`目录下的`tomcat.keystore`文件。在命令提示符下输入以下命令行：
- en: '[PRE2]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Most of the values are self-explanatory, but you will want to ensure that the
    answer to "What is your first and last name?" is the host that you will be accessing
    your web application from. This is necessary to ensure that the SSL handshake
    will succeed.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数值都是可以自解释的，但您需要确保对“您的名字是什么？”的回答是您将要从哪个主机访问您的网络应用程序。这是确保SSL握手成功的必要条件。
- en: 'You should now have a file in the current directory named `tomcat.keystore`.
    You can view its contents using the following command from within the same directory:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您应该在当前目录下有一个名为`tomcat.keystore`的文件。您可以在同一目录下使用以下命令查看其内容：
- en: '[PRE3]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As you may have guessed, it is insecure to use `changeit` as a password, as
    this is the default password used with many JDK implementations. In a production
    environment, you should use a secure password rather than something as simple
    as `changeit`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能已经猜到的那样，使用`changeit`作为密码是不安全的，因为这是许多JDK实现中使用的默认密码。在生产环境中，您应该使用一个安全的密码，而不是像`changeit`这样简单的东西。
- en: For additional information about the `keytool` command, refer to the documentation
    found on Oracle's website at [https://docs.oracle.com/javase/9/tools/keytool.htm](https://docs.oracle.com/javase/9/tools/keytool.htm).
    If you are having issues, you might also find the *CAS SSL Troubleshooting and
    Reference Guide* helpful ([https://apereo.github.io/cas/5.1.x/installation/Troubleshooting-Guide.html](https://apereo.github.io/cas/5.1.x/installation/Troubleshooting-Guide.html)).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`keytool`命令的额外信息，请参阅在Oracle网站上找到的文档[https://docs.oracle.com/javase/9/tools/keytool.htm](https://docs.oracle.com/javase/9/tools/keytool.htm)。如果您遇到问题，您可能还会发现*CAS
    SSL故障排除和参考指南*很有帮助([https://apereo.github.io/cas/5.1.x/installation/Troubleshooting-Guide.html](https://apereo.github.io/cas/5.1.x/installation/Troubleshooting-Guide.html))。
- en: Configuring Tomcat connector to use SSL
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Tomcat连接器以使用SSL
- en: 'In this section, we will discuss how to configure a Tomcat 8.5 connector to
    SSL by performing the following steps:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何通过执行以下步骤来配置Tomcat 8.5连接器以使用SSL：
- en: Open the `server.xml` file that was included with the download of
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开随下载提供的`server.xml`文件
- en: 'Tomcat 8.5\. You can find this in the `conf` directory of your Tomcat server''s
    home directory. Find the following entry in your `server.xml` file:'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Tomcat 8.5。您可以在Tomcat服务器的主目录的`conf`目录中找到此文件。在您的`server.xml`文件中找到以下条目：
- en: '[PRE4]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Uncomment the connector and modify the value of the `keystoreFile` attribute
    to be the location of the keystore from the previous section. Also, ensure that
    you update the value of the `keystorePass` attribute to be the password used when
    generating the keystore. An example is shown in the following code snippet, but
    ensure that you update the values of both `keystoreFile` and `keystorePass`:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消注释连接器，并将`keystoreFile`属性的值更改为前一部分中keystore的位置。同时，确保更新`keystorePass`属性的值为您生成keystore时使用的密码。以下代码段显示了一个示例，但请确保更新`keystoreFile`和`keystorePass`的两个值：
- en: '[PRE5]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You should now be able to start Tomcat and access it at `https://locahost:8443/`.
    For more information on configuring SSL on Tomcat, refer to the *SSL Configuration
    How-To* at [http://tomcat.apache.org/tomcat-8.5-doc/ssl-howto.html](http://tomcat.apache.org/tomcat-8.5-doc/ssl-howto.html).
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您应该能够启动Tomcat并通过`https://locahost:8443/`访问它。有关在Tomcat上配置SSL的更多信息，请参阅[http://tomcat.apache.org/tomcat-8.5-doc/ssl-howto.html](http://tomcat.apache.org/tomcat-8.5-doc/ssl-howto.html)上的*SSL配置如何操作*。
- en: Basic Tomcat SSL termination guide
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础Tomcat SSL终止指南
- en: This section is intended to help set up Tomcat to use SSL when using an SSL
    termination. The idea is that an external entity, such as a load balancer, manages
    the SSL connection instead of Tomcat. This means that the connection from the
    client (that is, the web browser) to the load balancer is over HTTPS and is secured.
    The connection from the load balancer to Tomcat is over HTTP and insecure. For
    this sort of setup to provide any layer of security, the connection from the load
    balancer to Tomcat should be over a private network.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 本节旨在帮助设置Tomcat以在使用SSL终止时使用SSL。想法是外部实体（例如负载均衡器）管理SSL连接，而不是Tomcat。这意味着客户端（即网页浏览器）到负载均衡器的连接通过HTTPS并且是安全的。负载均衡器到Tomcat的连接通过HTTP并且不安全。为了提供任何安全层次，负载均衡器到Tomcat的连接应该通过私有网络进行。
- en: The problem this setup causes is that Tomcat will now believe that the client
    is using HTTP and thus redirects will be sent as though there is an HTTP connection.
    To get around this, you can modify the configuration to instruct Tomcat that it
    is behind a proxy server.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设置引起的问题是，Tomcat现在会认为客户端使用HTTP，因此会发送重定向，就好像有一个HTTP连接一样。为了解决这个问题，您可以修改配置，指示Tomcat它位于代理服务器后面。
- en: 'The following example is a complete connector that will be used for Tomcat
    deployments that employ client certificate authentication:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例是一个完整的连接器，将用于使用客户端证书验证的Tomcat部署：
- en: '[PRE6]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `server.xml` file can be found at `TOMCAT_HOME/conf/server.xml`. If you
    are interacting with Tomcat using Eclipse or Spring Tool Suite, you will find
    a project named `Servers` that contains the `server.xml` file. For example, if
    you are using Tomcat 8.5, the path in your Eclipse workspace might look similar
    to `/Servers/Tomcat v8.5 Server` at `localhost-config/server.xml`.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`server.xml`文件可以在`TOMCAT_HOME/conf/server.xml`找到。如果您使用Eclipse或Spring Tool Suite与Tomcat交互，您将在包含`server.xml`文件的`Servers`项目中找到它。例如，如果您使用Tomcat
    8.5，则在Eclipse工作区中的路径可能类似于`/Servers/Tomcat v8.5 Server`在`localhost-config/server.xml`。'
- en: Note that there is no reference to a `keystore` because Tomcat does not manage
    the SSL connection. This setup will override the `HttpServletRequest` object to
    believe that the connection is HTTPS so that redirects are performed correctly.
    However, it will continue to accept HTTP connections. If the client can make an
    HTTP connection as well, a separate connector can be created-one that does not
    include the HTTPS setup. The proxy server can then send requests to the appropriate
    connector depending on whether the original request was HTTP or HTTPS.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这里没有提到`keystore`，因为Tomcat不管理SSL连接。这种设置将重写`HttpServletRequest`对象，使其相信连接是HTTPS，从而正确执行重定向。但是，它仍然会接受HTTP连接。如果客户端也可以建立HTTP连接，可以创建一个单独的连接器-一个不包括HTTPS设置的连接器。然后，代理服务器可以根据原始请求是HTTP还是HTTPS，将请求发送到适当的连接器。
- en: For more information, refer to the *Tomcat Proxy How To* documentation at
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参考 *Tomcat Proxy How To* 文档位于
- en: '[http://tomcat.apache.org/tomcat-8.5-doc/proxy-howto.html](http://tomcat.apache.org/tomcat-8.5-doc/proxy-howto.html).
    If you are working with a different application, you can refer to their documentation
    for working with proxy servers.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考 [http://tomcat.apache.org/tomcat-8.5-doc/proxy-howto.html](http://tomcat.apache.org/tomcat-8.5-doc/proxy-howto.html)。如果你正在处理不同的应用程序，你可以参考他们的文档来了解如何与代理服务器一起工作。
- en: 'This section contains a listing of additional resources to technologies and
    concepts that are used throughout the book:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含了一个列出了书中使用的技术和概念的附加资源列表：
- en: '**Java Development Kit Downloads** : Refer to [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    for downloading the JDK.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Java开发工具包下载**：请参考 [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    以下载JDK。'
- en: '**MVC Architecture** : Refer to [https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller)
    .'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MVC架构**：请参考 [https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller)
    。'
- en: '**Spring Security site** : Refer to [https://projects.spring.io/spring-security/](https://projects.spring.io/spring-security/)
    . You can find links to the Spring Security Javadoc, downloads, source code, and
    reference from at this link.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spring Security网站**：请参考 [https://projects.spring.io/spring-security/](https://projects.spring.io/spring-security/)
    。从这个链接中你可以找到Spring Security Javadoc、下载、源代码和参考资料的链接。'
- en: '**Spring Framework:** Refer to [https://projects.spring.io/spring-framework/](https://projects.spring.io/spring-framework/)
    . You can find links to the Spring Framework Javadoc, downloads, source code,
    and reference from this link.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spring Framework:** 请参考 [https://projects.spring.io/spring-framework/](https://projects.spring.io/spring-framework/)
    。从这个链接中你可以找到Spring Framework Javadoc、下载、源代码和参考资料的链接。'
- en: '**Spring Boot:** Refer to [https://projects.spring.io/spring-boot/](https://projects.spring.io/spring-boot/)
    . You can find links to the Spring Boot Javadoc, downloads, source code, and reference
    from this link.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spring Boot:** 请参考 [https://projects.spring.io/spring-boot/](https://projects.spring.io/spring-boot/)。从这个链接中你可以找到Spring
    Boot Javadoc、下载、源代码和参考资料的链接。'
- en: '**Spring Data:** Refer to [https://projects.spring.io/spring-data/](https://projects.spring.io/spring-data/)
    . You can find links to the Spring Data Javadoc, downloads, source code, and reference
    from this link. In this book, we covered three of the sub-projects of Spring-Data,
    including Spring Data Rest ( [https://projects.spring.io/spring-data-rest/](https://projects.spring.io/spring-data-rest/)
    ), Spring Data JPA ( [https://projects.spring.io/spring-data-jpa/](https://projects.spring.io/spring-data-jpa/)
    ), and Spring Data MongoDB ( [https://projects.spring.io/spring-data-mongodb/](https://projects.spring.io/spring-data-mongodb/)
    ).'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spring Data:** 请参考 [https://projects.spring.io/spring-data/](https://projects.spring.io/spring-data/)
    。从这个链接中你可以找到Spring Data Javadoc、下载、源代码和参考资料的链接。在本书中，我们介绍了Spring Data的三个子项目，包括Spring
    Data Rest ( [https://projects.spring.io/spring-data-rest/](https://projects.spring.io/spring-data-rest/)
    )，Spring Data JPA ( [https://projects.spring.io/spring-data-jpa/](https://projects.spring.io/spring-data-jpa/)
    )和Spring Data MongoDB ( [https://projects.spring.io/spring-data-mongodb/](https://projects.spring.io/spring-data-mongodb/)
    )。'
- en: '**Maven:** For more information about Maven, visit their site at [https://maven.apache.org](https://maven.apache.org)
    . For more information about Maven Transitive dependencies, refer to the *Introduction
    to the Dependency Mechanism* documentation at [https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies](https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies)
    .'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Maven:** 有关Maven的更多信息，请访问他们的网站[https://maven.apache.org](https://maven.apache.org)
    。有关Maven传递依赖项的更多信息，请参考《依赖机制简介》文档[https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies](https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies)
    。'
- en: '**Building with Gradle:** Spring Security builds with Gradle ( [https://gradle.org](https://gradle.org)
    ) instead of using Maven. You can refer to the samples, for examples of how to
    build with Gradle at [https://docs.spring.io/spring-security/site/docs/4.2.x/reference/html/sample-apps.html](https://docs.spring.io/spring-security/site/docs/4.2.x/reference/html/sample-apps.html)
    .'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用Gradle构建:** Spring Security使用Gradle（ [https://gradle.org](https://gradle.org)
    ）进行构建，而不是使用Maven。您可以参考[https://docs.spring.io/spring-security/site/docs/4.2.x/reference/html/sample-apps.html](https://docs.spring.io/spring-security/site/docs/4.2.x/reference/html/sample-apps.html)
    中的示例，了解如何使用Gradle进行构建。'
- en: '**Object-relational mapping (ORM):** You can find more general information
    on Wikipedia at [https://en.wikipedia.org/wiki/Object-relational_mapping](https://en.wikipedia.org/wiki/Object-relational_mapping)
    . If you want more hands-on instruction, you may also be interested in the Hibernate
    (a common Java ORM Framework) documentation at [http://www.hibernate.org/](http://www.hibernate.org/)
    .'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对象关系映射（ORM）:** 您可以在维基百科上找到关于对象关系映射的更多一般信息，网址为[https://en.wikipedia.org/wiki/Object-relational_mapping](https://en.wikipedia.org/wiki/Object-relational_mapping)
    。如果您想要更实用的指导，您可能还感兴趣的是Hibernate（一个常见的Java ORM框架）的文档，网址为[http://www.hibernate.org/](http://www.hibernate.org/)
    。'
- en: '**Undertow:** Undertow is a lightweight flexible performant web server written
    in Java, providing both blocking and non-blocking APIs based on NIO. There has
    been some work in the chapters to offer Undertow as an alternative to Tomcat.
    You can find more general information at [http://undertow.io/](http://undertow.io/)
    .'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Undertow:** Undertow是一个用Java编写的轻量级、灵活、高性能的Web服务器，提供基于NIO的阻塞和非阻塞API。在某些章节中，已经进行了相关工作，提供Undertow作为Tomcat的替代品。您可以在[http://undertow.io/](http://undertow.io/)
    找到更多一般信息。'
- en: 'The following are UI technologies:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些UI技术：
- en: '**JSP:** You can find more information about JSPs on Oracle''s site at [https://javaee.github.io/tutorial/overview008.html#BNACM](https://javaee.github.io/tutorial/overview008.html#BNACM)
    .'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JSP:** 您可以在Oracle的网站上找到关于JSPs的更多信息，网址为[https://javaee.github.io/tutorial/overview008.html#BNACM](https://javaee.github.io/tutorial/overview008.html#BNACM)
    。'
- en: '**Thymeleaf:** It is a modern, tempting framework that provides an excellent
    alternative to JSPs. An additional benefit is that it provides support for both
    Spring and Spring Security out of the box. You can find more information about
    Thymeleaf at [http://www.thymeleaf.org](http://www.thymeleaf.org) .'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Thymeleaf:** 它是一个现代且吸引人的框架，为JSPs提供了极佳的选择。额外的好处是它提供了对Spring和Spring Security的即开箱支持。您可以在[http://www.thymeleaf.org](http://www.thymeleaf.org)
    找到更多关于Thymeleaf的信息。'
