- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Designing a User Interface
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计用户界面
- en: In the previous chapter, you implemented authentication and authorization using
    Spring Security; that chapter also included all the example e-commerce app APIs.
    In this chapter, you will develop the frontend of an example e-commerce app using
    the React library. This UI app will then consume the APIs developed in the previous
    chapter, [*Chapter 6*](B19349_06.xhtml#_idTextAnchor148), *Securing REST Endpoints
    Using Authorization and Authentication*. This UI app will be a **single-page application**
    (**SPA**) that consists of interactive components such as *Login*, *Product Listing*,
    *Product Detail*, *Cart*, and *Order Listing*. This chapter will conclude the
    end-to-end development and communication between different layers of an online
    shopping app. By the end of this chapter, you will have learned about SPAs, UI
    component development using React, and consuming the REST APIs using the browser’s
    built-in **Fetch API**.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你使用了Spring Security实现了身份验证和授权；那一章还包含了所有示例电子商务应用的API。在本章中，你将使用React库开发示例电子商务应用的前端。这个UI应用将消费上一章中开发的API，[*第6章*](B19349_06.xhtml#_idTextAnchor148)，*使用授权和身份验证保护REST端点*。这个UI应用将是一个**单页应用**（**SPA**），包括交互式组件，如*登录*、*产品列表*、*产品详情*、*购物车*和*订单列表*。本章将完成在线购物应用不同层之间的端到端开发和通信。到本章结束时，你将了解SPA、使用React进行UI组件开发以及使用浏览器的内置**Fetch
    API**消费REST API。
- en: 'This chapter will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Learning React fundamentals
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习React基础知识
- en: Exploring React components and other features
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索React组件和其他功能
- en: Designing e-commerce app components
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计电子商务应用组件
- en: Consuming APIs using Fetch
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Fetch消费API
- en: Implementing authentication
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现身份验证
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You need the following prerequisites for developing and executing the code:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 开发和执行代码需要以下先决条件：
- en: 'You should be familiar with JavaScript: `data types`, `variables`, `functions`,
    `loops`, and `array` methods such as `map()`, `Promises`, and `async`, and so
    on.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该熟悉JavaScript：`数据类型`、`变量`、`函数`、`循环`以及`数组`方法，例如`map()`、`Promises`和`async`等。
- en: Node.js 18.x with `npm install` `yarn -g`).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js 18.x以及`npm install` `yarn -g`。
- en: '**Visual Studio Code** (**VS Code**): This is a free source code editor. You
    can use any other source code editor of your choice.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio Code**（**VS Code**）：这是一个免费的源代码编辑器。你可以使用任何其他你选择的源代码编辑器。'
- en: React 18 libraries that will be included when you use `create-react-app`.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你使用`create-react-app`时将包含的React 18库。
- en: Let’s get the ball rolling!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: 'Please visit the following link to check the code for this chapter:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 请访问以下链接以检查本章的代码：
- en: '[https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/tree/main/Chapter07](https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/tree/main/Chapter07)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/tree/main/Chapter07](https://github.com/PacktPublishing/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/tree/main/Chapter07)'
- en: Learning React fundamentals
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习React基础知识
- en: React is a declarative library used to build interactive and dynamic UIs, including
    isolated small components. It is also sometimes referred to as a framework because
    it is as capable as and comparable with other JavaScript frameworks such as AngularJS.
    However, React is a library and works with other supported libraries, including
    React Router, React Redux, and so on. You normally use it to develop SPAs, but
    it can also be used to develop full stack applications.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: React是一个用于构建交互式和动态UI的声明式库，包括隔离的小组件。它有时也被称为框架，因为它与其他JavaScript框架（如AngularJS）一样强大且具有可比性。然而，React是一个库，可以与其他支持的库一起使用，包括React
    Router、React Redux等。你通常用它来开发SPA，但它也可以用于开发全栈应用。
- en: React is used to build the view layer of the application per the MVC architecture.
    You can build reusable UI components with their own state. You can use either
    plain JavaScript with HTML or **JavaScript Syntax Extension** (**JSX**) for templating.
    We’ll be using JSX in this chapter, which employs a **virtual Document Object
    Model** (**VDOM**) for dynamic changes and interactions.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: React根据MVC架构用于构建应用视图层。你可以使用它们自己的状态构建可重用的UI组件。你可以使用纯JavaScript和HTML或**JavaScript语法扩展**（**JSX**）进行模板化。我们将在本章中使用JSX，它使用**虚拟文档对象模型**（**VDOM**）进行动态更改和交互。
- en: Let’s create a new React app using the `create-react-app` utility next. This
    utility scaffolds and provides the basic app structure that you’ll use to develop
    the example e-commerce app frontend.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 `create-react-app` 工具创建一个新的 React 应用程序。此工具提供并构建了您将用于开发示例电子商务应用程序前端的基礎应用程序结构。
- en: Creating a React app
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 React 应用程序
- en: You can configure and build a React UI app from scratch. However, as mentioned,
    React provides a `create-react-app` utility that bootstraps and builds a basic
    running app template. You can take it further to build a full-fleshed UI application.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从零开始配置和构建一个 React UI 应用程序。然而，正如所述，React 提供了一个 `create-react-app` 工具，用于引导和构建一个基本的运行应用程序模板。您可以将它进一步扩展以构建一个完整的
    UI 应用程序。
- en: 'Its syntax is shown here:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法如下所示：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: $ npx create-react-app ecomm-uiCreating a new React app in /Users/dev/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/Chapter07/ecomm-ui.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: $ npx create-react-app ecomm-ui在 /Users/dev/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/Chapter07/ecomm-ui
    创建新的 React 应用程序。
- en: Installing packages. This might take a couple of minutes.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 安装软件包。这可能需要几分钟。
- en: Installing react, react-dom, and react-scripts with cra-template...
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 cra-template 安装 react、react-dom 和 react-scripts...
- en: //… stripped output for brevity
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: //… 省略输出以节省空间
- en: added 1418 packages in 50s
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在 50 秒内添加了 1418 个软件包
- en: Success! Created ecomm-ui at /Users/sourabhsharma/dev/pws/java/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/Chapter07/ecomm-ui
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 成功！在 /Users/sourabhsharma/dev/pws/java/Modern-API-Development-with-Spring-6-and-Spring-Boot-3/Chapter07/ecomm-ui
    创建了 ecomm-ui。
- en: //… stripped output for brevity
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: //… 省略输出以节省空间
- en: Inside that directory
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在该目录内
- en: 'We suggest that you begin by typing:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您首先输入：
- en: cd ecomm-ui
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: cd ecomm-ui
- en: npm start
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: npm start
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: $ cd ecomm-ui$ code .
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: $ cd ecomm-ui$ code .
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: $ npm start
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: $ npm start
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: ecomm-ui├── README.md
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: ecomm-ui├── README.md
- en: ├── node_modules
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: ├── node_modules
- en: ├── package.json
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: ├── package.json
- en: ├── package-lock.json
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: ├── package-lock.json
- en: ├── .gitignore
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ├── .gitignore
- en: ├── public
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: ├── public
- en: │ ├── favicon.ico
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: │ ├── favicon.ico
- en: │ ├── index.html
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: │ ├── index.html
- en: │ ├── logo192.png
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: │ ├── logo192.png
- en: │ ├── logo512.png
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: │ ├── logo512.png
- en: │ ├── manifest.json
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: │ ├── manifest.json
- en: │ └── robots.txt
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: │ └── robots.txt
- en: └── src
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: └── src
- en: ├── App.css
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: ├── App.css
- en: ├── App.js
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: ├── App.js
- en: ├── App.test.js
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: ├── App.test.js
- en: ├── index.css
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: ├── index.css
- en: ├── index.js
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: ├── index.js
- en: ├── logo.svg
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: ├── logo.svg
- en: ├── reportWebVitals.js
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: ├── reportWebVitals.js
- en: └── setupTests.js
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: └── setupTests.js
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '"scripts": {    "start": "react-scripts start",'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '"scripts": {    "start": "react-scripts start",'
- en: '"build": "react-scripts build",'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '"build": "react-scripts build",'
- en: '"test": "react-scripts test",'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '"test": "react-scripts test",'
- en: '"eject": "react-scripts eject"'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '"eject": "react-scripts eject"'
- en: '},'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: import React from 'react';import ReactDOM from 'react-dom/client';
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: import React from 'react';import ReactDOM from 'react-dom/client';
- en: import './index.css';
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: import './index.css';
- en: import App from './App';
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: import App from './App';
- en: const root = ReactDOM.createRoot(document.getElementById('root'));
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: const root = ReactDOM.createRoot(document.getElementById('root'));
- en: root.render(
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: root.render(
- en: <React.StrictMode>
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: <React.StrictMode>
- en: <App />
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <App />
- en: </React.StrictMode>
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: </React.StrictMode>
- en: );
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: export default const Header = (props) => {  return (
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: export default const Header = (props) => {  return (
- en: <div>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>{props.title}</h1>
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>{props.title}</h1>
- en: <div>
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: )
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '}'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: export default class Header extends React.Component {  render() {
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: export default class Header extends React.Component {  render() {
- en: return (
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: return (
- en: <div>
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>{this.props.title}</h1>
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>{this.props.title}</h1>
- en: <div>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: )
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '}'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: <Header title="Sample Ecommerce App" />
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: <Header title="Sample Ecommerce App" />
- en: '[PRE9]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: <div className="w-32"> <img className="h-24" src={item?.imageUrl} alt="" />
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="w-32"> <img className="h-24" src={item?.imageUrl} alt="" />
- en: </div>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: <div className="flex flex-col justify-between
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="flex flex-col justify-between
- en: ml-4 flexgrow">
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: ml-4 flexgrow">
- en: <Link to={"/products/" + item.id} className="font-bold
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <Link to={"/products/" + item.id} className="font-bold
- en: text-sm text-indigo-500 hover:text-indigo-700">
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: text-sm text-indigo-500 hover:text-indigo-700">
- en: '{item?.name}'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '{item?.name}'
- en: </Link>
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: </Link>
- en: '<span className="text-xs">Author: {author}</span>'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: <span className="text-xs">作者：{author}</span>
- en: <button className="font-semibold hover:text-red-500
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: <button className="font-semibold hover:text-red-500
- en: text-indigo-500 text-xs text-left"
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: text-indigo-500 text-xs text-left"
- en: onClick={() => removeItem(item.id)}>
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: onClick={() => removeItem(item.id)}>
- en: Remove
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 删除
- en: </button>
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: </button>
- en: </div>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: '[PRE10]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: import {useState} from "react";
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import {useState} from "react";
- en: '[PRE11]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: const [total, setTotal] = useState(0);
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: const [total, setTotal] = useState(0);
- en: '[PRE12]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'import {createContext} from "react";import ReactDOM from "react-dom";const
    LoggedInContext = createContext();const App = () => {  return (    <LoggedInContext.Provider
    isUserLoggedIn=true>      <ProductList/>    <LoggedInContext.Provider/>  );}const
    ProductList = () => { return (   <LoggedInContext.Consumer> { isUserLoggedIn =>    <div>Is
    user logged-in: {isUserLoggedIn}</div>   } <LoggedInContext.Consumer> );}ReactDOM.render(<App/>,document.getElementById("root"));'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'import {createContext} from "react";import ReactDOM from "react-dom";const
    LoggedInContext = createContext();const App = () => {  return (    <LoggedInContext.Provider
    isUserLoggedIn=true>      <ProductList/>    <LoggedInContext.Provider/>  );}const
    ProductList = () => { return (   <LoggedInContext.Consumer> { isUserLoggedIn =>    <div>Is
    user logged-in: {isUserLoggedIn}</div>   } <LoggedInContext.Consumer> );}ReactDOM.render(<App/>,document.getElementById("root"));'
- en: '[PRE13]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: import {createContext, useContext} from "react";import ReactDOM from "react-dom";
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: import {createContext, useContext} from "react";import ReactDOM from "react-dom";
- en: const LoggedInContext = createContext();
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: const LoggedInContext = createContext();
- en: const App = () => {
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: const App = () => {
- en: return (
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: return (
- en: <LoggedInContext.Provider isUserLoggedIn=true>
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: <LoggedInContext.Provider isUserLoggedIn=true>
- en: <ProductList/>
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: <ProductList/>
- en: <LoggedInContext.Provider/>
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: <LoggedInContext.Provider/>
- en: );
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: const ProductList = () => {
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: const ProductList = () => {
- en: const isUserLoggedIn = useContext(LoggedInContext);
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: const isUserLoggedIn = useContext(LoggedInContext);
- en: return (
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: return (
- en: '<div>Is user logged-in: {isUserLoggedIn}</div>'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '<div>Is user logged-in: {isUserLoggedIn}</div>'
- en: );
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: ReactDOM.render(<App/>, document.getElementById("root"));
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: ReactDOM.render(<App/>, document.getElementById("root"));
- en: '[PRE14]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: const [state, dispatch] = useReducer(reducer, initialState);
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: const [state, dispatch] = useReducer(reducer, initialState);
- en: '[PRE15]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: $ npm install -D tailwindcss
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: $ npm install -D tailwindcss
- en: '[PRE16]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '$ npx tailwindcss initCreated Tailwind CSS config file: tailwind.config.js'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '$ npx tailwindcss initCreated Tailwind CSS config file: tailwind.config.js'
- en: '[PRE17]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: /** @type {import('tailwindcss').Config} */module.exports = {
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: /** @type {import('tailwindcss').Config} */module.exports = {
- en: 'content: [],'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 'content: [],'
- en: 'theme: {'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 'theme: {'
- en: 'extend: {},'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 'extend: {},'
- en: '},'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'plugins: [],'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 'plugins: [],'
- en: '}'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE18]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'module.exports = {  content: ["./src/**/*.{js,jsx,ts,tsx}",'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 'module.exports = {  content: ["./src/**/*.{js,jsx,ts,tsx}",'
- en: '"./public/index.html"],'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '"./public/index.html"],'
- en: 'theme: {'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 'theme: {'
- en: 'extend: {},'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 'extend: {},'
- en: '},'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'plugins: [],'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 'plugins: [],'
- en: '}'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE19]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '@tailwind base;@tailwind components;'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '@tailwind base;@tailwind components;'
- en: '@tailwind utilities;'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '@tailwind utilities;'
- en: '[PRE20]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: import React from 'react';import ReactDOM from 'react-dom/client';
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: import React from 'react';import ReactDOM from 'react-dom/client';
- en: import './index.css';
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: import './index.css';
- en: import App from './App';
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: import App from './App';
- en: import reportWebVitals from './reportWebVitals';
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: import reportWebVitals from './reportWebVitals';
- en: const root = ReactDOM.createRoot(document.getElementById('root'));
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: const root = ReactDOM.createRoot(document.getElementById('root'));
- en: // … rest of the code removed for brevity
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: // … rest of the code removed for brevity
- en: '[PRE21]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: const Header = () => {  return (
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: const Header = () => {  return (
- en: <div>
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <header className="p-2 border-b-2
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: <header className="p-2 border-b-2
- en: border-gray-300 bggray-200">
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: border-gray-300 bggray-200">
- en: <h1 className="text-lg font-bold">
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: <h1 className="text-lg font-bold">
- en: Ecommerce App</h1>
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: Ecommerce App</h1>
- en: </header>
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: </header>
- en: </div>
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: );
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '};'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: export default Header;
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: export default Header;
- en: '[PRE22]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: const Footer = () => {  return (
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: const Footer = () => {  return (
- en: <div>
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <footer
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: <footer
- en: className="text-center p-2 border-t-2 bggray-
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: className="text-center p-2 border-t-2 bggray-
- en: 200 border-gray-300 text-sm">
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 200 border-gray-300 text-sm">
- en: No &copy; by Ecommerce App.{" "}
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: No &copy; by Ecommerce App.{" "}
- en: <a href=https://github.com/PacktPublishing/Modern-
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: <a href=https://github.com/PacktPublishing/Modern-
- en: API-Development-with-Spring-and-Spring-Boot>
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: API-Development-with-Spring-and-Spring-Boot>
- en: Modern API development with Spring and
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Modern API development with Spring and
- en: Spring Boot
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Boot
- en: </a>
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: </a>
- en: </footer>
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: </footer>
- en: </div>
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: );
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '};'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: export default Footer;
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: export default Footer;
- en: '[PRE23]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: const Container = () => {  return (
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: const Container = () => {  return (
- en: <div className="flex-grow flex-shrink-0 p-4">
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="flex-grow flex-shrink-0 p-4">
- en: <p>Hello, text/element would appear in container</p>
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: <p>Hello, text/element would appear in container</p>
- en: </div>
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: );
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '};'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: export default Container;
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: export default Container;
- en: '[PRE24]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: import Header from "./components/Header";import Footer from "./components/Footer";
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: import Header from "./components/Header";import Footer from "./components/Footer";
- en: import Container from "./components/Container";
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: import Container from "./components/Container";
- en: function App() {
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: function App() {
- en: return (
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: return (
- en: <div className="flex flex-col min-h-screen h-full">
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="flex flex-col min-h-screen h-full">
- en: <Header />
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: <Header />
- en: <Container />
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: <Container />
- en: <Footer />
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: <Footer />
- en: </div>
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: );
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export default App;
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: export default App;
- en: '[PRE25]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: class Config {  SCHEME = process.env.SCHEME ? process.env.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: class Config {  SCHEME = process.env.SCHEME ? process.env.
- en: 'SCHEME : "http";'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 'SCHEME : "http";'
- en: 'HOST = process.env.HOST ? process.env.HOST : "localhost";'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 'HOST = process.env.HOST ? process.env.HOST : "localhost";'
- en: 'PORT = process.env.PORT ? process.env.PORT : "8080";'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 'PORT = process.env.PORT ? process.env.PORT : "8080";'
- en: CART_URL = `${this.SCHEME}://${this.HOST}:$
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: CART_URL = `${this.SCHEME}://${this.HOST}:$
- en: '{this.PORT}/api/v1/carts`;'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '{this.PORT}/api/v1/carts`;'
- en: // truncated code for brevity
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: // truncated code for brevity
- en: defaultHeaders() {
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: defaultHeaders() {
- en: return {
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: '"Content-Type": "application/json",'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '"Content-Type": "application/json",'
- en: 'Accept: "application/json",'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 'Accept: "application/json",'
- en: '};'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '}'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: …
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: '}'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE26]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: // src/api/Config.jstokenExpired() {
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: tokenExpired() {
- en: const expDate = Number(localStorage.getItem
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: const expDate = Number(localStorage.getItem
- en: (this.EXPIRATION));
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: // src/api/Config.js
- en: if (expDate > Date.now()) {
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: if (expDate > Date.now()) {
- en: return false;
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: return false;
- en: '}'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: return true;
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: return true;
- en: '}'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE27]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: storeAccessToken(token) {  localStorage.setItem(this.ACCESS_TOKEN, `Bearer ${token}`);
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: storeAccessToken(token) {  localStorage.setItem(this.ACCESS_TOKEN, `Bearer ${token}`);
- en: localStorage.setItem(this.EXPIRATION,
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: localStorage.setItem(this.EXPIRATION,
- en: this.getExpiration(token));
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: this.getExpiration(token));
- en: '}'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: getExpiration(token) {
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: getExpiration(token) {
- en: 'let encodedPayload = token ? token.split(".")[1] : null;'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 'let encodedPayload = token ? token.split(".")[1] : null;'
- en: if (encodedPayload) {
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: if (encodedPayload) {
- en: encodedPayload = encodedPayload.replace
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: encodedPayload = encodedPayload.replace
- en: (/-/g, "+").replace(/_/g, "/");
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: (/-/g, "+").replace(/_/g, "/");
- en: const payload = JSON.parse(window.atob
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: const payload = JSON.parse(window.atob
- en: (encodedPayload));
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: (encodedPayload));
- en: 'return payload?.exp ? payload?.exp * 1000 : 0;'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 'return payload?.exp ? payload?.exp * 1000 : 0;'
- en: '}'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: return 0;
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: return 0;
- en: '}'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE28]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: import Config from "./Config";class ProductClient {
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: import Config from "./Config";class ProductClient {
- en: constructor() { this.config = new Config(); }
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: constructor() { this.config = new Config(); }
- en: async fetchList() {
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: async fetchList() {
- en: return fetch(this.config.PRODUCT_URL, {
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: return fetch(this.config.PRODUCT_URL, {
- en: 'method: "GET",'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 'method: "GET",'
- en: 'mode: "cors",'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 'mode: "cors",'
- en: 'headers: { ...this.config.defaultHeaders(),},'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 'headers: { ...this.config.defaultHeaders(),},'
- en: '})'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: .then((res) => Promise.all([res, res.json()]))
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: .then((res) => Promise.all([res, res.json()]))
- en: .then(([res, json]) => {
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: .then(([res, json]) => {
- en: 'if (!res.ok) { return { success: false, error: json };}'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 'if (!res.ok) { return { success: false, error: json }; }'
- en: 'return { success: true, data: json };'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 'return { success: true, data: json };'
- en: '}).catch((e) => {'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '}).catch((e) => {'
- en: return this.handleError(e);
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: return this.handleError(e);
- en: '});'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '}'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: …
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: …
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: '[PRE29]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: async fetch(prodId) {   return fetch(this.config.PRODUCT_URL + "/" + prodId,
    {
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: async fetch(prodId) {   return fetch(this.config.PRODUCT_URL + "/" + prodId,
    {
- en: 'method: "GET",'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: if (auth?.token) fetchCart(auth);
- en: 'mode: "cors",'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 'mode: "cors",'
- en: 'headers: { ...this.config.defaultHeaders(),},'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 'headers: { ...this.config.defaultHeaders(),},'
- en: '})'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: .then((res) => Promise.all([res,  res.json()]))
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: .then((res) => Promise.all([res,  res.json()]))
- en: .then(([res, json]) => {
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: .then(([res, json]) => {
- en: 'if (!res.ok) { return { success: false, error: json }; }'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 'if (!res.ok) { return { success: false, error: json }; }'
- en: 'return { success: true, data: json };'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 'return { success: true, data: json };'
- en: '}).catch((e) => {'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '}).catch((e) => {'
- en: this.handleError(e);
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError(e);
- en: '});'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '}'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: handleError(error) {
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: handleError(error) {
- en: const err = new Map([
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: const err = new Map([
- en: '[TypeError, "Problem fetching the response."],'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '[TypeError, "获取响应时出现问题。"],'
- en: '[SyntaxError, "Problem parsing the response."],'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '[SyntaxError, "解析响应时出现问题。"],'
- en: '[Error, error.message],'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '[Error, error.message],'
- en: ']).get(error.constructor);'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: ']).get(error.constructor);'
- en: return err;
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: return err;
- en: '}'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export default ProductClient;
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: export default ProductClient;
- en: '[PRE30]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: // other importsimport Products from "./Products";
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: // 其他导入import Products from "./Products";
- en: const ProductList = ({ auth }) => {
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: const ProductList = ({ auth }) => {
- en: const [productList, setProductList] = useState();
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: const [productList, setProductList] = useState();
- en: const [noRecMsg, setNoRecMsg] = useState("Loading...");
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: const [noRecMsg, setNoRecMsg] = useState("正在加载...");
- en: const { dispatch } = useCartContext();
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: const { dispatch } = useCartContext();
- en: useEffect(() => {
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: useEffect(() => {
- en: async function fetchProducts() {
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: async function fetchProducts() {
- en: const res = await new ProductClient().fetchList();
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await new ProductClient().fetchList();
- en: if (res && res.success) { setProductList(res.data); }
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) { setProductList(res.data); }
- en: else { setNoRecMsg(res); }
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: else { setNoRecMsg(res); }
- en: '}'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: async function fetchCart(auth) {
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: async function fetchCart(auth) {
- en: const res = await new CartClient(auth).fetch();
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await new CartClient(auth).fetch();
- en: if (res && res.success) {
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) {
- en: dispatch(updateCart(res.data.items));
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: dispatch(updateCart(res.data.items));
- en: if (res.data?.items && res.data.items?.length < 1)
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: if (res.data?.items && res.data.items?.length < 1)
- en: '{'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: setNoRecMsg("Cart is empty.");
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: setNoRecMsg("购物车为空。");
- en: '}'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '} else {'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: setNoRecMsg(res && typeof res === "string"?
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: setNoRecMsg(res && typeof res === "string"?
- en: 'res : res?.error?.message);'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 'res : res?.error?.message);'
- en: '}'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: if (auth?.token) fetchCart(auth);
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: (this.EXPIRATION));
- en: fetchProducts();
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: fetchProducts();
- en: '}, []);'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '}, []);'
- en: // rest of the code …
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: // 代码的其他部分 …
- en: '[PRE31]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: return (   <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: return (   <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
- en: '{productList ? ('
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '{productList ? ('
- en: <div className="flex flex-wrap -mx-1 lg:-mx-4">
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="flex flex-wrap -mx-1 lg:-mx-4">
- en: <Products auth={auth} productList={productList ?
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: <Products auth={auth} productList={productList ?
- en: 'productList : []} />'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 'productList : []} />'
- en: </div>
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: ') : ('
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: ') : ('
- en: <div className="text-lg
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="text-lg
- en: font-semibold">{noRecMsg}</div>
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: font-semibold">{noRecMsg}</div>
- en: )}
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: )}
- en: </div>
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: );
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '};'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: export default ProductList;
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: export default ProductList;
- en: '[PRE32]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: import ProductCard from "./ProductCard";const Products = ({ auth, productList
    }) => {
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 从 "./ProductCard" 导入 ProductCard;const Products = ({ auth, productList }) =>
    {
- en: return ( <> {productList.map((item) => (
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: return ( <> {productList.map((item) => (
- en: <ProductCard key={item.id} product={item} auth={auth} /> ))}
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: <ProductCard key={item.id} product={item} auth={auth} /> )}
- en: </>
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: </>
- en: );
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '};'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: export default Products;
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: export default Products;
- en: '[PRE33]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '{productList.map((item, index) => (  <ProductCard key={index} product={item}
    auth={auth} />))}'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{productList.map((item, index) => (  <ProductCard key={index} product={item}
    auth={auth} />))}'
- en: '[PRE34]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: $ npm install react-router-dom
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: $ npm install react-router-dom
- en: '[PRE35]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: import { useState } from "react";import { Link, useNavigate } from "react-router-dom";
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: import { useState } from "react";import { Link, useNavigate } from "react-router-dom";
- en: import CartClient from "../api/CartClient";
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: import CartClient from "../api/CartClient";
- en: import { updateCart, useCartContext } from "../hooks/CartContext";
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: import { updateCart, useCartContext } from "../hooks/CartContext";
- en: const ProductCard = ({ auth, product }) => {
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: const ProductCard = ({ auth, product }) => {
- en: const navigate = new useNavigate();
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: const navigate = new useNavigate();
- en: const cartClient = new CartClient(auth);
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: const cartClient = new CartClient(auth);
- en: const { cartItems, dispatch } = useCartContext();
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: const { cartItems, dispatch } = useCartContext();
- en: const [msg, setMsg] = new useState("");
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: const [msg, setMsg] = new useState("");
- en: // continue …
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: // continue …
- en: '[PRE36]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: const add = async () => {  const isLoggedIn = checkLogin();
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: const add = async () => {  const isLoggedIn = checkLogin();
- en: if (isLoggedIn && product?.id) {
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: if (isLoggedIn && product?.id) {
- en: const res = await callAddItemApi();
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await callAddItemApi();
- en: if (res && res.success) {
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) {
- en: if (res.data?.length > 0) {
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: if (res.data?.length > 0) {
- en: setMsg("Product added to bag.");
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: setMsg("商品已添加到购物袋。");
- en: dispatch(updateCart(res.data));
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: dispatch(updateCart(res.data));
- en: '}'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '} else { setMsg(res && typeof res === "string" ? res :'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '} else { setMsg(res && typeof res === "string" ? res :'
- en: res.error.message); }
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: res.error.message); }
- en: '}'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const checkLogin = () => {
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: const checkLogin = () => {
- en: if (!auth.token) {
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: if (!auth.token) {
- en: navigate("/login");
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: navigate("/login");
- en: return false;
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: return false;
- en: '}'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: return true;
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: return true;
- en: '};'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const callAddItemApi = async () => {
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: const callAddItemApi = async () => {
- en: const qty = findQty(product.id);
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: const qty = findQty(product.id);
- en: return cartClient.addOrUpdate({
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: return cartClient.addOrUpdate({
- en: 'id: product.id,'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 'id: product.id,'
- en: 'quantity: qty + 1,'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 数量：qty + 1,
- en: 'unitPrice: product.price,'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 单价：product.price,
- en: '});'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '};'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const findQty = (id) => {
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: const findQty = (id) => {
- en: const idx = cartItems.findIndex((i) => i.id === id);
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: const idx = cartItems.findIndex((i) => i.id === id);
- en: if (~idx) { return cartItems[idx].quantity; }
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: if (~idx) { return cartItems[idx].quantity; }
- en: return 0;
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: return 0;
- en: '};'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE37]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: // ProductCard.jsconst buy = async () => {
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: // ProductCard.jsconst buy = async () => {
- en: const isLoggedIn = checkLogin();
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: const isLoggedIn = checkLogin();
- en: if (isLoggedIn && product?.id) {
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: if (isLoggedIn && product?.id) {
- en: const res = await callAddItemApi();
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await callAddItemApi();
- en: if (res && res.success) { navigate("/cart"); }
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) { navigate("/cart"); }
- en: 'else { setMsg(res && typeof res === "string" ? res :'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 'else { setMsg(res && typeof res === "string" ? res :'
- en: res.error.message); }
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: res.error.message); }
- en: '}'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE38]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: return ( <div id={product.id} className="my-1 px-1 w-full…">
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: return ( <div id={product.id} className="my-1 px-1 w-full…">
- en: <figure className="bg-gray-100 rounded-xl p-8 …">
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: <figure className="bg-gray-100 rounded-xl p-8 …">
- en: <img className="w-72 h-72 mx-auto"
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: <img className="w-72 h-72 mx-auto"
- en: src={product.imageUrl}alt={product.name} />
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: src={product.imageUrl}alt={product.name} />
- en: <div className="pt-4 md:p-6 text-center xs:pl-2 …">
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="pt-4 md:p-6 text-center xs:pl-2 …">
- en: <form className="flex-auto">
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: <form className="flex-auto">
- en: <div className="flex flex-wrap items-center …">
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="flex flex-wrap items-center …">
- en: <h1 className="w-full flex-none font-bold mb-2.5 …">
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: <h1 className="w-full flex-none font-bold mb-2.5 …">
- en: <Link to={`/products/${product.id}`}>
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: <Link to={`/products/${product.id}`}>
- en: '{product.name}</Link>'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '{product.name}</Link>'
- en: </h1>
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: </h1>
- en: <div className="text-4xl leading-7 font-bold …">
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="text-4xl leading-7 font-bold …">
- en: '{"$"}'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '{"$"}'
- en: '{product.price.toFixed(2)}'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '{product.price.toFixed(2)}'
- en: </div>
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: <div className="text-sm font-medium text-gray-400 …">
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="text-sm font-medium text-gray-400 …">
- en: In stock
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 库存充足
- en: </div>
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </div>
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: <div className="flex space-x-3 mt-8 mb-4 text-sm …">
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="flex space-x-3 mt-8 mb-4 text-sm …">
- en: <div className="flex-auto flex justify-between">
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="flex-auto flex justify-between">
- en: <button className="w-1/2…"
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: <button className="w-1/2…"
- en: type="button" onClick={buy}>
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: type="button" onClick={buy}>
- en: Buy now
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 立即购买
- en: </button>
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: </button>
- en: <button className="flex…"
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: <button className="flex…"
- en: type="button" onClick={add}>
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: type="button" onClick={add}>
- en: Add to bag
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 加入购物袋
- en: </button>
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: </button>
- en: </div>
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </div>
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: <p className="text-sm text-gray-500 text-left">
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: <p className="text-sm text-gray-500 text-left">
- en: Free shipping on all local orders.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 全部本地订单免运费。
- en: </p>
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: </p>
- en: </form>
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: </form>
- en: </div>
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </figure>
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: </figure>
- en: </div>
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: );
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '};'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: export default ProductCard;
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: export default ProductCard;
- en: '[PRE39]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: import {Link, useParams, useNavigate} from "react-router-dom";import ProductClient
    from "../api/ProductClient";
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: import {Link, useParams, useNavigate} from "react-router-dom";import ProductClient
    from "../api/ProductClient";
- en: // Other imports removed for brevity
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: // 其他导入省略以节省空间
- en: const ProductDetail = ({ auth }) => {
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: const ProductDetail = ({ auth }) => {
- en: const { id } = useParams();
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: const { id } = useParams();
- en: // Other declaration removed for brevity
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: // 其他声明省略以节省空间
- en: // Other functions removed for brevity
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: // 其他函数省略以节省空间
- en: useEffect(() => {
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: useEffect(() => {
- en: async function getProduct(id) {
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: async function getProduct(id) {
- en: const client = new ProductClient();
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: const client = new ProductClient();
- en: const res = await client.fetch(id);
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await client.fetch(id);
- en: if (res && res.success) { setProduct(res.data); }
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) { setProduct(res.data); }
- en: '}'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: async function fetchCart(auth) {
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: async function fetchCart(auth) {
- en: const res = await new CartClient(auth).fetch();
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await new CartClient(auth).fetch();
- en: if (res && res.success) {
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) {
- en: console.log(res.data);
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(res.data);
- en: dispatch(updateCart(res.data.items));
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: dispatch(updateCart(res.data.items));
- en: '}'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: if (auth?.token) fetchCart(auth);
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: if (auth?.token) fetchCart(auth);
- en: getProduct(id);
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: getProduct(id);
- en: '}, [id]);'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '}, [id]);'
- en: return ( /* JSX Template */ );
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: return ( /* JSX 模板 */ );
- en: '};'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: export default ProductDetail;
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: export default ProductDetail;
- en: '[PRE40]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: import { useState } from "react";export default function useToken() {
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: import { useState } from "react";export default function useToken() {
- en: const getToken = () => {
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: const getToken = () => {
- en: const tokenResponse = localStorage.getItem
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: const tokenResponse = localStorage.getItem
- en: ("tokenResponse");
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: ("tokenResponse");
- en: const info = tokenResponse ? JSON.parse
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: const info = tokenResponse ? JSON.parse
- en: '(tokenResponse) : "";'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '(tokenResponse) : "";'
- en: return info;
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: return info;
- en: '};'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const [token, setToken] = useState(getToken());
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: const [token, setToken] = useState(getToken());
- en: const saveToken = (tokenResponse) => {
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: const saveToken = (tokenResponse) => {
- en: localStorage.setItem("tokenResponse", JSON.stringify
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: localStorage.setItem("tokenResponse", JSON.stringify
- en: (tokenResponse));
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: (tokenResponse));
- en: setToken(tokenResponse);
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: setToken(tokenResponse);
- en: '};'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: 'return { setToken: saveToken, token, };'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 'return { setToken: saveToken, token, };'
- en: '}'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE41]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: import { useNavigate } from "react-router-dom";import { useState } from "react";
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: import { useNavigate } from "react-router-dom";import { useState } from "react";
- en: import PropTypes from "prop-types";
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: import PropTypes from "prop-types";
- en: 'Login.propTypes = { auth: PropTypes.object.isRequired, };'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 'Login.propTypes = { auth: PropTypes.object.isRequired, };'
- en: const Login = ({ uri, auth }) => {
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: const Login = ({ uri, auth }) => {
- en: const [username, setUserName] = useState();
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: const [username, setUserName] = useState();
- en: const [password, setPassword] = useState();
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: const [password, setPassword] = useState();
- en: const [errMsg, setErrMsg] = useState();
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: const [errMsg, setErrMsg] = useState();
- en: const navigate = useNavigate();
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: const navigate = useNavigate();
- en: const cancel = () => {
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: const cancel = () => {
- en: const l = navigate.length;
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: const l = navigate.length;
- en: 'l > 2 ? navigate.goBack() : navigate("/");'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 'l > 2 ? navigate.goBack() : navigate("/");'
- en: '};'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const handleSubmit = async € => {
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: const handleSubmit = async € => {
- en: e.preventDefault();
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: e.preventDefault();
- en: const res = await auth.loginUser({ username, password });
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await auth.loginUser({ username, password });
- en: if (res && res.success) {
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) {
- en: setErrMsg(null);
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: setErrMsg(null);
- en: navigate(uri ? uri":""/");
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: navigate(uri ? uri:"/");
- en: '} else { setErrMsg('
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '} else { setErrMsg('
- en: res && typeof res ="= "str"ng" ?
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: res && typeof res == "string" ?
- en: 'res : "Unsuccessful");'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 'res : "Unsuccessful");'
- en: '}'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: return (/* JSX Template */ );
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: return (/* JSX 模板 */ );
- en: '}'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE42]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: import React, { createContext, useReducer, useContext }  from "react";
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: import React, { createContext, useReducer, useContext } from "react";
- en: export const CartContext = createContext();
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: export const CartContext = createContext();
- en: function useCartContext() { return useContext(CartContext); }
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: function useCartContext() { return useContext(CartContext); }
- en: export const UPDATE_CART = "UPDATE_CART";
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: export const UPDATE_CART = "UPDATE_CART";
- en: export const ADD_ITEM = "ADD_ITEM";
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: export const ADD_ITEM = "ADD_ITEM";
- en: export const REMOVE_ITEM = "REMOVE_ITEM";
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: export const REMOVE_ITEM = "REMOVE_ITEM";
- en: export function updateCart(items) {
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: export function updateCart(items) {
- en: 'return { type: UPDATE_CART, items };'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 'return { type: UPDATE_CART, items };'
- en: '}'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export function addItem(item) {
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: export function addItem(item) {
- en: 'return { type: ADD_ITEM, item };'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 'return { type: ADD_ITEM, item };'
- en: '}'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export function removeItem(index) {
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: export function removeItem(index) {
- en: 'return { type: REMOVE_ITEM, index };'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 'return { type: REMOVE_ITEM, index };'
- en: '}'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export function cartReducer(state, action) {
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: export function cartReducer(state, action) {
- en: switch (action.type) {
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: switch (action.type) {
- en: 'case UPDATE_CART:'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 'case UPDATE_CART:'
- en: return [...action?.items];
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: return [...action?.items];
- en: 'case ADD_ITEM:'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 'case ADD_ITEM:'
- en: return [...state, action.item];
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: return [...state, action.item];
- en: 'case REMOVE_ITEM:'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 'case REMOVE_ITEM:'
- en: const list = [...state];
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: const list = [...state];
- en: list.splice(action.index, 1);
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: list.splice(action.index, 1);
- en: return list;
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: return list;
- en: 'default:'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 'default:'
- en: return state;
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: return state;
- en: '}'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: const CartContextProvider = (props) => {
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: const CartContextProvider = (props) => {
- en: const [cartItems, dispatch] = useReducer(cartReducer, []);
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: const [cartItems, dispatch] = useReducer(cartReducer, []);
- en: const cartData = { cartItems, dispatch };
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: const cartData = { cartItems, dispatch };
- en: return <CartContext.Provider value={cartData} {...props} />;
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: return <CartContext.Provider value={cartData} {...props} />;
- en: '};'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: export { CartContextProvider, useCartContext };
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: export { CartContextProvider, useCartContext };
- en: '[PRE43]'
  id: totrans-558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: // other importsimport { removeItem, updateCart, useCartContext }
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: // other importsimport { removeItem, updateCart, useCartContext }
- en: from "../hooks/CartContext";
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: from "../hooks/CartContext";
- en: import CartItem from "./CartItem";
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: import CartItem from "./CartItem";
- en: const Cart = ({ auth }) => {
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: const Cart = ({ auth }) => {
- en: const [grandTotal, setGrandTotal] = useState(0);
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: const [grandTotal, setGrandTotal] = useState(0);
- en: const [noRecMsg, setNoRecMsg] = useState("Loading...");
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: const [noRecMsg, setNoRecMsg] = useState("正在加载...");
- en: const navigate = useNavigate();
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: const navigate = useNavigate();
- en: const cartClient = new CartClient(auth);
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: const cartClient = new CartClient(auth);
- en: const orderClient = new OrderClient(auth);
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: const orderClient = new OrderClient(auth);
- en: const customerClient = new CustomerClient(auth);
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: const customerClient = new CustomerClient(auth);
- en: const { cartItems, dispatch } = useCartContext();
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: const { cartItems, dispatch } = useCartContext();
- en: // continue …
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: // continue …
- en: '[PRE44]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: // continue src/components/Cart.jsconst calTotal = (items) => {
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: // continue src/components/Cart.jsconst calTotal = (items) => {
- en: let total = 0;
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: let total = 0;
- en: items?.forEach((i) => (
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: items?.forEach((i) => (
- en: total = total + i?.unitPrice * i?.quantity));
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: total = total + i?.unitPrice * i?.quantity));
- en: return total.toFixed(2);
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: return total.toFixed(2);
- en: '};'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const increaseQty = async (id) => {
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: const increaseQty = async (id) => {
- en: const idx = cartItems.findIndex((i) => i.id === id);
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: const idx = cartItems.findIndex((i) => i.id === id);
- en: if (~idx) {
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: if (~idx) {
- en: cartItems[idx].quantity = cartItems[idx].quantity + 1;
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: cartItems[idx].quantity = cartItems[idx].quantity + 1;
- en: const res = await cartClient.addOrUpdate
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await cartClient.addOrUpdate
- en: (cartItems[idx]);
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: (cartItems[idx]);
- en: if (res && res.success) {
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) {
- en: refreshCart(res.data);
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: refreshCart(res.data);
- en: if (res.data?.length < 1) { setNoRecMsg
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: if (res.data?.length < 1) { setNoRecMsg
- en: ("Cart empty"); }
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: ("Cart empty"); }
- en: '} else {'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: setNoRecMsg(res && typeof res === "string" ?
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: setNoRecMsg(res && typeof res === "string" ?
- en: 'res : res.error.message);'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 'res : res.error.message);'
- en: '}'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}; // continue …'
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: '}; // continue …'
- en: '[PRE45]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: // continue src/components/Cart.jsconst decreaseQty = async (id) => {
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: // continue src/components/Cart.jsconst decreaseQty = async (id) => {
- en: const idx = cartItems.findIndex((i) => i.id === id);
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: const idx = cartItems.findIndex((i) => i.id === id);
- en: if (~idx && cartItems[idx].quantity <= 1) {
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: if (~idx && cartItems[idx].quantity <= 1) {
- en: return deleteItem(id);
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: return deleteItem(id);
- en: '} else if (cartItems[idx]?.quantity > 1) {'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (cartItems[idx]?.quantity > 1) {'
- en: cartItems[idx].quantity = cartItems[idx].quantity - 1;
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: cartItems[idx].quantity = cartItems[idx].quantity - 1;
- en: const res = await cartClient.addOrUpdate
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await cartClient.addOrUpdate
- en: (cartItems[idx]);
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: (cartItems[idx]);
- en: if (res && res.success) {
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) {
- en: refreshCart(res.data);
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: refreshCart(res.data);
- en: if (res.data?.length < 1) { setNoRecMsg
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: if (res.data?.length < 1) { setNoRecMsg
- en: ("Empty cart"); }
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: ("Empty cart"); }
- en: return;
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: return;
- en: '} else {'
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: setNoRecMsg(res && typeof res === "string" ?
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: setNoRecMsg(res && typeof res === "string" ?
- en: 'res : res?.error?.message);'
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 'res : res?.error?.message);'
- en: '}'
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const deleteItem = async (id) => {
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: const deleteItem = async (id) => {
- en: const idx = cartItems.findIndex((i) => i.id === id);
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: const idx = cartItems.findIndex((i) => i.id === id);
- en: if (~idx) {
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: if (~idx) {
- en: const res = await cartClient.remove(cartItems[idx].id);
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await cartClient.remove(cartItems[idx].id);
- en: if (res && res.success) {
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) {
- en: dispatch(removeItem(idx));
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: dispatch(removeItem(idx));
- en: if (res.data?.length < 1) { setNoRecMsg
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: if (res.data?.length < 1) { setNoRecMsg
- en: ("Item removed");}
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: ("Item removed");}
- en: '} else {'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: setNoRecMsg(
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: setNoRecMsg(
- en: 'res && typeof res === "string" ? res:'
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 'res && typeof res === "string" ? res:'
- en: '"There is an error performing the remove.");'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: '"There is an error performing the remove.");'
- en: '}'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}; // continue …'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: '}; // continue …'
- en: '[PRE46]'
  id: totrans-629
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: // continue src/components/Cart.jsconst refreshCart = (items) => {
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: // continue src/components/Cart.jsconst refreshCart = (items) => {
- en: setGrandTotal(calTotal(items));
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: setGrandTotal(calTotal(items));
- en: dispatch(updateCart(items));
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: dispatch(updateCart(items));
- en: '};'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: useEffect(() => {
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: useEffect(() => {
- en: async function fetch() {
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: async function fetch() {
- en: const res = await cartClient.fetch();
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await cartClient.fetch();
- en: if (res && res.success) {
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) {
- en: refreshCart(res.data.items);
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: refreshCart(res.data.items);
- en: if (res.data?.items && res.data.items?.length < 1) {
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: if (res.data?.items && res.data.items?.length < 1) {
- en: setNoRecMsg("Cart is empty.");
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: setNoRecMsg("Cart is empty.");
- en: '}'
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '} else {'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: setNoRecMsg(res && typeof res === "string" ?
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: setNoRecMsg(res && typeof res === "string" ?
- en: 'res : res.error.message);'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 'res : res.error.message);'
- en: '}'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: fetch();
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: fetch();
- en: '}, []); // continue …'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: '}, []); // continue …'
- en: '[PRE47]'
  id: totrans-649
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: // continue src/components/Cart.js  const checkout = async () => {
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: // continue src/components/Cart.js  const checkout = async () => {
- en: const res = await customerClient.fetch();
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await customerClient.fetch();
- en: if (res && res.success) {
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) {
- en: const payload = {
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: const payload = {
- en: 'address: { id: res.data.addressId },'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: 'address: { id: res.data.addressId },'
- en: 'card: { id: res.data.cardId },'
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: 'card: { id: res.data.cardId },'
- en: '};'
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const orderRes = await orderClient.add(payload);
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: const orderRes = await orderClient.add(payload);
- en: if (orderRes && orderRes.success) {
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: if (orderRes && orderRes.success) {
- en: navigate("/orders");
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: navigate("/orders");
- en: '} else {'
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: setNoRecMsg(orderRes && typeof
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: setNoRecMsg(orderRes && typeof
- en: orderRes === "string"
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: orderRes === "string"
- en: '? orderRes : "Couldn''t process checkout.");'
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: '? orderRes : "Couldn''t process checkout.");'
- en: '}'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '} else {'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: setNoRecMsg(res && typeof res === "string" ?
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: setNoRecMsg(res && typeof res === "string" ?
- en: 'res : "error retreiving customer");'
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: 'res : "error retrieving customer");'
- en: '}'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: return (/* JSX Template */ );
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: return (/* JSX Template */ );
- en: '}'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE48]'
  id: totrans-672
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: // importsconst CartItem=({item, increaseQty, decreaseQty, removeItem }) =>
    {
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: // importsconst CartItem=({item, increaseQty, decreaseQty, removeItem }) =>
    {
- en: 'const d = item ? item.description?.split(".") : [];'
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: 'const d = item ? item.description?.split(".") : [];'
- en: const author = d && des.length > 0 ? d
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: const author = d && des.length > 0 ? d
- en: '[d.length - 1] : "";'
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: '[d.length - 1] : "";'
- en: const [total, setTotal] = useState();
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: const [total, setTotal] = useState();
- en: const calTotal = (item) => {
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: const calTotal = (item) => {
- en: setTotal((item?.unitPrice * item?.quantity)
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: setTotal((item?.unitPrice * item?.quantity)
- en: ?.toFixed(2));
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: ?.toFixed(2));
- en: '};'
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const updateQty = (qty) => {
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: const updateQty = (qty) => {
- en: if (qty === -1) { decreaseQty(item?.id); }
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: if (qty === -1) { decreaseQty(item?.id); }
- en: else if (qty === 1) { increaseQty(item?.id); }
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: else if (qty === 1) { increaseQty(item?.id); }
- en: else { return false; }
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: else { return false; }
- en: calTotal(item);
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: calTotal(item);
- en: '};'
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: useEffect(() => { calTotal(item); }, []);
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: useEffect(() => { calTotal(item); }, []);
- en: return (/* JSX Template */ );
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: return (/* JSX Template */ );
- en: '}'
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE49]'
  id: totrans-691
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: // importsconst Orders = ({ auth }) => {
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: // importsconst Orders = ({ auth }) => {
- en: const [orders, setOrders] = useState([]);
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: const [orders, setOrders] = useState([]);
- en: const formatDate = (dt) => {
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: const formatDate = (dt) => {
- en: return dt && new Date(dt).toLocaleString();
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: return dt && new Date(dt).toLocaleString();
- en: '};'
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: useEffect(() => {
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: useEffect(() => {
- en: async function fetchOrders() {
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: async function fetchOrders() {
- en: const client = new OrderClient(auth);
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: const client = new OrderClient(auth);
- en: const res = await client.fetch();
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: const res = await client.fetch();
- en: if (res && res.success) { setOrders(res.data); }
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: if (res && res.success) { setOrders(res.data); }
- en: '}'
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: fetchOrders();
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: fetchOrders();
- en: '}, []);'
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: '}, []);'
- en: return (/* JSX Template */ );
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: return (/* JSX Template */ );
- en: '}'
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE50]'
  id: totrans-707
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: import { BrowserRouter as Router, Route, Routes }   from "react-router-dom";
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: import { BrowserRouter as Router, Route, Routes }   from "react-router-dom";
- en: // other imports
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: // other imports
- en: function App() {
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: function App() {
- en: const { token, setToken } = useToken();
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: const { token, setToken } = useToken();
- en: const auth = new Auth(token, setToken);
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: const auth = new Auth(token, setToken);
- en: const LoginComponent = (props) => (
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: const LoginComponent = (props) => (
- en: <Login {...props} uri="/login" auth={auth} />
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: <Login {...props} uri="/login" auth={auth} />
- en: );
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: const ProductListComponent = (props) =>
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: const ProductListComponent = (props) =>
- en: <ProductList auth={auth} />;
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: <ProductList auth={auth} />;
- en: // continue …
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: // continue …
- en: '[PRE51]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: // App.js continuereturn (
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: // App.js continuereturn (
- en: <div className="flex flex-col min-h-screen h-full ">
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="flex flex-col min-h-screen h-full ">
- en: <Router>
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: <Router>
- en: <Header userInfo={token} auth={auth} />
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: <Header userInfo={token} auth={auth} />
- en: <div className="flex-grow flex-shrink-0 p-4">
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: <div className="flex-grow flex-shrink-0 p-4">
- en: <CartContextProvider>
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: <CartContextProvider>
- en: <Routes>
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: <Routes>
- en: <Route path="/" exact
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: <Route path="/" exact
- en: element={<ProductListComponent />} />
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: element={<ProductListComponent />} />
- en: <Route
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: <Route
- en: path="/login"
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: path="/login"
- en: 'element={token ? <ProductListComponent /> :'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: 'element={token ? <ProductListComponent /> :'
- en: <LoginComponent />} />
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: <LoginComponent />} />
- en: <Route
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: <Route
- en: path="/cart"
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: path="/cart"
- en: 'element={token ? <Cart auth={auth} /> :'
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: 'element={token ? <Cart auth={auth} /> :'
- en: <LoginComponent />} />
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: <LoginComponent />} />
- en: <Route
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: <Route
- en: path="/orders"
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: path="/orders"
- en: 'element={token ? <Orders auth={auth} /> :'
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: 'element={token ? <Orders auth={auth} /> :'
- en: <LoginComponent />} />
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: <LoginComponent />} />
- en: <Route
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: <Route
- en: path="/products/:id"
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: path="/products/:id"
- en: element={<ProductDetail auth={auth} />} />
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: element={<ProductDetail auth={auth} />} />
- en: <Route path="*" exact element={<NotFound />} />
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: <Route path="*" exact element={<NotFound />} />
- en: </Routes>
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: </Routes>
- en: </CartContextProvider>
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: </CartContextProvider>
- en: </div>
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: <Footer />
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: <Footer />
- en: </Router>
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: </Router>
- en: </div>
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: );
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export default App;
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: export default App;
- en: '[PRE52]'
  id: totrans-754
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: $ java -jar build/libs/Chapter06-0.0.1-SNAPSHOT.jar.
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: $ java -jar build/libs/Chapter06-0.0.1-SNAPSHOT.jar.
- en: '[PRE53]'
  id: totrans-756
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: $ yarn start
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: $ yarn start
- en: '[PRE54]'
  id: totrans-758
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
