- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: About
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于
- en: This section briefly introduces the coverage of this book, the technical skills
    you'll need to get started, and the software requirements required to complete
    all of the included activities and exercises.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节简要介绍了本书的涵盖范围，你开始学习所需的技术技能，以及完成所有包含的活动和练习所需的软件要求。
- en: About the Book
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于本书
- en: You already know you want to learn Clojure, and a smart way to learn Clojure
    is to learn by doing. *The Clojure Workshop* focuses on building up your practical
    skills so that you can write clean, expressive code with a language that is great
    for applications where concurrency and interoperability with the Java Virtual
    Machine are a priority. You'll learn from real examples that lead to real results.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经知道你想要学习 Clojure，而一种聪明的学习 Clojure 的方法是通过实践来学习。*Clojure Workshop* 专注于建立你的实际技能，这样你就可以用一种非常适合并发和与
    Java 虚拟机互操作性的语言编写干净、表达力强的代码。你将从真实示例中学习，这些示例将带来真实的结果。
- en: Throughout *The Clojure Workshop*, you'll take an engaging step-by-step approach
    to understanding Clojure. You won't have to sit through any unnecessary theory.
    If you're short on time, you can jump into a single exercise each day or spend
    an entire weekend learning about Clojure web development with Ring. It's your
    choice. Learning on your terms, you'll build up and reinforce key skills in a
    way that feels rewarding.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在整个 *Clojure Workshop* 过程中，你将采取引人入胜的逐步方法来理解 Clojure。你不必忍受任何不必要的理论。如果你时间紧迫，你可以每天跳入一个单独的练习，或者花一个周末的时间学习
    Clojure 网络开发与 Ring。由你选择。按照你的方式学习，你将建立起并加强关键技能，这种方式会让人感到很有成就感。
- en: Every physical print copy of *The Clojure Workshop* unlocks access to the interactive
    edition. With videos detailing all exercises and activities, you'll always have
    a guided solution. You can also benchmark yourself against assessments, track
    progress, and receive content updates. You'll even earn a secure credential that
    you can share and verify online upon completion. It's a premium learning experience
    that's included with your print copy. To redeem it, follow the instructions located
    at the start of your Clojure book.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 每一本 *Clojure Workshop* 的实体印刷版都能解锁访问互动版。通过视频详细说明所有练习和活动，你将始终有一个指导性的解决方案。你还可以通过评估来衡量自己，跟踪进度，并接收内容更新。完成学习后，你甚至可以在线分享和验证一个安全的凭证。这是一项包含在印刷版中的高级学习体验。要兑换它，请遵循位于
    Clojure 书籍开头的说明。
- en: Fast-paced and direct, *The Clojure Workshop* is ideal for Clojure beginners.
    You'll build and iterate on your code like a software developer, learning along
    the way. This process means that you'll find that your new skills stick, embedded
    as best practice – a solid foundation for the years ahead.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 快速直接，*Clojure Workshop* 是 Clojure 初学者的理想选择。你将像软件开发者一样构建和迭代代码，在学习过程中不断进步。这个过程意味着你会发现你的新技能会持续存在，作为最佳实践的一部分——为未来的几年打下坚实的基础。
- en: Audience
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 受众
- en: '*The Clojure Workshop* is an ideal tutorial for the Clojure beginner who is
    just getting started. A basic understanding of JavaScript and Java would be ideal
    but not necessary. *The Clojure Workshop* will guide you well throughout the discussion
    on the interoperability of these technologies.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*Clojure Workshop* 是 Clojure 初学者的理想教程。对 JavaScript 和 Java 有基本的了解会很理想，但并非必需。*Clojure
    Workshop* 将很好地引导你讨论这些技术的互操作性。'
- en: About the Chapters
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于章节
- en: '*Chapter 1*, *Hello REPL!*, gets you typing code immediately. You''ll learn
    the basics of the language, as well as how to get the most out of Clojure''s interactive
    REPL.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*第一章*，*Hello REPL!*，让你立即开始编写代码。你将学习语言的基础，以及如何充分利用 Clojure 的交互式 REPL。'
- en: '*Chapter 2*, *Data Types and Immutability*, provides more building blocks,
    but these are Clojure building blocks that expose you to one of Clojure''s key
    features: immutability.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*第二章*，*数据类型和不可变性*，提供了更多的构建块，但这些是 Clojure 的构建块，它们让你接触到 Clojure 的一个关键特性：不可变性。'
- en: '*Chapter 3*, *Functions in Depth*, is a deeper dive into one of the areas that
    sets Clojure apart: the functional programming paradigm. These are the tools that
    will power you through the rest of the book.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*第三章*，*深入函数*，深入探讨了 Clojure 区别于其他语言的一个领域：函数式编程范式。这些工具将帮助你完成本书的其余部分。'
- en: '*Chapter 4*, *Mapping and Filtering*, is the first stop on your exploration
    of Clojure collections. The patterns and techniques here are all about learning
    to solve problems. The map and filter functions are two of the foremost Clojure
    workhorses.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*第四章*，*映射和过滤*，是你探索Clojure集合的第一站。这里的所有模式和技巧都是关于学习如何解决问题的。map和filter函数是Clojure最出色的工具之一。'
- en: '*Chapter 5*, *Many to One: Reducing*, will really start getting you thinking
    in new ways. The data-shaping techniques in this chapter complement those in the
    previous chapter.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*第五章*，*多对一：减少*，将真正开始让你以新的方式思考。本章中的数据塑形技术补充了上一章的内容。'
- en: '*Chapter 6*, *Recursion and Looping*, takes your collection techniques to the
    next level. This chapter will make you think. By the end of the chapter, you''ll
    be ready to handle tricky problems using advanced functional patterns.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*第六章*，*递归和循环*，将你的集合技术提升到下一个层次。本章将让你思考。到本章结束时，你将准备好使用高级函数式模式处理棘手的问题。'
- en: '*Chapter 7*, *Recursion II: Lazy Sequences*, completes the panorama of Clojure
    collections with a look at a distinctive Clojure feature. If you can write functions
    to process complex tree structures, you are ready to use Clojure to solve big
    problems.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*第七章*，*递归II：惰性序列*，通过查看Clojure的一个独特特性，完成了Clojure集合的全景。如果你能够编写处理复杂树结构的函数，你就准备好使用Clojure来解决大问题了。'
- en: '*Chapter 8*, *Namespaces, Libraries, and Leiningen*, provides a close look
    at the tools you need for building real-world Clojure and ClojureScript applications.
    You have the skills to write good Clojure code; now you need to know how to put
    your application together.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*第八章*，*命名空间、库和Leiningen*，提供了构建真实世界Clojure和ClojureScript应用程序所需工具的详细分析。你已经拥有了编写良好Clojure代码的技能；现在你需要了解如何组装你的应用程序。'
- en: '*Chapter 9*, *Host Platform Interoperability with Java and JavaScript*, brings
    you up to speed on a topic that is one of Clojure''s great strengths but can also
    be daunting. As a hosted language, Clojure gives you access to the underlying
    platform. Knowing how and when to use that power is a key Clojure skill.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*第九章*，*Java和JavaScript与宿主平台互操作性*，让你了解Clojure的强大优势之一，但同时也可能令人望而生畏。作为一个托管语言，Clojure让你能够访问底层平台。了解何时以及如何使用这种力量是Clojure的关键技能。'
- en: '*Chapter 10*, *Testing*, is another important step in serious, real-world programming.
    Understanding Clojure and ClojureScript testing stories is a skill every professional
    programmer needs.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*第十章*，*测试*，是严肃、真实世界编程的重要一步。理解Clojure和ClojureScript测试故事是每位专业程序员都需要掌握的技能。'
- en: '*Chapter 11*, *Macros*, will help you understand a distinctive feature of the
    Lisp family of languages. Macros allow rich abstraction, but underneath the surface,
    there are a lot of important practical details.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*第十一章*，*宏*，将帮助你理解Lisp语言家族的一个独特特性。宏允许丰富的抽象，但在表面之下，有许多重要的实用细节。'
- en: '*Chapter 12*, *Concurrency*, reveals another unique Clojure strength. This
    chapter will give you a taste for building multithreaded applications on the Java
    Virtual Machine or event-driven ClojureScript single-page applications.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*第十二章*，*并发*，揭示了Clojure的另一个独特优势。本章将让你体验在Java虚拟机或事件驱动的ClojureScript单页应用程序上构建多线程应用程序。'
- en: '*Chapter 13*, *Database Interaction and the Application Layer*, shows you how
    to leverage Clojure''s database libraries. Many real applications require databases,
    so these skills are essential.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*第十三章*，*数据库交互和应用层*，展示了如何利用Clojure的数据库库。许多实际应用都需要数据库，因此这些技能是必不可少的。'
- en: '*Chapter 14*, *HTTP with Ring*, shows you how to set up and run a Clojure-driven
    web server. The Ring libraries are the most widely used HTTP technology in the
    Clojure world.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*第十四章*，*使用Ring的HTTP*，展示了如何设置和运行一个由Clojure驱动的网络服务器。Ring库是Clojure世界中应用最广泛的HTTP技术。'
- en: '*Chapter 15*, *The Frontend: A ClojureScript UI*, helps put together many of
    the things you''ve already learned about ClojureScript, the last layer on a Clojure
    web stack.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*第十五章*，*前端：ClojureScript UI*，帮助你整理你已经学到的关于ClojureScript的许多知识，这是Clojure网络堆栈的最后一层。'
- en: Conventions
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 习惯用法
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "Please
    note that this function is in the `clojure.string` namespace, which is not referred
    to by default."'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称如下所示：“请注意，此函数位于`clojure.string`命名空间中，默认情况下并未引用。”
- en: 'Words that you see on the screen, for example, in menus or dialog boxes, also
    appear in the text like this: "When you click on the `Fetch Images` button, the
    images appear with authors'' names."'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你在屏幕上看到的单词，例如在菜单或对话框中，也会以如下方式出现在文本中：“当你点击`获取图片`按钮时，图片会显示作者的名字。”
- en: 'A block of code is set as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In cases where inputting and executing some code gives an immediate output,
    this is shown as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在输入和执行一些代码给出即时输出的情况下，这会以如下方式显示：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the example above, the code entered is `(sort [3 7 5 1 9])`, and the output
    is `(1 3 5 7 9)`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，输入的代码是`(sort [3 7 5 1 9])`，输出是`(1 3 5 7 9)`。
- en: 'New terms and important words are shown like this: "Welcome to the Clojure
    **Read Eval Print Loop** (**REPL**), a command-line interface that we can use
    to interact with a running Clojure program."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 新术语和重要词汇会以如下方式显示：“欢迎使用Clojure **读取求值打印循环**（**REPL**），这是一个我们可以用来与运行的Clojure程序交互的命令行界面。”
- en: 'Key parts of code snippets are highlighted as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段的关键部分会以如下方式突出显示：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Long code snippets are truncated and the corresponding names of the code files
    on GitHub are placed at the top of the truncated code. The permalinks to the entire
    code are placed below the code snippet. It should look as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 长代码片段将被截断，并在截断代码的顶部放置GitHub上相应代码文件的名称。整个代码的永久链接放置在代码片段下方。它应该看起来如下：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Before You Begin
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在开始之前
- en: Each great journey begins with a humble step. Our upcoming adventure in the
    land of Clojure is no exception. Before we can do awesome things with data, we
    need to be prepared with a productive environment. In this section, we will see
    how to do that.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 每一段伟大的旅程都是从一小步开始的。我们即将在Clojure领域的冒险也不例外。在我们能够用数据做些酷的事情之前，我们需要准备好一个高效的环境。在本节中，我们将看到如何做到这一点。
- en: Installing Java
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Java
- en: 'Before installing Clojure, you need to make sure that you have the **Java Developer''s
    Kit** (**JDK**) installed on your computer. For Mac and Linux users, prebuilt
    binaries are a few keystrokes away. On Mac, for Homebrew users, you can just type:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装Clojure之前，你需要确保你的计算机上已安装了**Java开发者工具包**（**JDK**）。对于Mac和Linux用户，预构建的二进制文件只需几步即可。在Mac上，对于Homebrew用户，你只需输入：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'On Debian-based Linux distributions, you can check which version is available
    by typing the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于Debian的Linux发行版上，你可以通过输入以下内容来检查哪个版本可用：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Depending on the output, you can then type something like:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 根据输出结果，你可以输入类似以下的内容：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Clojure does not require a particularly recent version of the JDK.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Clojure不需要特别新的JDK版本。
- en: 'For Windows, you can download the OpenJDK installer here: [https://packt.live/3aBu1Qg](https://packt.live/3aBu1Qg).
    Once you have the installer, click on it to run, then follow the instructions.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows用户，你可以从这里下载OpenJDK安装程序：[https://packt.live/3aBu1Qg](https://packt.live/3aBu1Qg)。一旦你有了安装程序，点击它以运行，然后按照说明操作。
- en: Installing Clojure
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Clojure
- en: Once you have a working JDK on your system, setting up Clojure is easy with
    the Leiningen tool.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在你的系统上安装了有效的JDK，使用Leiningen工具设置Clojure就变得简单了。
- en: 'Copy the appropriate version (Windows or Mac/Linux) from the Leiningen home
    page, here: [https://leiningen.org/](https://leiningen.org/).'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Leiningen主页复制适当的版本（Windows或Mac/Linux），这里：[https://leiningen.org/](https://leiningen.org/)。
- en: Place Leiningen in a directory that is part of your system's `$PATH` and make
    it executable.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Leiningen放置在系统`$PATH`的一部分目录中，并使其可执行。
- en: 'On Mac or Linux, this means putting it in a directory such as `~/bin` and calling
    `chmod`:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Mac或Linux上，这意味着将其放在如`~/bin`这样的目录中，并调用`chmod`：
- en: '[PRE7]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'On Windows, to change the `$PATH` variable, go to `Control Panel` > `User Accounts`
    > `User Accounts` and click on `Change My Environment Variables`. In the pane
    showing the user variables for your personal user account, click on `Path` and
    then choose `Edit`.![Figure 0.1: User accounts'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows上，要更改`$PATH`变量，请转到`控制面板` > `用户账户` > `用户账户`，然后点击`更改我的环境变量`。在显示你个人用户账户的用户变量的面板中，点击`Path`，然后选择`编辑`。![图0.1：用户账户
- en: '](img/B14502_00_01.jpg)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B14502_00_01.jpg)'
- en: 'Figure 0.1: User accounts'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图0.1：用户账户
- en: 'Click on `New` to add a line, then type in the path to your new `bin` directory:![Figure
    0.2: Adding the path in bin directory'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`新建`以添加一行，然后输入你新`bin`目录的路径：![图0.2：在bin目录中添加路径
- en: '](img/B14502_00_02.jpg)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B14502_00_02.jpg)'
- en: 'Figure 0.2: Adding the path in bin directory'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图0.2：在bin目录中添加路径
- en: 'Now that Leiningen is installed and executable, from the command line, simply
    type:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在Leiningen已安装并可用，从命令行，只需简单地输入：
- en: '[PRE8]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Leiningen will fetch Clojure and all the libraries it needs to manage Clojure.
    And now, by simply typing `lein repl`, you''ll have your very first Clojure REPL:'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Leiningen将获取Clojure以及它需要管理的所有库。现在，只需简单地输入`lein repl`，您就会拥有您的第一个Clojure REPL：
- en: '![Figure 0.3: REPL started'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![图0.3：REPL启动'
- en: '](img/B14502_00_03.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14502_00_03.jpg)'
- en: 'Figure 0.3: REPL started'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图0.3：REPL启动
- en: Editors and IDEs
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑器和IDE
- en: While you can certainly do a lot with a REPL running in a console, it's much
    more convenient to integrate the Clojure REPL into your favorite editor. Plugins
    exist for just about every editor and environment out there, from Vim to Emacs
    and from IntelliJ to Electron or Visual Studio Code.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然您当然可以在控制台中运行REPL做很多事情，但将Clojure REPL集成到您最喜欢的编辑器中会方便得多。几乎所有编辑器和环境都有插件，从Vim到Emacs，从IntelliJ到Electron或Visual
    Studio Code。
- en: We can't cover all the possible environments here, but we recommend using the
    coding tools you are already familiar with and adding a Clojure plugin. The best
    code editor is the one you enjoy using. As long as there is a Clojure plugin for
    it, you should be up and running in no time.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里无法涵盖所有可能的环境，但我们建议使用您已经熟悉的编码工具，并添加一个Clojure插件。最好的代码编辑器就是您喜欢使用的编辑器。只要它有Clojure插件，您应该很快就能开始使用。
- en: Installing the Code Bundle
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装代码包
- en: Download the code files from GitHub at [https://packt.live/2vbksal](https://packt.live/2vbksal).
    Refer to these code files for the complete code bundle.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 从GitHub下载代码文件[https://packt.live/2vbksal](https://packt.live/2vbksal)。请参考这些代码文件以获取完整的代码包。
- en: If you have any issues or questions about installation, please email us at `workshops@packt.com`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在安装过程中有任何问题或疑问，请通过电子邮件联系我们的`workshops@packt.com`。
- en: The high-quality color images used in book can be found at [https://packt.live/2O5EzNX](https://packt.live/2O5EzNX)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 书中使用的优质彩色图像可以在[https://packt.live/2O5EzNX](https://packt.live/2O5EzNX)找到
