- en: Introducing JEE and Eclipse
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍JEE和Eclipse
- en: Java Enterprise Edition (JEE, which was earlier called J2EE) has been around
    for many years now. It is a very robust platform for developing enterprise applications.
    J2EE was first released in 1999, but underwent major changes with the release
    of version 5 in 2006\. Since version 5, it has been renamed **Java Enterprise
    Edition** (**JEE**). Recent versions of JEE have made developing a multi-tier
    distributed application a lot easier. J2EE had focused on core services and had
    left the tasks that made application development easier to external frameworks,
    for example, MVC and persistent frameworks. But JEE has brought many of these
    frameworks into the core services. Along with the support for annotations, these
    services simplify application development to a large extent.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Java企业版（JEE，之前称为J2EE）已经存在很多年了。它是一个用于开发企业应用的非常健壮的平台。J2EE首次于1999年发布，但在2006年发布第5版时经历了重大变化。自第5版以来，它已被更名为**Java企业版**（**JEE**）。JEE的最新版本使得开发多层分布式应用变得更加容易。J2EE专注于核心服务，并将使应用开发变得更容易的任务留给了外部框架，例如MVC和持久化框架。但JEE将这些框架中的许多引入了核心服务。随着对注解的支持，这些服务在很大程度上简化了应用开发。
- en: Any runtime technology is not good without good development tools. The **Integrated
    Development Environment** (**IDE**) plays a major part in developing applications
    faster, and Eclipse provides just that for JEE. Not only do you get good code
    editing support in Eclipse, but you also get support for build, unit testing,
    version control, and many other tasks important in different phases of software
    application development.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 任何运行时技术如果没有好的开发工具都是不好的。**集成开发环境**（**IDE**）在快速开发应用中起着重要作用，Eclipse为JEE提供了这样的环境。在Eclipse中，你不仅得到良好的代码编辑支持，还得到构建、单元测试、版本控制和软件应用开发不同阶段的重要任务的支持。
- en: 'In this chapter, we are going to cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下主题：
- en: Introduction to different technologies in JEE
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JEE不同技术的介绍
- en: Introduction to the Eclipse development environment
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse开发环境的介绍
- en: Installation and configuration of some of the frequently used software in this
    book, for example, JEE servers, Eclipse IDE, and MySQL Database Server
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书介绍的一些常用软件的安装和配置，例如，JEE服务器、Eclipse IDE和MySQL数据库服务器
- en: The goal of this book is to show how you can efficiently develop JEE applications
    using Eclipse by using many of its features during different phases of the application
    development. But first, here is a brief introduction to JEE and Eclipse.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目标是展示如何通过使用Eclipse在应用开发的各个阶段使用其许多功能，高效地开发JEE应用。但首先，这里简要介绍JEE和Eclipse。
- en: In 2017, Oracle agreed to hand over control of Java EE to Eclipse Foundation.
    In April 2018, Eclipse Foundation renamed Java EE as Jakarta EE. You can find
    more information about Jakarta EE at [https://jakarta.ee/](https://jakarta.ee/).
    At the time of writing, the latest Java EE version is 8\. But all future versions
    of Java EE will be called Jakarta EE.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 2017年，Oracle同意将Java EE的控制权移交给Eclipse基金会。2018年4月，Eclipse基金会将Java EE更名为Jakarta
    EE。您可以在[https://jakarta.ee/](https://jakarta.ee/)找到有关Jakarta EE的更多信息。在撰写本文时，最新的Java
    EE版本是8。但所有未来的Java EE版本都将被称为Jakarta EE。
- en: JEE
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JEE
- en: JEE is a collection of many of the Java Community Process ([https://www.jcp.org](https://www.jcp.org))
    programs. Currently, JEE is in Version 8\. However, different specifications of
    JEE are at their own different versions.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: JEE是Java社区过程（[https://www.jcp.org](https://www.jcp.org)）的许多项目的集合。目前，JEE处于第8版。然而，JEE的不同规范处于它们各自的不同版本。
- en: 'JEE specifications can be broadly classified into the following groups:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: JEE规范可以大致分为以下几组：
- en: Presentation layer
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表示层
- en: Business layer
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 业务层
- en: Enterprise integration layer
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业集成层
- en: Note that JEE specification does not necessarily classify APIs in the preceding
    broad groups, but such classification could help in better understanding the purpose
    of the different specifications and APIs in JEE.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，JEE规范并不一定将API分类到前面提到的广泛组中，但这种分类有助于更好地理解JEE中不同规范和API的目的。
- en: 'Before we see APIs in each of these categories, let''s understand a typical
    JEE web application flow, as shown in the following diagram, and where each of
    the preceding layers fits in:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们查看每个这些类别的API之前，让我们了解一个典型的JEE Web应用流程，如图中所示，以及前面的每一层适合的位置：
- en: '![](img/00005.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00005.jpeg)'
- en: 'Figure 1.1: A typical JEE web application flow'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1：典型的JEE Web应用流程
- en: Requests start from the clients. A client can be any application requesting
    services from a remote application—for example, it could be the browser or a desktop
    application. The request is first received by the web server at the destination.
    Examples of web servers include Apache web server, IIS, and nginx. If it is a
    request for static content, then it is served by the web server(s). However, a
    dynamic request typically requires an application server to process. JEE servers
    are such application servers that handle dynamic requests. Most JEE specification
    APIs execute in the application server. Examples of JEE application servers are
    WebSphere, GlassFish, and WildFly.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 请求从客户端开始。客户端可以是任何请求从远程应用程序获取服务的应用程序——例如，它可以是浏览器或桌面应用程序。请求首先由目标处的 Web 服务器接收。Web
    服务器的例子包括 Apache Web 服务器、IIS 和 nginx。如果是一个静态内容的请求，则由 Web 服务器（们）提供。然而，动态请求通常需要一个应用服务器来处理。JEE
    服务器就是这样处理动态请求的应用服务器。大多数 JEE 规范 API 在应用服务器中执行。JEE 应用服务器的例子包括 WebSphere、GlassFish
    和 WildFly。
- en: Most non-trivial JEE applications access external systems, such as a database
    or **Enterprise Integration Server** (**EIS**), for accessing data and process
    it. A response is returned from the application server to the web server and then
    to the clients.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数非平凡 JEE 应用程序访问外部系统，例如数据库或 **企业集成服务器**（**EIS**），以访问数据并处理它。响应从应用服务器返回到 Web
    服务器，然后到客户端。
- en: The following sections provide a brief description of each of the JEE specifications
    in different layers. We will see how to use these specifications and their APIs
    in more detail in subsequent chapters. However, note that the following is not
    the exhaustive list of all the specifications in JEE. We will see the most commonly
    used specifications here. For the exhaustive list, please visit [http://www.oracle.com/technetwork/java/javaee/tech/index.html](http://www.oracle.com/technetwork/java/javaee/tech/index.html).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各节简要描述了不同层中每个 JEE 规范的概述。我们将在后续章节中更详细地了解如何使用这些规范及其 API。然而，请注意，以下不是 JEE 中所有规范的详尽列表。我们将在本节中查看最常用的规范。要获取详尽列表，请访问
    [http://www.oracle.com/technetwork/java/javaee/tech/index.html](http://www.oracle.com/technetwork/java/javaee/tech/index.html)。
- en: The presentation layer
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表示层
- en: JEE specifications or technologies in this layer receive requests from the web
    server and send back the response, typically in HTML format. However, it is also
    possible to return only data from the presentation layer, for example in **JavaScript
    Object Notation** (**JSON**) or **eXtensible Markup Language** (**XML**) format,
    which could be consumed by **Asynchronous JavaScript and XML** (**AJAX**) calls
    to update only part of the page, instead of rendering the entire HTML page. Classes
    in the presentation layer are mostly executed in the web container—it is a part
    of the application server that handles web requests. Tomcat is an example of a
    popular web container.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 此层的 JEE 规范或技术从 Web 服务器接收请求并返回响应，通常是 HTML 格式。然而，也可以仅从表示层返回数据，例如在 **JavaScript
    对象表示法**（**JSON**）或 **可扩展标记语言**（**XML**）格式中，这可以通过 **异步 JavaScript 和 XML**（**AJAX**）调用仅更新页面的一部分，而不是渲染整个
    HTML 页面。表示层中的类大多在 Web 容器中执行——它是处理 Web 请求的应用服务器的一部分。Tomcat 是流行的 Web 容器的一个例子。
- en: Now let's take a look at some of the specifications in this layer.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看这一层的一些规范。
- en: Java Servlets
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java Servlets
- en: Java Servlets are server-side modules, typically used to process requests and
    send back responses in web applications. Servlets are useful for handling requests
    that do not generate large HTML markup responses. They are typically used as controllers
    in **Model View Controller** (**MVC**)frameworks, for forwarding/redirecting requests,
    or for generating non-HTML responses, such as PDFs. To generate HTML response
    from the servlet, you need to embed HTML code (as a Java String) in Java code.
    Therefore, it is not the most convenient option for generating large HTML responses.
    JEE 8 contains servlet API 4.0.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Java Servlets 是服务器端模块，通常用于在 Web 应用程序中处理请求并返回响应。Servlets 对于处理不生成大量 HTML 标记响应的请求很有用。它们通常用作
    **模型-视图-控制器**（**MVC**）框架中的控制器，用于转发/重定向请求，或用于生成非 HTML 响应，例如 PDF。要从 Servlet 生成 HTML
    响应，您需要在 Java 代码中嵌入 HTML 代码（作为 Java 字符串）。因此，它不是生成大量 HTML 响应最方便的选项。JEE 8 包含 Servlet
    API 4.0。
- en: JavaServer Pages
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaServer Pages
- en: Like servlets, **JavaServer Pages** (**JSPs**) are also server-side modules
    used for processing web requests. JSPs are great for handling requests that generate
    large HTML markup responses. In JSP pages, Java code or JSP tags can be mixed
    with other HTML code, such as HTML tags, JavaScript, and CSS. Since Java code
    is embedded in the larger HTML code, it is easier (than servlets) to generate
    an HTML response from the JSP pages. JSP specification 2.3 is included in JEE
    8.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于servlet，**JavaServer Pages**（**JSP**）也是用于处理Web请求的服务器端模块。JSP非常适合处理生成大量HTML标记响应的请求。在JSP页面中，Java代码或JSP标签可以与其他HTML代码（如HTML标签、JavaScript和CSS）混合使用。由于Java代码嵌入到更大的HTML代码中，因此从JSP页面生成HTML响应更容易（比servlet）。JSP规范2.3包含在JEE
    8中。
- en: JavaServer Faces
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaServer Faces
- en: '**JavaServer Faces** (**JSFs**) make creating a user interface on the server
    side modular by incorporating the MVC design pattern in its implementation. It
    also provides easy-to-use tags for common user interface controls that can save
    states across multiple request-response exchanges between client and server. For
    example, if you have a page that posts form data from a browser, you can have
    a JSF save that data in a Java bean so that it can be used subsequently in the
    response to the same or different request. JSFs also make it easier to handle
    UI events on the server side and specify page navigation in an application.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**JavaServer Faces**（**JSF**）通过在其实现中结合MVC设计模式，使服务器端创建用户界面模块化。它还提供了易于使用的标签，用于常见的用户界面控件，可以在客户端和服务器之间的多个请求-响应交换中保存状态。例如，如果你有一个从浏览器提交表单数据的页面，你可以让JSF将数据保存到一个Java
    Bean中，以便在随后的响应中用于相同或不同的请求。JSF还使在服务器端处理UI事件和指定应用程序中的页面导航变得更容易。'
- en: You write the JSF code in JSP, using custom JSP tags created for JSF. JavaServer
    Faces API 2.3 is part of JEE 8.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在JSP中使用为JSF创建的自定义JSP标签来编写JSF代码。JavaServer Faces API 2.3是JEE 8的一部分。
- en: The business layer
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 业务层
- en: The business layer is where you typically write code to handle the business
    logic of your application. Requests to this layer could come from the presentation
    layer, directly from the client application, or from the middle layer consisting
    of, but not limited to, web services. Classes in this layer are executed in the
    application container part of JEE server. GlassFish and WebSphere are examples
    of web container plus application container.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 业务层是通常编写代码来处理应用程序业务逻辑的地方。对这个层的请求可能来自表示层、直接来自客户端应用程序，或来自由但不限于Web服务的中间层。这个层的类在JEE服务器的应用程序容器部分中执行。GlassFish和WebSphere是Web容器加应用程序容器的例子。
- en: Let us take a tour of some of the specifications in this group.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们浏览一下这个组中的一些规范。
- en: Enterprise JavaBeans
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 企业JavaBeans
- en: '**Enterprise JavaBeans** (**EJBs**) are the Java classes where you can write
    your business logic. Though it is not a strict requirement to use EJBs to write
    business logic, they do provide many of the services that are essential in enterprise
    applications. These services are security, transaction management, component lookup,
    object pooling, and so on.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**企业JavaBean**（**EJB**）是你可以编写业务逻辑的Java类。尽管使用EJB来编写业务逻辑不是强制性的要求，但它们确实提供了企业应用程序中许多基本的服务。这些服务包括安全性、事务管理、组件查找、对象池等。'
- en: You can have EJBs distributed across multiple servers and let the application
    container (also called the EJB container) take care of component lookup (searching
    component) and component pooling (useful for scalability). This can improve the
    scalability of the application.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将EJB分布到多个服务器上，并让应用程序容器（也称为EJB容器）负责组件查找（搜索组件）和组件池（对可扩展性很有用）。这可以提高应用程序的可扩展性。
- en: 'EJBs are of two types:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: EJB有两种类型：
- en: '**Session beans**: Session beans are called directly by clients or middle-tier
    objects'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**会话Bean**：会话Bean可以直接由客户端或中间层对象调用'
- en: '**Message-driven beans**: Message-driven beans are called in response to **Java
    Messaging Service** (**JMS**) events'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息驱动的Bean**：消息驱动的Bean是在响应**Java消息服务**（**JMS**）事件时被调用的'
- en: JMS and message-driven beans can be used for handling asynchronous requests.
    In a typical asynchronous request processing scenario, the client puts a request
    in a messaging queue or a topic and does not wait for immediate response. An application
    on the server side gets the request message, either directly using JMS APIs or
    by using MDBs. It processes the request and may put the response in a different
    queue or topic, to which the client would listen and get the response.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: JMS和消息驱动豆可以用于处理异步请求。在一个典型的异步请求处理场景中，客户端将请求放入消息队列或主题，并不等待立即响应。服务器端的应用程序获取请求消息，要么直接使用JMS
    API，要么通过使用MDBs。它处理请求，并将响应放入不同的队列或主题，客户端会监听并获取响应。
- en: Java EE 8 contains EJB specification 3.2 and JMS specification 2.0.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 8包含EJB规范3.2和JMS规范2.0。
- en: The enterprise integration layer
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 企业集成层
- en: APIs in this layer are used for interacting with external (to the JEE application)
    systems in the enterprise. Most applications would need to access a database,
    and APIs to access that fall in this group.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此层中的API用于与企业外部（相对于JEE应用程序）的系统进行交互。大多数应用程序都需要访问数据库，用于访问该数据库的API属于这一组。
- en: Java Database Connectivity
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java数据库连接
- en: '**Java Database Connectivity** (**JDBC**) is a specification to access a relational
    database in a common and consistent way. Using JDBC, you can execute SQL statements
    and get results on different databases using common APIs. A database-specific
    driver sits between the JDBC call and the database, and it translates JDBC calls
    to database-vendor-specific API calls. JDBC can be used in both the presentation
    and business layers directly, but it is recommended to separate the database calls
    from both the UI and the business code. Typically, this is done by creating **Data
    Access Objects** (**DAOs**) that encapsulate the logic to access the database.
    JDBC is actually a part of Java Standard Edition. Java SE 8 contains JDBC 4.2.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**Java数据库连接**（**JDBC**）是一种规范，用于以通用和一致的方式访问关系数据库。使用JDBC，您可以使用通用API执行SQL语句并在不同的数据库上获取结果。数据库特定的驱动程序位于JDBC调用和数据库之间，并将JDBC调用转换为数据库供应商特定的API调用。JDBC可以直接在表示层和业务层中使用，但建议将数据库调用从UI和业务代码中分离出来。通常，这是通过创建**数据访问对象**（**DAOs**）来完成的，这些对象封装了访问数据库的逻辑。实际上，JDBC是Java标准版的一部分。Java
    SE 8包含JDBC 4.2。'
- en: The Java Persistence API
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java持久化API
- en: One of the problems of using JDBC APIs directly is that you have to constantly
    map the data between Java objects and the data in columns or rows in the relational
    database. Frameworks such as Hibernate and Spring have made this process simpler
    by using a concept known as **Object Relational Mapping** (**ORM**). ORM is incorporated
    in JEE in the form of the **Java Persistence API** (**JPA**).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用JDBC API直接的一个问题是您必须不断在Java对象和关系数据库中列或行中的数据之间映射数据。例如Hibernate和Spring这样的框架通过使用称为**对象关系映射**（**ORM**）的概念使这个过程变得简单。ORM以**Java持久化API**（**JPA**）的形式融入JEE。
- en: JPA gives you the flexibility to map objects to tables in the relational database
    and execute queries with or without using **Structured Query Language** (**SQL**).
    When used in the content of JPA, the query language is called **Java Persistence
    Query Language**. JPA specification 2.2 is a part of JEE8.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: JPA为您提供了将对象映射到关系数据库中的表，并使用或不用**结构化查询语言**（**SQL**）执行查询的灵活性。当在JPA的内容中使用时，查询语言被称为**Java持久化查询语言**。JPA规范2.2是JEE8的一部分。
- en: Java Connector Architecture
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java连接器架构
- en: '**Java Connector Architecture** (**JCA**) APIs can be used in JEE applications
    for communicating with **enterprise integration systems** (**EISes**), such as
    SAP, and Salesforce. Just like you have database drivers to broker communication
    between JDBC APIs and relational databases, you have JCA adapters between JCA
    calls and EISes. Most EIS applications now provide REST APIs, which are lightweight
    and easy to use, so REST could replace JCA in some cases. However, if you use
    JCA, you get transaction and pooling support from the JEE application server.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**Java连接器架构**（**JCA**）API可以在JEE应用程序中使用，用于与企业集成系统（**EISes**），如SAP和Salesforce进行通信。就像您有数据库驱动程序在JDBC
    API和关系数据库之间进行通信中介一样，您在JCA调用和EISes之间有JCA适配器。现在大多数EIS应用程序都提供REST API，这些API轻量级且易于使用，因此REST可以在某些情况下替代JCA。然而，如果您使用JCA，您将从JEE应用程序服务器获得事务和连接池支持。'
- en: Web services
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 互联网服务
- en: 'Web services are remote application components and expose self-contained APIs.
    Web services can be broadly classified based on following two standards:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Web服务是远程应用程序组件，并公开自包含的API。Web服务可以根据以下两个标准进行广泛分类：
- en: '**Simple Object Access Protocol** (**SOAP**)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单对象访问协议**（**SOAP**）'
- en: '**Representational State Transfer** (**REST**)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表示状态转移**（**REST**）'
- en: Web services can play a major role in integrating disparate applications, because
    they are standard-based and platform-independent.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Web服务可以在集成不同应用程序中发挥重要作用，因为它们基于标准且平台无关。
- en: JEE provides many specifications to simplify development and consumption of
    both types of web services, for example, JAX-WS (Java API for XML—web services)
    and JAX-RS (Java API for RESTful web services).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: JEE提供了许多规范以简化开发和对两种类型Web服务的使用，例如，JAX-WS（Java API for XML—web services）和JAX-RS（Java
    API for RESTful web services）。
- en: The preceding are just some of the specifications that are part of JEE. There
    are many other independent specifications and many enabling specifications, such
    as dependency injection and concurrency utilities, which we will see in subsequent
    chapters.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 上述只是JEE中的一部分规范。还有许多其他独立规范和许多启用规范，如依赖注入和并发工具，我们将在后续章节中看到。
- en: Eclipse IDE
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse IDE
- en: A good IDE is essential for better productivity while coding. Eclipse is one
    such IDE, which has great editor features and many integration points with JEE
    technologies. The primary purpose of this book is to show you how to develop JEE
    applications using Eclipse. So the following is a quick introduction to Eclipse,
    if you are not already familiar with it.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的IDE对于提高编码时的生产力至关重要。Eclipse就是这样一种IDE，它具有出色的编辑器功能和许多与JEE技术的集成点。本书的主要目的是向您展示如何使用Eclipse开发JEE应用程序。因此，以下是对Eclipse的快速介绍，如果您还不熟悉它的话。
- en: Eclipse is an open source IDE for developing applications in many different
    programming languages. It is quite popular for developing many different types
    of Java applications. Its architecture is pluggable—there is a core IDE component
    and many different plugins can be added to it. In fact, support for many languages
    is added as Eclipse plugins, including support for Java.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse是一个开源IDE，用于开发多种不同编程语言的应用程序。它因开发多种不同类型的Java应用程序而非常受欢迎。其架构是可插拔的——有一个核心IDE组件，可以添加许多不同的插件。实际上，许多语言的支持都是作为Eclipse插件添加的，包括对Java的支持。
- en: 'Along with editor support, Eclipse has plugins to interact with many of the
    external systems used during development. Examples include source control systems
    such as SVN and Git, build tools such as Apache Ant and Maven, file explorers
    for remote systems using FTP, managing servers such as Tomcat and GlassFish, database
    explorers, memory and CPU profilers. We will see many of these features in the
    subsequent chapters. The following screenshot shows the default view of Eclipse
    for JEE application development:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 除了编辑器支持外，Eclipse还提供了插件来与开发过程中使用的许多外部系统进行交互。例如，包括源代码控制系统如SVN和Git，构建工具如Apache
    Ant和Maven，用于远程系统（使用FTP）的文件浏览器，管理服务器如Tomcat和GlassFish，数据库浏览器，内存和CPU分析器。我们将在后续章节中看到许多这些功能。以下截图显示了Eclipse为JEE应用程序开发提供的默认视图：
- en: '![](img/00006.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00006.jpeg)'
- en: 'Figure 1.2: Default Eclipse view'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2：默认Eclipse视图
- en: When working with Eclipse, it is good to understand the following terms.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Eclipse时，了解以下术语是很有帮助的。
- en: Workspace
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作空间
- en: The Eclipse workspace is a collection of projects, settings, and preferences.
    It is a folder where Eclipse stores this information. You must create a workspace
    to start using Eclipse. You can create multiple workspaces, but only one can be
    opened at a time by one running instance of Eclipse. However, you can launch multiple
    instances of Eclipse with different workspaces.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse工作空间是一组项目、设置和首选项的集合。这是一个Eclipse存储这些信息的文件夹。您必须创建一个工作空间才能开始使用Eclipse。您可以创建多个工作空间，但一次只能由一个Eclipse运行实例打开一个。然而，您可以使用不同工作空间的多个Eclipse实例。
- en: Plugin
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 插件
- en: Eclipse has pluggable architecture. Many of the features of Eclipse are implemented
    as plugins, for example, editor plugins for Java and many other languages, plugins
    for SVN and Git, and many more. The default installation of Eclipse comes with
    many built-in plugins and you can add more plugins for the features you want later.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse具有可插拔架构。Eclipse的许多功能都是作为插件实现的，例如，Java和其他语言的编辑器插件，SVN和Git插件，等等。Eclipse的默认安装包含许多内置插件，并且您可以添加更多插件以获得您想要的特性。
- en: Editors and views
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编辑器和视图
- en: Most windows in Eclipse can be classified either as an editor or a view. An
    editor is something where you can change the information displayed in it. A view
    just displays the information and does not allow you to change it. An example
    of an editor is the Java editor where you write code. An example of a view is
    the outline view that displays the hierarchical structure of the code you are
    editing (in the case of a Java editor, it shows classes and methods in the file
    being edited).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse中的大多数窗口都可以归类为编辑器或视图。编辑器是你可以更改其中显示的信息的地方。视图仅显示信息，不允许你更改它。Java编辑器是一个编辑器的例子，你在其中编写代码。大纲视图是一个视图的例子，它显示你正在编辑的代码的分层结构（在Java编辑器的情况下，它显示正在编辑的文件中的类和方法）。
- en: 'To see all views in a given Eclipse installation, open the Window | Show View
    | Other menu:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看给定Eclipse安装中的所有视图，请打开“窗口 | 显示视图 | 其他”菜单：
- en: '![](img/00007.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00007.jpeg)'
- en: 'Figure 1.3: Show all Eclipse views'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3：显示所有Eclipse视图
- en: Perspective
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视图
- en: Perspective is a collection of editors and views, and how they are laid out
    or arranged in the main Eclipse window. At different stages of development, you
    need different views to be displayed. For example, when you are editing the code,
    you need to see Project Explorer and Task views, but when you are debugging an
    application, you don't need those views, but instead want to see variable and
    breakpoint views. So, the editing perspective displays, among other views and
    editors, Project Explorer and Task views, and the Debug perspective displays views
    and editors relevant to the debugging activities. You can change the default perspectives
    to suit your purposes.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 视图是一个编辑器和视图的集合，以及它们如何在主Eclipse窗口中布局或排列。在开发的各个阶段，你需要显示不同的视图。例如，当你编辑代码时，你需要看到项目资源管理器和任务视图，但在调试应用程序时，你不需要这些视图，而是希望看到变量和断点视图。因此，编辑视图显示其他视图和编辑器中的项目资源管理器和任务视图，而调试视图显示与调试活动相关的视图和编辑器。你可以更改默认视图以适应你的需求。
- en: Eclipse preferences
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse首选项
- en: 'The Eclipse Preferences window (*Figure 1.4*) is where you customize many plugins/features.
    Preferences are available from the Window menu in the Windows and Linux installations
    of Eclipse, and from the Eclipse menu in Mac:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse首选项窗口（*图1.4*）是自定义许多插件/功能的地方。首选项在Eclipse的Windows和Linux安装的“窗口”菜单中可用，在Mac的Eclipse菜单中：
- en: '![](img/00008.jpeg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00008.jpeg)'
- en: 'Figure 1.4: Eclipse preferences'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4：Eclipse首选项
- en: Installing products
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装产品
- en: In the subsequent chapters, we will learn how to develop JEE applications in
    Eclipse. But the applications are going to need a JEE application server and a
    database. We are going to use the Tomcat web container in the initial few chapters
    and then use the GlassFish JEE application server. We are going to use a MySQL
    database.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在随后的章节中，我们将学习如何在Eclipse中开发JEE应用程序。但是，这些应用程序将需要一个JEE应用程序服务器和一个数据库。在前几章中，我们将使用Tomcat网络容器，然后使用GlassFish
    JEE应用程序服务器。我们将使用MySQL数据库。
- en: We are going to need these products for many of the applications that we are
    going to develop. So the following sections describe how to install and configure
    Eclipse, Tomcat, GlassFish, and MySQL.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将需要这些产品来开发我们即将开发的大多数应用。因此，以下章节将描述如何安装和配置Eclipse、Tomcat、GlassFish和MySQL。
- en: Installing Eclipse
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Eclipse
- en: Download the latest version of Eclipse from [https://eclipse.org/downloads/](https://eclipse.org/downloads/).
    You will see many different packages for Eclipse. Make sure you install the Eclipse
    IDE for Java EE Developers package. Select an appropriate package based on your
    OS and JVM architecture (32 or 64 bit). You may want to run the command `java
    -version` to know whether the JVM is 32-bit or 64-bit.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 从[https://eclipse.org/downloads/](https://eclipse.org/downloads/)下载Eclipse的最新版本。你会看到许多不同的Eclipse包。确保安装Eclipse
    IDE for Java EE Developers包。根据你的操作系统和JVM架构（32位或64位）选择合适的包。你可能需要运行命令`java -version`来了解JVM是32位还是64位。
- en: If you plan to use Eclipse for AWS development, then it is recommended to download
    Eclipse from the Oomph installer. Refer to [https://wiki.eclipse.org/Eclipse_Installer](https://wiki.eclipse.org/Eclipse_Installer)
    and[ https://docs.aws.amazon.com/toolkit-for-eclipse/v1/user-guide/setup-install.html](https://docs.aws.amazon.com/toolkit-for-eclipse/v1/user-guide/setup-install.html).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你计划使用Eclipse进行AWS开发，那么建议从Oomph安装程序下载Eclipse。请参阅[https://wiki.eclipse.org/Eclipse_Installer](https://wiki.eclipse.org/Eclipse_Installer)和[https://docs.aws.amazon.com/toolkit-for-eclipse/v1/user-guide/setup-install.html](https://docs.aws.amazon.com/toolkit-for-eclipse/v1/user-guide/setup-install.html)。
- en: 'Unzip the downloaded ZIP file and then run the Eclipse application (you must
    install JDK before you run Eclipse). The first time you run Eclipse, you will
    be asked to specify a workspace. Create a new folder in your filesystem and select
    that as the initial workspace folder. If you intend to use the same folder for
    the workspace on every launch of Eclipse, then check the Use this as the default
    and do not ask again checkbox:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 解压下载的 ZIP 文件，然后运行 Eclipse 应用程序（在运行 Eclipse 之前，您必须安装 JDK）。第一次运行 Eclipse 时，您将被要求指定一个工作空间。在您的文件系统中创建一个新的文件夹，并将其作为初始工作空间文件夹选择。如果您打算在每次启动
    Eclipse 时使用相同的文件夹作为工作空间，请勾选“使用此作为默认值，不再询问”复选框：
- en: '![](img/00009.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00009.jpeg)'
- en: 'Figure 1.5: Select Eclipse workspace'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5：选择 Eclipse 工作空间
- en: You will then see the default Java EE perspective of Eclipse as shown in *Figure
    1.2*.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到如图 *1.2* 所示的默认 Java EE 视图。
- en: Installing the Tomcat server
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Tomcat 服务器
- en: Tomcat is a web container. It supports APIs in the presentation layer described
    earlier. In addition, it supports JDBC and JPA. It is easy to configure and could
    be a good option if you do not want to use EJBs.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Tomcat 是一个 Web 容器。它支持之前描述的表示层 API。此外，它还支持 JDBC 和 JPA。配置简单，如果您不想使用 EJBs，它可能是一个不错的选择。
- en: Download the latest version of Tomcat from [http://tomcat.apache.org/](http://tomcat.apache.org/).
    Unzip the downloaded file in a folder. Set the `JAVA_HOME` environment variable
    to point to the folder where JDK is installed (the folder path should be the JDK
    folder, which has `bin` as one of the subfolders). To start the server, run `startup.bat`
    in Command Prompt on Windows and `startup.sh` in a Terminal window on Mac and
    Linux. If there are no errors, then you should see the message `Server startup
    in --ms` or `Tomcat started`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 从 [http://tomcat.apache.org/](http://tomcat.apache.org/) 下载最新版本的 Tomcat。将下载的文件解压到一个文件夹中。设置
    `JAVA_HOME` 环境变量，使其指向 JDK 安装文件夹（文件夹路径应该是包含 `bin` 子文件夹的 JDK 文件夹）。要在 Windows 的命令提示符中启动服务器，请运行
    `startup.bat`；在 Mac 和 Linux 的终端窗口中运行 `startup.sh`。如果没有错误，您应该会看到消息 `Server startup
    in --ms` 或 `Tomcat started`。
- en: 'The default Tomcat installation is configured to use port `8080`. If you want
    to change the port, open `server.xml` under the `conf` folder and look for a connector
    declaration such as the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的 Tomcat 安装配置为使用端口 `8080`。如果您想更改端口，请打开位于 `conf` 文件夹下的 `server.xml` 文件，并查找如下所示的连接器声明：
- en: '[PRE0]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Change the port value to any port number you want, though in this book we will
    be using the default port `8080`. Before we open the default page of Tomcat, we
    will add a user for administration of the Tomcat server. Open `tomcat-users.xml`
    under the `conf` folder using any text editor. At the end of the file, you will
    see commented example of how to add users. Add the following configuration before
    the closure of `</tomcat-users>` tag:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 将端口号更改为您想要的任何端口号，尽管在这本书中我们将使用默认端口 `8080`。在我们打开 Tomcat 的默认页面之前，我们将为 Tomcat 服务器的管理添加一个用户。使用任何文本编辑器打开位于
    `conf` 文件夹下的 `tomcat-users.xml` 文件。在文件末尾，您将看到如何添加用户的注释示例。在 `</tomcat-users>` 标签关闭之前添加以下配置：
- en: '[PRE1]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, we are adding a user `admin`, with password also as `admin,` to a role
    called `manager-gui`. This role has access to web pages for managing an application
    in Tomcat. This and other security roles are defined in `web.xml` of the `manager`
    application. You can find it at `webapps/manager/WEB-INF/web.xml`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在向名为 `manager-gui` 的角色添加一个用户 `admin`，密码也是 `admin`。此角色可以访问 Tomcat 中管理应用程序的网页。此角色和其他安全角色在
    `manager` 应用程序的 `web.xml` 文件中定义。您可以在 `webapps/manager/WEB-INF/web.xml` 中找到它。
- en: For more information for managing Tomcat server, refer to [http://tomcat.apache.org/tomcat-8.0-doc/manager-howto.html](http://tomcat.apache.org/tomcat-8.0-doc/manager-howto.html).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 关于管理 Tomcat 服务器的更多信息，请参阅 [http://tomcat.apache.org/tomcat-8.0-doc/manager-howto.html](http://tomcat.apache.org/tomcat-8.0-doc/manager-howto.html)。
- en: 'After making the preceding changes, open a web browser and browse to `http://localhost:8080`
    (modify the port number if you have changed the default port). You will see the
    following default Tomcat page:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行上述更改后，打开一个网页浏览器，并浏览到 `http://localhost:8080`（如果您已更改默认端口，请修改端口号）。您将看到以下默认的
    Tomcat 页面：
- en: '![](img/00010.jpeg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00010.jpeg)'
- en: 'Figure 1.6: The default Tomcat web application'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6：默认的 Tomcat Web 应用程序
- en: 'Click on the Manager App button on the right. You will be asked for the username
    and password. Enter the username and password you configured in `tomcat-users.xml`
    for `manager-gui`, as described earlier. After you are successfully logged in,
    you will see the Tomcat Web Application Manager page, as shown in *Figure 1.7*.
    You can see all the applications deployed in Tomcat in this page. You can also
    deploy your applications from this page:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 点击右侧的“Manager App”按钮。您将被要求输入用户名和密码。输入您之前在 `tomcat-users.xml` 中为 `manager-gui`
    配置的用户名和密码，如前所述。成功登录后，您将看到 *图 1.7* 所示的 Tomcat 网络应用程序管理器页面。您可以在该页面上看到 Tomcat 中部署的所有应用程序。您也可以从该页面部署应用程序：
- en: '![](img/00011.jpeg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00011.jpeg)'
- en: 'Figure 1.7: Tomcat Web Application Manager'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7：Tomcat 网络应用程序管理器
- en: To stop the Tomcat server, press *Ctrl*/*cmd* + *C* or run the shutdown script
    in the `bin` folder.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要停止 Tomcat 服务器，请按 *Ctrl*/*cmd* + *C* 或在 `bin` 文件夹中运行关机脚本。
- en: Installing the GlassFish server
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 GlassFish 服务器
- en: 'Download GlassFish from [https://glassfish.java.net/download.html](https://javaee.github.io/glassfish/download).
    GlassFish comes in two flavors: Web Profile and Full Platform. Web Profile is
    like Tomcat, which does not include EJB support. So download the Full Platform.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 从 [https://glassfish.java.net/download.html](https://javaee.github.io/glassfish/download)
    下载 GlassFish。GlassFish 有两种版本：Web Profile 和 Full Platform。Web Profile 类似于 Tomcat，它不包括
    EJB 支持。因此，请下载 Full Platform。
- en: Unzip the downloaded file in a folder. The default port of the GlassFish server
    is `8080`. If you want to change that, open `glassfish/domains/domain1/config/domain.xml`
    in a text editor (you could open it in Eclipse too, using the File | Open File
    menu option) and look for `8080`. You should see it in one of the `<network-listener>`.
    Change the port if you want to (which may be the case if some other application
    is already using that port).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件夹中解压下载的文件。GlassFish 服务器的默认端口是 `8080`。如果您想更改它，请在文本编辑器中打开 `glassfish/domains/domain1/config/domain.xml`（您也可以使用
    Eclipse，通过“文件 | 打开文件”菜单选项打开）并查找 `8080`。您应该在 `<network-listener>` 中的一个位置看到它。如果您想更改端口（如果其他应用程序已经使用该端口，则可能需要这样做），请更改它。
- en: 'To start the server, run the `startserv` script (`.bat` or `.sh` depending
    on the OS you use). Once the server has started, open a web browser and browse
    to `http://localhost:8080`. You should see a page like the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动服务器，运行 `startserv` 脚本（`.bat` 或 `.sh` 取决于您使用的操作系统）。一旦服务器启动，打开网页浏览器并浏览到 `http://localhost:8080`。您应该会看到一个像以下这样的页面：
- en: '![](img/00012.jpeg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00012.jpeg)'
- en: 'Figure 1.8: The default Glassfish web application'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8：默认 Glassfish 网络应用程序
- en: 'This page is located at `glassfish/domains/domain1/docroot/index.html`. Click
    on the go to the Administration Console link in the page to open the GlassFish
    administrator (see the following screenshot):'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 此页面位于 `glassfish/domains/domain1/docroot/index.html`。点击页面上的“转到管理控制台”链接以打开 GlassFish
    管理员（见以下截图）：
- en: '![](img/00013.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00013.jpeg)'
- en: 'Figure 1.9: The Glassfish administrator'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9：Glassfish 管理员
- en: For details on administrating the GlassFish server, refer to [https://javaee.github.io/glassfish/doc/5.0/administration-guide.pdf](https://javaee.github.io/glassfish/doc/5.0/administration-guide.pdf).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 有关管理 GlassFish 服务器详情，请参阅 [https://javaee.github.io/glassfish/doc/5.0/administration-guide.pdf](https://javaee.github.io/glassfish/doc/5.0/administration-guide.pdf)。
- en: To stop the GlassFish Server, run the `stopserv` script in the `glassfish/bin`
    folder.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 要停止 GlassFish 服务器，在 `glassfish/bin` 文件夹中运行 `stopserv` 脚本。
- en: Installing MySQL
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 MySQL
- en: We will be using a MySQL database for many of the examples in this book. The
    following sections describe how to install and configure MySQL for different platforms.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '我们将在本书的许多示例中使用 MySQL 数据库。以下各节描述了如何为不同平台安装和配置 MySQL。 '
- en: We would like to install MySQL Workbench too, which is a client application
    to manage MySQL Server. Download MySQL Workbench from [https://dev.mysql.com/downloads/workbench/](https://dev.mysql.com/downloads/workbench/).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还希望安装 MySQL Workbench，这是一个用于管理 MySQL 服务器的客户端应用程序。从 [https://dev.mysql.com/downloads/workbench/](https://dev.mysql.com/downloads/workbench/)
    下载 MySQL Workbench。
- en: Installing MySQL on Windows
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 MySQL
- en: Download MySQL Community Server from [http://dev.mysql.com/downloads/mysql/](http://dev.mysql.com/downloads/mysql/).
    You can either download the web installer or the all-in-one installer. The web
    installer would download only those components that you have selected. The following
    instructions show the download options using the web installer.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 从 [http://dev.mysql.com/downloads/mysql/](http://dev.mysql.com/downloads/mysql/)
    下载 MySQL Community Server。您可以选择下载网络安装程序或全功能安装程序。网络安装程序只会下载您所选的组件。以下说明使用网络安装程序显示下载选项。
- en: 'The web installer first downloads a small application, and it gives you options
    to select the components that you want to install:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 网络安装程序首先下载一个小应用程序，并为你提供了选择要安装的组件的选项：
- en: 'Select the Custom option and click on Next:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择自定义选项并点击下一步：
- en: '![](img/00014.jpeg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![img/00014.jpeg](img/00014.jpeg)'
- en: 'Figure 1.10: MySQL Installer for Windows'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.10：Windows的MySQL安装程序
- en: 'Select the MySQL Server and MySQL Workbench products and complete the installation.
    During the installation of the server, you will be asked to set the `root` password
    and given the option to add more users. It is always a good idea to add a user
    other than root for applications to use:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择MySQL服务器和MySQL Workbench产品并完成安装。在服务器安装过程中，你将被要求设置`root`密码，并可以选择添加更多用户。为应用程序添加一个非root用户总是个好主意：
- en: '![](img/00015.jpeg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![img/00015.jpeg](img/00015.jpeg)'
- en: 'Figure 1.11: Select MySQL products and features to Install'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.11：选择要安装的MySQL产品和功能
- en: 'Make sure you select All Hosts when adding a user so that you are able to access
    MySQL database from any remote machine that has network access to the machine
    where MySQL is installed:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在添加用户时选择所有主机，这样你就可以从任何有网络访问MySQL安装机器的远程机器访问MySQL数据库：
- en: '![](img/00016.jpeg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![img/00016.jpeg](img/00016.jpeg)'
- en: 'Figure 1.12: Add MySQL user'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.12：添加MySQL用户
- en: Run MySQL Workbench after installation. You will find that the default connection
    to the local MySQL instance is already created for you:![](img/00017.jpeg)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后运行MySQL Workbench。你会发现默认的本地MySQL实例连接已经为你创建好了！![img/00017.jpeg](img/00017.jpeg)
- en: 'Figure 1.13: MySQL Workbench connections'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.13：MySQL Workbench连接
- en: 'Click on the local connection and you will be asked to enter the `root` password.
    Enter the `root` password that you typed during the installation of MySQL Server.
    MySQL Workbench opens and displays the default test schema:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击本地连接，系统会要求你输入`root`密码。输入你在安装MySQL服务器时设置的`root`密码。MySQL Workbench打开并显示默认的测试模式：
- en: '![](img/00018.jpeg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![img/00018.jpeg](img/00018.jpeg)'
- en: 'Figure 1.14: My SQL Workbench'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.14：MySQL Workbench
- en: Installing MySQL on macOS X
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在macOS X上安装MySQL
- en: OS X versions before 10.7 had MySQL Server installed by default. If you are
    using OS X 10.7 or later, then you will need to download and install MySQL Community
    Server from [http://dev.mysql.com/downloads/mysql/](http://dev.mysql.com/downloads/mysql/).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: OS X版本在10.7之前的系统默认安装了MySQL服务器。如果你使用的是OS X 10.7或更高版本，那么你需要从[http://dev.mysql.com/downloads/mysql/](http://dev.mysql.com/downloads/mysql/)下载并安装MySQL社区服务器。
- en: There are many different ways to install MySQL on OS X. See [http://dev.mysql.com/doc/refman/5.7/en/osx-installation.html](http://dev.mysql.com/doc/refman/5.7/en/osx-installation.html)
    for installation instructions for OS X. Note that users on OS X should have administrator
    privileges to install MySQL Server.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在OS X上安装MySQL也有多种不同的方法。有关OS X的安装说明，请参阅[http://dev.mysql.com/doc/refman/5.7/en/osx-installation.html](http://dev.mysql.com/doc/refman/5.7/en/osx-installation.html)。请注意，OS
    X用户在安装MySQL服务器时需要有管理员权限。
- en: 'Once you install the server, you can start it either from Command Prompt or
    from the system preferences:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 安装服务器后，你可以从命令提示符或系统偏好设置中启动它：
- en: 'To start it from Command Prompt, execute the following command in the Terminal:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从命令提示符启动，请在终端中执行以下命令：
- en: '[PRE2]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To start it from System Preferences, open the preferences and click the MySQL
    icon:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从系统偏好设置启动，打开偏好设置并点击MySQL图标：
- en: '![](img/00019.jpeg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![img/00019.jpeg](img/00019.jpeg)'
- en: 'Figure 1.15: MySQL System Preferences - OS X'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.15：MySQL系统偏好设置 - OS X
- en: Click the Start MySQL Server button.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“启动MySQL服务器”按钮。
- en: Installing MySQL on Linux
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux上安装MySQL
- en: There are many different ways to install MySQL on Linux. Refer to [https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html](https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html)
    for details.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上安装MySQL有多种不同的方法。有关详细信息，请参阅[https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html](https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html)。
- en: Creating MySQL users
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建MySQL用户
- en: 'You can create MySQL users either from Command Prompt or by using MySQL Workbench:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从命令提示符或使用MySQL Workbench创建MySQL用户：
- en: 'To execute SQL and other commands from Command Prompt, open the Terminal and
    type the following command:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从命令提示符执行SQL和其他命令，请打开终端并输入以下命令：
- en: '[PRE3]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once logged in successfully, you will see the `mysql` Command Prompt:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录成功后，你会看到`mysql`命令提示符：
- en: '[PRE4]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To create a user, first select the `mysql` database:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建用户，首先选择`mysql`数据库：
- en: '[PRE5]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The preceding command will create a user named `'user1'` with password `'user1_pass'`
    having all privileges, for example to insert, update, and select from the database.
    And because we have specified the host as `'%'`, this user can access the server
    from any host.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将创建一个名为 `'user1'` 的用户，密码为 `'user1_pass'`，拥有所有权限，例如插入、更新和从数据库中选择。而且因为我们指定了主机为
    `'%'`，这个用户可以从任何主机访问服务器。
- en: See [https://dev.mysql.com/doc/refman/5.7/en/adding-users.html](https://dev.mysql.com/doc/refman/5.7/en/adding-users.html)
    for more details on adding users to MySQL database
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 有关将用户添加到 MySQL 数据库的更多详细信息，请参阅[https://dev.mysql.com/doc/refman/5.7/en/adding-users.html](https://dev.mysql.com/doc/refman/5.7/en/adding-users.html)
- en: 'If you prefer a **graphical user interface** (**GUI**) to manage the users,
    then run MySQL Workbench, connect to the local MySQL server (see *Figure 1.13*
    MySQL Workbench connections), and then click on Users and Privileges under the
    Management section:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢使用 **图形用户界面**（**GUI**）来管理用户，那么运行 MySQL Workbench，连接到本地 MySQL 服务器（参见 *图
    1.13* MySQL Workbench 连接），然后在管理部分下点击用户和权限：
- en: '![](img/00020.jpeg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00020.jpeg)'
- en: 'Figure 1.16: Creating a user in MySQL Workbench'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.16：在 MySQL Workbench 中创建用户
- en: Having installed all the preceding products, you should be in a position to
    start developing JEE applications. We may need some additional software, but we
    will see how to install and configure it at the appropriate time.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完所有前面的产品后，你应该能够开始开发 JEE 应用程序。我们可能需要一些额外的软件，但我们将在适当的时候看到如何安装和配置它。
- en: Summary
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we had a brief introduction to different JEE specifications
    for the presentation layer, business layer, and enterprise integration layer.
    We learned some of the important terminologies in Eclipse IDE. We then learned
    how to install Eclipse, Tomcat, Glassfish, MySQL, and MySQL Workbench. We are
    going to use these products in this book to develop JEE applications.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们简要介绍了用于表示层、业务层和企业集成层的不同 JEE 规范。我们学习了 Eclipse IDE 中的一些重要术语。然后我们学习了如何安装
    Eclipse、Tomcat、Glassfish、MySQL 和 MySQL Workbench。我们将在本书中使用这些产品来开发 JEE 应用程序。
- en: In the next chapter, we will configure the JEE server and create a simple application
    using servlets, JSPs, and JSFs. We will also learn how to use Maven to build and
    package the JEE applications.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将配置 JEE 服务器并使用 servlets、JSPs 和 JSFs 创建一个简单应用程序。我们还将学习如何使用 Maven 构建和打包
    JEE 应用程序。
