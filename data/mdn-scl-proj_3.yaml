- en: Stock Price Predictions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 股价预测
- en: The goal of this chapter is to predict the values of near-or long-term equity
    prices by using **machine learning** (**ML**). From an investor's perspective,
    investments (in equity) across several companies are stocks, while such investments
    in an individual company are shares. Most investors lean on a long-term investment
    strategy for the best returns. Investment analysts employ mathematical stock analysis
    models to help predict future stock prices or price movements in the long term.
    Such models factor in past equity prices and other indicators to perform a company's
    financial health evaluation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是通过使用**机器学习**（**ML**）来预测近或长期股票价格的价值。从投资者的角度来看，跨多个公司的投资（在股票中）是股票，而在单个公司的此类投资是股份。大多数投资者倾向于长期投资策略以获得最佳回报。投资分析师使用数学股票分析模型来帮助预测长期未来的股价或价格变动。这些模型考虑过去的股票价格和其他指标来对公司财务状况进行评估。
- en: The overarching learning objective of this chapter is to implement a Scala solution
    that will predict stock market prices. Starting from the stock price prediction
    dataset, we will use the Spark ML library's ML APIs to build a stock price prediction
    pipeline.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要学习目标是实现一个Scala解决方案，用于预测股市价格。从股价预测数据集开始，我们将使用Spark ML库的ML API构建股价预测管道。
- en: 'Here is the dataset we will refer to:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们将参考的数据集：
- en: Daily News for Stock Market Prediction | Kaggle.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 股市预测每日新闻 | Kaggle。
- en: 'In-text: ([Kaggle.com](http://Kaggle.com), 2018) Daily News for Stock Market
    Prediction.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文中引用：([Kaggle.com](http://Kaggle.com), 2018) 股市预测每日新闻。
- en: 'Kaggle. [online] Available at: [https://www.kaggle.com/aaron7sun/stocknews](https://www.kaggle.com/aaron7sun/stocknews)
    [Accessed 27 Jul. 2018].'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kaggle. [在线] 可用：[https://www.kaggle.com/aaron7sun/stocknews](https://www.kaggle.com/aaron7sun/stocknews)
    [访问日期：2018年7月27日]。
- en: 'The following list is a section-wise breakdown of the individual learning outcomes
    in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表是本章各个学习成果的章节划分：
- en: Stock price binary classification problem
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 股价二元分类问题
- en: Getting started
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入门
- en: Implementation objective
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施目标
- en: Stock price binary classification problem
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 股价二元分类问题
- en: Stock prices have a tendency to go up and down. We want to Spark ML and a Spark
    time-series library to explore historical stock price data going back a couple
    years and come up numbers like the average closing price. We also want our stock
    price prediction model to forecast what the stock price will be over the timeframe
    of a few days.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 股价有上涨和下跌的趋势。我们希望使用Spark ML和Spark时间序列库来探索过去几年的历史股价数据，并得出像平均收盘价这样的数字。我们还希望我们的股价预测模型能够预测未来几天股价的变化。
- en: This chapter presents an ML methodology to reduce the complexity associated
    with stock price prediction. We will obtain a smaller set of optimal financial
    indicators by feature selection and employ a Random Forest algorithm to build
    a price prediction pipeline.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了一种ML方法，用于降低与股价预测相关的复杂性。我们将通过特征选择获得一组更小的最优财务指标，并使用随机森林算法构建价格预测管道。
- en: We must first download the dataset from the `ModernScalaProjects_Code` folder.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要从`ModernScalaProjects_Code`文件夹中下载数据集。
- en: Stock price prediction dataset at a glance
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 股价预测数据集概览
- en: 'We will use data from two sources:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用两个来源的数据：
- en: '**Reddit worldnews**'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Reddit worldnews**'
- en: '**Dow Jones Industrial Average** (**DJIA**)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**道琼斯工业平均指数**（**DJIA**）'
- en: 'The *Getting started* section that follows has two clear goals:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的**入门**部分有两个明确的目标：
- en: Moving our development environment into a virtual appliance from a previous
    local Spark shell-centered development environment. This naturally implies setting
    up prerequisite resources.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将我们的开发环境从之前的以本地Spark shell为中心的开发环境迁移到虚拟设备。这自然意味着需要设置先决资源。
- en: Attaining the preceding goal also implies being able to spin up a brand new
    Spark cluster, running inside the virtual appliance.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现上述目标还意味着能够启动一个新的Spark集群，该集群运行在虚拟设备内部。
- en: Getting started
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门
- en: In order to address the goals of this section, we will compile a resource list—a
    list of prerequisite software to be set up—before taking a shot at the first stated
    goal of setting up the **Hortonworks Development Platform** (**HDP**) Sandbox,
    a so-called virtual appliance from the Hortonworks organization. The virtual appliance
    overview section is helpful regarding this.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现本节的目标，我们将在尝试实现第一个目标——设置Hortonworks开发平台（HDP）沙箱之前，编制一个资源列表——一个需要设置的先决软件列表。关于虚拟设备概述部分，这很有帮助。
- en: At its core, the HDP Sandbox is a robust data pipeline development environment.
    This appliance and its supporting ecosystem, like the underlying OS and the virtual
    machine configuration settings, make up the core of the development infrastructure.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在其核心，HDP沙箱是一个强大的数据管道开发环境。这个设备及其支持生态系统，如底层操作系统和虚拟机配置设置，构成了开发基础设施的核心。
- en: 'The following is the resource list—the prerequisite software—that must be set or
    verified before proceeding further:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是需要设置或验证的先决条件资源列表——必须设置的软件：
- en: A 64-bit host machine with support for hardware virtualization. To check for
    processor and motherboard support for virtualization, download and run a small
    utility called SecurAble. BIOS should be enabled or set to support virtualization.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持硬件虚拟化的64位主机机器。要检查处理器和主板对虚拟化的支持，请下载并运行一个名为SecurAble的小工具。BIOS应启用或设置为支持虚拟化。
- en: Host OS Windows 7, 8, or 10, macOS.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机操作系统Windows 7、8或10，macOS。
- en: Compatible browsers such as Internet Explorer 9, stable versions of Mozilla
    Firefox, Google Chrome, or Opera.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 兼容的浏览器，如Internet Explorer 9、Mozilla Firefox的稳定版本、Google Chrome或Opera。
- en: At least 16 GB of RAM on the host machine.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机机器至少16GB的RAM。
- en: Supported virtualization applications need to be installed, such as Oracle VirtualBox
    Version 5.1 or above (this is our preferred virtualization application) or VMWare
    Fusion.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要安装的受支持的虚拟化应用程序，例如Oracle VirtualBox版本5.1或更高版本（这是我们首选的虚拟化应用程序）或VMWare Fusion。
- en: The HDP Sandbox download file. This file is delivered as a virtual appliance
    with the **Open Virtualization Format Archive** (**OVA**) file.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HDP沙箱下载文件。此文件以**开放虚拟化格式存档**（OVA）文件的形式交付。
- en: In the next section, we will review the prerequisites on our resources list.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将审查资源列表中的先决条件。
- en: Support for hardware virtualization
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 硬件虚拟化支持
- en: 'Grab a copy of SecurAble from the `ModernScalaProjects_Code` folder. SecurAble
    is a small program that is able to tell you the following about your machine''s
    processor:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 从`ModernScalaProjects_Code`文件夹中获取SecurAble的副本。SecurAble是一个能够告诉你关于你的机器处理器的以下信息的程序：
- en: Confirm the presence or absence of 64-bit instructions on your host machine
    processor
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确认主机机器处理器上是否存在64位指令
- en: Whether there is hardware support for virtualization
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有硬件虚拟化支持
- en: 'To determine the preceding prerequisites, SecurAble will not make any changes
    to your machine. On running the SecurAble application file, it will present a
    screen that should like the following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确定前面的先决条件，SecurAble不会对你的机器进行任何更改。在运行SecurAble应用程序文件时，它将显示一个类似于以下截图的屏幕：
- en: '![](img/c6352373-6f3a-44a7-b6f9-be17bb709f73.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c6352373-6f3a-44a7-b6f9-be17bb709f73.jpg)'
- en: Screenshot of screen on running the SecurAble application file
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 运行SecurAble应用程序文件的屏幕截图
- en: 'Clicking on 64 Maximum Bit Length makes SecurAble return the presence or absence
    of 64-bit processing, as shown in the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 点击64最大位长度，SecurAble将返回64位处理的存或不存在，如下截图所示：
- en: '![](img/98ad62c6-8210-48e6-b6f0-6c27a12e2241.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/98ad62c6-8210-48e6-b6f0-6c27a12e2241.jpg)'
- en: Screenshot of window displaying the presence or absence of 64-bit processing
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 显示64位处理存在或不存在窗口截图
- en: 'The chipset on my Windows 64-bit machine is confirmed as offering a 64-bit
    mode of operation. Next, clicking on Yes Hardware Virtualization makes SecurAble
    report back that my processor does offer hardware support for virtualization,
    as shown in the following screenshot:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我的Windows 64位机器上的芯片组已确认提供64位操作模式。接下来，点击“是，硬件虚拟化”，SecurAble将报告我的处理器确实提供了硬件虚拟化支持，如下截图所示：
- en: '![](img/e4646632-5d0b-4225-ba81-fd91ffe0464a.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e4646632-5d0b-4225-ba81-fd91ffe0464a.jpg)'
- en: Screenshot of window displaying the hardware support for virtualization on SecurAble
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 显示SecurAble上虚拟化硬件支持的窗口截图
- en: If SecurAble reports back with the exact same results on your machine, it is
    likely that you have a host machine that can support Oracle VirtualBox. Note that
    at the BIOS level, support for virtualization is likely already set. If that is
    not the case, enable it. Note that SecurAble won't be able to report on BIOS support
    for the virtualization feature.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 SecurAble 在您的机器上报告了完全相同的结果，那么您可能有一个可以支持 Oracle VirtualBox 的主机机器。请注意，在 BIOS
    级别，虚拟化的支持可能已经设置。如果不是这种情况，请启用它。请注意，SecurAble 将无法报告 BIOS 对虚拟化功能的支持。
- en: Ensure that the preceding prerequisites are satisfied before moving further.
    Next, take up prerequisite which is regarding installing a supported virtualization
    application that is able to host a virtual appliance.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，请确保满足先前的先决条件。接下来，考虑安装一个能够托管虚拟设备的受支持的虚拟化应用程序的先决条件。
- en: Installing the supported virtualization application
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装受支持的虚拟化应用程序
- en: 'The following are the steps to install the virtualization application:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下安装虚拟化应用程序的步骤：
- en: 'Download the latest VirtualBox binaries from the Oracle VirtualBox website:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Oracle VirtualBox 网站下载最新的 VirtualBox 二进制文件：
- en: '![](img/38462476-3e66-4f26-a1db-fbb92e065eef.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![放置文件夹步骤截图](img/38462476-3e66-4f26-a1db-fbb92e065eef.jpg)'
- en: Screenshot of latest VirtualBox binaries
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 最新 VirtualBox 二进制文件截图
- en: 'Double-click on the Oracle VirtualBox binary. The setup welcome screen presents
    itself as follows:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 Oracle VirtualBox 二进制文件。设置欢迎屏幕如下所示：
- en: '![](img/78887793-15ca-4780-9259-a579404a7e84.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![取消自动捕获键盘选项截图](img/78887793-15ca-4780-9259-a579404a7e84.jpg)'
- en: Screenshot of the setup window
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 设置窗口的截图
- en: 'Click Next on the welcome screen. In the new screen that presents itself, select
    where you want VirtualBox to be installed:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在欢迎屏幕上点击“下一步”。在随后出现的屏幕上，选择您希望 VirtualBox 安装的位置：
- en: '![](img/44c5ddb2-99d9-4963-8866-43869afebbc8.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![下载沙盒文件截图](img/44c5ddb2-99d9-4963-8866-43869afebbc8.jpg)'
- en: Screenshot of setup steps to place the folder
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 放置文件夹的设置步骤截图
- en: 'Click OK to move on to the Ready to Install screen:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“确定”以进入“准备安装”屏幕：
- en: '![](img/14ca56f5-5bd2-4ea7-b6de-0b37c81ea584.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![设置虚拟机步骤截图](img/14ca56f5-5bd2-4ea7-b6de-0b37c81ea584.jpg)'
- en: Screenshot of Ready for installation screen
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 准备安装屏幕截图
- en: 'Click Install and complete any self-explanatory steps needed to complete the
    installation. Once this process is complete, place a shortcut on your taskbar
    or on the desktop. Now, launch the VirtualBox application, as follows:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“安装”并完成任何说明性的步骤以完成安装。此过程完成后，在任务栏或桌面上放置一个快捷方式。现在，按照以下方式启动 VirtualBox 应用程序：
- en: '![](img/6b765c50-c700-491f-82c0-b17aa422ac08.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![SecurAble 报告截图](img/6b765c50-c700-491f-82c0-b17aa422ac08.jpg)'
- en: Screenshot of Ready for launch of VirtualBox application
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: VirtualBox 应用程序准备启动的截图
- en: 'You may optionally remove the inaccessible machines `vm`, `vm_1`, and `CentOS` as
    follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择以下方式删除无法访问的机器 `vm`、`vm_1` 和 `CentOS`：
- en: '![](img/1a4b82b1-ceac-4aff-a859-8e3de5932f1f.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![磁盘映像截图](img/1a4b82b1-ceac-4aff-a859-8e3de5932f1f.jpg)'
- en: Screenshot displaying how to remove the inaccessible machines
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 展示如何删除无法访问的机器的截图
- en: 'Next, deselect the Auto Capture Keyboard option under File | Preferences...
    | Input:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在文件 | 首选项... | 输入下取消选中“自动捕获键盘”选项：
- en: '![](img/4015e2d1-672c-4b18-b531-f9a6bdf3f5bd.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![启动 VirtualBox 应用程序截图](img/4015e2d1-672c-4b18-b531-f9a6bdf3f5bd.jpg)'
- en: Screenshot of final steps to set the virtual machine
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 设置虚拟机的最终步骤截图
- en: The virtual machine is now all set. In the next step, we will download and import
    the Sandbox into it.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机现在已全部设置。在下一步中，我们将下载并将沙盒导入其中。
- en: Downloading the HDP Sandbox and importing it
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载 HDP 沙盒并导入
- en: 'The following are the steps to download the HDP Sandbox:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下下载 HDP 沙盒的步骤：
- en: Head over to [https://hortonworks.com/downloads/#sandbox](https://hortonworks.com/downloads/#sandbox)
    and download the Hortonworks Sandbox virtual appliance file.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 [https://hortonworks.com/downloads/#sandbox](https://hortonworks.com/downloads/#sandbox)
    并下载 Hortonworks 沙盒虚拟设备文件。
- en: 'Move the Sandbox virtual appliance file into a convenient location on your
    host machine. Perform the following click actions in sequence: File | Import Appliance....
    Then, choose a virtual appliance file to import, which thereby imports the respective
    disk image:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将沙盒虚拟设备文件移动到主机机器上的一个方便位置。按照以下顺序执行以下点击操作：文件 | 导入设备... 然后，选择要导入的虚拟设备文件，从而导入相应的磁盘映像：
- en: '![](img/36c85b5d-81cc-40e5-85cc-c524d8bec275.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![取消自动捕获键盘选项截图](img/36c85b5d-81cc-40e5-85cc-c524d8bec275.jpg)'
- en: Steps to be performed to import the disk image
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 导入磁盘映像需要执行的步骤
- en: 'Next, let''s tweak Appliance settings in the Appliance settings screen. Make
    sure you increase the available RAM to at least `10000 MB`. Leave the other default
    settings intact and click Import:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们在设备设置屏幕中调整设备设置。确保您将可用RAM增加到至少 `10000 MB`。保留其他默认设置，然后点击导入：
- en: '![](img/3f0a0b95-dcee-483d-8ad0-b610adadb9a2.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3f0a0b95-dcee-483d-8ad0-b610adadb9a2.jpg)'
- en: Screenshot to import the virtual appliance into Oracle VirtualBox
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 将虚拟设备导入Oracle VirtualBox的截图
- en: The virtual appliance has now been imported into Oracle VirtualBox. The following
    section offers a brief overview of the Hortonworks Sandbox virtual appliance.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟设备现在已导入到Oracle VirtualBox中。以下部分提供了Hortonworks Sandbox虚拟设备的简要概述。
- en: Hortonworks Sandbox virtual appliance overview
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hortonworks Sandbox虚拟设备概述
- en: 'The Hortonworks Sandbox is a virtual machine, or virtual appliance, which is
    delivered as a file with an `.ova` or `.ovf` extension. It appears as a bare machine
    to the host OS, and has the following components:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Hortonworks Sandbox是一个虚拟机或虚拟设备，以 `.ova` 或 `.ovf` 扩展名的文件形式提供。它对主机操作系统表现为裸机，并具有以下组件：
- en: A guest operating system that is treated as an application by the underlying
    host operating system
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被底层主机操作系统视为应用程序的客户端操作系统
- en: The virtual appliance file we want is an `.ova` file, which is available in
    the `ModernScalaProjects_Code` folder under the virtual machines folder
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们想要的虚拟设备文件是一个 `.ova` 文件，它位于虚拟机文件夹下的 `ModernScalaProjects_Code` 文件夹中
- en: Applications that run in the guest OS
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在虚拟操作系统上运行的应用程序
- en: All that being said, we are done setting up prerequisites. Let's run the virtual
    machine for the first time.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如此一来，我们已完成了先决条件的设置。现在让我们第一次运行虚拟机。
- en: Turning on the virtual machine and powering up the Sandbox
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打开虚拟机并启动Sandbox
- en: 'Let''s take a look at the following steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看以下步骤：
- en: 'Run the Oracle VirtualBox startup icon. The startup screen with a powered-off
    Sandbox appears as follows:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行Oracle VirtualBox启动图标。以下是这样显示关闭电源的Sandbox的启动屏幕：
- en: '![](img/3841319e-0437-4b64-bc01-4c0944734c92.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3841319e-0437-4b64-bc01-4c0944734c92.jpg)'
- en: Screenshot of the startup screen with a powered-off Sandbox
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭电源的Sandbox启动屏幕截图
- en: The startup screen displays the updated Hortonworks Sandbox virtual appliance
    with its updated configuration. For example, our Base Memory is now 10000 MB.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 启动屏幕显示了更新后的Hortonworks Sandbox虚拟设备及其更新后的配置。例如，我们的基本内存现在是10000 MB。
- en: 'Next, right-click on the Sandbox and click Start | Normal Start:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在Sandbox上右键单击并选择“开始”|“正常启动”：
- en: '![](img/6bc43418-3871-4240-828a-3a3bada41dd9.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6bc43418-3871-4240-828a-3a3bada41dd9.jpg)'
- en: Screenshot of steps to be performed to get started
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 开始步骤的截图
- en: 'If everything went well, you should see the following Hortonworks Docker Sandbox
    HDP [Running] screen:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，您应该会看到以下Hortonworks Docker Sandbox HDP [运行中]屏幕：
- en: '![](img/dffcce19-8e3c-449c-a4b9-16806bec2a68.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dffcce19-8e3c-449c-a4b9-16806bec2a68.jpg)'
- en: Screenshot of Hortonworks Docker Sandbox HDP [Running]
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Hortonworks Docker Sandbox HDP [运行中]的截图
- en: 'We want to log in to the Sandbox. *Alt* + *F5* takes you to the `sandbox-host
    login` screen as follows:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们想要登录到Sandbox。*Alt* + *F5* 将您带到以下 `sandbox-host login` 登录屏幕：
- en: '![](img/a81c4253-3350-4e5e-9900-922a7065e3b1.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a81c4253-3350-4e5e-9900-922a7065e3b1.jpg)'
- en: Screenshot displaying how to log in to the Sandbox
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 展示如何登录Sandbox的截图
- en: Sign in as `root` with a `Password` of `hadoop`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `root` 用户名和 `hadoop` 密码登录。
- en: 'Edit the `hosts` file, and map `127.0.0.1` to `sandbox-hdp.hortonworks.com`.
    On a Windows (host) machine, this is located under `C:\Windows\System32\drivers\etc`:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 `hosts` 文件，将 `127.0.0.1` 映射到 `sandbox-hdp.hortonworks.com`。在Windows（主机）机器上，此文件位于
    `C:\Windows\System32\drivers\etc`：
- en: '![](img/4fb175e9-84a1-487d-a01d-ee543d6c2878.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4fb175e9-84a1-487d-a01d-ee543d6c2878.jpg)'
- en: Screenshot displaying editing of host files
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 显示编辑主机文件的截图
- en: Save the updated `hosts` file and verify that these changes took effect before
    loading the URL as `sandbox-hdp.hortonworks.com:8888` in the browser.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存更新的 `hosts` 文件，并在浏览器中加载URL `sandbox-hdp.hortonworks.com:8888` 之前验证这些更改是否生效。
- en: 'Next, load the URL as `sandbox-hdp.hortonworks.com:4200` in your browser to
    launch the Sandbox web client. Change the default password from `hadoop` to something
    else. Note that the virtual appliance runs a CentOS Linux guest OS:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在您的浏览器中加载URL `sandbox-hdp.hortonworks.com:4200` 以启动Sandbox网页客户端。将默认密码从 `hadoop`
    改为其他密码。请注意，虚拟设备运行的是CentOS Linux虚拟操作系统：
- en: '![](img/d9b477bd-83dd-414d-8a1b-2ff2d272b8f2.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d9b477bd-83dd-414d-8a1b-2ff2d272b8f2.jpg)'
- en: Screenshot to launch the Sandbox web client
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 启动Sandbox网页客户端的截图
- en: In the next section, we will set up an SSH client for transferring files between
    the Sandbox and your local (host) machine.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将设置一个SSH客户端，用于在沙盒和您的本地（主机）机器之间传输文件。
- en: Setting up SSH access for data transfer between Sandbox and the host machine
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置沙盒和主机机器之间数据传输的SSH访问
- en: '**SSH** stands for **Secure Shell**. We want to set up the SSH network protocol
    to establish a remote login and secure file transfers between our host machine
    and a virtual machine that''s running the virtual appliance.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**SSH** 代表 **Secure Shell**。我们想要设置SSH网络协议，以在主机机器和运行虚拟应用的虚拟机之间建立远程登录和安全的文件传输。'
- en: 'Two steps need to be followed:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 需要遵循两个步骤：
- en: Set up PuTTY, a third-party SSH and Telnet client
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置PuTTY，一个第三方SSH和Telnet客户端
- en: Set up WinSCP, a **Secure File Transfer Protocol** (**SFTP**) client for Windows
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置WinSCP，一个Windows的 **Secure File Transfer Protocol** (**SFTP**) 客户端
- en: Setting up PuTTY, a third-party SSH and Telnet client
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置PuTTY，一个第三方SSH和Telnet客户端
- en: 'Let''s take a look at the following installation steps of PuTTY:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看以下PuTTY的安装步骤：
- en: 'The PuTTY installer, `putty-64bit-0.70-installer.exe`, is available in the
    `ModernScalaProjects_Code` folder. You can run it by double-clicking on the installer
    icon as follows:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PuTTY安装程序 `putty-64bit-0.70-installer.exe` 可在 `ModernScalaProjects_Code` 文件夹中找到。您可以通过双击安装器图标来运行它，如下所示：
- en: '![](img/b9cd6719-e2a4-409c-b1a5-89b814ba7a69.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b9cd6719-e2a4-409c-b1a5-89b814ba7a69.jpg)'
- en: PuTTY installer icon
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: PuTTY安装器图标
- en: 'Choose a destination folder to install PuTTY into and click Next:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要安装PuTTY的目标文件夹并点击下一步：
- en: '![](img/cb23ddf9-66f4-47e4-b8a3-c419bccffd8c.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cb23ddf9-66f4-47e4-b8a3-c419bccffd8c.jpg)'
- en: Screenshot to Install PuTTY
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 安装PuTTY的截图
- en: 'Select or deselect any product features you want to be installed:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择或取消选择您想要安装的任何产品功能：
- en: '![](img/aaa00e57-da33-40c6-9f9a-20466d7be783.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/aaa00e57-da33-40c6-9f9a-20466d7be783.jpg)'
- en: Screenshot of list of product features
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 产品功能列表的截图
- en: 'Next, click Install. PuTTY and other supporting utilities will be installed:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击安装。PuTTY和其他支持工具将被安装：
- en: '![](img/124219fe-a14f-4978-9fd3-a68692da595c.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/124219fe-a14f-4978-9fd3-a68692da595c.jpg)'
- en: Screenshot of PuTTY and supporting utilities being installed
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: PuTTY和支持工具安装的截图
- en: 'Run PuTTYgen. On the PuTTY Key Generator screen, press the Generate button
    and follow the onscreen instructions. Click on the Save public key button and
    save the generated public key into a file called `authorized_keys` in a convenient
    location, but not before typing in a passphrase:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行PuTTYgen。在PuTTY密钥生成器屏幕上，按生成按钮并遵循屏幕上的说明。点击保存公钥按钮并将生成的公钥保存到名为 `authorized_keys`
    的文件中，保存到方便的位置，但在输入密码短语之前：
- en: '![](img/1610be45-722e-4f37-965b-8e362cf93585.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1610be45-722e-4f37-965b-8e362cf93585.jpg)'
- en: Screenshot of steps to be performed after running PuTTY Key Generator
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 运行PuTTY密钥生成器后要执行的步骤截图
- en: 'Click on Save private key, which is marked by 3 in the preceding screenshot.
    This will let you save your private key in a convenient location. This could be
    the same as the public key location, as follows:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存私钥，如前一个截图中的3所示。这将允许您在方便的位置保存您的私钥。这可以与公钥位置相同，如下所示：
- en: '![](img/302e7c1f-0e73-423f-9a23-4b86e78e68ea.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/302e7c1f-0e73-423f-9a23-4b86e78e68ea.jpg)'
- en: Screenshot of private key being saved in a convenient location
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥在方便位置保存的截图
- en: 'At this point, we want to upload the public key to our Sandbox. Start up the
    Sandbox, and then load the Sandbox web client like we did earlier. Carry out steps
    1, 2, 3, and 4, as shown in the following screenshot. The public key is saved
    as `authorized_key`:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这一点上，我们希望将公钥上传到我们的沙盒。启动沙盒，然后加载沙盒网页客户端，就像我们之前做的那样。按照以下截图中的步骤执行1、2、3和4。公钥保存为
    `authorized_key`：
- en: '![](img/e984d752-f20c-4754-bc3b-c428dd7b3e8b.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e984d752-f20c-4754-bc3b-c428dd7b3e8b.jpg)'
- en: Screenshot displaying the upload of public key to our Sandbox
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 展示将公钥上传到我们的沙盒的截图
- en: Dismiss PuTTYgen with File | Exit.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用文件 | 退出关闭PuTTYgen。
- en: 'Open PuTTY and click on Session. We want to create and save a session. Follow
    the numbers in the following screenshot to set it up:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开PuTTY并点击会话。我们想要创建并保存一个会话。按照以下截图中的数字设置它：
- en: Click on Session and select Logging
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击会话并选择记录
- en: Enter Host Name as our Sandbox
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将主机名输入为我们的沙盒
- en: Enter Port as `2222`
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入端口为 `2222`
- en: Then click on button Save
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后点击按钮保存
- en: '![](img/fd63a21b-3f05-47a8-809d-31d13c5b1be1.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fd63a21b-3f05-47a8-809d-31d13c5b1be1.jpg)'
- en: Screenshot displaying the steps to be performed for creating and saving the
    session
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 展示创建和保存会话步骤的截图
- en: 'Save the session as `sandbox-hdp.hortonworks.com` (saved sessions) by clicking
    Save. Next, click on Data under Connection and enter the login name of the Sandbox.
    Do not click Open yet:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击保存将会话保存为`sandbox-hdp.hortonworks.com`（已保存的会话）。接下来，在连接下点击数据并输入沙盒的登录名。现在不要点击打开：
- en: '![](img/601f33bc-0c9d-4d5f-ad13-ff6013d7fc9a.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/601f33bc-0c9d-4d5f-ad13-ff6013d7fc9a.jpg)'
- en: Screenshot showing the steps to be performed after saving the session
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 保存会话后的步骤截图
- en: 'After entering the Auto-login username, click on Connection | SSH | Auth |Load
    the private key after clicking on Browse.... Load the private key and click Open.
    This should establish an SSH connection with the Sandbox:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在输入自动登录用户名后，点击连接 | SSH | 认证 | 在点击浏览...后加载私钥。加载私钥并点击打开。这应该会与沙盒建立SSH连接：
- en: '![](img/f0ec68f9-32e4-40d2-9688-d48bd05adeea.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/f0ec68f9-32e4-40d2-9688-d48bd05adeea.jpg)'
- en: Screenshot of steps to be performed after entering the Auto-login username
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 输入自动登录用户名后的步骤截图
- en: 'Let''s recap and summarize the steps we took so far to set up PuTTY, a third-party
    SSH and Telnet client, and hence SSH access for data transfer between the Sandbox
    and the host machine:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾并总结到目前为止我们为设置PuTTY（一个第三方SSH和Telnet客户端）以及沙盒和主机机之间数据传输的SSH访问所采取的步骤：
- en: Click on Session. Enter the hostname under the Host Name (or IP address) field
    of the Sandbox virtual appliance and then select the appropriate SSH protocol. Moving
    on, navigate to Connection | Data and enter your login name for the Sandbox in
    the auto-login box.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击会话。在沙盒虚拟设备的主机名（或IP地址）字段下输入主机名，然后选择适当的SSH协议。继续，导航到连接 | 数据并在自动登录框中输入沙盒的登录名。
- en: Then, navigate to Connection | SSH | Auth | Load the private key.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，导航到连接 | SSH | 认证 | 加载私钥。
- en: Finally, click on Session. Load the saved session and click Save; this updates
    the session.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击会话。加载保存的会话并点击保存；这会更新会话。
- en: WinSCP is a popular graphical SSH client for Windows that makes it easy to transfer
    files between the local (host) machine and the Sandbox. Let's set up WinSCP now.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: WinSCP是一个流行的Windows图形SSH客户端，它使得在本地（主机）机器和沙盒之间传输文件变得容易。现在让我们设置WinSCP。
- en: Setting up WinSCP, an SFTP client for Windows
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置WinSCP，一个Windows的SFTP客户端
- en: 'The following steps explain how to set up WinSCP:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤解释了如何设置WinSCP：
- en: 'The WinSCP binary file is available under the `ModernScalaProjects_Code` folder.
    Download it and run it. Once installed, launch WinSCP for the very first time.
    The Login screen presents itself as follows:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WinSCP的二进制文件位于`ModernScalaProjects_Code`文件夹下。下载它并运行。安装完成后，首次启动WinSCP。登录屏幕如下所示：
- en: '![](img/9006aee6-6271-4f80-8ae2-f8b154a3cc9a.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/9006aee6-6271-4f80-8ae2-f8b154a3cc9a.jpg)'
- en: Screenshot of the login screen
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 登录屏幕截图
- en: 'Click on New Site, making sure that the File protocol is SFTP, and under Host
    name, you may enter the Sandbox hostname. Change the port from `22` to `2222`.
    You might want to enter `root` under User name and the Password for the Sandbox
    WebClient. Next, click 6, which takes us to the Advanced Site Settings screen:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 点击新建站点，确保文件协议是SFTP，并在主机名下输入沙盒主机名。将端口从`22`改为`2222`。您可能想在用户名下输入`root`和沙盒Web客户端的密码。接下来，点击6，这会带我们到高级站点设置屏幕：
- en: '![](img/6943e276-a0a3-42b6-a922-45d1930b350a.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/6943e276-a0a3-42b6-a922-45d1930b350a.jpg)'
- en: Screenshot of Advanced Site Settings screen
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 高级站点设置屏幕截图
- en: In the preceding Advanced Site Settings screen, drill down to Authentication
    under SSH and load the private key file. Click OK.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在先前的高级站点设置屏幕中，钻到SSH下的认证并加载私钥文件。点击确定。
- en: 'Now, launch WinSCP again. Clicking on Login should establish a connection with
    the Sandbox and you should be able to transfer files back and forth as follows:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，再次启动WinSCP。点击登录应该会与沙盒建立连接，您应该能够如下进行文件传输：
- en: '![](img/4e3f6445-5320-454a-9c0b-fd6dce9770c2.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/4e3f6445-5320-454a-9c0b-fd6dce9770c2.jpg)'
- en: Screenshot showing Sandbox being able to transfer files back and forth
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 显示沙盒能够双向传输文件的截图
- en: 'After the connection is established, the resulting screen should look as follows:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接建立后，结果屏幕应该如下所示：
- en: '![](img/ec691a8b-bdd3-48c8-9246-3e51969c1016.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/ec691a8b-bdd3-48c8-9246-3e51969c1016.jpg)'
- en: Screenshot of screen after the connection is establiashed
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 连接建立后的屏幕截图
- en: In the next step, we will move on to Sandbox configuration updates.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将继续进行沙盒配置更新。
- en: Updating the default Python required by Zeppelin
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新Zeppelin所需的默认Python
- en: 'The Sandbox boasts a fully-fledged Spark development environment with one notable
    difference from our previous local Spark development environment: Zeppelin Notebook.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 沙盒拥有一个完整的 Spark 开发环境，与之前我们本地的 Spark 开发环境有一个显著的不同：Zeppelin Notebook。
- en: What is Zeppelin?
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Zeppelin？
- en: 'Zeppelin is a web-based notebook that has the following features:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: Zeppelin 是一个基于 Web 的笔记本，具有以下功能：
- en: Data exploration
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据探索
- en: Interactive data analysis
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交互式数据分析
- en: Data visualization and interactive dashboards
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据可视化和交互式仪表板
- en: Collaborative document sharing
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协作文档共享
- en: 'Zeppelin depends on Python 2.7 or above, but the Sandbox itself only supports
    Version 2.6\. Therefore, we are going to have to replace 2.6 with 2.7\. Before
    we go any further, let''s check our Python version:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: Zeppelin 依赖于 Python 2.7 或更高版本，但沙盒本身仅支持版本 2.6。因此，我们将不得不用 2.7 替换 2.6。在我们继续之前，让我们检查我们的
    Python 版本：
- en: '![](img/5db67030-9dda-4741-9af2-57ba019d1831.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5db67030-9dda-4741-9af2-57ba019d1831.jpg)'
- en: Screenshot displaying the python version
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 展示 Python 版本的截图
- en: That's right! We need to get rid of Python 2.6 with Python 2.7 and bring the
    Notebook up to date.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 没错！我们需要用 Python 2.7 替换 Python 2.6，并将 Notebook 更新到最新版本。
- en: 'The steps to accomplish this are summarized as follows:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此任务的步骤总结如下：
- en: Set up the Anaconda data science environment. You can simply set up a lighter
    version of Anaconda, which would be Miniconda with Python 2.7\. Miniconda brings
    with it many popular data science packages.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Anaconda 数据科学环境。您可以简单地设置一个较轻的 Anaconda 版本，即带有 Python 2.7 的 Miniconda。Miniconda
    带来了许多流行的数据科学包。
- en: Set up any packages that do not come packaged with Miniconda. Make sure that
    you have SciPy, NumPy, Matplotlib, and Pandas. Sometimes, we can simply pass a
    Spark/Scala `DataFrame` into Python on Pyspark to produce visualizations quickly.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Miniconda 没有打包的任何包。确保您有 SciPy、NumPy、Matplotlib 和 Pandas。有时，我们只需将 Spark/Scala
    的 `DataFrame` 直接传递到 Pyspark 中的 Python，就可以快速生成可视化。
- en: 'Work through the following steps:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤进行操作：
- en: 'The first step is to download the installer for Miniconda and run it as follows:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是下载 Miniconda 的安装程序并按照以下方式运行：
- en: '![](img/75c0d8e1-6dcc-48a5-9d37-70b63f5c5601.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/75c0d8e1-6dcc-48a5-9d37-70b63f5c5601.jpg)'
- en: Screenshot displaying the installer for Miniconda
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 展示 Miniconda 安装程序的截图
- en: Go through the installation process. It is straightforward. Once the installation
    is complete, restart the web client to allow changes to take effect. Now, log
    back in to the Sandbox with `root` and your secret password.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 通过安装过程。这很简单。安装完成后，重新启动 Web 客户端以允许更改生效。现在，使用 `root` 和您的秘密密码登录沙盒。
- en: 'To check whether we do have a new, upgraded Python, issue the `python` command
    as follows:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查我们是否真的有一个新的、升级后的 Python，请按照以下方式发出 `python` 命令：
- en: '![](img/ade5b58a-f703-45a8-91cc-d4555dd7ee05.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ade5b58a-f703-45a8-91cc-d4555dd7ee05.jpg)'
- en: Screenshot displaying how to issue the Python command
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 展示如何发出 Python 命令的截图
- en: 'Voila! We have a new Python version: 2.7.14.'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！我们有了新的 Python 版本：2.7.14。
- en: In the next section, we will update the Zeppelin instance using curl.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将使用 curl 更新 Zeppelin 实例。
- en: Updating our Zeppelin instance
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新我们的 Zeppelin 实例
- en: 'Following steps need to be performed to update the Zeppelin instance:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 需要执行以下步骤来更新 Zeppelin 实例：
- en: Install curl, if not installed already
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果尚未安装，请安装 curl
- en: Update your Zeppelin instance with the latest and greatest notebooks from Hortonworks
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Hortonworks 的最新和最好的笔记本更新您的 Zeppelin 实例
- en: 'Please follow the steps to install curl:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照以下步骤安装 curl：
- en: 'Run the `curl --help` command:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `curl --help` 命令：
- en: '![](img/39a6a4f1-ddd3-4c87-81f6-b271905e999d.jpg)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/39a6a4f1-ddd3-4c87-81f6-b271905e999d.jpg)'
- en: Screenshot displaying how to run the curl --help command
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 展示如何运行 curl --help 命令的截图
- en: 'The `curl --help` command confirms that we have curl already installed. Let''s
    try updating Zeppelin now:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`curl --help` 命令确认我们已经安装了 curl。现在让我们尝试更新 Zeppelin：'
- en: '![](img/edd0d588-9d88-4e27-9ff2-0eb9e9b52f1c.jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/edd0d588-9d88-4e27-9ff2-0eb9e9b52f1c.jpg)'
- en: Screenshot displaying updating of Zeppelin
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 展示更新 Zeppelin 的截图
- en: 'Run the `curl` command to update the Zeppelin instance with the latest notebooks.
    The following screenshot shows the updated Zeppelin instance:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `curl` 命令以使用最新的笔记本更新 Zeppelin 实例。以下截图显示了更新后的 Zeppelin 实例：
- en: '![](img/43cee218-3c22-4bbb-a681-84cdac45c925.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/43cee218-3c22-4bbb-a681-84cdac45c925.jpg)'
- en: Screenshot displaying updated Zeppelin instance
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 展示更新后的 Zeppelin 实例的截图
- en: Now, let's go back to `hdp.hortonworks.com:8888`.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回到 `hdp.hortonworks.com:8888`。
- en: Launching the Ambari Dashboard and Zeppelin UI
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动 Ambari 仪表板和 Zeppelin UI
- en: 'The following are the steps required to launch Ambari and Zeppelin:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Ambari 和 Zeppelin 所需的步骤如下：
- en: 'Click on the Launch Dashboard button and log in as `maria_dev` to navigate
    to the Ambari dashboard:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击启动仪表板按钮，以 `maria_dev` 身份登录以导航到 Ambari 仪表板：
- en: '![](img/30ad3895-24be-4834-a82a-ece2df5e729f.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/30ad3895-24be-4834-a82a-ece2df5e729f.jpg)'
- en: Screenshot displaying navigation through the Ambari dashboard
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 展示在 Ambari 仪表板中导航的截图
- en: 'Clicking on Zeppelin UI under Quick Links takes us to the Zeppelin UI, as follows:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击快速链接下的 Zeppelin UI 将带我们到 Zeppelin UI，如下所示：
- en: '![](img/da934061-8dce-4d70-8ccd-95f115900051.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/da934061-8dce-4d70-8ccd-95f115900051.jpg)'
- en: Screendhot of Zeppelin UI page
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: Zeppelin UI 页面的截图
- en: The Zeppelin UI runs on port `9995`. For our Zeppelin Notebook to work with
    Spark 2 and Python 2.7, the Spark and Python interpreters need updating.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: Zeppelin UI 在端口 `9995` 上运行。为了使我们的 Zeppelin Notebook 与 Spark 2 和 Python 2.7 一起工作，需要更新
    Spark 和 Python 解释器。
- en: Updating Zeppelin Notebook configuration by adding or updating interpreters
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过添加或更新解释器来更新 Zeppelin Notebook 配置
- en: 'The following steps need to be performed to update the Zeppelin notebook:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 Zeppelin Notebook 需要执行以下步骤：
- en: We need to update the interpreters, including a Spark 2 interpreter and adding
    a Python interpreter.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要更新解释器，包括 Spark 2 解释器，并添加 Python 解释器。
- en: 'On the Zeppelin UI page, click on anonymous | Interpreter as follows:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Zeppelin UI 页面上，点击匿名 | 解释器，如下所示：
- en: '![](img/7b9e55d1-2aae-4352-91f5-ce4e9360639a.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7b9e55d1-2aae-4352-91f5-ce4e9360639a.jpg)'
- en: Screenshot to perform steps on the Zeppelin UI page
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Zeppelin UI 页面上执行步骤的截图
- en: Clicking on the Interpreter link takes us to the interpreter's page. First,
    we will update the Spark 2 interpreter.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 点击解释器链接将带我们到解释器页面。首先，我们将更新 Spark 2 解释器。
- en: Updating a Spark 2 interpreter
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新 Spark 2 解释器
- en: 'The following are the steps involved in updating the Spark 2 interpreter:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 Spark 2 解释器的步骤如下：
- en: 'We will update the `SPARK_HOME` property as follows:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将按以下方式更新 `SPARK_HOME` 属性：
- en: '![](img/afb6b94a-5835-40ab-bb4d-9097afd44429.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/afb6b94a-5835-40ab-bb4d-9097afd44429.jpg)'
- en: Screenshot displaying how to update the SPARK_HOME property
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 展示如何更新 SPARK_HOME 属性的截图
- en: 'Next, we will update the `zeppelin.pyspark.python` property to point to the
    new Python interpreter:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将更新 `zeppelin.pyspark.python` 属性，使其指向新的 Python 解释器：
- en: '![](img/3ed9b87c-c188-43e2-874b-2b711f73adfb.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3ed9b87c-c188-43e2-874b-2b711f73adfb.jpg)'
- en: Screenshot displaying how to update the zeppelin.pyspark.python property
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 展示如何更新 `zeppelin.pyspark.python` 属性的截图
- en: 'Next, let''s create a new Python interpreter as follows:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们创建一个新的 Python 解释器，如下所示：
- en: '![](img/e0e488db-8aeb-4375-aba7-742efc2f70f2.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e0e488db-8aeb-4375-aba7-742efc2f70f2.jpg)'
- en: Screenshot to create a new Python interpreter
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新 Python 解释器的截图
- en: Update `zeppelin.pyspark.python` to `/usr/local/bin/bin/python`.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `zeppelin.pyspark.python` 更新为 `/usr/local/bin/bin/python`。
- en: 'For all of these interpreter changes to take effect, we will need to restart
    the services. Head over to the Ambari dashboard page. Locate Service Actions at
    the top-right corner and in the dropdown, select Restart All:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使所有这些解释器更改生效，我们需要重新启动服务。前往 Ambari 仪表板页面。在右上角找到服务操作，在下拉菜单中选择重启所有：
- en: '![](img/7eb274e3-b546-46dd-97ed-b9bff1e82f58.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7eb274e3-b546-46dd-97ed-b9bff1e82f58.jpg)'
- en: Screenshot displaying final step for Zeppelin Notebook to be ready for development
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 展示 Zeppelin Notebook 准备好进行开发的最终步骤的截图
- en: At this point, the Zeppelin Notebook is ready for development.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，Zeppelin Notebook 已经准备好进行开发。
- en: Implementation objectives
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施目标
- en: The goal of this section will be to get started with developing a data pipeline
    using the Random Forests algorithm.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的目标是开始使用随机森林算法开发数据管道。
- en: List of implementation goals
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施目标列表
- en: 'The following implementation objectives are the same and cover both the Random
    Forests pipeline and linear regression. We will perform preliminary steps such
    as **Exploratory Data Analysis** (**EDA**) once and develop specific implementation
    code that pertains to a particular pipeline. Therefore, the implementation objectives
    are listed here as follows:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 以下实施目标相同，涵盖了随机森林管道和线性回归。我们将执行一次初步步骤，如**探索性数据分析**（**EDA**），然后开发特定于特定管道的实现代码。因此，实施目标如下列出：
- en: Get the stock price dataset.
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取股票价格数据集。
- en: Carry out preliminary EDA in the Sandbox Zeppelin Notebook environment (or Spark
    shell), and run a statistical analysis.
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Sandbox Zeppelin Notebook 环境中执行初步的 EDA（探索性数据分析），并运行统计分析。
- en: 'Develop the pipeline incrementally in Zeppelin, and port the code into IntelliJ.
    This means doing the following:'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Zeppelin中逐步开发管道，并将代码移植到IntelliJ。这意味着执行以下操作：
- en: Create a new Scala project in IntelliJ, or import an existing empty project
    into IntelliJ, and create Scala artifacts from code that was incrementally developed
    in the Notebook.
  id: totrans-254
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在IntelliJ中创建一个新的Scala项目，或将现有的空项目导入IntelliJ，并从笔记本中逐步开发出的代码创建Scala工件。
- en: Do not forget to wire up all the necessary dependencies in the `build.sbt` file.
  id: totrans-255
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要忘记在`build.sbt`文件中连接所有必要的依赖项。
- en: Interpret the results of the pipeline, such as how well the classifier performed.
    How close are the predicted values to those in the original dataset?
  id: totrans-256
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释管道的结果，例如分类器表现如何。预测值与原始数据集中的值有多接近？
- en: In the next subsection, we will download the stock price dataset.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个子节中，我们将下载股票价格数据集。
- en: Step 1 – creating a Scala representation of the path to the dataset file
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1步 – 创建数据集文件路径的Scala表示
- en: 'The stock price dataset is available in the `ModernScalaProjects_Code` folder.
    Grab a copy and upload it to the Sandbox, then place it in a convenient location
    as follows:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 股票价格数据集位于`ModernScalaProjects_Code`文件夹中。获取一份副本并将其上传到沙盒，然后将其放置在以下方便的位置：
- en: '[PRE0]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the next step, let's create a **resilient distributed dataset** (**RDD**).
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，让我们创建一个**弹性分布式数据集**（**RDD**）。
- en: Step 2 – creating an RDD[String]
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2步 – 创建一个`RDD[String]`
- en: 'Invoke the `textFile` method of `sparkContext`, which is supplied by Spark
    in the Sandbox:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 调用Spark在沙盒中提供的`sparkContext`的`textFile`方法：
- en: '[PRE1]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The resultant RDD, `result1`, is a partitioned structure. In the next step,
    we will iterate over these partitions.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 结果RDD `result1` 是一个分区结构。在下一步中，我们将遍历这些分区。
- en: Step 3 – splitting the RDD around the newline character in the dataset
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3步 – 在数据集的换行符周围拆分RDD
- en: 'Invoke a `flatMap` operation over the `result1` RDD, and split each partition
    around its `"\n"` (end of the line) character as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在`result1` RDD上调用`flatMap`操作，并按每个分区的`"\n"`（行尾）字符拆分，如下所示：
- en: '[PRE2]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Each `partition` is after a string. In the next step, we will transform the
    `result2` RDD.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 每个分区后面跟着一个字符串。在下一步中，我们将转换`result2` RDD。
- en: Step 4 – transforming the RDD[String]
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4步 – 转换RDD[String]
- en: 'Invoke a `map` operation over the `result2` RDD. Each line in this RDD (a row
    of data) consists of stock price headline data separated by a comma, as follows:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在`result2` RDD上调用`map`操作。此RDD（数据行）中的每一行都由逗号分隔的股票价格标题数据组成，如下所示：
- en: '[PRE3]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The resultant RDD, `result2A`, is an `RDD[Array[String]]`. The RDD consists
    of an array of strings, where each string represents a row.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 结果RDD `result2A` 是一个`RDD[Array[String]]`。该RDD由字符串数组组成，其中每个字符串代表一行。
- en: Step 5 – carrying out preliminary data analysis
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5步 – 进行初步数据分析
- en: This step is broken down into a set of smaller steps. The process starts with
    the creation of `DataFrame`.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤被分解为一系列更小的步骤。过程从创建`DataFrame`开始。
- en: Creating DataFrame from the original dataset
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从原始数据集创建DataFrame
- en: 'Load the stock price dataset file again by specifying an appropriate `option`
    for Spark to automatically infer the schema of the dataset before it can create
    the `DataFrame`, as follows:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 通过指定适当的`option`再次加载股票价格数据集文件，让Spark在创建`DataFrame`之前自动推断数据集的模式，如下所示：
- en: '[PRE4]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The resultant structure, `spDataFrame`, is `DataFrame`.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 结果结构`spDataFrame`是`DataFrame`。
- en: Dropping the Date and Label columns from the DataFrame
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从DataFrame中删除日期和标签列
- en: '`Date` and `Label` are columns we may exclude for now as follows:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '`Date`和`Label`是我们现在可能排除的列，如下所示：'
- en: '[PRE5]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The resultant structure is a new `DataFrame` that consists of all 25 top headlines.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 结果结构是一个新的`DataFrame`，它包含所有25个顶级标题。
- en: Having Spark describe the DataFrame
  id: totrans-284
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让Spark描述DataFrame
- en: 'Invoke the `describe` and `show` methods in that order to give us a visual
    of the first 20 rows as follows:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下顺序调用`describe`和`show`方法，以获得前20行的视觉表示：
- en: '[PRE6]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the next step, let's add a new column to the `DataFrame`, an `expAnalysisTestFrame`,
    called `AllMergedNews`.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，让我们向`DataFrame`添加一个新列，一个名为`AllMergedNews`的`expAnalysisTestFrame`。
- en: Adding a new column to the DataFrame and deriving Vector out of it
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向DataFrame添加新列并从中推导出Vector
- en: 'Let''s perform the following steps to add a new column and derive `Vector`:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们执行以下步骤以添加新列并推导出`Vector`：
- en: 'Create a new `DataFrame` by creating a new `AllMergedNews` column in place
    of the `Top1` column, which is done by invoking the `withColumn` method as follows:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过创建一个新的`AllMergedNews`列来替换`Top1`列，创建一个新的`DataFrame`，如下调用`withColumn`方法：
- en: '[PRE7]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Next, transform the `mergedNewsColumns` `DataFrame` into `Vector` as follows:'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将 `mergedNewsColumns` DataFrame 转换为 `Vector`，如下所示：
- en: '[PRE8]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In the next step, we simply derive the `mergedFinalFrame` `DataFrame` from `mergedFrameList`:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一步中，我们简单地从 `mergedFrameList` 中派生出 `mergedFinalFrame` DataFrame：
- en: '[PRE9]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: At this point, we have `DataFrame` that needs some preprocessing. Let's start
    by getting rid of stop words.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们有一个需要一些预处理的 DataFrame。让我们首先去除停用词。
- en: Removing stop words – a preprocessing step
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移除停用词——这是一个预处理步骤
- en: 'The stop words we want to be eliminated are words such as *a*, *an*, *the*,
    and *in*. **Natural Language Toolkit** (**NLTK**) comes to the rescue as follows:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要消除的停用词包括诸如 *a*、*an*、*the* 和 *in* 等词。**自然语言工具包**（**NLTK**）如下提供帮助：
- en: '[PRE10]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The next step is going to be using the `transform` operation.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步将是使用 `transform` 操作。
- en: Transforming the merged DataFrame
  id: totrans-302
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转换合并的 DataFrame
- en: 'The `mergedFinalFrame` `DataFrame` is passed into the `transform` method. This
    NLTK step gets rid of all stop words that were not necessary for our analysis:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `mergedFinalFrame` DataFrame 传递给 `transform` 方法。此 NLTK 步骤移除了分析中不必要的所有停用词：
- en: '[PRE12]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In the next step, we will use a feature transformer called `NGram`.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将使用一个名为 `NGram` 的特征转换器。
- en: Transforming a DataFrame into an array of NGrams
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 DataFrame 转换为 NGrams 数组
- en: 'What is an n-gram? It is simply a sequence of items such as letters, words,
    and so on (as in our dataset). Our dataset resembles a corpus of text. It is an
    ideal candidate for processing into an array of n-grams, which is an array consisting
    of words from the latest version of our dataset, devoid of stop words:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是 n-gram？它简单地说是一系列项目，如字母、单词等（如我们的数据集）。我们的数据集类似于一个文本语料库。它是一个理想的候选者，可以处理成 n-gram
    数组，这是一个由我们数据集最新版本中的单词组成的数组，不包含停用词：
- en: '[PRE13]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In the next step, we will create a new dataset by adding a column called `ndashgrams`.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将通过添加一个名为 `ndashgrams` 的列来创建一个新的数据集。
- en: Adding a new column to the DataFrame, devoid of stop words
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向 DataFrame 添加一个不含停用词的新列
- en: 'Derive a new `DataFrame` by adding a new column called `ndashgrams` to `DataFrame` `cleanedDataFrame2`
    as follows:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向 `cleanedDataFrame2` DataFrame 添加一个名为 `ndashgrams` 的新列来派生一个新的 DataFrame，如下所示：
- en: '[PRE14]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The next step gets more interesting. We will apply what is known as a count
    vectorizer.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个步骤更有趣。我们将应用所谓的计数向量器。
- en: Constructing a vocabulary from our dataset corpus
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从我们的数据集语料库构建词汇表
- en: 'Why `CountVectorizer`? We need one to construct a vocabulary of certain terms
    regarding our stock price corpus:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么使用 `CountVectorizer`？我们需要一个来构建有关我们股价语料库的某些术语的词汇表：
- en: '[PRE15]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '`CountVectorizer` generates a `CountVectorizerModel`, which can convert our
    corpus into a sparse vector of n-gram token counts.'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`CountVectorizer` 生成一个 `CountVectorizerModel`，可以将我们的语料库转换为 n-gram 令牌计数的稀疏向量。'
- en: Training CountVectorizer
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 训练 CountVectorizer
- en: 'We want to train our `CountVectorizer` by passing into it our latest version
    of the dataset as shown in the following code snippet:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望通过传递最新版本的数据集来训练我们的 `CountVectorizer`，如下代码片段所示：
- en: '[PRE16]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Using StringIndexer to transform our input label column
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 StringIndexer 将我们的输入标签列进行转换
- en: 'Now, let''s index our `label` input in the dataset using `StringIndexer` as
    follows:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `StringIndexer` 按如下方式在数据集中索引 `label` 输入：
- en: '[PRE17]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Next, let's drop the input label column `label`.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们删除输入标签列 `label`。
- en: Dropping the input label column
  id: totrans-325
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除输入标签列
- en: 'Invoke the `drop` method on `DataFrame` `cleanedDataFrame4` as follows:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 按如下方式在 `cleanedDataFrame4` DataFrame 上调用 `drop` 方法：
- en: '[PRE18]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Next, let's add a new column called `label2` in place of the dropped `label`
    column.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们在删除的 `label` 列的位置添加一个名为 `label2` 的新列。
- en: Adding a new column to our DataFrame
  id: totrans-330
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向我们的 DataFrame 添加一个新列
- en: 'This time, invoke the `withColumn` method to add in the `label2` column as
    a replacement for `label1`:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，调用 `withColumn` 方法添加 `label2` 列作为 `label1` 的替代：
- en: '[PRE20]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now, it is time to divide our dataset into a training set and a test set.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是我们将数据集划分为训练集和测试集的时候了。
- en: Dividing the DataSet into training and test sets
  id: totrans-334
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据集划分为训练集和测试集
- en: 'Let''s split the dataset into two datasets. 85% of the dataset will be the
    training dataset and the remaining 15% will be the testing dataset, as follows:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将数据集分成两个数据集。85% 的数据集将是训练数据集，剩余的 15% 将是测试数据集，如下所示：
- en: '[PRE21]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Let's create a `StringIndexer` to index the `label2` column.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个 `StringIndexer` 来索引 `label2` 列。
- en: Creating labelIndexer to index the indexedLabel column
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 labelIndexer 以索引 indexedLabel 列
- en: 'Let''s create `labelIndexer` now. This will create a new indexed input and
    output the columns `label` and `indexedLabel`, as follows:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建`labelIndexer`。这将创建一个新的索引输入，并输出`label`和`indexedLabel`列，如下所示：
- en: '[PRE22]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Next, let's `transform` our indexed labels back to the original labels that
    were not indexed.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们将我们的索引标签`transform`回未索引的原始标签。
- en: Creating StringIndexer to index a column label
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建StringIndexer以索引列标签
- en: 'The following will help us create a `StringIndexer` to index the `label` column:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助我们创建一个`StringIndexer`来索引`label`列：
- en: '[PRE23]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: In the next step, we will create `RandomForestClassifier`.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将创建`RandomForestClassifier`。
- en: Creating RandomForestClassifier
  id: totrans-346
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建RandomForestClassifier
- en: 'Let''s create `randomForestClassifier` now and pass in the appropriate hyperparameters
    as follows:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建`randomForestClassifier`并传递适当的超参数，如下所示：
- en: '[PRE24]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: We have a classifier now. Now, we will create a new pipeline and create stages,
    with each stage holding the indexers that we have just created.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有一个分类器。现在，我们将创建一个新的管道并创建阶段，每个阶段都包含我们刚刚创建的索引器。
- en: Creating a new data pipeline with three stages
  id: totrans-350
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建具有三个阶段的新数据管道
- en: 'Let''s create the appropriate imports first, as follows:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先创建适当的导入，如下所示：
- en: '[PRE25]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Let's start building a pipeline now. This is a pipeline that has three stages,
    which are `StringIndexer`, `LabelIndexer`, and `randomForestClassifier`.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始构建一个管道。这是一个有三个阶段的管道，分别是`StringIndexer`、`LabelIndexer`和`randomForestClassifier`。
- en: Creating a new data pipeline with hyperparameters
  id: totrans-354
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建具有超参数的新数据管道
- en: 'The following steps need to be performed to create a new data pipeline:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新数据管道需要执行以下步骤：
- en: 'Create a new pipeline with the following three stages:'
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建具有以下三个阶段的新的管道：
- en: '[PRE26]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Create a hyperparameter called `NumTrees` as follows:'
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`NumTrees`的超参数，如下所示：
- en: '[PRE27]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Create a hyperparameter tree called `MaxDepth` and set it to `2` as follows:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`MaxDepth`的超参数树并将其设置为`2`，如下所示：
- en: '[PRE28]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: It is time to train the pipeline.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候训练管道了。
- en: Training our new data pipeline
  id: totrans-363
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 训练我们的新数据管道
- en: 'We have a pipeline that is ready to be trained on the training dataset. Fitting
    (training) also runs the indexers, as follows:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个准备好在训练数据集上训练的管道。拟合（训练）也会运行索引器，如下所示：
- en: '[PRE29]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Next, run a `transformation` operation on our `stockPriceModel` and generate
    stock price predictions.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在我们的`stockPriceModel`上运行`transformation`操作以生成股票价格预测。
- en: Generating stock price predictions
  id: totrans-367
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成股票价格预测
- en: 'The following steps need to be performed to generate stock price predictions:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 生成股票价格预测需要执行以下步骤：
- en: 'Run the `stockPriceModel` transformation operation on our test dataset as follows:'
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的测试数据集上运行`stockPriceModel`转换操作，如下所示：
- en: '[PRE30]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Let''s display the relevant columns of our `predictions` `DataFrame` as follows:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们显示我们的`predictions` `DataFrame`的相关列，如下所示：
- en: '[PRE31]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Finally, we want to evaluate the accuracy of our model, its ability to generate
    predictions, or in other words, find out how close the generated output was to
    the predictor labels, as follows:'
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们希望评估我们模型的准确性，即其生成预测的能力，换句话说，找出生成的输出与预测标签之间的接近程度，如下所示：
- en: '[PRE32]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Before we wind up this chapter, there are other metrics that we can evaluate.
    We leave this as an exercise for the reader.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们结束本章之前，还有一些其他指标可以评估。我们将这个作为读者的练习。
- en: Using the `MulticlassMetrics` class in the Spark ML API, it is possible to generate
    metrics that can tell us how close the predicted label value in the predicted
    column is to the actual label value in the `label` column.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Spark ML API中的`MulticlassMetrics`类，我们可以生成指标，这些指标可以告诉我们预测列中的预测标签值与`label`列中的实际标签值有多接近。
- en: 'Readers are invited to come up with two more metrics:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 邀请读者提出另外两个指标：
- en: Accuracy
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准确性
- en: Weighted precision
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加权精度
- en: There are many other ways to build ML models to predict stock prices and help
    investors build their long-term investment strategy. For example, linear regression
    is another commonly used but fairly popular method for predicting stock prices.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多其他方法可以构建ML模型来预测股票价格并帮助投资者制定长期投资策略。例如，线性回归是另一种常用的但相当流行的预测股票价格的方法。
- en: Summary
  id: totrans-381
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to leverage the Random Forests algorithm to
    predict stock prices based on historical trends.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何利用随机森林算法根据历史趋势预测股票价格。
- en: In next chapter, we will create a spam classifier. We will start with two datasets,
    one representing ham and the other, spam dataset.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将创建一个垃圾邮件分类器。我们将从两个数据集开始，一个代表正常邮件，另一个代表垃圾邮件数据集。
- en: Questions
  id: totrans-384
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Here are a list of few questions:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些问题列表：
- en: What do you understand by linear regression? Why is it important?
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你对线性回归有何理解？为什么它很重要？
- en: How does linear regression differ from logistic regression?
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 线性回归与逻辑回归有何不同？
- en: Name one powerful feature of the binary classifier.
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出一个二元分类器的强大特征。
- en: What are the feature variables in relation to the stock price dataset?
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与股票价格数据集相关的特征变量有哪些？
