- en: Chapter 1. Getting Started with ImageJ
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章. ImageJ 入门
- en: Welcome to the second edition of *Image Processing with ImageJ*. ImageJ is a
    versatile and open source software package designed for scientific image processing
    and analysis. It is written in the Java programming language, allowing for a uniform
    cross-platform experience. It is based on the NIH Image software package on the
    Macintosh platform, developed in 1987 by Wayne Rasband. Rasband, who is still
    an active contributor of ImageJ, published the first ImageJ distribution in 1997\.
    It was developed as a project to provide a solution to a problem. In 2012, ImageJ
    celebrated its twenty-fifth birthday with a publication in the journal Nature
    Methods.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到 *ImageJ 图像处理* 第二版。ImageJ 是一个多功能的开源软件包，专为科学图像处理和分析设计。它用 Java 编程语言编写，允许实现统一的跨平台体验。它基于
    1987 年在 Macintosh 平台上开发的 NIH Image 软件包，由 Wayne Rasband 开发。Rasband 仍然是 ImageJ 的活跃贡献者，他在
    1997 年发布了第一个 ImageJ 分发版。它作为一个项目开发，旨在解决一个问题。2012 年，ImageJ 在《自然方法》杂志上庆祝了它的 25 周年。
- en: ImageJ distributions
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ImageJ 分发版
- en: Currently, there are different distributions that are based on or are extensions
    of the original ImageJ. The basic ImageJ package is available on the ImageJ website
    at the National Institute of Health ([http://imagej.nih.gov/ij/download.html](http://imagej.nih.gov/ij/download.html)).
    The current version of the package is **version 1.50b**, and the website is updated
    monthly. This is the core distribution of ImageJ, which contains the main interface
    and all the basic tools to load, view, process, and export images and data. Other
    distributions contain this core package and most of its features, but you need
    to add additional features and plugins to create an optimized interface for specific
    fields. Some of these other distributions are still easily recognizable as ImageJ,
    while others offer a completely different interface.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，有基于或扩展原始 ImageJ 的不同分发版。基本的 ImageJ 软件包可在国家卫生研究院的 ImageJ 网站上找到（[http://imagej.nih.gov/ij/download.html](http://imagej.nih.gov/ij/download.html)）。当前软件包的版本是
    **版本 1.50b**，网站每月更新。这是 ImageJ 的核心分发版，包含主界面以及所有基本工具，用于加载、查看、处理和导出图像和数据。其他分发版包含这个核心包及其大多数功能，但您需要添加额外的功能和插件来为特定领域创建优化的界面。其中一些其他分发版仍然容易识别为
    ImageJ，而其他则提供了完全不同的界面。
- en: For different scientific fields, different distributions were developed based
    on the core of ImageJ. One of the major distributions for the life sciences is
    called **Fiji** (Fiji Is Just ImageJ), which can be found on the Fiji website
    ([http://fiji.sc/Fiji](http://fiji.sc/Fiji)). The basis of Fiji is ImageJ, but
    it comes with a large complement of preinstalled features (macros and plugins)
    that are commonly used for image processing in the life sciences. It is focused
    on fluorescence microscopy, with built-in tools for segmentation, visualization,
    and co-localization. It also contains plugins for image registration, particle
    tracking, and super-resolution processing and reconstruction. It also has an extensive
    library of image formats that can be opened. This library includes proprietary
    image formats from all the major acquisition software packages via the **Bio-Formats**
    plugin, as described in the upcoming section. The advantages of this distribution
    are the large number of supplied plugins that come with it as well as a very user-friendly
    script editor. It also has an extensive update mechanism for both ImageJ as well
    as some plugins.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 根据不同的科学领域，基于 ImageJ 的核心开发了不同的分发版。生命科学领域的主要分发版之一被称为 **Fiji**（Fiji Is Just ImageJ），可以在
    Fiji 网站上找到（[http://fiji.sc/Fiji](http://fiji.sc/Fiji)）。Fiji 的基础是 ImageJ，但它附带了一大批预安装的功能（宏和插件），这些功能在生命科学领域的图像处理中常用。它专注于荧光显微镜，内置了分割、可视化和共定位的工具。它还包含图像配准、粒子追踪和超分辨率处理与重建的插件。它还拥有一个广泛的图像格式库，可以打开。这个库包括通过
    **Bio-Formats** 插件提供的所有主要获取软件包的专有图像格式，如即将到来的章节所述。这个分发版的优点是它附带的大量插件以及非常用户友好的脚本编辑器。它还为
    ImageJ 以及一些插件提供了广泛的更新机制。
- en: For the field of astronomy, a different distribution of ImageJ was developed,
    named **AstroImageJ** ([http://www.astro.louisville.edu/software/astroimagej/](http://www.astro.louisville.edu/software/astroimagej/)).
    This distribution takes the core implementation of ImageJ and supplements it with
    specific plugins and macros developed for analysis in the field of astronomy.
    It is not directly compatible with ImageJ. The core of ImageJ was slightly modified
    for this distribution.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于天文学领域，开发了ImageJ的一个不同版本，命名为**AstroImageJ**([http://www.astro.louisville.edu/software/astroimagej/](http://www.astro.louisville.edu/software/astroimagej/))。这个版本采用了ImageJ的核心实现，并补充了专门为天文学分析开发的特定插件和宏。它与ImageJ不直接兼容。为了这个版本，ImageJ的核心进行了轻微修改。
- en: An example of a distribution derived from ImageJ but with a different user interface
    is **Icy** ([http://icy.bioimageanalysis.org/](http://icy.bioimageanalysis.org/)).
    The Icy distribution has integrated ImageJ, and many plugins are compatible. However,
    not every plugin developed for ImageJ will work within Icy and vice versa. In
    the Icy distribution, there is a strong emphasis on cellular and spot detection
    and tracking. There is also a strong emphasis on plugin development. Plugins that
    are developed for the Icy platform will have documentation and automated updating
    implemented by design. There are also possibilities for users to directly provide
    feedback to the developers from within the interface, which is a feature not present
    within other distributions based on ImageJ. A disadvantage may be that it requires
    several external libraries to be installed, most importantly VTK, which can cause
    issues on Linux systems.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 从ImageJ衍生出来但具有不同用户界面的一个示例是**Icy**([http://icy.bioimageanalysis.org/](http://icy.bioimageanalysis.org/))。Icy分发版集成了ImageJ，并且许多插件都是兼容的。然而，并非为ImageJ开发的每个插件都能在Icy中工作，反之亦然。在Icy分发版中，对细胞和点检测与跟踪有很强的重视。对插件开发也有很强的重视。为Icy平台开发的插件将按照设计实现文档和自动更新。用户还可以直接从界面中向开发者提供反馈，这是其他基于ImageJ的分发版所不具备的功能。一个可能的缺点是它需要安装几个外部库，最重要的是VTK，这可能会在Linux系统上引起问题。
- en: Another distribution that uses ImageJ not only for the processing of data but
    also aids in the acquisition of data is called **μManager**, which can be found
    at [https://www.micro-manager.org/](https://www.micro-manager.org/). It is loaded
    from within ImageJ as a plugin, but provides a unique interface geared towards
    image acquisition and hardware control. Camera and microscope drivers allow the
    control of supported hardware used in image acquisition, which can then be fed
    directly to ImageJ for processing and analysis. An example of the use of μManager
    is in the Open SPIM project, where it is used to control a DIY light sheet microscope,
    acquire images, and process them.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个不仅使用ImageJ处理数据，还帮助获取数据的分发版本被称为**μManager**，可以在[https://www.micro-manager.org/](https://www.micro-manager.org/)找到。它作为插件从ImageJ内部加载，但提供了一个针对图像获取和硬件控制的独特界面。相机和显微镜驱动程序允许控制用于图像获取的支持硬件，然后可以直接输入到ImageJ中进行处理和分析。μManager的一个使用示例是在Open
    SPIM项目中，它被用来控制一个DIY光片显微镜，获取图像并处理它们。
- en: The uses of ImageJ
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ImageJ的用途
- en: ImageJ is a great tool to process images and perform analysis. It is used in
    many scientific peer-reviewed publications, with over 1000 articles in diverse
    fields such as life sciences, astronomy, and physics. In life sciences, it is
    used to quantify medical images to aid in the detection of pathological markers.
    It is also used to process and quantify data from single-cell or single-molecule
    experiments using super-resolution techniques such as **STORM** and **PALM**.
    In physics and engineering, it is used to quantify and visualize data obtained
    from atomic force microscopy. For astronomy, ImageJ is used to analyze images
    obtained from telescopes and satellites and visualize data obtained from observatories.
    NASA's Jet Propulsion Laboratory hosts a central node with a good collection of
    data that is available for download at [http://pds.jpl.nasa.gov/](http://pds.jpl.nasa.gov/).
    It contains information on the planetary missions as well as other research fields
    such as atmospheres or asteroids.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ImageJ是一个处理图像和执行分析的优秀工具。它在许多科学同行评审出版物中使用，涵盖生命科学、天文学和物理学等多个领域的1000多篇论文。在生命科学中，它用于量化医学图像，以帮助检测病理标志物。它还用于处理和量化来自单细胞或单分子实验的数据，这些实验使用超分辨率技术，如**STORM**和**PALM**。在物理学和工程学中，它用于量化并可视化来自原子力显微镜的数据。在天文学中，ImageJ用于分析来自望远镜和卫星的图像，并可视化来自观测站的数据。NASA喷气推进实验室托管了一个中心节点，拥有丰富的数据集，可在[http://pds.jpl.nasa.gov/](http://pds.jpl.nasa.gov/)下载。它包含有关行星任务以及其他研究领域（如大气或小行星）的信息。
- en: As it supports a large number of different image formats, it is a great image
    viewer and allows a great number of pixel-based operations. It also supports images
    with bit depths greater than 8 or 16 bits per channel. However, it is not meant
    for anything other than pixel-based operations. If you wish to use vector-based
    operations, then ImageJ is not the tool for you (unless you wish to develop this
    functionality).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它支持大量不同的图像格式，它是一个出色的图像查看器，并允许执行大量基于像素的操作。它还支持每个通道大于8位或16位的位深度图像。然而，它并不适用于除基于像素的操作之外的其他任何用途。如果您想使用基于矢量的操作，那么ImageJ不是您需要的工具（除非您想开发这项功能）。
- en: Besides the common tools for image processing, such as cropping, rotating, and
    scaling, it supports images with multiple dimensions. Images with up to five dimensions
    can be processed and saved. These dimensions can include channels (multiple colors),
    frames (time points), and slices (*Z* planes), and any combination of these dimensions.
    Currently, multipoint acquisitions are not supported (different locations in a
    larger *XY* space). It is also possible to change the intensity of pixels displayed
    by adjusting the brightness and contrast, or the color-coding of the pixels (**Lookup
    Tables**). More advanced techniques to correct image acquisition artifacts, such
    as background and bleaching, are also available.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 除了常见的图像处理工具，如裁剪、旋转和缩放之外，它还支持多维度图像。可以处理和保存多达五维的图像。这些维度可以包括通道（多种颜色）、帧（时间点）和切片（*Z*平面），以及这些维度的任何组合。目前，不支持多点采集（在更大的*XY*空间中的不同位置）。还可以通过调整亮度、对比度或像素的颜色编码（**查找表**）来改变显示像素的强度。还有更高级的技术来纠正图像采集的伪影，如背景和漂白。
- en: The default image format of ImageJ is the **Tagged Image File Format** (**TIFF**).
    This format allows for the storage of multidimensional data and supports many
    meta-information fields for calibration, data acquisition information, and descriptions.
    It can also store information about elements such as overlays. Graphical annotations
    are placed on the image in a separate layer. Measurements will benefit from the
    calibration included in the image, allowing for a fast feedback of sizes in the
    appropriate unit. It is, however, less suited for different kinds of mixed data
    such as video files. Using the **FFMPEG** plugin allows you to open and save the
    image data of a video but not the audio track(s). Also, editing is limited to
    a small set of transitions and layering techniques. For editing videos with image
    and sound, non-linear editors are available. They allow for greater control.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ImageJ的默认图像格式是**标记图像文件格式**（**TIFF**）。这种格式允许存储多维数据，并支持许多用于校准、数据采集信息和描述的元信息字段。它还可以存储有关叠加等元素的信息。图形注释放置在图像的单独图层上。测量将受益于图像中包含的校准，从而允许以适当的单位快速反馈尺寸。然而，它不太适合不同类型的混合数据，如视频文件。使用**FFMPEG**插件可以打开和保存视频的图像数据，但不能打开音频轨道。编辑仅限于一小套转场和分层技术。对于需要图像和声音的视频编辑，可以使用非线性编辑器。它们允许有更大的控制。
- en: It can also be used as an image-conversion tool. Many image formats can be read
    natively by ImageJ, and with the help of a plugin, many proprietary formats can
    be opened. Once the image is opened, it can be saved to any of the supported export
    formats supported by ImageJ, including, but not limited to TIF, JPG, and PNG for
    images and AVI and MOV for **time series** and **Z-stacks**. It can also be used
    to change the order and/or color of images exported by other software. It is,
    however, not meant as a general photo editor or nonlinear video editor, as it
    lacks some of the specialized tools required for these workflows.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 它也可以用作图像转换工具。ImageJ可以原生地读取许多图像格式，并且借助插件，许多专有格式也可以打开。一旦图像被打开，就可以将其保存为ImageJ支持的任何导出格式，包括但不限于TIF、JPG和PNG等图像格式，以及AVI和MOV等**时间序列**和**Z堆栈**格式。它还可以用来改变其他软件导出图像的顺序和/或颜色。然而，它并不是作为一个通用的照片编辑器或非线性视频编辑器，因为它缺乏这些工作流程所需的某些专业工具。
- en: The current state of ImageJ
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ImageJ的当前状态
- en: Currently, ImageJ has been cited in more than 200 publications since the beginning
    of 2015, in fields ranging from physics and engineering to medicine and biology.
    Many publications are about newly developed plugins that were specifically developed
    to solve a problem within a certain subfield of science. On the ImageJ website,
    the page that lists plugins has more than 1000 plugins available. A few research
    institutes even have collections of multiple plugins available that were developed
    there as research projects. Most, if not all, are open source plugins with the
    full source code available. You can adjust and customize the code to suit your
    needs.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 自2015年初以来，ImageJ已被超过200篇出版物引用，涉及从物理学和工程到医学和生物学的各个领域。许多出版物是关于为解决科学某个子领域中的问题而专门开发的插件。在ImageJ网站上，列出插件的页面有超过1000个插件可供选择。一些研究机构甚至有多个插件的集合，这些插件是在那里作为研究项目开发的。大多数，如果不是全部，都是开源插件，源代码完全可用。你可以调整和定制代码以满足你的需求。
- en: ImageJ2
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ImageJ2
- en: ImageJ is still under active development, and new features and bug fixes are
    added to the core distribution on a regular basis. Currently, the development
    of a revised system for ImageJ is being developed. It is called **ImageJ2**. The
    goals of ImageJ2 are to better support multidimensional data as well as create
    a more extensible platform that can be used as a library instead of a standalone
    application. It will also create a more consistent environment for development
    and extension. One of the features being developed is the updating mechanism for
    ImageJ. Currently, it is possible to update ImageJ automatically using a central
    repository, and one of the goals of ImageJ2 is to expand this option to plugins
    and other features and allow tracking of bugs and features. However, one of the
    core requirements in the new ImageJ2 system is backward compatibility. This goal
    means that plugins developed now will stay functional in future releases of ImageJ.
    The current status is indicated as **beta**, which means the plugin is functional
    but may still contain bugs and is not optimized for performance yet.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ImageJ仍在积极开发中，并且定期向核心发行版添加新功能和错误修复。目前，正在开发一个改进的ImageJ系统。它被称为**ImageJ2**。ImageJ2的目标是更好地支持多维数据，并创建一个更可扩展的平台，可以作为库而不是独立应用程序使用。它还将创建一个更一致的开发和扩展环境。正在开发的功能之一是ImageJ的更新机制。目前，可以使用中央存储库自动更新ImageJ，ImageJ2的一个目标是将此选项扩展到插件和其他功能，并允许跟踪错误和功能。然而，新ImageJ2系统的一个核心要求是向后兼容性。这个目标意味着现在开发的插件将在ImageJ的未来版本中保持功能。当前状态被标记为**beta**，这意味着插件是功能性的，但可能仍然包含错误，并且尚未针对性能进行优化。
- en: SciFIO and OME-XML
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SciFIO和OME-XML
- en: Other developments related to image are those related to image formats and standards.
    Currently, all major commercial acquisition platforms store image data in unique
    proprietary file formats. The SCIFIO project is aimed at creating an extensible
    and integrated interface to handle images of different formats. It will support
    more image formats and allow for additional options to be set when importing the
    data, such as autoscaling, loading metadata, and loading the data in different
    ImageJ image types. However, it is still under active development, and some of
    the features do not quite work in a production environment (yet).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 与图像相关的其他发展是那些与图像格式和标准相关的。目前，所有主要商业采集平台都使用独特的专有文件格式存储图像数据。SCIFIO项目旨在创建一个可扩展和集成的接口来处理不同格式的图像。它将支持更多图像格式，并允许在导入数据时设置附加选项，例如自动缩放、加载元数据和以不同的ImageJ图像类型加载数据。然而，它仍在积极开发中，并且一些功能在生产环境中（尚未）完全工作。
- en: The **OME-XML** (**Open Microscopy Environment-XML**) project is aimed at creating
    a file format that contains all the image and metadata in a standardized format.
    This would facilitate the exchange of microscope image data, regardless of the
    equipment used for acquisition. It is mainly focused on the exchange of microscopy
    data in the field of life sciences. It contains all the experimental and setup
    data as well as the pixel data in a single file specification.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**OME-XML**（**开放显微镜环境-XML**）项目旨在创建一个包含所有图像和元数据的标准化格式的文件格式。这将促进显微镜图像数据的交换，无论使用何种设备进行采集。它主要关注生命科学领域的显微镜数据交换。它包含所有实验和设置数据以及像素数据，所有这些都在单个文件规范中。'
- en: Bio-formats
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生物格式
- en: Besides the OME-XML format, which is focused on integrating acquisition and
    processing across multiple acquisition platforms, there is also active development
    of the plugin used to import many image formats currently in existence. This plugin,
    called Bio-Formats, is mostly focused on image formats from the life sciences.
    However, it also supports **FITS** data, which is used in the field of astronomy
    and space exploration. It currently supports (to different degrees) 140 different
    image formats and converts them to the OME-XML format for use in ImageJ.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 除了专注于跨多个采集平台集成采集和处理的OME-XML格式外，还在积极开发用于导入目前存在的许多图像格式的插件。这个插件被称为Bio-Formats，主要关注生命科学领域的图像格式。然而，它也支持**FITS**数据，这在天文学和太空探索领域使用。目前，它支持（程度不同）140种不同的图像格式，并将它们转换为OME-XML格式以在ImageJ中使用。
- en: Integrated environment for acquisition and processing
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成采集和处理环境
- en: As ImageJ is such an extensible application for acquisition, processing, and
    analysis, it is impossible to deal with all the options and extensions. In this
    edition, I will focus on image processing and analysis. I recommend the Fiji distribution
    for people beginning with ImageJ, as it contains a large number of useful features
    that allow you to get off to a running start. Another advantage is the presence
    of the script editor supplied with Fiji, which has many features that some of
    the larger Java development suites also provide. These features mainly include
    syntax highlighting and smart indenting. The editor also includes a selection
    of macro and plugin templates that allow for a basic framework to start with.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由于ImageJ是一个如此可扩展的应用程序，用于获取、处理和分析，因此不可能处理所有选项和扩展。在本版中，我将专注于图像处理和分析。我推荐Fiji发行版给ImageJ的初学者，因为它包含大量有用的功能，可以帮助您快速入门。另一个优点是Fiji附带了一个脚本编辑器，它具有许多功能，这些功能也是一些较大的Java开发套件所提供的。这些功能主要包括语法高亮和智能缩进。编辑器还包括一系列宏和插件模板，允许您从一个基本框架开始。
- en: Obtaining and installing ImageJ
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取和安装ImageJ
- en: 'The current version of ImageJ can be run on any platform that supports Java.
    When you wish to use ImageJ or one of the other distributions, a version can be
    downloaded for your specific operating system. A distribution of ImageJ can be
    downloaded with the **Java Runtime** **Environment** (**JRE**) prepackaged. The
    following sections will explain how to obtain and install ImageJ on the three
    main operating systems: Windows, OS X, and Linux.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当前版本的ImageJ可以在支持Java的任何平台上运行。当您希望使用ImageJ或其他发行版时，可以下载适用于您特定操作系统的版本。ImageJ的发行版可以与预包装的**Java运行时环境**（**JRE**）一起下载。以下章节将解释如何在三个主要操作系统上获取和安装ImageJ：Windows、OS
    X和Linux。
- en: Installation of ImageJ
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ImageJ的安装
- en: When you download a copy of ImageJ, the JRE can be provided along with it. If
    you already have a copy of the JRE installed, you could download ImageJ without
    the JRE for a faster download. The minimal requirements to run ImageJ are JRE
    Version 1.6 or higher. For some distributions, most notably Fiji, the JRE has
    to be version 1.6\. This limitation is due to the current implementation of the
    updater included with Fiji, which is not capable of updating the JRE. This problem
    may be resolved in the future.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当您下载ImageJ的副本时，可以提供JRE。如果您已经安装了JRE的副本，则可以下载不包含JRE的ImageJ以实现更快的下载。运行ImageJ的最小要求是JRE版本1.6或更高。对于某些发行版，特别是Fiji，JRE必须是1.6版本。这种限制是由于Fiji附带的上位器当前实现的问题，它无法更新JRE。这个问题可能在将来得到解决。
- en: As ImageJ comes with its own JRE, it can be extracted on a USB drive and run
    from there without installation. The only limitations on the system are dependent
    on the size of the images. ImageJ loads images directly into memory, so the available
    system memory needs to be large enough to hold the images you wish to process.
    When memory requirements exceed 3 GB, a 64-bit operating system with a 64-bit
    JRE is required.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 由于ImageJ自带了其自己的JRE，因此它可以提取到USB驱动器上，并从那里运行而无需安装。系统上的唯一限制取决于图像的大小。ImageJ直接将图像加载到内存中，因此可用的系统内存需要足够大，以便存储您希望处理的图像。当内存需求超过3
    GB时，需要64位操作系统和64位JRE。
- en: 'Since ImageJ is platform independent, you could use the same version on all
    three platforms: Windows, OS X, and Linux. The only platform-dependent part is
    the JRE; for each platform, there is a specific JRE installation. The following
    sections will explain how to install ImageJ on each of the operating systems.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 由于ImageJ是平台无关的，您可以在所有三个平台上使用相同的版本：Windows、OS X和Linux。唯一与平台相关的部分是JRE；对于每个平台，都有一个特定的JRE安装。以下章节将解释如何在每个操作系统中安装ImageJ。
- en: Installing on Windows
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows上安装
- en: 'In order to install ImageJ on Windows, you can download the latest version
    from the ImageJ website at the **NIH** ([http://imagej.nih.gov/ij/download.html](http://imagej.nih.gov/ij/download.html))
    or for Fiji from the Fiji website ([http://Fiji.sc/Downloads](http://Fiji.sc/Downloads)).
    When downloading from the NIH website, there are two choices: an installer for
    32-bit or 64-bit systems and a ZIP archive when you wish to run ImageJ on a platform
    without installer privileges.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在Windows上安装ImageJ，您可以从ImageJ网站下载最新版本，网站地址为**NIH** ([http://imagej.nih.gov/ij/download.html](http://imagej.nih.gov/ij/download.html))，或者从Fiji网站下载
    ([http://Fiji.sc/Downloads](http://Fiji.sc/Downloads))。当从NIH网站下载时，有两个选择：适用于32位或64位系统的安装程序，以及当您希望在无安装权限的平台运行ImageJ时，可以选择ZIP存档。
- en: When using the installer version, it is generally not recommended that you install
    ImageJ in the Program Files folder. Certain files within the ImageJ folder need
    to be modified when using the program, so when running it as a regular user, access
    problems may occur. Also, when installing or creating plugins, the compiled files
    need to be placed in the plugins folder within ImageJ. This folder may not have
    write permission when it is located in the Program Files folder for regular (non-administrator)
    users. Alternatively, you could change the access permissions for the ImageJ folder
    specifically. However, this is not recommended from a security point of view.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用安装程序版本时，通常不建议您将ImageJ安装到程序文件文件夹中。当使用程序时，ImageJ文件夹中的某些文件需要修改，因此当以普通用户身份运行时，可能会出现访问问题。此外，当安装或创建插件时，编译文件需要放置在ImageJ文件夹内的插件文件夹中。对于普通（非管理员）用户，此文件夹可能没有写入权限。或者，您可以专门更改ImageJ文件夹的访问权限。然而，从安全角度考虑，这并不推荐。
- en: 'Double-clicking on the `ImageJ.exe` file within the extracted folder will start
    ImageJ. This file is a wrapper executable that calls the `ij.jar` file and uses
    the supplied JRE to run it. The Fiji distribution comes as a ZIP archive that
    can be extracted on a disk and run immediately:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 双击提取文件夹中的`ImageJ.exe`文件将启动ImageJ。此文件是一个包装可执行文件，它调用`ij.jar`文件并使用提供的JRE来运行它。Fiji发行版以ZIP存档的形式提供，可以在磁盘上提取并立即运行：
- en: '![Installing on Windows](img/Insert_Image_4909_01_01.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![在Windows上安装](img/Insert_Image_4909_01_01.jpg)'
- en: Installing on Mac OS X
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Mac OS X上安装
- en: ImageJ is available for Mac OS X as a ZIP archive that can be extracted to a
    folder within the Applications folder. The Fiji distribution can be downloaded
    as a DMG file that can be dropped in the Applications folder. This will install
    the ImageJ folder and make it accessible for all registered users. It will also
    create a Fiji icon in the app drawer. If you wish to import or export QuickTime
    movies under OS X 10.10 (Yosemite), you need to download the `QTJava.zip` and
    `libQTJNative.jnilib` files from [http://imagej.nih.gov/ij/download/qt/](http://imagej.nih.gov/ij/download/qt/)
    into your home directory within the `Library/Java/Extensions` folder.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ImageJ以ZIP存档的形式提供，可以提取到应用程序文件夹内的一个文件夹中。Fiji发行版可以下载为DMG文件，可以将其拖放到应用程序文件夹中。这将安装ImageJ文件夹，使其对所有注册用户可用。它还会在应用抽屉中创建一个Fiji图标。如果您想在OS
    X 10.10（Yosemite）下导入或导出QuickTime电影，您需要从[http://imagej.nih.gov/ij/download/qt/](http://imagej.nih.gov/ij/download/qt/)下载`QTJava.zip`和`libQTJNative.jnilib`文件到您家目录中的`Library/Java/Extensions`文件夹。
- en: Note that in OS X 10.7 and later, you may receive a warning the first time you
    try to run ImageJ. This warning will say **ImageJ can't be opened because it is
    from an unidentified developer**. This can be resolved by going to the system
    settings and pushing the allow button in the security and privacy panel. This
    should prevent this warning from showing up in the future. Alternatively, you
    can select the Anywhere option from the Allow apps downloaded from section. The
    latter option is not recommended from a security point of view, as it might also
    allow malicious software to be executed.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在OS X 10.7及更高版本中，您第一次尝试运行ImageJ时可能会收到一个警告。这个警告会显示**ImageJ无法打开，因为它来自未知的开发者**。这可以通过进入系统设置并在安全和隐私面板中点击允许按钮来解决。这应该可以防止将来再次出现此警告。或者，您可以从“允许从以下位置下载应用程序”部分选择“任何位置”选项。从安全角度考虑，不建议选择此选项，因为它也可能允许恶意软件执行。
- en: 'Note that when ImageJ (or Fiji) is run on OS X, the menu bar is not part of
    the main window as in Windows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当ImageJ（或Fiji）在OS X上运行时，菜单栏不是主窗口的一部分，就像在Windows中那样：
- en: '![Installing on Mac OS X](img/Insert_Image_4909_01_02.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![在Mac OS X上安装](img/Insert_Image_4909_01_02.jpg)'
- en: Installing on Linux
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Linux上安装
- en: ImageJ can be installed on Linux platforms by unpacking the distribution from
    the NIH website. The distribution from the NIH website is available as a ZIP file,
    while the Fiji distribution is available as a `tar.gz` file. For most Linux distributions,
    it is recommended that you extract the archive to a location within your home
    folder. This prevents problems with write permissions on the ImageJ folders. The
    folder contains a shell script to run ImageJ. This shell script is named ImageJ.
    For different desktop environments, methods exist to create a shell shortcut to
    this script to allow it to run from a shortcut.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: ImageJ 可以通过从 NIH 网站解包分发到 Linux 平台。NIH 网站上的分发是 ZIP 文件格式，而 Fiji 分发是 `tar.gz` 文件格式。对于大多数
    Linux 发行版，建议你将存档提取到你的家目录内的位置。这可以防止 ImageJ 文件夹上的写权限问题。文件夹中包含一个运行 ImageJ 的 shell
    脚本。这个 shell 脚本被命名为 ImageJ。对于不同的桌面环境，存在创建到这个脚本的 shell 快捷方式的方法，以便可以从快捷方式运行它。
- en: The ImageJ folder structure
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ImageJ 文件夹结构
- en: 'After installing ImageJ, a folder structure is placed at a location designated
    during the installation process. This folder''s structure consists of a few key
    folders that are essential to the regular functioning of ImageJ. If you installed
    ImageJ in a folder to which you have *no write* privileges, there are two important
    folders that need read and write permissions in order for ImageJ to function:
    the `plugins` and `macros` folders. Also, the configuration file on Windows platforms
    (`pref.cfg`) needs write permissions for the user. Without the write permission,
    settings cannot be changed. The next section briefly explains the properties for
    the `plugins` and `macros` folders, and how ImageJ uses them.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 ImageJ 后，文件夹结构会放置在安装过程中指定的位置。这个文件夹的结构包含几个对 ImageJ 正常运行至关重要的关键文件夹。如果你在一个你没有**写**权限的文件夹中安装了
    ImageJ，有两个重要的文件夹需要读写权限才能使 ImageJ 正常工作：`plugins` 和 `macros` 文件夹。此外，Windows 平台上的配置文件（`pref.cfg`）需要用户有写权限。如果没有写权限，设置将无法更改。下一节简要解释了
    `plugins` 和 `macros` 文件夹的属性，以及 ImageJ 如何使用它们。
- en: Plugins folder
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 插件文件夹
- en: 'The two most important folders are the `macros` and `plugins` folders. These
    folders will be searched for available macros and plugins when ImageJ loads. When
    you download a plugin and place it in the `plugins` folder, the plugin will be
    found the next time ImageJ starts. When downloading plugins, there are three different
    options of files that can be downloaded: a Java source file (`.java`), a compiled
    file (`.class`), or a Java archive (`.jar`). In order for plugins to be displayed
    in the plugins menu, the `.java` and `.class` files need to contain at least one
    underscore character in the filename. For `.jar` files, the archive needs to contain
    a `plugins.config` file that defines the location within the menu system. This
    has an additional advantage that plugins within a `.jar` archive can also be installed
    outside the plugins `menu.Underscores` are replaced by spaces in the plugins menu
    or removed completely if the last character is an underscore. If you place your
    plugins in a folder within the `plugins` folder, this folder name will also show
    up in the **Plugins** menu, but only if it contains at least one valid plugin.
    If you download the source file of a plugin, you can create an executable plugin
    by choosing **Compile and Run** from the **Plugins** menu and selecting the Java
    file. The next time ImageJ is run, the new plugin will be automatically detected.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的两个文件夹是 `macros` 和 `plugins` 文件夹。当 ImageJ 加载时，会搜索这两个文件夹以查找可用的宏和插件。当你下载一个插件并将其放置在
    `plugins` 文件夹中时，插件将在下一次 ImageJ 启动时被发现。下载插件时，有三种不同的文件选项可供下载：Java 源文件（`.java`）、编译文件（`.class`）或
    Java 归档（`.jar`）。为了使插件在插件菜单中显示，`.java` 和 `.class` 文件名中需要至少包含一个下划线字符。对于 `.jar` 文件，归档需要包含一个
    `plugins.config` 文件，该文件定义了菜单系统中的位置。这还有一个额外的好处，即 `.jar` 归档中的插件也可以在插件 `menu` 外部安装。下划线在插件菜单中会被替换为空格，或者如果最后一个字符是下划线，则完全删除。如果你将插件放在
    `plugins` 文件夹内的一个文件夹中，这个文件夹名称也会出现在 **插件** 菜单中，但只有当它包含至少一个有效的插件时。如果你下载了一个插件的源文件，你可以通过从
    **插件** 菜单中选择 **编译和运行** 并选择 Java 文件来创建一个可执行的插件。下一次 ImageJ 运行时，新的插件将被自动检测。
- en: JAR files are slightly special. They can be placed within the `plugins` folder,
    but they do not have to show up in the **Plugins** menu. The JAR file contains
    a manifest that specifies the location where the plugins within it are placed.
    This specification allows the developer to place the plugin in a specific submenu
    of the **Plugins** menu, regardless of the folder where the JAR file is placed.
    This would be especially handy if you create a group of linked or associated plugins
    that you wish to group within the **Plugins** menu.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: JAR文件略有特殊。它们可以放置在`plugins`文件夹中，但不必出现在**插件**菜单中。JAR文件包含一个清单，指定了其中插件的位置。此规范允许开发者将插件放置在**插件**菜单的特定子菜单中，而不管JAR文件放置在哪个文件夹。如果您创建了一组希望分组在**插件**菜单中的链接或相关插件，这将特别有用。
- en: Macros folder
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 宏文件夹
- en: The macros folder contains a collection of macros that come with ImageJ and
    is also the default location to store user-defined macros. ImageJ macros are flat
    text files with the `.ijm` extension, although this extension is not essential.
    Any flat text file with valid macro code can be run in ImageJ. Macros in ImageJ
    have their own language, which is similar to Java, but with a few minor differences.
    [Chapter 5](ch05.html "Chapter 5. Basic Measurements with ImageJ"), *Basic Measurements
    with ImageJ* will investigate how to create macros and will explain the language
    constructs in ImageJ macros.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 宏文件夹包含ImageJ附带的一组宏，也是存储用户定义宏的默认位置。ImageJ宏是具有`.ijm`扩展名的平面文本文件，尽管这个扩展名不是必需的。任何具有有效宏代码的平面文本文件都可以在ImageJ中运行。ImageJ中的宏有自己的语言，类似于Java，但有一些细微的差异。[第5章](ch05.html
    "第5章. 使用ImageJ的基本测量")，“使用ImageJ的基本测量”将探讨如何创建宏，并解释ImageJ宏中的语言结构。
- en: Configuring a fresh ImageJ installation
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置新的ImageJ安装
- en: After installing ImageJ, it can be launched for the first time. When using ImageJ,
    a few settings need to be made to allow successful processing. One of the most
    important settings is the number of threads and memory available for ImageJ. By
    default, ImageJ has 512 MB of memory available. This allows for opening images
    up to 512 MB, which is fine for a large amount of use cases. However, with the
    current trends in image acquisition, files now tend to be in the range of 1 or
    more gigabytes. So, one of the first things is to set the memory for ImageJ to
    at least the size of the largest images you think you'll need to process. Fiji,
    on the other hand, automatically allocates 50 percent of the available system
    memory when installed, which can be changed if necessary.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 安装ImageJ后，可以首次启动。在使用ImageJ时，需要做一些设置以允许成功处理。最重要的设置之一是ImageJ可用的线程数和内存。默认情况下，ImageJ有512
    MB的内存可用。这允许打开高达512 MB的图像，这对于大量用例来说是可以的。然而，随着当前图像获取的趋势，文件现在往往在1 GB或更多。因此，首先要做的是将ImageJ的内存设置为至少您认为需要处理的最大的图像大小。另一方面，Fiji在安装时会自动分配可用系统内存的50%，如果需要可以更改。
- en: To set the memory allocated to ImageJ, you can set find the setting for memory
    under **Edit** | **Options** | **Memory and Threads….** You can set the maximum
    memory to any value that is less than the system memory. Keep in mind that on
    a 32-bit system, it is not possible to allocate more than 3 GB. If you wish to
    allocate more than 3 GB of memory, installing 64-bit ImageJ on a 64-bit operating
    system is required.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置分配给ImageJ的内存，您可以在**编辑** | **选项** | **内存和线程…**下找到内存设置。您可以设置最大内存为小于系统内存的任何值。请注意，在32位系统上，无法分配超过3
    GB的内存。如果您希望分配超过3 GB的内存，则需要在一个64位操作系统上安装64位ImageJ。
- en: 'It is also possible to use a command-line argument to pass the memory size
    when starting ImageJ. To do so, run ImageJ from the command line using the following
    command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用命令行参数在启动ImageJ时传递内存大小。为此，使用以下命令从命令行运行ImageJ：
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This tells the computer to run ImageJ with 1024 MB (`1024m`) of memory. If you
    need more, then you can change the value of `1024m` to whatever value is suitable.
    However, make sure that you do not use more memory than is available on your system.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉计算机以1024 MB (`1024m`) 的内存运行ImageJ。如果您需要更多，则可以将`1024m`的值更改为任何合适的值。但是，请确保您不会使用超过系统可用的内存。
- en: 'Another setting that is important to verify is in the **Appearance** dialog.
    The **Interpolate zoomed images** option should be unchecked for image processing.
    This option can interfere or give misleading results when processing:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要验证的重要设置是在**外观**对话框中。对于图像处理，**缩放图像时插值**选项应该取消选中。当处理图像时，此选项可能会干扰或给出误导性的结果：
- en: '![Configuring a fresh ImageJ installation](img/Insert_Image_4909_01_03.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![配置新的ImageJ安装](img/Insert_Image_4909_01_03.jpg)'
- en: If you plan to work with images containing a lot of white pixels, it is also
    advisable that you change the selection color to a different value than the default
    Yellow. This can be done via the **Colors** setting in preferences. A good default
    value in many cases is Orange or Green.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算处理包含大量白色像素的图像，建议你将选择颜色更改为默认黄色以外的其他值。这可以通过在首选项中的**颜色**设置中完成。在许多情况下，橙色或绿色是良好的默认值。
- en: Summary
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at the origin and use of ImageJ, and discussed how
    to download and install it on different platforms. We looked at the basic folder
    structure of the ImageJ installation and configured it for use. Everything should
    now be set up to start with the first steps in image processing.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了ImageJ的起源和使用，讨论了如何在不同的平台上下载和安装它。我们查看了ImageJ安装的基本文件夹结构，并为其配置了使用。现在一切应该设置妥当，可以开始图像处理的初步步骤。
