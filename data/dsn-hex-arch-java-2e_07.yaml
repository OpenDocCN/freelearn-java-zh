- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Building the Application Hexagon
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建应用程序六边形
- en: Once we have a foundation provided by the Domain hexagon, we can build the remaining
    part of the system on top of this. It’s time to think about how the system will
    coordinate the handling of different data and behaviors to fulfill the needs of
    different actors, and we will explore this through a discussion of use case examples.
    To accomplish this, we need to create the Application hexagon on top of the foundation
    defined by the Domain hexagon.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了领域六边形提供的基础，我们就可以在这个基础上构建系统的剩余部分。现在是时候考虑系统将如何协调处理不同的数据和行为以满足不同角色的需求了，我们将通过讨论用例示例来探讨这一点。为了实现这一点，我们需要在领域六边形定义的基础上创建应用程序六边形。
- en: To continue building the modular structure initiated in the previous chapter,
    where we configured the Domain hexagon as a **Java** module, we will continue
    to use the modular approach by defining the Application hexagon as the second
    Java module of our hexagonal system.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续构建前一章中启动的模块化结构，其中我们将领域六边形配置为**Java**模块，我们将通过定义应用程序六边形作为我们六边形系统的第二个Java模块来继续使用模块化方法。
- en: In order to provide a better view of the system’s capabilities, one recommended
    approach is to use **Cucumber**, which is a well-known behavior-driven development
    technology that uses concepts such as features and scenarios to describe the system’s
    behavior. So, for the Application hexagon, we’ll use Cucumber to help us shape
    the hexagonal system’s use cases.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地展示系统的功能，一个推荐的方法是使用**Cucumber**，这是一种知名的行为驱动开发技术，它使用诸如特性和场景等概念来描述系统的行为。因此，对于应用程序六边形，我们将使用Cucumber来帮助我们塑造六边形系统的用例。
- en: Cucumber enables us to test the Application hexagon and explain the structure
    of use cases in a non-technical way.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Cucumber使我们能够以非技术的方式测试应用程序六边形并解释用例的结构。
- en: 'In this chapter, we’ll learn about the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下主题：
- en: Bootstrapping the Application hexagon
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引导应用程序六边形
- en: Defining use cases
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义用例
- en: Implementing use cases with input ports
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用输入端口实现用例
- en: Testing the Application hexagon
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试应用程序六边形
- en: By the end of this chapter, you’ll know how to utilize use cases as a blueprint
    to drive the development of the entire Application hexagon. By expressing the
    user intent through use cases and deriving objects from them to implement ports,
    you’ll be able to develop the code to accomplish use case goals in a structured
    way.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，你将了解如何利用用例作为蓝图来驱动整个应用程序六边形的开发。通过通过用例表达用户意图并从中推导出对象以实现端口，你将能够以结构化的方式开发代码以实现用例目标。
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To compile and run the code examples presented in this chapter, you need the
    latest **Java SE Development Kit** (**JDK**) and **Maven 3.8** installed on your
    computer. They are all available for the **Linux**, **Mac**, and **Windows** operating
    systems.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了编译和运行本章中展示的代码示例，你需要在你的计算机上安装最新的**Java SE开发工具包**（**JDK**）和**Maven 3.8**。它们都适用于**Linux**、**Mac**和**Windows**操作系统。
- en: You can find the code files for this chapter on GitHub at [https://github.com/PacktPublishing/-Designing-Hexagonal-Architecture-with-Java---Second-Edition/tree/main/Chapter07](https://github.com/PacktPublishing/-Designing-Hexagonal-Architecture-with-Java---Second-Edition/tree/main/Chapter07).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在GitHub上找到本章的代码文件，链接为[https://github.com/PacktPublishing/-Designing-Hexagonal-Architecture-with-Java---Second-Edition/tree/main/Chapter07](https://github.com/PacktPublishing/-Designing-Hexagonal-Architecture-with-Java---Second-Edition/tree/main/Chapter07)。
- en: Bootstrapping the Application hexagon
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引导应用程序六边形
- en: The Application hexagon orchestrates internal requests through the Domain hexagon
    and external requests through the Framework hexagon. We construct the system’s
    features based on the domain model provided by the Domain hexagon, with ports
    and use cases. In the Application hexagon, we don’t specify any constraint or
    business rule. Instead, our aim for the Application hexagon is to define and control
    the data flow in the hexagonal system.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序六边形通过领域六边形协调内部请求，通过框架六边形协调外部请求。我们根据领域六边形提供的领域模型构建系统的特性，包括端口和用例。在应用程序六边形中，我们不指定任何约束或业务规则。相反，我们对于应用程序六边形的目的是定义和控制六边形系统中的数据流。
- en: 'To continue developing the topology and inventory system, we have to bootstrap
    the Application hexagon as a Maven and Java module. Let’s start with the Maven
    configuration:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续开发拓扑和库存系统，我们必须将应用程序六边形作为Maven和Java模块进行引导。让我们从Maven配置开始：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding command creates the basic Maven project’s structure for the Application
    hexagon. Here, we set the module’s `groupId` coordinate as `dev.davivieira` and
    `version` as `1.0-SNAPSHOT`, the same ones used for the parent project. We set
    `artifactId` as `application` to uniquely identify this module in the Maven project.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的命令为应用程序六边形创建了基本的 Maven 项目结构。在这里，我们将模块的 `groupId` 坐标设置为 `dev.davivieira`，`version`
    设置为 `1.0-SNAPSHOT`，与父项目使用相同。我们将 `artifactId` 设置为 `application` 以在 Maven 项目中唯一标识此模块。
- en: 'You need to run the preceding `mvn` command in the Maven project root directory
    by using the following commands:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要通过使用以下命令在 Maven 项目根目录中运行前面的 `mvn` 命令：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This creates the skeleton project structure for the Application hexagon. The
    directory structure will be like the following screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这为应用程序六边形创建了基本的项目结构。目录结构将类似于以下截图：
- en: '![Figure 7.1 – The directory structure of the Application hexagon](img/B19777_07_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.1 – 应用程序六边形的目录结构](img/B19777_07_01.jpg)'
- en: Figure 7.1 – The directory structure of the Application hexagon
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1 – 应用程序六边形的目录结构
- en: 'The root `pom.xml` file should contain the `application` and `domain` Maven
    modules:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 根 `pom.xml` 文件应包含 `application` 和 `domain` Maven 模块：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Following the Maven module project creation, we need to configure the Application
    hexagon as a Java module by creating the `module` descriptor file in `application/src/java/module-info.java`:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建 Maven 模块项目之后，我们需要通过在 `application/src/java/module-info.java` 中创建 `module`
    描述符文件来将应用程序六边形配置为 Java 模块：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Note the first `requires` entry – it states that the `application` module depends
    on the `domain` module. We need to add the Domain hexagon dependency at `application/pom.xml`:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意第一个 `requires` 条目 – 它声明 `application` 模块依赖于 `domain` 模块。我们需要在 `application/pom.xml`
    中添加领域六边形的依赖项：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The Maven coordinates `groupId`, `artifactId`, and `version` specify the correct
    parameters to fetch the Domain hexagon’s Maven module.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 坐标 `groupId`、`artifactId` 和 `version` 指定了获取领域六边形 Maven 模块的正确参数。
- en: 'Because we’ll utilize Cucumber to provide a written description and also test
    our use cases, we need to add its dependencies to `application/pom.xml`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将使用 Cucumber 提供书面描述并测试我们的用例，因此我们需要将其依赖项添加到 `application/pom.xml` 文件中：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As stated in this chapter’s introduction, we’ll use Cucumber to structure and
    test use cases. The Maven dependencies declared in the previous code examples
    are required to enable Cucumber in the Application hexagon.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如本章引言所述，我们将使用 Cucumber 来构建和测试用例。在之前的代码示例中声明的 Maven 依赖项是启用应用程序六边形中 Cucumber 的必需条件。
- en: Once the Application hexagon’s Maven module and Java module are properly configured
    for the topology and inventory system, we can move on and start defining use cases
    for the system.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦为拓扑和库存系统正确配置了应用程序六边形的 Maven 模块和 Java 模块，我们就可以继续并开始定义系统的用例。
- en: Defining use cases
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义用例
- en: The topology and inventory system allows users to manage network resources such
    as routers, switches, and networks. To enable this management, we created a domain
    model in the previous chapter that represents the relationship between those resources.
    What we have to do now is construct the system’s features in terms of the domain
    model. These features represent user intent when interacting with the system.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 拓扑和库存系统允许用户管理网络资源，如路由器、交换机和网络。为了启用此管理，我们在上一章创建了一个表示这些资源之间关系的领域模型。我们现在必须从领域模型的角度构建系统的特性。这些特性代表了用户与系统交互时的意图。
- en: To make it possible to express use cases in both written and code form, we use
    Cucumber, a valuable tool to enable non-technical people to grasp the use cases
    that exist in the code.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够以书面和代码形式表达用例，我们使用 Cucumber，这是一个有价值的工具，使非技术人员能够理解代码中存在的用例。
- en: By relying on Cucumber concepts such as features and scenarios, we can create
    use case descriptions that are easy to follow. The use case descriptions that
    are shaped using Cucumber can serve as references to develop use case interfaces.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 通过依赖 Cucumber 的概念，如特性和场景，我们可以创建易于遵循的用例描述。使用 Cucumber 形成的用例描述可以作为开发用例接口的参考。
- en: Before creating the use case interfaces for the topology and inventory system,
    we first need to structure the use cases in feature files consumed by Cucumber.
    Feature files are where we’ll describe a sequence of written statements that define
    the use case. This same written description is then used while implementing the
    classes to test the use case.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建拓扑和库存系统的用例接口之前，我们首先需要结构化Cucumber使用功能文件中的用例。功能文件是我们将描述一系列书面语句以定义用例的地方。这个相同的书面描述随后在实现类以测试用例时使用。
- en: Creating written descriptions for router management use cases
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为路由器管理用例编写描述
- en: 'To get started, let’s create the `RouterAdd.feature` file, which describes
    the use case related to adding routers to the system:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，让我们创建`RouterAdd.feature`文件，该文件描述了将路由器添加到系统中的用例：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This feature file describes two scenarios – the first is when a user wants to
    add an edge router to a core router; the second is when the user wants to add
    a core router to another core router.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能文件描述了两个场景——第一个是当用户想要将边缘路由器添加到核心路由器时；第二个是当用户想要将核心路由器添加到另一个核心路由器时。
- en: 'After that, we have the `RouterCreate.feature` file:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们有`RouterCreate.feature`文件：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here, we have two scenarios describing the creation of both core and edge routers.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有两个场景，描述了核心路由器和边缘路由器的创建。
- en: 'Finally, there is the `RouterRemove.feature` file:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，是`RouterRemove.feature`文件：
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: For each of the two scenarios described, we define a specific set of constraints
    to allow the removal of the router. Once we have Cucumber scenarios describing
    the supported behaviors regarding router management, we can define the use case
    interface that will allow the implementation of the operations. These operations
    will enable such behaviors.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于描述的两个场景中的每一个，我们定义一组特定的约束以允许移除路由器。一旦我们有Cucumber场景描述了关于路由器管理的支持行为，我们就可以定义将允许实现这些操作的用例接口。这些操作将启用这些行为。
- en: Defining the use case interface for router management
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义路由器管理用例接口
- en: 'A good use case interface for router management should contain the operations
    that allow the system to fulfill the scenarios described by the `RouterAdd.feature`,
    `RouterCreate.feature`, and `RouterRemove.feature` files. The following use case
    interface is defined in reference to the scenarios we described in the Cucumber
    feature files:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的路由器管理用例接口应该包含允许系统实现由`RouterAdd.feature`、`RouterCreate.feature`和`RouterRemove.feature`文件描述的场景的操作。以下用例接口是根据我们在Cucumber功能文件中描述的场景定义的：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `createRouter` method is based on the `RouterCreate.feature` Cucumber file.
    The `addRouterToCoreRouter` and `removeRouterFromCoreRouter` methods are for the
    `RouterAdd.feature` and `RouterRemove.feature` files, respectively. Now, let’s
    move on to creating the written descriptions for the switch management use cases.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`createRouter`方法基于`RouterCreate.feature` Cucumber文件。`addRouterToCoreRouter`和`removeRouterFromCoreRouter`方法分别对应于`RouterAdd.feature`和`RouterRemove.feature`文件。现在，让我们继续创建交换机管理用例的书面描述。'
- en: Creating written descriptions for switch management use cases
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为交换机管理用例编写描述
- en: 'We will start by creating the `SwitchAdd.feature` file:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先创建`SwitchAdd.feature`文件：
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This is a very straightforward use case scenario. Given that we provide a valid
    switch, we can add it to an edge router. There is no mention of the core routers
    because they are not supposed to receive switch connections.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常直接的用例场景。鉴于我们提供了一个有效的交换机，我们可以将其添加到边缘路由器中。没有提到核心路由器，因为它们不应该接收交换机连接。
- en: 'Then, we create the `SwitchCreate.feature` file:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们创建`SwitchCreate.feature`文件：
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '@SwitchRemove'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '@SwitchRemove'
- en: 'Feature: Can I remove a switch from an edge router?'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 'Feature: 我能否从边缘路由器中移除一个交换机？'
- en: 'Scenario: Removing a switch from an edge router'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 'Scenario: 从边缘路由器中移除交换机'
- en: Given I know the switch I want to remove
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Given I know the switch I want to remove
- en: And The switch has no networks
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: And The switch has no networks
- en: Then I remove the switch from the edge router
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我从边缘路由器中移除了交换机
- en: '[PRE12]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: package dev.davivieira.topologyinventory.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: package dev.davivieira.topologyinventory.
- en: application.usecases;
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: application.usecases;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: entity.EdgeRouter;
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: entity.EdgeRouter;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: entity.Switch;
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: entity.Switch;
- en: import dev.davivieira.topologyinventory.domain.vo.IP;
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.IP;
- en: import dev.davivieira.topologyinventory.domain.vo.Location;
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.Location;
- en: import dev.davivieira.topologyinventory.domain.vo.Model;
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.Model;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.SwitchType;
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: vo.SwitchType;
- en: import dev.davivieira.topologyinventory.domain.vo.Vendor;
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.Vendor;
- en: public interface SwitchManagementUseCase {
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: public interface SwitchManagementUseCase {
- en: Switch createSwitch(
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Switch createSwitch(
- en: Vendor vendor,
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Vendor vendor,
- en: Model model,
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Model model,
- en: IP ip,
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: IP ip,
- en: Location location,
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Location location,
- en: SwitchType switchType
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: SwitchType switchType
- en: );
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: EdgeRouter addSwitchToEdgeRouter(Switch networkSwitch,
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: EdgeRouter addSwitchToEdgeRouter(Switch networkSwitch,
- en: EdgeRouter edgeRouter);
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: EdgeRouter edgeRouter);
- en: EdgeRouter removeSwitchFromEdgeRouter(Switch
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: EdgeRouter removeSwitchFromEdgeRouter(Switch
- en: networkSwitch,
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: networkSwitch,
- en: EdgeRouter edgeRouter);
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: EdgeRouter edgeRouter);
- en: '}'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE13]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '@NetworkAdd'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '@NetworkAdd'
- en: 'Feature: Can I add a network to a switch?'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 功能：能否向交换机添加网络？
- en: 'Scenario: Adding a network to a switch'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 场景：向交换机添加网络
- en: Given I have a network
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Given 我有一个网络
- en: And I have a switch to add a network
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 并且我有一个交换机来添加网络
- en: Then I add the network to the switch
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我将网络添加到交换机
- en: '[PRE14]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '@NetworkCreate'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '@NetworkCreate'
- en: 'Feature: Can I create new networks?'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 功能：能否创建新的网络？
- en: 'Scenario: Creating a new network'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 场景：创建一个新的网络
- en: Given I provide all required data to create a network
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Given 我提供了创建网络所需的所有数据
- en: Then A new network is created
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建了一个新的网络
- en: '[PRE15]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '@NetworkRemove'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '@NetworkRemove'
- en: 'Feature: Can I remove a network from a switch?'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 功能：能否从一个交换机中删除网络？
- en: 'Scenario: Removing a network from a switch'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 场景：从交换机中删除网络
- en: Given I know the network I want to remove
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Given 我知道我想要删除的网络
- en: And I have a switch to remove a network
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 并且我有一个交换机来删除网络
- en: Then I remove the network from the switch
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我从交换机中删除网络
- en: '[PRE16]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: package dev.davivieira.topologyinventory.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: package dev.davivieira.topologyinventory.
- en: application.usecases;
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: application.usecases;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: entity.Switch;
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: entity.Switch;
- en: import dev.davivieira.topologyinventory.domain.vo.IP;
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.IP;
- en: import dev.davivieira.topologyinventory.domain.vo.Network;
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.Network;
- en: public interface NetworkManagementUseCase {
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: public interface NetworkManagementUseCase {
- en: Network createNetwork(
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Network createNetwork(
- en: IP networkAddress,
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: IP networkAddress,
- en: String networkName,
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: String networkName,
- en: int networkCidr);
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: int networkCidr);
- en: Switch addNetworkToSwitch(Network network,
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Switch addNetworkToSwitch(Network network,
- en: Switch networkSwitch);
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Switch networkSwitch);
- en: Switch removeNetworkFromSwitch(Network network,
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Switch removeNetworkFromSwitch(Network network,
- en: Switch networkSwitch);
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Switch networkSwitch);
- en: '}'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE17]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: package dev.davivieira.topologyinventory.application.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: package dev.davivieira.topologyinventory.application.
- en: ports.input;
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ports.input;
- en: import dev.davivieira.topologyinventory.application.
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.application.
- en: ports.output.RouterManagementOutputPort;
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ports.output.RouterManagementOutputPort;
- en: import dev.davivieira.topologyinventory.application.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.application.
- en: usecases.RouterManagementUseCase;
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: usecases.RouterManagementUseCase;
- en: import dev.davivieira.topologyinventory.domain.entity.
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.entity.
- en: CoreRouter;
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CoreRouter;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: entity.Router;
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: entity.Router;
- en: import dev.davivieira.topologyinventory.domain.entity.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.entity.
- en: factory.RouterFactory;
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: factory.RouterFactory;
- en: import dev.davivieira.topologyinventory.domain.vo.IP;
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.IP;
- en: import dev.davivieira.topologyinventory.domain.vo.Id;
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.Id;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.Location;
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vo.Location;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.Model;
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vo.Model;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.RouterType;
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vo.RouterType;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.Vendor;
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vo.Vendor;
- en: import lombok.NoArgsConstructor;
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import lombok@NoArgsConstructor;
- en: '@NoArgsConstructor'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@NoArgsConstructor'
- en: public class RouterManagementInputPort implements
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public class RouterManagementInputPort implements
- en: RouterManagementUseCase {
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RouterManagementUseCase {
- en: RouterManagementOutputPort
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RouterManagementOutputPort
- en: routerManagementOutputPort;
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: routerManagementOutputPort;
- en: /** Code omitted
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: /** 代码省略
- en: '}'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE18]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '@Override'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public Router createRouter(Vendor vendor,
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public Router createRouter(Vendor vendor,
- en: Model model,
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Model model,
- en: IP ip,
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: IP ip,
- en: Location location,
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Location location,
- en: RouterType routerType) {
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RouterType routerType) {
- en: return RouterFactory.getRouter(
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return RouterFactory.getRouter(
- en: vendor,model,ip,location,routerType);
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vendor,model,ip,location,routerType);
- en: '}'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE19]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '@Override'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public Router retrieveRouter(Id id) {
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public Router retrieveRouter(Id id) {
- en: return
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return
- en: routerManagementOutputPort.retrieveRouter(id);
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: routerManagementOutputPort.retrieveRouter(id);
- en: '}'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE20]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '@Override'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public Router persistRouter(Router router) {
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public Router persistRouter(Router router) {
- en: return
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return
- en: routerManagementOutputPort.persistRouter(router);
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: routerManagementOutputPort.persistRouter(router);
- en: '}'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE21]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '@Override'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public CoreRouter addRouterToCoreRouter(Router router,
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public CoreRouter addRouterToCoreRouter(Router router,
- en: CoreRouter coreRouter) {
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CoreRouter coreRouter) {
- en: var addedRouter = coreRouter.addRouter(router);
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var addedRouter = coreRouter.addRouter(router);
- en: //persistRouter(addedRouter);
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: //persistRouter(addedRouter);
- en: return addedRouter;
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return addedRouter;
- en: '}'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE22]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '@Override'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public Router removeRouterFromCoreRouter(Router rout
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public Router removeRouterFromCoreRouter(Router rout
- en: er,CoreRouter coreRouter) {
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: er,CoreRouter coreRouter) {
- en: var removedRouter =
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var removedRouter =
- en: coreRouter.removeRouter(router);
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: coreRouter.removeRouter(router);
- en: //persistRouter(removedRouter);
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: //persistRouter(removedRouter);
- en: return removedRouter;
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return removedRouter;
- en: '}'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE23]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: public static Router getRouter(Vendor vendor,
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: public static Router getRouter(Vendor vendor,
- en: Model model,
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: Model model,
- en: IP ip,
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: IP ip,
- en: Location location,
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: Location location,
- en: RouterType routerType){
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: RouterType routerType){
- en: switch (routerType){
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: switch (routerType){
- en: case CORE → { return CoreRouter.builder().
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: case CORE → { return CoreRouter.builder().
- en: id(Id.withoutId()).
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: id(Id.withoutId()).
- en: vendor(vendor).
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: vendor(vendor).
- en: model(model).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: model(model).
- en: ip(ip).
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: ip(ip).
- en: location(location).
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: location(location).
- en: routerType(routerType).
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: routerType(routerType).
- en: build();
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: build();
- en: '}'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** Code omitted **/
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: /** 代码省略 **/
- en: '[PRE24]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: case EDGE → {  return EdgeRouter.builder().
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: case EDGE → {  return EdgeRouter.builder().
- en: id(Id.withoutId()).
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: id(Id.withoutId()).
- en: vendor(vendor).
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: vendor(vendor).
- en: model(model).
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: model(model).
- en: ip(ip).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: ip(ip).
- en: location(location).
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: location(location).
- en: routerType(routerType).
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: routerType(routerType).
- en: build();
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: build();
- en: '}'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: default → throw new UnsupportedOperationException(
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: default → throw new UnsupportedOperationException(
- en: '"No valid router type informed");'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '"No valid router type informed");'
- en: '[PRE25]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: package dev.davivieira.topologyinventory.application.
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: package dev.davivieira.topologyinventory.application.
- en: ports.input;
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ports.input;
- en: import dev.davivieira.topologyinventory.application.
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.application.
- en: usecases.SwitchManagementUseCase;
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: usecases.SwitchManagementUseCase;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: entity.EdgeRouter;
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: entity.EdgeRouter;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: entity.Switch;
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: entity.Switch;
- en: import dev.davivieira.topologyinventory.domain.vo.IP;
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.IP;
- en: import dev.davivieira.topologyinventory.domain.vo.Id;
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.Id;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.Location;
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vo.Location;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.Model;
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vo.Model;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.SwitchType;
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vo.SwitchType;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.Vendor;
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vo.Vendor;
- en: public class SwitchManagementInputPort implements
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public class SwitchManagementInputPort implements
- en: SwitchManagementUseCase {
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SwitchManagementUseCase {
- en: '@Override'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public Switch createSwitch(
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public Switch createSwitch(
- en: Vendor vendor,
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Vendor vendor,
- en: Model model,
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Model model,
- en: IP ip,
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: IP ip,
- en: Location location,
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Location location,
- en: SwitchType switchType) {
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SwitchType switchType) {
- en: return Switch.builder()
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return Switch.builder()
- en: .id(Id.withoutId())
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .id(Id.withoutId())
- en: .vendor(vendor)
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .vendor(vendor)
- en: .model(model)
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .model(model)
- en: .ip(ip)
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .ip(ip)
- en: .location(location).switchType
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .location(location).switchType
- en: (switchType).build();
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: (switchType).build();
- en: '}'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: /** Code omitted **/
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: /** 代码省略 **/
- en: '}'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE26]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '@Override'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public EdgeRouter addSwitchToEdgeRouter(
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public EdgeRouter addSwitchToEdgeRouter(
- en: Switch networkSwitch, EdgeRouter edgeRouter) {
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Switch networkSwitch, EdgeRouter edgeRouter) {
- en: edgeRouter.addSwitch(networkSwitch);
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edgeRouter.addSwitch(networkSwitch);
- en: return edgeRouter;
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return edgeRouter;
- en: '}'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE27]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '@Override'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public EdgeRouter removeSwitchFromEdgeRouter(
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public EdgeRouter removeSwitchFromEdgeRouter(
- en: Switch networkSwitch,EdgeRouter edgeRouter) {
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Switch networkSwitch,EdgeRouter edgeRouter) {
- en: edgeRouter.removeSwitch(networkSwitch);
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edgeRouter.removeSwitch(networkSwitch);
- en: return edgeRouter;
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return edgeRouter;
- en: '}'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE28]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: package dev.davivieira.topologyinventory.
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: package dev.davivieira.topologyinventory.
- en: application.ports.input;
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: application.ports.input;
- en: import dev.davivieira.topologyinventory.application.
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.application.
- en: usecases.NetworkManagementUseCase;
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: usecases.NetworkManagementUseCase;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: entity.Switch;
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: entity.Switch;
- en: import dev.davivieira.topologyinventory.domain.vo.IP;
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.vo.IP;
- en: import dev.davivieira.topologyinventory.domain.
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import dev.davivieira.topologyinventory.domain.
- en: vo.Network;
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: vo.Network;
- en: import lombok.NoArgsConstructor;
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import lombokNoArgsConstructor;
- en: '@NoArgsConstructor'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@NoArgsConstructor'
- en: public class NetworkManagementInputPort implements
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public class NetworkManagementInputPort implements
- en: NetworkManagementUseCase {
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: NetworkManagementUseCase {
- en: '@Override'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public Network createNetwork(
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public Network createNetwork(
- en: IP networkAddress, String networkName,
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: IP networkAddress, String networkName,
- en: int networkCidr) {
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: int networkCidr) {
- en: return  Network
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return  Network
- en: .builder()
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .builder()
- en: .networkAddress(networkAddress)
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .networkAddress(networkAddress)
- en: .networkName(networkName)
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .networkName(networkName)
- en: .networkCidr(networkCidr).build();
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .networkCidr(networkCidr).build();
- en: '}'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: /** Code omitted **/
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: /** 代码省略 **/
- en: '}'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE29]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '@Override'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public Switch addNetworkToSwitch(
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public Switch addNetworkToSwitch(
- en: Network network, Switch networkSwitch) {
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Network network, Switch networkSwitch) {
- en: networkSwitch.addNetworkToSwitch(network);
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: networkSwitch.addNetworkToSwitch(network);
- en: return networkSwitch;
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return networkSwitch;
- en: '}'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE30]'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '@Override'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Override'
- en: public Switch removeNetworkFromSwitch(
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public Switch removeNetworkFromSwitch(
- en: Network network, Switch networkSwitch) {
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Network network, Switch networkSwitch) {
- en: networkSwitch.removeNetworkFromSwitch(network);
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: networkSwitch.removeNetworkFromSwitch(network);
- en: return networkSwitch;
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return networkSwitch;
- en: '}'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE31]'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: package dev.davivieira.topologyinventory.application;
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: package dev.davivieira.topologyinventory.application;
- en: import io.cucumber.junit.Cucumber;
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: import io.cucumber.junit.Cucumber;
- en: import io.cucumber.junit.CucumberOptions;
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: import io.cucumber.junit.CucumberOptions;
- en: import org.junit.runner.RunWith;
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: import org.junit.runner.RunWith;
- en: '@RunWith(Cucumber.class)'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '@RunWith(Cucumber.class)'
- en: '@CucumberOptions('
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '@CucumberOptions('
- en: plugin = {"pretty", "html:target/cucumber-result"}
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: plugin = {"pretty", "html:target/cucumber-result"}
- en: )
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: public class ApplicationTest {
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: public class ApplicationTest {
- en: '}'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE32]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '@Given("I have an edge router")'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Given("我有一个边缘路由器")'
- en: public void assert_edge_router_exists(){
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void assert_edge_router_exists(){
- en: edgeRouter = (EdgeRouter)
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edgeRouter = (EdgeRouter)
- en: this.routerManagementUseCase.createRouter(
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: this.routerManagementUseCase.createRouter(
- en: Vendor.HP,
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Vendor.HP,
- en: Model.XYZ0004,
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Model.XYZ0004,
- en: IP.fromAddress("20.0.0.1"),
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: IP.fromAddress("20.0.0.1"),
- en: locationA,
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: locationA,
- en: EDGE
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: EDGE
- en: );
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: );
- en: assertNotNull(edgeRouter);
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertNotNull(edgeRouter);
- en: '}'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE33]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '@And("I have a core router")'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@And("我有一个核心路由器")'
- en: public void assert_core_router_exists(){
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void assert_core_router_exists(){
- en: coreRouter = (CoreRouter)
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: coreRouter = (CoreRouter)
- en: this.routerManagementUseCase.createRouter(
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: this.routerManagementUseCase.createRouter(
- en: Vendor.CISCO,
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Vendor.CISCO,
- en: Model.XYZ0001,
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Model.XYZ0001,
- en: IP.fromAddress("30.0.0.1"),
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: IP.fromAddress("30.0.0.1"),
- en: locationA,
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: locationA,
- en: CORE
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CORE
- en: );
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: );
- en: assertNotNull(coreRouter);
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertNotNull(coreRouter);
- en: '}'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE34]'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '@Then("I add an edge router to a core router")'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Then("我添加了一个边缘路由器到核心路由器")'
- en: public void add_edge_to_core_router(){
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void add_edge_to_core_router(){
- en: var actualEdgeId = edgeRouter.getId();
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var actualEdgeId = edgeRouter.getId();
- en: var routerWithEdge =
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var routerWithEdge =
- en: (CoreRouter)  this.routerManagementUseCase.
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: (CoreRouter)  this.routerManagementUseCase.
- en: addRouterToCoreRouter(edgeRouter, coreRouter);
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: addRouterToCoreRouter(edgeRouter, coreRouter);
- en: var expectedEdgeId =
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var expectedEdgeId =
- en: routerWithEdge.getRouters().get(actualEdgeId).
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: routerWithEdge.getRouters().get(actualEdgeId).
- en: getId();
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: getId();
- en: assertEquals(actualEdgeId, expectedEdgeId);
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertEquals(actualEdgeId, expectedEdgeId);
- en: '}'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE35]'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: mvn test
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: mvn test
- en: '[PRE36]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '@RouterAdd'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '@RouterAdd'
- en: 'Scenario: Adding an edge router to a core router # dev/davivieira/topologyinventory/application/routers/RouterAdd.feature:4'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 'Scenario: 将边缘路由器添加到核心路由器 # dev/davivieira/topologyinventory/application/routers/RouterAdd.feature:4'
- en: 'Given I have an edge router # dev.davivieira.topologyinventory.application.RouterAdd.assert_edge_router_exists()'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 'Given 我有一个边缘路由器 # dev.davivieira.topologyinventory.application.RouterAdd.assert_edge_router_exists()'
- en: 'And I have a core router # dev.davivieira.topologyinventory.application.RouterAdd.assert_core_router_exists()'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 'And 我有一个核心路由器 # dev.davivieira.topologyinventory.application.RouterAdd.assert_core_router_exists()'
- en: 'Then I add an edge router to a core router # dev.davivieira.topologyinventory.application.RouterAdd.add_edge_to_core_router()'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '然后我将一个边缘路由器添加到一个核心路由器上 # dev.davivieira.topologyinventory.application.RouterAdd.add_edge_to_core_router()'
- en: '[PRE37]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '@Given("I provide all required data to create a core'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Given("我提供创建核心路由器所需的所有数据")'
- en: router")
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: router")
- en: public void create_core_router(){
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void create_core_router(){
- en: router =  this.routerManagementUseCase.
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: router =  this.routerManagementUseCase.
- en: createRouter(
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: createRouter(
- en: Vendor.CISCO,
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Vendor.CISCO,
- en: Model.XYZ0001,
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Model.XYZ0001,
- en: IP.fromAddress("20.0.0.1"),
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: IP.fromAddress("20.0.0.1"),
- en: locationA,
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: locationA,
- en: CORE
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CORE
- en: );
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE38]'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '@Then("A new core router is created")'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Then("创建了一个新的核心路由器")'
- en: public void a_new_core_router_is_created(){
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void a_new_core_router_is_created(){
- en: assertNotNull(router);
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertNotNull(router);
- en: assertEquals(CORE, router.getRouterType());
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertEquals(CORE, router.getRouterType());
- en: '}'
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE39]'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '@Given("I provide all required data to create an edge'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Given("我提供创建边缘路由器所需的所有数据")'
- en: router")
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: router")
- en: public void create_edge_router(){
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void create_edge_router(){
- en: router =
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: router =
- en: this.routerManagementUseCase.createRouter(
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: this.routerManagementUseCase.createRouter(
- en: Vendor.HP,
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Vendor.HP,
- en: Model.XYZ0004,
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Model.XYZ0004,
- en: IP.fromAddress("30.0.0.1"),
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: IP.fromAddress("30.0.0.1"),
- en: locationA,
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: locationA,
- en: EDGE
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: EDGE
- en: );
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE40]'
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '@Then("A new edge router is created")'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Then("创建了一个新的边缘路由器")'
- en: public void a_new_edge_router_is_created(){
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void a_new_edge_router_is_created(){
- en: assertNotNull(router);
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertNotNull(router);
- en: assertEquals(EDGE, router.getRouterType());
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertEquals(EDGE, router.getRouterType());
- en: '}'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE41]'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: mvn test
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: mvn test
- en: '[PRE42]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '@RouterCreate'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '@RouterCreate'
- en: 'Scenario: Creating a new edge router # dev/davivieira/topologyinventory/application/routers/RouterCreate.feature:8'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 'Scenario: 创建一个新的边缘路由器 # dev/davivieira/topologyinventory/application/routers/RouterCreate.feature:8'
- en: 'Given I provide all required data to create an edge router # dev.davivieira.topologyinventory.application.RouterCreate.create_edge_router()'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 'Given 我提供创建边缘路由器所需的所有数据 # dev.davivieira.topologyinventory.application.RouterCreate.create_edge_router()'
- en: 'Then A new edge router is created # dev.davivieira.topologyinventory.application.RouterCreate.a_new_edge_router_is_created()'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: '然后创建一个新的边缘路由器 # dev.davivieira.topologyinventory.application.RouterCreate.a_new_edge_router_is_created()'
- en: '[PRE43]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '@Given("The core router has at least one edge router'
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Given("核心路由器至少有一个边缘路由器'
- en: connected to it")
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 连接到它")
- en: public void the_core_router_has_at_least_one_edge_
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void 核心路由器至少有一个边缘路由器连接到它
- en: router_connected_to_it(){
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: router_connected_to_it(){
- en: var predicate =
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var predicate =
- en: Router.getRouterTypePredicate(EDGE);
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Router.getRouterTypePredicate(EDGE);
- en: edgeRouter = (EdgeRouter)
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edgeRouter = (EdgeRouter)
- en: this.coreRouter.getRouters().
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: this.coreRouter.getRouters().
- en: entrySet().
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: entrySet()
- en: stream().
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: stream().
- en: map(routerMap -> routerMap.getValue()).
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: map(routerMap -> routerMap.getValue()).
- en: filter(predicate).
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: filter(predicate).
- en: findFirst().get();
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: findFirst().get();
- en: assertEquals(EDGE, edgeRouter.getRouterType());
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertEquals(EDGE, edgeRouter.getRouterType());
- en: '}'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE44]'
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '@And("The switch has no networks attached to it")'
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@And("交换机没有连接到它的网络")'
- en: public void the_switch_has_no_networks_
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void 交换机没有连接到它的网络
- en: attached_to_it(){
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: attached_to_it(){
- en: var networksSize =
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var networksSize =
- en: networkSwitch.getSwitchNetworks().size();
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: networkSwitch.getSwitchNetworks().size();
- en: assertEquals(1, networksSize);
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertEquals(1, networksSize);
- en: networkSwitch.removeNetworkFromSwitch(network);
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: networkSwitch.removeNetworkFromSwitch(network);
- en: networksSize =
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: networksSize =
- en: networkSwitch.getSwitchNetworks().size();
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: networkSwitch.getSwitchNetworks().size();
- en: assertEquals(0, networksSize);
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertEquals(0, networksSize);
- en: '}'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE45]'
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '@And("The edge router has no switches attached to it")'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@And("边缘路由器没有连接到它的交换机")'
- en: public void the_edge_router_has_no_switches_
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void 边缘路由器没有连接到它的交换机
- en: attached_to_it(){
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: attached_to_it(){
- en: var switchesSize =
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var switchesSize =
- en: edgeRouter.getSwitches().size();
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edgeRouter.getSwitches().size();
- en: assertEquals(1, switchesSize);
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertEquals(1, switchesSize);
- en: edgeRouter.removeSwitch(networkSwitch);
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edgeRouter.removeSwitch(networkSwitch);
- en: switchesSize = edgeRouter.getSwitches().size();
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: switchesSize = edgeRouter.getSwitches().size();
- en: assertEquals(0, switchesSize);
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertEquals(0, switchesSize);
- en: '}'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE46]'
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '@Then("I remove the edge router from the core router")'
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '@Then("我从核心路由器中移除边缘路由器")'
- en: public void edge_router_is_removed_from_core_router(){
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: public void 从核心路由器中移除边缘路由器(){
- en: var actualID = edgeRouter.getId();
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var actualID = edgeRouter.getId();
- en: var expectedID = this.routerManagementUseCase.
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var expectedID = this.routerManagementUseCase.
- en: removeRouterFromCoreRouter(
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: removeRouterFromCoreRouter(
- en: edgeRouter, coreRouter).
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edgeRouter, coreRouter).
- en: getId();
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: getId();
- en: assertEquals(expectedID, actualID);
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assertEquals(expectedID, actualID);
- en: '}'
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE47]'
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: mvn test
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: mvn test
- en: '[PRE48]'
  id: totrans-475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '@RouterRemove'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: '@RouterRemove'
- en: 'Scenario: Removing an edge router from a core router # dev/davivieira/topologyinventory/application/routers/RouterRemove.feature:4'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: '场景：从核心路由器中移除边缘路由器 # dev/davivieira/topologyinventory/application/routers/RouterRemove.feature:4'
- en: 'Given The core router has at least one edge router connected to it # dev.davivieira.topologyinventory.application.RouterRemove.the_core_router_has_at_least_one_edge_router_connected_to_it()'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 'Given 核心路由器至少有一个边缘路由器连接到它 # dev.davivieira.topologyinventory.application.RouterRemove.the_core_router_has_at_least_one_edge_router_connected_to_it()'
- en: 'And The switch has no networks attached to it # dev.davivieira.topologyinventory.application.RouterRemove.the_switch_has_no_networks_attached_to_it()'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '并且交换机没有连接到它的网络 # dev.davivieira.topologyinventory.application.RouterRemove.the_switch_has_no_networks_attached_to_it()'
- en: 'And The edge router has no switches attached to it # dev.davivieira.topologyinventory.application.RouterRemove.the_edge_router_has_no_switches_attached_to_it()'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: '并且边缘路由器没有连接到它的交换机 # dev.davivieira.topologyinventory.application.RouterRemove.the_edge_router_has_no_switches_attached_to_it()'
- en: 'Then I remove the edge router from the core router # dev.davivieira.topologyinventory.application.RouterRemove.edge_router_is_removed_from_core_router()'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: '然后我从核心路由器中移除边缘路由器 # dev.davivieira.topologyinventory.application.RouterRemove.edge_router_is_removed_from_core_router()'
- en: '[PRE49]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
