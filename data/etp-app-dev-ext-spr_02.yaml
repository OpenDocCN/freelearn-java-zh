- en: Chapter 2. The Task Time Tracker Database
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。任务时间跟踪器数据库
- en: This chapter defines the **Task Time Tracker** (**3T**) database design and
    configures NetBeans as a client of MySQL server.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章定义了**任务时间跟踪器**（3T）数据库设计，并将NetBeans配置为MySQL服务器的客户端。
- en: 'The 3T application will be used to keep track of the time spent on different
    tasks for different company projects. The main entities are:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 3T应用程序将用于跟踪不同公司项目上花费的时间。主要实体包括：
- en: '**Company**: This is the entity that owns zero or more projects. A company
    is independent and can exist in its own right (it has no foreign keys).'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公司：这是拥有零个或多个项目的实体。公司是独立的，可以独立存在（它没有外键）。
- en: '**Project**: This represents a grouping of tasks. Each project belongs to exactly
    one company and may contain zero or more tasks.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目：这代表任务的分组。每个项目都属于一个公司，可以包含零个或多个任务。
- en: '**Tasks**: These represent activities that may be undertaken for a project.
    A task belongs to exactly one project.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任务：这些代表可能为项目承担的活动。一个任务属于一个项目。
- en: '**Users**: They are participants who undertake tasks. Users can assign time
    spent to different tasks.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户：他们是承担任务的参与者。用户可以将花费的时间分配给不同的任务。
- en: '**Task log**: This is a record of the time spent by a user on a task. The time
    spent is stored in minutes.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任务日志：这是用户在任务上花费的时间记录。花费的时间以分钟为单位存储。
- en: 'These entity definitions result in a very simple database design:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这些实体定义导致了一个非常简单的数据库设计：
- en: '![The Task Time Tracker Database](img/5457_02_21.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![任务时间跟踪器数据库](img/5457_02_21.jpg)'
- en: We will prefix all of our 3T tables with `ttt_`. Large enterprise databases
    may contain hundreds of tables, and you will soon appreciate the prefixing of
    table names to group related tables.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将所有的3T表都以`ttt_`作为前缀。大型企业数据库可能包含数百个表，您很快就会欣赏到表名的前缀以将相关表分组。
- en: Connecting NetBeans with MySQL
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用NetBeans连接MySQL
- en: 'Click on the **Services** tab in the NetBeans IDE, and navigate to **Databases**
    | **Drivers**. You will see that NetBeans comes with several different database
    drivers:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在NetBeans IDE的**服务**选项卡中，导航到**数据库** | **驱动程序**。您会看到NetBeans带有几种不同的数据库驱动程序：
- en: '![Connecting NetBeans with MySQL](img/5457_02_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_01.jpg)'
- en: 'Right-click on the **Databases** node, and click on **Register MySQL Server…**as
    shown in the following screenshot:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 右键单击**数据库**节点，然后单击**注册MySQL服务器…**，如下面的屏幕截图所示：
- en: '![Connecting NetBeans with MySQL](img/5457_02_02.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_02.jpg)'
- en: 'For Windows users, this will open a dialog box with default settings. Enter
    the admin password used when installing MySQL server in the previous chapter,
    and check the **Remember Password** option:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows用户，这将打开一个具有默认设置的对话框。在上一章安装MySQL服务器时输入管理员密码，并勾选**记住密码**选项：
- en: '![Connecting NetBeans with MySQL](img/5457_02_03.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_03.jpg)'
- en: 'Mac users will see a different window prior to setting the connection properties.
    Select the MySQL driver before clicking on the **Next** button:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Mac用户在设置连接属性之前会看到一个不同的窗口。在单击**下一步**按钮之前选择MySQL驱动程序：
- en: '![Connecting NetBeans with MySQL](img/5457_02_04.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_04.jpg)'
- en: 'This will then allow you to specify the required database connection details:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以指定所需的数据库连接详细信息：
- en: '![Connecting NetBeans with MySQL](img/5457_02_05.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_05.jpg)'
- en: 'When finished with these tasks, you will see **MySQL** **Server** listed in
    the **Databases** node. Right-click on the server, and select **Connect** to connect
    to the server (if not already connected):'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些任务后，您将在**数据库**节点中看到**MySQL服务器**。右键单击服务器，然后选择**连接**以连接到服务器（如果尚未连接）：
- en: '![Connecting NetBeans with MySQL](img/5457_02_06.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_06.jpg)'
- en: 'This will connect NetBeans to MySQL server and list the available databases.
    Right-click on the server, and select **Create Database** as shown in the following
    screenshot:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这将连接NetBeans到MySQL服务器并列出可用的数据库。右键单击服务器，然后选择**创建数据库**，如下面的屏幕截图所示：
- en: '![Connecting NetBeans with MySQL](img/5457_02_07.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_07.jpg)'
- en: 'Enter the database name as shown in the following screenshot, and click on
    **OK** to create the database:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数据库名称，如下面的屏幕截图所示，然后单击**确定**创建数据库：
- en: '![Connecting NetBeans with MySQL](img/5457_02_08.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_08.jpg)'
- en: 'The final step is to connect to the newly created **task_time_tracker** database.
    Right-click on **task_time_tracker** and select **Connect…** as shown in the following
    screenshot:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是连接到新创建的**task_time_tracker**数据库。右键单击**task_time_tracker**，然后选择**连接…**，如下面的屏幕截图所示：
- en: '![Connecting NetBeans with MySQL](img/5457_02_09.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_09.jpg)'
- en: 'This will add a MySQL database connection entry for the **task_time_tracker**
    database, which can be opened by right-clicking on it whenever required:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为**task_time_tracker**数据库添加一个MySQL数据库连接条目，可以在需要时通过右键单击打开：
- en: '![Connecting NetBeans with MySQL](img/5457_02_10.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_10.jpg)'
- en: 'Now you can right-click on the database connection and select the **Execute
    Command…** option to open the **SQL Command** editor in the workspace:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以右键单击数据库连接并选择**执行命令…**选项，在工作区中打开**SQL命令**编辑器：
- en: '![Connecting NetBeans with MySQL](img/5457_02_11.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_11.jpg)'
- en: 'The **SQL Command** editor is where you will type and execute commands against
    the database:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**SQL命令**编辑器是您将在其中输入并执行针对数据库的命令的地方：'
- en: '![Connecting NetBeans with MySQL](img/5457_02_12.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![用NetBeans连接MySQL](img/5457_02_12.jpg)'
- en: The 3T database
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3T数据库
- en: The following SQL statements define the MySQL tables used in 3T. It is possible
    to use any database, and MySQL-specific code is highlighted to identify differences
    with ANSI SQL.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的SQL语句定义了3T中使用的MySQL表。可以使用任何数据库，并且用MySQL特定的代码进行了突出以识别与ANSI SQL的不同之处。
- en: The company table
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 公司表
- en: 'A company has projects for which we need to keep track of the time spent on
    different tasks. The company is, hence, the first table that needs to be defined.
    It is a very simple structure:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 公司有项目，我们需要跟踪不同任务所花费的时间。因此，公司是需要定义的第一个表。它是一个非常简单的结构：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `auto_increment` keyword is used by MySQL to identify a number column that
    should automatically be incremental (the default rate of increment is by one number)
    based on the current highest value in the column. This is used to generate the
    `id_company` primary key values. Let''s add some company data:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL使用`auto_increment`关键字来标识应自动递增的数字列（默认递增速率为一个数字），基于列中当前最高值。这用于生成`id_company`主键值。让我们添加一些公司数据：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After entering these statements into the **SQL Command** editor, you can execute
    the statements by clicking on the button in the top-right corner of the following
    screenshot (the Run SQL button is circled):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在**SQL命令**编辑器中输入这些语句后，您可以通过单击以下截图右上角的按钮来执行这些语句（运行SQL按钮已用圈圈标出）：
- en: '![The company table](img/5457_02_13.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![公司表](img/5457_02_13.jpg)'
- en: 'The output of these statements will be shown at the bottom of the IDE:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这些语句的输出将显示在IDE的底部：
- en: '![The company table](img/5457_02_14.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![公司表](img/5457_02_14.jpg)'
- en: 'You can now view the inserted data by executing the following statement in
    the **SQL Command** editor:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以通过在**SQL命令**编辑器中执行以下语句来查看插入的数据：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Alternatively, you can also right-click on the table node in the databases
    and select **View Data…**:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您还可以右键单击数据库中的表节点，然后选择**查看数据...**：
- en: '![The company table](img/5457_02_15.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![公司表](img/5457_02_15.jpg)'
- en: 'This will result in the following screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致以下截图：
- en: '![The company table](img/5457_02_16.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![公司表](img/5457_02_16.jpg)'
- en: The projects table
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目表
- en: 'A company may have any number of projects with each project belonging to exactly
    one company. The table definition is as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一个公司可以有任意数量的项目，每个项目都属于一个公司。表定义如下：
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once again, we can add some data:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们可以添加一些数据：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In these `insert` statements, we have provided the foreign key to the company
    table and once again allowed MySQL to generate the primary keys. Executing these
    commands and browsing the `ttt_project` table data should be displayed as shown
    in the following screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些`insert`语句中，我们已经提供了对公司表的外键，并再次允许MySQL生成主键。执行这些命令并浏览`ttt_project`表数据应该显示如下截图所示：
- en: '![The projects table](img/5457_02_17.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![项目表](img/5457_02_17.jpg)'
- en: The tasks table
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 任务表
- en: 'A project may have any number of tasks with each task belonging to exactly
    one project. The table and test data can now be added as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一个项目可以有任意数量的任务，每个任务都属于一个项目。现在可以添加表和测试数据如下：
- en: '[PRE5]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We will now add a range of tasks for some of our projects:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将为一些项目添加一系列任务：
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Executing these commands and browsing the `ttt_task` table data will display
    the following screenshot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 执行这些命令并浏览`ttt_task`表数据将显示以下截图：
- en: '![The tasks table](img/5457_02_18.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![任务表](img/5457_02_18.jpg)'
- en: The user table
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户表
- en: 'The next table in our design holds user information:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设计的下一个表包含用户信息：
- en: '[PRE7]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Note that the `admin_role` column will be used to identify if a user has administrative
    permissions in the 3T application. We will now add two users:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`admin_role`列将用于标识用户是否在3T应用程序中具有管理权限。我们现在将添加两个用户：
- en: '[PRE8]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Running this set of commands will create the user table and then insert our
    two test users as displayed in the following screenshot:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 运行这组命令将创建用户表，然后插入我们的两个测试用户，如下截图所示：
- en: '![The user table](img/5457_02_19.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![用户表](img/5457_02_19.jpg)'
- en: The task log table
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 任务日志表
- en: The final table will be used to enter the time spent on different tasks.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的表将用于输入不同任务所花费的时间。
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We will now add some data to this table for our user John Smith (`jsmith`).
    Note that the time spent on each task is in minutes and that the MySQL function
    `now()` is used to return the current timestamp:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将为我们的用户约翰史密斯（`jsmith`）的表添加一些数据。请注意，每个任务所花费的时间以分钟为单位，并且MySQL函数`now()`用于返回当前时间戳：
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In a similar way, we will insert some test data for Betty Jones (`bjones`):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们将为贝蒂琼斯（`bjones`）插入一些测试数据：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The result of these `insert` statements can now be viewed as shown in the following
    screenshot:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以查看这些`insert`语句的结果，如下截图所示：
- en: '![The task log table](img/5457_02_20.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![任务日志表](img/5457_02_20.jpg)'
- en: Enterprise options for the 3T database
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3T数据库的企业选项
- en: The table and column definitions provided previously are the simplest required
    for our 3T project. There are, however, several potential options that could be
    added to enhance the structure for enterprise use.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 先前提供的表和列定义是我们3T项目所需的最简单的。然而，还有一些潜在的选项可以添加以增强企业使用的结构。
- en: Password encryption
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 密码加密
- en: Enterprise applications would require that the password field be encrypted for
    security purposes using a unidirectional algorithm. Passwords should never be
    stored in plain text, and it should never be possible to view the password in
    the database (as we can currently do). It is beyond the scope of this book to
    cover password security strategies, but a very good explanation of the core principles
    can be found at [http://www.jasypt.org/howtoencryptuserpasswords.html](http://www.jasypt.org/howtoencryptuserpasswords.html).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 企业应用程序要求密码字段使用单向算法进行加密以确保安全。密码永远不应以明文形式存储，也永远不应该在数据库中可见（就像我们目前可以做的那样）。本书的范围超出了涵盖密码安全策略的范围，但可以在[http://www.jasypt.org/howtoencryptuserpasswords.html](http://www.jasypt.org/howtoencryptuserpasswords.html)找到核心原则的非常好的解释。
- en: MySQL provides a number of password encryption functions that could be used
    for this purpose. We suggest you browse the documentation at [https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html](https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html)
    to understand the different options available.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL提供了许多密码加密函数，可以用于此目的。我们建议您浏览文档[https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html](https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html)以了解可用的不同选项。
- en: LDAP integration
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: LDAP集成
- en: Many enterprises use **LDAP** (**Lightweight Directory Access Protocol**) for
    maintaining users within their organization. LDAP is most commonly used to provide
    single sign-on, where one password for a user is shared between many services.
    The password column in the user table would, hence, not be required for such scenarios.
    If an organization spans many geographical locations, there may be several LDAP
    realms spread across different continents. Such a scenario may require a new table
    to store LDAP authorization servers. Each user may then be assigned an authorization
    LDAP server to process their logon.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 许多企业使用**LDAP**（轻量级目录访问协议）来维护其组织内的用户。LDAP最常用于提供单一登录，其中一个用户的密码在许多服务之间共享。因此，在这种情况下，用户表中的密码列将不需要。如果一个组织跨越多个地理位置，可能会有几个分布在不同大陆的LDAP领域。这种情况可能需要一个新的表来存储LDAP授权服务器。然后，每个用户可能会被分配一个授权LDAP服务器来处理他们的登录。
- en: Audit trails
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审计追踪
- en: Enterprise systems often require extensive audit trails (when and why an action
    took place and who committed it). This is especially the case for large organizations
    that are publicly held. The **Sarbanes-Oxley Act** (**SOX**), for example, requires
    that all publicly held companies based in the United States must establish internal
    controls and procedures to reduce the possibility of corporate fraud. Such processes
    include identifying authorized and unauthorized changes or potentially suspicious
    activity over any period of time.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 企业系统通常需要广泛的审计追踪（何时以及为什么发生了某个动作，以及是谁执行了它）。这对于公开上市的大型组织尤为重要。例如，**萨班斯-奥克斯法案**（**SOX**）要求所有在美国境内上市的公司必须建立内部控制和程序，以减少公司欺诈的可能性。这些流程包括识别任何时间段内的授权和未授权更改或潜在可疑活动。
- en: 'The questions "Who, When, and Why" are the basis of audit trails that need
    to be considered when designing an enterprise database. Simply adding a few additional
    columns to all tables is a very good start:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: “谁，何时，为什么”这些问题是设计企业数据库时需要考虑的审计追踪的基础。简单地向所有表添加一些额外的列是一个很好的开始：
- en: '[PRE12]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Note that this syntax is for MySQL, but similar functionality will be available
    for most databases. The `who_created` and `who_updated` columns will need to be
    updated programmatically. The developer will need to ensure that these fields
    are set correctly during processing of the relevant action. The `when_created`
    and `when_updated` columns do not need to be considered by the developer. They
    are automatically maintained by MySQL. The `when_created` field will be automatically
    set to the `current_timestamp` MySQL function that represents the query start
    time to establish the exact moment in time that the record is inserted into the
    database. The `when_updated` field will auto update each time the record itself
    is updated. Adding these four additional columns will ensure that a basic level
    of audit tracking is available. We now have the ability to view who created the
    record and when in addition to who performed the last update and when. The `ttt_company`
    table, for example, could be redesigned as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这个语法是针对MySQL的，但类似的功能对大多数数据库都是可用的。`who_created`和`who_updated`列将需要通过程序更新。开发人员需要确保在处理相关操作时这些字段被正确设置。`when_created`和`when_updated`列不需要开发人员考虑。它们会被MySQL自动维护。`when_created`字段将自动设置为`current_timestamp`
    MySQL函数，表示查询开始时间，以确定记录被插入到数据库中的确切时刻。`when_updated`字段将在每次记录本身被更新时自动更新。添加这四个额外的列将确保基本级别的审计追踪是可用的。现在我们可以查看谁创建了记录以及何时，还可以查看谁执行了最后的更新以及何时。例如，`ttt_company`表可以重新设计如下：
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Logon activity audits
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 登录活动审计
- en: 'This provides the ability to track basic user activity including who logged
    on, when they logged on, and from where they logged on. It is another crucial
    piece of the enterprise audit trail and should also include tracking of invalid
    logon attempts. This information will need to be maintained programmatically and
    requires a table with a structure similar to the following code:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这提供了跟踪基本用户活动的能力，包括谁登录了，何时登录了，以及从哪里登录了。这是企业审计追踪的另一个关键部分，还应包括跟踪无效的登录尝试。这些信息需要通过程序维护，并需要一个类似以下代码结构的表：
- en: '[PRE14]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `status` field could be used to identify the logon attempt (for example,
    **S** could represent successful and **F** could represent failed while **M**
    could represent a successful mobile device logon). The information required would
    need to be defined in the context of the compliance requirements of the enterprise.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`status`字段可以用于标识登录尝试（例如，**S**可以表示成功，**F**可以表示失败，而**M**可以表示成功的移动设备登录）。所需的信息需要根据企业的合规要求来定义。'
- en: Custom audit tables
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义审计表
- en: There is often the need to audit every action and data change for a particular
    table. In situations such as this, the "when" and "who" updated fields are not
    enough. This situation requires an audit (or snapshot) table that contains all
    fields in the original table. Each time a record is updated, the current snapshot
    is written to the audit table so that each change is available for auditing purposes.
    Such tables may also be called archive tables as the evolution of data is archived
    on every change. Custom audit tables such as these are usually not maintained
    programmatically and are managed by the RDBMS, either by triggers or by built-in
    logging/archiving functionality.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 通常需要审计特定表的每个操作和数据更改。在这种情况下，“何时”和“谁”更新字段是不够的。这种情况需要一个包含原始表中所有字段的审计（或快照）表。每次记录更新时，当前快照都会被写入审计表，以便每个更改都可以用于审计目的。这样的表也可能被称为存档表，因为数据的演变在每次更改时都被存档。这些自定义审计表通常不是通过编程方式维护的，而是由关系数据库管理系统（RDBMS）管理，可以通过触发器或内置的日志记录/存档功能来管理。
- en: Summary
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter has defined a database structure that will be used to build the
    3T application. We have connected to the MySQL server and executed a series of
    SQL statements to create and populate a set of tables. Each table uses `autoincrement`
    columns to allow MySQL to automatically manage and generate primary keys. Although
    the table structures are not complex, we have also identified possible enhancements
    that could be appropriate for enterprise use.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 本章定义了一个将用于构建3T应用程序的数据库结构。我们已连接到MySQL服务器并执行了一系列SQL语句来创建和填充一组表。每个表都使用“自动增量”列，以便MySQL可以自动管理和生成主键。虽然表结构并不复杂，但我们也已经确定了可能适用于企业使用的可能增强功能。
- en: In [Chapter 3](ch03.html "Chapter 3. Reverse Engineering the Domain Layer with
    JPA"), *Reverse Engineering the Domain Layer with JPA*, we will start our Java
    journey by reverse engineering our database to create a set of **Java Persistence
    API** (**JPA**) entities. Our JPA domain layer will become the data heart of our
    3T application.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第3章](ch03.html "第3章。使用JPA逆向工程领域层")中，*使用JPA逆向工程领域层*，我们将通过逆向工程我们的数据库来创建一组**Java持久化API**（**JPA**）实体，开始我们的Java之旅。我们的JPA领域层将成为我们3T应用程序的数据核心。
