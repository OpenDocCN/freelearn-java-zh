- en: Chapter 1. Apache Maven – Introduction and Installation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. Apache Maven – 简介和安装
- en: '"A journey of a thousand miles starts with a single step", Lao Tzu. Rightly
    so, if you are reading this sentence here, you have taken a step towards a journey
    of Maven with Eclipse. As part of this journey, in the very first chapter, we
    will introduce you to Maven and its basic architecture and then guide you through
    the installation process through the following subtopics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: “千里之行，始于足下”，老子。正如此，如果你在这里阅读这句话，你已经迈出了迈向Maven之旅的第一步，使用Eclipse作为这一旅程的一部分。在这一旅程的第一章，我们将向您介绍Maven及其基本架构，然后通过以下子主题引导您完成安装过程：
- en: Introduction to Maven
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maven简介
- en: Maven's origin
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maven的起源
- en: Maven's principles
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maven的原则
- en: Maven's component architecture
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maven的组件架构
- en: Maven versus Ant
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maven与Ant的比较
- en: Downloading Maven
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载Maven
- en: Installing Maven
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Maven
- en: Installing Maven on Windows
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上安装Maven
- en: Installing Maven on Linux and Mac OS
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Linux和Mac OS上安装Maven
- en: Verifying the installation of Maven
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证Maven的安装
- en: Introduction to Maven
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Maven简介
- en: 'Apache Maven''s official site states that **Apache Maven**, which is also known
    as **Maven**, is a software project management and comprehension tool. Generally,
    software project management comprises planning, organizing, managing resource
    pools, and developing resource estimates; hence, it is a meaningless abstraction
    to justify Maven offerings. To put it in simple words, Maven is a comprehensive
    approach towards the process of applying patterns to a build infrastructure with
    primary goals as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Maven的官方网站声明，**Apache Maven**，也称为**Maven**，是一个软件项目管理和理解工具。通常，软件项目管理包括规划、组织、管理资源池和开发资源估算；因此，用Maven提供的产品来证明其价值是一种无意义的抽象。简单来说，Maven是一种将模式应用于构建基础设施的综合方法，其主要目标如下：
- en: Easing the build process
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简化构建过程
- en: Providing a uniform build system
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供统一的构建系统
- en: Providing quality project information
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供高质量的项目信息
- en: Providing guidelines for best practice development
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供最佳实践开发的指南
- en: Allowing transparent migration to new features
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许透明迁移到新功能
- en: In order to achieve the preceding goals, Maven provides a set of build standards,
    an artifact repository model, an engine that describes projects, and a standard
    lifecycle to build, test, and deploy project artifacts.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现上述目标，Maven提供了一套构建标准、一个工件仓库模型、一个描述项目的引擎以及一个标准的生命周期来构建、测试和部署项目工件。
- en: Maven's origin
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Maven的起源
- en: Maven, a Yiddish word that means *accumulator of knowledge*, was initially started
    as an attempt to simplify the build processes in the Jakarta Turbine project.
    Prior to Maven, Ant was the build tool used across projects, and there were different
    Ant build files across different projects. Also, there were no standard or consistent
    Ant build files for projects, and JARs were also required to be checked in subversion.
    Hence, there was a growing necessity to standardize the project's build process
    and its structure, publish project information, and reuse JARs across projects,
    which resulted in the formation of a new tool, Maven. Maven has made the day-to-day
    work of developers easy, and it provides comprehension of any Java project.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Maven，一个意第绪语单词，意为*知识的积累者*，最初是作为简化Jakarta Turbine项目中构建过程的尝试而启动的。在Maven之前，Ant是跨项目使用的构建工具，不同项目之间有不同的Ant构建文件。此外，没有标准或一致的项目Ant构建文件，JAR文件也需要在子版本控制系统中进行检查。因此，有必要标准化项目的构建过程及其结构，发布项目信息，并在项目之间重用JAR文件，这导致了新工具Maven的形成。Maven使开发者的日常工作变得容易，并为任何Java项目提供了理解。
- en: Maven's principles
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Maven的原则
- en: 'Maven''s principles can be stated in the following points:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Maven的原则可以概括为以下几点：
- en: '**Convention over configuration**: Maven defines the default project structure
    and builds a life cycle that eases the burden during development. By specifying
    a publicly defined model, it makes the project more understandable.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**约定优于配置**：Maven定义了默认的项目结构，并构建了一个简化开发负担的生命周期。通过指定一个公开定义的模型，它使得项目更加易于理解。'
- en: '**Declarative execution**: Maven defines a build life cycle that comprises
    phases, which in turn are made up of plugin goals. Plugins and goals can be included
    declaratively in the `pom` file to customize the execution of a project.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**声明式执行**：Maven定义了一个包含阶段的生命周期，这些阶段又由插件目标组成。插件和目标可以声明性地包含在`pom`文件中，以自定义项目的执行。'
- en: '**Reusability**: Maven was built with reusability in mind. The build and execution
    declaration in one project can be used across different projects. Maven also makes
    it easier to create a component and integrate it into a multiproject build system.
    Also, with Maven Best Practices, development across the industry is encouraged.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可重用性**：Maven的构建和执行声明是以可重用性为前提构建的。一个项目的构建和执行声明可以在不同的项目中使用。Maven还使得创建组件并将其集成到多项目构建系统中变得更加容易。此外，通过Maven最佳实践，鼓励整个行业进行开发。'
- en: '**Coherent organization of dependency**: Maven takes care of dependency management,
    thus reducing the burden on the part of developers. Different conflicts across
    dependencies are also handled beautifully.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**依赖的一致性组织**：Maven负责依赖管理，从而减轻了开发者的负担。不同依赖之间的冲突也得到了很好的处理。'
- en: '**Focus on writing applications**: With a standard project layout and build
    lifecycle, there is no need to develop the build; the focus should primarily be
    on building the application.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专注于编写应用程序**：有了标准的项目布局和构建生命周期，就不需要开发构建；重点应该主要放在构建应用程序上。'
- en: Maven's component architecture
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Maven的组件架构
- en: 'Maven is built around different components as shown in the following diagram:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Maven是围绕以下图所示的各个组件构建的：
- en: '![Maven''s component architecture](img/00002.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![Maven的组件架构](img/00002.jpeg)'
- en: '**Maven component architecture (Reference Apache Team Presentation)**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**Maven组件架构（参考Apache团队演示）**'
- en: The Plexus container
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Plexus容器
- en: 'Plexus is an IOC container that provides component-oriented programming to
    build modular, reusable components that can be easily assembled and reused. Some
    of the features supported are as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Plexus是一个IOC容器，它提供面向组件的编程，以构建模块化、可重用的组件，这些组件可以轻松组装和重用。它支持的一些功能如下：
- en: Component lifecycles
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件生命周期
- en: Component instantiation strategies
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件实例化策略
- en: Nested containers
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌套容器
- en: Component configuration
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件配置
- en: Auto-wiring
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动装配
- en: Component dependencies
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件依赖
- en: Various dependency injection techniques, including constructor injection, setter
    injection, and private field injection
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括构造函数注入、setter注入和私有字段注入在内的各种依赖注入技术
- en: Note
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information on this can be found at [http://plexus.codehaus.org/](http://plexus.codehaus.org/).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息可以在[http://plexus.codehaus.org/](http://plexus.codehaus.org/)找到。
- en: Wagon
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Wagon
- en: 'Maven Wagon is a transport abstraction used in the Maven artifact and repository-handling
    code. Wagon defines a unified API, and it currently has the following providers:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Maven Wagon是一个在Maven工件和仓库处理代码中使用的传输抽象。Wagon定义了一个统一的API，并且目前有以下提供者：
- en: File
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件
- en: HTTP
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP
- en: HTTP lightweight
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级HTTP
- en: FTP
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FTP
- en: SSH/SCP
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSH/SCP
- en: WebDAV
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WebDAV
- en: Note
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information on this can be found at [https://maven.apache.org/wagon/](https://maven.apache.org/wagon/).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息可以在[https://maven.apache.org/wagon/](https://maven.apache.org/wagon/)找到。
- en: Maven Doxia
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Maven Doxia
- en: Doxia is a content generation framework that provides users with powerful techniques
    to generate static and dynamic content. Doxia is also used in a web-based publishing
    context to generate static sites, in addition to being incorporated into dynamic
    content generation systems such as blogs, wikis, and content management systems.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Doxia是一个内容生成框架，它为用户提供强大的技术来生成静态和动态内容。Doxia还用于基于Web的发布环境中生成静态站点，同时还集成到动态内容生成系统，如博客、维基和内容管理系统。
- en: Note
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information on Maven Doxia, refer to [https://maven.apache.org/doxia/](https://maven.apache.org/doxia/).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于Maven Doxia的信息，请参阅[https://maven.apache.org/doxia/](https://maven.apache.org/doxia/)。
- en: Modello
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Modello
- en: 'The Modello component in Maven can be used to generate the following types
    of artifacts at build time with reference to the data model:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Maven中的Modello组件可以在构建时根据数据模型生成以下类型的工件：
- en: Java POJOs of the data model
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据模型的Java POJOs
- en: Java POJOs to XML
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java POJOs到XML
- en: XML to Java POJOs
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XML到Java POJOs
- en: Xdoc documentation of the data model
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据模型Xdoc文档
- en: XML schema to validate that XML content matches the data model
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XML模式用于验证XML内容是否与数据模型匹配
- en: Note
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information, refer to [http://maven.apache.org/maven-1.x/plugins/modello/](http://maven.apache.org/maven-1.x/plugins/modello/).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[http://maven.apache.org/maven-1.x/plugins/modello/](http://maven.apache.org/maven-1.x/plugins/modello/)。
- en: Maven SCM
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Maven版本控制
- en: 'This component provides a common API to perform **Source Code Management**
    (**SCM**) operations. The following type of SCMs are supported:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 此组件提供了一个通用的API来执行**源代码管理（SCM**）操作。以下类型的SCM得到支持：
- en: Bazaar
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bazaar
- en: CVS
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CVS
- en: Git
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git
- en: Jazz
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jazz
- en: Mercurial
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mercurial
- en: Perforce
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Perforce
- en: StarTeam
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: StarTeam
- en: Subversion
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Subversion
- en: CM energy
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CM能源
- en: Note
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information is available at [http://maven.apache.org/scm/](http://maven.apache.org/scm/).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息请参阅 [http://maven.apache.org/scm/](http://maven.apache.org/scm/)。
- en: Maven versus Ant
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Maven 与 Ant
- en: Before the emergence of Maven, Ant was the most widely used build tool across
    Java projects. Ant emerged from the concept of creating files in C/C++ programming
    to a platform-independent build tool. Ant used XML files to define the build process
    and its corresponding dependencies.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Maven 出现之前，Ant 是 Java 项目中最广泛使用的构建工具。Ant 从 C/C++ 编程中创建文件的概念发展成为一个平台独立的构建工具。Ant
    使用 XML 文件来定义构建过程及其相应的依赖关系。
- en: '**Another Neat Tool** (**Ant**) was conceived by James Duncan Davidson while
    preparing Sun''s reference JSP/Servlet engine, Apache Tomcat. The following is
    a simple sample of an Ant build file ([http://ant.apache.org/manual/using.html](http://ant.apache.org/manual/using.html)):'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**另一个实用的工具**（**Ant**）是由 James Duncan Davidson 在准备 Sun 的参考 JSP/Servlet 引擎 Apache
    Tomcat 时构思的。以下是一个简单的 Ant 构建文件示例（[http://ant.apache.org/manual/using.html](http://ant.apache.org/manual/using.html)）：'
- en: '[PRE0]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the sample code**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the sample code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在 [http://www.packtpub.com](http://www.packtpub.com) 的账户中下载您购买的所有 Packt
    书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问 [http://www.packtpub.com/support](http://www.packtpub.com/support)
    并注册，以便将文件直接通过电子邮件发送给您。
- en: This example shows how to build a simple JAR file. Note how all the details
    corresponding to source files, class files, and JAR files have to be specified.
    Even the sequence of steps must be specified. This results in a complex build
    file and often a lot of duplicated XML.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例展示了如何构建一个简单的 JAR 文件。注意，必须指定与源文件、类文件和 JAR 文件相对应的所有详细信息。甚至必须指定步骤的顺序。这导致构建文件复杂，并且通常有很多重复的
    XML。
- en: Let's look at the simplest Maven build file, the `pom` file, which will be discussed
    in more detail in [Chapter 3](part0024_split_000.html#page "Chapter 3. Creating
    and Importing Projects"), *Creating and Importing Projects*.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看最简单的 Maven 构建文件，即 `pom` 文件，它将在第 3 章（part0024_split_000.html#page "第 3 章.
    创建和导入项目”）中更详细地讨论，*创建和导入项目*。
- en: 'A simple `pom` file will look as shown in the following code snippet:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的 `pom` 文件看起来如下所示：
- en: '[PRE1]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This is all we need to build and package as a JAR from a Java project. Some
    of the differences between Ant and Maven in the preceding examples are as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们从一个 Java 项目中构建和打包为 JAR 所需要的一切。前面示例中 Ant 和 Maven 之间的一些差异如下：
- en: '**Convention over configuration**: Ant requires a developer to configure everything
    right from the source code''s location to the storage of a JAR file. Maven, on
    the other hand, follows conventions, has a well-defined project structure, and
    knows where to reference source, resource files, and place the output.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**约定优于配置**：Ant 需要开发者为从源代码的位置到 JAR 文件的存储配置一切。另一方面，Maven 遵循约定，有一个定义良好的项目结构，并知道如何引用源文件、资源文件以及放置输出。'
- en: '**Lifecycle**: Ant does not have a lifecycle and requires defining goals and
    their dependencies. Also, in Ant, the sequence of tasks needs to be specified.
    Maven has defined a lifecycle that consists of build phases and goals; hence,
    no configuration is required.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生命周期**：Ant 没有生命周期，需要定义目标和它们的依赖关系。此外，在 Ant 中，需要指定任务的顺序。Maven 定义了一个生命周期，由构建阶段和目标组成；因此，不需要进行配置。'
- en: 'Apart from the preceding differences that can be cited from the preceding simple
    example, Maven is superior to Ant in the following aspects:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 除了前面简单示例中可以引用的差异之外，Maven 在以下方面优于 Ant：
- en: '**Higher level of reusability**: The build logic can be reused with Maven across
    different projects in Maven.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更高的重用性**：Maven 可以在不同的 Maven 项目中重用构建逻辑。'
- en: '**Less maintenance**: With a standardized structure and the reusability option,
    it requires less effort towards maintenance.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更少的维护**：有了标准化的结构和可重用选项，它需要更少的维护工作。'
- en: '**Dependency management**: One of the most superior aspects of Maven over Ant
    is its ability to manage the corresponding dependencies. Though, lately, Ant in
    combination with Apache Ivy does ease dependency management; however, Maven has
    other aspects that outdo this combo offering.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**依赖管理**：Maven 相对于 Ant 的一个最优越的方面是其管理相应依赖的能力。尽管最近，结合 Apache Ivy 的 Ant 确实简化了依赖管理；然而，Maven
    有其他方面超过了这个组合提供的内容。'
- en: '**Automatic downloads**: Maven downloads the dependencies automatically; however,
    Ant lacks this. While Ant can use Ivy to replicate this behavior, it requires
    additional behavior.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动下载**：Maven会自动下载依赖项；然而，Ant缺乏这一功能。虽然Ant可以使用Ivy来复制这种行为，但它需要额外的行为。'
- en: '**Repository management**: Maven repositories are arbitrary and accessible
    locations that are designed to store the artifacts that Maven builds. They manage
    repositories as local versus remote (will be discussed in detail in the *Repository*
    section of [Chapter 3](part0024_split_000.html#page "Chapter 3. Creating and Importing
    Projects"), *Creating and Importing Projects*). Ant does not have this aspect
    built.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仓库管理**：Maven仓库是任意且可访问的位置，用于存储Maven构建的工件。它们将仓库管理为本地与远程（将在第3章的*仓库*部分详细讨论，*创建和导入项目*）。Ant没有这一功能。'
- en: Downloading Maven
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载Maven
- en: 'To download Maven, please visit [http://maven.apache.org/download.cgi](http://maven.apache.org/download.cgi).
    Click on the latest version, `apache-maven-x.x.x-bin.zip`; at the time of writing
    this, the current version is `apache-maven-3.2.1-bin.zip`. Download the latest
    version as shown in the following screenshot:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载Maven，请访问[http://maven.apache.org/download.cgi](http://maven.apache.org/download.cgi)。点击最新版本，`apache-maven-x.x.x-bin.zip`；在撰写本文时，当前版本是`apache-maven-3.2.1-bin.zip`。按照以下截图所示下载最新版本：
- en: '![Downloading Maven](img/00003.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![下载Maven](img/00003.jpeg)'
- en: 'Once the ZIP file is downloaded, extract the files to, let''s say, `maven3`.
    After extraction, the contents of the `maven3` folder will have another folder
    named `apache-maven-3.2.1` and the contents of that folder will be as shown in
    the following screenshot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦下载了ZIP文件，请将其解压到，比如说，`maven3`。解压后，`maven3`文件夹内将会有一个名为`apache-maven-3.2.1`的文件夹，该文件夹的内容如下所示：
- en: '![Downloading Maven](img/00004.jpeg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![下载Maven](img/00004.jpeg)'
- en: Installing Maven
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Maven
- en: 'Before we install Maven, we need to have JDK installed. Check out the Java
    installation with the following command:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们安装Maven之前，我们需要安装JDK。使用以下命令检查Java安装：
- en: '[PRE2]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For Windows, open the command prompt, and for Linux/Mac OS, open the terminal
    and use the preceding command to see the version of the JDK that is installed.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows，打开命令提示符，对于Linux/Mac OS，打开终端，并使用前面的命令查看已安装的JDK版本。
- en: 'If JDK is not installed, please refer to following link and install it:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未安装JDK，请参考以下链接并安装它：
- en: '[http://www.oracle.com/technetwork/java/javase/index-137561.html](http://www.oracle.com/technetwork/java/javase/index-137561.html)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.oracle.com/technetwork/java/javase/index-137561.html](http://www.oracle.com/technetwork/java/javase/index-137561.html)'
- en: Once Java is in place, let's move towards Maven's installation.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Java安装就绪，让我们转向Maven的安装。
- en: 'Maven''s installation is a simple two-step process:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Maven的安装是一个简单的两步过程：
- en: Setting up Maven home, that is, the `M2_HOME` variable
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Maven家目录，即`M2_HOME`变量
- en: Adding Maven home to the `PATH` variable
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Maven家目录添加到`PATH`变量中
- en: Installing Maven on Windows
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows上安装Maven
- en: 'The installation of Maven is just setting up Maven home in the extracted Maven
    folder. For ease, let''s assume the `maven3` folder resides in `C:\Program Files`.
    Now, set Maven home with the following command in the command prompt:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Maven的安装只是设置解压的Maven文件夹中的Maven家目录。为了方便，我们假设`maven3`文件夹位于`C:\Program Files`。现在，在命令提示符中使用以下命令设置Maven家目录：
- en: '[PRE3]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Update the `PATH` variable as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式更新`PATH`变量：
- en: '[PRE4]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Alternatively, the variables can be set permanently by navigating to **Desktop**
    | **My Computer** | **Properties**. Visit [http://www.computerhope.com/issues/ch000549.htm](http://www.computerhope.com/issues/ch000549.htm)
    for more information.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，可以通过导航到**桌面** | **我的电脑** | **属性**来永久设置变量。访问[http://www.computerhope.com/issues/ch000549.htm](http://www.computerhope.com/issues/ch000549.htm)获取更多信息。
- en: Installing Maven on Linux and Mac OS
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Linux和Mac OS上安装Maven
- en: 'Let''s assume the `maven3` folder resides in the `/opt` folder. As Mac OS does
    not have the `/opt` folder, let''s create a folder `opt` in root, that is, `/opt`.
    Now, let''s assume we have `maven3`, the extracted folder in it. Then, set the
    Maven home by issuing the following command via the terminal:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 假设`maven3`文件夹位于`/opt`文件夹中。由于Mac OS没有`/opt`文件夹，让我们在根目录下创建一个名为`opt`的文件夹，即`/opt`。现在，假设我们有一个`maven3`，其中包含解压的文件夹。然后，通过终端执行以下命令设置Maven家目录：
- en: '[PRE5]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Add Maven to the `PATH` variable as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式将Maven添加到`PATH`变量中：
- en: '[PRE6]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To add it permanently, add it to the `bash` file as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 要永久添加，请将其添加到`bash`文件中，如下所示：
- en: '[PRE7]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Add the preceding variable, that is, two lines to the file, save it, and execute
    the following command:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 将前面的变量添加到文件中，即添加两行，然后保存，并执行以下命令：
- en: '[PRE8]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Verifying the installation of Maven
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证 Maven 的安装
- en: 'After performing the previous steps, its time to verify the installation of
    Maven. To verify the installation, perform the following:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行了前面的步骤之后，现在是时候验证 Maven 的安装了。为了验证安装，请执行以下操作：
- en: 'For Windows, open the command prompt and type the following:'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Windows，打开命令提示符并输入以下命令：
- en: '[PRE9]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'For Linux and Mac OS, open the terminal and type the following:'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Linux 和 Mac OS，打开终端并输入以下命令：
- en: '[PRE10]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'It should show the corresponding version of Maven installed, as shown in the
    following screenshot:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 应该会显示已安装 Maven 的相应版本，如下面的截图所示：
- en: '![Verifying the installation of Maven](img/00005.jpeg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![验证 Maven 的安装](img/00005.jpeg)'
- en: Summary
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Congratulations! By the end of this chapter, you have got yourselves acquainted
    with Maven and have installed Maven in your system. Now you are ready to take
    a sprint towards the journey. In the next chapter, you will learn about installing
    and setting up the m2eclipse plugin for Eclipse.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！到本章结束时，你已经熟悉了 Maven，并在系统中安装了 Maven。现在你准备好开始这段旅程了。在下一章中，你将学习如何为 Eclipse 安装和设置
    m2eclipse 插件。
