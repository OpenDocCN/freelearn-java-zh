- en: Chapter 1. JBoss EAP6 Overview
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 JBoss EAP6概述
- en: In this chapter, we will learn the basic concepts about high availability and
    have an overview of the functions that JBoss EAP6 provides to us in this field.
    Then we'll learn how to install JBoss EAP6 and see its basic usages.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习关于高可用性的基本概念，并概述JBoss EAP6在这个领域为我们提供的功能。然后我们将学习如何安装JBoss EAP6以及它的基本用法。
- en: Understanding high availability
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解高可用性
- en: 'To understand the term high availability, here is its definition from Wikipedia:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解“高可用性”这个术语，以下是来自维基百科的定义：
- en: '"High availability is a system design approach and associated service implementation
    that ensures that a prearranged level of operational performance will be met during
    a contractual measurement period. Users want their systems, for example, hospitals,
    production computers, and the electrical grid to be ready to serve them at all
    times. ... If a user cannot access the system, it is said to be unavailable."'
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “高可用性是一种系统设计方法和相关的服务实现，它确保在合同测量期间将满足预定的操作性能水平。用户希望他们的系统，例如医院、生产计算机和电网，能够随时为他们提供服务。
    ... 如果用户无法访问系统，则称其为不可用。”
- en: In the IT field, when we mention the words "high availability", we usually think
    of the uptime of the server, and technologies such as clustering and load balancing
    can be used to achieve this.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在IT领域，当我们提到“高可用性”这个词时，我们通常想到的是服务器的正常运行时间，而诸如聚类和负载均衡等技术可以用来实现这一点。
- en: 'Clustering means to use multiple servers to form a group. From their perspective,
    users see the cluster as a single entity and access it as if it''s just a single
    point. The following figure shows the structure of a cluster:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类意味着使用多个服务器形成一个组。从用户的角度来看，他们将集群视为一个单一实体，并像访问单个点一样访问它。以下图显示了集群的结构：
- en: '![Understanding high availability](img/2432OS_01_01.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![理解高可用性](img/2432OS_01_01.jpg)'
- en: 'To achieve the previously mentioned goal, we usually use a controller of the
    cluster, called load balancer, to sit in front of the cluster. Its job is to receive
    and dispatch user requests to a node inside the cluster, and the node will do
    the real work of processing the user requests. After the node processes the user
    request, the response will be sent to the load balancer, and the load balancer
    will send it back to the users. The following figure shows the workflow:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现之前提到的目标，我们通常使用集群的控制器，即负载均衡器，位于集群前面。它的任务是接收和调度用户请求到集群内的节点，节点将执行处理用户请求的真正工作。节点处理完用户请求后，响应将被发送到负载均衡器，负载均衡器将把它发送回用户。以下图显示了工作流程：
- en: '![Understanding high availability](img/2432OS_01_02.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![理解高可用性](img/2432OS_01_02.jpg)'
- en: Besides load balancing user requests, the clustering system can also do failover
    inside itself.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 除了负载均衡用户请求外，集群系统还可以在其内部进行故障转移。
- en: Tip
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Failover means when a node has crashed, the load balancer can switch to other
    running nodes to process user requests.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 故障转移意味着当一个节点崩溃时，负载均衡器可以切换到其他正在运行的节点来处理用户请求。
- en: 'In a cluster, some nodes may fail during runtime. If this happens, the requests
    to the failed nodes should be redirected to the healthy nodes. The process is
    shown in the following figure:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在集群中，一些节点可能在运行时失败。如果发生这种情况，应该将失败的节点的请求重定向到健康的节点。这个过程在以下图中显示：
- en: '![Understanding high availability](img/2432OS_01_03.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![理解高可用性](img/2432OS_01_03.jpg)'
- en: To make failover possible, the node in a cluster should be able to replicate
    user data from one to another.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使故障转移成为可能，集群中的节点应该能够从一端复制用户数据到另一端。
- en: Tip
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In JBoss EAP6, the Infinispan module, which is a data-grid solution provided
    by the JBoss community, does the web session replication.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在JBoss EAP6中，Infinispan模块，这是JBoss社区提供的数据网格解决方案，负责Web会话复制。
- en: 'If one node fails, the user request could be redirected to another node; however,
    the session with the user won''t be lost. The following figure illustrates failover:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个节点失败，用户请求可以被重定向到另一个节点；然而，与用户的会话不会丢失。以下图说明了故障转移：
- en: '![Understanding high availability](img/2432OS_01_04.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![理解高可用性](img/2432OS_01_04.jpg)'
- en: To achieve the previously mentioned goals, the JBoss community has provided
    us a powerful set of tools. In the next section we'll have an overview on it.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现之前提到的目标，JBoss社区为我们提供了一套强大的工具。在下一节中，我们将对其进行概述。
- en: JBoss EAP6 high availability
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JBoss EAP6高可用性
- en: 'As a Java EE application server, JBoss EAP6 uses modules coming from different
    open source projects:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 作为Java EE应用服务器，JBoss EAP6使用了来自不同开源项目的模块：
- en: Web server (JBossWeb)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web服务器（JBossWeb）
- en: EJB (JBoss EJB3)
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EJB（JBoss EJB3）
- en: Web service (JBossWS/RESTEasy)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web服务（JBossWS/RESTEasy）
- en: Messaging (HornetQ)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息传递（HornetQ）
- en: JPA and transaction management (Hibernate/Narayana)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JPA和事务管理（Hibernate/Narayana）
- en: 'As we can see, JBoss EAP6 uses many more open source projects, and each part
    may have its own consideration to achieve the goal of high availability. Now let''s
    have a brief on these parts with respect to high availability:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，JBoss EAP6使用了更多的开源项目，每个部分可能都有其自己的考虑，以实现高可用性的目标。现在让我们简要介绍一下这些部分与高可用性的关系：
- en: JBoss Web, Apache httpd, mod_jk, and mod_cluster
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JBoss Web、Apache httpd、mod_jk和mod_cluster
- en: The clustering for a web server may be the most popular topic and is well understood
    by the majority. There are a lot of good solutions in the market.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Web服务器的集群可能是最热门的话题，并且被大多数人所理解。市场上有很多好的解决方案。
- en: For JBoss EAP6, the solution it adopted is to use Apache `httpd` as the load
    balancer. `httpd` will dispatch the user requests to the EAP server. Red Hat has
    led two open source projects to work with `httpd`, which are called `mod_jk` and
    `mod_cluster` . In this book we'll learn how to use these two projects.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于JBoss EAP6，它采用的解决方案是使用Apache `httpd`作为负载均衡器。`httpd`将用户请求分发到EAP服务器。Red Hat领导了两个与`httpd`一起工作的开源项目，分别称为`mod_jk`和`mod_cluster`。在这本书中，我们将学习如何使用这两个项目。
- en: EJB session bean
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EJB会话Bean
- en: JBoss EAP6 has provided the `@org.jboss.ejb3.annotation.Clustered` annotation
    that we can use on both the `@Stateless` and `@Stateful` session beans.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: JBoss EAP6提供了`@org.jboss.ejb3.annotation.Clustered`注解，我们可以在`@Stateless`和`@Stateful`会话Bean上使用它。
- en: Tip
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The clustered annotation is JBoss EAP6/WildFly specific implementation.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 集群注解是JBoss EAP6/WildFly的特定实现。
- en: When using `@Clustered` with `@Stateless`, the session bean can be load balanced;
    and when `@Clustered` is used with the `@Stateful` bean, the state of the bean
    will be replicated in the cluster.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`@Clustered`与`@Stateless`一起时，会话Bean可以进行负载均衡；当使用`@Clustered`与`@Stateful` Bean一起时，Bean的状态将在集群中复制。
- en: JBossWS and RESTEasy
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JBossWS和RESTEasy
- en: JBoss EAP6 provides two web service solutions out of the box. One is JBossWS
    and the other is RESTEasy. JBossWS is a web service framework that implements
    the JAX-WS specification. RESTEasy is an implementation of the JAX-RS specification
    to help you to build RESTFul web services.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: JBoss EAP6提供了两种内置的Web服务解决方案。一个是JBossWS，另一个是RESTEasy。JBossWS是一个实现了JAX-WS规范的Web服务框架。RESTEasy是实现JAX-RS规范的实现，可以帮助你构建RESTful
    Web服务。
- en: HornetQ
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HornetQ
- en: HornetQ is a high-performance messaging system provided by the JBoss community.
    The messaging system is designed to be asynchronous and has its own consideration
    on load balancing and failover.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: HornetQ是JBoss社区提供的高性能消息传递系统。该消息系统设计为异步的，并在负载均衡和故障转移方面有自己的考虑。
- en: Hibernate and Narayana
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hibernate和Narayana
- en: In the database and transaction management field, high availability is a huge
    topic. For example, each database vendor may have their own solutions on load
    balancing the database queries. For example, PostgreSQL has some open source solutions,
    for example, Slony and pgpool, which can let us replicate the database from master
    to slave and which distributes the user queries to different database nodes in
    a cluster.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据库和事务管理领域，高可用性是一个巨大的话题。例如，每个数据库供应商可能都有自己的数据库查询负载均衡解决方案。例如，PostgreSQL有一些开源解决方案，例如Slony和pgpool，这些解决方案可以让我们从主数据库复制到从数据库，并将用户查询分布到集群中的不同数据库节点。
- en: In the ORM layer, Hibernate also has projects such as **Hibernate Shards** that
    can deploy a database in a distributed way.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在ORM层，Hibernate也有如**Hibernate Shards**这样的项目，可以将数据库以分布式的方式部署。
- en: JGroups and JBoss Remoting
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JGroups和JBoss Remoting
- en: JGroups and JBoss Remoting are the cornerstone of JBoss EAP6 clustering features,
    which enable it to support high availability. JGroups is a reliable communication
    system based on IP multicasting.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: JGroups和JBoss Remoting是JBoss EAP6集群特性的基石，它使它能够支持高可用性。JGroups是一个基于IP多播的可靠通信系统。
- en: Tip
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: JGroups is not limited to multicast and can use TCP too.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: JGroups不仅限于多播，也可以使用TCP。
- en: JBoss Remoting is the underlying communication framework for multiple parts
    in JBoss EAP6.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: JBoss Remoting是JBoss EAP6中多个部分的底层通信框架。
- en: Domain management
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 域管理
- en: Besides the topics discussed previously, JBoss EAP6 has also introduced a new
    feature called **domain management** . This feature can help us to centralize
    the management of the EAP6 servers deployed as a cluster. In later chapters of
    this book we'll learn how to use this feature.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 除了之前讨论的主题外，JBoss EAP6还引入了一个名为**域管理**的新功能。这个功能可以帮助我们集中管理作为集群部署的EAP6服务器。在本书的后续章节中，我们将学习如何使用这个功能。
- en: Installing JBoss EAP6
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装JBoss EAP6
- en: 'In the previous sections, we had an overview of high availability and what
    JBoss EAP6 provides to us in relation to this topic. It doesn''t matter if you
    haven''t understood all the things. We''ll touch these parts in this book step
    by step to help you build the whole picture. The first step is to install JBoss
    EAP6\. Please download `JBoss EAP 6.1.0.Final` from the following URL:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们概述了高可用性以及JBoss EAP6在这方面为我们提供了什么。如果你没有完全理解所有内容，没关系。我们将在本书中逐步触及这些部分，帮助你构建整个画面。第一步是安装JBoss
    EAP6。请从以下URL下载`JBoss EAP 6.1.0.Final`：
- en: '[http://www.jboss.org/jbossas/downloads/](http://www.jboss.org/jbossas/downloads/)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.jboss.org/jbossas/downloads/](http://www.jboss.org/jbossas/downloads/)'
- en: 'Locate the **6.1.0.Final** version and download the ZIP file. After the ZIP
    file has been downloaded, extract it. The contents are shown in the following
    screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 定位到**6.1.0.Final**版本并下载ZIP文件。下载完成后，解压它。内容如下所示截图：
- en: '![Installing JBoss EAP6](img/2432OS_01_14.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![安装JBoss EAP6](img/2432OS_01_14.jpg)'
- en: From the previous screenshot, we can see a JAR file named `jboss-modules.jar`.
    This JAR file will help us to load the components of the server. The components
    of the EAP6 server are located in the `modules` directory. This directory contains
    the components of EAP6 that could be loaded by `jboss-modules.jar`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图，我们可以看到一个名为`jboss-modules.jar`的JAR文件。这个JAR文件将帮助我们加载服务器的组件。EAP6服务器的组件位于`modules`目录中。这个目录包含EAP6可以通过`jboss-modules.jar`加载的组件。
- en: The `bin` directory contains the start script and other tools that we'll use
    later.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`bin`目录包含我们将要使用的启动脚本和其他工具。'
- en: The `standalone` and `domain` directories are related with the EAP6 startup
    mode. We'll cover it in more detail in the next section.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`standalone`和`domain`目录与EAP6启动模式相关。我们将在下一节中更详细地介绍它。'
- en: The JBoss EAP6 startup mode
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JBoss EAP6启动模式
- en: 'The startup mode is a new concept introduced in JBoss EAP6\. There are currently
    two modes provided by EAP6:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 启动模式是JBoss EAP6中引入的新概念。目前EAP6提供了两种模式：
- en: The standalone mode
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独立模式
- en: The domain mode
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 域模式
- en: 'And there are two startup scripts in the `bin` directory for these two modes:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在`bin`目录中有两个启动脚本用于这两种模式：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Let's see the meanings of these two modes.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这两种模式的意义。
- en: The domain mode
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 域模式
- en: The domain mode is a new concept introduced in EAP6\. A domain means a group
    of servers that can share configuration/deployment information, which is very
    useful in a clustering environment.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 域模式是EAP6中引入的新概念。域指的是一组可以共享配置/部署信息的服务器，这在集群环境中非常有用。
- en: For example, we have the three JBoss EAP6 servers running, and they form a cluster.
    Suppose we have a project called `cluster-demo` and want to deploy it to the cluster.
    The traditional method is to deploy this project to each EAP6 instance manually.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们有三个运行的JBoss EAP6服务器，它们形成一个集群。假设我们有一个名为`cluster-demo`的项目，并希望将其部署到集群中。传统的方法是将此项目手动部署到每个EAP6实例。
- en: Fortunately, with the help of the domain management function in EAP6, we can
    now configure many EAP6 servers as a server group and deploy a project into this
    group. Then the project will be deployed into all the EAP6 servers that belong
    to this group. The domain mode provides a centralized management point to our
    cluster. The server group also shares the same configuration that is automatically
    distributed to all nodes. We'll see its usage in later chapters.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，借助EAP6中的域管理功能，我们现在可以将许多EAP6服务器配置为服务器组，并将项目部署到这个组中。然后，该项目将被部署到属于此组的所有EAP6服务器上。域模式为我们提供了集群的集中管理点。服务器组还共享相同的配置，该配置会自动分发到所有节点。我们将在后续章节中看到其用法。
- en: The standalone mode
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 独立模式
- en: The standalone mode is like the traditional JBoss AS running mode, and it doesn't
    have any domain management features supported during runtime.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 独立模式类似于传统的JBoss AS运行模式，并且在运行时没有提供任何域管理功能。
- en: Starting JBoss EAP6 in the standalone mode
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以独立模式启动JBoss EAP6
- en: 'Let''s now try to start JBoss EAP6 in the standalone mode. Go to the `bin`
    directory and run `standalone.sh`. The server output is shown in the following
    screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们尝试以独立模式启动JBoss EAP6。进入`bin`目录并运行`standalone.sh`。服务器输出如下截图所示：
- en: '![Starting JBoss EAP6 in the standalone mode](img/2432OS_01_06.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![以独立模式启动JBoss EAP6](img/2432OS_01_06.jpg)'
- en: Now let's look at some details on the server output to understand the startup
    process.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看服务器输出的详细信息，以了解启动过程。
- en: Understanding the startup process
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解启动过程
- en: 'We can see several important things from the server output. The following is
    the first one:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从服务器输出中看到几个重要的事情。以下是最重要的一点：
- en: '[PRE1]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'From the previous log, we can see that not all the components are started during
    the EAP6 startup process. This design greatly speeds up the startup time of EAP6\.
    We can see that some services are started by default during the start process:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的日志中，我们可以看到在EAP6启动过程中并非所有组件都被启动。这种设计大大加快了EAP6的启动时间。我们可以看到在启动过程中默认启动了一些服务：
- en: '![Understanding the startup process](img/2432OS_01_11.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![理解启动过程](img/2432OS_01_11.jpg)'
- en: These components are called subsystems. These subsystems are configured in the
    `standalone.xml` file upon navigating through `standalone/configuration`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这些组件被称为子系统。这些子系统在通过`standalone/configuration`导航时配置在`standalone.xml`文件中。
- en: 'Now let''s see the actual command in `standalone.sh` that starts the EAP6 server:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看`standalone.sh`中启动EAP6服务器的实际命令：
- en: '[PRE2]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt Publishing books you have
    purchased from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.packtpub.com](http://www.packtpub.com)的账户中下载您购买的所有Packt Publishing书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'From the previous command, we can see that `jboss-modules.jar` is the bootstrap
    JAR file for the whole EAP6 server, and the entry point is `org.jboss.as.standalone`,
    which is specified in the following command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的命令中，我们可以看到`jboss-modules.jar`是整个EAP6服务器的引导JAR文件，入口点是`org.jboss.as.standalone`，在以下命令中指定：
- en: '[PRE3]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We'll see more details about the startup process later. Now let's check the
    configuration file of the standalone mode.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在稍后看到关于启动过程的更多详细信息。现在让我们检查独立模式的配置文件。
- en: The standalone.xml file
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: standalone.xml文件
- en: 'The structure of `standalone.xml` is as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`standalone.xml`的结构如下：'
- en: '![The standalone.xml file](img/2432OS_01_07.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![standalone.xml文件](img/2432OS_01_07.jpg)'
- en: 'As shown in the previous screenshot, **standalone.xml** defines multiple aspects
    of the standalone service. Let''s have a brief view:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，**standalone.xml**定义了独立服务的多个方面。让我们简要查看：
- en: '| **extensions** | This section contains a list of extension modules. The components
    listed here will be loaded by `jboss-modules`. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| **extensions** | 此部分包含一个扩展模块的列表。列出的组件将由`jboss-modules`加载。|'
- en: '| **management** | This section contains the configuration related to management
    interfaces of EAP6 and its security settings. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| **management** | 此部分包含与EAP6管理接口及其安全设置相关的配置。|'
- en: '| **profile** | In this section, we can configure the settings for each subsystem.
    Most of the subsystems are the components loaded in the extensions section, and
    some subsystems are required by EAP6 internally and loaded at startup by default.
    |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| **profile** | 在此部分，我们可以为每个子系统配置设置。大多数子系统是扩展部分中加载的组件，一些子系统是EAP6内部需要的，并在启动时默认加载。|'
- en: '| **interfaces** | This section defines a list of named network interfaces.
    |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| **interfaces** | 此部分定义了一个命名网络接口的列表。|'
- en: '| **socket-binding group** | This section contains a list of socket-binding
    groups, including the set of interfaces that could be used by different modules.
    |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| **socket-binding group** | 此部分包含一个socket绑定组的列表，包括不同模块可能使用的接口集合。|'
- en: Alternative configuration files
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 替代配置文件
- en: Besides the default file `standalone.xml`, EAP6 has provided some other profiles
    for the standalone mode.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 除了默认的`standalone.xml`文件外，EAP6还为独立模式提供了一些其他配置文件。
- en: Tip
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: There is only one profile per standalone configuration file. In contrast, multiple
    profiles could be defined in the domain configuration file.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 每个独立配置文件只有一个配置文件。相比之下，在域配置文件中可以定义多个配置文件。
- en: 'We can check them in the `standalone/configuration` directory:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在 `standalone/configuration` 目录中检查它们：
- en: '![Alternative configuration files](img/2432OS_01_16.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![替代配置文件](img/2432OS_01_16.jpg)'
- en: 'These files define the different profiles for different purposes. The following
    is a summary of their differences:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这些文件定义了不同目的的不同配置文件。以下是对它们差异的总结：
- en: '| **standalone.xml** | This is the default setting of standalone mode. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| **standalone.xml** | 这是独立模式的默认设置。|'
- en: '| **standalone-full.xml** | Compared with the default settings, this profile
    has added the messaging subsystem (HornetQ and relative components). |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| **standalone-full.xml** | 与默认设置相比，此配置文件添加了消息子系统（HornetQ 及相关组件）。|'
- en: '| **standalone-ha.xml** | Compared with the default settings, this profile
    has added clustering-related components: `mod_cluster` and `JGroups`, replicable
    caches powered by Infinispan, and other relative components. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| **standalone-ha.xml** | 与默认设置相比，此配置文件添加了与集群相关的组件：`mod_cluster` 和 `JGroups`，由
    Infinispan 驱动的可复制缓存以及其他相关组件。|'
- en: '| **standalone-full-ha.xml** | Compared with the default setting, this profile
    provides a combination of functions in ''-full'' and ''-ha''. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| **standalone-full-ha.xml** | 与默认设置相比，此配置文件提供了 `-full` 和 `-ha` 中的功能组合。|'
- en: 'To use these alternative configurations during startup, we can use the `-c`
    option when calling `standalone.sh`. For example, if we want to use `standalone-ha.xml`,
    the command is as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 要在启动时使用这些替代配置，我们可以在调用 `standalone.sh` 时使用 `-c` 选项。例如，如果我们想使用 `standalone-ha.xml`，命令如下：
- en: '[PRE4]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Please note that the `-c` option assumes that the configuration is located at
    `$JBOSS_HOME/standalone/`.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`-c` 选项假定配置位于 `$JBOSS_HOME/standalone/`。
- en: The --help option
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: --help 选项
- en: 'Both `standalone.sh` and `domain.sh` provide us with the help document. We
    can always use the `--help` option to check it:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`standalone.sh` 和 `domain.sh` 都为我们提供了帮助文档。我们可以始终使用 `--help` 选项来检查它：'
- en: '[PRE5]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Configuration files
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置文件
- en: 'In the `bin` directory, there are several configuration files that will be
    included during the startup process:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `bin` 目录中，有几个配置文件将在启动过程中被包含：
- en: '![Configuration files](img/2432OS_01_17.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![配置文件](img/2432OS_01_17.jpg)'
- en: We can put our own configuration into these files, and it will be included by
    the startup scripts.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将自己的配置放入这些文件中，启动脚本将包含它们。
- en: Starting JBoss EAP6 in the domain mode
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在域模式下启动 JBoss EAP6
- en: 'In this section, let''s have a look at the domain mode. Use the following command
    in the `bin` directory to start the EAP6 server in the domain mode:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，让我们看看域模式。在 `bin` 目录中使用以下命令在域模式下启动 EAP6 服务器：
- en: '[PRE6]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We can see that the startup process is different with the standalone mode.
    Firstly, there are many more components loaded in the domain mode:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，与独立模式相比，启动过程有所不同。首先，在域模式下加载了更多的组件：
- en: '[PRE7]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'And in `domain.sh`, we can see that the startup command is also different:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `domain.sh` 中，我们还可以看到启动命令也有所不同：
- en: '[PRE8]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Compared with the standalone mode, the entry point is no longer `org.jboss.as.standalone`;
    instead, it becomes `process-contoller`:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 与独立模式相比，入口点不再是 `org.jboss.as.standalone`；而是变为 `process-contoller`：
- en: '[PRE9]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'There is also a process called `host-controller`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个名为 `host-controller` 的进程：
- en: '[PRE10]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following figure shows the relationship of these processes when EAP6 is
    running in the domain mode:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了当 EAP6 在域模式下运行时这些过程之间的关系：
- en: '![Starting JBoss EAP6 in the domain mode](img/2432OS_01_08.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![在域模式下启动 JBoss EAP6](img/2432OS_01_08.jpg)'
- en: As in the domain mode, a lightweight **Process Controller** is started first,
    and then it spawns a **Host Controller** process that will control multiple server
    processes. This is because in the domain mode it allows multiple server instances
    to run at the same time, and each server will have its own JVM process.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在域模式下一样，首先启动了一个轻量级的 **进程控制器**，然后它启动了一个 **主机控制器** 进程，该进程将控制多个服务器进程。这是因为域模式允许同时运行多个服务器实例，每个服务器都将有自己的
    JVM 进程。
- en: The domain mode
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 域模式
- en: As we have seen previously, when EAP6 is running in the domain mode, multiple
    severs can run at the same time. In addition, these servers can belong to different
    server groups. The servers that belong to the same group will share the deployment
    and configuration information.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所看到的，当 EAP6 在域模式下运行时，多个服务器可以同时运行。此外，这些服务器可以属于不同的服务器组。属于同一组的服务器将共享部署和配置信息。
- en: 'For example, we have a server group called the **main-server-group** , and
    in this group, we have two servers called **server-** **one** and **server-two**
    . If we deploy a project called `cluster-demo.war` in the **main-server-group**,
    then it will be deployed into both the servers at the same time. And if we change
    some settings in this group, the settings of these two servers will all get synced:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们有一个名为 **main-server-group** 的服务器组，在这个组中，我们有两个名为 **server-one** 和 **server-two**
    的服务器。如果我们在这个 **main-server-group** 中部署一个名为 `cluster-demo.war` 的项目，那么它将同时部署到这两个服务器上。如果我们在这个组中更改一些设置，这两个服务器的设置都将同步更新：
- en: '![The domain mode](img/2432OS_01_09.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![域模式](img/2432OS_01_09.jpg)'
- en: In the previous example the two servers of the same group are in the same machine
    and the same EAP6 instance. But actually they can exist in different EAP6 servers,
    and the servers in the same group can be synced across the network.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，同一组的两个服务器位于同一台机器和同一 EAP6 实例中。但实际上，它们可以存在于不同的 EAP6 服务器中，并且同一组的服务器可以在网络上同步。
- en: Configuration files
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置文件
- en: 'Unlike the standalone mode, the domain mode uses two configuration files:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 与独立模式不同，域模式使用两个配置文件：
- en: '`domain.xml`'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`domain.xml`'
- en: '`host.xml`'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`host.xml`'
- en: These configuration files are in the location `domain/configuration/`. Now let's
    have a look at `dom` `ain.xml` first.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这些配置文件位于 `domain/configuration/` 位置。现在让我们首先看看 `domain.xml`。
- en: The domain.xml file
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 域.xml 文件
- en: 'The structure of the `domain.xml` file and its difference with `standalone.xml`
    are shown in the following screenshot:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`domain.xml` 文件的结构及其与 `standalone.xml` 的区别如下截图所示：'
- en: '![The domain.xml file](img/2432OS_01_10.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![domain.xml 文件](img/2432OS_01_10.jpg)'
- en: 'If we compare its structure with the standalone mode, we can see the differences.
    Firstly there are three sections in plural form:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将它的结构与独立模式进行比较，我们可以看到差异。首先，有三个复数形式的章节：
- en: '**profiles**'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置文件**'
- en: '**interfaces**'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**接口**'
- en: '**socket-binding-groups**'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**socket-binding-groups**'
- en: The reason for this difference is easy to guess. In the domain mode, there are
    multiple servers running in different server groups, and EAP6 supports each server
    group to have its own set of settings. So, different profiles, interfaces, and
    socket-binding-groups will be needed.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这种差异的原因很容易猜测。在域模式中，有多个服务器在不同的服务器组中运行，EAP6 支持每个服务器组拥有自己的设置集。因此，需要不同的配置文件、接口和套接字绑定组。
- en: 'In addition, we can see a new section called **server-groups**. Here is its
    default setting in `domain.xml`:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还可以看到一个名为 **server-groups** 的新部分。这是它在 `domain.xml` 中的默认设置：
- en: '[PRE11]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The previous settings are shown in the following figure:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的设置如下图所示：
- en: '![The domain.xml file](img/2432OS_01_12.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![domain.xml 文件](img/2432OS_01_12.jpg)'
- en: In this way, different server groups are bound to different settings.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，不同的服务器组绑定到不同的设置。
- en: The host.xml file
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: host.xml 文件
- en: 'Now let''s check `host.xml`. The following screenshot shows its structure:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们检查 `host.xml`。以下截图显示了其结构：
- en: '![The host.xml file](img/2432OS_01_13.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![host.xml 文件](img/2432OS_01_13.jpg)'
- en: The `host.xml` file is the setting file for the host controller. It has some
    parts similar to `standalone.xml` such as management and interfaces. Their purposes
    are also the same. Now let's see the **domain-controller** section.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`host.xml` 文件是主机控制器的设置文件。它包含一些与 `standalone.xml` 类似的部分，例如管理和接口。它们的目的也是相同的。现在让我们看看
    **domain-controller** 部分。'
- en: The domain-controller section
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 域控制器部分
- en: The **domain-controller** section defines which host is used as the domain controller.
    The domain controller is actually a host controller, but it acts as the manager
    of the domain. The default **domain-controller** is set to `local`, which means
    EAP6 will use its host controller as its domain controller by default.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**domain-controller** 部分定义了哪个主机用作域控制器。域控制器实际上是一个主机控制器，但它充当域的管理者。默认的 **domain-controller**
    设置为 `local`，这意味着 EAP6 将默认使用其主机控制器作为域控制器。'
- en: We can also define a remote host controller as the domain controller. Then multiple
    EAP6 could connect to the same domain controller and accept its management. Now
    let's see the **servers** section.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以定义一个远程主机控制器作为域控制器。然后多个 EAP6 可以连接到同一个域控制器并接受其管理。现在让我们看看 **servers** 部分。
- en: The servers section
  id: totrans-164
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 服务器部分
- en: 'The **servers** section is shown in the following screenshot:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**servers** 部分如下截图所示：'
- en: '![The servers section](img/2432OS_01_15.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![服务器部分](img/2432OS_01_15.jpg)'
- en: In the domain mode, a host controller can manage several servers at the same
    time, and each server has their own name and belongs to a server group; these
    servers are bound to different sockets to avoid conflicts.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在域模式下，一个主机控制器可以同时管理多个服务器，每个服务器都有自己的名称并属于一个服务器组；这些服务器绑定到不同的套接字以避免冲突。
- en: The **auto-start** option checks whether to start this server during the EAP6
    startup. We may choose which server to start during the EAP6 startup by this option.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '**auto-start** 选项检查是否在 EAP6 启动时启动此服务器。我们可能可以通过此选项选择在 EAP6 启动时启动哪个服务器。'
- en: 'The **port-offset** option is used to bind different servers into different
    ports to avoid conflict. Let''s see the default configuration in `host.xml`:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '**port-offset** 选项用于将不同的服务器绑定到不同的端口以避免冲突。让我们看看 `host.xml` 中的默认配置：'
- en: '[PRE12]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following is the deployment diagram that shows the relationship between
    the previously discussed servers and server groups:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的部署图显示了之前讨论的服务器和服务器组之间的关系：
- en: '![The servers section](img/2432OS_01_18.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![服务器部分](img/2432OS_01_18.jpg)'
- en: 'Here are the server group settings in `domain.xml`:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 `domain.xml` 中的服务器组设置：
- en: '[PRE13]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can see that the **main-server-group** is bound to `full-sockets`, and the
    **other-server-group** is bound to `full-ha-sockets`. These two sockets are defined
    as follows:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 **main-server-group** 绑定到 `full-sockets`，而 **other-server-group** 绑定到
    `full-ha-sockets`。这两个套接字定义如下：
- en: '[PRE14]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `full-sockets` binds to the HTTP port 8080, and `port-offset` is 0\. So
    the web port used by **server-one** is 8080; for **server-two**, because its `port-offset`
    is 150, its web port is 8080 + 150 = 8230\. Similarly, the HTTP port used by **server-three**
    is 8080 + 250 = 8330.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`full-sockets` 绑定到 HTTP 端口 8080，`port-offset` 为 0。因此，**server-one** 使用的 Web
    端口是 8080；对于 **server-two**，因为它的 `port-offset` 是 150，它的 Web 端口是 8080 + 150 = 8230。同样，**server-three**
    使用的 HTTP 端口是 8080 + 250 = 8330。'
- en: 'Now let''s set **auto-start** for all three servers to `true` so that they
    will be started during the EAP6 startup:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将所有三个服务器的 **auto-start** 设置为 `true`，以便它们将在 EAP6 启动时启动：
- en: '[PRE15]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now let''s start EAP6 in the domain mode by calling `domain.sh`. After EAP6
    starts, let''s try to access 8080, 8230, and 8330 with `telnet` commands:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过调用 `domain.sh` 在域模式下启动 EAP6。EAP6 启动后，让我们尝试使用 `telnet` 命令访问 8080、8230
    和 8330：
- en: '[PRE16]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: We can see all the servers are listening for connections now.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到现在所有服务器都在监听连接。
- en: XSD documents
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XSD 文档
- en: 'JBoss EAP6 has provided the schema documents in `docs/schema`. Each schema
    has defined a namespace used by the EAP6 configuration file. For example, we can
    check the beginning of `standalone.xml` and see the xml namespace it''s using:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: JBoss EAP6 在 `docs/schema` 中提供了架构文档。每个架构都定义了 EAP6 配置文件使用的命名空间。例如，我们可以检查 `standalone.xml`
    的开头，看看它使用的 xml 命名空间：
- en: '[PRE17]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can see that the namespace used is `urn:jboss:domain:1.4`. Let''s find the
    defined namespace in the `docs/schema` directory by using the `grep` command:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到使用的命名空间是 `urn:jboss:domain:1.4`。让我们通过使用 `grep` 命令在 `docs/schema` 目录中找到定义的命名空间：
- en: '[PRE18]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We can see that `jboss-as-config_1_4.xsd` contains the definition of the xml
    namespace we are searching for. Now we can check the definitions for each element
    in this namespace. For example, if we want to understand the meaning of the **server**
    section in `standalone.xml`, we can check its definition in the `xsd` file:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 `jboss-as-config_1_4.xsd` 包含了我们正在寻找的 xml 命名空间的定义。现在我们可以检查该命名空间中每个元素的定义。例如，如果我们想了解
    `standalone.xml` 中 **server** 部分的含义，我们可以在 `xsd` 文件中检查其定义：
- en: '[PRE19]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: As we have seen in the previous code snippet, the `xsd` schemas are very useful
    documents. They can help us to understand the meaning of the elements in configuration
    files.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个代码片段所示，`xsd` 架构是非常有用的文档。它们可以帮助我们理解配置文件中元素的含义。
- en: Summary
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned the basic concepts of high availability, and
    we have learned how to install JBoss EAP6 and run it in different modes. We also
    learned about the two running modes of EAP6\. In the next chapter, we will learn
    to use the EAP6 management console, and we'll use it to deploy projects into EAP6.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了高可用性的基本概念，我们学习了如何安装 JBoss EAP6 并以不同的模式运行它。我们还了解了 EAP6 的两种运行模式。在下一章中，我们将学习如何使用
    EAP6 管理控制台，并使用它将项目部署到 EAP6。
