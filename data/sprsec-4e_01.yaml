- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Anatomy of an Unsafe Application
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不安全应用程序的解剖结构
- en: Security is arguably one of the most critical architectural components of any
    web-based application written in the *21st* century. In an era where malware,
    criminals, and rogue employees are always present and actively testing software
    for **exploits**, smart and comprehensive use of security is a key element of
    any project for which you’ll be responsible.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性可以说是21世纪任何基于Web的应用程序最重要的架构组件之一。在恶意软件、犯罪分子和恶意员工始终存在并积极测试软件以寻找**漏洞**的时代，智能和全面的安全使用是您将负责的任何项目的关键要素。
- en: This book is written to follow a pattern of development that, we feel, provides
    a useful premise for tackling a complex subject—taking a web-based application
    with a Spring 6 foundation, and understanding the core concepts and strategies
    for securing it with Spring Security 6\. We complement this approach by providing
    sample code for each chapter in the form of complete web applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的编写是为了遵循一种开发模式，我们认为这种模式为处理复杂主题提供了一个有用的前提——以Spring 6为基础的基于Web的应用程序，并理解使用Spring
    Security 6对其进行安全保护的核心概念和策略。我们通过为每一章提供完整的Web应用程序的示例代码来补充这种方法。
- en: In this chapter, we will delve into an example scenario to highlight several
    prevalent security vulnerabilities. Our journey will commence by examining the
    fundamental principles of secure coding. We will then shift our focus to explore
    common vulnerabilities in the next chapters, such as SQL injection, **Cross-Site
    Scripting** (**XSS**), and **Cross-Site Request** **Forgery** (**CSRF**).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入探讨一个示例场景，以突出几个常见的安全漏洞。我们的旅程将从检查安全编码的基本原则开始。然后，我们将转向下一章，探讨常见的漏洞，如SQL注入、**跨站脚本攻击**（**XSS**）和**跨站请求伪造**（**CSRF**）。
- en: Whether you’re already using Spring Security or are interested in taking your
    basic use of the software to the next level of complexity, you’ll find something
    to help you in this book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是否已经在使用Spring Security，还是希望将您对软件的基本使用提升到更复杂的水平，您都会在这本书中找到一些有用的内容。
- en: 'During the course of this chapter, we will cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的讨论过程中，我们将涵盖以下主题：
- en: Exploring software architecture styles
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索软件架构风格
- en: Understanding security audit
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解安全审计
- en: Addressing the security audit findings
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应对安全审计发现
- en: It is recommended to have a basic understanding of the Spring framework before
    delving deeper into the subsequent sections.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 建议在深入研究后续部分之前，您对Spring框架有一个基本的了解。
- en: By the end of this chapter, you will know how an application can be vulnerable
    to attack, and you will have mastered the core security mechanisms that can be
    used to protect an application.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将了解应用程序可能受到攻击的方式，并且您将掌握可以用来保护应用程序的核心安全机制。
- en: If you are already familiar with basic security terminology, you may skip to
    [*Chapter 2*](B21757_02.xhtml#_idTextAnchor043), *Getting Started with Spring
    Security*, where we start using the basic functionality of the framework.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经熟悉基本的安全术语，您可以跳转到[*第2章*](B21757_02.xhtml#_idTextAnchor043)，*Spring Security入门*，在那里我们开始使用框架的基本功能。
- en: Exploring software architecture styles
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索软件架构风格
- en: Numerous businesses are acquiring computational capabilities from online cloud
    service platforms and embracing a primary reliance on the cloud for the development
    of most applications. This shift has prompted a transformation in the design of
    applications.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 许多企业正在从在线云服务平台获取计算能力，并主要依赖云来开发大多数应用程序。这种转变促使应用程序设计发生了变化。
- en: '![Figure 1.1 – Monolithic versus layered versus SOA versus microservices](img/B21757_01_1.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图1.1 – 单体架构与分层架构与SOA与微服务架构的比较](img/B21757_01_1.jpg)'
- en: Figure 1.1 – Monolithic versus layered versus SOA versus microservices
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – 单体架构与分层架构与SOA与微服务架构的比较
- en: The selection of the most suitable application architecture is contingent upon
    your specific business requirements. We will explore four architectural options
    designed to facilitate digital transformation and tailored to meet general business
    needs
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 选择最合适的应用架构取决于您的具体业务需求。我们将探讨四种旨在促进数字化转型并满足一般业务需求的设计方案。
- en: Monolithic architecture
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单体架构
- en: A traditional architecture where the entire application is constructed as a
    unified and closely integrated entity.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一种传统架构，其中整个应用程序作为一个统一且紧密集成的实体构建。
- en: While it is easy to develop and deploy initially, scaling and maintaining it
    can pose challenges as the project expands.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然最初开发和部署很容易，但随着项目的扩展，扩展和维护可能会带来挑战。
- en: N-Tier architecture (layered architecture)
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: N-Tier架构（分层架构）
- en: 'N-tier architecture, also known as a hierarchical structure with distinct layers,
    refers to a design approach for software systems that organizes the application
    into multiple layers, typically four: *Presentation*, *Business*, *Persistence*,
    and *Data*. This architectural model is commonly employed in enterprise applications
    to enhance maintainability by compartmentalizing and promoting modular development.
    Each layer has specific responsibilities.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: N层架构，也称为具有明显层的层次结构，是指一种软件系统的设计方法，它将应用程序组织成多个层，通常是四层：*表示层*、*业务层*、*持久层*和*数据层*。这种架构模型在企业应用程序中常用，通过分室化和促进模块化开发来提高可维护性。每一层都有特定的职责。
- en: 'The **Model-View-Controller** (**MVC**) software design pattern separates an
    application into three interconnected components: Model (data and business logic),
    View (user interface), and Controller (handles user input and updates the Model
    and View accordingly).'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**模型-视图-控制器**（**MVC**）软件设计模式将应用程序分为三个相互关联的组件：模型（数据和业务逻辑）、视图（用户界面）和控制器（处理用户输入并相应地更新模型和视图）。'
- en: This segmentation facilitates scalability, ease of maintenance, and flexibility
    in adapting to changing business requirements.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这种分割有助于可扩展性、易于维护和适应不断变化的业务需求。
- en: SOA
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SOA
- en: The **service-oriented pattern**, also known as **Service-Oriented Architecture**
    (**SOA**), is an architectural style that structures a software application as
    a collection of loosely coupled and independently deployable services.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**服务导向模式**，也称为**服务导向架构**（**SOA**），是一种将软件应用程序构建为一系列松散耦合且可独立部署的服务集合的架构风格。'
- en: Before SOA came into use in the late 1990s, connecting an application to services
    housed in another system was a complex process involving point-to-point integration.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在20世纪90年代末服务导向架构（SOA）开始使用之前，将应用程序连接到另一个系统中的服务是一个复杂的过程，涉及点到点的集成。
- en: Microservices architecture
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 微服务架构
- en: Microservices derive from SOA, but SOA is different from microservices.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 微服务源于SOA，但SOA与微服务不同。
- en: This architecture involves fragmenting the application into small, autonomous
    services that communicate via APIs. It provides scalability, flexibility, and
    simplified maintenance, but introduces challenges in handling distributed systems
    complexities.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这种架构涉及将应用程序分解成小型、自主的服务，通过API进行通信。它提供了可扩展性、灵活性和简化了维护，但引入了处理分布式系统复杂性的挑战。
- en: Important note
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Historically, the emphasis was on functionality and statefulness, but now, the
    majority of consumer-oriented applications are transitioning to **Software-as-a-Service**
    (**SaaS**) and digital platforms. Presently, the focus in application design has
    shifted toward enhancing user experience, embracing statelessness, and prioritizing
    agility.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，重点是功能性和有状态性，但现在，大多数面向消费者的应用程序正在转向**软件即服务**（**SaaS**）和数字平台。目前，在应用程序设计中的重点是提高用户体验、拥抱无状态性和优先考虑敏捷性。
- en: Choosing between traditional web applications and Single-Page Applications
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在传统Web应用程序和单页应用程序之间进行选择
- en: 'There are two primary approaches to constructing web applications in the contemporary
    landscape: conventional web applications, which execute most of the application
    logic on the server, and **single-page applications** (**SPAs**), which handle
    most of the user interface logic in a web browser and primarily communicate with
    the web server through web APIs. An alternative hybrid approach is feasible, wherein
    one or more feature-rich SPA-like sub-applications are hosted within a larger
    traditional web application.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在当代的景观中，构建Web应用程序主要有两种主要方法：传统的Web应用程序，其中大多数应用程序逻辑在服务器上执行，以及**单页应用程序**（**SPA**），它们在Web浏览器中处理大多数用户界面逻辑，并通过Web
    API主要与Web服务器通信。一种可行的混合方法是，在更大的传统Web应用程序中托管一个或多个功能丰富的SPA-like子应用程序。
- en: 'Select a traditional web application under the following circumstances:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下情况下选择传统的Web应用程序：
- en: Your application’s client-side requirements are straightforward or even limited
    to read-only functionality
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的应用程序客户端需求简单，甚至仅限于只读功能
- en: Your application needs to operate in browsers lacking JavaScript support
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的应用程序需要在缺少JavaScript支持的浏览器中运行
- en: Your application is publicly accessible and benefits from search engine visibility
    and referrals
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的应用程序是公开可访问的，并从搜索引擎可见性和推荐中受益
- en: 'Choose a SPA under the following circumstances:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下情况下选择一个单页应用程序（SPA）：
- en: Your application requires a sophisticated user interface with numerous features
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的应用程序需要一个复杂的用户界面，具有众多功能
- en: Your development team is well-versed in JavaScript, Angular, ReactJS, VueJS,
    TypeScript, or WebAssembly
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的开发团队精通JavaScript、Angular、ReactJS、VueJS、TypeScript或WebAssembly
- en: Your application already exposes an API for other clients, whether internal
    or public
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的应用程序已经向其他客户端公开了API，无论是内部还是公开
- en: The enhancements in user experience facilitated by the SPA approach should be
    carefully considered against these factors.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 由SPA方法促进的用户体验改进应仔细考虑这些因素。
- en: In the next sections of the book, we will use a traditional Spring MVC application
    as an example to illustrate various security principles.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的下一部分，我们将使用传统的Spring MVC应用程序作为示例，来说明各种安全原则。
- en: Important note
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: It’s important to note that these security principles apply to all the architectural
    styles discussed in this chapter.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，这些安全原则适用于本章讨论的所有架构风格。
- en: Understanding security audit
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解安全审计
- en: 'It’s early in the morning at your job as a software developer for the `JBCPCalendar.com`),
    and you’re halfway through your first cup of coffee when you get the following
    email from your supervisor:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您作为`JBCPCalendar.com`的软件开发人员，早上很早，您正在喝第一杯咖啡，这时您收到了以下来自管理员的电子邮件：
- en: '![Figure 1.2 – The email from the supervisor](img/B21757_01_2.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图1.2 – 管理员的电子邮件](img/B21757_01_2.jpg)'
- en: Figure 1.2 – The email from the supervisor
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2 – 管理员的电子邮件
- en: What? You didn’t think about security when you designed the application? In
    fact, at this point, you are not even sure what a **security audit** is. Sounds
    like you’ll have a lot to learn from the security auditors! Later in this chapter,
    we will review what an audit is, along with the results of an audit. First, let’s
    spend a bit of time examining the application that’s under review.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 什么？您在设计应用程序时没有考虑到安全性？实际上，到目前为止，您甚至不确定什么是**安全审计**。听起来您将从安全审计员那里学到很多东西！在本章的后面部分，我们将回顾什么是审计，以及审计的结果。首先，让我们花点时间检查正在审查的应用程序。
- en: Exploring the example application
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索示例应用程序
- en: 'Although we’ll be working through a contrived scenario as we progress through
    this book, the design of the application and the changes that we’ll make to it
    are drawn from the real-world usage of Spring-based applications. The calendar
    application allows users to create and view events:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们将在本书的进展过程中处理一个虚构的场景，但应用程序的设计以及我们将对其进行的更改都是基于基于Spring的应用程序的实际使用。日历应用程序允许用户创建和查看事件：
- en: '![Figure 1.3 – The calendar application event information](img/B21757_01_3.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图1.3 – 日历应用程序事件信息](img/B21757_01_3.jpg)'
- en: Figure 1.3 – The calendar application event information
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 – 日历应用程序事件信息
- en: 'After entering the details for a new event, you will be presented with the
    following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在输入新事件的详细信息后，您将看到以下截图：
- en: '![Figure 1.4 – The calendar application summary](img/B21757_01_4.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图1.4 – 日历应用程序摘要](img/B21757_01_4.jpg)'
- en: Figure 1.4 – The calendar application summary
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 – 日历应用程序摘要
- en: The application is designed to be simple to allow us to focus on the important
    aspects of security and not get tied up in the details of **object-relational
    mapping** (**ORM**) and complex UI techniques. We expect you to refer to other
    supplementary materials in the [*Appendix*](B21757_20.xhtml#_idTextAnchor642),
    *Additional Reference Material* (in the *Supplementary materials* section of this
    book) to cover some of the baseline functionality that is provided as part of
    the example code.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 该应用程序设计得简单，以便我们能够专注于安全性的重要方面，而不是陷入**对象关系映射**（**ORM**）和复杂的UI技术的细节。我们希望您参考其他补充材料，例如[*附录*](B21757_20.xhtml#_idTextAnchor642)、*附加参考资料*（本书*补充材料*部分），以涵盖示例代码中提供的部分基本功能。
- en: The code is written in Spring and Spring Security 6, but it would be relatively
    easy to adapt many of the examples to other versions of Spring Security. Refer
    to the discussion about the detailed changes between Spring Security 4 and 6 in
    [*Chapter 16*](B21757_16.xhtml#_idTextAnchor512), *Migration to Spring Security
    6*, for assistance in translating the examples to the Spring Security 6 syntax.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 代码是用Spring和Spring Security 6编写的，但将许多示例适应到其他版本的Spring Security相对容易。有关Spring Security
    4和6之间详细更改的讨论，请参阅[*第16章*](B21757_16.xhtml#_idTextAnchor512)，*迁移到Spring Security
    6*，以帮助将示例转换为Spring Security 6语法。
- en: Important note
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Please don’t use this application as a baseline to build a real online calendar
    application. It has been purposely structured to be simple and to focus on the
    concepts and configurations that we illustrate in this book.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要将此应用程序作为构建真实在线日历应用程序的基准。它已被有意设计得简单，并专注于我们在本书中阐述的概念和配置。
- en: In the next section, we will explore the application architecture.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨应用程序架构。
- en: The JBCP calendar application architecture
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JBCP日历应用程序架构
- en: 'The web application follows a standard three-tier architecture consisting of
    a web, service, and data access layer, as indicated in the following diagram:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Web应用程序遵循标准的三层架构，包括Web层、服务层和数据访问层，如下面的图所示：
- en: '![Figure 1.5 – JBCP calendar application architecture](img/B21757_01_5.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图1.5 – JBCP日历应用程序架构](img/B21757_01_5.jpg)'
- en: Figure 1.5 – JBCP calendar application architecture
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5 – JBCP日历应用程序架构
- en: You can find additional material about MVC architectures in the *Supplementary
    materials* section of the [*Appendix*](B21757_20.xhtml#_idTextAnchor642), *Additional*
    *Reference Material*.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[*附录*](B21757_20.xhtml#_idTextAnchor642)的[*补充材料*]部分找到有关MVC架构的额外材料，*附加* *参考资料*。
- en: The web layer encapsulates MVC code and functionality. In this example application,
    we will use the Spring MVC framework, but we could just as easily use **Spring
    Web Flow** (**SWF**), **Apache Struts**, or even a Spring-friendly web stack,
    such as **Apache Wicket**.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Web层封装了MVC代码和功能。在这个示例应用程序中，我们将使用Spring MVC框架，但同样可以轻松地使用**Spring Web Flow**（**SWF**）、**Apache
    Struts**，甚至是一个Spring友好的Web栈，如**Apache Wicket**。
- en: In a typical web application that uses Spring Security, the web layer is where
    much of the configuration and augmentation of code takes place. For example, the
    `EventsController` class is utilized to convert an HTTP request into the process
    of storing an event in the database. If you haven’t had a lot of experience with
    web applications and Spring MVC specifically, it would be wise to review the baseline
    code closely and make sure you understand it before we move on to more complex
    subjects. Again, we’ve tried to make the website as simple as possible, and the
    construction of a calendar application is used just to provide a sensible title
    and light structure to the site.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的使用Spring Security的Web应用程序中，Web层是配置和代码增强的主要发生地。例如，`EventsController`类被用来将HTTP请求转换为将事件存储到数据库的过程。如果你在Web应用程序和Spring
    MVC方面没有太多经验，那么在继续更复杂主题之前仔细审查基准代码并确保你理解它是明智的。再次强调，我们已尽力使网站尽可能简单，而日历应用程序的构建只是为了给网站提供一个合理的标题和轻量级结构。
- en: Important note
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You can find detailed instructions on setting up the example application within
    the [*Appendix*](B21757_20.xhtml#_idTextAnchor642), *Additional* *Reference Material*.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[*附录*](B21757_20.xhtml#_idTextAnchor642)的[*附加*] *参考资料*中找到设置示例应用程序的详细说明。
- en: The service layer encapsulates the business logic for the application. In our
    application, we use `DefaultCalendarService` as a very light facade over the data
    access layer to illustrate particular points about securing application service
    methods. The service layer is also used to operate on both Spring Security APIs
    and our Calendar APIs within a single method call. We will discuss this in greater
    detail in [*Chapter 3*](B21757_03.xhtml#_idTextAnchor068), *Custom Authentication*.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 服务层封装了应用程序的业务逻辑。在我们的应用程序中，我们使用`DefaultCalendarService`作为数据访问层的一个非常轻量级的门面，以说明关于保护应用程序服务方法的一些特定点。服务层还用于在单个方法调用中操作Spring
    Security API和我们的日历API。我们将在[*第3章*](B21757_03.xhtml#_idTextAnchor068)中更详细地讨论这一点，*自定义身份验证*。
- en: In a typical web application, the service layer incorporates business rule validation,
    composition and decomposition of business objects, and cross-cutting concerns
    such as auditing.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的Web应用程序中，服务层包含业务规则验证、业务对象的组合和分解以及如审计等横切关注点。
- en: The data access layer encapsulates the code responsible for manipulating the
    contents of database tables. In many Spring applications, this is where you would
    see an ORM, such as Hibernate or JPA. The data access layer exposes an object-based
    API to the service layer. In our application, we use basic JDBC functionality
    to achieve persistence in the in-memory H2 database. For example, `JdbcEventDao`
    is used to save event objects to the database.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 数据访问层封装了操纵数据库表内容的代码。在许多Spring应用程序中，你会在这一层看到ORM，例如Hibernate或JPA。数据访问层向服务层公开基于对象的API。在我们的应用程序中，我们使用基本的JDBC功能在内存中的H2数据库中实现持久性。例如，`JdbcEventDao`用于将事件对象保存到数据库中。
- en: In a typical web application, a more comprehensive data access solution would
    be utilized. As ORM, and more generally data access, tends to be confusing for
    some developers, this is an area we have chosen to simplify as much as possible
    for clarity.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的Web应用程序中，将利用更全面的数据访问解决方案。由于ORM和更广泛的数据访问对一些开发者来说可能很复杂，我们选择尽可能简化这一领域，以便于理解。
- en: In the next section, we will review the audit results.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将审查审计结果。
- en: Reviewing the audit results
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审查审计结果
- en: 'Let’s return to our email and see how the audit is progressing. Uh-oh… the
    results don’t look good:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们的电子邮件，看看审计进展如何。哎呀…结果看起来不太好：
- en: '![Figure 1.6 – The email of the audit results](img/B21757_01_6.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图1.6 – 审计结果电子邮件](img/B21757_01_6.jpg)'
- en: Figure 1.6 – The email of the audit results
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – 审计结果电子邮件
- en: '**APPLICATION AUDIT RESULTS**: This application exhibits the following insecure
    behavior:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用程序审计结果**：此应用程序表现出以下不安全行为：'
- en: Inadvertent privilege escalation due to a lack of URL protection and general
    authentication
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于缺乏URL保护和一般认证，意外提升权限
- en: Inappropriate or non-existent use of authorization
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 授权使用不当或不存在
- en: Missing database credential security
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺少数据库凭证安全
- en: Personally identifiable or sensitive information is easily accessible or unencrypted
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可识别的个人或敏感信息容易被访问或未加密
- en: Insecure transport-level protection due to lack of SSL encryption
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于缺乏SSL加密，传输层保护不安全
- en: The risk level is high. We recommend that this application should be taken offline
    until these issues can be resolved.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 风险等级很高。我们建议在此问题解决之前，应将此应用程序下线。
- en: Ouch! This result looks bad for our company. We’d better work to resolve these
    issues as quickly as possible.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！这个结果对我们公司来说看起来很糟糕。我们最好尽快努力解决这些问题。
- en: Third-party security specialists are often hired by companies (or their partners
    or customers) to audit the effectiveness of their software security through a
    combination of white hat hacking, source code review, and formal or informal conversations
    with application developers and architects.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 第三方安全专家通常由公司（或其合作伙伴或客户）雇佣，通过结合白帽黑客、源代码审查以及与应用程序开发人员和架构师进行的正式或非正式对话，来审计其软件安全的有效性。
- en: '**White hat hacking** or **ethical hacking** is done by professionals who are
    hired to instruct companies on how to protect themselves better, rather than with
    the intent to be malicious.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**白帽黑客**或**道德黑客**是由受雇于公司（或其合作伙伴或客户）的专业人士进行的，他们的目的是指导公司如何更好地保护自己，而不是出于恶意意图。'
- en: Typically, the goal of **security audits** is to provide management or clients
    with the assurance that basic secure development practices have been followed
    to ensure the integrity and safety of the customer’s data and system functions.
    Depending on the industry the software is targeted at, the auditor may also test
    it using industry-specific standards or compliance metrics.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，**安全审计**的目标是为管理层或客户提供保证，即已遵循基本的安全开发实践，以确保客户数据和系统功能的完整性和安全性。根据软件针对的行业，审计员还可能使用行业特定标准或合规性指标进行测试。
- en: Important note
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Two specific security standards that you’re likely to run into at some point
    in your career are the **Payment Card Industry Data Security Standard** (**PCI
    DSS**) and the **Health Insurance Privacy and Accountability Act** (**HIPAA**)
    privacy rules. Both these standards are intended to ensure the safety of specific
    sensitive information (such as credit card and medical information) through a
    combination of process and software controls.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的职业生涯中，您可能会遇到两种特定的安全标准：**支付卡行业数据安全标准**（**PCI DSS**）和**健康保险隐私和问责法案**（**HIPAA**）的隐私规则。这两个标准都是为了通过流程和软件控制相结合来确保特定敏感信息（如信用卡和医疗信息）的安全。
- en: Many other industries and countries have similar rules about sensitive or **Personally
    Identifiable Information** (**PII**). Failure to follow these standards is not
    only bad practice but also something that could expose you or your company to
    significant liability (not to mention bad press) in the event of a security breach.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 许多其他行业和国家都有关于敏感或**个人身份信息**（**PII**）的类似规则。未能遵守这些标准不仅是不良的做法，而且在发生安全漏洞的情况下，还可能使您或您的公司面临重大的法律责任（更不用说不良的舆论了）。
- en: Receiving the results of a **security audit** can be an eye-opening experience.
    Following through with the required software improvements can be the perfect opportunity
    for self-education and software improvement and can allow you to implement practices
    and policies that lead to secure software.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 接收**安全审计**的结果可能是一次令人大开眼界的经历。按照所需的软件改进进行操作可能是自我教育和软件改进的绝佳机会，并允许您实施导致安全软件的实践和政策。
- en: In the next section, we will review the auditor’s findings and come up with
    a plan to address them in detail.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将回顾审计员发现的问题，并制定一个详细计划来应对这些问题。
- en: Addressing the security audit findings
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应对安全审计发现
- en: In this section, we will meticulously examine the outcomes of our security audit,
    shedding light on the vulnerabilities and areas of concern within our application’s
    security landscape. We’ll dissect the audit results and embark on a journey to
    explore various effective strategies and patterns to secure and mitigate these
    identified risks. This chapter serves as a roadmap for enhancing the robustness
    of our application’s security, ensuring it stays resilient against potential threats
    and vulnerabilities.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将仔细检查我们的安全审计结果，揭示我们应用程序安全领域中的漏洞和关注区域。我们将分析审计结果，并开始探索各种有效的策略和模式，以保障和减轻这些已识别的风险。本章为增强我们应用程序的安全性提供了路线图，确保它能够抵御潜在的威胁和漏洞。
- en: Authentication
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 认证
- en: 'Authentication is one of two key security concepts that you must internalize
    when developing secure applications (the other being authorization). Authentication
    identifies who is attempting to request a resource. You may be familiar with authentication
    in your daily online and offline life, in very different contexts, as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 认证是您在开发安全应用程序时必须内化的两个关键安全概念之一（另一个是授权）。认证确定谁正在尝试请求资源。您可能对日常在线和离线生活中的认证很熟悉，在不同的环境中，如下所示：
- en: '**Credential-based authentication**: When you log in to your web-based email
    account, you most likely provide your username and password. The email provider
    matches your username with a known user in its database and verifies that your
    password matches what they have on record. These credentials are what the email
    system uses to validate that you are a valid user of the system. First, we’ll
    use this type of authentication to secure sensitive areas of the JBCP calendar
    application. Technically speaking, the email system can check credentials not
    only in the database but anywhere, for example, a corporate directory server such
    as **Microsoft Active Directory**. Several examples of this type of integration
    are covered throughout this book.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于凭证的认证**：当您登录基于网络的电子邮件账户时，您很可能提供了您的用户名和密码。电子邮件服务提供商将您的用户名与其数据库中的已知用户进行匹配，并验证您的密码是否与记录相符。这些凭证是电子邮件系统用来验证您是该系统有效用户的方法。首先，我们将使用这种类型的认证来保护JBCP日历应用中的敏感区域。从技术角度讲，电子邮件系统不仅可以在数据库中检查凭证，还可以在任何地方检查，例如，一个企业目录服务器，如**微软活动目录**。本书中涵盖了这种类型集成的几个示例。'
- en: '**Two-factor authentication**: When you withdraw money from your bank’s ATM,
    you swipe your ID card and enter your personal identification number before you
    are allowed to retrieve cash or conduct other transactions. This type of authentication
    is similar to username and password authentication, except that the username is
    encoded on the card’s magnetic strip. The combination of the physical card and
    user-entered PIN allows the bank to ensure that you have access to the account.
    The combination of a password and a physical device (your plastic ATM card) is
    a ubiquitous form of two-factor authentication. In a professional, security-conscious
    environment, it’s common to see these types of devices in regular use for access
    to highly secure systems, especially when dealing with finance information or
    PII. A hardware device, such as **RSA SecurID**, combines a time-based hardware
    device with server-based authentication software, making the environment extremely
    difficult to compromise.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**双因素认证**：当您从银行的ATM机取款时，您需要在被允许取现金或进行其他交易之前，先刷您的身份证并输入您的个人识别号码。这种认证方式与用户名和密码认证类似，只是用户名被编码在卡的磁条上。物理卡片和用户输入的PIN码的组合使得银行能够确保您有权访问该账户。密码和物理设备（您的塑料ATM卡）的组合是双因素认证的普遍形式。在专业、注重安全的环镜中，这些类型的设备在访问高度安全系统时经常被使用，尤其是在处理财务信息或PII时。例如，**RSA
    SecurID**这样的硬件设备将基于时间的硬件设备与基于服务器的认证软件相结合，使得环境极其难以被攻破。'
- en: '**Hardware authentication**: When you start your car in the morning, you slip
    your metal key into the ignition and turn it to get the car started. Although
    it may not feel similar to the other two examples, the correct match of the bumps
    on the key and the tumblers in the ignition switch function as a form of hardware
    authentication.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬件认证**：当您早上启动汽车时，您将金属钥匙插入点火开关并转动以启动汽车。尽管这可能与其他两个例子感觉不同，但钥匙上的凸起与点火开关中的转轮的正确匹配作为一种硬件认证方式。'
- en: There are literally dozens of forms of authentication that can be applied to
    the problem of software and hardware security, each with their own pros and cons.
    We’ll review some of these methods as they apply to Spring Security throughout
    the first half of this book. Our application lacks any type of authentication,
    which is why the audit included the risk of inadvertent privilege escalation.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上存在数十种认证形式可以应用于软件和硬件安全的问题，每种都有其自身的优缺点。我们将在本书的前半部分回顾一些这些方法，它们如何应用于Spring Security。我们的应用程序缺乏任何类型的认证，这就是为什么审计包括了意外权限提升的风险。
- en: 'Typically, a software system will be divided into two high-level realms, such
    as unauthenticated (or anonymous) and authenticated, as shown in the following
    screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个软件系统将被分为两个高级领域，例如非认证（或匿名）和认证，如下面的截图所示：
- en: '![Figure 1.7 – High-level realms in a software system](img/B21757_01_7.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图1.7 – 软件系统中的高级领域](img/B21757_01_7.jpg)'
- en: Figure 1.7 – High-level realms in a software system
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.7 – 软件系统中的高级领域
- en: Application functionality in the anonymous realm is the functionality that is
    independent of a user’s identity (think of a welcome page for an online application).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 匿名领域中的应用功能是独立于用户身份的功能（例如，在线应用程序的欢迎页面）。
- en: 'Anonymous areas do not do the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 匿名区域不执行以下操作：
- en: Require a user to log in to the system or otherwise identify themselves to be
    usable
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求用户登录系统或以其他方式识别自己才能使用
- en: Display sensitive information, such as names, addresses, credit cards, and orders
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示敏感信息，如姓名、地址、信用卡和订单
- en: Provide functionality to manipulate the overall state of the system or its data
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供操作系统整体状态或其数据的功能
- en: Unauthenticated areas of the system are intended for use by everyone, even by
    users whom we haven’t specifically identified yet. However, it may be that additional
    functionality appears to identify users in these areas (for example, the ubiquitous
    `Welcome {First Name}` text). The selective displaying of content to authenticated
    users is fully supported through the use of the Spring Security tag library and
    is covered in [*Chapter 11*](B21757_11.xhtml#_idTextAnchor332), *Fine-Grained*
    *Access Control*.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的非认证区域旨在供所有人使用，甚至包括我们尚未明确识别的用户。然而，在这些区域中，可能存在一些额外的功能似乎用于识别用户（例如，无处不在的`欢迎 {名字}`文本）。通过使用Spring
    Security标签库，对认证用户选择性显示内容得到了完全支持，并在[*第11章*](B21757_11.xhtml#_idTextAnchor332)的*细粒度访问控制*中进行了介绍。
- en: We’ll resolve this finding and implement form-based authentication using the
    automatic configuration capability of Spring Security in [*Chapter 2*](B21757_02.xhtml#_idTextAnchor043),
    *Getting Started with Spring Security*. Afterward, we will explore various other
    means of performing authentication (which usually revolves around system integration
    with enterprise or other external authentication stores).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[第2章](B21757_02.xhtml#_idTextAnchor043)“使用Spring Security入门”中解决这个发现，并利用Spring
    Security的自动配置功能实现基于表单的身份验证。之后，我们将探讨执行身份验证的各种其他方法（这通常围绕与企业或其他外部身份验证存储的系统集成）。
- en: In the next section, we will explore **authorization**.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨**授权**。
- en: Authorization
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 授权
- en: Authorization is the second of two core security concepts that are crucial in
    implementing and understanding application security. Authorization uses the information
    that was validated during authentication to determine whether access should be
    granted to a particular resource. Built around the authorization model for the
    application, authorization partitions the application functionality and data so
    that the availability of these items can be controlled by matching the combination
    of privileges, functionality, and data to users. Our application’s failure at
    this point of the audit indicates that the application’s functionality isn’t restricted
    by the user role. Imagine if you were running an e-commerce site and the ability
    to view, cancel, or modify orders and customer information was available to any
    user of the site!
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 授权是两个核心安全概念中的第二个，在实现和理解应用程序安全中至关重要。授权使用在身份验证过程中验证的信息来确定是否应授予特定资源的访问权限。围绕应用程序的授权模型构建，授权将应用程序的功能和数据分区，以便可以通过将权限、功能和数据组合与用户匹配来控制这些项目的可用性。我们应用程序在审计此点时的失败表明，应用程序的功能没有被用户角色所限制。想象一下，如果你正在运行一个电子商务网站，查看、取消或修改订单和客户信息的能力对任何网站用户都是可用的！
- en: 'Authorization typically involves the following two separate aspects that combine
    to describe the accessibility of the secured system:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 授权通常涉及以下两个独立的方面，它们结合在一起描述了受保护系统的可访问性：
- en: The first is the mapping of an authenticated principal to one or more authorities
    (often called **roles**). For example, a casual user of your website might be
    viewed as having visitor authority, while a site administrator might be assigned
    administrative authority.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个是将经过验证的主实体映射到一个或多个权限（通常称为**角色**）。例如，你网站的一个普通用户可能被视为拥有访客权限，而网站管理员可能被分配管理权限。
- en: The second is the assignment of authority checks to secured resources in the
    system. This is typically done when the system is developed, either through an
    explicit declaration in code or through configuration parameters. For example,
    the screen that allows for the viewing of other users’ events should be made available
    only to those users with administrative authority.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个是将权限检查分配给系统中的受保护资源。这通常在系统开发时完成，无论是通过代码中的显式声明还是通过配置参数。例如，允许查看其他用户事件的屏幕应该仅对具有管理权限的用户可用。
- en: Important note
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: A secured resource may be any aspect of the system that should be conditionally
    available based on the authority of the user.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 受保护资源可以是系统中的任何方面，其可用性应根据用户的权限有条件地提供。
- en: Secured resources of a web-based application could be individual web pages,
    entire portions of the website, or portions of individual pages. Conversely, secured
    business resources might be method calls on classes or individual business objects.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 基于Web的应用程序的受保护资源可以是单个网页、整个网站的部分或单个网页的部分。相反，受保护的业务资源可能是类上的方法调用或单个业务对象。
- en: You might imagine an authority check that would examine the principal (the identity
    of the current user or system interacting with the application), look up its user
    account, and determine whether the principal is, in fact, an administrator. If
    this authority check determines that the principal who is attempting to access
    the secured area is, in fact, an administrator, then the request will succeed.
    If, however, the principal does not have sufficient authority, the request should
    be denied.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想象一个权限检查，它会检查主实体（当前用户或与应用程序交互的系统的身份），查找其用户账户，并确定该主实体是否确实是管理员。如果这个权限检查确定尝试访问受保护区域的主体确实是管理员，那么请求将成功。然而，如果主体没有足够的权限，请求应该被拒绝。
- en: Let’s take a closer look at an example of a particular secured resource, the
    **All Events** page. The **All Events** page requires administrative access (after
    all, we don’t want regular users viewing other users events), and as such, looks
    for a certain level of authority in the principal accessing it.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看一个特定的受保护资源示例，即**所有事件**页面。**所有事件**页面需要管理员访问权限（毕竟，我们不希望普通用户查看其他用户的事件），因此它会在访问该页面的主体中寻找一定级别的权限。
- en: 'If we think about how a decision might be made when a site administrator attempts
    to access the protected resource, we’d imagine that the examination of the actual
    authority versus the required authority might be expressed concisely in terms
    of the set theory. We might then choose to represent this decision as a **Venn**
    diagram for the administrative user:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们考虑当网站管理员尝试访问受保护资源时可能做出的决定，我们会想象实际权限与所需权限的对比可以用集合论来简洁地表达。我们可能会选择将这个决定表示为针对管理用户的**维恩图**：
- en: '![Figure 1.8 – Venn diagram for the administrative user](img/B21757_01_8.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图1.8 – 管理用户的维恩图](img/B21757_01_8.jpg)'
- en: Figure 1.8 – Venn diagram for the administrative user
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.8 – 管理用户的维恩图
- en: There is an intersection between **User Authorities** (users and administrators)
    and **Required Authorities** (administrators) for the page, so the user is provided
    with access.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 对于该页面，**用户权限**（用户和管理员）与**所需权限**（管理员）之间存在交集，因此用户被赋予了访问权限。
- en: 'Contrast this with an unauthorized user, as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 与此相对比的是未经授权的用户，如下所示：
- en: '![Figure 1.9 – Venn diagram for the visiting (unauthorized) user](img/B21757_01_9.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图1.9 – 访问（未经授权）用户的维恩图](img/B21757_01_9.jpg)'
- en: Figure 1.9 – Venn diagram for the visiting (unauthorized) user
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.9 – 访问（未经授权）用户的维恩图
- en: We have a Symmetric difference. The sets of authorities are disjointed and have
    no common elements. So, the user is denied access to the page. Thus, we have demonstrated
    the basic principle of the authorization of access to resources.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个对称差集。权限集是互斥的，没有共同元素。因此，用户被拒绝访问该页面。这样，我们就展示了资源访问授权的基本原理。
- en: In reality, there’s real code making this decision, with the consequence that
    the user is granted or denied access to the requested protected resource. We’ll
    address the basic authorization problem with the authorization infrastructure
    of Spring Security in [*Chapter 2*](B21757_02.xhtml#_idTextAnchor043), *Getting
    Started with Spring Security*, followed by more advanced authorization in [*Chapter
    12*](B21757_12.xhtml#_idTextAnchor375), *Access Control Lists*, and [*Chapter
    13*](B21757_13.xhtml#_idTextAnchor415), *Custom Authorization*.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，有真正的代码在做出这个决定，结果是用户被授予或拒绝访问请求的保护资源。我们将在[*第2章*](B21757_02.xhtml#_idTextAnchor043)“Spring
    Security入门”中解决基本的授权问题，随后在第[*第12章*](B21757_12.xhtml#_idTextAnchor375)“访问控制列表”和[*第13章*](B21757_13.xhtml#_idTextAnchor415)“自定义授权”中探讨更高级的授权。
- en: Now that we have covered the concept of authorization, we will explore how it
    can be applied to database security.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经涵盖了授权的概念，我们将探讨它如何应用于数据库安全。
- en: Database credential security
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库凭证安全
- en: 'In Spring terminology, database credentials typically refer to the information
    required to establish a connection between a Spring application and a database.
    These credentials include the following:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在Spring术语中，数据库凭证通常指的是在Spring应用程序和数据库之间建立连接所需的信息。这些凭证包括以下内容：
- en: 'Username: The username or user ID associated with the database account that
    the Spring application uses to connect.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名：与Spring应用程序使用的数据库账户关联的用户名或用户ID。
- en: 'Password: The corresponding password for the specified username, providing
    authentication for access to the database.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码：对应于指定用户名的密码，提供对数据库访问的认证。
- en: 'Database URL: The URL that specifies the location and details of the database.
    It includes information such as the host, port, and database name.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库URL：指定数据库位置和详细信息的URL。它包括诸如主机、端口和数据库名称等信息。
- en: Through the examination of the application source code and configuration files,
    the auditors noted that user passwords were stored in plain text in the configuration
    files, making it very easy for a malicious user with access to the server to gain
    access to the application.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查应用程序源代码和配置文件，审计员注意到用户密码以纯文本形式存储在配置文件中，这使得任何有权访问服务器的恶意用户都能轻易地访问应用程序。
- en: As the application contains personal and financial data, a rogue user being
    able to access any data could expose the company to identity theft or tampering.
    Protecting access to the credentials used to access the application should be
    a top priority for us, and an important first step is ensuring that one point
    of failure in security does not compromise the entire system.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 由于应用程序包含个人和财务数据，一个恶意用户能够访问任何数据可能会使公司面临身份盗窃或篡改的风险。保护用于访问应用程序的凭证应该是我们的首要任务，而一个重要的第一步是确保安全中的一个故障点不会破坏整个系统。
- en: We’ll examine the configuration of database access layers in Spring Security
    for credential storage, which requires **JDBC connectivity**, in [*Chapter 4*](B21757_04.xhtml#_idTextAnchor106),
    *JDBC-**b**ased Authentication*. In the same chapter, we’ll also look at built-in
    techniques to increase the security of passwords stored in the database.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第4章*](B21757_04.xhtml#_idTextAnchor106)“*基于JDBC的认证*”中检查Spring Security中数据库访问层的配置，该配置需要**JDBC连接**。在同一章节中，我们还将探讨提高数据库中存储的密码安全性的内置技术。
- en: After covering the database credential security, we will explore the sensitive
    information audit finding.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍数据库凭证安全之后，我们将探讨敏感信息审计发现。
- en: Sensitive information
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 敏感信息
- en: Personally identifiable or sensitive information is easily accessible or unencrypted.
    The auditors noted that some significant and sensitive pieces of data were completely
    unencrypted or masked anywhere in the system. Fortunately, there are some simple
    design patterns and tools that allow us to protect this information securely,
    with annotation-based **Aspect-Oriented** **Programming** (**AOP**) support in
    Spring Security.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 可识别的个人或敏感信息容易被访问或未加密。审计员指出，系统中的某些重要且敏感的数据完全未加密或未在任何地方进行屏蔽。幸运的是，有一些简单的设计模式和工具可以帮助我们安全地保护这些信息，Spring
    Security提供了基于注解的**面向切面编程**（**AOP**）支持。
- en: Transport-level protection
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 传输层保护
- en: There is insecure transport-level protection due to the lack of SSL encryption.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 由于缺乏SSL加密，存在不安全的传输层保护。
- en: While, in the real world, it’s unthinkable that an online application containing
    private information would operate without SSL protection, unfortunately, the JBCP
    calendar is in just this situation. SSL protection ensures that communication
    between the browser client and the web application server is secure against many
    kinds of tampering and snooping.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在现实世界中，一个包含私人信息的在线应用程序在没有SSL保护的情况下运行是不可想象的，但不幸的是，JBCP日历就处于这种状况。SSL保护确保浏览器客户端与Web应用程序服务器之间的通信能够抵御多种篡改和窃听。
- en: In the *HTTPS setup in Tomcat* section, in the [*Appendix*](B21757_20.xhtml#_idTextAnchor642),
    *Additional Reference Material*, we’ll review the basic options for using transport-level
    security as part of the definition of the secured structure of the application.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在“*Tomcat中的HTTPS设置*”部分，在[*附录*](B21757_20.xhtml#_idTextAnchor642)，“*附加参考资料*”，我们将回顾使用传输层安全作为应用程序安全结构定义的一部分的基本选项。
- en: Using Spring Security 6 to address security concerns
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Spring Security 6解决安全担忧
- en: '**Spring Security 6** provides a wealth of resources that allow many common
    security practices to be declared or configured in a straightforward manner. In
    the coming chapters, we’ll apply a combination of source code and application
    configuration changes to address all of the concerns raised by the security auditors
    (and more) to give ourselves the confidence that our calendar application is secure.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**Spring Security 6**提供了丰富的资源，允许许多常见的安全实践以简单的方式声明或配置。在接下来的章节中，我们将结合源代码和应用配置更改来应对安全审计员提出的所有担忧（以及更多），以增强我们对自己日历应用程序安全的信心。'
- en: 'With Spring Security 6, we’ll be able to make the following changes to improve
    our application’s security:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在Spring Security 6中，我们将能够进行以下更改以提升我们应用程序的安全性：
- en: Segment users of the system into user classes
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将系统用户划分为用户类别
- en: Assign levels of authorization to user roles
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为用户角色分配授权级别
- en: Assign user roles to user classes
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将用户角色分配给用户类别
- en: Apply authentication rules globally across application resources
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在应用程序资源全局应用认证规则
- en: Apply authorization rules at all levels of the application architecture
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在应用程序架构的所有级别应用授权规则
- en: Prevent common types of attacks intended to manipulate or steal a user’s session
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防止旨在操纵或窃取用户会话的常见攻击类型
- en: Spring Security exists to fill a gap in the universe of Java third-party libraries,
    much as the Spring Framework originally did when it was first introduced. Standards
    such as **Java Authentication and Authorization Service** (**JAAS**) or **Jakarta
    EE Security** do offer some ways of performing some of the same authentication
    and authorization functions, but Spring Security is a winner because it includes
    everything you need to implement a top-to-bottom application security solution
    concisely and sensibly.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Security的存在是为了填补Java第三方库宇宙中的一个空白，就像Spring框架最初推出时那样。像**Java身份验证和授权服务**（**JAAS**）或**Jakarta
    EE安全**这样的标准确实提供了一些执行相同身份验证和授权功能的方法，但Spring Security之所以成为赢家，是因为它包括了实现自上而下的应用程序安全解决方案所需的所有内容，简洁且合理。
- en: Additionally, Spring Security appeals to many because it offers out-of-the-box
    integration with many common enterprise authentication systems, so it’s adaptable
    to most situations with little effort (beyond configuration) on the part of the
    developer. It’s in wide use because there’s really no other mainstream framework
    quite like it!
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Spring Security因其提供开箱即用的许多常见企业身份验证系统集成而受到许多人的青睐，因此它几乎不需要开发者进行额外努力（除了配置）即可适应大多数情况。它被广泛使用，因为实际上没有其他主流框架与它相当！
- en: Technical requirements
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: We have endeavored to make the application as easy to run as possible by focusing
    on some basic tools and technologies that almost every Spring developer would
    have on their development machine. Nevertheless, we have provided the *Getting
    started* section as supplementary information in the *Getting started with the
    JBCP calendar sample code* sectionin the[*Appendix*](B21757_20.xhtml#_idTextAnchor642)*,
    Additional* *Reference Material.*
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经努力使应用程序尽可能易于运行，通过关注几乎每个Spring开发者都会在其开发机器上拥有的基本工具和技术。尽管如此，我们在[*附录*](B21757_20.xhtml#_idTextAnchor642)中的*使用JBCP日历示例代码入门*部分提供了*入门*部分作为补充信息，*附加*
    *参考材料*。
- en: The primary method for integrating with the sample code is providing projects
    that are compatible with **Gradle** and **Maven**. Since many IDEs have rich integration
    with Gradle and Maven, users should be able to import the code into any IDE that
    supports either Gradle or Maven. As many developers use Gradle and Maven, we felt
    this was the most straightforward method of packaging the examples. Whatever development
    environment you are familiar with, hopefully, you will find a way to work through
    the examples in this book.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 与示例代码集成的首选方法是提供与**Gradle**和**Maven**兼容的项目。由于许多IDE与Gradle和Maven有丰富的集成，用户应该能够将代码导入支持Gradle或Maven的任何IDE。由于许多开发者使用Gradle和Maven，我们认为这是打包示例的最直接方法。无论你熟悉哪种开发环境，希望你能找到一种方法来通过本书中的示例进行工作。
- en: Many IDEs provide Gradle or Maven tooling that can automatically download the
    Spring and Spring Security 6 Javadoc and source code for you. However, there may
    be times when this is not possible. In such cases, you’ll want to download the
    full releases of both Spring 6 and Spring Security 6\. The Javadoc and source
    code are top-notch. If you get confused or want more information, the samples
    can provide an additional level of support or reassurance for your learning. Visit
    the *Supplementary materials* section in the[*Appendix*](B21757_20.xhtml#_idTextAnchor642),
    *Additional Reference Material*, to find additional information about Gradle and
    Maven, including running the samples, and obtaining the source code and Javadoc.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 许多IDE提供了Gradle或Maven工具，可以自动为你下载Spring和Spring Security 6的Javadoc和源代码。然而，有时这可能不可行。在这种情况下，你将需要下载Spring
    6和Spring Security 6的完整版本。Javadoc和源代码都是一流的。如果你感到困惑或需要更多信息，示例可以为你提供额外的支持或保证你的学习。请访问[*附录*](B21757_20.xhtml#_idTextAnchor642)中的*补充材料*部分，*附加参考材料*，以找到有关Gradle和Maven的更多信息，包括运行示例以及获取源代码和Javadoc。
- en: 'To run the sample application, you will need an **Integrated Development Environments**
    (**IDEs**) such as IntelliJ IDEA or Eclipse and build it with Gradle or Maven,
    which don’t have strict hardware requirements. However, these are some general
    recommendations to ensure a smooth development experience:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行示例应用程序，你需要一个**集成开发环境**（**IDEs**），例如IntelliJ IDEA或Eclipse，并使用Gradle或Maven构建，它们对硬件要求并不严格。然而，以下是一些一般性建议，以确保开发体验顺畅：
- en: 'System requirements:'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统要求：
- en: A modern computer with at least 4GB of RAM (8GB or more is recommended)
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台现代计算机，至少有4GB的RAM（建议8GB或更多）
- en: A multi-core processor for faster build and development
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多核处理器以实现更快的构建和开发
- en: 'Operating system: Spring applications can be developed on Windows, macOS, or
    Linux. Choose the one that you are most comfortable with.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统：Spring应用可以在Windows、macOS或Linux上开发。选择您最舒适的一个。
- en: 'IDE: IntelliJ IDEA and Eclipse are both popular choices for Spring development.
    Make sure your IDE is up to date.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成开发环境（IDE）：IntelliJ IDEA和Eclipse都是Spring开发的流行选择。确保您的IDE是最新的。
- en: '**Java Development Kit** (**JDK**): Spring applications require a minimum of
    Java 17\. Install the latest JDK version compatible with your IDE.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Java开发工具包**（**JDK**）：Spring应用需要至少Java 17。安装与您的IDE兼容的最新JDK版本。'
- en: Upon the publication of this book, all the code has been validated with Java
    21, the most recent **Long-Term Support** (**LTS**) version.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在本书出版时，所有代码都已使用最新的**长期支持**（**LTS**）版本Java 21进行了验证。
- en: 'Disk space: You will need disk space for your project files, dependencies,
    and any databases you might use. At least 10 GB of free disk space is advisable.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘空间：您需要磁盘空间来存储项目文件、依赖项以及您可能使用的任何数据库。至少建议有10 GB的空闲磁盘空间。
- en: 'Network connection: A stable internet connection may be needed for downloading
    dependencies, plugins, and libraries during project setup.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络连接：在项目设置期间下载依赖项、插件和库可能需要稳定的互联网连接。
- en: Important note
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'You can now look at the sample code of the JBCP calendar application: `chapter01.00-calendar`.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以查看JBCP日历应用的示例代码：`chapter01.00-calendar`。
- en: From [*Chapter 3*](B21757_03.xhtml#_idTextAnchor068), *Custom Authentication*
    onwards, we shift our emphasis to delve deeper into `spring-security`, particularly
    in conjunction with the `spring-boot` framework.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 从[*第3章*](B21757_03.xhtml#_idTextAnchor068)的*自定义认证*开始，我们将重点转向深入探讨`spring-security`，特别是在与`spring-boot`框架结合使用时。
- en: 'If `Maven` is your choice, run the following command with Maven from the project
    directory:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择`Maven`，请从项目目录中使用Maven运行以下命令：
- en: '[PRE0]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you are using `Gradle`, run the following command from the project directory:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用`Gradle`，请从项目目录中运行以下命令：
- en: '[PRE1]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then open a browser at `http://localhost:8080/`.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在浏览器中打开`http://localhost:8080/`。
- en: Summary
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have reviewed the common points of risk in an unsecured
    web application and the basic architecture of our example application. We began
    by scrutinizing the audit results, highlighting the areas of concern and potential
    vulnerabilities. The chapter then branched into key security concepts, including
    **authentication**, **authorization**, and **database credential security**. We
    also discussed the strategies for securing the application based on the spring
    framework.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们回顾了未受保护的网络应用中的常见风险点以及我们示例应用的基本架构。我们首先仔细审查了审计结果，突出了关注区域和潜在漏洞。然后章节转向了关键安全概念，包括**认证**、**授权**和**数据库凭证安全**。我们还讨论了基于Spring框架的应用安全策略。
- en: In the next chapter, we’ll explore how to get **Spring Security** set up quickly
    and get a basic understanding of how it works.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨如何快速设置**Spring Security**并对其工作有一个基本的了解。
