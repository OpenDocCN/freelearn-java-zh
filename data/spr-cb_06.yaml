- en: Chapter 6. Managing Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 管理安全
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下食谱：
- en: Enabling Spring Security
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用Spring Security
- en: Authenticating users using the default login page
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认登录页面进行用户认证
- en: Authenticating users using a custom login page
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自定义登录页面进行用户认证
- en: Authenticating users using a database
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用数据库进行用户认证
- en: Adding a logout link
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加注销链接
- en: Using public folders
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用公共文件夹
- en: Authorizing only users with a specific role to view some pages
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅授权具有特定角色的用户查看某些页面
- en: Displaying page elements only to authenticated users in views
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在视图中仅向认证用户显示页面元素
- en: Using HTTPS with Tomcat
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Tomcat中使用HTTPS
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we'll cover the basics of managing the security of a Spring
    web application using **user authentication**, **user authorization**, and **HTTPS**.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍使用**用户认证**、**用户授权**和**HTTPS**管理Spring Web应用程序安全性的基础知识。
- en: 'User authentication is all about identifying a user: usually through a username
    and a password. User authorization is about assigning roles to users. These roles
    are then used at runtime to determine whether a user is allowed to perform a given
    action or view some specific contents. User authentication and authorization are
    handled by Spring.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 用户认证是关于识别用户：通常是通过用户名和密码。用户授权是关于将角色分配给用户。这些角色随后在运行时用于确定用户是否被允许执行某个特定操作或查看某些特定内容。用户认证和授权由Spring处理。
- en: HTTPS is all about encrypting the communication between our web server and the
    user's browser using **Secure Sockets Layer** (**SSL**). HTTPS needs to be enabled
    at the server level. We'll see how to do this with Tomcat.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: HTTPS主要是关于使用**安全套接字层**（**SSL**）加密我们的Web服务器与用户浏览器之间的通信。HTTPS需要在服务器级别上启用。我们将看到如何使用Tomcat来实现这一点。
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The first recipe**,** *Enabling Spring Security*, is required for any of the
    other recipes to work.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个食谱**，** *启用Spring Security*，是其他任何食谱正常工作的前提。
- en: Enabling Spring Security
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用Spring Security
- en: To enable Spring Security, you need to add some Maven dependencies. You also
    need to create some configuration classes.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用Spring Security，您需要添加一些Maven依赖项。您还需要创建一些配置类。
- en: How to do it…
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'Here are the steps to enable Spring Security:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 启用Spring Security的步骤如下：
- en: 'Add the Maven dependencies for Spring Security in `pom.xml`. Note that the
    version number is different from Spring Core:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`pom.xml`中添加Spring Security的Maven依赖项。请注意，版本号与Spring Core不同：
- en: '[PRE0]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a class for the Spring Security configuration:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个用于Spring Security配置的类：
- en: '[PRE1]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Declare the configuration class in the `ServletInitializer` class:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`ServletInitializer`类中声明配置类：
- en: '[PRE2]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Add a class implementing `AbstractSecurityWebApplicationInitializer` to initialize
    Spring Security''s servlet filter:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个实现`AbstractSecurityWebApplicationInitializer`的类以初始化Spring Security的servlet过滤器：
- en: '[PRE3]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works…
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: '`SecurityWebApplicationInitializer` registers, behind the scenes, a servlet
    filter, which will handle access to any URL of the web application.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`SecurityWebApplicationInitializer`在幕后注册了一个servlet过滤器，该过滤器将处理对Web应用程序任何URL的访问。'
- en: The `SecurityConfig` class will be loaded at startup (because of its declaration
    in `ServletInitializer`). The Spring configuration code that we will write in
    the following recipes will go in the `SecurityConfig` class.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`SecurityConfig`类将在启动时加载（因为其在`ServletInitializer`中的声明）。我们将在以下食谱中编写的Spring配置代码将放在`SecurityConfig`类中。'
- en: Authenticating users using the default login page
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用默认登录页面进行用户认证
- en: Spring makes it easy to quickly add a login page to your web application; just
    define some user credentials (usernames and passwords) in the security configuration
    class. To access any page, the user will have to go through Spring's default login
    page first.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Spring使您能够轻松地为Web应用程序添加登录页面；只需在安全配置类中定义一些用户凭据（用户名和密码）。要访问任何页面，用户必须首先通过Spring的默认登录页面。
- en: '![Authenticating users using the default login page](img/5807OS_06_01.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![使用默认登录页面进行用户认证](img/5807OS_06_01.jpg)'
- en: How to do it…
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'In your security configuration class, add a `configureUsers()` method containing
    the hardcoded user credentials:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的安全配置类中，添加一个包含硬编码用户凭据的`configureUsers()`方法：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: How it works…
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In `configureUsers()`, we told Spring to use the provided user credentials for
    user authentication. We assigned roles to each user. A role is an arbitrary `String`
    object. To use those roles for authorization, refer to the *Authorizing only users
    with a specific role to view some pages,* recipe.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `configureUsers()` 中，我们告诉 Spring 使用提供的用户凭据进行用户身份验证。我们为每个用户分配了角色。角色是一个任意的 `String`
    对象。要使用这些角色进行授权，请参考 *仅授权具有特定角色的用户查看某些页面* 菜谱。
- en: 'By default, the Spring''s default login page will be used to protect all the
    pages of the web application. This is defined in the default `configure()` method
    of Spring Security:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Spring 的默认登录页面将用于保护 Web 应用程序的所有页面。这是在 Spring Security 的默认 `configure()`
    方法中定义的：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We will override this method in the following recipe in order to define a custom
    login page.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下面的菜谱中重写此方法，以定义自定义登录页面。
- en: Authenticating users using a custom login page
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自定义登录页面进行用户身份验证
- en: In this recipe, you'll learn how to build your own login form instead of using
    Spring's default login form.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，你将学习如何构建自己的登录表单，而不是使用 Spring 的默认登录表单。
- en: '![Authenticating users using a custom login page](img/5807OS_06_02.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![使用自定义登录页面进行用户身份验证](img/5807OS_06_02.jpg)'
- en: How to do it…
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Here are the steps to define a custom login page:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是定义自定义登录页面的步骤：
- en: 'Make sure that the JSTL Maven dependency is declared in `pom.xml`:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在 `pom.xml` 中声明了 JSTL Maven 依赖项：
- en: '[PRE6]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Make sure that a JSP view resolver is declared in the `AppConfig` class:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在 `AppConfig` 类中声明了 JSP 视图解析器：
- en: '[PRE7]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Add a controller method for the login page in a controller class:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制器类中添加登录页面的控制器方法：
- en: '[PRE8]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Add a JSP for the login page:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加登录页面的 JSP：
- en: '[PRE9]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In the `SecurityConfig` class, override the Spring''s default `configure()`
    method. Declare the URL of your custom login page:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `SecurityConfig` 类中，重写 Spring 的默认 `configure()` 方法。声明自定义登录页面的 URL：
- en: '[PRE10]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works…
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'In the `SecurityConfig` class, the `configure()` method:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `SecurityConfig` 类中，`configure()` 方法：
- en: 'Requires authentication for any URL: `anyRequest().authenticated()`'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何 URL 都需要身份验证：`anyRequest().authenticated()`
- en: 'Allows user authentication through the custom login page: `formLogin().loginPage("/login")`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许通过自定义登录页面进行用户身份验证：`formLogin().loginPage("/login")`
- en: 'Allows anyone access to the login page: `loginPage("/login").permitAll();`'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许任何人访问登录页面：`loginPage("/login").permitAll();`
- en: Authenticating users using a database
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用数据库进行用户身份验证
- en: In this recipe, you'll learn how to use user credentials (username and password)
    from a database for authentication.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，你将学习如何使用数据库中的用户凭据（用户名和密码）进行身份验证。
- en: How to do it…
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Here are the steps to use user credentials in a database for authentication:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是使用数据库中的用户凭据进行身份验证的步骤：
- en: 'Add the Spring JDBC Maven dependency in `pom.xml`:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `pom.xml` 中添加 Spring JDBC Maven 依赖项：
- en: '[PRE11]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In the database, create the `users` and `authorities` tables:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据库中创建 `users` 和 `authorities` 表：
- en: '[PRE12]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In the database, add users and their roles:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据库中添加用户及其角色：
- en: '[PRE13]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In the `SecurityConfig` class, add a `DataSource` bean with the database connection
    details:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `SecurityConfig` 类中，添加一个包含数据库连接详情的 `DataSource` bean：
- en: '[PRE14]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'In the `SecurityConfig` class, add a `DataSourceTransactionManager` bean:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `SecurityConfig` 类中，添加一个 `DataSourceTransactionManager` bean：
- en: '[PRE15]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In the `SecurityConfig` class, override the Spring''s `configure()` method:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `SecurityConfig` 类中，重写 Spring 的 `configure()` 方法：
- en: '[PRE16]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: How it works…
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'With the `configure()` method overridden, Spring Security will:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 通过重写 `configure()` 方法，Spring Security 将：
- en: Use JDBC for authentication
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 JDBC 进行身份验证
- en: Use the provided `DataSource` bean to connect to the database
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用提供的 `DataSource` bean 连接到数据库
- en: Perform these SQL queries to get users and their roles
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行这些 SQL 查询以获取用户及其角色
- en: Adding a logout link
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加注销链接
- en: In this recipe, you'll learn how to add a URL `/logout` to let the user log
    out.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，你将学习如何添加 URL `/logout` 以允许用户注销。
- en: How to do it…
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In the `SecurityConfig` class, in the `configure()` method, call the `logout()`
    method and the `logoutRequestMatcher()` method to declare a logout URL:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `SecurityConfig` 类的 `configure()` 方法中，调用 `logout()` 方法和 `logoutRequestMatcher()`
    方法来声明注销 URL：
- en: '[PRE17]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Use `org.springframework.security.web.util.` **matcher** `.AntPathRequestMatcher`,
    and not the deprecated `org.springframework.security.web.util.AntPathRequestMatcher`
    class.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `org.springframework.security.web.util.` **matcher** `.AntPathRequestMatcher`，而不是已弃用的
    `org.springframework.security.web.util.AntPathRequestMatcher` 类。
- en: How it works…
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: While going to the URL `/logout`, the user will be logged out.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户访问 URL `/logout` 时，用户将被注销。
- en: Using public folders
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用公共文件夹
- en: Some folders need their contents to be accessible without authentication, for
    example, the folder containing CSS files, the folder containing JavaScript files,
    and the folder containing static images. None of these usually contain confidential
    information and some of their files may be necessary to display the login page
    and the public pages of the website properly.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 有些文件夹需要其内容在不进行认证的情况下可访问，例如，包含 CSS 文件的文件夹、包含 JavaScript 文件的文件夹和包含静态图像的文件夹。这些文件夹通常不包含机密信息，并且其中的一些文件可能是正确显示登录页面和网站公共页面所必需的。
- en: How to do it…
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'In the security configuration class, override the `configure(WebSecurity web)`
    method to define the public folders:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在安全配置类中，覆盖 `configure(WebSecurity web)` 方法以定义公共文件夹：
- en: '[PRE18]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: There's more…
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'It''s also possible to define them in the standard `configure()` method:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 它们也可以在标准的 `configure()` 方法中定义：
- en: '[PRE19]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This enables public access to these folders, but requires authentication for
    any other request.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得对这些文件夹的公开访问成为可能，但要求对任何其他请求进行认证。
- en: Authorizing only users with a specific role to view some pages
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仅授权具有特定角色的用户查看某些页面
- en: There are pages that only a few users should be allowed to access. For example,
    admin pages should be accessible only to admin users. This is done by matching
    the URLs of these pages to user roles, which were defined when the users were
    created; refer to the *Authenticating users using the default login page* and
    *Authenticating users using a database* recipes.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 有些页面只有少数用户应该被允许访问。例如，管理页面应该只对管理员用户可访问。这是通过将这些页面的 URL 与用户角色匹配来实现的，这些角色是在创建用户时定义的；请参阅
    *使用默认登录页面进行用户认证* 和 *使用数据库进行用户认证* 的菜谱。
- en: How to do it…
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'In the `configure()` method, use the `hasRole()` method:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `configure()` 方法中使用 `hasRole()` 方法：
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: How it works…
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This allows access to URLs starting with the `/admin` path only to users with
    the `ADMIN` role.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许只有具有 `ADMIN` 角色的用户访问以 `/admin` 路径开始的 URL。
- en: Displaying page elements only to authenticated users in views
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在视图中仅向认证用户显示页面元素
- en: In this recipe, you'll learn how to display some elements of a page only to
    authenticated users. For example, a summary box with the information about the
    account of the currently logged-in user.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，你将学习如何仅向认证用户显示页面的一些元素。例如，显示当前登录用户账户信息的摘要框。
- en: How to do it…
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Use the `<sec:authorize>` tag in the JSP file to add conditions for some content
    to be displayed:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在 JSP 文件中使用 `<sec:authorize>` 标签为某些内容显示添加条件：
- en: 'Add the Maven dependency for the Spring Security JSP tags library in `pom.xml`:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `pom.xml` 中添加 Spring Security JSP 标签库的 Maven 依赖项：
- en: '[PRE21]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In the JSP, declare the tag library and use `<sec:authorize>`:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 JSP 中声明标签库并使用 `<sec:authorize>`：
- en: '[PRE22]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How it works…
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The text in the `sec:authorize` tag will be displayed only for authenticated
    users. We used the `sec:authentication` tag to display the username of the currently
    logged-in user.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`sec:authorize` 标签中的文本将仅对认证用户显示。我们使用了 `sec:authentication` 标签来显示当前登录用户的用户名。'
- en: There's more…
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'To display contents only to the not-authenticated users, use the `isAnonymous()`
    function:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅向未认证用户显示内容，请使用 `isAnonymous()` 函数：
- en: '[PRE23]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: To display contents only to the users with the `ADMIN` role, use the `hasRole()`
    function.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅向具有 `ADMIN` 角色的用户显示内容，请使用 `hasRole()` 函数。
- en: '[PRE24]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: To display contents to the users with the `ADMIN` role or the `WARRIOR` role,
    use the hasAnyRole() function.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要向具有 `ADMIN` 角色或 `WARRIOR` 角色的用户显示内容，请使用 `hasAnyRole()` 函数。
- en: '[PRE25]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'A full list of all the Spring expressions is available at:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 Spring 表达式的完整列表可在以下位置找到：
- en: '[http://docs.spring.io/spring-security/site/docs/3.0.x/reference/el-access.html](http://docs.spring.io/spring-security/site/docs/3.0.x/reference/el-access.html).'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.spring.io/spring-security/site/docs/3.0.x/reference/el-access.html](http://docs.spring.io/spring-security/site/docs/3.0.x/reference/el-access.html)。'
- en: Using HTTPS with Tomcat
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Tomcat 与 HTTPS
- en: To use HTTPS URLs, no Spring configuration is required, but you need to enable
    HTTPS on your server. In this recipe, we'll cover how to do this for Tomcat (on
    a Mac OS or Linux) using a self-generated SSL certificate. For production, remember
    to use a real commercial SSL certificate.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 HTTPS URL，不需要 Spring 配置，但需要在服务器上启用 HTTPS。在本菜谱中，我们将介绍如何为 Tomcat（在 Mac OS
    或 Linux 上）使用自生成的 SSL 证书来完成此操作。对于生产环境，请记住使用真实的商业 SSL 证书。
- en: How to do it…
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Here are the steps to enable HTTPS for Tomcat:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 启用 Tomcat 的 HTTPS 的步骤如下：
- en: 'To generate an SSL certificate, open a Terminal and use the `keytool` command
    to create `certificate.bin`. In this example, the certificate user name is `admin`
    and the password is `adminpass`:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要生成 SSL 证书，打开终端并使用 `keytool` 命令创建 `certificate.bin`。在此示例中，证书用户名为 `admin`，密码为
    `adminpass`：
- en: '[PRE26]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Accept the default values, except for the last question whose answer should
    be `yes`:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接受默认值，除了最后一个问题，其答案应该是 `yes`：
- en: '[PRE27]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Move `certificate.bin` to the root of Tomcat's folder.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `certificate.bin` 移动到 Tomcat 文件夹的根目录。
- en: 'In `<tomcat_folder>/conf/server.xml`, uncomment the definition starting with
    `<Connector port="8443"` and add the `keystoreFile` and `keystorePass` attributes:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `<tomcat_folder>/conf/server.xml` 中，取消注释以 `<Connector port="8443"` 开头的定义，并添加
    `keystoreFile` 和 `keystorePass` 属性：
- en: '[PRE28]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Restart Tomcat and make sure that your web application is available via HTTPS
    on the `8443` port: `https://localhost:8443`.'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动 Tomcat，并确保您的网络应用可以通过 HTTPS 在 `8443` 端口上访问：`https://localhost:8443`。
- en: How it works…
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We configured Tomcat to accept incoming HTTPS requests on the `8443` port using
    a self-signed SSL certificate. Most web browsers will display a security warning
    before displaying the page because the SSL certificate is self-signed.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已将 Tomcat 配置为使用自签名的 SSL 证书在 `8443` 端口上接受传入的 HTTPS 请求。大多数网络浏览器在显示页面之前会显示一个安全警告，因为
    SSL 证书是自签名的。
- en: There's more…
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `certificate.bin` file can be anywhere on the machine, just use an absolute
    path in `server.xml`.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`certificate.bin` 文件可以放在机器上的任何位置，只需在 `server.xml` 中使用绝对路径即可。'
- en: It's possible to change the port number `8443` to anything else.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将端口号 `8443` 改为任何其他数字。
- en: It's possible to use HTTPS exclusively by disabling access via plain HTTP; comment
    out the non-SSL connector in `server.xml`.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过禁用通过纯 HTTP 的访问来仅使用 HTTPS；在 `server.xml` 中注释掉非 SSL 连接器。
- en: For more information about Tomcat and HTTPS/SSL, go to [https://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html](https://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Tomcat 和 HTTPS/SSL 的更多信息，请访问 [https://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html](https://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html)。
