- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 序言
- en: 'Software has been an integral part of enterprises and a key contributor to
    their growth. Be it analytics, user experience, social marketing, decision support
    systems, or any other functional domain, software has been used to aid smooth
    and efficient functioning. Enterprises start small and grow over a period of time,
    and so does their software dependency. Enterprise applications are developed over
    a period of time. The following aspects pose certain challenges while dealing
    with enterprise software:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 软件一直是企业的 integral 部分，也是其增长的关键贡献者。无论是分析、用户体验、社会营销、决策支持系统，还是其他任何功能领域，软件一直被用来帮助企业实现顺利和高效运作。企业从小开始，随着时间的推移逐渐成长，其软件依赖也是如此。企业应用程序是在一段时间内开发而成的。处理企业软件时，以下方面会带来一定的挑战：
- en: They are distributed across a set of domains, for example, payroll, inventory,
    reporting, and social integration.
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们分布在一批领域内，例如，工资单、库存、报告和社会集成。
- en: Each of these modules might have been developed independent of each other and
    may be on different platforms, for example, employee self-portal in J2EE stack,
    legacy records management on mainframes, CRM system using Salesforce, with some
    real-time application in their proprietary implementation.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些模块中的每一个可能都是独立开发的，并且可能位于不同的平台上，例如，基于J2EE栈的员工自我门户、在大型机上的遗留记录管理系统、使用Salesforce的CRM系统，以及它们专有实现中的一些实时应用程序。
- en: These modules need to interact with each other and with external systems as
    well. They may have to consume data from external sources through SOAP services
    or shared files, or they themselves have to share data though one of many data-sharing
    techniques.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些模块需要相互交互，并与外部系统交互。它们可能需要通过SOAP服务或共享文件从外部来源消费数据，或者它们自己必须通过多种数据共享技术之一共享数据。
- en: As software grows old, we need to introduce new platforms and replace existing
    modules to alleviate the growing maintenance cost. A rip and replace strategy
    would not work; rather, this should be done in a homogenous way without disturbing
    the sanity of existing modules during the transitions.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着软件的衰老，我们需要引入新的平台并替换现有的模块以减轻不断增长的维护成本。一次性替换的策略是不可行的；相反，在过渡过程中应该以同质化方式进行，而不打扰现有模块的稳定性。
- en: Integration of these modules either inside organizations or with external partners
    is inherently complex, requiring integration of heterogeneous endpoints. This
    is the kind of scenario that Enterprise Application Integration tries to address.
    **Enterprise Integration Patterns** (**EIP**) is a collection of standard enterprise
    challenges and how can they be handled. Spring Integration is one of the implementations
    of the EIP that provides many off-the-shelf components recommended by EIP.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模块的集成，无论是内部组织还是与外部合作伙伴集成，都是固有复杂的，需要集成异质端点。这是企业应用集成试图解决的情景。**企业集成模式**（**EIP**）是一系列标准企业挑战及其应对方式的集合。Spring
    Integration是EIP的一种实现，提供了许多EIP推荐的现成组件。
- en: How enterprise integration challenges can be solved
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 企业集成挑战如何解决
- en: 'Many approaches have been tried to make the integration simple without compromising
    on vital aspects of enterprise, such as security, transaction, availability, reliability,
    and so on. A few of the prominent methodologies used over time are **Java Connector
    Architecture** (**JCA**), RMI, RPC, and CORBA for platform-agnostic integration,
    message brokers with system adapter, and many more. Under the hood, they try to
    solve integration issues through one of the following techniques:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 许多方法已经被尝试以简化集成，同时不牺牲企业至关重要的方面，例如安全性、事务、可用性、可靠性和 so on。随着时间的推移使用的一些著名方法包括**Java
    Connector Architecture**（**JCA**）、RMI、RPC 和 CORBA用于平台无关的集成，带有系统适配器的消息代理等等。在幕后，它们试图通过以下一种或多种技术解决集成问题：
- en: '**Shared File**: This is the simplest approach. Systems can write data in a
    predefined format to a file, which can be read by other endpoints. An adapter
    might be needed to convert a format between two different endpoints. Let''s consider
    an example, a daily report used to be generated in a CSV file. Over time, the
    organization established a web presence and reports need to be pushed online now.
    How can this be achieved? The simplest way is to dump it in files that will be
    read by an adapter and fed into the CMS system. A filesystem is simple but not
    the best solution; it is not transactional. What if a particular file is corrupt,
    or what if at poll interval files are not available due to network failure? This
    necessitates the introduction of a complex system that has a retry mechanism,
    filter capabilities, and many more nonfunctional aspects such as secure access,
    archival, and so on.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共享文件**：这是最简单的方法。系统可以以预定义的格式向文件写入数据，其他端点可以阅读这些文件。可能需要一个适配器来转换两个不同端点之间的格式。让我们考虑一个例子，以前每天都会生成一个CSV文件的报告。随着时间的推移，该组织建立了网站，现在需要将报告推送到线上。这该如何实现？最简单的方法是将它倒入由适配器读取并输入到CMS系统的文件中。文件系统很简单，但不是最佳解决方案；它不是事务性的。如果某个特定文件损坏了，或者由于网络故障，轮询间隔内文件不可用怎么办？这需要引入一个具有重试机制、过滤能力等许多非功能性方面的复杂系统，如安全访问、归档等等。'
- en: '**Shared database**: This addresses a few of the challenges that are addressed
    by the filesystem, such as transactional behavior, role-based access, performance
    tuning, distributed support, and so on. The common mechanism is a set of join
    tables—one application writes data in a schema that is understood by others. On
    the flip side, this introduces tight coupling; if there is a change in schema,
    both the systems need to be updated accordingly. Evolving applications will become
    a challenge, as they will have to factor in the external system limitations. The
    integration effort might itself start with lot of hiccups, for example, compatibility
    issues between the SQL provided by database vendors of the application, data format,
    and types in their table. For example, if one system stores only the date while
    the other stores the date with time stamp, depending on need, at least one will
    have to change format.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共享数据库**：这解决了一些文件系统所解决的问题，如事务性行为、基于角色的访问、性能调优、分布式支持等等。常见的机制是一组连接表——一个应用程序在别人理解的架构中写入数据。另一方面，这引入了紧密耦合；如果架构发生变更，两个系统都需要相应地更新。发展中的应用程序将成为一个挑战，因为它们必须考虑到外部系统限制。集成工作本身可能从一开始就会遇到很多挫折，例如，应用程序数据库供应商提供的SQL兼容性问题、数据格式和表中的类型等等。例如，如果一个系统只存储日期，而另一个系统存储带有时间戳的日期，根据需要，至少有一个将必须更改格式。'
- en: '**Remote procedure calls**: This mechanism introduces a paradigm where each
    system can offer services by publishing the contract. These paradigms can be a
    method, parameters, result, and error. For example, an EJB service or a SOAP service
    can be exposed for providing raw data for a reporting module that renders it in
    multiple formats. The most limiting aspect is synchronous behavior, where systems
    have to wait for the result. There are other challenges such as serialization
    of data, network latency, performance issues of a module, which can bring down
    the whole application, and so on. From a security aspect, exposing the method
    name and parameter invites hackers to exercise their creativity.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**远程过程调用**：这种机制引入了一个范例，每个系统都可以通过发布合同来提供服务。这些范例可以是一个方法、参数、结果和错误。例如，一个EJB服务或一个SOAP服务可以暴露出来，为报告模块提供原始数据，并以多种格式呈现。最限制性的方面是同步行为，系统必须等待结果。还有其他挑战，如数据的序列化、网络延迟、模块的性能问题，这些都可能导致整个应用程序崩溃，等等。从安全角度来看，暴露方法和参数会邀请黑客发挥他们的创造力。'
- en: '**Messaging**: This introduces the asynchronous model in which two heterogeneous
    modules can interact through data over a predefined connection. The greatest advantage
    is decoupling—none of the systems are dependent on the availability of the other
    and they can participate or withdraw from integration without impacting other
    components. JMS is an example of message-based integration. Spring Integration
    is based on this paradigm where multiple endpoints connect on to a channel, produce
    or consume messages, and perform further processing based on information in a
    message. We will deal with channel, endpoints, message payload, and other concepts
    in the upcoming chapters.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息传递**：它引入了异步模型，其中两个异构模块可以通过数据在预定义的连接上进行交互。最大的优势是解耦——没有任何系统依赖于其他系统的可用性，并且它们可以参与或退出集成，而不会影响其他组件。JMS是基于消息传递集成的例子。Spring
    Integration基于这种范式，其中多个端点连接到一个通道，生产或消费消息，并根据消息中的信息执行进一步的处理。我们将在接下来的章节中介绍通道、端点、消息载荷和其他概念。'
- en: Even if we use one of the preceding techniques, enterprise systems are way outward
    from each other and all of them might not be working all the time. This necessitated
    the use of middleware that can orchestrate reliable communication between these
    disparate endpoints, typically called an **Enterprise Service Bus** (**ESB**).
    In layman's terms, ESB can be defined as the middle man who enables communication
    to and fro between heterogeneous interfaces.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们使用了前面提到的某一种技术，企业系统之间也相去甚远，而且它们可能不会一直运行。这使得需要使用中间件来协调这些不同端点之间的可靠通信，这种中间件通常称为**企业服务总线**（**ESB**）。用通俗的话来说，ESB可以被定义为使异构接口之间能够双向通信的中介。
- en: Who are the players?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参与者是谁？
- en: As we have been discussing, the problem of enterprise integration is complex
    and many vendors have tried to address it in their own propitiatory ESB framework—earlier
    it used to be dominated by commercial vendors such as Tibco, Vitria, IBM MQSeries,
    Oracle SOA Suite, Microsoft BizTalk, and so on. Over time, the need for open source
    frameworks became evident as smaller organizations grew. Their integration needs
    were limited and were incapable of investing upfront with any of these biggies.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前所讨论的，企业集成的问题复杂多样，许多供应商尝试在他们自己的专有ESB框架中解决它——以前，这些领域一直由商业供应商如Tibco、Vitria、IBM
    MQSeries、Oracle SOA Suite、Microsoft BizTalk等主导。随着时间的推移，对于开源框架的需求变得明显，因为小型组织逐渐成长。他们的集成需求有限，而且无法与这些巨头中的任何一个进行前期投资。
- en: 'Some of the prominent open source integration frameworks, apart from Spring
    Integration, are Camel, Service Mix, Mule ESB, Open ESB, and so on. A comprehensive
    comparison of these frameworks is beyond the scope of this book but a small summary
    of two other major open source frameworks, has been provided here for the sake
    of emphasizing Spring Integration simplicity:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Spring Integration之外，还有一些著名的开源集成框架，如Camel、Service Mix、Mule ESB、Open ESB等。对这些框架的全面比较超出了本书的范围，但为了强调Spring
    Integration的简洁性，这里提供了一个另外两个主要开源框架的简要总结：
- en: '**Mule ESB**: It is a standard server, solutions are developed and deployed
    inside them. Mule is one of the most prominent and stable solutions on the market.
    The point to be observed here is that, it''s a container that holds the application.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Mule ESB**：它是一个标准的服务器，解决方案是在其中开发和部署的。Mule是市场上最突出和最稳定的解决方案之一。需要注意的一点是，它是一个包含应用程序的容器。'
- en: '**Service Mix (SM)**: Apache Service Mix is built over JAVA legacy JBI (Java
    Business Integration). Service Mix tries to solve almost all aspects of enterprise
    integration by unifying the features and functionality of ActiveMQ, Camel, CXF,
    ODE, and Karaf. It provides a complete, enterprise-ready ESB, exclusively powered
    by OSGi. Since it tries to address a lot of modules, it is pretty bulky compared
    to Spring Integration.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Service Mix (SM)**：Apache Service Mix基于JAVA遗留JBI（Java Business Integration）。Service
    Mix试图通过统一ActiveMQ、Camel、CXF、ODE和Karaf的功能和特性来解决企业集成的几乎所有方面。它提供了一个完整的、企业级就绪的ESB，专门由OSGi提供动力。因为它试图解决很多模块，所以与Spring
    Integration相比，它相当庞大。'
- en: Why Spring Integration?
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么使用Spring Integration？
- en: Spring Integration is an open source effort to address integration challenges;
    it is based on the Spring Framework, which is the most widely used Java-based
    framework in organizations. It introduces the simple POJO-based programming model
    to support standard integration patterns.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Integration是一个开源项目，旨在解决集成挑战；它基于Spring Framework，这是组织中最广泛使用的基于Java的框架。它引入了简单的基于POJO的编程模型，以支持标准集成模式。
- en: It's lightweight; all it needs is couple of jars for which Maven targets are
    readily available. A quick comparison shows that the Service Mix download is around
    55 MB while Spring Integration is just 14 MB in size.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 它轻量级；所有它需要的是几个jar文件，Maven目标已经准备好了。快速比较显示Service Mix的下载大小约为55MB，而Spring Integration仅为14MB。
- en: Spring Integration is just a set of standard Java libraries; the solution gets
    deployed in the application instead of that application getting deployed in some
    containers, as in the case of SM and Mule.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spring Integration只是一组标准的Java库；解决方案部署在应用程序中，而不是将应用程序部署在某些容器中，如SM和Mule的情况。
- en: For enterprises that are already using Java and Spring, it eases the integration
    effort as it follows the same idioms and patterns of the Spring Framework.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于已经使用Java和Spring的企业，它简化了集成工作，因为它遵循Spring框架相同的习语和模式。
- en: What this book covers
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](part0018_split_000.html#page "Chapter 1. Getting Started"), *Getting
    Started*, explains how to set up the Eclipse IDE, a "Hello World" program, and
    a brief introduction of how Spring ROO can ease the configuration aspects even
    further. This will help overcome configuration nightmares and warm up developers
    to a hands-on experience.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](part0018_split_000.html#page "第1章. 入门指南"), *入门指南*, 解释了如何设置Eclipse IDE，“Hello
    World”程序，以及Spring ROO如何进一步简化配置方面的介绍。这将帮助克服配置噩梦，并为开发者提供实践经验。'
- en: '[Chapter 2](part0023_split_000.html#page "Chapter 2. Message Ingestion"), *Message
    Ingestion*, introduces channels through which messages can be read and processed.
    It describes the point-to-point and pub-sub models, which one is best suited for
    a given scenario, how errors can be handled in a decoupled manner on a channel,
    and finally how in-memory channels can be backed up with persistence for failover
    and recovery solutions.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](part0023_split_000.html#page "第2章. 消息摄取"), *消息摄取*, 介绍了消息可以通过哪些通道读取和处理。它描述了点对点和发布-订阅模型，哪种模型最适合给定场景，如何在通道上以解耦的方式处理错误，以及最后如何在内存通道上支持持久化以实现故障转移和恢复解决方案。'
- en: '[Chapter 3](part0031_split_000.html#page "Chapter 3. Message Processing"),
    *Message Processing*, explains how to define components that can apply business
    logic on messages, introduces decoupled logging that can used for auditing, and
    discusses adding transactional behavior.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](part0031_split_000.html#page "第3章. 消息处理"), *消息处理*, 解释了如何定义可以对消息应用业务逻辑的组件，介绍了解耦日志记录，可用于审计，并讨论了添加事务行为。'
- en: '[Chapter 4](part0037_split_000.html#page "Chapter 4. Message Transformers"),
    *Message Transformers*, deals with processing message formats, its conversion
    to a homogenous format, and how annotations can help keep the configurations clean.
    Messages can be introduced in heterogeneous formats such as XML, JSON, and so
    on that need to be converted to a format understood by the system.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](part0037_split_000.html#page "第4章. 消息转换器"), *消息转换器*, 讲述了处理消息格式，将其转换为同质格式，以及注解如何帮助保持配置的整洁。消息可以以异构格式引入，如XML、JSON等，需要转换为系统能理解的格式。'
- en: '[Chapter 5](part0044_split_000.html#page "Chapter 5. Message Flow"), *Message
    Flow*, will introduce flow aspects to messages such as filtering messages that
    do not comply to validation rules, routing them to an error branch, splitting
    messages, and redirecting them to components appropriate for their processing—waiting
    for incomplete payloads, aggregating partial messages, and finally the chaining
    of business processing handlers.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](part0044_split_000.html#page "第5章. 消息流"), *消息流*, 将介绍与消息相关的流程方面，例如过滤不符合验证规则的消息，将它们路由到错误分支，分割消息，并将它们重定向到适合其处理的组件—等待不完整载荷，聚合部分消息，最后是业务处理链。'
- en: '[Chapter 6](part0052_split_000.html#page "Chapter 6. Integration with External
    Systems"), *Integration with External Systems*, will give a hands-on overview
    of integration points. Integration with external systems is the most interesting
    and powerful aspect of Spring Integration—interaction with external systems is
    a matter of a few lines of configuration. Spring Integration has introduced adapters,
    gateways, and other components that make it a breeze to interact with filesystems,
    SQL, NoSQL persistence store, HTTP services, and other widely used external entities
    such as different servers, social media, and so on.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](part0052_split_000.html#page "第6章. 与外部系统的集成")，*与外部系统的集成*，将提供一个实践性的概览，介绍集成点。与外部系统的集成是Spring
    Integration最有趣和强大的方面——与外部系统的交互只需几行配置即可。Spring Integration引入了适配器、网关和其他组件，使得与文件系统、SQL、NoSQL持久化存储、HTTP服务以及其他广泛使用的实体（如不同服务器、社交媒体等）的交互变得轻而易举。'
- en: '[Chapter 7](part0061_split_000.html#page "Chapter 7. Integration with Spring
    Batch"), *Integration with Spring Batch*, will introduce how to use Spring Integration
    and batch module for scheduling, triggering, and monitoring batch jobs.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](part0061_split_000.html#page "第7章. 与Spring Batch的集成")，*与Spring Batch的集成*，将介绍如何使用Spring
    Integration和批处理模块来调度、触发和监控批处理作业。'
- en: '[Chapter 8](part0065_split_000.html#page "Chapter 8. Testing Support"), *Testing
    Support*, will explain how to leverage the readily available mocks for different
    components, what to test, and how much to test.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](part0065_split_000.html#page "第8章. 测试支持")，*测试支持*，将解释如何利用不同组件的可用的模拟，以及要测试什么、测试多少。'
- en: '[Chapter 9](part0072_split_000.html#page "Chapter 9. Monitoring, Management,
    and Scaling Up"), *Monitoring, Management, and Scaling Up*, will cover using Spring
    Integration configuration to leverage JMX to get performance statistics of different
    configured components in the system. We will also peek into ways to scale up Spring
    Integration components.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](part0072_split_000.html#page "第9章. 监控、管理和扩展")，*监控、管理和扩展*，将介绍如何使用Spring
    Integration配置来利用JMX获取系统中不同配置组件的性能统计。我们还将探讨扩展Spring Integration组件的方法。'
- en: '[Chapter 10](part0075_split_000.html#page "Chapter 10. An End-to-End Example"),
    *An End-to-End Example*, has an end-to-end hands-on example that will help you
    to recollect concepts introduced in different chapters and reassert their understanding.
    Code will be pushed to a social repository as GitHub, but this chapter will give
    users enough instructions to use it and run it.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](part0075_split_000.html#page "第10章. 一个端到端的示例")，*一个端到端的示例*，提供了一个端到端的实践示例，帮助你回忆不同章节中介绍的概念，并重新确认他们的理解。代码将被推送到社交代码库，如GitHub，但本章将为用户提供足够的说明来使用它并运行它。'
- en: What you need for this book
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书你需要什么
- en: You need a Java-based IDE, and Spring STS is recommended. JDK 1.6 and above
    is required.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个基于Java的集成开发环境，推荐使用Spring STS。需要JDK 1.6及以上版本。
- en: Who this book is for
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向谁
- en: This book is for developers who are already familiar with basic Java and Spring
    concepts. Concepts of Enterprise Integration Patterns would be helpful but not
    mandatory. The book has been presented in a hands-on manner; an end-to-end working
    example has been picked, implemented, and explained throughout the chapters. This
    book would serve as a strong companion for new developers trying out their hand
    on integration aspects, and as a hands-on guide on how to use Spring Integration
    components for developers already familiar with these challenges and looking for
    quick samples.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向已经熟悉基本Java和Spring概念的开发者。熟悉企业集成模式的概念会有帮助，但不是强制性的。本书以实践的方式呈现，选择了一个端到端的实例，并在各个章节中实施和解释。本书将为尝试集成方面的初学者提供强有力的伴侣，为已经熟悉这些挑战并在寻找快速样本的开发者提供实践指南。
- en: Conventions
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你会发现有许多种文本风格，用于区分不同类型的信息。以下是一些这些风格的示例，以及它们的意义解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "Create
    a Spring Integration project by navigating to **File** | **Spring Project**, as
    shown in the following screenshot:".'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词汇、数据库表名、文件夹名、文件名、文件扩展名、路径名、假网址、用户输入和Twitter处理显示如下："通过导航到**文件** | **Spring项目**创建一个Spring
    Integration项目，如下截图所示："。
- en: 'A block of code is set as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块如下所示：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望吸引您的注意力到代码块的某个特定部分时，相关的行或项目会被设置为粗体：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "clicking the **Next** button moves you to the next screen".'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要词汇**以粗体显示。例如，您在屏幕上、菜单或对话框中看到的词汇，在文本中会显示为这样："点击**下一步**按钮会将您带到下一屏"。'
- en: Note
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会以这样的盒子出现。
- en: Tip
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 技巧和窍门会显示成这样。
- en: Reader feedback
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 读者反馈对我们来说总是受欢迎的。让我们知道您对这本书的看法——您喜欢或可能不喜欢的地方。读者反馈对我们开发您真正能从中受益的标题非常重要。
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要发送一般性反馈，只需发送一封电子邮件到`<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`，并通过消息主题提及书籍标题。
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在某个主题上有专业知识，并且有兴趣撰写或贡献一本书，请查看我们在[www.packtpub.com/authors](http://www.packtpub.com/authors)上的作者指南。
- en: Customer support
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 既然您已经成为 Packt 书籍的骄傲拥有者，我们有很多事情可以帮助您充分利用您的购买。
- en: Downloading the example code
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you. The code can also be
    pulled from [https://github.com/cpandey05/siessentials](https://github.com/cpandey05/siessentials).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.packtpub.com](http://www.packtpub.com)账户中购买的所有 Packt 书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册以便将文件直接通过电子邮件发送给您。代码也可以从[https://github.com/cpandey05/siessentials](https://github.com/cpandey05/siessentials)拉取。
- en: Errata
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 错误报告
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you would report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **errata** **submission** **form** link,
    and entering the details of your errata. Once your errata are verified, your submission
    will be accepted and the errata will be uploaded on our website, or added to any
    list of existing errata, under the Errata section of that title. Any existing
    errata can be viewed by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们已经竭尽全力确保内容的准确性，但是错误仍然会发生。如果您在我们的某本书中发现错误——可能是文本或代码中的错误——我们将非常感谢您能向我们报告。这样做，您可以避免其他读者遭受挫折，并帮助我们改进本书的后续版本。如果您发现任何错误，请通过访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)报告，选择您的书籍，点击**错误提交**
    **表单**链接，并输入您错误的详细信息。一旦您的错误得到验证，您的提交将被接受，错误将会上传到我们的网站，或者添加到该标题的错误部分中。任何现有的错误可以通过从[http://www.packtpub.com/support](http://www.packtpub.com/support)选择您的标题来查看。
- en: Piracy
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyright material on the Internet is an ongoing problem across all
    media. At Packt, we take the protection of our copyright and licenses very seriously.
    If you come across any illegal copies of our works, in any form, on the Internet,
    please provide us with the location address or website name immediately so that
    we can pursue a remedy.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上侵犯版权材料的问题持续存在，遍布所有媒体。在 Packt，我们非常重视对我们版权和许可的保护。如果您在互联网上以任何形式发现我们作品的非法副本，请立即提供给我们位置地址或网站名称，这样我们才能采取补救措施。
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过`<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`联系我们，附上疑似侵权材料的链接。
- en: We appreciate your help in protecting our authors, and our ability to bring
    you valuable content.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您在保护我们的作者和我们的能力带来有价值内容方面所提供的帮助。
- en: Questions
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    if you are having a problem with any aspect of the book, and we will do our best
    to address it.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在阅读本书的任何方面遇到问题，可以通过`<[questions@packtpub.com](mailto:questions@packtpub.com)>`联系我们，我们会尽最大努力解决。
