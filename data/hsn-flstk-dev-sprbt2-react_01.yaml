- en: Setting Up the Environment and Tools – Backend
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置环境和工具 - 后端
- en: In this chapter, we will set up the environment and tools needed for backend
    programming with Spring Boot. Spring Boot is a modern Java-based backend framework
    that makes development faster than traditional Java-based frameworks. With Spring
    Boot, you can make a standalone web application that has an embedded application
    server.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将为使用Spring Boot进行后端编程设置环境和工具。Spring Boot是一个现代的基于Java的后端框架，使开发速度比传统的基于Java的框架更快。使用Spring
    Boot，您可以创建一个具有嵌入式应用服务器的独立Web应用程序。
- en: 'In this chapter, we will look into the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将研究以下内容：
- en: Building the environment for Spring Boot development
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Spring Boot开发构建环境
- en: The basics of Eclipse IDE and Maven
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse IDE和Maven的基础知识
- en: Creating and running Spring Boot projects
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和运行Spring Boot项目
- en: Solving common problems of running Spring Boot applications
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决运行Spring Boot应用程序的常见问题
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Java SDK version 8 or higher is necessary to use of Eclipse IDE.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Eclipse IDE需要Java SDK版本8或更高版本。
- en: In this book, we are using the Windows operating system, but all tools are available
    for Linux and macOS as well.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们使用的是Windows操作系统，但所有工具也适用于Linux和macOS。
- en: Setting up the environment and tools
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置环境和工具
- en: There are a lot of different IDE tools that you can use to develop Spring Boot
    applications. In this book, we are using Eclipse, that is an open source IDE for
    multiple programming languages. We will create our first Spring Boot project by
    using the Spring Initializr project starter page. The project is then imported
    into Eclipse and executed. Reading the console log is a crucial skill when developing
    Spring Boot applications.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的IDE工具可用于开发Spring Boot应用程序。在本书中，我们使用Eclipse，这是一个用于多种编程语言的开源IDE。我们将通过使用Spring
    Initializr项目启动页面来创建我们的第一个Spring Boot项目。然后将项目导入Eclipse并执行。阅读控制台日志是开发Spring Boot应用程序时的关键技能。
- en: Installing Eclipse
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Eclipse
- en: Eclipse is an open source programming IDE developed by the Eclipse Foundation.
    An installation package can be downloaded from [https://www.eclipse.org/downloads](https://www.eclipse.org/downloads).
    Eclipse is available for Windows, Linux, and macOS. You should download the latest
    version of Eclipse IDE for Java EE developers.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse是由Eclipse基金会开发的开源编程IDE。安装包可以从[https://www.eclipse.org/downloads](https://www.eclipse.org/downloads)下载。Eclipse适用于Windows、Linux和macOS。您应该下载最新版本的Eclipse
    IDE for Java EE developers。
- en: You can either download a ZIP package of Eclipse or an installer package that
    executes the installation wizard. If using the ZIP package, you just have to extract
    the package to your local disk and it will contain an executable `Eclipse.exe`
    file, that you can run by double-clicking on the file.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以下载Eclipse的ZIP包或执行安装向导的安装程序包。如果使用ZIP包，您只需将包解压到本地磁盘上，它将包含一个可执行的`Eclipse.exe`文件，您可以通过双击该文件来运行它。
- en: The basics of Eclipse and Maven
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse和Maven的基础知识
- en: 'Eclipse is an IDE for multiple programming languages, such as Java, C++, and
    Python. Eclipse contains different perspectives for your needs. A perspective
    is a set of views and editors in the Eclipse Workbench. The following screenshot
    shows common perspectives for Java development:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse是用于多种编程语言的IDE，如Java、C++和Python。Eclipse包含不同的透视图以满足您的需求。透视图是Eclipse工作台中的一组视图和编辑器。以下屏幕截图显示了Java开发的常见透视图：
- en: '![](img/21f6b430-4b00-4aee-975e-b8d0290586b7.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/21f6b430-4b00-4aee-975e-b8d0290586b7.png)'
- en: On the left side, we have Project Explorer, where we can see our project structure
    and resources. Project Explorer is also used to open files by double-clicking
    on them. The files will be opened in the editor, that is located in the middle
    of the workbench. The Console view can be found in the lower section of the workbench.
    The Console view is really important because it shows application logging messages.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧，我们有项目资源管理器，可以在其中查看项目结构和资源。项目资源管理器也用于双击打开文件。文件将在工作台中间的编辑器中打开。控制台视图位于工作台的下部。控制台视图非常重要，因为它显示应用程序的日志消息。
- en: You can get the **Spring Tool Suite** (**STS**) for Eclipse if you want, but
    we are not going to use it in this book because the plain Eclipse installation
    is enough for our purposes. STS is a set of plugins that makes Spring application
    development easier ([https://spring.io/tools](https://spring.io/tools)).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您愿意，可以为Eclipse获取**Spring Tool Suite**（**STS**），但在本书中我们不会使用它，因为纯净的Eclipse安装已经足够满足我们的需求。STS是一组插件，使Spring应用程序开发更加简单（[https://spring.io/tools](https://spring.io/tools)）。
- en: Apache Maven is a software project management tool. The basis of Maven is the **project
    object model** (**pom**). Maven makes the software development process easier
    and it also unifies the development process. You can also use another project
    management tool called Gradle with Spring Boot, but in this book, we will focus
    on using Maven.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Maven是一个软件项目管理工具。Maven的基础是**项目对象模型**（**pom**）。Maven使软件开发过程更加简单，也统一了开发过程。您也可以在Spring
    Boot中使用另一个名为Gradle的项目管理工具，但在本书中，我们将专注于使用Maven。
- en: The pom is a `pom.xml` file that contains basic information about the project.
    There are also all the dependencies that Maven should download to be able to build
    the project.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: pom是一个包含有关项目的基本信息的`pom.xml`文件。还有Maven应该下载的所有依赖项以能够构建项目。
- en: Basic information about the project can be found at the beginning of the `pom.xml`
    file, which defines, for example, the version of the application, packaging format,
    and so on.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在`pom.xml`文件的开头找到有关项目的基本信息，例如应用程序的版本、打包格式等。
- en: The minimum version of the `pom.xml` file should contain the project root, `modelVersion`,
    `groupId`, `artifactId`, and `version`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`pom.xml`文件的最低版本应包含项目根目录、`modelVersion`、`groupId`、`artifactId`和`version`。'
- en: 'Dependencies are defined inside the dependencies section, as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖项在依赖项部分中定义，如下所示：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Maven is normally used from the command line. Eclipse contains embedded Maven,
    and that handles all the Maven operations we need. Therefore, we are not focusing
    on Maven command-line usage here. The most important thing is to understand the
    structure of the `pom.xml` file and how to add new dependencies to it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Maven通常是从命令行中使用的。Eclipse包含嵌入的Maven，并处理我们需要的所有Maven操作。因此，我们在这里不专注于Maven命令行的使用。最重要的是要了解“pom.xml”文件的结构以及如何向其中添加新的依赖项。
- en: Creating the project with Spring Initializr
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Spring Initializr创建项目
- en: 'We will create our backend project with Spring Intializr, that is a web-based
    tool that''s used to create Spring Boot projects. Spring Intializr can be found
    at [https://start.spring.io](https://start.spring.io):'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Spring Intializr创建我们的后端项目，这是一个用于创建Spring Boot项目的基于Web的工具。Spring Intializr可以在[https://start.spring.io](https://start.spring.io)找到：
- en: '![](img/506bc928-20ef-4c53-813b-94a3301058ec.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/506bc928-20ef-4c53-813b-94a3301058ec.png)'
- en: We will generate a Maven project with Java and the latest Spring Boot version.
    In the Group field, we will define our group ID, that will also become a base
    package in our Java project. In the Artifact field, we will define the artifact
    ID, that will also be the name of our project in Eclipse.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Java和最新的Spring Boot版本生成一个Maven项目。在“Group”字段中，我们将定义我们的group ID，这也将成为我们Java项目中的基本包。在“Artifact”字段中，我们将定义artifact
    ID，这也将是我们在Eclipse中项目的名称。
- en: 'In the Dependencies section, we will select the starters and dependencies that
    are needed in our project. Spring Boot provides starter packages that simplify
    your Maven configuration. Spring Boot starters are actually a set of dependencies
    that you can include in your project. You can either type the keyword of the dependency
    into the search field, or you can see all available dependencies by clicking on
    the Switch to the full version link.  We will start our project by selecting two
    dependencies—Web and DevTools. You can type the dependencies into the search field
    or switch to the full version and see all the starter packages and dependencies
    available:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '在“Dependencies”部分，我们将选择我们项目中需要的启动器和依赖项。Spring Boot提供了简化Maven配置的启动器包。Spring
    Boot启动器实际上是一组您可以包含在项目中的依赖项。您可以在搜索字段中键入依赖项的关键字，也可以点击“切换到完整版本”链接查看所有可用的依赖项。我们将通过选择两个依赖项——Web和DevTools来启动我们的项目。您可以在搜索字段中键入依赖项，也可以切换到完整版本并查看所有可用的启动器包和依赖项： '
- en: '![](img/3fc7e3aa-21c8-4c67-bba0-d356b18ff5d4.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3fc7e3aa-21c8-4c67-bba0-d356b18ff5d4.png)'
- en: The DevTools dependency provides us with Spring Boot development tools, that
    provide automatic restart functionality. It makes development much faster because
    the application is automatically restarted when changes have been saved. The web
    starter pack is a base for full-stack development and provides embedded Tomcat.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: DevTools依赖项为我们提供了Spring Boot开发工具，提供了自动重启功能。这样做可以加快开发速度，因为应用程序在保存更改后会自动重新启动。Web启动器包是全栈开发的基础，并提供了嵌入式Tomcat。
- en: Finally, you have to press the Generate Project button and that generates the
    project starter ZIP package for us.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您必须按“Generate Project”按钮，这将为我们生成项目启动器ZIP包。
- en: How to run the project
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何运行项目
- en: Extract the project ZIP package that we created in the previous topic and open
    Eclipse.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上一个主题中创建的项目ZIP包中提取并打开Eclipse。
- en: 'We are going to import our project into Eclipse IDE. To start the import process,
    select the File | Import menu and the import wizard will be opened. The following
    screenshot shows the first page of the wizard:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将把项目导入到Eclipse IDE中。要开始导入过程，请选择“文件|导入”菜单，导入向导将打开。以下屏幕截图显示了向导的第一页：
- en: '![](img/99a3be84-b10e-4d22-bd46-32baa4927237.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/99a3be84-b10e-4d22-bd46-32baa4927237.png)'
- en: 'In the first phase, you should select Existing Maven Projects from the list
    under the `Maven` folder, and then go to the next phase by pressing the Next button.
    The following screenshot shows the second step of the import wizard:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一阶段，您应该从“Maven”文件夹下的列表中选择“Existing Maven Projects”，然后按“Next”按钮进入下一阶段。以下屏幕截图显示了导入向导的第二步：
- en: '![](img/c3a17fd6-7875-4660-88c7-62dc2919b040.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c3a17fd6-7875-4660-88c7-62dc2919b040.png)'
- en: In this phase, select the extracted project folder by pressing the Browse... button.
    Then, Eclipse finds the `pom.xml` file from the root of your project folder and
    shows it inside the Projects section of the window.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此阶段，通过按“Browse...”按钮选择提取的项目文件夹。然后，Eclipse会找到项目文件夹根目录下的“pom.xml”文件，并在窗口的“Projects”部分中显示它。
- en: 'Press the Finish button to finalize the import. If everything went correctly,
    you should see the `cardatabase` project in Eclipse Project Explorer. It takes
    a while when the project is ready because all dependencies will be loaded by Maven
    after import. You can see the progress of the dependency download at the bottom-right
    corner of Eclipse. The following screenshot shows Eclipse Project Explorer after
    successful import:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按“Finish”按钮完成导入。如果一切顺利，您应该在Eclipse项目资源管理器中看到“cardatabase”项目。项目准备就绪需要一段时间，因为所有依赖项将在导入后由Maven加载。您可以在Eclipse右下角看到依赖项下载的进度。以下屏幕截图显示了成功导入后的Eclipse项目资源管理器：
- en: '![](img/30e8b5c1-9e30-4589-9f91-10553da21385.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/30e8b5c1-9e30-4589-9f91-10553da21385.png)'
- en: The Project Explorer also shows the package structure of our project, and now
    at the beginning there is only one package called `com.packt.cardatabase`. Under
    that package is our main application class, called `CardatabaseApplication.java`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 项目资源管理器还显示了我们项目的包结构，现在一开始只有一个名为“com.packt.cardatabase”的包。在该包下是我们的主应用程序类，名为“CardatabaseApplication.java”。
- en: 'Now, we don''t have any functionality in our application, but we can run it
    and see whether everything has started successfully. To run the project, open
    the main class by double-clicking on it and then pressing the Run button in the
    Eclipse toolbar, or select the run menu and press Run as | Java Application:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们的应用程序中没有任何功能，但我们可以运行它并查看是否一切顺利启动。要运行项目，请双击打开主类，然后在Eclipse工具栏中按“Run”按钮，或者选择运行菜单并按“Run
    as | Java Application”：
- en: '![](img/72e8172c-ee62-4733-aec1-58268f340153.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/72e8172c-ee62-4733-aec1-58268f340153.png)'
- en: You can see the Console view opening in Eclipse, and that contains important
    information about the execution of the project. This is the view where all log
    texts and error messages appear, and it is therefore really important to check
    the content of the view when something goes wrong.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Eclipse中看到控制台视图打开，其中包含有关项目执行的重要信息。这是所有日志文本和错误消息出现的视图，因此在出现问题时检查视图的内容非常重要。
- en: 'Now, if the project was executed correctly, you should see the text `Started
    CardatabaseApplication in...` at the end of the console. The following screenshot
    shows the content of the Eclipse console after our Spring Boot project has been
    started:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果项目被正确执行，您应该在控制台的末尾看到文本“Started CardatabaseApplication in...”。以下屏幕截图显示了我们的Spring
    Boot项目启动后Eclipse控制台的内容：
- en: '![](img/1f00d6bf-b504-4f06-9e42-2d7722157dd1.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f00d6bf-b504-4f06-9e42-2d7722157dd1.png)'
- en: 'In the root of our project there is the `pom.xml` file, that is the Maven configuration
    file for our project. If you look at the dependencies inside the file, you can
    see that there are now dependencies that we selected on the Spring Initializr
    page. There is also a test dependency included automatically without any selection.
    In the next chapters, we are going to add more functionality to our application,
    and then we will add more dependencies manually to the `pom.xml` file:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们项目的根目录中有`pom.xml`文件，这是我们项目的Maven配置文件。如果您查看文件中的依赖项，您会发现现在有我们在Spring Initializr页面上选择的依赖项。还有一个测试依赖项自动包含，无需任何选择。在接下来的章节中，我们将为我们的应用程序添加更多功能，然后我们将手动向`pom.xml`文件添加更多依赖项：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s look at the Spring Boot main class more carefully. At the beginning
    of the class, there is the `@SpringBootApplication` annotation. It is actually
    a combination of multiple annotations, such as, the following:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看一下Spring Boot主类。在类的开头，有`@SpringBootApplication`注释。实际上，它是多个注释的组合，例如以下内容：
- en: '| **Annotation** | **Description** |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| **注释** | **描述** |'
- en: '| `@EnableAutoConfiguration` | Enables Spring Boot automatic configuration.
    Spring Boot will automatically configure your project based on dependencies. For
    example, if you have the `spring-boot-starter-web` dependency, Spring Boot assumes
    that you are developing a web application and configures your application accordingly.
    |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `@EnableAutoConfiguration` | 启用Spring Boot自动配置。Spring Boot将根据依赖项自动配置您的项目。例如，如果您有`spring-boot-starter-web`依赖项，Spring
    Boot会假定您正在开发Web应用程序，并相应地配置您的应用程序。 |'
- en: '| `@ComponentScan` | Enables the Spring Boot component scan to find all components
    from your application. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `@ComponentScan` | 启用Spring Boot组件扫描，以查找应用程序中的所有组件。 |'
- en: '| `@Configure` | Defines the class that can be used as a source of bean definitions.
    |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `@Configure` | 定义可用作bean定义来源的类。 |'
- en: 'The following code shows the Spring Boot application''s `main` class:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码显示了Spring Boot应用程序的`main`类：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The execution of the application starts from the `main` method, as in standard
    Java applications.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序的执行从`main`方法开始，就像标准的Java应用程序一样。
- en: It is recommended to locate the `main` application class in the root package
    above other classes. Quite a common reason for an application to not work correctly
    is due to a situation where Spring Boot can't find some critical classes.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 建议将`main`应用程序类放在其他类上方的根包中。应用程序无法正确工作的一个常见原因是Spring Boot无法找到一些关键类。
- en: Spring Boot development tools
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Spring Boot开发工具
- en: 'Spring Boot development tools make the application development process easier.
    Projects will include the developer tools if the following dependency is added
    to the Maven `pom.xml` file:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Boot开发工具使应用程序开发过程更加轻松。如果将以下依赖项添加到Maven的`pom.xml`文件中，项目将包括开发人员工具：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Development tools are disabled when you create a fully-packed production version
    of your application.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 创建应用程序的完全打包生产版本时，开发工具将被禁用。
- en: 'The application is automatically restarted when you make changes to your project
    classpath files. You can test that by adding one comment line to your `main` class.
    After saving the file, you can see in the console that the application has restarted:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当您对项目类路径文件进行更改时，应用程序会自动重新启动。您可以通过向`main`类添加一行注释来测试。保存文件后，您可以在控制台中看到应用程序已重新启动：
- en: '[PRE5]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Logs and problem solving
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志和问题解决
- en: 'Spring Boot starter packages provide a logback, that we can use for logging
    without any configuration. The following sample code shows how to use logging:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Boot starter包提供了一个logback，我们可以在没有任何配置的情况下用于日志记录。以下示例代码显示了如何使用日志记录：
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Logging messages can be seen in the console after you run the project:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 运行项目后，可以在控制台中看到日志消息：
- en: '![](img/c49a8750-9889-42a3-aec9-3d812ac16808.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c49a8750-9889-42a3-aec9-3d812ac16808.png)'
- en: 'There are seven different levels for logging—`TRACE`, `DEBUG`, `INFO`, `WARN`,
    `ERROR`, `FATAL`, and `OFF`. You can configure the level of logging in your Spring
    Boot `application.properties` file. The file can be found in the `resources` folder
    inside your project:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录有七个不同的级别——`TRACE`，`DEBUG`，`INFO`，`WARN`，`ERROR`，`FATAL`和`OFF`。您可以在Spring
    Boot的`application.properties`文件中配置日志记录级别。该文件可以在项目内的`resources`文件夹中找到：
- en: '![](img/2b2cf448-8526-4f57-a0bb-413aaba12765.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2b2cf448-8526-4f57-a0bb-413aaba12765.png)'
- en: 'If we set the logging level to `INFO`, we can see log messages from levels
    that are under `INFO` (`INFO`, `WARN`, `ERROR`, and `FATAL`). In the following
    example, we set the log level for the root, but you can also set it at the package
    level:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将日志级别设置为“INFO”，我们可以看到低于“INFO”级别（“INFO”，“WARN”，“ERROR”和“FATAL”）的日志消息。在下面的示例中，我们设置了根日志级别，但您也可以在包级别设置它：
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, when you run the project, you can''t see the `TRACE` and `DEBUG` messages
    anymore. That might be a good setting for a production version of your application:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当您运行项目时，您将不再看到“TRACE”和“DEBUG”消息。这可能是应用程序生产版本的良好设置：
- en: '![](img/25e9f9d4-4fdc-4c88-91c4-d02ceb95d964.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25e9f9d4-4fdc-4c88-91c4-d02ceb95d964.png)'
- en: 'Spring Boot is using Apache Tomcat ([http://tomcat.apache.org/](http://tomcat.apache.org/))
    as an application server, by default. As a default, Tomcat is running in port
    `8080`. You can change the port in the `application.properties` file. The following
    setting will start Tomcat in port `8081`:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Boot默认使用Apache Tomcat ([http://tomcat.apache.org/](http://tomcat.apache.org/))作为应用服务器。默认情况下，Tomcat在端口`8080`上运行。您可以在`application.properties`文件中更改端口。以下设置将在端口`8081`上启动Tomcat：
- en: '[PRE8]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If the port is occupied, the application won''t start and you will see the
    following message in the console:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果端口被占用，应用程序将无法启动，并且您将在控制台中看到以下消息：
- en: '![](img/797452b6-c4f3-4cfe-83b9-82742f1aa197.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/797452b6-c4f3-4cfe-83b9-82742f1aa197.png)'
- en: You have to stop the process that is listening on port `8080` or use another
    port in your Spring Boot application.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须停止监听端口`8080`的进程，或在Spring Boot应用程序中使用另一个端口。
- en: Installing MariaDB
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装MariaDB
- en: In the next chapter, we are going to use MariaDB, and therefore we will install
    it locally to your computer. MariaDB is a widely used open source relational database.
    MariaDB is available for Windows and Linux, and you can download the latest stable
    version from [https://downloads.mariadb.org/](https://downloads.mariadb.org/).
    MariaDB is developed under a GNU GPL 2 license.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用MariaDB，因此我们将在本地计算机上安装它。MariaDB是一个广泛使用的开源关系数据库。MariaDB适用于Windows和Linux，您可以从[https://downloads.mariadb.org/](https://downloads.mariadb.org/)下载最新稳定版本。MariaDB是在GNU
    GPL 2许可下开发的。
- en: 'For Windows, there is the MSI installer, that we will use here. Download the
    installer and execute it. Install all features from the installation wizard:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows，有MSI安装程序，我们将在这里使用。下载安装程序并执行它。从安装向导中安装所有功能：
- en: '![](img/9b31bc8c-0924-4877-b114-d02e221657e2.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9b31bc8c-0924-4877-b114-d02e221657e2.png)'
- en: 'In the next step, you should give the password for the root user. This password
    is needed in the next chapter, when we connect to the database with our application:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，您应该为root用户提供密码。在下一章中，我们连接到数据库时需要此密码：
- en: '![](img/4fae938c-a3aa-4875-b313-01d137018b5b.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4fae938c-a3aa-4875-b313-01d137018b5b.png)'
- en: 'In the next phase, we can use the default settings:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一阶段，我们可以使用默认设置：
- en: '![](img/84b2f956-de37-4aad-8021-029d9fc1e576.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84b2f956-de37-4aad-8021-029d9fc1e576.png)'
- en: 'Now the installation starts, and MariaDB will be installed to your local computer.
    The installation wizard will install **HeidiSQL** for us. This is a graphically
    easy-to-use database client. We will use this to add a new database and make queries
    to our database. You can also use the Command Prompt included in the installation
    package:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在安装开始了，MariaDB将安装到您的本地计算机上。安装向导将为我们安装**HeidiSQL**。这是一个图形化易于使用的数据库客户端。我们将使用它来添加新数据库并对我们的数据库进行查询。您还可以使用安装包中包含的命令提示符：
- en: '![](img/ebd75046-230f-4433-8b68-1a6b3975b4ed.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ebd75046-230f-4433-8b68-1a6b3975b4ed.png)'
- en: Summary
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we installed the tools that are needed for backend development
    with Spring Boot. For Java development, we used Eclipse IDE, that is a widely
    used programming IDE. We created a new Spring Boot project by using the Spring
    Initializr page. After creating the project, it was imported to Eclipse and, finally,
    executed. We also covered how to solve common problems with Spring Boot and how
    to find important error and log messages. Finally, we installed a MariaDB database,
    that we are going to use in the next chapter.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们安装了使用Spring Boot进行后端开发所需的工具。对于Java开发，我们使用了Eclipse IDE，这是一个广泛使用的编程IDE。我们通过使用Spring
    Initializr页面创建了一个新的Spring Boot项目。创建项目后，它被导入到Eclipse中，并最终执行。我们还介绍了如何解决Spring Boot的常见问题以及如何查找重要的错误和日志消息。最后，我们安装了一个MariaDB数据库，我们将在下一章中使用。
- en: Questions
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is Spring Boot?
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Spring Boot是什么？
- en: What is Eclipse IDE?
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Eclipse IDE是什么？
- en: What is Maven?
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Maven是什么？
- en: How do we create a Spring Boot project?
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何创建一个Spring Boot项目？
- en: How do we run a Spring Boot project?
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何运行Spring Boot项目？
- en: How do we use logging with Spring Boot?
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何在Spring Boot中使用日志记录？
- en: How do we find error and log messages in Eclipse?
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何在Eclipse中查找错误和日志消息？
- en: Further reading
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Packt has other great resources for learning about Spring Boot:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Packt还有其他很好的资源可供学习Spring Boot：
- en: '[https://www.packtpub.com/application-development/learning-spring-boot-20-second-edition](https://www.packtpub.com/application-development/learning-spring-boot-20-second-edition)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.packtpub.com/application-development/learning-spring-boot-20-second-edition](https://www.packtpub.com/application-development/learning-spring-boot-20-second-edition)'
- en: '[https://www.packtpub.com/web-development/spring-boot-getting-started-integrated-course](https://www.packtpub.com/web-development/spring-boot-getting-started-integrated-course)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.packtpub.com/web-development/spring-boot-getting-started-integrated-course](https://www.packtpub.com/web-development/spring-boot-getting-started-integrated-course)'
