- en: Chapter 6. Troubleshooting Performance and Reliability Issues
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。性能和可靠性问题的故障排除
- en: This chapter focuses on troubleshooting common performance and reliability issues
    for Elasticsearch using case studies with real-world examples.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章通过使用真实世界案例研究的案例研究，重点介绍Elasticsearch常见的性能和可靠性问题的故障排除。
- en: 'This chapter will help answer the following questions:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将帮助回答以下问题：
- en: How do I configure my Elasticsearch cluster to optimize performance?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我该如何配置我的Elasticsearch集群以优化性能？
- en: How do I prevent `OutOfMemoryError` exceptions?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我该如何防止`OutOfMemoryError`异常？
- en: How does my data-indexing strategy affect cluster resources?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的数据索引策略如何影响集群资源？
- en: Why are my queries running slow?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么我的查询运行得慢？
- en: How can I keep query performance strong when indexing a large amount of data?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在索引大量数据时，我该如何保持查询性能？
- en: How can I configure indices to use less disk space?
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我该如何配置索引以使用更少的磁盘空间？
- en: System configuration
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统配置
- en: 'Elasticsearch configuration may lead to a number of performance and reliability
    issues, as mentioned in [Chapter 2](ch02.html "Chapter 2. Installation and the
    Requirements for Elasticsearch"), *Installation and the Requirements for Elasticsearch*.
    A quick reminder that the most important configuration changes to make to your
    cluster are as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第2章](ch02.html "第2章。Elasticsearch的安装和需求")所述，Elasticsearch配置可能导致许多性能和可靠性问题。快速提醒：您需要为您的集群进行的最重要的配置更改如下：
- en: Ensuring that the Elasticsearch heap size (`ES_HEAP`) is set to 1/2 of available
    system memory, but does not exceed 31 GB. Set this value in `/etc/defaults/elasticsearch`
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保Elasticsearch堆大小（`ES_HEAP`）设置为可用系统内存的1/2，但不超过31 GB。请在`/etc/defaults/elasticsearch`中设置此值。
- en: Disabling memory swapping
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用内存交换。
- en: 'Locking the Elasticsearch address space into memory by setting `bootstrap.mlockall:
    true` in `elasticsearch.yml`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '通过在`elasticsearch.yml`中设置`bootstrap.mlockall: true`将Elasticsearch地址空间锁定到内存中。'
- en: Refer to [Chapter 2](ch02.html "Chapter 2. Installation and the Requirements
    for Elasticsearch"), *Installation and the Requirements for Elasticsearch*, for
    more detailed instructions on how to set these values.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[第2章](ch02.html "第2章。Elasticsearch的安装和需求")，*Elasticsearch的安装和需求*，以获取如何设置这些值的更详细说明。
- en: The fielddata cache
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字段数据缓存
- en: A poorly configured Elasticsearch fielddata cache is often the reason for `OutOfMemoryError`
    exceptions.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 配置不当的Elasticsearch字段数据缓存通常是`OutOfMemoryError`异常的原因。
- en: When running a `sort` or `aggregation` (or `facet`) query, Elasticsearch fills
    the cache with all distinct field values from the query. This allows similar,
    subsequent queries to execute more quickly. However, Elasticsearch doesn't put
    an upper bound on the cache size by default; therefore, the data is not automatically
    evicted. If the cache causes the total JVM memory to fill up beyond the `ES_HEAP`
    size, the node will throw an `OutOfMemoryError` exception and will require an
    Elasticsearch restart.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行`sort`或`aggregation`（或`facet`）查询时，Elasticsearch会使用查询中所有不同的字段值填充缓存。这允许类似的后续查询执行得更快。然而，默认情况下，Elasticsearch不会对缓存大小设置上限；因此，数据不会自动被驱逐。如果缓存导致总JVM内存填满超过`ES_HEAP`大小，节点将抛出`OutOfMemoryError`异常，并需要重新启动Elasticsearch。
- en: 'To limit the fielddata cache size, set the `indices.fielddata.cache.size` value:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要限制字段数据缓存大小，请设置`indices.fielddata.cache.size`值：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will limit the fielddata cache size to `30%` of the available JVM heap
    space.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这将限制字段数据缓存大小为可用JVM堆空间的`30%`。
- en: You can set this value to a fixed value as well. For example, setting it to
    `10gb` will limit the cache size to no more than 10 gigabytes. The value that
    you choose will depend on the cluster and use case, but if you see an `OutOfMemoryError`
    caused by the fielddata cache overflowing, it's a good idea to set this field.
    The downside to limiting the fielddata cache is that it may affect query performance
    if a query needs to repopulate evicted fielddata cache items when the cache fills
    up.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以将此值设置为固定值。例如，将其设置为`10gb`将限制缓存大小不超过10千兆字节。您选择的价值将取决于集群和用例，但如果您看到由字段数据缓存溢出引起的`OutOfMemoryError`，设置此字段是个好主意。限制字段数据缓存的缺点是，如果查询需要重新填充被驱逐的字段数据缓存项，这可能会影响查询性能。
- en: 'If you see `OutOfMemoryError` logged to `/var/log/elasticsearch/`, you can
    check whether the fielddata cache is the problem by checking in Bigdesk or Marvel:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在`/var/log/elasticsearch/`中看到`OutOfMemoryError`日志，您可以通过检查Bigdesk或Marvel来确认字段数据缓存是否是问题。
- en: '![The fielddata cache](img/B03798_06_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![字段数据缓存](img/B03798_06_01.jpg)'
- en: The fielddata cache in Bigdesk
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Bigdesk中的字段数据缓存
- en: 'The fielddata cache from the Marvel Kibana dashboard looks like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Marvel Kibana仪表板中的字段数据缓存看起来像这样：
- en: '![The fielddata cache](img/B03798_06_02.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![字段数据缓存](img/B03798_06_02.jpg)'
- en: The fielddata cache in Marvel
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Marvel中的字段数据缓存
- en: Tip
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Do not change the `indices.fielddata.cache.expire` setting. This is a legacy
    setting to expire old cache values, and it does not provide any increase in performance.
    Elasticsearch developers stated that it will be deprecated in a future release.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 不要更改`indices.fielddata.cache.expire`设置。这是一个过时的设置，用于使旧缓存值过期，并且它不会提供任何性能提升。Elasticsearch开发人员表示，它将在未来的版本中弃用。
- en: You can also reduce the fielddata cache footprint by optimizing queries that
    use the cache.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过优化使用缓存的查询来减少字段数据缓存的影响。
- en: For example, in our Twitter data, we have a `timestamp_ms` field, which stores
    the tweet's timestamp at millisecond precision. Because there are `86,400,000`
    milliseconds in a day, if we collected `5,000,000` Tweets in 24 hours, it's likely
    that the majority of these tweets will have a unique timestamp. If we run a query
    that sorts on this field, it will fill up the fielddata cache with as many as
    `5,000,000` distinct timestamps. This will quickly fill up the cache.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在我们的Twitter数据中，我们有一个`timestamp_ms`字段，它以毫秒精度存储推文的日期时间戳。因为一天中有`86,400,000`毫秒，如果我们收集了24小时内的`5,000,000`条推文，那么其中大部分推文很可能具有唯一的时间戳。如果我们运行一个按此字段排序的查询，它将用多达`5,000,000`个不同的时间戳填满字段数据缓存。这将迅速填满缓存。
- en: A more functional approach would be to store the timestamp field at either second
    or minute precision. Using second precision, the fielddata cache will be reduced
    from holding `5,000,000` unique timestamps to approximately `86,400` timestamps.
    Using minute precision will reduce it to only `1,440` unique timestamps.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 更功能性的方法是将时间戳字段存储在秒或分钟精度。使用秒精度，字段数据缓存将减少从存储`5,000,000`个唯一时间戳到大约`86,400`个时间戳。使用分钟精度将减少到只有`1,440`个唯一时间戳。
- en: Even after limiting the fielddata cache size to a fixed amount, you may still
    face `OutOfMemoryError` exceptions related to the field cache. This may be a result
    of a single query loading the fielddata cache with more data than it has been
    allocated.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 即使将字段数据缓存大小限制为固定值，你也可能仍然会遇到与字段缓存相关的`OutOfMemoryError`异常。这可能是由于单个查询加载的字段数据缓存比分配的更多数据所致。
- en: This may happen if, for example, the fielddata cache is set to 2 GB, but we
    run a single query that tries to load 2.5 GB of data into the cache. This issue
    can be fixed by editing the fielddata circuit breaker in `elasticsearch.yml`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果字段数据缓存设置为2 GB，但我们运行一个尝试将2.5 GB数据加载到缓存中的单个查询，可能会发生这种情况。可以通过编辑`elasticsearch.yml`中的字段数据断路器来解决这个问题。
- en: 'The fielddata circuit breaker is set by default to `60%` of the total JVM heap
    size:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 字段数据断路器默认设置为总JVM堆大小的`60%`：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This way, if a single query's fielddata is more than `60%` of the heap, the
    circuit breaker will trip and cause the query to throw an exception rather than
    causing an `OutOfMemoryError`. Using a lower percentage than the default `60%`
    may help in solving `OutOfMemoryError` exceptions even when the fielddata cache
    is limited in size.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，如果单个查询的字段数据超过堆的`60%`，断路器将会触发，导致查询抛出异常，而不是引发`OutOfMemoryError`。使用低于默认`60%`的百分比可能有助于解决即使字段数据缓存大小有限时出现的`OutOfMemoryError`异常。
- en: Analyzing queries
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析查询
- en: Analyzing slow queries and improving their performance can be very challenging.
    This section examines how to look for the root cause of poor query performance,
    and it offers some different approaches to finding a solution.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 分析慢查询并提高其性能可能非常具有挑战性。本节探讨了如何寻找查询性能不佳的根本原因，并提供了一些不同的解决方案。
- en: Slow log
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 慢查询日志
- en: 'If you notice poor query performance, start with the slow log. To enable the
    slow log, edit `elasticsearch.yml` and add these configuration options to all
    nodes on the cluster:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你注意到查询性能不佳，请从慢查询日志开始。要启用慢查询日志，请编辑`elasticsearch.yml`文件，并将以下配置选项添加到集群中的所有节点：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After updating `elasticsearch.yml` on all nodes, restart the cluster.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有节点上更新`elasticsearch.yml`后，重启集群。
- en: 'This configuration enables the slow log for three operations:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此配置为三个操作启用了慢查询日志：
- en: '**Query operations**: This is when Elasticsearch is performing the actual search
    for documents matching the query'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查询操作**：这是Elasticsearch正在执行实际搜索以匹配查询的文档时的情况'
- en: '**Fetch operations**: This is when Elasticsearch fetches relevant documents
    from the index after finding documents of interest'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**获取操作**：这是在Elasticsearch找到感兴趣的文档后从索引中获取相关文档时的情况'
- en: '**Index operations**: This is when indexing new documents in Elasticsearch'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**索引操作**：这是在Elasticsearch中索引新文档时的情况'
- en: 'We''ve also set a threshold level for each point: `warn`, `info`, `debug`,
    and `trace`. These levels identify the point at which Elasticsearch will write
    to the slow log. For example, if a query takes six seconds, based on our preceding
    configuration, the query will be logged at an `info` level. These levels make
    it possible to search for queries of a specific threshold.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为每个点设置了一个阈值级别：`warn`、`info`、`debug`和`trace`。这些级别标识了Elasticsearch将写入慢日志的点。例如，如果一个查询耗时六秒，根据我们之前的配置，该查询将以`info`级别记录。这些级别使得搜索特定阈值的查询成为可能。
- en: 'Here''s an example of searching the slow log for all queries that took longer
    than eight seconds, which were logged at the `warn` level:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个搜索慢日志中所有耗时超过八秒且以`warn`级别记录的查询的示例：
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Slow log](img/B03798_06_03.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![慢日志](img/B03798_06_03.jpg)'
- en: Elasticsearch slow log for actions that took longer than eight seconds
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 耗时超过八秒的Elasticsearch慢日志
- en: The next section covers some additional approaches to improve query performance.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个部分将介绍一些额外的改进查询性能的方法。
- en: Improving query performance
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高查询性能
- en: This section highlights common reasons behind certain slow queries on Elasticsearch,
    and offers instruction to improve performance.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 本节突出了Elasticsearch上某些查询缓慢的常见原因，并提供了提高性能的指导。
- en: High-cardinality fields
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高基数字段
- en: As previously mentioned, running aggregation or sorts against high-cardinality
    fields (for example, dates precise to the millisecond) can fill up the fielddata
    cache which leads to `OutOfMemoryError` exceptions. However, even without these
    errors, running aggregations and sorts can be detrimental to performance. When
    it comes to dates, it's generally a good idea to store and use less precise dates
    in order to speed up query execution time.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，对高基数字段（例如，精确到毫秒的日期）运行聚合或排序可能会填满fielddata缓存，导致`OutOfMemoryError`异常。然而，即使没有这些错误，运行聚合和排序也可能对性能产生不利影响。当涉及到日期时，通常存储和使用不太精确的日期以加快查询执行时间是一个好主意。
- en: Querying smaller indices
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询较小的索引
- en: As Elasticsearch indices grow larger, query performance will suffer. Another
    way to improve performance is to run queries against small indices. You can do
    this by storing our data in several smaller indices instead of one large one.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Elasticsearch索引的增大，查询性能将受到影响。提高性能的另一种方法是针对小索引运行查询。你可以通过将我们的数据存储在几个较小的索引中而不是一个大的索引中来实现这一点。
- en: For example, with Twitter data, you can change the ingestion process to create
    a new index every day to store tweets. This way, we only query a subset of the
    total indices when running time-bounded queries.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于Twitter数据，你可以更改摄取过程，每天创建一个新的索引来存储推文。这样，在运行时间限制查询时，我们只查询总索引的一个子集。
- en: Index templates are helpful in this case because they automatically apply a
    data mapping to new indices that follow a certain naming convention.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，索引模板很有帮助，因为它们会自动将数据映射应用到遵循特定命名约定的新索引上。
- en: 'Let''s create a new index template for our daily Twitter indices using the
    `twitter-YYmmdd` naming convention. Using this template, the `twitter-20160101`
    index will hold all tweets from January 1, 2016\. Create this template with the
    following `cur` `l` command:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`twitter-YYmmdd`命名约定为我们的日常Twitter索引创建一个新的索引模板。使用此模板，`twitter-20160101`索引将包含2016年1月1日所有的推文。使用以下`cur`
    `l`命令创建此模板：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note the use of the `*` asterisk wildcard in the `twitter-*` template name.
    This wildcard that matches 0 or more characters, so it will match index names,
    such as `twitter-20160101`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 注意`twitter-*`模板名称中使用的`*`星号通配符。这个通配符匹配0个或多个字符，因此它将匹配索引名称，例如`twitter-20160101`。
- en: We can also create an index alias that allows us to query many or all of the
    indices at once.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以创建一个索引别名，允许我们一次性查询多个或所有索引。
- en: 'The following example creates an alias using the `*` wildcard to query all
    available Twitter data:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例使用`*`通配符创建一个别名，以查询所有可用的Twitter数据：
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Play around with different index sizes to find the best fit, depending on your
    data and setup. It's important to test how they affect your performance before
    committing to a particular index size because changing the indexing strategy later
    will involve re-indexing all of your data.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 通过尝试不同的索引大小来找到最适合您数据和设置的方案。在确定特定的索引大小之前，测试它们对性能的影响是很重要的，因为稍后更改索引策略将涉及重新索引所有数据。
- en: If you have a five-node cluster and collect 10,000 records per day, it makes
    sense to create new indices monthly versus daily to keep the number of indices
    down and to ensure that each individual index isn't too small. However, it's important
    to test all assumptions before committing to an indexing strategy. Use a tool
    such as Logstash and Kibana to monitor average query performance using different
    index sizes before making this decision.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个五节点集群并且每天收集 10,000 条记录，那么按月而不是按日创建新索引是有意义的，这样可以减少索引数量并确保每个单独的索引不会太小。然而，在确定索引策略之前测试所有假设是很重要的。在做出这个决定之前，使用
    Logstash 和 Kibana 等工具监控不同索引大小下的平均查询性能。
- en: Cold indices
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 冷索引
- en: Sometimes, an Elasticsearch query is slow the first few times it runs, but it
    speeds up considerably afterwards. The lag occurs because the index is "cold"
    and the Elasticsearch caches are not populated with relevant data. After running
    the query a few times, Elasticsearch fills up the fielddata cache and other caches
    based on the query criteria. Subsequent queries with similar criteria will take
    advantage of these cached values and run faster as a result.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，Elasticsearch 查询在第一次运行时速度较慢，但之后会显著加快。延迟发生是因为索引是“冷”的，并且 Elasticsearch 缓存中没有填充相关数据。运行查询几次后，Elasticsearch
    会根据查询标准填充 fielddata 缓存和其他缓存。具有相似标准的后续查询将利用这些缓存值并因此运行得更快。
- en: Elasticsearch "warmers" and "eager fielddata loading" solve the problem of cold
    indices by ensuring that the first time a user runs a query, required data for
    this query is already loaded in memory.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Elasticsearch 的“预热器”和“急切字段数据加载”通过确保用户第一次运行查询时，所需数据已经加载到内存中，从而解决了冷索引的问题。
- en: 'Indices can be cold for a variety of reasons:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 索引可能因为多种原因而变冷：
- en: New data is indexed
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新数据被索引
- en: Automatic shard balancing and movement
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动分片平衡和移动
- en: An Elasticsearch node restarted
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elasticsearch 节点重启
- en: The cache was manually cleared
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存已被手动清除
- en: 'To demonstrate the performance gains of a slow aggregation query, use the following
    command:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要展示慢聚合查询的性能提升，请使用以下命令：
- en: '[PRE6]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The results of this are as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE7]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If we run the query a few more times, we''ll start to see results like the
    following:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们再运行几次查询，我们将开始看到以下结果：
- en: '[PRE8]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This query took `5.8` seconds to finish at first, but after a few runs, it
    only took `0.529` seconds to complete. The initial slow query can be avoided and
    the performance can become more predictable after adding common queries to the
    Elasticsearch warmer. We''ll demonstrate this by clearing the index cache again,
    then adding our query to the `twitter` index with the Elasticsearch Warmers API:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这个查询最初花费了 `5.8` 秒来完成，但经过几次运行后，它只用了 `0.529` 秒。通过将常见查询添加到 Elasticsearch 预热器中，可以避免初始的慢查询，并且性能可以变得更加可预测。我们将通过再次清除索引缓存，然后使用
    Elasticsearch 预热器 API 将我们的查询添加到 `twitter` 索引中，来展示这一点：
- en: '[PRE9]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We can verify that the warmer query made it into our index by checking the Kopf
    **REGISTERED WARMERS** page at `http://elasticsearch-node-01:9200/_plugin/kopf`
    and navigating to **more** | **warmers**.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过检查 Kopf 的 `http://elasticsearch-node-01:9200/_plugin/kopf` 上的 **REGISTERED
    WARMERS** 页面并导航到 **更多** | **预热器** 来验证预热查询是否已进入我们的索引。
- en: 'This screenshot shows the warmer query on the Kopf warmers page:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这张截图显示了 Kopf 预热器页面上的预热查询：
- en: '![Cold indices](img/B03798_06_04.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![冷索引](img/B03798_06_04.jpg)'
- en: Viewing query warmers in Kopf
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Kopf 中查看查询预热器
- en: 'The warmer will take effect after restarting Elasticsearch. Run the query again
    to see a performance increase:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 预热器将在重启 Elasticsearch 后生效。再次运行查询以查看性能提升：
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This led to more than a 10x speedup, from `5.8` seconds to `0.41` seconds. We
    saw a similar increase after manually running the query a few times to populate
    the fielddata cache with data from the `text` field.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了超过 10 倍的速度提升，从 `5.8` 秒到 `0.41` 秒。我们在手动运行查询几次以填充来自 `text` 字段的数据的 fielddata
    缓存后，看到了类似的增长。
- en: 'We can also enable eager fielddata loading for particular Elasticsearch fields:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以为特定的 Elasticsearch 字段启用急切字段数据加载：
- en: '[PRE11]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: If there are only a few distinct values for our fielddata cache, set the `loading`
    value to `eager_global_ordinals` for more memory optimization. After enabling
    either warming queries or eager fielddata loading, verify that the fielddata (and
    filter cache, in the case of warming queries) get populated by checking Marvel's
    node or Index statistics page or Bigdesk's fielddata chart.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的fielddata缓存只有少数几个不同的值，将`loading`值设置为`eager_global_ordinals`以进行更多的内存优化。在启用预热查询或急切fielddata加载后，通过检查Marvel的节点或索引统计页面或Bigdesk的fielddata图表来验证fielddata（在预热查询的情况下还包括过滤器缓存）是否已填充。
- en: Note
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can read more about warmers and eager field data loading at [https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-warmers.htmlload-fielddata.html](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-warmers.html)
    and [https://www.elastic.co/guide/en/elasticsearch/guide/current/preload-fielddata.html](https://www.elastic.co/guide/en/elasticsearch/guide/current/preload-fielddata.html).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-warmers.htmlload-fielddata.html](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-warmers.html)和[https://www.elastic.co/guide/en/elasticsearch/guide/current/preload-fielddata.html](https://www.elastic.co/guide/en/elasticsearch/guide/current/preload-fielddata.html)了解更多关于预热器和急切字段数据加载的信息。
- en: The shard query cache
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分片查询缓存
- en: The shard query cache saves results for specific queries. Unlike the fielddata
    cache where any query that needs fielddata will speed up, with cached queries,
    we have to run the exact same query more than once to have a cache hit. Additionally,
    the entire query result is stored with the query cache. This is different from
    the fielddata cache, in which only part of the query result is stored. This means
    that the query cache will return results extremely quickly.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 分片查询缓存为特定查询保存结果。与fielddata缓存不同，任何需要fielddata的查询都会加速，使用缓存的查询，我们必须运行完全相同的查询多次才能产生缓存命中。此外，整个查询结果都存储在查询缓存中。这与fielddata缓存不同，其中只存储查询结果的一部分。这意味着查询缓存将返回极快的结果。
- en: The shard query cache currently only stores hit counts, aggregations, and search
    suggestions. It does not store actual search results or hits. Moreover, the `search_type=count`
    query parameter is required when running cached queries. This may be updated in
    a future Elasticsearch release.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 分片查询缓存目前仅存储命中次数、聚合和搜索建议。它不存储实际的搜索结果或命中。此外，当运行缓存的查询时，需要`search_type=count`查询参数。这可能在未来的Elasticsearch版本中更新。
- en: 'The query cache defaults to `1%` of the JVM heap, but it can be changed in
    `elasticsearch.yml`:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 查询缓存默认为JVM堆的`1%`，但可以在`elasticsearch.yml`中更改：
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The cache key is the JSON body of a search request. Even if a query is logically
    identical to a query already in the cache, if there is a difference in whitespace
    or key order, the cache will store these as two separate entries.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存键是搜索请求的JSON正文。即使查询在逻辑上与缓存中已有的查询相同，如果存在空白或键顺序的差异，缓存也会将这些存储为两个不同的条目。
- en: 'The shard query cache is disabled by default. To enable it on an existing index,
    run the following:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下禁用分片查询缓存。要在现有索引上启用它，请运行以下命令：
- en: '[PRE13]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Or when creating a new index, add the same parameter to the `settings` section:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 或者当创建一个新的索引时，将相同的参数添加到`settings`部分：
- en: '[PRE14]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: When using the query cache, you will always receive the same up-to-date query
    results that you would get when running noncached queries. This is because cache
    entries are invalidated automatically when new data is loaded into a shard once
    the shard refreshes.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用查询缓存时，你将始终收到与运行非缓存的查询时相同的最新查询结果。这是因为当分片刷新并加载新数据时，缓存条目会自动失效。
- en: 'Run the text aggregation query again a few times, this time using the query
    cache:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行文本聚合查询几次，这次使用查询缓存：
- en: '[PRE15]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'After a few runs of this query, performance results like this should appear:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行几次此查询后，应出现如下性能结果：
- en: '[PRE16]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `4ms` response is an improvement from the `418ms` response using just the
    fielddata cache, and a huge improvement from the original `5.8` seconds against
    a cold Elasticsearch index.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`4ms`的响应时间比仅使用fielddata缓存的`418ms`响应时间有所改进，并且与原始的`5.8`秒相比，对冷Elasticsearch索引的响应时间有巨大的改进。'
- en: Note
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Read more about the shard query cache at [https://www.elastic.co/guide/en/elasticsearch/reference/current/shard-request-cache.html](https://www.elastic.co/guide/en/elasticsearch/reference/current/shard-request-cache.html).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://www.elastic.co/guide/en/elasticsearch/reference/current/shard-request-cache.html](https://www.elastic.co/guide/en/elasticsearch/reference/current/shard-request-cache.html)了解更多关于分片查询缓存的信息。
- en: Script queries
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脚本查询
- en: Script queries are a powerful way to query an index by running arbitrary code
    to manipulate or filter each hit the query comes across. However, they are also
    very costly, and they can hurt performance in large indices.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本查询是通过运行任意代码来操作或过滤查询遇到的每个命中项，从而查询索引的一种强大方式。然而，它们也非常昂贵，并且可能会损害大型索引的性能。
- en: Whenever possible, it is best to avoid using scripts in Elasticsearch queries
    that need to return in a timely fashion. If you find yourself using them, try
    to think of ways to restructure your data to make them no longer necessary.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在可能的情况下，最好避免在需要及时返回结果的Elasticsearch查询中使用脚本。如果你发现自己正在使用它们，尝试思考如何重新结构你的数据，使它们不再必要。
- en: Note
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you do use scripts in your application, make sure that you access source
    document fields with `doc["text"]` instead of `_source.text`; the latter will
    access the record on disk, while the former accesses it from memory.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在应用程序中使用脚本，请确保使用 `doc["text"]` 而不是 `_source.text` 来访问源文档字段；后者将访问磁盘上的记录，而前者从内存中访问。
- en: Testing meticulously
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 仔细测试
- en: It's important to meticulously test each optimization strategy individually
    to see which is most effective. If you experience a slow query, try to recreate
    the problem on a smaller scale and test different optimizations until you find
    one that works. Make sure that you only test one change at a time in configuration
    or in query parameters. Also, run testing scripts for a long enough time period
    to account for normal deviation in performance due to garbage collection, cache
    evictions, and so on.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细测试每个优化策略非常重要，以了解哪种策略最有效。如果你遇到慢查询，尝试在小规模上重现问题并测试不同的优化，直到找到一种有效的方法。确保你一次只测试配置或查询参数中的一个更改。此外，运行测试脚本足够长的时间，以考虑到垃圾收集、缓存驱逐等因素引起的性能的正常波动。
- en: This approach to testing may feel tedious, but it will ultimately provide greater
    insight into the cluster, and it will help avoid making unnecessary changes to
    the system in the long run.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这种测试方法可能感觉繁琐，但它最终将提供对集群的更深入了解，并有助于长期避免对系统进行不必要的更改。
- en: System and data architecting
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统和数据架构
- en: This section covers strategies to improve overall system performance, data indexing
    performance, and to maximize storage space.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 本节涵盖了提高整体系统性能、数据索引性能以及最大化存储空间的策略。
- en: Hot-Warm architecture
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 热温架构
- en: For time-series data, including Twitter and other social media data as well
    as data from Logstash, Elastic.co recommends setting up what they have dubbed
    a **Hot-Warm** architecture. This setup puts nodes into three groups.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 对于时间序列数据，包括Twitter和其他社交媒体数据以及来自Logstash的数据，Elastic.co建议设置他们称之为**热-温**架构。这种设置将节点分为三组。
- en: Master nodes
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主节点
- en: Ideally, dedicate three nodes as master nodes that do not store data or fulfill
    queries. These machines don't need to be very powerful; they just perform cluster
    management operations.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，分配三个节点作为主节点，这些节点不存储数据或执行查询。这些机器不需要非常强大；它们只是执行集群管理操作。
- en: Hot nodes
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 热节点
- en: Hot nodes hold the most recent data indices. All data writes are directed at
    these machines, and they are likely the most-frequently queried nodes. Elastic.co
    recommends equipping hot nodes with solid state drives (SSDs) for better I/O performance.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 热节点持有最新的数据索引。所有数据写入都指向这些机器，它们可能是查询最频繁的节点。Elastic.co建议为热节点配备固态硬盘（SSD）以获得更好的I/O性能。
- en: Warm nodes
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 热节点
- en: In this architecture, data is not being written to warm nodes; instead, they
    contain historical time-based data. For example, if we create a new Twitter index
    every day, we can move an index from "Hot" to "Warm" after seven days.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种架构中，数据不会被写入热节点；相反，它们包含基于历史时间的数据。例如，如果我们每天创建一个新的Twitter索引，我们可以在七天后将索引从“热”移动到“温”。
- en: 'To configure a Hot node, add the following to `elasticsearch.yml`:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置热节点，请将以下内容添加到 `elasticsearch.yml`：
- en: '[PRE17]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Likewise, for a Warm node, add the following:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，对于温节点，添加以下内容：
- en: '[PRE18]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To ensure that newly-created indices are allocated to the Hot nodes, configure
    the index on creation with the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 要确保新创建的索引分配给热节点，请在创建索引时使用以下配置：
- en: '[PRE19]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'After seven days to move it to the Warm nodes, use the following:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在七天后将它移动到温节点后，使用以下内容：
- en: '[PRE20]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Read more about the "Hot-Warm" architecture at [https://www.elastic.co/blog/hot-warm-architecture](https://www.elastic.co/blog/hot-warm-architecture).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://www.elastic.co/blog/hot-warm-architecture](https://www.elastic.co/blog/hot-warm-architecture)上了解更多关于“热-温”架构的信息。
- en: Reducing disk size
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 减少磁盘大小
- en: This section covers how to save disk space on your cluster.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了如何在你的集群上节省磁盘空间。
- en: Compression
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 压缩
- en: In Elasticsearch 2.0 and higher, you can increase the compression level for
    an index to reduce its footprint on disk. Unfortunately, this also makes indexing
    new data slower.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在Elasticsearch 2.0及以上版本中，你可以提高索引的压缩级别以减少其在磁盘上的占用。遗憾的是，这也使得索引新数据变得更慢。
- en: For use cases such as the preceding Hot-Warm architecture, it makes sense to
    increase the compression level on Warm nodes because they are less taxed than
    the Hot nodes.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 对于如前所述的Hot-Warm架构用例，在Warm节点上提高压缩级别是有意义的，因为它们比Hot节点承受的压力小。
- en: 'To increase the compression level on an Elasticsearch 2.0+ node, perform the
    following:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Elasticsearch 2.0+节点上提高压缩级别，请执行以下操作：
- en: Close the index.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭索引。
- en: Configure the `index.codec` setting to `best_compression`.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`index.codec`设置配置为`best_compression`。
- en: Re-open the index.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新打开索引。
- en: '[PRE21]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Storing the _source and analyzed fields
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 存储`_source`和已分析字段
- en: 'By default, Elasticesarch stores all documents passed to it in the `_source`
    field and sets all fields to `analyzed`. This means that some basic tokenizers
    are run on the field. Disabling these options can save some disk space. We may
    decide to disable the `_source` field if we have documents stored elsewhere in
    our system. Or, we can disable the `_source` field and set the individual fields
    that we want to retrieve to `store: true`.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '默认情况下，Elasticesarch将所有传递给它的文档存储在`_source`字段中，并将所有字段设置为`analyzed`。这意味着一些基本的分词器会在字段上运行。如果我们决定在我们的系统中将文档存储在其他地方，或者我们可以禁用`_source`字段并将我们想要检索的各个字段设置为`store:
    true`，这样可以节省一些磁盘空间。'
- en: 'For the `analyzed` fields, think carefully about how you will use your data
    and set a field to `index: not_analyzed` if you don''t need it tokenized. E-mail
    addresses, IP addresses, social media usernames, or other fields that we don''t
    want to split up should be set to `not_analyzed`.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '对于`分析`字段，仔细考虑你将如何使用你的数据，如果你不需要对其进行分词，请将字段设置为`index: not_analyzed`。电子邮件地址、IP地址、社交媒体用户名或其他我们不希望拆分的字段应设置为`not_analyzed`。'
- en: 'Create a new index with `_source` disabled, and set some fields to `not_analyzed`:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的索引，禁用`_source`，并将一些字段设置为`not_analyzed`：
- en: '[PRE22]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Unfortunately, there are some pretty big downsides to disabling the `_source`
    field. In addition to not being able to retrieve the full source during a query,
    the following are only supported if `_source` is enabled:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 很遗憾，禁用`_source`字段有一些相当大的缺点。除了在查询期间无法检索完整源之外，以下功能仅在启用`_source`时才受支持：
- en: The Elasticsearch update API
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elasticsearch更新API
- en: Elasticsearch highlighting
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elasticsearch高亮显示
- en: Many tools and strategies to re-index data
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多重新索引数据的工具和策略
- en: If disk space is a major concern, first check whether enabling data compression
    will meet your storage needs before disabling the `_source` field.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果磁盘空间是一个主要问题，首先检查启用数据压缩是否能够满足你的存储需求，然后再禁用`_source`字段。
- en: Optimizing data ingestion
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化数据摄取
- en: This section goes over some additional methods to improve data ingestion. In
    all of these methods, it's important to monitor the data ingestion rate to ensure
    that changes have the desired impact on performance.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了提高数据摄取的一些额外方法。在这些方法中，监控数据摄取速率非常重要，以确保变化对性能产生预期的效果。
- en: As mentioned earlier, test one change at a time and run each test for a long
    enough period to return meaningful results. The best place to monitor ingestion
    performance is to select the index of interest in the Marvel *Indices* dashboard.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，一次测试一个变化，并运行足够长的时间以获得有意义的成果。监控摄取性能的最佳位置是在Marvel的*索引*仪表板中选择感兴趣的索引。
- en: 'The following screenshot shows the Marvel Indices dashboard for our `twitter`
    data index:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了我们的`twitter`数据索引的Marvel索引仪表板：
- en: '![Optimizing data ingestion](img/B03798_06_05.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![优化数据摄取](img/B03798_06_05.jpg)'
- en: Marvel indexing requests
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Marvel索引请求
- en: Monitor this page in Marvel as you make changes to data ingest operations. This
    will allow you to see how changes affect the indexing rate in real time, and you'll
    be able to refer back to past indexing rate metrics for reference.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在你对数据摄取操作进行更改时，监控此页面。这将允许你实时查看变化如何影响索引速率，并且你可以参考过去的索引速率指标。
- en: Bulk indexing operations
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 批量索引操作
- en: For bulk indexing operations, test various ingestion sizes and monitor them
    in Marvel until you find the optimal size. For example, run tests at `1MB`, `5MB`,
    `10MB`, `15MB`, and `20MB` until you find the value that works best. If you run
    daily ingestion jobs, consider running them during off-peak hours so that resulting
    slowdowns affect fewer users.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 对于批量索引操作，测试不同的摄取大小，并在Marvel中监控它们，直到找到最佳大小。例如，在`1MB`、`5MB`、`10MB`、`15MB`和`20MB`上运行测试，直到找到最佳值。如果您运行每日摄取作业，考虑在非高峰时段运行它们，以便结果放缓影响较少的用户。
- en: After inserting data into Elasticsearch, the index must be refreshed before
    a user can see the data. By default, the refresh interval is set to once a second.
    This means that after indexing a document, it will appear in search results within
    one second.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在将数据插入Elasticsearch后，用户能看到数据之前，索引必须刷新。默认情况下，刷新间隔设置为每秒一次。这意味着在索引一个文档后，它将在一秒内出现在搜索结果中。
- en: Refreshing as often as once a second can hurt performance during large indexing
    operations. Lowering the refresh rate to a value such as `10s` or `30s` is worthwhile
    if your system doesn't need to display new results immediately after they are
    indexed.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在大规模索引操作期间，每秒刷新一次可能会损害性能。如果您的系统不需要在索引后立即显示新结果，将刷新率降低到`10s`或`30s`是有价值的。
- en: Setting the refresh rate to `-1` will disable refreshing altogether. This can
    be useful for very large, one-time, or less-frequent periodic indexing operations.
    Remember to enable index refreshing afterwards.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 将刷新率设置为`-1`将完全禁用刷新。这对于非常大的、一次性的或不太频繁的周期性索引操作非常有用。记住，之后要启用索引刷新。
- en: 'To disable index refreshing, use the following:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要禁用索引刷新，请使用以下命令：
- en: '[PRE23]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Turn enable index refreshing on afterwards:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 之后启用索引刷新：
- en: '[PRE24]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Warming queries are run every time an index is refreshed. Another option is
    to keep index refreshing on, disable warming queries during large index operations,
    and then re-enable warming when the indexing job is complete.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 每次索引刷新时都会运行预热查询。另一个选项是保持索引刷新开启，在大规模索引操作期间禁用预热查询，然后在索引作业完成后重新启用预热。
- en: 'Disable index warmers:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用索引预热：
- en: '[PRE25]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Re-enable index warmers:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启用索引预热：
- en: '[PRE26]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Drive configuration
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 驱动器配置
- en: We mentioned in the "Hot-Warm" architecture section that SSDs are great for
    data indexing performance. Even if you don't use the "Hot-Warm" architecture,
    consider using SSDs for data nodes on your Elasticsearch cluster.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在“热-温”架构部分中，我们提到SSD非常适合数据索引性能。即使您不使用“热-温”架构，也考虑在您的Elasticsearch集群的数据节点上使用SSD。
- en: If SSDs are not an option, consider using fast hard drives (10,000+ RPM) configured
    in **RAID 0**. Remember that RAID 0 mirrors for performance, not reliability,
    but Elasticsearch's data replicas are sufficient for data reliability.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果SSD不是选项之一，考虑使用配置为**RAID 0**的快速硬盘（10,000+ RPM）。记住，RAID 0是为了性能而不是可靠性，但Elasticsearch的数据副本足以保证数据可靠性。
- en: It's best to avoid storing data on network storage. If you run an Elasticsearch
    cluster on virtual machines, make sure that they use local disks for storage.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 最好避免在网络上存储数据。如果您在虚拟机上运行Elasticsearch集群，请确保它们使用本地磁盘进行存储。
- en: Case studies
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例研究
- en: This section offers some real-world problem scenarios and solutions to use Elasticsearch.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了一些实际的问题场景和解决方案，以使用Elasticsearch。
- en: Node configuration
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 节点配置
- en: 'You have a five-node production cluster, where each node has `32GB` of total
    memory and `16GB` is allocated to Elasticsearch. Lately, you''ve noticed a problem:
    every couple of days, `node-05` leaves the cluster without warning. Restarting
    Elasticsearch on this node solves the problem temporarily, but the node will drop
    out of the cluster again in a few days. How do we go about looking into this issue?'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 您有一个五节点生产集群，每个节点总共有`32GB`的内存，其中`16GB`分配给了Elasticsearch。最近，您注意到一个问题：每隔几天，`node-05`会无预警地离开集群。在这个节点上重启Elasticsearch可以暂时解决问题，但几天后节点会再次从集群中掉出。我们如何着手调查这个问题？
- en: 'The next time this error happens, check the Elasticsearch logs before restarting
    the node:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 下次出现此错误时，在重启节点之前检查Elasticsearch日志：
- en: '[PRE27]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'You notice in the log file that Elasticsearch is throwing an `OutOfMemoryError`
    exception, like the following:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 您在日志文件中注意到Elasticsearch正在抛出`OutOfMemoryError`异常，如下所示：
- en: '[PRE28]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'You know that running out of fielddata can cause `OutOfMemoryError` exceptions,
    so after checking the `elasticsearch.yml` file, you find the following:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 您知道耗尽fielddata可能会导致`OutOfMemoryError`异常，因此检查`elasticsearch.yml`文件后，您发现以下内容：
- en: '[PRE29]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The cache setting was commented out. Uncomment this line and restart the Elasticsearch
    node. This seems to solve the problem at first. However, after two weeks, another
    `OutOfMemoryError` from `node-05` appears. After restarting the node, log into
    Bigdesk for insight. Clicking on `node-05`, you see the following:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存设置被注释掉了。取消注释这一行并重启Elasticsearch节点。这看起来似乎解决了问题。然而，两周后，`node-05`又出现了另一个`OutOfMemoryError`。在重启节点后，登录Bigdesk以获取洞察。点击`node-05`，你将看到以下情况：
- en: '![Node configuration](img/B03798_06_06.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![节点配置](img/B03798_06_06.jpg)'
- en: JVM memory in Bigdesk
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Bigdesk中的JVM内存
- en: It doesn't look like Elasticsearch is using much of the available memory, but
    this is probably because the node was just restarted.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来Elasticsearch并没有使用太多可用内存，但这可能是因为节点刚刚重启。
- en: 'Note that the maximum heap memory available for `node-05` is only about `250MB`.
    This is odd, considering the host has `32GB` of system memory. At this point,
    you want to ensure that the `ES_HEAP` variable was set properly. Open the following
    file:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`node-05`可用的最大堆内存只有大约`250MB`。考虑到主机有`32GB`的系统内存，这很奇怪。在这个时候，你想要确保`ES_HEAP`变量被正确设置。打开以下文件：
- en: '[PRE30]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'You will see the following:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到以下情况：
- en: '[PRE31]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: It looks like this configuration, like the `indices.fielddata.cache.size`, was
    also commented out. Uncommenting this line and restarting Elasticsearch brings
    the node's total available memory to `16GB`, and eliminates the `OutOfMemoryError`
    exceptions.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来这个配置，比如`indices.fielddata.cache.size`，也被注释掉了。取消注释这一行并重启Elasticsearch将节点的总可用内存提升到`16GB`，并消除了`OutOfMemoryError`异常。
- en: As mentioned earlier, node configuration errors are one of the most common reasons
    for poor Elasticsearch performance or crashes. It's important to validate each
    configuration change after it is made.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，节点配置错误是导致Elasticsearch性能不佳或崩溃的最常见原因之一。在做出配置更改后，验证每个配置更改是很重要的。
- en: Query optimization
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询优化
- en: You found a problem in one of your company's internal enterprise Elasticsearch
    web applications. First thing in the morning, the web application takes a long
    time to load query results. Performance starts to improve only after running a
    few queries.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 你在公司的一个内部企业级Elasticsearch Web应用程序中发现了问题。一大早，Web应用程序加载查询结果需要很长时间。只有在运行几个查询后，性能才开始提升。
- en: 'To tackle this problem, take a look at the slow log. In one of the nodes, you
    see a query that takes `4.7` seconds to run as an `INFO` event in the log:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，查看慢日志。在某个节点中，你看到一条运行时间为`4.7`秒的查询，作为日志中的`INFO`事件：
- en: '[PRE32]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Note
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The slow log won't necessarily write entries to all nodes, so check the log
    on each host.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 慢日志不一定会在所有节点上写入条目，所以请检查每个主机的日志。
- en: 'Use `python -m json.tool` to pretty-print the query:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`python -m json.tool`来美化打印查询：
- en: '[PRE33]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'You will see the following:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到以下内容：
- en: '[PRE34]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This `aggs` parameters may mean that this query makes heavy use of the field
    data cache. Diagnose this query and figure out what is causing the performance
    issue.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 这个`aggs`参数可能意味着这个查询大量使用了字段数据缓存。诊断这个查询并找出导致性能问题的原因。
- en: 'First, clear the fielddata cache to ensure consistent results:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，清除字段数据缓存以确保结果一致：
- en: '[PRE35]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now, run the query, as follows:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，按照以下方式运行查询：
- en: '[PRE36]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Results will be as follows:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将如下：
- en: '[PRE37]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: After running the query a few more times to ensure that the values it needs
    are in the fielddata cache, the query runs in around `.6` seconds. This is a pretty
    good improvement. Verify that the fielddata cache is now populated using Bigdesk
    or Marvel (refer to images for fielddata cache for Bigdesk and Marvel).
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行查询几次以确保所需值在字段数据缓存中后，查询大约在`.6`秒内完成。这是一个相当好的改进。请使用Bigdesk或Marvel（参考图像中的Bigdesk和Marvel的字段数据缓存）验证字段数据缓存现在是否已填充。
- en: The fielddata cache was probably getting cleared due to new data ingestion or
    shard relocation overnight. To solve this problem, enable eager fielddata loading
    on both the `user.screen_name` and `text` fields in the Elasticsearch mapping.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 字段数据缓存可能因为新数据的摄入或分片夜间迁移而被清空。为了解决这个问题，在Elasticsearch映射中启用`user.screen_name`和`text`字段的急切字段数据加载。
- en: 'However, this query''s performance still isn''t great. Checking the slow log
    again, we note it still triggers a `TRACE` event:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个查询的性能仍然不佳。再次检查慢日志，我们注意到它仍然触发一个`TRACE`事件：
- en: '[PRE38]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'To figure out why this query takes over 0.5 seconds to run even after the fielddata
    cache is populated, break the query down into individual queries—one that runs
    the `text` aggregation, and another that runs the `screen_name` aggregation:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 为了找出为什么即使fielddata缓存已填充，这个查询仍然需要超过0.5秒来运行，将查询分解为单独的查询——一个运行`text`聚合，另一个运行`screen_name`聚合：
- en: '[PRE39]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'This query takes approximately `.4` seconds to run:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 这个查询运行大约需要`.4`秒：
- en: '[PRE40]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: This query runs in `.08` seconds; this is a vast improvement over the `text`
    aggregation query.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 这个查询运行时间为`.08`秒；这比`text`聚合查询有巨大的改进。
- en: As we've identified the `text` aggregation as the slow part of the query, consider
    removing that operation and finding another solution which will yield similar
    results. Although it depends what the aggregation is used for, aggregating on
    a lower-cardinality field may be a suitable solution. For example, if the `text`
    aggregation is used to build a word cloud, consider instead using the `entities.hashtags.text`
    hashtag field to get a similar result.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经确定`text`聚合是查询中的慢速部分，考虑移除该操作并寻找另一个能产生类似结果的解决方案。尽管这取决于聚合的使用目的，但在低基数字段上进行聚合可能是一个合适的解决方案。例如，如果`text`聚合用于构建词云，可以考虑使用`entities.hashtags.text`标签字段来获取类似的结果。
- en: Another option is keeping the `text` aggregation, but running it periodically
    in the background and caching the results.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选项是保留`text`聚合，但定期在后台运行并缓存结果。
- en: Finally, consider using the shard query cache on this query. As no queries are
    returned (`size=0`), we can enable the `search_type=count` and `query` `_cache=true`
    parameter to cache the results of the aggregation.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，考虑在这个查询上使用分片查询缓存。由于没有返回查询（`size=0`），我们可以启用`search_type=count`和`query_cache=true`参数来缓存聚合结果。
- en: Web application performance
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络应用程序性能
- en: 'You are working on a web application that searches Twitter data in an Elasticsearch
    index. In addition to displaying tweets in the search results page, you want to
    display:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 你正在开发一个网络应用程序，该应用程序在Elasticsearch索引中搜索Twitter数据。除了在搜索结果页面上显示推文外，你还想显示：
- en: Tweet activity over time
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随时间推移的推文活动
- en: Top users in the results
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果中的顶级用户
- en: Top hashtags in the results
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果中的顶级标签
- en: Top user mentions
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶级用户提及
- en: We can implement all of these items using Elasticsearch aggregations, but these
    operations are much more costly than simply running a search for hits.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Elasticsearch聚合来实现所有这些项目，但这些操作的成本远高于简单地运行一个搜索查询。
- en: 'To speed up page load times, we split this into two AJAX requests: one query
    for results, and one query for all aggregations. The queries are both AJAX requests,
    meaning that the page will load immediately. The query results will follow shortly
    after, and the aggregation results will load last. Because the aggregations query
    doesn''t return any hits, we can set the parameters `search_type=count` and `query_cache=true`
    to cache the aggregations for future queries.'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加快页面加载时间，我们将它分为两个AJAX请求：一个用于结果查询，另一个用于所有聚合查询。这两个查询都是AJAX请求，这意味着页面将立即加载。查询结果将随后出现，聚合结果将最后加载。因为聚合查询不返回任何命中项，我们可以设置参数`search_type=count`和`query_cache=true`来缓存聚合以供未来查询使用。
- en: When paging through results, make sure to only query for the hits and not for
    the aggregation results. Aggregation results will stay the same no matter what
    page of data is being looked at.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在翻页结果时，确保只查询命中项，而不是聚合结果。聚合结果将保持不变，无论查看的是哪一页数据。
- en: Summary
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'This chapter addressed some common performance and reliability issues that
    come up when using Elasticsearch. To reiterate some of the major points in this
    chapter:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论了在使用Elasticsearch时出现的一些常见性能和可靠性问题。为了重申本章的一些主要观点：
- en: Always double-check your Elasticsearch cluster's configuration for errors
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总是仔细检查Elasticsearch集群的配置以查找错误
- en: Set the fielddata cache size, especially if you see `OutOfMemoryError` exceptions
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置fielddata缓存大小，特别是如果你看到`OutOfMemoryError`异常
- en: Use the slow log to find what queries run slow on your cluster
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用慢日志来查找在您的集群上运行缓慢的查询
- en: Avoid aggregations on high-cardinality fields (such as millisecond timestamps)
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免在高基数字段（如毫秒级时间戳）上进行聚合
- en: Be cognizant of your data indexing strategy so that no one index grows too large
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意你的数据索引策略，以确保没有索引变得过大
- en: Use index warmers or enable `eager_global_ordinals` to ensure queries that use
    the fielddata cache are fast the first time we run them
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用索引预热器或启用`eager_global_ordinals`以确保首次运行使用fielddata缓存的查询速度快
- en: If possible, use SSDs on nodes that index data, and avoid storing Elasticsearch
    indices on network storage
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能的话，在索引数据的节点上使用SSD，并避免在网络上存储Elasticsearch索引。
- en: Most importantly, when diagnosing Elasticsearch issues, be meticulous about
    testing at each stage. For example, don't try to optimize a query by making changes
    to `elasticsearch.yml`, modifying the query criteria, and enabling index `warmers`
    all at once before running the query again. Test one variable at a time to extract
    precisely where the problem is before deciding how to fix it.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，在诊断Elasticsearch问题时，要仔细在每个阶段进行测试。例如，在再次运行查询之前，不要试图通过修改`elasticsearch.yml`、修改查询条件以及启用索引`warmers`来同时优化查询。一次测试一个变量，以便在决定如何修复问题之前精确地找出问题所在。
- en: The next chapter discusses how to understand and fix node failures after they've
    already happened.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章讨论了如何在节点故障发生后如何理解和修复它们。
