- en: Chapter 1. Digital Java EE 7
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 数字Java EE 7
- en: '|   | *"Nobody is madder than me about the fact that the website isn''t working"*
    |   |'
  id: totrans-1
  prefs: []
  type: TYPE_TB
  zh: '|    | *"没有人比我更生气，因为网站不工作"* |    |'
- en: '|   | --*President Barack Obama, 21st October 2013 in a Rose Garden speech*
    |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
  zh: '|    | --*美国总统巴拉克·奥巴马，2013年10月21日在玫瑰园的演讲* |'
- en: Digital adaptation is a sign of the times for the software developers who are
    involved with contemporary web design. The phrase Digital Transformation is yet
    another buzzword pandered around by business executives. Enterprise Java developers
    do not have to be afraid of this new digital world, because we are involved in
    building the most exciting software on this planet. We are building software for
    users, customers, and people. Replace the word *Digital* with *User Experience*
    and you will instantly get what all the fuss is about.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 数字适应是当代网络设计涉及的软件开发者的时代标志。数字转型这个短语是商业高管们又一种迎合的时髦词汇。企业Java开发者不必害怕这个新的数字世界，因为我们参与构建这个星球上最激动人心的软件。我们正在为用户、客户和人们构建软件。将*数字*这个词替换为*用户体验*，你将立刻明白所有这些喧嚣的原因。
- en: So let's remove the marketing terms once and for all. Digital transformation
    takes a non-online business process and produces the equivalent online version.
    Of course, a ponderous ugly caterpillar does not suddenly morph into a beautiful
    Red Admiral butterfly overnight, without life experience and genetics. It takes
    the considerable skills of developers, designers, and architects to adapt, transform,
    and apply the business requirements to technology. In recent times, the software
    profession has recognized the validity of users and their experiences. Essentially,
    we have matured.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们彻底摆脱营销术语。数字化转型将非在线业务流程转化为等效的在线版本。当然，一个笨重的丑陋毛毛虫不会一夜之间突然变成美丽的红雀蝶，没有生活经验和遗传因素。这需要开发者、设计师和建筑师相当大的技能来适应、转换并将业务需求应用于技术。近年来，软件行业已经认识到用户及其经验的合理性。本质上，我们已经成熟了。
- en: This book is about developers who can mature and want to mature. These are the
    developers who can embrace Java technologies and are sympathetic to the relevant
    web technologies.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是关于那些能够成熟并且渴望成熟的开发者。这些开发者能够拥抱Java技术，并对相关网络技术表示同情。
- en: In this chapter, we will start our developer's journey with the requirements
    of the web developer, engineers at the so-called front-end, and the digital and
    creative industry. We will survey the enterprise Java platform and ask the question,
    where does Java fit in? We will look at the growth of JavaScript. We will learn
    about the Java EE 7 modern web architecture. To conclude, we will finish with
    a simple JavaServer Faces example.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将从网络开发者的要求开始，也就是所谓的“前端”工程师，以及数字和创意行业。我们将调查企业Java平台，并问这样一个问题：Java在哪里？我们将研究JavaScript的增长。我们将了解Java
    EE 7的现代网络架构。最后，我们将通过一个简单的JavaServer Faces示例结束本章。
- en: Working in the digital domain
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在数字领域工作
- en: Working in a digital domain requires the business to move beyond legacy and
    institutionalized thinking. It is no longer acceptable to slap together some HTML,
    a few links to press releases, and some white papers, bundle together some poorly
    written JavaScript code, and call it your web site. That strategy was suitable,
    once upon a time. Nowadays, private and public corporations, and even the government,
    plan web technology for the long-tail in business by focusing on high usability
    and content ([https://en.wikipedia.org/wiki/Long_tail](https://en.wikipedia.org/wiki/Long_tail)).
    If your web technology is hard to use, then you will not make any money and no
    citizen will use your online service.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在数字领域工作要求企业超越传统和制度化的思维。仅仅堆砌一些HTML、几个指向新闻发布的链接和一些白皮书，打包一些写得不好的JavaScript代码，然后称之为网站，这种策略曾经是合适的。如今，私营和公共公司，甚至政府，通过关注高可用性和内容来为商业的长尾效应规划网络技术（[https://en.wikipedia.org/wiki/Long_tail](https://en.wikipedia.org/wiki/Long_tail)）。如果你的网络技术难以使用，那么你将不会赚到任何钱，也没有任何公民会使用你的在线服务。
- en: Digital Java developer requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数字Java开发者要求
- en: As a digital developer, you definitely need powerful development machines, capable
    of running several of the applications simultaneously. You need to be strong and
    assertive, and insist on your experience being the best that can be. You are responsible
    for your own learning. A digital developer should not be hamstrung with a laptop
    that is fit for the sales and marketing division.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数字开发者，你肯定需要强大的开发机器，能够同时运行多个应用程序。你需要坚强和自信，并坚持你的经验是最好的。你对自己的学习负责。数字开发者不应该被适合销售和营销部门的笔记本电脑所束缚。
- en: 'Your workhorse must be able to physically handle the demands for every single
    tool in the following list:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你的工作机器必须能够物理上处理以下列表中每个工具的需求：
- en: '| Items | Explanation |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 项目 | 说明 |'
- en: '| --- | --- |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Java SE 8 (or, at least, Java SE 7) | Java SE 8 was released on March 18th,
    2014 and it provides Lambdas, where functions are first class citizens. Java 7
    is an acceptable alternative for the short term and for a cautious business IT
    director. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| Java SE 8（或至少Java SE 7） | Java SE 8于2014年3月18日发布，提供了Lambda表达式，其中函数是一等公民。Java
    7是短期内的可接受替代品，对于谨慎的商业IT总监来说也是如此。 |'
- en: '| Java EE 7 | GlassFish 4.1 application server is the reference implementation
    for Java EE 7, but there is a lack of professional support. Alternatively, the
    IT directors may consider Red Hat JBoss WildFly 9 that does have Service Level
    Agreements. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| Java EE 7 | GlassFish 4.1应用程序服务器是Java EE 7的参考实现，但缺乏专业支持。作为替代，IT总监可以考虑拥有服务级别协议的Red
    Hat JBoss WildFly 9。 |'
- en: '| Integrated Development Environment | IDE like IntelliJ IDEA 14, Eclipse Kepler
    4.3, or NetBeans 8 |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 集成开发环境 | IDE如IntelliJ IDEA 14、Eclipse Kepler 4.3或NetBeans 8 |'
- en: '| Adobe Creative Suite | Adobe Photoshop CC (and sometimes Adobe Illustrator)
    are the de facto graphics work inside the creative digital media industry. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| Adobe创意套件 | Adobe Photoshop CC（有时还有Adobe Illustrator）是创意数字媒体行业内的实际图形工作。 |'
- en: '| Cucumber or Selenium | Cucumber is a behavior-driven development for testing
    the features of a web application. It is written against Ruby programming and
    thus, requires that environment and the tool chain. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| Cucumber或Selenium | Cucumber是一种行为驱动开发，用于测试Web应用程序的功能。它是针对Ruby编程语言编写的，因此需要该环境和工具链。
    |'
- en: '| A suite of modern web browsers | Mozilla Firefox, Google Chrome, and Internet
    Explorer 10 and the de facto web browsers that support HTML5 and the latest W3C
    standard. Required Windows 10 recently launched with Edge. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 一套现代网络浏览器 | Mozilla Firefox、Google Chrome和Internet Explorer 10以及支持HTML5和最新W3C标准的实际网络浏览器。最近推出的Windows
    10需要Edge。 |'
- en: '| Developer plug-in for web browsers | It really helps to have a JavaScript
    debugger, HTML, and a CSS element inspector in your tool set. Plug-ins such as
    Chrome developer tool ease digital engineering. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 网络浏览器开发者插件 | 在你的工具集中拥有JavaScript调试器、HTML和CSS元素检查器非常有帮助。如Chrome开发者工具之类的插件可以简化数字工程。
    |'
- en: '| Text editor | A lightweight text editor to handle small-scale work is often
    very useful for editing the JavaScript, Puppet (or Chef) scripts, as well as HTML
    and CSS files. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 文本编辑器 | 轻量级文本编辑器常用于处理小型工作，对于编辑JavaScript、Puppet（或Chef）脚本，以及HTML和CSS文件非常有用。
    |'
- en: By just examining this table of software, it is no wonder that the average business-supplied
    company laptop is so ill-equipped to handle this development.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 只需查看这个软件表，就不难理解为什么平均的商业提供的公司笔记本电脑在处理这种开发时如此不配备。
- en: Tip
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Digital engineers are smart, professional engineers**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**数字工程师是聪明、专业的工程师**'
- en: I personally have a 2012 MacBook Pro Retina edition with 16 GB of RAM, 512 GB
    static hard disk drive as my main machine. Some of my clients have supplied me
    with badly configured machines. One particular client in finance gave me a Dell
    Latitude with only 4 GB RAM, running Windows 7 Professional. This developer machine
    was so poor in performance that I had to complain many times. Inform the decision
    makers in your business that digital workers need adequate development machines,
    fit for the purpose of engineering and designing great user experiences.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人有一台2012年的MacBook Pro Retina版，16 GB的RAM，512 GB的静态硬盘驱动器作为我的主要机器。一些客户给了我配置不当的机器。一个特定的金融客户给了我一台只有4
    GB RAM的Dell Latitude，运行Windows 7专业版。这台开发者机器性能如此之差，以至于我不得不多次投诉。通知你业务中的决策者，数字工作者需要适合工程和设计优秀用户体验的开发机器。
- en: Let's switch from creativity and design to the Java platform.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从创造力和设计转向Java平台。
- en: Java in the picture
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图中的Java
- en: The Java platform is in widespread use today. It was the first commercial language
    featuring JVM and byte-code with garbage collection, sandbox security, and networking
    capability to be adopted by business. Java's greatest strength is that businesses
    trust this platform to power enterprise applications in server-side computing.
    Since 1995, this strength in depth has grown to such a level that the platform
    is seen as very mature and mainstream. The disadvantage of being part of the main
    herd is that innovation takes a while to happen; as the steward of the platform,
    earlier Sun Microsystems and now Oracle Corporation, always guarantee backward
    compatibility and the maintenance of standards through the Java Community Process.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Java 平台目前被广泛使用。它是最先商业化的语言，具备 JVM 和具有垃圾回收、沙箱安全和网络功能的字节码，被企业所采用。Java 的最大优势是，企业信任这个平台来驱动服务器端计算中的企业级应用。自
    1995 年以来，这种深度优势已经发展到平台被视为非常成熟和主流的程度。作为主流群体的一个部分，其劣势是创新需要一段时间才能发生；作为平台的管理者，早期的
    Sun Microsystems 和现在的 Oracle Corporation，始终保证向后兼容性和通过 Java Community Process 维护标准。
- en: The JVM is the crown jewel of the platform. Java is the mother programming language
    that runs on the JVM. Other languages such as Scala, Groovy, and Clojure also
    run the JVM. These alternative JVM languages are popular, because they introduced
    many functional programming ideas to the mainstream developers. Functional programming
    primitives such as closures and comprehensions and languages such as Scala demonstrated
    a pure object-oriented model and mix-ins. These languages benefited from an easy
    interaction tool called **REPL**.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: JVM 是平台上的皇冠上的宝石。Java 是在 JVM 上运行的母编程语言。其他如 Scala、Groovy 和 Clojure 等语言也运行在 JVM
    上。这些替代 JVM 语言很受欢迎，因为它们向主流开发者引入了许多函数式编程思想。函数式编程原语，如闭包和推导式，以及如 Scala 这样的语言展示了纯面向对象模型和混入。这些语言受益于一个名为
    **REPL** 的易于交互的工具。
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: In fact, Java SE 9 will most likely have **Read-Evaluate-Print-Loop** (**REPL**).
    Keep an eye on the progression of the official OpenJDK project Kulla at [http://openjdk.java.net/projects/kulla/](http://openjdk.java.net/projects/kulla/).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，Java SE 9 很可能将拥有 **读取-评估-打印-循环**（**REPL**）。请密切关注官方 OpenJDK 项目 Kulla 的进展，该项目网址为
    [http://openjdk.java.net/projects/kulla/](http://openjdk.java.net/projects/kulla/)。
- en: Released in 2014, Java SE 8 features functional interfaces, otherwise known
    as Lambdas, which bring the benefits of closures and functional blocks to the
    main JVM language on the platform.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 2014 年发布的 Java SE 8 特性包括函数式接口，也称为 Lambda，它将闭包和函数式块的好处带到了平台上的主要 JVM 语言。
- en: 'Whatever programming language you choose to develop your next enterprise application,
    Java or Scala or otherwise, I think you can bet on the JVM being around for a
    long time, at least for the next decade or so. The PermGen issue finally ended
    in Java SE 8, because there is no permanent generation in there. Before Java SE
    8, PermGen was the source of many memory leaks (slow and steady memory hogs).
    This was also the dedicated space where the JVM would load classes into a piece
    of memory such as the Java Runtime (such as `java.lang.String`, `java.lang.System`,
    or `java.util.collection.ConcurrentHashMap`). However, classes were rarely unloaded
    or compacted in size, especially during a very long execution of a JVM. If you
    are running websites 24/7 over a number of days or even weeks at a time with some
    degree of user interaction, then there is a good chance that your applications
    (and their application server) could run out of memory (`java.lang.OutOfMemoryError:
    PermGen space`). The permanent generation was the storage area reserved for internal
    representation of Java classes in releases before JDK 8\. For long running application
    servers and JVM processes, it was possible for references to metadata and classes
    to remain in permanent generation memory even after if WAR/EAR applications were
    undeployed and uninstalled. In Java SE 8, the reserved allocation of memory for
    the Java classes is adaptive. The JVM can now gracefully manage its own memory
    allocations and represents at least 10 percent efficiency improvement as compared
    to the previous versions.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '无论你选择哪种编程语言来开发你的下一个企业级应用，Java、Scala或其他，我认为你可以赌 JVM 会长期存在，至少在未来十年左右。PermGen问题终于在Java
    SE 8中得到了解决，因为其中没有永久生成。在Java SE 8之前，PermGen是许多内存泄漏（缓慢且稳定的内存消耗者）的来源。这也是JVM将类加载到内存片段（如Java运行时，例如`java.lang.String`、`java.lang.System`或`java.util.concurrent.ConcurrentHashMap`）的专用空间。然而，类很少被卸载或压缩大小，尤其是在JVM非常长的执行过程中。如果你在连续几天甚至几周的时间内运行网站，并且有一定程度的用户交互，那么你的应用程序（及其应用服务器）可能会耗尽内存（`java.lang.OutOfMemoryError:
    PermGen space`）。永久生成是JDK 8之前为Java类的内部表示保留的存储区域。对于长时间运行的应用服务器和JVM进程，即使WAR/EAR应用程序未部署和卸载，元数据和类的引用也可能仍然保留在永久生成内存中。在Java
    SE 8中，为Java类保留的内存分配是自适应的。现在，JVM可以优雅地管理自己的内存分配，与之前的版本相比，至少提高了10%的效率。'
- en: In Java SE 8, we have a Garbage First Garbage collector known as G1, which is
    a parallel collector. Java SE 8 also includes new byte codes to improve the efficiency
    of dynamic languages such as JRuby and Clojure. The InvokeDynamic byte code from
    JDK 7 and the Method Handle API were particularly instrumented for the Nashorn,
    an implementation of JavaScript (ECMAScript Edition 6).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在Java SE 8中，我们有一个名为G1的垃圾回收器，它是一个并行收集器。Java SE 8还包括新的字节码，以提高诸如JRuby和Clojure这样的动态语言的效率。从JDK
    7继承的InvokeDynamic字节码和Method Handle API特别为Nashorn（JavaScript（ECMAScript Edition
    6）的实现）进行了优化。
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: As of April 2015, Oracle stopped releasing updates to Java SE 7 to its public
    download sites. Please pass on this information to your CTO!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 截至2015年4月，Oracle停止向其公共下载站点发布Java SE 7的更新。请将此信息转达给你的CTO！
- en: There is no doubt that the Java platform will continually serve digital engineers
    as a back-end technology. It may even occur to businesses to take advantage of
    the client-side technology in Java SE 8 that is now delivered with the platform.
    JavaFX is an interesting solution, but outside the scope of this book.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，Java平台将继续作为后端技术为数字工程师提供服务。企业甚至可能会利用Java SE 8平台提供的客户端技术。JavaFX是一个有趣的解决方案，但超出了本书的范围。
- en: 'We should introduce some code now. The following is a Lambda function for Java
    SE 8:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在应该引入一些代码。以下是一个Java SE 8的Lambda函数：
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If this code looks very strange to you, then you are probably not yet familiar
    with Lambda expressions. We have a **Context and Dependency Injection** (**CDI**)
    bean, which is application scoped, called `CreditCardTicketTracker`. It has a
    method called `processTickets()` that accepts a list collection of Ticket objects.
    The exact type of Ticket is unimportant. What is important, however, is the `PaymentIssuer`
    type that the CDI injects into a **Plain Old Java Object** (**POJO**). The method
    `processTickets()` invokes the stream API of the Java SE 8 collection. Essentially,
    invoking the method `parallelStream()` causes processing on each element in the
    Java collection with multiple threads working in a concurrent operation. The Lambda
    expressions are on the `filter()`, `map()`, and the `forEach()` methods of the
    updated Collection API.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这段代码看起来非常奇怪，那么你可能还不熟悉 Lambda 表达式。我们有一个**上下文和依赖注入**（**CDI**）bean，它是应用范围的，称为`CreditCardTicketTracker`。它有一个名为`processTickets()`的方法，该方法接受一个包含
    Ticket 对象的列表集合。Ticket 的确切类型并不重要。然而，重要的是 CDI 注入到**普通 Java 对象**（**POJO**）中的`PaymentIssuer`类型。`processTickets()`方法调用了
    Java SE 8 集合的流 API。本质上，调用`parallelStream()`方法会导致在 Java 集合的每个元素上以多线程的方式执行处理操作。Lambda
    表达式位于更新后的 Collection API 的`filter()`、`map()`和`forEach()`方法上。
- en: Moreover, the code reads close enough to written English. Let me now explain
    the method `processTickets()`. An outside component is sending batches of concert
    tickets for processing to our component `CreditCardTicketTracker`. For each ticket
    in the batch, we filter only those tickets that are marked as available, which
    have already been paid for using a credit card, and where the concert date is
    two or more days after the current date. By the way, we take advantage of `java.time.LocalDate`,
    which is new in Java SE 8.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，代码的阅读效果接近于书面英语。现在让我来解释一下`processTickets()`方法。外部组件正在将一批音乐会门票发送到我们的组件`CreditCardTicketTracker`进行处理。对于批次中的每一张门票，我们只过滤那些标记为可用、已经使用信用卡支付并且音乐会日期在当前日期两天或两天以上的门票。顺便说一句，我们利用了
    Java SE 8 中新出现的`java.time.LocalDate`。
- en: 'So, very briefly, a Lambda expression is an anonymous method and the syntax
    follows this format:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，非常简短地说，Lambda 表达式是一个匿名方法，其语法遵循以下格式：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A lambda expression can be parameterless; therefore, the Java compiler can infer
    that an expression can be substituted for the `java.lang.Runnable` type. If there
    are parameters, the compiler can infer the types of the arguments given enough
    information. Therefore, the Type1 and Type2 declarations are optional. A Lambda
    must return a single instance of a type or it may be void, which means the curly
    braces may be left off.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Lambda 表达式可以是参数化的；因此，Java 编译器可以推断出可以用表达式替换`java.lang.Runnable`类型。如果有参数，编译器可以在提供足够信息的情况下推断出参数的类型。因此，Type1
    和 Type2 声明是可选的。Lambda 必须返回一个类型的单个实例，或者可能是 void，这意味着可以省略花括号。
- en: Lambda expressions are concise, timesaving, and allow functions to be passed
    to the libraries. For more information, consult the excellent Java Tutorial for
    Java SE 8 on Oracle's website ([http://docs.oracle.com/javase/tutorial/java/index.html](http://docs.oracle.com/javase/tutorial/java/index.html)).
    As we have seen in the previous example, your application could use the parallel
    stream facility in the collection to achieve concurrency.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Lambda 表达式简洁、节省时间，并允许将函数传递到库中。有关更多信息，请参阅 Oracle 网站上的优秀 Java SE 8 教程（[http://docs.oracle.com/javase/tutorial/java/index.html](http://docs.oracle.com/javase/tutorial/java/index.html)）。正如我们在前面的示例中所看到的，你的应用程序可以使用集合中的并行流功能来实现并发。
- en: One immediate use of the Lambda expressions is to replace the inner classes
    that call the managed thread services, `javax.enterprise.concurrent.ManagedExecutorService`
    in Java EE 7\. We know that Java has multiple-thread support, networking, and
    security. Let us turn our attention to the client side.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Lambda 表达式的一个直接用途是替换调用管理线程服务的内部类，即 Java EE 7 中的`javax.enterprise.concurrent.ManagedExecutorService`。我们知道
    Java 支持多线程、网络和安全。让我们把注意力转向客户端。
- en: The impressive growth of JavaScript
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript 令人印象深刻的增长
- en: Over the past decade, digital engineers have adopted a healthy respect for JavaScript
    as a programming language. Despite its many shortcomings, developers have learned
    to write modular applications that truly exploit the functionality of this programming
    language, which executes inside web browsers and servers universally. The framework
    that eventually changed the game was something called jQuery. It was then written
    by John Resig in order to simplify the client-side scripting of HTML in JavaScript.
    Released in 2006, it is the most popular framework in the JavaScript library today.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去十年中，数字工程师对 JavaScript 作为编程语言的健康尊重。尽管它有许多缺点，但开发者已经学会了编写模块化应用程序，真正利用了这种在浏览器和服务器上普遍执行的编程语言的功能。最终改变游戏规则的框架是被称为
    jQuery 的东西。它是由 John Resig 编写的，目的是简化 HTML 的客户端脚本。2006 年发布，它是当今 JavaScript 库中最受欢迎的框架。
- en: The greatest innovation in jQuery was the selector engine called Sizzle that
    allowed JavaScript programming to filter out the DOM elements by declarations,
    allow traversal, and perform algorithm through a type of collection comprehension.
    It introduced a new direction for JavaScript development.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 最大的创新是名为 Sizzle 的选择器引擎，它允许 JavaScript 编程通过声明过滤 DOM 元素，允许遍历，并通过集合理解（collection
    comprehension）类型执行算法。它为 JavaScript 开发开辟了新的方向。
- en: It is not just jQuery that has been driving JavaScript. In truth, the progress
    can be tracked back to the re-discovery of AJAX techniques and the emergence of
    several competing frameworks such **Script.aculo.us** and **Prototype**.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅 jQuery 在推动 JavaScript 的发展。实际上，这种进步可以追溯到 AJAX 技术的重新发现以及几个竞争框架的出现，例如 **Script.aculo.us**
    和 **Prototype**。
- en: 'The following is an example of a JavaScript code that uses jQuery:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个使用 jQuery 的 JavaScript 代码示例：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Please do not worry if you are struggling to understand the preceding code and
    certainly do not run away from this piece of JavaScript. The code shows the modern
    idiom of developing JavaScript in a good, reliable, and maintainable way without
    using global variables. It perfectly illustrates the module technique of keeping
    the JavaScript variables and function methods inside an enclosing scope. Scope
    is the most important item to understand in JavaScript programming.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在理解前面的代码上遇到困难，请不要担心，当然也不要避开这段 JavaScript 代码。这段代码展示了在现代以良好的、可靠的和可维护的方式开发 JavaScript
    的现代习语，而不使用全局变量。它完美地说明了将 JavaScript 变量和函数方法保持在封装作用域内的模块技术。作用域是理解 JavaScript 编程中最重要的项目。
- en: The preceding JavaScript code creates a namespace called **xenonique**, which
    exists in its own scope. We make use of the `Module Pattern` to create a module
    called `Main`, which depends on jQuery. There is a method defined called `init()`,
    which executes a jQuery selector with an anonymous function. Whenever the user
    clicks on the HTML element with the ID `#scrollToTheArrow`, the web page scrolls
    the top automatically in 750 milliseconds.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的 JavaScript 代码创建了一个名为 **xenonique** 的命名空间，它存在于自己的作用域中。我们利用 `Module Pattern`
    创建了一个名为 `Main` 的模块，该模块依赖于 jQuery。定义了一个名为 `init()` 的方法，它使用匿名函数执行 jQuery 选择器。当用户点击具有
    ID `#scrollToTheArrow` 的 HTML 元素时，网页会在 750 毫秒内自动滚动到顶部。
- en: The JavaScript module pattern
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript 模块模式
- en: 'The critical technique in this code, as elaborated by Douglas Crockford in
    his seminal book, *JavaScript: The Good Parts*, is to create a module that acts
    like a singleton object. The module is invoked by the interpreter immediately
    because of the parameter argument statement at the end of the declaration, which
    relies on a jQuery instance.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '在此代码中，Douglas Crockford 在他的经典著作 *JavaScript: The Good Parts* 中详细阐述的关键技术是创建一个类似单例对象（singleton
    object）的模块。由于声明末尾的参数语句，该模块被解释器立即调用，这依赖于 jQuery 实例。'
- en: 'Let''s simplify the module for effect:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简化模块以产生效果：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The module `xenonique.Main` in the preceding code is actually a JavaScript closure,
    which has its own scope. Thus, the module pattern simulates the private and public
    members and functions. The return value of the closure is an object that defines
    the publicly accessible properties and methods. In the module, the `init()` method
    and the `siteNavigationMarker` property are publicly accessible to other JavaScript
    variables. Closure is preserved in the return object with the JavaScript execution
    context and, therefore, all private and public methods will exist throughout the
    lifetime of the application.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 上一段代码中的模块 `xenonique.Main` 实际上是一个 JavaScript 闭包，它有自己的作用域。因此，模块模式模拟了私有和公共成员和函数。闭包的返回值是一个对象，它定义了公开可访问的属性和方法。在模块中，`init()`
    方法和 `siteNavigationMarker` 属性对其他 JavaScript 变量是公开可访问的。闭包与 JavaScript 执行上下文一起保留在返回对象中，因此所有私有和公共方法将在整个应用程序的生命周期中存在。
- en: JavaScript advanced libraries
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript 高级库
- en: For some engineers, writing custom JavaScript, even around a jQuery selector,
    is too detailed and low-level. AngularJS is an example of a JavaScript framework
    that takes the evolution of client-side programming further along its trajectory.
    AngularJS notably features two-way data binding of the DOM elements declaratively
    to each other or to the JavaScript module code. The creators of AngularJS intended
    to bring the **Model-View-Controller** (**MVC**) design pattern and the separation
    of concerns to web application development, as well as inspire behavior driven-design
    through a built-in testing framework.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些工程师来说，即使是围绕 jQuery 选择器的自定义 JavaScript 编写，也过于详细和底层。AngularJS 是一个将客户端编程进化推向更高阶段的
    JavaScript 框架的例子。AngularJS 特别具有将 DOM 元素声明性地双向绑定到彼此或 JavaScript 模块代码的功能。AngularJS
    的创造者旨在将 **模型-视图-控制器**（**MVC**）设计模式和关注点分离引入到网络应用开发中，并通过内置的测试框架激发行为驱动设计。
- en: AngularJS ([http://angularjs.org/](http://angularjs.org/)) is one of the highlights
    of the new modern movement in JavaScript. Whilst there is a JavaScript library
    being invented every week, it seems, the standouts in the professional development
    life also include GruntJS, Node.js, RequireJS, and UnderscoreJS.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: AngularJS ([http://angularjs.org/](http://angularjs.org/)) 是 JavaScript 新现代运动中的亮点之一。尽管似乎每周都有新的
    JavaScript 库被发明，但在专业开发领域脱颖而出的还包括 GruntJS、Node.js、RequireJS 和 UnderscoreJS。
- en: GruntJS ([http://gruntjs.com/](http://gruntjs.com/)) is particularly interesting,
    as it works like Make in C or C++ and Maven or Gradle in the Java space. Grunt
    is a JavaScript task management system and it can build applications, execute
    unit tests, compile Sass and LESS files to CSS, and perform other duties with
    the resources. It can also invoke utilities that will compress JavaScript using
    a process called minification, and optimize them into ugly (hard-to-reverse-engineer)
    files for both speed and some degree of security.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: GruntJS ([http://gruntjs.com/](http://gruntjs.com/)) 特别有趣，因为它在 C 或 C++ 中的 Make
    或者在 Java 空间中的 Maven 或 Gradle 的工作方式相似。Grunt 是一个 JavaScript 任务管理系统，它可以构建应用程序、执行单元测试、编译
    Sass 和 LESS 文件到 CSS，并使用资源执行其他任务。它还可以调用通过称为精简的过程压缩 JavaScript 的实用程序，并将它们优化成丑陋（难以逆向工程）的文件，以实现速度和一定程度的安全性。
- en: Note
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Sass ([http://sass-lang.com/](http://sass-lang.com/)) and LESS ([http://lesscss.org/](http://lesscss.org/))
    are CSS preprocessors used by designers and developers. These tools transform
    reusable common-style configurations into specific device and site style sheets.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Sass ([http://sass-lang.com/](http://sass-lang.com/)) 和 LESS ([http://lesscss.org/](http://lesscss.org/))
    是设计师和开发者使用的 CSS 预处理器。这些工具将可重用的通用样式配置转换为特定设备和网站的样式表。
- en: 'For a new digital engineer, I think you will, perhaps, find this discussion
    overwhelming. So I will summarize it in the following table:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一位新数字工程师，你可能觉得这个讨论令人压倒。所以我会以下表的形式总结：
- en: '| JavaScript Item | Description |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| JavaScript 项目 | 描述 |'
- en: '| --- | --- |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| jQuery | The most important open source JavaScript library for manipulating
    the DOM and for selecting elements by ID and name. It has a very popular plugin
    architecture with many products on offer.[http://jquery.org/](http://jquery.org/)
    |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| jQuery | 用于操作 DOM 和通过 ID 和名称选择元素的最重要的开源 JavaScript 库。它有一个非常流行的插件架构，提供了许多产品。[http://jquery.org/](http://jquery.org/)
    |'
- en: '| jQuery UI | This is a popular plugin that extends the standard jQuery, and
    adds additional animations, customizable themes, and UI components including a
    date calendar picker.[http://jqueryui.org/](http://jqueryui.org/) |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| jQuery UI | 这是一个流行的插件，它扩展了标准的 jQuery，并添加了额外的动画、可定制的主题以及包括日期日历选择器在内的 UI 组件。[http://jqueryui.org/](http://jqueryui.org/)
    |'
- en: '| RequireJS | A dependency management framework of a JavaScript file and modules
    loader. This framework has the ability to optimize bundles of modules for larger
    applications, especially through Asynchronous Module Definition API.[http://requirejs.org/](http://requirejs.org/)
    |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| RequireJS | 一个 JavaScript 文件和模块的依赖管理框架及模块加载器。这个框架具有优化大型应用程序模块包的能力，特别是通过异步模块定义
    API。[http://requirejs.org/](http://requirejs.org/) |'
- en: '| Nashorn | A JavaScript runtime engine built by Oracle and shipped as standard
    with Java SE 8\. Nashorn runs on the JVM, it is open source, and a part of the
    OpenJDK project.[http://openjdk.java.net/projects/nashorn/](http://openjdk.java.net/projects/nashorn/)
    |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| Nashorn | 由 Oracle 构建，并随 Java SE 8 标准提供的 JavaScript 运行时引擎。Nashorn 在 JVM 上运行，是开源的，也是
    OpenJDK 项目的一部分。[http://openjdk.java.net/projects/nashorn/](http://openjdk.java.net/projects/nashorn/)
    |'
- en: '| Dojo Toolkit and microkernel architecture | A refactored JavaScript modular
    framework and toolkit full of widget components. It makes use of AMD for fast
    download speed and the efficiency of modules to only load what is necessary for
    the client-side application. Dojo Toolkit has useful graphs and visualization
    components.[http://dojotoolkit.org/](http://dojotoolkit.org/) |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| Dojo Toolkit 和微内核架构 | 一个经过重构的 JavaScript 模块化框架和工具包，包含丰富的组件。它利用 AMD（异步模块定义）实现快速下载速度和模块的高效性，仅加载客户端应用程序所需的必要内容。Dojo
    Toolkit 包含实用的图表和可视化组件。[http://dojotoolkit.org/](http://dojotoolkit.org/) |'
- en: '| Ember JS | Ember is a framework for building client-side web applications.
    It uses JavaScript for invoking the templates to generate page content. Ember
    is aimed at the mobile developers who want to compete with native applications.
    The framework makes use of the Handlebars templating library.[http://emberjs.com/](http://emberjs.com/)
    |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| Ember JS | Ember 是一个用于构建客户端 Web 应用程序的框架。它使用 JavaScript 调用模板以生成页面内容。Ember
    致力于希望与原生应用程序竞争的移动开发者。该框架利用了 Handlebars 模板库。[http://emberjs.com/](http://emberjs.com/)
    |'
- en: '| Handlebars JS | Handlebar is a JavaScript templating library for client-side
    web applications. The templates, on first examination, resemble HTML with the
    addition of the expressions tokens. Those familiar with AngularJS will see that
    the expressions are very similar in syntax.[http://www.handlebarsjs.com/](http://www.handlebarsjs.com/)
    |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| Handlebars JS | Handlebars 是一个用于客户端 Web 应用程序的 JavaScript 模板库。在初步观察中，模板类似于
    HTML，增加了表达式标记。熟悉 AngularJS 的人会发现，这些表达式的语法非常相似。[http://www.handlebarsjs.com/](http://www.handlebarsjs.com/)
    |'
- en: '| Underscore JS | This is a JavaScript developer library that brings functional
    programming ideas and constructs into the language through an API. It has over
    80 library helpers that include methods like select, map, flatMap, filter, reduce,
    forEach, and invoke.[http://underscorejs.org/](http://underscorejs.org) |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| Underscore JS | 这是一个 JavaScript 开发者库，通过 API 将函数式编程的思想和结构引入语言。它包含超过 80 个库辅助方法，包括
    select、map、flatMap、filter、reduce、forEach 和 invoke 等方法。[http://underscorejs.org/](http://underscorejs.org)
    |'
- en: '| Backbone JS | A JavaScript Framework that adds a modeling aspect to the client-side
    applications. It provides models with key-value binding to DOM and custom application
    events. Models and collections can be saved to the server. Backbone also provides
    views with declarative data binding. In many ways, this framework is seen as a
    viable competitor to AngularJS.[http://backbonejs.org/](http://backbonejs.org/)
    |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| Backbone JS | 一个为客户端应用程序添加建模功能的 JavaScript 框架。它为模型提供与 DOM 的键值绑定和自定义应用程序事件。模型和集合可以保存到服务器。Backbone
    还提供了具有声明性数据绑定的视图。在许多方面，这个框架被视为 AngularJS 的可行竞争对手。[http://backbonejs.org/](http://backbonejs.org/)
    |'
- en: '| Angular JS | AngularJS is a JavaScript framework that provides two-way data
    binding between the DOM elements and custom JavaScript module code. It has a Model-View-Controller
    architecture and also provides support for custom HTML components through a feature
    called directives. Angular JS is also strongly supported by the developers who
    currently work at Google, and therefore, it is a famous JavaScript framework.
    Its strength lies in single-page web applications and declarative programming.[http://angularjs.org/](http://angularjs.org/)
    |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| Angular JS | AngularJS是一个提供DOM元素和自定义JavaScript模块代码之间双向数据绑定的JavaScript框架。它具有模型-视图-控制器架构，并通过一个名为指令的功能提供对自定义HTML组件的支持。AngularJS也得到目前在工作于Google的开发者的强烈支持，因此它是一个著名的JavaScript框架。它的优势在于单页网络应用程序和声明式编程。[http://angularjs.org/](http://angularjs.org/)
    |'
- en: As you can see, there are a lot of challenges to face if you happen to work
    with front-end (interface developer) engineers versed in many of the above technologies.
    An enterprise Java or server-side engineer has to be aware of other peoples' skill
    sets. (See the worker roles in [Appendix C](part0104.xhtml#aid-335QG1 "Appendix C. Agile
    Performance – Working inside Digital Teams"), *Agile Performance – Working inside
    Digital Teams*).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，如果你恰好与精通上述许多技术的前端（界面开发者）工程师合作，你会面临许多挑战。一个企业级Java或后端工程师必须了解其他人的技能集。（参见[附录C](part0104.xhtml#aid-335QG1
    "附录 C. 敏捷性能 – 数字团队内部工作")，*敏捷性能 – 数字团队内部工作*）。
- en: Information architecture and user experience
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信息架构和用户体验
- en: The digital worker is confronted today by multiple inputs and customer design
    requirements. One of those is the so-called **Information Architecture** (**IA**).This
    is essentially about the static structure of a website, and describes the flow
    in order to obtain the best customer-user experience. Information architecture
    models the shared visual and contextual data that a customer can see in a web
    page, application, and environment.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的数字工作者面临着多种输入和客户设计要求。其中之一就是所谓的**信息架构**（**IA**）。这本质上是一个网站的静态结构，并描述了为了获得最佳的客户用户体验而进行的流程。信息架构模拟了客户可以在网页、应用程序和环境中所看到的共享视觉和上下文数据。
- en: 'Most Java engineers might have seen IA diagrams being passed around among the
    designers and business analysts during business team discussions. It would be
    an error to simply gloss over or ignore these discussions, which is why a digital
    developer ought to have some awareness about how, why, and where is the IA applied.
    It looks a bit like the visualization of a site map. The following is an example
    of an information architecture diagram for an e-commerce application:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Java工程师可能都见过在业务团队讨论中，设计师和业务分析师之间传递的信息架构图。简单地忽略或忽视这些讨论是一个错误，这就是为什么数字开发者应该对信息架构如何、为什么以及在哪里应用有一定的了解。它看起来有点像网站地图的视觉化。以下是一个电子商务应用程序的信息架构图示例：
- en: '![Information architecture and user experience](img/image00372.jpeg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![信息架构和用户体验](img/image00372.jpeg)'
- en: Basic information architecture for fashion store web site
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 时尚商店网站的基本信息架构
- en: 'The preceding diagram describes the IA for a potential fashion store web application.
    It might be considered too simplistic for this book. This diagram, however, is
    a work in progress for a pitch, a sales meeting in order to win the contract to
    develop and build the web application. Architecture is based on three components
    that are vital for the customer: the initial welcome page, the access to the catalogue
    and product, and content about the corporation. For this particular customer,
    the diagram reflects their concerns for the featured fashion items, brands, and
    promotions. The IA will evolve over time through further interactions with the
    customer. If we win the pitch to develop the fashion store application, potentially,
    it might be the searchability of the site that requires deeper investigation.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表描述了一个潜在时尚商店网络应用程序的信息架构。对于本书来说，它可能显得过于简单。然而，这个图表是为了提案、为了赢得开发并构建网络应用程序的合同而进行的销售会议的一部分。架构基于三个对客户至关重要的组件：初始欢迎页面、访问目录和产品，以及关于公司的内容。对于这个特定的客户，图表反映了他们对特色时尚商品、品牌和促销的关注。信息架构会随着与客户进一步互动而演变。如果我们赢得了开发时尚商店应用程序的提案，那么可能需要更深入地研究网站的搜索功能。
- en: Information architecture helps the designers and developers along with the business
    stakeholder to understand the structure of the website through a shared language
    that consolidates the knowledge and purpose of the domain. A website owner and
    the business can view the IA as a breakdown of the content. They can comprehend
    how the site is built.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 信息架构有助于设计师、开发者和业务利益相关者通过一个共享的语言来理解网站的结构，这个语言巩固了领域的知识和目的。网站所有者和业务可以视信息架构为内容的分解。他们可以理解网站是如何构建的。
- en: 'Information architecture can also be about kinesthetic reactions to the content
    (how someone feels inside). In the future, this would be important for wearable
    computers, because the user may not be looking at a screen for sensations and
    notifications. Interactions may be through sound or even through a smell or taste.
    These modeling techniques and an ability to write in a manner that has an emotional
    impact are embraced in a new and recent job title: the content strategist.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 信息架构也可以是关于对内容的感觉反应（某人内心的感受）。在未来，这对于可穿戴计算机来说将非常重要，因为用户可能不会通过屏幕来感受和接收通知。交互可能通过声音，甚至通过气味或味道。这些建模技术和能够以具有情感影响的方式写作的能力被纳入一个新的、最近的工作标题：内容策略师。
- en: Writing and building a professional website or enterprise application has grown
    from its infancy. The developers now must be approachable, adaptable, and sophisticated.
    Approachable means the ability to work in harmony with others and as a team. Adaptable
    means being fearless in the face of constant challenges and changes; sophisticated
    means being able to cope with the stress and handling it gracefully.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 编写和构建专业网站或企业应用程序已经从其婴儿期成长起来。现在的开发者必须可接近、可适应和复杂。可接近意味着能够与他人和谐共事并作为一个团队。可适应意味着面对持续的挑战和变化时无所畏惧；复杂意味着能够应对压力并优雅地处理它。
- en: Let's move on to understanding the technical aspect of the enterprise Java platform.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续了解企业Java平台的技术方面。
- en: Java EE 7 architecture
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java EE 7架构
- en: Java EE is an open standard, an enterprise platform, and a specification for
    applications that execute on a server. For the digital worker, Java EE provides
    many services for building web applications including Servlets, JavaServer Faces,
    Facelets, Context and Dependency Injection, Java Message Services, WebSocket,
    and crucial Java for RESTful services.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE是一个开放标准，一个企业平台，以及一个适用于在服务器上执行的应用程序的规范。对于数字工作者，Java EE提供了许多构建Web应用程序的服务，包括Servlets、JavaServer
    Faces、Facelets、上下文和依赖注入、Java消息服务、WebSocket以及至关重要的用于RESTful服务的Java。
- en: Java EE 7 was announced and released in June 2013, and the overreaching theme
    was better HTML5 support and increased productivity. Currently, it looks like
    the future Java EE 8 specification might add support for the administrative configuration
    of services and application aspects through declarative annotations (extension
    of JSR 220).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7于2013年6月宣布并发布，其主题是更好的HTML5支持和提高生产力。目前，看起来未来的Java EE 8规范可能会通过声明性注解（JSR
    220的扩展）增加对服务和管理方面的声明性配置支持。
- en: Standard platform components and API
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准平台组件和API
- en: Java EE architecture is a container and layer-based architecture. At the crux
    of the design is an application server and an increasingly cloud-based solution,
    although this is yet to be standardized in the specification.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE架构是一个基于容器和层的架构。设计的核心是一个应用服务器和日益基于云的解决方案，尽管这尚未在规范中标准化。
- en: 'In the non-cloud-based Java EE, we can think of Java EE as four separate containers:
    the first one is the EJB container for life cycle management of Enterprise Java
    Beans and the second container is the Web container for life cycle management
    of the Java Servlets and Managed Beans. The third container is called the Application
    Client container, which manages the lifecycle of the client-side components. Finally,
    the fourth container is reserved for Java Applets and their life cycles.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在非云基础的Java EE中，我们可以将Java EE视为四个独立的容器：第一个是用于企业Java Bean生命周期管理的EJB容器，第二个容器是用于Java
    Servlets和托管Bean生命周期管理的Web容器。第三个容器被称为应用程序客户端容器，它管理客户端组件的生命周期。最后，第四个容器是为Java Applets及其生命周期预留的。
- en: Most of the time, digital engineers are concerned about the EJB, web, and the
    managed CDI bean containers.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，数字工程师关注的是EJB、Web和托管CDI Bean容器。
- en: Note
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are interested in a full description of the architecture, please refer
    to my first book, *The Java EE 7 Developer Handbook* by *Packt Publishing*. You
    can consider it as a sister book to this one.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对架构的完整描述感兴趣，请参阅我的第一本书，由 Packt Publishing 出版的 *《Java EE 7 开发者手册》*。您可以将其视为这本书的姊妹篇。
- en: 'According to the Java EE 7 specification, there are two official implementation
    profiles: the full and the web profile. A fully conformant Java EE product such
    as Glassfish or JBoss WildFly application server implements the full profile,
    which means it has all containers: EJB, CDI, and web. A server like Apache Tomcat,
    which builds against the Java EE 7 web profile, implements only the web container.
    A server like Tom EE that extends the Apache Tomcat implements the web container,
    and may add extra facilities like CDI, EJB, and even JMS and JAX-RS.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 Java EE 7 规范，有两个官方实现配置文件：完整配置文件和 Web 配置文件。完全符合 Java EE 规范的产品，如 Glassfish
    或 JBoss WildFly 应用服务器，实现了完整配置文件，这意味着它拥有所有容器：EJB、CDI 和 Web。像 Apache Tomcat 这样的服务器，它基于
    Java EE 7 Web 配置文件构建，仅实现 Web 容器。像 Tom EE 这样的服务器，它扩展了 Apache Tomcat，实现了 Web 容器，并可能添加额外的设施，如
    CDI、EJB，甚至是 JMS 和 JAX-RS。
- en: The following diagram illustrates the full profile Java EE 7 architecture as
    an enterprise solution. The Java EE platform is an abstraction of the hardware,
    disk storage, networking, and the machine code. Java EE relies on the presence
    of a Java Virtual Machine for operation. There are versions of JVM that have been
    ported to hardware chips like Intel, ARM, AMD, Sparc, FreeScale, and others as
    well as to operating systems including Windows, Mac OS, Linux, Solaris, and even
    Raspberry Pi.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表说明了作为企业解决方案的完整配置文件 Java EE 7 架构。Java EE 平台是硬件、磁盘存储、网络和机器代码的抽象。Java EE 依赖于
    Java 虚拟机的存在以进行操作。有 JVM 版本已经移植到英特尔、ARM、AMD、Sparc、FreeScale 等硬件芯片，以及包括 Windows、Mac
    OS、Linux、Solaris，甚至树莓派在内的操作系统。
- en: Therefore, Java and the other alternative languages can execute seamlessly on
    this chip architecture, and this applies to the enterprise applications. The Java
    EE provides additional standard API to the standard core Java SE. Let's take a
    brief look at some of the Java EE features.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Java 和其他替代语言可以在这个芯片架构上无缝执行，这适用于企业应用程序。Java EE 为标准核心 Java SE 提供了额外的标准 API。让我们简要地看看一些
    Java EE 功能。
- en: Java EE 7 takes advantage of the **New Input Output** (**NIO**) feature in the
    Java SE edition to allow Java Servlets 3.1 to handle asynchronous communication.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7 利用 Java SE 版本的 **新输入输出**（**NIO**）功能，允许 Java Servlet 3.1 处理异步通信。
- en: JavaServer Faces 2.2 is now enhanced with tighter CDI integration, improved
    life cycle events, and a new queue control for AJAX requests. For the digital
    engineer, there is sensible HTML5 support, resource library contracts, faces flows,
    and stateless views.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: JavaServer Faces 2.2 现在增强了与 CDI 的更紧密集成、改进的生命周期事件以及 AJAX 请求的新队列控制。对于数字工程师来说，有合理的
    HTML5 支持、资源库合约、faces flows 和无状态视图。
- en: '![Standard platform components and API](img/image00373.jpeg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![标准平台组件和 API](img/image00373.jpeg)'
- en: An illustration of the Java EE 7 full platform and JSR specifications
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7 完整平台和 JSR 规范的示意图
- en: Expression Language 3.0 is not truly a new specification, but it is a broken-out
    specification from Servlets, JavaServer Pages, and JavaServer Faces. Developers
    can access the expression evaluator and invoke processing on custom expressions
    like, say, their own custom tag libraries or server-side business logic.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式语言 3.0 并非一个全新的规范，但它是从 Servlets、JavaServer Pages 和 JavaServer Faces 中分离出来的规范。开发者可以访问表达式评估器，并对自定义表达式进行调用处理，例如，他们的自定义标签库或服务器端业务逻辑。
- en: Perhaps, the most important change in Java EE 7 is the strengthening of the
    CDI in order to improve type-safety and the easier development of CDI extensions.
    CDI, Interceptors, and Common Annotations improve the type-safe dependency injection
    and the observation of life cycle events inside the CDI container. These three
    specifications together ensure that extensions, which address crosscutting concerns
    and can be applied to any component, can be written. Developers can now write
    portable CDI extensions to extend the platform in a standard way.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 也许，Java EE 7 中最重要的变化是加强 CDI（控制反转），以提高类型安全性和简化 CDI 扩展的开发。CDI、拦截器和通用注解提高了 CDI
    容器内类型安全的依赖注入和生命周期事件的观察。这三个规范共同确保可以编写解决横切关注点且可应用于任何组件的扩展。开发者现在可以编写可移植的 CDI 扩展，以标准方式扩展平台。
- en: 'RESTful Services (JAX-RS) has three crucial enhancements: the addition of client-side
    API to invoke a REST endpoint, asynchronous I/O support for the client and server
    endpoints, and hypermedia linking.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: RESTful服务（JAX-RS）有三个关键增强：添加客户端API以调用REST端点、客户端和服务器端点的异步I/O支持以及超媒体链接。
- en: Bean validation is a constraint validation solution for domain and value object.
    It now supports method-level validation and also has better integration with the
    rest of the Java EE platform.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Bean验证是针对领域和值对象的约束验证解决方案。现在它支持方法级别的验证，并且与Java EE平台的其他部分有更好的集成。
- en: WebSocket API 1.0 is a new specification added to Java EE 7\. It allows the
    Java application to communicate with the HTML5 WebSocket clients.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: WebSocket API 1.0是添加到Java EE 7的新规范。它允许Java应用程序与HTML5 WebSocket客户端进行通信。
- en: 'Java EE 7 continues the theme that was started in the earlier editions of the
    platform: improvements for ease-of-development and allowing the developers to
    write POJOs.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7继续了平台早期版本中开始的主题：提高开发便利性，并允许开发者编写POJOs。
- en: Xentracker JavaServer Faces
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Xentracker JavaServer Faces
- en: 'Let''s move into the development mode now. We will look at a JSF example that
    I created for my earlier book. The project is called **XenTracker**. The code
    is available at [https://github.com/peterpilgrim/javaee7-developer-handbook](https://github.com/peterpilgrim/javaee7-developer-handbook).
    The following is the JSF view (`xentracker-basic/src/main/webapp/views/index.xhtml`):'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们进入开发模式。我们将查看我为之前书籍创建的JSF示例。项目被称为**XenTracker**。代码可在[https://github.com/peterpilgrim/javaee7-developer-handbook](https://github.com/peterpilgrim/javaee7-developer-handbook)找到。以下是一个JSF视图（`xentracker-basic/src/main/webapp/views/index.xhtml`）：
- en: '[PRE4]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: At first glance, this looks like standard HTML5; the specific JSF tags and the
    Expression Language syntax are not so obvious. The name of the file in the project
    is called `projectTaskList.xhtml`, which serves a big clue to the type of view
    this file represents. This view is actually a JSF Facelet template. The file type
    refers to an older XHTML standard, as sanctioned by the **World Wide Web Consortium**
    (**W3C**) after the creation of the HTML 4.01 standard. XHTML is the same as HTML4,
    but restricted by an XML schema and, therefore, is genuinely an XML document.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 初看之下，这看起来像是标准的HTML5；具体的JSF标签和表达式语言语法并不那么明显。项目中的文件名为`projectTaskList.xhtml`，这为该文件代表的视图类型提供了重要线索。实际上，这个视图是一个JSF
    Facelet模板。文件类型指的是HTML 4.01标准创建后，由**万维网联盟**（**W3C**）批准的较老XHTML标准。XHTML与HTML4相同，但受XML模式限制，因此真正是一个XML文档。
- en: In order to render any output from JSF, the specification stipulates the provision
    of a **Page Description Language** (**PDL**). It is possible to have more than
    one type of PDL. The standard PDL is a view called a Facelet view template. The
    Facelet framework was a separate open source API external to the JCP, but since
    JSF 2.0 it has been brought into the fold. Facelet templates are designed to be
    lightweight and work natively with the JSF framework. Facelets have implicit knowledge
    of the JSF lifecycle and have access to the UI components through expression language,
    and they provide decorators to standard HTML elements. The Facelets templating
    solution performs very well in servlet engines. It may eventually feature in its
    own specification for Java EE 8.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从JSF生成任何输出，规范规定了提供一种**页面描述语言**（**PDL**）。可能存在多种类型的PDL。标准PDL是一个称为Facelet视图模板的视图。Facelet框架最初是一个独立于JCP的开源API，但自从JSF
    2.0以来，它已经被纳入其中。Facelet模板被设计成轻量级，并且与JSF框架原生工作。Facelets对JSF生命周期有隐式了解，可以通过表达式语言访问UI组件，并为标准HTML元素提供装饰器。Facelets模板解决方案在servlet引擎中表现非常出色。它最终可能会在Java
    EE 8的规范中拥有自己的特性。
- en: The templating in the preceding example is illustrated by the specific Facelet
    tags, namely `<ui:define>` and `<ui:composition>`. Briefly, the `<ui:composition>`
    tag refers to a template view that defines the layout of the page. One can think
    of this as the master view. The `<ui:define>` tag defines the actual content,
    which will be inserted into the template to form the final page output. We will
    comprehensively tackle JSF and Facelets in later chapters of this book.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例中的模板通过特定的Facelet标签进行说明，即`<ui:define>`和`<ui:composition>`。简而言之，`<ui:composition>`标签指的是一个模板视图，它定义了页面的布局。可以将其视为主视图。`<ui:define>`标签定义了实际内容，这些内容将被插入到模板中，形成最终的页面输出。我们将在本书的后续章节中全面探讨JSF和Facelets。
- en: By inspecting the opening XML definition at the top of the view definition,
    we can see a few namespace declarations. The `xmlns:ui` namespace, as you have
    already seen, refers to the Facelet extensions. The `xmlns:f` namespace refers
    to the core JSF tags and `xmlns:h` namespace refers to the JSF components that
    render the HTML elements. You are warned not to expect a complete one-to-one match
    as you will understand later on. For instance, the `<h:outputText>` tag simply
    prints out the content; you can almost think of it as the echo function in PHP.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查视图定义顶部的打开 XML 定义，我们可以看到一些命名空间声明。`xmlns:ui` 命名空间，正如你已经看到的，指的是 Facelet 扩展。`xmlns:f`
    命名空间指的是核心 JSF 标签，而 `xmlns:h` 命名空间指的是渲染 HTML 元素的 JSF 组件。警告你，不要期望完全的一对一匹配，因为你将在后面理解。例如，`<h:outputText>`
    标签只是打印内容；你几乎可以将其视为 PHP 中的 echo 函数。
- en: The really observant among you will see that it is definitely possible to build
    modern websites with JSF. There is a `<div>` element in the markup, and yes, as
    you may have guessed correctly, Bootstrap CSS is definitely being used. It is
    important to stress that JSF is a server-side templating solution and a view technology.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在你们当中真正细心的观察者会看到，使用 JSF 建立现代网站是完全可能的。标记中有一个 `<div>` 元素，是的，正如你可能正确猜到的，Bootstrap
    CSS 确实被使用了。重要的是要强调 JSF 是一种服务器端模板解决方案和视图技术。
- en: 'Look at the following section again:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 重新查看以下部分：
- en: '[PRE5]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This is approximately the equivalent to this straight HTML5:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这大约等同于以下直接的 HTML5：
- en: '[PRE6]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'In JSF, the syntactic delimiters denote `Expressions: #{...}`. The expression
    language is parsed in the JSF runtime during the rendering phase of the lifecycle.
    We will discuss the life cycle in the following chapters.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在 JSF 中，语法分隔符表示 `表达式：#{...}`。表达式语言在 JSF 运行时在生命周期渲染阶段被解析。我们将在下一章讨论生命周期。
- en: The previous view is incomplete, because we are missing the tabular view component.
    Although HTML tables are frowned upon due to the layout of content of the web
    pages, tables are still extremely important for their original purpose, that is,
    to display tabular data.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的视图是不完整的，因为我们缺少表格视图组件。尽管由于网页内容的布局，HTML 表格不被看好，但表格对于其原始目的仍然极其重要，即显示表格数据。
- en: 'The following is the missing table view that should be inserted in the correct
    place:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在正确位置插入的缺失的表格视图：
- en: '[PRE7]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The preceding code exemplifies the JSF style of content. The `<h:form>` tag
    corresponds to a HTML Form element. The `<h:dataTable>` tag denotes the table
    component grid that renders the data from the managed JSF bean. The value attribute
    denotes the data that is retrieved from a server component named `taskListViewController`.
    This controller accesses the list collection of Task objects using the expression
    language, and translates it to the Java reflection invocation of `taskListViewController.getProjects().getTasks()`.
    It is worth noticing once more the Bootstrap CSS in the attribute `styleClass="table
    table-bordered"`.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码示例展示了 JSF 风格的内容。`<h:form>` 标签对应于 HTML 表单元素。`<h:dataTable>` 标签表示渲染来自管理 JSF
    实例的数据的表格组件网格。值属性表示从名为 `taskListViewController` 的服务器组件检索的数据。该控制器使用表达式语言访问任务对象的列表集合，并将其转换为
    `taskListViewController.getProjects().getTasks()` 的 Java 反射调用。再次值得注意的是属性 `styleClass="table
    table-bordered"` 中的 Bootstrap CSS。
- en: The `<h:dataTable>` JSF component essentially iterates over a Java Collection,
    array, iterator, or enumerator, sets the current element defined by the attribute
    `var`, and processes the content in its body. It builds an HTML table. The `<h:column>`
    tag declares the content in each column of the row and `<f:facet>` tag declares
    the content specifically to go into the table header rows.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`<h:dataTable>` JSF 组件本质上遍历 Java 集合、数组、迭代器或枚举器，设置由属性 `var` 定义的当前元素，并在其体中处理内容。它构建一个
    HTML 表格。`<h:column>` 标签声明行中的每一列的内容，而 `<f:facet>` 标签声明特定于放入表格表头行的内容。'
- en: The `<h:outputText>` tag is also flexible enough to accept another usual tag
    `<f:convertDateTime>`, which formats the particular data value into a date time
    format.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`<h:outputText>` 标签也足够灵活，可以接受另一个常用标签 `<f:convertDateTime>`，它将特定数据值格式化为日期时间格式。'
- en: Finally, we have the `h:commandLink` tag that renders an HTML anchor tag, which
    behaves like a form submit button. The `h:commandLink` tag is optionally associated
    with a backing bean, which in our case is the `taskListViewController`. Certain
    components of the JSF HTML tags like `h:dataTable` and `h:commandLink` are contained
    in an `h:form` tag in order to be processed correctly.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们有`h:commandLink`标签，它渲染一个HTML锚点标签，其行为类似于表单提交按钮。`h:commandLink`标签可以与后端bean关联，在我们的例子中是`taskListViewController`。JSF
    HTML标签的某些组件，如`h:dataTable`和`h:commandLink`，包含在`h:form`标签中，以便正确处理。
- en: Tip
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Bootstrap CSS ([http://getbootstrap.com](http://getbootstrap.com)) is a very
    popular CSS, component, and front-end framework for developing responsive websites.
    It is particularly suited for mobile by default projects, because it builds against
    a flexible and fluid grid system. The CSS and JavaScript are easily added to the
    web application; Bootstrap is genuinely a kick-starter for many projects.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap CSS ([http://getbootstrap.com](http://getbootstrap.com)) 是一个非常流行的CSS、组件和前端框架，用于开发响应式网站。它默认适用于移动项目，因为它基于一个灵活且流动的网格系统。CSS和JavaScript可以轻松添加到Web应用程序中；Bootstrap确实是许多项目的启动器。
- en: Application servers
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序服务器
- en: 'At the time of writing, there are several popular application servers that
    are certified as Java EE 7 compliant: GlassFish, WildFly, Payara, Cosminexus,
    and TMax Jeus 8\. The reference implementation for the entire umbrella specification
    is GlassFish 4.1 ([https://glassfish.java.net/](https://glassfish.java.net/)).
    In 2013, I devoted the entire sister book and source code example, *Java EE 7
    Developer Handbook*, to GlassFish, because it was the only server available. GlassFish
    is built on open source, there is a public issue tracker, many forums on various
    Java EE topics, and because Oracle supports the host and the repository of the
    source code, it works out of the box.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，有几个流行的应用程序服务器被认证为Java EE 7兼容：GlassFish、WildFly、Payara、Cosminexus和TMax
    Jeus 8。整个伞形规范参考实现是GlassFish 4.1 ([https://glassfish.java.net/](https://glassfish.java.net/))。在2013年，我专门为GlassFish撰写了姐妹书籍和源代码示例，即《Java
    EE 7开发者手册》，因为它是当时唯一可用的服务器。GlassFish基于开源，有一个公共问题跟踪器，许多关于Java EE主题的论坛，并且由于Oracle支持主机和源代码仓库，它可以直接使用。
- en: 'In order to be certified as a Java EE 7 application server, the vendor or open
    source provider must pass the Test Compatibility Kit, which guarantees a certification
    list of compliance ([http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html](http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html)).
    The code written only against Java EE 7 standard APIs must be able to run against
    a compliant server else the word *standard* wouldn''t hold any meaning. The basic
    principle of Java: write once run-everywhere, ought be achievable. The fly in
    the ointment is when the code relies on vendor-specific features that are not
    part of the standard. It is also worth pointing out that TCK is not free. In fact,
    I know a very good source of information, who mentioned the cost to be at least
    $250 K. Therefore, this barrier to entry is beyond the remit of the majority of
    open source projects or **Small & Medium Enterprises** (**SME**), without significant
    investment from angels or kick-starter funds.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成为Java EE 7应用程序服务器，供应商或开源提供者必须通过测试兼容性工具包（Test Compatibility Kit），这保证了符合性认证列表（[http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html](http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html)）。仅针对Java
    EE 7标准API编写的代码必须能够在符合性服务器上运行，否则“标准”这个词就失去了意义。Java的基本原则：一次编写，到处运行，应该是可以实现的。问题在于当代码依赖于标准之外的供应商特定功能时。也值得指出的是，TCK并非免费。事实上，我知道一个非常好的信息来源，它提到成本至少为250
    K美元。因此，这个入门障碍超出了大多数开源项目或**中小企业**（**SME**）的能力范围，除非有天使投资者或Kick-starter基金的重大投资。
- en: At the beginning of 2014, Oracle announced that it would be removing the commercial
    support for the GlassFish server. This news had the Java EE community up-in-arms
    about the future of the application server. Oracle clarified later that there
    was a roadmap for GlassFish 5, and it was still on the agenda to be the reference
    implementation for Java EE 8\. The database vendor and Java steward instead recommended
    the avenue of upgrading to Oracle WebLogic for production. In 2014, Oracle released
    WebLogic 12.1.3 with selected Java EE 7 compliant components.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 2014 年初，Oracle 宣布将停止对 GlassFish 服务器的商业支持。这一消息让 Java EE 社区对应用服务器的未来感到不安。Oracle
    后来澄清说，GlassFish 5 有一个路线图，它仍然是 Java EE 8 的参考实现计划之一。数据库供应商和 Java 管理员建议升级到 Oracle
    WebLogic 以用于生产。2014 年，Oracle 发布了带有选定的 Java EE 7 兼容组件的 WebLogic 12.1.3。
- en: 'WildFly 9 ([http://wildfly.org/](http://wildfly.org/)) is the next generation
    of application servers from Red Hat. The server features a modular architecture
    based on a new class loader infrastructure in an attempt to avoid the issue of
    conflicting dependencies between the third party JARs and the infrastructure within
    the server itself. There are two key benefits to WildFly: the new high performance
    HTTP server, which is called Undertow ([http://undertow.io/](http://undertow.io/))
    and the reduction of administration ports. The ports are 8080 for web traffic,
    Servlets, REST, and WebSocket endpoint and 9990 for server administration. With
    WildFly it is possible to invoke the EJB remote methods through the de facto HTTP
    port 8080, which adds some interesting possibilities for enterprise applications.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 9 ([http://wildfly.org/](http://wildfly.org/)) 是 Red Hat 公司下一代的应用服务器。该服务器采用基于新类加载器基础设施的模块化架构，旨在避免第三方
    JAR 与服务器内部基础设施之间的依赖冲突问题。WildFly 有两个关键优势：新的高性能 HTTP 服务器，称为 Undertow ([http://undertow.io/](http://undertow.io/))，以及管理端口的减少。端口
    8080 用于 Web 流量、Servlets、REST 和 WebSocket 终端，9990 用于服务器管理。使用 WildFly，可以通过事实上的 HTTP
    端口 8080 调用 EJB 远程方法，这为企业管理应用增加了许多有趣的可能性。
- en: The modular approach in WildFly 9 appears to be suitable for end sites that
    prefer to have a strict control over the deployment of their enterprise architecture.
    WildFly has a download option called the *core* distribution, which allows developers
    to configure the modules that they require in an application server runtime. The
    final benefit of WildFly is that it is the first Java EE 7 server that is compatible
    with Java SE 8 (Lambdas and default interfaces). Only GlassFish 4.1 releases are
    compatible with Java SE 8.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 9 中的模块化方法似乎适合那些希望对其企业架构部署有严格控制的终端站点。WildFly 有一个名为 *核心* 的下载选项，允许开发者在应用服务器运行时配置他们所需的模块。WildFly
    的最终优势是它是第一个与 Java SE 8 兼容的 Java EE 7 服务器（Lambdas 和默认接口）。只有 GlassFish 4.1 版本与 Java
    SE 8 兼容。
- en: After the debacle of the professional support for GlassFish, another corporation
    entered the space. C2B2 Consulting offered an open source adaptation of GlassFish
    called Payara Server ([http://payara.co.uk](http://payara.co.uk)) with 24/7 production
    support.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GlassFish 专业支持失败之后，另一家公司进入了这个领域。C2B2 咨询公司提供了一个名为 Payara Server ([http://payara.co.uk](http://payara.co.uk))
    的开源 GlassFish 版本，提供 24/7 的生产支持。
- en: I should quickly mention one other server that is gaining track with the server-side
    Java community and that is worth keeping an eye on in the near future. The Apache
    Software Foundation has an open source project called Tom EE ([http://tomee.apache.org/](http://tomee.apache.org/)).
    Tom EE (pronounced *Tommy*) is, essentially, Apache Tomcat 7 with additional extensions,
    which are already configured, to support JSF, JPA JAX-RS, CDI, and EJB. David
    Blevins, a popular speaker and an ASF committer, was the founder of the Tom EE
    project. At the time of writing, Tom EE is only certified against Java EE 6 Web
    Profile; however, there are plans to add support to Java EE 7\. Business stakeholders
    can obtain commercial and production support for Tom EE through vendors like Tomi
    Tribe ([http://www.tomitribe.com/](http://www.tomitribe.com/)).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我应该快速提及其他一个正在服务器端 Java 社区中崭露头角的服务器，这也是未来值得关注的。Apache 软件基金会有一个名为 Tom EE ([http://tomee.apache.org/](http://tomee.apache.org/))
    的开源项目。Tom EE（发音为 *Tommy*）本质上是一个带有额外扩展的 Apache Tomcat 7，这些扩展已经配置好以支持 JSF、JPA JAX-RS、CDI
    和 EJB。David Blevins，一位受欢迎的演讲者和 ASF 提交者，是 Tom EE 项目的创始人。在撰写本文时，Tom EE 仅针对 Java
    EE 6 Web Profile 进行认证；然而，有计划添加对 Java EE 7 的支持。企业利益相关者可以通过像 Tomi Tribe ([http://www.tomitribe.com/](http://www.tomitribe.com/))
    这样的供应商获得 Tom EE 的商业和生产支持。
- en: Since GlassFish, WildFly, and Payara are the only application servers certified
    as Java EE 7-compliant at the time of writing, we will concentrate only on them
    for the rest of this book. The source code examples work with both these servers.
    Wherever necessary, we will point out the differences and explain the features
    appropriately. Let us now continue our journey into the digital web with Java
    EE 7.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 由于GlassFish、WildFly和Payara是当时唯一获得Java EE 7兼容性认证的应用服务器，因此我们将在这本书的剩余部分只关注它们。源代码示例与这两个服务器都兼容。在必要时，我们将指出差异并适当地解释功能。现在让我们继续我们的Java
    EE 7数字网络之旅。
- en: Summary
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed the role of the digital worker, that is, you,
    the engineer and how you fit into the new marketing role as a creative person.
    We looked at the skills and the tool chain set that is certainly expected in the
    years 2015 and 2016\. We covered how the Java platform and JVM fit into this picture.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了数字工人的角色，也就是你，作为工程师，以及你如何适应作为创意人员的新的市场营销角色。我们探讨了在2015年和2016年预期所需的技能和工具链集合。我们介绍了Java平台和JVM如何融入这幅画面。
- en: Being a Digital Java EE 7 worker is more than just developing the server-side
    Java code; you are expected to understand JavaScript programming at an elementary
    level. Some of you may already have basic JavaScript knowledge and some others
    will understand a lot more about programming in the client space. JavaScript,
    for all its warts and mishaps, is a professional language that deserves respect,
    and we covered some of the frameworks that you are expected to know. Whilst this
    book does not teach you JavaScript and is aimed at Java EE development, I recommend
    that you brush up on your skills apropos module patterns and applying advanced
    libraries.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 成为数字Java EE 7工人不仅仅是开发服务器端Java代码；你被期望在基础层面上理解JavaScript编程。你们中的一些人可能已经具备基本的JavaScript知识，而其他人可能对客户端空间的编程了解得更多。尽管JavaScript存在许多缺陷和失误，但它是一种值得尊重的专业语言，我们介绍了一些你们预期应该了解的框架。虽然这本书并不教授JavaScript，而是针对Java
    EE开发，但我建议你们复习一下关于模块模式和高级库应用方面的技能。
- en: In this chapter, we looked at the Java EE 7 architecture and the specifications
    that are part of the platform. Finally, we pored over the code of a simple JavaServer
    Faces example. In particular, we inspected a Facelet view code. We noticed that
    much of the view resembles standard HTML.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了Java EE 7架构和平台的一部分规范。最后，我们仔细审查了一个简单的JavaServer Faces示例的代码。特别是，我们检查了Facelet视图代码。我们注意到视图的大部分内容与标准HTML相似。
- en: In the upcoming chapters, we will delve deeply into the JSF and build a simple
    **Create Retrieve Update Delete** (**CRUD**) example. We will be generating the
    example in a couple of different ways. As the saying goes, we have to crawl before
    we can walk, and walk before we can run. Our crawling is over, now let's starting
    walking.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将深入探讨JSF，并构建一个简单的**创建、检索、更新、删除**（**CRUD**）示例。我们将以几种不同的方式生成这个示例。正如俗话所说，我们必须先爬行，然后才能走路，然后才能奔跑。我们的爬行已经结束，现在让我们开始走路。
- en: Exercises
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: 'In order to aid those in the field of education: students, teachers, and lecturers,
    questions have been provided at the end of each chapter in the book.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助教育领域的人士：学生、教师和讲师，我们在本书每一章的末尾都提供了问题。
- en: Grab a sheet of paper; outline the core Java EE 7 specifications, which include
    the Servlets CDI, EJB, JPA, JMS, JAX-RS, and JSF. On a scale of 1-10 (1 being
    novice and 10 expert) ask yourself how much do you honestly know?
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拿一张纸；概述核心Java EE 7规范，包括Servlets CDI、EJB、JPA、JMS、JAX-RS和JSF。在1-10（1为新手，10为专家）的尺度上，问问自己你诚实地知道多少？
- en: When was the last time you looked at Java EE? If you still think of enterprise
    development as the term J2EE, then you definitely need to take a look at the book,
    *Java EE Developer Handbook*. Make a note of the specifications that you do not
    know quite so well and plan to learn them.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你上次查看Java EE是什么时候？如果你仍然认为企业开发就是J2EE这个术语，那么你绝对需要看看这本书，《Java EE开发者手册》。记下你不太熟悉的规范，并计划学习它们。
- en: Test your understanding of the Java EE platform by matching the parts of the
    specification to a recent web application that you have been involved in. Describe
    how each specification can provide benefits, including productivity gains.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将规范与您最近参与的一个Web应用程序相匹配来测试你对Java EE平台的了解。描述每个规范如何提供好处，包括生产力的提升。
- en: Now switch to the other side and dissent against Java EE. Some voices in the
    community are for and some are decidedly against standardization. The detractors
    say that the standardization process is too slow for a world of need and innovation.
    What do you think are the potential pitfalls of relying on the Java EE platform?
    Think of areas beyond software development, such as education, training, hiring,
    and the wider community. What would be the ideal state of Java where you can do
    what you like and without responsibility?
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在转到另一边，反对Java EE。社区中有一些声音支持标准化，而另一些则坚决反对。批评者说，标准化过程对于需要和创新的世界来说太慢了。你认为依赖Java
    EE平台可能存在哪些潜在的风险？考虑软件开发以外的领域，如教育、培训、招聘和更广泛的社区。Java的理想状态是什么，你可以做你喜欢的事情，而不必承担责任？
- en: You probably already have a favorite website, which you visit regularly, perhaps
    everyday. Draw or outline the basic (high level) information architecture for
    it. Chances are that your favorite website has a lot of rich content and has been
    around for a long time. What changes have you noticed with the information architecture
    that you know today?
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能已经有一个喜欢的网站，你经常访问，也许每天都会访问。为它绘制或概述其基本（高级）信息架构。你的最爱网站可能拥有大量丰富的内容，并且存在了很长时间。你注意到了信息架构的哪些变化，基于你现在的了解？
- en: How good is your JavaScript knowledge? On a scale of 1 (beginner) and 10 (expert),
    how do you rate it as a skill? How does your JavaScript compare against your Java
    programming?
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的JavaScript知识水平如何？在1（初学者）到10（专家）的评分尺度上，你如何评估你的技能？你的JavaScript与你的Java编程相比如何？
- en: Did you know that you can examine HTML, CSS, and JavaScript dynamically from
    a modern web browser with Developer Tools (Chrome Developer Tools [https://developer.chrome.com/devtools](https://developer.chrome.com/devtools)
    or Christopher Pederick's Web Developer Tools [http://chrispederick.com/work/web-developer/](http://chrispederick.com/work/web-developer/)
    or similar)? Have you ever learnt to debug JavaScript through these tools? Why
    not learn to simply add a break point to the code? How about using the inspector
    to examine the computed CSS?
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你知道你可以使用现代网络浏览器的开发者工具（Chrome开发者工具[https://developer.chrome.com/devtools](https://developer.chrome.com/devtools)或Christopher
    Pederick的Web开发者工具[http://chrispederick.com/work/web-developer/](http://chrispederick.com/work/web-developer/)或类似工具）动态地检查HTML、CSS和JavaScript吗？你是否曾通过这些工具学习过调试JavaScript？为什么不学习简单地给代码添加断点呢？使用检查器检查计算出的CSS怎么样？
- en: Using the distributed version control system, Git, to clone the book source
    code from GitHub ([http://github.com/peterpilgrim/digitaljavaee7](http://github.com/peterpilgrim/digitaljavaee7)),
    and examine the code around the simple JSF example given in this chapter. Download
    and setup the GlassFish 4.1 ([https://glassfish.java.net/](https://glassfish.java.net/))
    or WildFly 9 ([http://wildfly.org/](http://wildfly.org/)) application servers
    and get the first examples running.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用分布式版本控制系统Git，从GitHub（[http://github.com/peterpilgrim/digitaljavaee7](http://github.com/peterpilgrim/digitaljavaee7)）克隆本书的源代码，并检查本章给出的简单JSF示例周围的代码。下载并设置GlassFish
    4.1（[https://glassfish.java.net/](https://glassfish.java.net/)）或WildFly 9（[http://wildfly.org/](http://wildfly.org/)）应用服务器，并运行第一个示例。
- en: How good are your image-editing skills in web design (using a commercial application
    Adobe Photoshop or Firework or Xara Edit)? Do you partake in this activity at
    work or at home, or do you delegate this effort to another person, like a creative
    designer? Would it benefit your wider career plans to have better knowledge in
    this area? Ask yourself, would it make you be a better digital worker?
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网页设计中（使用商业应用程序Adobe Photoshop或Firework或Xara Edit）你的图像编辑技能如何？你在工作中或在家里参与这项活动吗，还是将这项工作委托给另一个人，比如创意设计师？在这个领域拥有更好的知识是否会对你的更广泛的职业规划有所帮助？问问自己，这会让你成为一个更好的数字工作者吗？
- en: The digital teams practicing Agile software development tend to work with the
    stakeholders. It they are lucky, they are in direct contact with the stakeholder.
    The stakeholder is the customer, a representative of the business end users, to
    which these teams are delivering software. Have you ever had conversations directly
    with the stakeholder(s)? What was the outcome of these discussions? How did they
    go? Did you ever wish to be more involved? Did you ever feel like running away?
    How could your efforts in these talks have been better, retrospectively? Put yourself
    in your stakeholder's shoes to understand how he perceives you.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实践敏捷软件开发数字团队的往往与利益相关者合作。如果他们很幸运，他们能与利益相关者直接接触。利益相关者是客户，是业务终端用户的代表，这些团队正是向他们交付软件的。您是否曾直接与利益相关者（们）进行过对话？这些讨论的结果如何？它们是如何进行的？您是否曾希望更加参与其中？您是否曾感到想要逃避？回顾过去，您在这些谈话中的努力如何才能做得更好？试着站在利益相关者的角度，理解他如何看待您。
