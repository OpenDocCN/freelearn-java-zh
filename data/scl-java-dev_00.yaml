- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'When I tell people around me that I now program in Scala rather than Java,
    I often get the question, "So, in simple words, what is the main advantage of
    using Scala compared to Java?" I tend to respond with this: "With Scala, you reason
    and program closer to the domain, closer to plain English". **Raising the level
    of abstraction** is often the terminology employed to describe programs in a more
    readable and natural way for humans to understand rather than the zeros and ones
    understood by computers.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当我告诉周围的人我现在用Scala编程而不是Java时，我经常被问到，“那么，用简单的话说，使用Scala与Java相比的主要优势是什么？”我倾向于这样回答：“使用Scala，你更接近领域，更接近普通的英语”。**提高抽象级别**通常是用来描述程序以便人类以更可读和自然的方式理解，而不是计算机理解的零和一。
- en: 'As computer systems that are encountered in telecom, manufacturing or financial
    applications mature and grow, different forms of complexity tend to emerge, which
    are as follows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 随着在电信、制造或金融应用中遇到的计算机系统成熟和增长，不同形式的复杂性往往会出现，具体如下：
- en: Complexity due to the addition of supported features, for example, the variety
    of contract alternatives in an insurance system or the introduction of complicated
    algorithms to solve new challenges in our evolving society
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于添加支持的功能而导致的复杂性，例如，在保险系统中合同替代方案的多样性，或者在我们的不断发展的社会中引入复杂的算法来解决新的挑战
- en: Complexity to offset the limitations of technologies; for instance, making a
    system distributed to handle larger loads or improve reliability and response
    time
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了弥补技术的局限性而产生的复杂性；例如，使系统分布式以处理更大的负载或提高可靠性和响应时间
- en: Accidental complexity, which is introduced because of factors other than the
    problem at stake, such as integration between legacy systems and not really compatible
    technologies, short-term workarounds to reach the consumer market in a quicker
    way, or misunderstanding how a large system is designed as a whole when many resources
    with different backgrounds and styles are contributing in a short period of time
    to a large code base
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 意外复杂性，这是由于除了问题本身以外的因素引入的，例如，旧系统之间的集成以及实际上不兼容的技术，为了更快地进入消费者市场而采取的短期解决方案，或者当许多具有不同背景和风格的人在短时间内向大型代码库贡献时，对整个大型系统设计的误解
- en: The third complexity is clearly unwanted and should be reduced to a minimum
    if not eliminated, whereas the other two should remain manageable. Scala tackles
    all of them, and the complexity of the business domain is something that will
    be manageable only if a system can be described in code as if it was described
    in well-written English.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第三种复杂性显然是不受欢迎的，应该减少到最低限度，如果可能的话，应该消除，而其他两种应该保持可管理。Scala处理所有这些，只有当系统可以用代码描述得像用写得很好的英语描述一样时，业务领域的复杂性才能得到管理。
- en: 'In the past few years, the ability of many languages to express behaviors in
    a more concise way than the traditional object-oriented way is largely due to
    the increasing popularity of **functional programming** (**FP**), a paradigm that
    has been around for a very long time but until recently thought of as a competitor
    to the so-called imperative programming languages such as C or Java. Michael Feathers
    nicely outlined the apparent duality between the two in the following statement:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年中，许多语言能够以比传统的面向对象方式更简洁的方式表达行为，这很大程度上归因于**函数式编程**（**FP**）的日益流行，这是一种存在了很长时间的范例，但直到最近才被认为是与所谓的命令式编程语言（如C或Java）的竞争对手。Michael
    Feathers在以下声明中很好地概述了两者之间的明显二分法：
- en: '"OO makes code understandable by encapsulating moving parts. FP makes code
    understandable by minimizing moving parts."'
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"OO通过封装移动部分使代码易于理解。FP通过最小化移动部分使代码易于理解。"'
- en: The former focuses on breaking a large system into smaller, reusable parts.
    These parts are easy to reason about as they are modeled according to real-life
    objects. They use interfaces between them and are meant to encapsulate a mutating
    state. The latter emphasizes on the combination of functions that have ideally
    no side effects. It means that their result depends only on their input arguments,
    leading to minimizing or removing a mutating state in a program.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 前者侧重于将大型系统分解成更小、可重用的部分。这些部分容易推理，因为它们是根据现实生活中的对象建模的。它们之间使用接口，并旨在封装可变状态。后者强调函数的组合，这些函数理想上没有副作用。这意味着它们的结果只取决于它们的输入参数，导致在程序中最小化或消除可变状态。
- en: The declarative nature of FP, supported by Scala, aims at writing code to express
    "what is to be done" rather than "how to do it". Moreover, the FP approach tends
    to make algorithms more concise by composing (combining functions together), whereas
    the imperative approach tends to introduce side effects, that is, changes in the
    program state that will make it more difficult to see the algorithm, in its whole,
    in a concise way.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由Scala支持的FP（函数式编程）的声明性本质旨在编写代码来表达“要做什么”而不是“如何做”。此外，FP方法倾向于通过组合（将函数组合在一起）使算法更加简洁，而命令式方法则倾向于引入副作用，即程序状态的变化，这会使整个算法难以以简洁的方式呈现。
- en: This book will show Java developers that Scala is a significant yet natural
    evolution from Java by reasoning at a higher level of abstraction. Making the
    transition should ultimately lead to a more robust, maintainable, and fun software.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将通过更高层次的抽象推理向Java开发者展示Scala是从Java的一个重要且自然的演变。这种过渡最终将导致更健壮、可维护和有趣的软件。
- en: The intent of this book is not so much about exploring the design or deep features
    of the language as well as its exhaustive syntax; there are already a number of
    excellent books about the Scala language, notably by the creator of the language
    himself, Martin Odersky, and people working with him at Typesafe.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目的并不仅仅在于探索语言的架构或深入特性，以及其详尽的语法；关于Scala语言的优秀书籍已经有很多，尤其是由语言创造者马丁·奥德斯基本人以及与他一起在Typesafe工作的人所写。
- en: Our aim is to concentrate on helping current Java developers to get started
    and feel comfortable using the language, and to make their daily job more productive
    and fun.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目的是专注于帮助当前Java开发者开始使用Scala，并让他们在使用语言时感到舒适，使他们的日常工作更加高效和有趣。
- en: What this book covers
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](ch01.html "Chapter 1. Programming Interactively within Your Project"),
    *Programming Interactively within Your Project*, provides a short introduction
    about the **JVM** (**Java Virtual Machine**) and some of the key features that
    have made Java successful. We will then start getting our hands dirty and experiment
    with the Scala **REPL** (short for, **Read Eval Print Loop**), a powerful tool
    to program interactively. We will introduce some of the powerful constructs of
    Scala that make programming not only enjoyable but also intuitive and productive.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章。在项目中交互式编程"), *在项目中交互式编程*，提供了关于**JVM**（Java虚拟机）的简要介绍以及一些使Java成功的关键特性。然后我们将开始动手实验，使用Scala
    **REPL**（即**读取-评估-打印循环**），这是一个强大的交互式编程工具。我们将介绍Scala的一些强大构造，这些构造不仅使编程变得愉快，而且直观和高效。'
- en: '[Chapter 2](ch02.html "Chapter 2. Code Integration"), *Code Integration*, is
    about making Scala and Java code collaborate under the same code base. Topics
    of interest in this chapter are interoperability between Java and Scala collections,
    and wrapping existing Java libraries with Scala. Moreover, we will touch on the
    topic of coding style, in particular, by comparing the well-established Java coding
    best practices to the more recent Scala guidelines.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。代码集成"), *代码集成*，是关于在相同的代码库下使Scala和Java代码协作。本章感兴趣的话题包括Java和Scala集合之间的互操作性，以及用Scala包装现有的Java库。此外，我们还将涉及编码风格的话题，特别是通过比较已确立的Java编码最佳实践与较新的Scala指南。'
- en: '[Chapter 3](ch03.html "Chapter 3. Understanding the Scala Ecosystem"), *Understanding
    the Scala Ecosystem*, helps you to know the Scala development ecosystem and its
    surrounding tools, most of which are being more or less inherited from Java. In
    particular, Java frameworks such as Maven, and IDEs such as Eclipse, cannot be
    overlooked. In addition to the essential elements of the development cycle, we
    will cover Scala-specific tools such as SBT, Scala Worksheets, and the introduction
    of Typesafe''s Activator and its templates.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章。理解Scala生态系统"), *理解Scala生态系统*，帮助您了解Scala开发生态系统及其周围工具，其中大部分是从Java继承而来的。特别是Java框架如Maven和IDE如Eclipse不容忽视。除了开发周期的基本元素外，我们还将涵盖Scala特定的工具，如SBT、Scala
    Worksheets以及Typesafe的Activator及其模板的介绍。'
- en: '[Chapter 4](ch04.html "Chapter 4. Testing Tools"), *Testing Tools*, is a follow-up
    on the essential tools of a Scala developer, focusing on reviewing most of the
    useful tools for unit, integration, and functional testing of test data as well
    automated property-based testing.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。测试工具"), *测试工具*，是对Scala开发者基本工具的后续探讨，重点关注审查大多数用于单元、集成和功能测试测试数据的实用工具，以及基于属性的自动化测试。'
- en: '[Chapter 5](ch05.html "Chapter 5. Getting Started with the Play Framework"),
    *Getting Started with the Play Framework*, will give you a concrete introduction
    to the Play Framework, where we will show you some of the cool features of Play
    that make one want to migrate from a more traditional servlet/J2EE model.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章。Play框架入门"), *Play框架入门*，将为您提供一个具体的Play框架介绍，我们将向您展示Play的一些酷炫特性，这些特性使得人们想要从更传统的servlet/J2EE模型迁移过来。'
- en: '[Chapter 6](ch06.html "Chapter 6. Database Access and the Future of ORM"),
    *Database Access and the Future of ORM*, covers tackling the persistence of data
    in relational databases, whether you want to reuse well-established technologies
    such as JPA/Hibernate, or move to more innovative yet promising alternatives such
    as **SLICK** (**Scala Language-Integration Connection Kit**), an interesting alternative
    to traditional ORM merely based on the power of the Scala language. Moreover,
    we will see how to reverse-engineer the existing relational databases into Play
    CRUD applications as a starting point in migrating Java projects.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章。数据库访问和ORM的未来"), *数据库访问和ORM的未来*，涵盖了处理关系数据库中数据持久化的方法，无论您是想重用JPA/Hibernate等成熟技术，还是转向更创新且前景广阔的替代方案，如**SLICK**（**Scala语言集成连接套件**），这是基于Scala语言力量的一种有趣的ORM替代方案。此外，我们将看到如何将现有的关系数据库逆向工程为Play
    CRUD应用程序，作为迁移Java项目的起点。'
- en: '[Chapter 7](ch07.html "Chapter 7. Working with Integration and Web Services"),
    *Working with Integration and Web Services*, covers technologies that are found
    everywhere in today''s Java development. In this chapter, we will explore how
    integrating with the external systems applies to the Scala world and what the
    benefits are. Topics included in this chapter relate to Web Services through SOAP
    XML, REST, and JSON.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章。与集成和Web服务协同工作"), *与集成和Web服务协同工作*，涵盖了在当今Java开发中无处不在的技术。在本章中，我们将探讨如何将外部系统集成应用到Scala世界中以及其带来的好处。本章包含的主题与Web服务通过SOAP
    XML、REST和JSON相关。'
- en: '[Chapter 8](ch08.html "Chapter 8. Essential Properties of Modern Applications
    – Asynchrony and Concurrency"), *Essential Properties of Modern Applications –
    Asynchrony and Concurrency*, refers to two aspects of scalable applications''
    development. To achieve better performance, software projects are often encouraged
    to introduce asynchronous invocations and concurrent code. Through this chapter,
    we will show that the more functional side of Scala can make this complexity more
    manageable and maintainable. We will also introduce the Akka framework, a toolkit
    to simplify the development of concurrent applications.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章。现代应用的基本特性 - 异步和并发"), *现代应用的基本特性 - 异步和并发*，涉及可扩展应用开发的两方面。为了获得更好的性能，软件项目通常鼓励引入异步调用和并发代码。通过本章，我们将展示Scala的更多功能性如何使这种复杂性更加可管理和可维护。我们还将介绍Akka框架，这是一个用于简化并发应用程序开发的工具包。'
- en: '[Chapter 9](ch09.html "Chapter 9. Building Reactive Web Applications"), *Building
    Reactive Web Applications*, takes the previous chapter one step further and introduces
    a new class of applications that has emerged in the market: reactive applications.
    They are characterized by their interactivity, the ability to push information
    to end users, elasticity to adapt to changes in load, and the ability to recover
    from failures. The aim of this chapter is to build such an app in Play using concepts
    learned throughout the book as well as emerging technologies such as WebSockets.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。构建响应式Web应用"), *构建响应式Web应用*，在上一章的基础上更进一步，介绍了市场上出现的一种新类型的应用：响应式应用。它们的特点是交互性、能够推送信息给最终用户、弹性适应负载变化的能力以及从故障中恢复的能力。本章的目标是使用本书学到的概念以及新兴技术如WebSockets在Play中构建这样的应用。'
- en: '[Chapter 10](ch10.html "Chapter 10. Scala Goodies"), *Scala Goodies*, concludes
    this book with some perspectives on the future of web development. For example,
    Java developers are more and more exposed to JavaScript on the client side, whether
    they like it or not. Another example is the emergence of **Domain Specific Languages**
    (**DSLs**), a nontrivial task to achieve in Java.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](ch10.html "第10章。Scala精选"), *Scala精选*，以对Web开发未来的某些观点结束本书。例如，Java开发者越来越多地接触到客户端的JavaScript，无论他们是否喜欢。另一个例子是**领域特定语言**（**DSLs**）的出现，在Java中实现这一任务并不简单。'
- en: What you need for this book
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要为此书准备
- en: As Scala runs on the Java Platform **JVM** (short for Java Virtual Machine),
    you will be able to write and execute the code provided in the book on any computer
    that supports the Java standard edition. To set up the tools that you need, refer
    to [Chapter 1](ch01.html "Chapter 1. Programming Interactively within Your Project"),
    *Programming Interactively within Your Project* and [Chapter 3](ch03.html "Chapter 3. Understanding
    the Scala Ecosystem"), *Understanding the Scala Ecosystem*
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Scala运行在Java平台**JVM**（Java虚拟机）上，你可以在任何支持Java标准版的计算机上编写和执行书中提供的代码。要设置所需的工具，请参阅[第1章](ch01.html
    "第1章. 在项目中交互式编程")，*在项目中交互式编程*和[第3章](ch03.html "第3章. 理解Scala生态系统")，*理解Scala生态系统*
- en: Who this book is for
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向对象
- en: This book is obviously targeted mostly for developers. We want to help Java
    programmers to get started and feel comfortable with both the syntax of the language
    and the tools. We will achieve this by exploring progressively some of the new
    concepts brought by Scala, in particular, how to unify the best of Object-Oriented
    and functional programming without giving away any of the established and mature
    technologies built around Java for the past fifteen years.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书显然主要针对开发者。我们希望帮助Java程序员入门，并使他们能够舒适地使用该语言的语法和工具。我们将通过逐步探索Scala带来的某些新概念来实现这一点，特别是如何在不放弃过去十五年来围绕Java建立的所有成熟技术的情况下，统一面向对象和函数式编程的最佳实践。
- en: Conventions
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，您将找到许多不同风格的文本，以区分不同类型的信息。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词汇、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称如下所示：“我们可以通过使用`include`指令来包含其他上下文。”
- en: 'A block of code is set as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块如下设置：
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块中特定部分的注意时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下编写：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Out of curiosity, you may click on the **Code view & Open in IDE** tab and then
    on the **Run** tab."'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要词汇**以粗体显示。屏幕上显示的词汇，例如在菜单或对话框中，在文本中如下显示：“出于好奇，您可以点击**代码视图 & 在IDE中打开**标签，然后点击**运行**标签。”'
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要注意事项以如下框的形式出现。
- en: Tip
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Tips and tricks appear like this.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士和技巧以如下形式出现。
- en: Reader feedback
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。请告诉我们您对这本书的看法——您喜欢什么或可能不喜欢什么。读者反馈对我们开发您真正能从中获得最大收益的标题非常重要。
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如要向我们发送一般反馈，请简单地将电子邮件发送到`<feedback@packtpub.com>`，并在邮件主题中提及书名。
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在某个主题上具有专业知识，并且您对撰写或为书籍做出贡献感兴趣，请参阅我们的作者指南[www.packtpub.com/authors](http://www.packtpub.com/authors)。
- en: Customer support
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经是Packt图书的骄傲拥有者，我们有一些事情可以帮助您从您的购买中获得最大收益。
- en: Downloading the example code
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)下载您购买的所有Packt书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: Errata
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you would report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **errata** **submission** **form** link,
    and entering the details of your errata. Once your errata are verified, your submission
    will be accepted and the errata will be uploaded on our website, or added to any
    list of existing errata, under the Errata section of that title. Any existing
    errata can be viewed by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在我们的某本书中发现错误——可能是文本或代码中的错误——如果您能向我们报告这一点，我们将不胜感激。通过这样做，您可以节省其他读者的挫败感，并帮助我们改进本书的后续版本。如果您发现任何勘误，请通过访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击**勘误****提交****表单**链接，并输入您的勘误详情来报告。一旦您的勘误得到验证，您的提交将被接受，勘误将被上传到我们的网站，或添加到该标题的勘误部分下的现有勘误列表中。任何现有勘误都可以通过从[http://www.packtpub.com/support](http://www.packtpub.com/support)选择您的标题来查看。
- en: Piracy
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyright material on the Internet is an ongoing problem across all
    media. At Packt, we take the protection of our copyright and licenses very seriously.
    If you come across any illegal copies of our works, in any form, on the Internet,
    please provide us with the location address or website name immediately so that
    we can pursue a remedy.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上对版权材料的盗版是一个跨所有媒体的持续问题。在Packt，我们非常重视我们版权和许可证的保护。如果您在互联网上发现我们作品的任何非法副本，无论形式如何，请立即提供位置地址或网站名称，以便我们可以寻求补救措施。
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过链接[<mailto:copyright@packtpub.com>](mailto:copyright@packtpub.com)与我们联系，并提供涉嫌盗版材料的链接。
- en: We appreciate your help in protecting our authors, and our ability to bring
    you valuable content.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您在保护我们作者以及为我们提供有价值内容的能力方面的帮助。
- en: Questions
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题和建议
- en: You can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    if you are having a problem with any aspect of the book, and we will do our best
    to address it.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在本书的任何方面遇到问题，请通过链接[<mailto:questions@packtpub.com>](mailto:questions@packtpub.com)与我们联系，我们将尽力解决。
