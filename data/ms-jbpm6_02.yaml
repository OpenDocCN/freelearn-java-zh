- en: Chapter 2. Building Your First BPM Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 章. 构建您的第一个 BPM 应用程序
- en: 'Let us now build our first BPM application by using the jBPM tool stack. This
    chapter will guide you through the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在使用 jBPM 工具栈构建我们的第一个 BPM 应用程序。本章将指导您了解以下主题：
- en: Installing the jBPM tool stack
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 jBPM 工具栈
- en: Hacking the default installation configurations
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 破解默认安装配置
- en: Modeling and deploying a jBPM project
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建模和部署 jBPM 项目
- en: Embedding jBPM inside a standalone Java project
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在独立 Java 项目中嵌入 jBPM
- en: A step towards the goal of this book, the chapter gives you the hands-on flexibility
    of the jBPM tool stack and provides information on hacking the configuration and
    playing around.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 向本书目标迈进的一步，本章为您提供了 jBPM 工具栈的动手灵活性，并提供了有关破解配置和探索的信息。
- en: Installing the jBPM tool stack
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 jBPM 工具栈
- en: A jBPM release comes with an installation zip file, which contains the essentials
    for the jBPM environment and tools for building a demo runtime for easy hands-on
    management of the jBPM runtime environment.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM 发布版附带一个安装 zip 文件，其中包含 jBPM 环境的基本要素和用于构建演示运行时的工具，以便轻松手动管理 jBPM 运行时环境。
- en: 'For downloading jBPM:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 jBPM：
- en: Go to [http://jboss.org/jbpm](http://jboss.org/jbpm) | **Download** | **Download
    jBPM 6.2.0.Final** | **jbpm-6.2.0.Final-installer-full.zip**.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [http://jboss.org/jbpm](http://jboss.org/jbpm) | **下载** | **下载 jBPM 6.2.0.Final**
    | **jbpm-6.2.0.Final-installer-full.zip**.
- en: Use the latest stable version. The content of the book follows the 6.2.0 release.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用最新稳定版本。本书内容遵循 6.2.0 版本的发布。
- en: Unzip and extract the installer content and you will find an `install.html`
    file that contains the helper documentation for installing a demo jBPM runtime
    with inbuilt projects.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压并提取安装程序内容，您将找到一个 `install.html` 文件，其中包含用于安装具有内置项目的演示 jBPM 运行的辅助文档。
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: jBPM installation needs JDK 1.6+ to be installed and set as `JAVA_HOME` and
    the tooling for installation is done using ANT scripts (ANT version 1.7+).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM 安装需要安装 JDK 1.6+ 并将其设置为 `JAVA_HOME`，安装工具使用 ANT 脚本（ANT 版本 1.7+）完成。
- en: The tooling for installation is basically an ANT script, which is a straightforward
    method for installation and can be customized easily. To operate the tooling,
    the ANT script consists of the ANT targets that act as the commands for the tooling.
    The following figure will make it easy for you to understand the relevant ANT
    targets available in the script. Each box represents an ANT target and helps you
    to manage the environment. The basic targets available are for installing, starting,
    stopping, and cleaning the environment.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 安装工具基本上是一个 ANT 脚本，这是一种简单的安装方法，并且可以轻松定制。要操作工具，ANT 脚本由作为工具命令的 ANT 目标组成。以下图将使您更容易理解脚本中可用的相关
    ANT 目标。每个框代表一个 ANT 目标，并帮助您管理环境。基本目标包括安装、启动、停止和清理环境。
- en: 'To run the `ANT` target, install ANT 1.7+, navigate to the installer folder
    (by using the shell or the command line tool available in your OS), and run the
    target by using the following command:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行 `ANT` 目标，请安装 ANT 1.7+，导航到安装文件夹（通过使用您的操作系统中的 shell 或命令行工具），然后使用以下命令运行目标：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books that you have purchased. If you purchased this
    book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 [http://www.packtpub.com](http://www.packtpub.com) 下载示例代码文件，该网站包含您购买的所有
    Packt 出版物的示例代码。如果您在其他地方购买了这本书，您可以访问 [http://www.packtpub.com/support](http://www.packtpub.com/support)
    并注册，以便将文件直接通过电子邮件发送给您。
- en: '![Installing the jBPM tool stack](img/9578OS_02_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![安装 jBPM 工具栈](img/9578OS_02_01.jpg)'
- en: 'The jBPM installer comes with a default demo environment, which uses a basic
    H2 database as its persistence storage. The persistence of jBPM is done using
    Hibernate; this makes it possible for jBPM to support an array of popular databases
    including the databases in the following list:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM 安装程序附带一个默认的演示环境，它使用基本的 H2 数据库作为其持久化存储。jBPM 的持久化使用 Hibernate 完成；这使得 jBPM
    能够支持包括以下列表中的数据库在内的多种流行数据库：
- en: Note
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Hibernate or Hibernate ORM is an object relational mapping framework and is
    used by jBPM to persist data to relation databases. For more details, see [http://hibernate.org/](http://hibernate.org/).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Hibernate 或 Hibernate ORM 是一个对象关系映射框架，并被 jBPM 用于将数据持久化到关系数据库。更多详情，请参阅 [http://hibernate.org/](http://hibernate.org/).
- en: '| Databases Supported | Details |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 支持的数据库 | 详情 |'
- en: '| --- | --- |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| DB2 | [http://www-01.ibm.com/software/in/data/db2/](http://www-01.ibm.com/software/in/data/db2/)
    |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| DB2 | [http://www-01.ibm.com/software/in/data/db2/](http://www-01.ibm.com/software/in/data/db2/)
    |'
- en: '| Apache Derby | [https://db.apache.org/derby/](https://db.apache.org/derby/)
    |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| Apache Derby | [https://db.apache.org/derby/](https://db.apache.org/derby/)
    |'
- en: '| H2 | [http://www.h2database.com/html/main.html](http://www.h2database.com/html/main.html)
    |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| H2 | [http://www.h2database.com/html/main.html](http://www.h2database.com/html/main.html)
    |'
- en: '| HSQL Database Engine | [http://hsqldb.org/](http://hsqldb.org/) |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| HSQL数据库引擎 | [http://hsqldb.org/](http://hsqldb.org/) |'
- en: '| MySQL | [https://www.mysql.com/](https://www.mysql.com/) |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| MySQL | [https://www.mysql.com/](https://www.mysql.com/) |'
- en: '| Oracle | [https://www.oracle.com/database/](https://www.oracle.com/database/)
    |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| Oracle | [https://www.oracle.com/database/](https://www.oracle.com/database/)
    |'
- en: '| PostgreSQL | [http://www.postgresql.org/](http://www.postgresql.org/) |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| PostgreSQL | [http://www.postgresql.org/](http://www.postgresql.org/) |'
- en: '| Microsoft SQL Server Database | [http://www.microsoft.com/en-in/server-cloud/products/sql-server/](http://www.microsoft.com/en-in/server-cloud/products/sql-server/)
    |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 微软SQL服务器数据库 | [http://www.microsoft.com/en-in/server-cloud/products/sql-server/](http://www.microsoft.com/en-in/server-cloud/products/sql-server/)
    |'
- en: 'For installing the demo, use the following command:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于安装演示，请使用以下命令：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The install command would `install` the web tooling and the Eclipse tooling,
    required for modeling and operating jBPM.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 安装命令将`安装`网络工具和Eclipse工具，这些工具对于建模和操作jBPM是必需的。
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This command will start the application server (JBoss) with the web tooling
    (the Kie workbench and dashboard) deployed in it and the eclipse tooling with
    all the plugins installed.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将启动应用程序服务器（JBoss），其中包含部署了网络工具（Kie工作台和仪表板）和所有已安装插件的Eclipse工具。
- en: Note
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Refer `install.html`, the installation documentation included in the installer
    archive for common errors that can occur during installation; it guides you to
    the solutions. The installation document is quite elaborate; please refer to it
    for a more detailed understanding of the installation process.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考`install.html`，安装器存档中包含的安装文档，以了解安装过程中可能出现的常见错误；它将指导您找到解决方案。安装文档相当详细；请参阅它以获得对安装过程的更深入了解。
- en: That's it for the installation! Now, the JBoss application server should be
    running with the Kie workbench and dashboard builder deployed.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 安装到此结束！现在，JBoss应用程序服务器应该正在运行，并且Kie工作台和仪表板构建器已部署。
- en: 'You can now access the Kie workbench demo environment by using the URL and
    log in by using the demo admin user called `admin` and the password `admin`:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以通过使用以下URL访问Kie工作台演示环境，并使用名为`admin`的演示管理员用户和密码`admin`进行登录：
- en: '`http://localhost:8080/jbpm-console`.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://localhost:8080/jbpm-console`。'
- en: Customizing the installation
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定制安装
- en: The demo installation is a sandbox environment, which allows for an easy installation
    and reduces time between you getting the release and being able to play around
    by using the stack. Even though it is very necessary, when you get the initial
    stuff done and get serious about jBPM, you may want to install a jBPM environment,
    which will be closer to a production environment. We can customize the installer
    for this purpose. The following sections will guide you through the options available
    for customization.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 演示安装是一个沙盒环境，它允许轻松安装，并减少了您从获取发布版到能够使用堆栈进行操作之间的时间。尽管这非常必要，但您完成初始设置并认真对待jBPM时，可能希望安装一个更接近生产环境的jBPM环境。我们可以为此目的定制安装程序。以下各节将指导您了解可用的定制选项。
- en: Changing the database vendor
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改数据库供应商
- en: 'The jBPM demo sandbox environment uses an embedded H2 database as the persistence
    storage. jBPM provides out of the box support for more widely used databases such
    as MySQL, PostgreSQL, and so on. Follow these steps to achieve a jBPM installation
    with these databases:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM演示沙盒环境使用嵌入式H2数据库作为持久化存储。jBPM为MySQL、PostgreSQL等更广泛使用的数据库提供开箱即用的支持。按照以下步骤实现使用这些数据库的jBPM安装：
- en: Update the `build.properties` file available in the root folder of the installation
    to choose the required database instead of H2\. By default, configurations for
    MySQL and PostgreSQL are available. For the support of other databases, check
    the hibernate documentation before configuring.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新安装根目录下可用的`build.properties`文件，以选择所需的数据库而不是H2。默认情况下，MySQL和PostgreSQL的配置可用。对于其他数据库的支持，在配置之前请检查hibernate文档。
- en: Update `db/jbpm-persistence-JPA2.xml`, and update the `hibernate.dialect` property
    with an appropriate Hibernate dialect for our database vendor.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`db/jbpm-persistence-JPA2.xml`，并将`hibernate.dialect`属性更新为我们数据库供应商的适当Hibernate方言。
- en: Install the corresponding JDBC driver in the application server where we intend
    to deploy jBPM web tooling.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们打算部署jBPM网络工具的应用服务器中安装相应的JDBC驱动程序。
- en: Manually installing the database schema
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 手动安装数据库模式
- en: By default, the database schema is created automatically by using the Hibernate
    autogeneration capabilities. However, if we want to manually install the database
    schemas, the corresponding DDL scripts are available in `db\ddl-scripts` for all
    major database vendors.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，数据库模式是通过使用Hibernate自动生成功能自动创建的。然而，如果我们想手动安装数据库模式，相应的DDL脚本在`db\ddl-scripts`目录中可供所有主要数据库供应商使用。
- en: Creating your first jBPM project
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建您的第一个jBPM项目
- en: jBPM provides a very structured way of creating a project. The structure considers
    application creation and maintenance for large organizations with multiple departments.
    This structure is recommended for use as it is a clean and secure way of manning
    the business process artifacts. The following image details the organization of
    a project in jBPM web tooling (or the Kie workbench).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM提供了一种非常结构化的方式来创建项目。这种结构考虑了为拥有多个部门的大型组织创建和维护应用程序。这种结构推荐使用，因为它是一种干净且安全的方式来管理业务流程工件。以下图像详细说明了jBPM网络工具（或Kie工作台）中项目的组织结构。
- en: '![Creating your first jBPM project](img/9578OS_02_02.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![创建您的第一个jBPM项目](img/9578OS_02_02.jpg)'
- en: The jBPM workbench comes with an assumption of one business process management
    suite for an organization. An organization can have multiple organization units,
    which will internally contain multiple projects and form the root of the project,
    and as the name implies, it represents a fraction of an organization. This categorization
    can be visualized in any business organization and is sometimes referred as departments.
    In an ideal categorization, these organization units will be functionally different
    and thus, will contain different business processes. Using the workbench, we can
    create multiple organization units.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM工作台假设一个组织有一个业务流程管理套件。一个组织可以有多个组织单元，这些组织单元内部将包含多个项目，并形成项目的根，正如其名称所暗示的，它代表了一个组织的部分。这种分类可以在任何商业组织中可视化，有时也被称为部门。在理想的分类中，这些组织单元将在功能上不同，因此将包含不同的业务流程。使用工作台，我们可以创建多个组织单元。
- en: The next categorization is the repository. A repository is a storage of business
    model artifacts such as business processes, business rules, and data models. A
    repository can be mapped to a functional classification within an organization,
    and multiple repositories can be set up if these repositories run multiple projects;
    the handling of these project artifacts have to be kept secluded from each other
    (for example, for security).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个分类是存储库。存储库是存储业务模型工件，如业务流程、业务规则和数据模型的地方。存储库可以映射到组织内的一个功能分类，如果这些存储库运行多个项目，则可以设置多个存储库；这些项目工件的处理必须相互隔离（例如，出于安全考虑）。
- en: Within a repository, we can create a project, and within a project, we can define
    and model business process artifacts. This structure and abstraction will be very
    useful to manage and maintain BPM-based applications.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个存储库中，我们可以创建一个项目，在一个项目中，我们可以定义和建模业务流程工件。这种结构和抽象对于管理和维护基于BPM的应用程序非常有用。
- en: Let us go through the steps in detail now.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来详细说明这些步骤。
- en: 'After installation, you need to log into the Kie workbench. Now, as explained
    previously, we can create a project. Therefore, the first step is to create an
    organizational unit:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您需要登录到Kie工作台。现在，正如之前解释的，我们可以创建一个项目。因此，第一步是创建一个组织单元：
- en: Click through the menu bars, and go to **Authoring** | **Administration** |
    **Organizational Units** | **Manage Organizational Units**.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过菜单栏逐级点击，进入**作者** | **管理** | **组织单元** | **管理组织单元**。
- en: This takes you to the Organizational Unit Manager screen; here, we can see a
    list of organizational units and repositories already present and their associations.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将带您进入组织单元管理器屏幕；在这里，我们可以看到已存在的组织单元和存储库及其关联列表。
- en: Click **Add** to create an organizational unit, and give the name of the organization
    unit and the user who is in charge of administering the projects in the organization
    unit.![Creating your first jBPM project](img/9578OS_02_03.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**以创建一个组织单元，并给出组织单元的名称以及负责管理组织单元项目的用户。[创建您的第一个jBPM项目](img/9578OS_02_03.jpg)
- en: Now, we can add a repository, navigate through the menus, and go to **Authoring**
    | **Administration** | **Repositories** | **New Repository**.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以添加一个仓库，通过菜单进行导航，并转到**创建** | **管理** | **仓库** | **新建仓库**。
- en: Now, provide a name for the repository, choose the organization unit, and create
    the repository.![Creating your first jBPM project](img/9578OS_02_04.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为仓库提供名称，选择组织单元，并创建仓库。[创建您的第一个jBPM项目](img/9578OS_02_04.jpg)
- en: 'Creating the repository results in (internally) creating a Git repository.
    The default location of the Git repository in the workbench is `$WORKING_DIRECTORY/.niogit`
    and can be modified by using the following system property: `-Dorg.uberfire.nio.git.dir`.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 创建仓库会导致（内部）创建一个Git仓库。工作台中Git仓库的默认位置是`$WORKING_DIRECTORY/.niogit`，可以通过以下系统属性进行修改：`-Dorg.uberfire.nio.git.dir`。
- en: Now, we can create a project for the organization unit. Go to **Authoring**
    | **Project Authoring** | **Project Explorer**. Now, choose your organization
    unit (here, **Mastering-jBPM**) from the bread crumb of project categorization.![Creating
    your first jBPM project](img/9578OS_02_05.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以为组织单元创建一个项目。转到**创建** | **项目创建** | **项目资源管理器**。现在，从项目分类的面包屑中选择您的组织单元（这里为**Mastering-jBPM**）。[创建您的第一个jBPM项目](img/9578OS_02_05.jpg)
- en: Click **New Item** and choose **Project**. Now, we can create a project by entering
    a relevant project name.![Creating your first jBPM project](img/9578OS_02_06.jpg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建项**并选择**项目**。现在，我们可以通过输入相关项目名称来创建项目。[创建您的第一个jBPM项目](img/9578OS_02_06.jpg)
- en: This takes you to the new project wizard as shown in the following figure:![Creating
    your first jBPM project](img/9578OS_02_07.jpg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带您进入以下图中所示的新项目向导：![创建您的第一个jBPM项目](img/9578OS_02_07.jpg)
- en: This gives details like project name and a brief summary of the project, and
    more importantly, gives the group ID, artifact ID, and version ID for the project.
    Further, **Finish** the creation of new project.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这提供了项目名称和项目简要总结的详细信息，更重要的是，提供了项目组ID、工件ID和版本ID。此外，**完成**新项目的创建。
- en: Those of you who know Maven and its artifact structure, will now have got an
    insight on how a project is built. Yes! The project created is a Maven module
    and is deployed as one. We will get into the detail of this is in the coming chapters.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些了解Maven及其工件结构的您，现在应该已经对项目是如何构建的有所了解。是的！创建的项目是一个Maven模块，并且作为单个模块部署。我们将在接下来的章节中详细介绍这一点。
- en: Business Process Modeling
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 业务流程建模
- en: Therefore, we are ready to create our first business process model by using
    jBPM.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们准备好使用jBPM创建我们的第一个业务流程模型。
- en: Go to **New Item** | **Business Process**:![Business Process Modeling](img/9578OS_02_08.jpg)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**新建项** | **业务流程**。[业务流程建模](img/9578OS_02_08.jpg)
- en: Provide the name for the business process; here, we are trying to create a very
    primitive process as an example.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为业务流程提供名称；在这里，我们尝试创建一个非常原始的流程作为示例。
- en: Now, the workbench will show you the process modeler for modeling the business
    process. Click the zoom button in the toolbar, if you think you need more real
    estate for modeling (highlighted in red in the following image):![Business Process
    Modeling](img/9578OS_02_09.jpg)
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，工作台将显示用于建模业务流程的过程模型器。如果您认为需要更多空间进行建模，请点击工具栏中的缩放按钮（以下图像中用红色突出显示）：![业务流程建模](img/9578OS_02_09.jpg)
- en: 'Basically, the workbench can be divided into five parts:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，工作台可以分为五个部分：
- en: 'Toolbar (on the top): It gives you a large set of tools for visual modeling
    and saving the model.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具栏（在顶部）：它为您提供了一组用于可视建模和保存模型的工具。
- en: 'Object library (on the left side of the canvas): It gives you all the standard
    BPMN construct stencils, which you can drag and drop to create a model.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象库（在画布的左侧）：它为您提供所有标准BPMN构造图块，您可以将它们拖放到画布上以创建模型。
- en: 'Workspace (on the center): You get a workspace or canvas on which you can draw
    the process models. The canvas is very intuitive; if you click on an object, it
    shows a tool set surrounding it to draw the next one or guide to the next object.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作区（在中间）：您获得一个工作区或画布，您可以在上面绘制流程模型。画布非常直观；如果您点击一个对象，它将显示围绕它的工具集，以绘制下一个或引导到下一个对象。
- en: 'Properties (on the right side of the canvas): It gives the property values
    for all the attributes associated with the business process and each of its constructs.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性（在画布的右侧）：它提供了与业务流程及其每个构造关联的所有属性的属性值。
- en: 'Problems (on the bottom): It gives you the errors on the business process that
    you are currently modeling. The validations are done on save, and we have provisions
    to have autosave options.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题（在底部）：它显示了您当前正在建模的业务流程中的错误。验证是在保存时进行的，并且我们有自动保存选项的设置。
- en: 'The following screenshot shows the process modeler with all the sections described:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了包含所有描述部分的流程模型器：
- en: '![Business Process Modeling](img/9578OS_02_10.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![业务流程建模](img/9578OS_02_10.jpg)'
- en: Therefore, we can start modeling out first process. I assume the role of a business
    analyst who wants to model a simple process of content writing. This is a very
    simple process with just two tasks, one human task for writing and the other for
    reviewing.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以开始建模我们的第一个流程。我扮演一个希望建模内容写作简单流程的业务分析师的角色。这是一个非常简单的流程，只有两个任务，一个是写作的人工作业，另一个是审查。
- en: We can attach the actor associated with the task by going to the **Properties**
    panel and setting the actor. In this example, I have set it as **admin**, the
    default user, for the sake of simplicity.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过转到**属性**面板并设置演员来附加与任务关联的演员。在这个例子中，为了简单起见，我将它设置为**admin**，即默认用户。
- en: '![Business Process Modeling](img/9578OS_02_11.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![业务流程建模](img/9578OS_02_11.jpg)'
- en: Now, we can save the project by using the **Save** button; it asks for a check-in
    comment, which provides the comment for this version of the process that we have
    just saved. Process modeling is a continuous process, and if properly used, the
    check-in comment can helps us to keep track on the objectives of process updates.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过使用**保存**按钮来保存项目；它会要求输入一个签入注释，这将为刚刚保存的流程版本提供注释。流程建模是一个持续的过程，如果正确使用，签入注释可以帮助我们跟踪流程更新的目标。
- en: Building and deploying the project
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建和部署项目
- en: Even though the project created is minuscular with just a sample project, this
    is fully functional! Yes, we have completed a business process, which will be
    very limited in functionality, but with its limited set of functionalities (if
    any), it can be deployed and operated.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 即使创建的项目规模很小，只是一个示例项目，这也是完全功能性的！是的，我们已经完成了一个业务流程，其功能将非常有限，但即使功能有限（如果有），它也可以部署和运行。
- en: 'Go to **Tools** | **Project Editor**, and click **Build & Deploy**, as shown
    in the following screenshot:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 前往**工具** | **项目编辑器**，然后点击**构建 & 部署**，如图所示：
- en: '![Building and deploying the project](img/9578OS_02_12.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![构建和部署项目](img/9578OS_02_12.jpg)'
- en: 'To see the deployment listed, go to **Deploy** | **Deployments** to see **Deployment
    Units**, as shown in the following screenshot:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看列出的部署，请转到**部署** | **部署**以查看**部署单元**，如图所示：
- en: '![Building and deploying the project](img/9578OS_02_13.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![构建和部署项目](img/9578OS_02_13.jpg)'
- en: This shows the effectiveness of jBPM as a rapid application builder using a
    business process. We can create, model, and deploy a project within a span of
    minutes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了jBPM作为使用业务流程的快速应用构建器的有效性。我们可以在几分钟内创建、建模和部署一个项目。
- en: Running your first process
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行第一个流程
- en: Here, we start the operation management using jBPM. Now, we assume the role
    of an operational employee. We have deployed a process and have to create a process
    instance and run it.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们开始使用jBPM进行操作管理。现在，我们假设自己是操作员工的角色。我们已经部署了一个流程，需要创建一个流程实例并运行它。
- en: Go to **Process Management** | **Process Definitions**. We can see the details
    of the process definitions deployed in the following screenshot:![Running your
    first process](img/9578OS_02_14.jpg)
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**流程管理** | **流程定义**。我们可以在下面的截图中看到已部署的流程定义的详细信息：![运行第一个流程](img/9578OS_02_14.jpg)
- en: Click **New Instance** and start the process. This will start a process instance.![Running
    your first process](img/9578OS_02_15.jpg)
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建实例**并启动流程。这将启动一个流程实例。![运行第一个流程](img/9578OS_02_15.jpg)
- en: Go to **Process Management** | **Process Instances** to view the process instance
    details and perform life cycle actions on process instances.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**流程管理** | **流程实例**以查看流程实例的详细信息并对流程实例执行生命周期操作。
- en: The example writing process consists of two human tasks. Upon the start of the
    process instance, the Write task is assigned to the admin. The assigned task can
    be managed by going to the task management functionality.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例编写流程包含两个人工任务。在流程实例启动时，Write任务分配给管理员。可以通过任务管理功能管理分配的任务。
- en: Go to **Tasks** | **Tasks List**:![Running your first process](img/9578OS_02_16.jpg)
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**任务** | **任务列表**：![运行您的第一个流程](img/9578OS_02_16.jpg)
- en: In **Tasks List**, we can view the details of the human tasks and perform human
    task life cycle operations such as assigning, delegating, completing, and aborting
    a task.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在**任务列表**中，我们可以查看人工任务的详细信息，并执行人工任务的生命周期操作，如分配、委派、完成和取消任务。
- en: Embedding jBPM in a standalone Java application
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在独立Java应用程序中嵌入jBPM
- en: The core engine of jBPM is a set of lightweight libraries, which can be embedded
    in any Java standalone application. This gives the enterprise architects the flexibility
    to include jBPM inside their existing application and leverage the functionalities
    of BPM.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM的核心引擎是一组轻量级库，可以嵌入到任何Java独立应用程序中。这为企业架构师提供了在现有应用程序中包含jBPM并利用BPM功能的灵活性。
- en: This section will cover how to programmatically start the runtime engine and
    start a process instance, and will guide you in writing automated tests for BPMN
    processes.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍如何以编程方式启动运行时引擎和启动流程实例，并将指导您编写BPMN流程的自动化测试。
- en: Modeling the business process using Eclipse tooling
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Eclipse工具建模业务流程
- en: 'Upon running the installation script, jBPM installs the web tooling as well
    as the Eclipse tooling. The Eclipse tooling basically consists of the following:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 运行安装脚本后，jBPM将安装Web工具和Eclipse工具。Eclipse工具基本上包括以下内容：
- en: 'jBPM project wizard: It helps you to create a jBPM project easily'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jBPM项目向导：帮助您轻松创建jBPM项目
- en: 'jBPM runtime: An easy way of choosing the jBPM runtime version; this associates
    a set of libraries for the particular version of jBPM to the project'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jBPM运行时：选择jBPM运行时版本的一种简单方法；这会将特定版本的jBPM的库集与项目关联
- en: 'BPMN Modeler: It is used to model the BPMN process'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BPMN模型器：用于建模BPMN流程
- en: 'Drools plugin: It gives you the debugging and operation management capabilities
    within Eclipse'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drools插件：在Eclipse中提供调试和操作管理功能
- en: Creating a jBPM project using Eclipse
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Eclipse创建jBPM项目
- en: 'The Eclipse web tooling is available in the installer root folder. Start Eclipse
    and create a new jBPM Maven project:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse Web工具位于安装根目录中。启动Eclipse并创建一个新的jBPM Maven项目：
- en: Go to **File** | **New Project** | **jBPM Project** (Maven).
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**文件** | **新建项目** | **jBPM项目**（Maven）。
- en: 'Provide the project name and location details; now, the jBPM project wizard
    will do the following:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供项目名称和位置详细信息；现在，jBPM项目向导将执行以下操作：
- en: Create a default jBPM project for you with the entire initial configuration
    setup
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为您创建一个默认的jBPM项目，并设置完整的初始配置
- en: Attach all runtime libraries
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附加所有运行时库
- en: Create a sample project
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个示例项目
- en: Set up a unit testing environment for the business process
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为业务流程设置单元测试环境
- en: The following screenshot shows the jBPM project wizard.![Creating a jBPM project
    using Eclipse](img/9578OS_02_17.jpg)
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下截图显示了jBPM项目向导。![使用Eclipse创建jBPM项目](img/9578OS_02_17.jpg)
- en: The Eclipse workbench is considerably similar to the web tooling workbench;
    a screenshot is shown as follows:![Creating a jBPM project using Eclipse](img/9578OS_02_18.jpg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Eclipse工作台与Web工具工作台相当相似；以下是一个截图![使用Eclipse创建jBPM项目](img/9578OS_02_18.jpg)
- en: Similar to web tooling, it contains the toolbox, workspace, palette showing
    the BPMN construct stencils, and the property explorer.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 与Web工具类似，它包含工具箱、工作区、显示BPMN构造图元的调色板以及属性浏览器。
- en: We can create a new BPMN process by going to **New Project Wizard** and selecting
    **jBPM** | **BPMN2 Process**. Give the process file name and click **Finish**;
    this will create a default BPMN2 template file. The BPMN2 modeler helps to visually
    model the process by dragging and dropping BPMN constructs from the palette and
    connecting them using the tool set.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过转到**新建项目向导**并选择**jBPM** | **BPMN2流程**来创建一个新的BPMN流程。输入流程文件名并点击**完成**；这将创建一个默认的BPMN2模板文件。BPMN2模型器通过从调色板拖放BPMN构造并使用工具集连接它们来帮助可视化建模流程。
- en: Deploying the process programmatically
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以编程方式部署流程
- en: 'For deploying and running the business process programmatically, you have to
    follow these steps:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以编程方式部署和运行业务流程，您必须遵循以下步骤：
- en: Note
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**KIE** is the abbreviation for **Knowledge Is Everything**.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**KIE** 是 **知识即一切** 的缩写。'
- en: '**Creating the knowledge base**: Create the Kie Services, which is a hub giving
    access to the services provided by Kie:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建知识库**：创建 Kie 服务，它是一个中心，提供对 Kie 提供的服务访问：'
- en: '[PRE3]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Using the Kie Service, create Kie Container, which is the container for the
    knowledge base:'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 Kie 服务，创建 Kie 容器，它是知识库的容器：
- en: '[PRE4]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create and return the knowledge base with the input name:'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用输入名称创建并返回知识库：
- en: '[PRE5]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Creating a runtime manager**: The runtime manger manages the runtime build
    with knowledge sessions and Task Service to create an executable environment for
    processes and user tasks.'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建运行时管理器**：运行时管理器通过知识会话和任务服务管理运行时构建，为流程和用户任务创建一个可执行的环境。'
- en: 'Create the JPA entity manager factory used for creating the persistence service,
    for communicating with the storage layer:'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建用于创建持久化服务、与存储层通信的 JPA 实体管理器工厂：
- en: '[PRE6]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create the runtime builder, which is the `dsl` style helper to create the runtime
    environment:'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建运行时构建器，它是用于创建运行时环境的 `dsl` 风格辅助工具：
- en: '[PRE7]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Using the runtime environment, create the runtime manager:'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用运行时环境，创建运行时管理器：
- en: '[PRE8]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Creating the runtime engine**: Using the runtime manager, creates the runtime
    engine that is fully initialized and ready for operation:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建运行时引擎**：使用运行时管理器，创建一个完全初始化并准备好运行的运行时引擎：'
- en: '[PRE9]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Starting the process**: Using the runtime manager, create a knowledge session
    and start the process:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**启动过程**：使用运行时管理器，创建一个知识会话并启动过程：'
- en: '[PRE10]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This creates and starts a process instance.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将创建并启动一个流程实例。
- en: From the runtime manager, we can also access the human task service and interact
    with its API.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从运行时管理器，我们还可以访问人工任务服务并与其 API 交互。
- en: 'Go to **Window** | **Show View** | **Others** | **Drools** | **Process Instances**
    to view the created process instances:'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前往 **窗口** | **显示视图** | **其他** | **Drools** | **流程实例** 以查看创建的流程实例：
- en: '![Deploying the process programmatically](img/9578OS_02_19.jpg)'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![以编程方式部署流程](img/9578OS_02_19.jpg)'
- en: Writing automated test cases
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写自动化测试用例
- en: jBPM runtime comes with a test utility, which serves as the unit testing framework
    for automated test cases. The unit testing framework uses and extends the capabilities
    of the JUnit testing framework and basically provides the JUnit life cycle methods
    and the jBPM runtime environment for testing and tearing down the runtime manager
    after test execution. Helper methods manage the knowledge base and the knowledge
    session, getting workitem handlers and assertions to assert process instances
    and various stages.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: jBPM 运行时附带一个测试实用工具，它作为自动化测试用例的单元测试框架。单元测试框架使用并扩展了 JUnit 测试框架的功能，基本上提供了 JUnit
    生命周期方法和在测试执行后测试和拆除运行时管理器的 jBPM 运行时环境。辅助方法管理知识库和知识会话，获取工作项处理器和断言以断言流程实例和各个阶段。
- en: For creating a JUnit test case, create a class extending `org.jbpm.test.JbpmJUnitBaseTestCase`
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建 JUnit 测试用例，创建一个扩展 `org.jbpm.test.JbpmJUnitBaseTestCase` 的类
- en: We can initialize the jBPM runtime by using the previous steps and assert using
    the helper methods provided by `org.jbpm.test.JbpmJUnitBaseTestCase`.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用前面的步骤初始化 jBPM 运行时，并使用 `org.jbpm.test.JbpmJUnitBaseTestCase` 提供的辅助方法进行断言。
- en: 'For example, we assert the completion of a process as follows:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以如下断言过程的完成：
- en: '[PRE11]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The code for the introductory sample project is attached with the downloads
    associated with this book.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍性示例项目的代码附在此书的下载中。
- en: Change management – updating deployed process definitions
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 变更管理 – 更新已部署的流程定义
- en: We have modeled a business process and deployed it; the application end users
    will create process instances and fulfill their goals by using the business process.
    Now, as the organization evolves, we need a change in the process; for example,
    the organization has decided to add one more department. Therefore, we have to
    update the associated business processes.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经建模了一个业务流程并将其部署；应用程序最终用户将通过使用业务流程来创建流程实例并实现他们的目标。现在，随着组织的演变，我们需要对流程进行更改；例如，组织决定增加一个部门。因此，我们必须更新相关的业务流程。
- en: Technically, in jBPM, we cannot have an update in an already deployed process
    definition; we need to have a workaround. jBPM suggests three strategies for a
    process migration.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术上，在 jBPM 中，我们无法在已部署的流程定义中进行更新；我们需要有一个解决方案。jBPM 建议三种流程迁移策略。
- en: '**Proceed**: We will introduce the new process definition and retire the old
    definition. Retiring should be taken care of by the application so that all process
    instance calls for the process are redirected to the new process definition.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**进行**：我们将介绍新的流程定义并淘汰旧的定义。淘汰应由应用程序处理，以确保所有对流程的实例调用都重定向到新的流程定义。'
- en: '**Abort**: The existing process is aborted, and we can restart the process
    instance with the updated process definition. We have to be very careful in this
    approach if the changes are not compatible with the state of the process instances.
    This can show abrupt behaviors depending on how complex your process definition
    is.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**终止**：现有的流程被终止，我们可以使用更新的流程定义重新启动流程实例。如果更改与流程实例的状态不兼容，我们必须非常小心地处理这种方法。这可能会根据您的流程定义的复杂程度表现出突然的行为。'
- en: '**Transfer**: The process instance is migrated to the new process definition;
    that is, the states of the process instance and instances of activity should be
    mapped. The jBPM out-of-the-box support provides a generic process upgrade API,
    which can be used as an example.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转移**：流程实例迁移到新的流程定义；也就是说，流程实例的状态和活动实例应该进行映射。jBPM提供的开箱即用的支持提供了一个通用的流程升级API，可以作为示例使用。'
- en: These strategies can be discussed in detail and illustrated in the following
    chapters.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这些策略将在以下章节中详细讨论并举例说明。
- en: Summary
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter would have given you the "Hello world" hands-on experience in jBPM.
    With your jBPM installation ready, we can now dive deep into the details of the
    functional components of jBPM.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将为您带来jBPM的“Hello world”动手实践体验。随着您的jBPM安装准备就绪，我们现在可以深入探讨jBPM功能组件的细节。
- en: With this chapter, we have come to an end to the introductory chapters of *Mastering
    jBPM*. In the upcoming chapters, we will discuss the process designer, operation
    management, and core engine architecture in detail.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章，我们结束了《精通jBPM》的入门章节。在接下来的章节中，我们将详细讨论流程设计器、运营管理和核心引擎架构。
