- en: Chapter 10. Spring Security with Spring Web Services
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章。Spring安全与Spring Web服务
- en: 'In this chapter we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Applying Spring Security on RESTful web services
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在RESTful web服务上应用Spring Security
- en: Spring Security for Spring RESTful web service using the cURL tool
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用cURL工具为Spring RESTful web服务配置Spring Security
- en: Integrating Spring Security with Apache CXF RESTful service
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Spring Security与Apache CXF RESTful服务集成
- en: Integrating Spring Security with Apache CXF SOAP based web service
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Spring Security与Apache CXF基于SOAP的web服务集成
- en: Integrating Spring Security with Apache Camel
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Spring Security与Apache Camel集成
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '**SOAP** (**Simple Object Access Protocol**) is an XML-based web service. It
    is used to transfer the request and response messages between web services.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**SOAP**（**Simple Object Access Protocol**）是基于XML的web服务。它用于在web服务之间传输请求和响应消息。'
- en: '**REST** (**Representational State Transfer**) is a means of sending data as
    XML, text, or JSON files over the HTTP protocol.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**REST**（**Representational State Transfer**）是一种以XML、文本或JSON文件形式通过HTTP协议发送数据的手段。'
- en: In this section we will apply Spring Security to web services. The normal flow
    of any web service is that the service WSDL or URL will be exposed to the end
    user. On application of Spring Security, the end users can be authenticated and
    authorized to use the services.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向web服务应用Spring Security。任何web服务的正常流程是将服务WSDL或URL暴露给最终用户。在应用Spring Security后，最终用户可以被验证和授权使用服务。
- en: Applying Spring Security on RESTful web services
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在RESTful web服务上应用Spring Security
- en: REST has become another means of providing web services.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: REST已成为提供web服务的另一种手段。
- en: The data can be shared across applications using XML, text, or in JSON format.
    REST web services are considered as lightweight web services.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可以使用XML、文本或JSON格式在应用程序之间共享。REST web服务被认为是轻量级的web服务。
- en: Let's apply Spring Security for accessing the REST web service, so that only
    authorized users can access the RESTful web service. Since the RESTful web service
    is accessed with a URL and uses HTTP protocol we can easily apply the URL level
    security. This example demonstrates form-based authentication. But the user can
    also use BASIC and Digest Authentication.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们应用Spring Security来访问REST web服务，以便只有经过授权的用户才能访问RESTful web服务。由于RESTful web服务是通过URL访问并使用HTTP协议，我们可以轻松应用URL级别的安全性。此示例演示了基于表单的身份验证。但用户也可以使用基本和摘要身份验证。
- en: 'The following are the annotations used with Spring to generate RESTful web
    services:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是与Spring一起使用的注释，用于生成RESTful web服务：
- en: '`@PathVariable`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@PathVariable`'
- en: '`@RequestMapping`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@RequestMapping`'
- en: '`@RequestMethod`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@RequestMethod`'
- en: Getting ready
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a RESTful web service using Spring web service API
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Spring web服务API创建一个RESTful web服务
- en: Add Spring Security dependencies
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加Spring Security依赖项
- en: Add Spring filter configuration to the `Web.xml` file
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Spring过滤器配置添加到`Web.xml`文件中
- en: Configure the `application-security.xml` file
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`application-security.xml`文件
- en: Create an `AccessController` class to handle the login and logout actions
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个`AccessController`类来处理登录和注销操作
- en: Configure Spring Security in the application to authenticate the users
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在应用程序中配置Spring Security以对用户进行身份验证
- en: How to do it...
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following are the steps for integrating RESTful web services with Spring
    Security:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将RESTful web服务与Spring Security集成的步骤：
- en: 'Let''s create a `BookController` class with `@PathVariable`, as shown in the
    following code snippet:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个`BookController`类，其中包含`@PathVariable`，如下面的代码片段所示：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a `Books` POJO class with the `@JsonAutoDetect` annotation, as shown
    in the following code snippet:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`Books` POJO类，其中包含`@JsonAutoDetect`注释，如下面的代码片段所示：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Create an `AccessController` class to handle login and logout actions:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`AccessController`类来处理登录和注销操作：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Configure the `Application-security.xml` file, as shown in the following code
    snippet:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`Application-security.xml`文件，如下面的代码片段所示：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works...
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Access the URL: `http://localhost:8080/booksservice/books/1`. This is the REST-based
    URL, which is restricted from access using Spring Security. When the user calls
    the REST-based web service URL, Spring Security redirects the user to the login
    page. On successful authentication, the user is redirected to the authorized REST-based
    web service page.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 访问URL：`http://localhost:8080/booksservice/books/1`。这是基于REST的URL，使用Spring Security限制了访问。当用户调用基于REST的web服务URL时，Spring
    Security将用户重定向到登录页面。在成功验证后，用户将被重定向到授权的基于REST的web服务页面。
- en: 'The following is the workflow of the REST-based application with Spring Security.
    You will be redirected to the login page, as shown in the following screenshot:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是基于REST的应用程序与Spring Security的工作流程。您将被重定向到登录页面，如下面的屏幕截图所示：
- en: '![How it works...](img/7525OS_10_01.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7525OS_10_01.jpg)'
- en: 'On authentication and authorization, you will be able to access the RESTful
    web service, as shown in the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在认证和授权后，您将能够访问RESTful web服务，如下面的屏幕截图所示：
- en: '![How it works...](img/7525OS_10_02.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7525OS_10_02.jpg)'
- en: See also
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Integrating Spring Security with Apache CXF RESTful web service* recipe
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache CXF RESTful web服务集成*配方'
- en: The *Integrating Spring Security with Apache CXF SOAP based web service* recipe
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache CXF基于SOAP的web服务集成*配方'
- en: The *Integrating Spring Security with Apache Camel* recipe
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache Camel集成*配方'
- en: Spring Security for Spring RESTful web service using the cURL tool
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用cURL工具为Spring RESTful web服务配置Spring Security
- en: In this example we are using the Spring Security API classes and interfaces
    explicitly. We will authenticate the RESTful web service using the `curl` command.
    With the cURL tool, you can transfer data with the URL. It can be used to test
    the authentication. It's the same book service example which has some explicit
    Spring Security related API classes such as `AuthenticationEntryPoint` and `SimpleURLAuthenticationSuccessHandler`.
    Here, the goal is to demonstrate their internal usage in Spring Security.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们明确使用Spring Security API类和接口。我们将使用`curl`命令对RESTful web服务进行身份验证。使用cURL工具，您可以通过URL传输数据。它可以用来测试身份验证。这是一个相同的书籍服务示例，其中包含一些明确的Spring
    Security相关API类，如`AuthenticationEntryPoint`和`SimpleURLAuthenticationSuccessHandler`。在这里，目标是演示它们在Spring
    Security中的内部使用。
- en: Getting ready
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Implement the `AuthenticationEntryPoint` interface and configure in the XML
    file
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现`AuthenticationEntryPoint`接口并在XML文件中进行配置
- en: Extend `SimpleUrlAuthenticationSuccessHandler` and configure in the XML file
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展`SimpleUrlAuthenticationSuccessHandler`并在XML文件中进行配置
- en: Configure the `Application-security.xml` file
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`Application-security.xml`文件
- en: Add security related filters to the `Web.xml` file
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将安全相关的过滤器添加到`Web.xml`文件
- en: Download the cURL tool for your operating system
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载适用于您操作系统的cURL工具
- en: How to do it...
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following are the steps for applying the Spring Security authentication
    and authorization mechanism by using `AuthenticationEntryPoint` interface and
    `SimpleURLAuthenticationSuccessHandler` class:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用`AuthenticationEntryPoint`接口和`SimpleURLAuthenticationSuccessHandler`类应用Spring
    Security身份验证和授权机制的步骤：
- en: The `AuthenticationEntryPoint` class is an entry class for authentication and
    it implements the `AuthenticationEntryPointImpl` class.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`AuthenticationEntryPoint`类是身份验证的入口类，它实现了`AuthenticationEntryPointImpl`类。'
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Extend the `SimpleURLAuthenticationSuccessHandler` class, as shown in the following
    code snippet:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展`SimpleURLAuthenticationSuccessHandler`类，如下面的代码片段所示：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Configure the `Application-security.xml` file.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`Application-security.xml`文件。
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: How it works...
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Now access the URL: `http://localhost:8080/booksservice/books/1`'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在访问URL：`http://localhost:8080/booksservice/books/1`
- en: You will see a page which says that you are not authorized to view the pages.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到一个页面，上面写着您没有权限查看页面。
- en: Let's use the cURL tool which gives us a cookie. The `200 OK` message implies
    that we are authenticated.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用cURL工具，它会给我们一个cookie。`200 OK`消息意味着我们已经通过身份验证。
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The cookies are stored in a file named `mycookies.txt`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: cookie存储在名为`mycookies.txt`的文件中。
- en: '![How it works...](img/7525OS_10_03.jpg)![How it works...](img/7525OS_10_04.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7525OS_10_03.jpg)![它是如何工作的...](img/7525OS_10_04.jpg)'
- en: See also
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Integrating Spring Security with Apache CXF RESTful web service* recipe
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache CXF RESTful web服务集成*的方法'
- en: The *Integrating Spring Security with Apache CXF SOAP based web service* recipe
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache CXF基于SOAP的web服务集成*的方法'
- en: The *Integrating Spring Security with Apache Camel* recipe
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache Camel集成*的方法'
- en: Integrating Spring Security with Apache CXF RESTful web service
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Spring Security与Apache CXF RESTful web服务集成
- en: In this section let us create an Apache CXF RESTful web service. It is an open
    source web service framework. Let's use BASIC authentication for this demonstration.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，让我们创建一个Apache CXF RESTful web服务。这是一个开源的web服务框架。让我们为这个演示使用基本身份验证。
- en: CXF supports contract-first and contract-last web services. It also supports
    RESTful web services.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: CXF支持契约优先和契约后的web服务。它还支持RESTful web服务。
- en: Let us integrate Spring Security with CXF and authorize a RESTful web service.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将Spring Security与CXF集成，并授权RESTful web服务。
- en: Getting ready
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Add the `cxf` dependency to the `pom` file
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`cxf`依赖项添加到`pom`文件中
- en: Set up the RESTful web service with CXF
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CXF设置RESTful web服务
- en: Configure the `spring-security.xml` file
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`spring-security.xml`文件
- en: How to do it...
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following are the steps to integrate Spring Security with Apache CXF RESTful
    web services:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将Spring Security与Apache CXF RESTful web服务集成的步骤：
- en: Configure the `Book` POJO class.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`Book` POJO类。
- en: '[PRE8]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Configure the `BookCollection` POJO class.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`BookCollection` POJO类。
- en: '[PRE9]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Configure the `BookService` interface.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`BookService`接口。
- en: '[PRE10]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Configure the `BookServiceImpl` class.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`BookServiceImpl`类。
- en: '[PRE11]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Configuring the `application-security.xml` file:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`application-security.xml`文件：
- en: '[PRE12]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Configure the `Web.xml` file.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`Web.xml`文件。
- en: '[PRE13]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: How it works...
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The RESTful service is provided by the CXF framework in this example. Then the
    application is integrated with Spring Security in order to provide secured authentication
    and authorization module to RESTful web service. Spring Security filter chain
    manages the authentication and authorization process. When you access the service,
    you will be prompted to log in, as shown in the following screenshot. After login,
    you can view the RESTful data. The Mozilla Firefox browser will prompt the user
    to download the data in a file format.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子中，RESTful服务是由CXF框架提供的。然后应用程序集成了Spring Security，以提供安全的身份验证和授权模块给RESTful web服务。Spring
    Security过滤器链管理身份验证和授权过程。当您访问服务时，将提示您登录，如下面的屏幕截图所示。登录后，您可以查看RESTful数据。Mozilla Firefox浏览器将提示用户以文件格式下载数据。
- en: '![How it works...](img/7525OS_10_05.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7525OS_10_05.jpg)'
- en: 'Now access the URL: `http://localhost:8080/booksservice_cxf/services/services/book/1`'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在访问URL：`http://localhost:8080/booksservice_cxf/services/services/book/1`
- en: '![How it works...](img/7525OS_10_06.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7525OS_10_06.jpg)'
- en: See also
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Integrating Spring Security with Apache CXF RESTful web service* recipe
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache CXF RESTful web服务集成*的方法'
- en: The *Integrating Spring Security with Apache Camel* recipe
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache Camel集成*的方法'
- en: Integrating Spring Security with Apache CXF SOAP based web service
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Spring Security与Apache CXF基于SOAP的web服务集成
- en: In this section, let's create a SOAP-based web service. We will demonstrate
    the integration of Spring Security with Apache CXF SOAP-based web service.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，让我们创建一个基于SOAP的web服务。我们将演示Spring Security与Apache CXF基于SOAP的web服务的集成。
- en: Creation of SOAP-based web service has become a simple process with Apache CXF.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Apache CXF创建基于SOAP的web服务已经变得简单。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Add the CXF-SOAP dependency to the `pom` file.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将CXF-SOAP依赖项添加到`pom`文件中。
- en: Add Spring Security-based dependency to the `pom` file.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向`pom`文件添加基于Spring Security的依赖项。
- en: Set up a SOAP-based web service with `interface` and an `Impl` class.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`interface`和`Impl`类设置基于SOAP的Web服务。
- en: Configure the `spring-security.xml` file.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`spring-security.xml`文件。
- en: 'Add jars to the `Tomcat_7.0/lib` folder as a part of setup. Tomcat requires
    the following jar files in its `lib` folder to work with CXF web services. Absence
    of these jars can cause some errors:'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将jar添加到`Tomcat_7.0/lib`文件夹作为设置的一部分。 Tomcat需要以下jar文件才能与CXF Web服务一起工作。缺少这些jar可能会导致一些错误：
- en: '`streambuffer.jar`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`streambuffer.jar`'
- en: '`stax-ex`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stax-ex`'
- en: '`jaxws-ap-2.1`'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jaxws-ap-2.1`'
- en: '`jaxws-rt`'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jaxws-rt`'
- en: How to do it...
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following are the steps to integrate Apache CXF SOAP-based web service
    with Spring Security:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将Apache CXF基于SOAP的Web服务与Spring Security集成的步骤：
- en: The `Book` POJO has getter and setter methods. It also has a parameterized constructor.
    The `Book` POJO is used in the `BookService` interface, to give details on `Book`
    that is requested from the client application.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Book` POJO具有getter和setter方法。它还具有参数化构造函数。`Book` POJO在`BookService`接口中使用，以提供有关从客户端应用程序请求的`Book`的详细信息。'
- en: '[PRE14]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `BookService` interface is created with the `@WebService` annotation, in
    which `getBookDetails` is the service method in the WSDL.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BookService`接口使用`@WebService`注解创建，其中`getBookDetails`是WSDL中的服务方法。'
- en: '[PRE15]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `BookServiceImpl` class is the implementation class of the `BookService`
    interface, and it is configured as an end point interface using `@webservice`
    annotation package `org.packt.cxf.service`.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BookServiceImpl`类是`BookService`接口的实现类，并使用`@webservice`注解包`org.packt.cxf.service`配置为端点接口。'
- en: '[PRE16]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In the `Cxf-servlet.xml` file, we register the web service interface and the
    implementation class.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Cxf-servlet.xml`文件中，我们注册了Web服务接口和实现类。
- en: '[PRE17]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In the `Web.xml` file, we give reference to the location of `cxf-servlet.xml`
    and configure `CXFSservlet`.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Web.xml`文件中，我们引用`cxf-servlet.xml`的位置，并配置`CXFSservlet`。
- en: '[PRE18]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: How it works...
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'In this section we demonstrate basic authentication on web service. Access
    the URL: `http://localhost:8080/bookservice/`'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们演示了Web服务的基本身份验证。访问URL：`http://localhost:8080/bookservice/`
- en: We have used the CXF framework to create a SOAP-based web service. When the
    URL is accessed by the user, the expected behavior is to give access to the WSDL
    and its services. But the Spring Security interrupts the request and pops up a
    login dialog box for the user. On successful authentication, the user gets to
    access the WSDL.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了CXF框架创建基于SOAP的Web服务。当用户访问URL时，期望的行为是允许访问WSDL及其服务。但是Spring Security中断了请求，并为用户弹出登录对话框。成功验证后，用户可以访问WSDL。
- en: '![How it works...](img/7525OS_10_07.jpg)![How it works...](img/7525OS_10_08.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7525OS_10_07.jpg)![工作原理...](img/7525OS_10_08.jpg)'
- en: 'Generated WSDL is available at the following URL: `http://localhost:8080/bookservice/BookService?wsdl`'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的WSDL可在以下URL找到：`http://localhost:8080/bookservice/BookService?wsdl`
- en: '[PRE19]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: See also
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Integrating Spring Security with Apache CXF RESTful web service* recipe
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache CXF RESTful Web服务集成*配方'
- en: The *Integrating Spring Security with Apache Camel* recipe
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache Camel集成*配方'
- en: Integrating Spring Security with Apache Camel
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Spring Security与Apache Camel集成
- en: Apache Camel can be used to define rules for routing and mediating applications.
    Spring Security can be used with Apache Camel to authenticate the router. Spring
    Security authentication policy object controls the access to the router. The Spring
    Security authentication policy object contains the role information and has reference
    to the Spring authentication manager. You can download the source code from the
    website.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Camel可用于定义路由和调解应用程序的规则。 Spring Security可用于与Apache Camel一起对路由器进行身份验证。
    Spring Security身份验证策略对象控制对路由器的访问。 Spring Security身份验证策略对象包含角色信息，并引用Spring身份验证管理器。您可以从网站下载源代码。
- en: Getting ready
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Create Camel context
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Camel上下文
- en: Add routing rules using the XML configurations
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用XML配置添加路由规则
- en: 'In Spring XML file configure the following:'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Spring XML文件中配置以下内容：
- en: Access decision manager
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问决策管理器
- en: Role voter
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色投票者
- en: Authentication manager
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份验证管理器
- en: User details service
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户详细信息服务
- en: Configure the authentication policy object with authorities
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用权限配置身份验证策略对象
- en: Add the `camel-spring-security` dependency
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加`camel-spring-security`依赖
- en: How to do it...
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following are the steps to integrate Apache Camel with Spring Security:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将Apache Camel与Spring Security集成的步骤：
- en: Create the `Camel–context.xml` file and also define the routing rules with Spring
    Security.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`Camel–context.xml`文件，并使用Spring Security定义路由规则。
- en: '[PRE20]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Configure Camel servlet in `Web.xml`.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Web.xml`中配置Camel servlet。
- en: '[PRE21]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How it works...
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Now access the URL: `http://localhost:8080/apachecamel/editor`'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在访问URL：`http://localhost:8080/apachecamel/editor`
- en: 'The `camel-context.xml` file has routing rules; the location of the `camel-context.xml`
    file is configured in `Web.xml` along with `CamelServlet` to handle the routing
    mechanism. The `<authorizationpolicy>` tag handles the authentication and authorization
    of the resources configured in the `spring-security.xml` file. The `<spring-security:user-service>`
    tag has details of the users and roles to whom the access can be given before
    routing the requests. The following is the workflow of Apache Camel interrupting
    the routing process using Spring Security. The user is authorized on either of
    the two roles: `EDITOR` or `AUTHOR`.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`camel-context.xml`文件具有路由规则；`camel-context.xml`文件的位置在`Web.xml`中配置，同时配置了`CamelServlet`来处理路由机制。`<authorizationpolicy>`标签处理在`spring-security.xml`文件中配置的资源的身份验证和授权。`<spring-security:user-service>`标签包含用户和角色的详细信息，在路由请求之前可以给予访问权限。以下是Apache
    Camel使用Spring Security中断路由过程的工作流程。用户被授权使用两个角色中的任意一个：`EDITOR`或`AUTHOR`。'
- en: '![How it works...](img/7525OS_10_10.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7525OS_10_10.jpg)'
- en: See also
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Integrating Spring Security with Apache CXF RESTful web service* recipe
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将Spring Security与Apache CXF RESTful Web服务集成*配方'
- en: The *Integrating Spring Security with Apache Camel* recipe
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spring Security与Apache Camel集成的配方
