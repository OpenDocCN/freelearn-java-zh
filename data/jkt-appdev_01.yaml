- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Introduction to Jakarta EE
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jakarta EE 简介
- en: Jakarta EE consists of a set of **Application Programming Interface** (**API**)
    specifications used to develop server-side enterprise Java applications. Most
    chapters in this book will cover a single Jakarta EE specification, such as **Contexts
    and Dependency Injection** (**CDI**), which is used to integrate different parts
    of an application, or Jakarta RESTful Web Services, which is used to develop RESTful
    web services. We also cover Jakarta EE APIs for processing data in JSON format,
    as well as Jakarta Faces, which is used to develop web-based user interfaces.
    We also delve into how to interact with relational databases, implementing two-way
    communication between clients and servers in web applications, security, and messaging.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Jakarta EE 由一组用于开发服务器端企业 Java 应用程序的 **应用程序编程接口 (API**) 规范组成。本书的大部分章节将涵盖单个 Jakarta
    EE 规范，例如用于集成应用程序不同部分的 **上下文和依赖注入 (CDI**)，或用于开发 RESTful Web 服务的 Jakarta RESTful
    Web 服务。我们还涵盖了用于处理 JSON 格式数据的 Jakarta EE API，以及用于开发基于 Web 的用户界面的 Jakarta Faces。我们还深入探讨了如何与关系数据库交互，实现
    Web 应用程序中客户端和服务器之间的双向通信，安全性和消息传递。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Introduction to Jakarta EE
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta EE 简介
- en: Jakarta EE, Java EE, J2EE, and the Spring Framework
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta EE、Java EE、J2EE 和 Spring 框架
- en: Introduction to Jakarta EE
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jakarta EE 简介
- en: Jakarta EE is a collection of API specifications designed to work together when
    developing server-side enterprise Java applications. Jakarta EE is a standard
    for which there are multiple implementations. This fact prevents vendor lock-in
    since code developed against the Jakarta EE specification can be deployed in any
    Jakarta EE-compliant implementation.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Jakarta EE 是一组 API 规范的集合，旨在在开发服务器端企业 Java 应用程序时协同工作。Jakarta EE 是一个有多种实现的标准。这一事实防止了供应商锁定，因为针对
    Jakarta EE 规范开发的代码可以在任何符合 Jakarta EE 规范的实现中部署。
- en: Jakarta EE is an **Eclipse Software Foundation** project. Since the Jakarta
    EE specification is open source, any organization or individual wishing to contribute
    is free to do so.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Jakarta EE 是一个 **Eclipse 软件基金会** 项目。由于 Jakarta EE 规范是开源的，任何希望贡献的组织或个人都可以自由地这样做。
- en: Contributing to Jakarta EE
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贡献给 Jakarta EE
- en: There are many ways of contributing, including participating in discussions
    and providing suggestions for future versions of Jakarta EE. To do so, one simply
    needs to subscribe to the appropriate mailing list, which can be done by visiting
    [https://jakarta.ee/connect/mailing-lists/](https://jakarta.ee/connect/mailing-lists/).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多贡献的方式，包括参与讨论并为 Jakarta EE 的未来版本提供建议。为此，只需订阅适当的邮件列表即可，这可以通过访问 [https://jakarta.ee/connect/mailing-lists/](https://jakarta.ee/connect/mailing-lists/)
    来完成。
- en: In order to subscribe to the mailing list, you need to create a free Eclipse.org
    account at [https://accounts.eclipse.org/user/register](https://accounts.eclipse.org/user/register).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了订阅邮件列表，您需要在 [https://accounts.eclipse.org/user/register](https://accounts.eclipse.org/user/register)
    创建一个免费的 Eclipse.org 账户。
- en: To go beyond participating in discussions and actually contribute code or documentation,
    the Eclipse Contributor Agreement must be signed. The Eclipse Contributor Agreement
    can be found at [https://www.eclipse.org/legal/ECA.php](https://www.eclipse.org/legal/ECA.php).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要超越参与讨论并真正贡献代码或文档，必须签署 Eclipse 贡献者协议。Eclipse 贡献者协议可以在 [https://www.eclipse.org/legal/ECA.php](https://www.eclipse.org/legal/ECA.php)
    找到。
- en: Jakarta EE APIs
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Jakarta EE API
- en: As previously mentioned, Jakarta EE is a collection of API specifications designed
    to work together when developing server-side enterprise Java applications.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Jakarta EE 是一组 API 规范的集合，旨在在开发服务器端企业 Java 应用程序时协同工作。
- en: In addition to the full Jakarta EE platform, there are two Jakarta EE profiles
    that contain a subset of the specifications and APIs included in the full platform.
    The **Jakarta EE Web Profile** contains a subset of specifications and APIs suitable
    for developing web applications. The **Jakarta EE Core Profile** contains an even
    smaller subset of specifications and APIs more suitable for developing microservices.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 除了完整的 Jakarta EE 平台外，还有两个 Jakarta EE 配置文件，它们包含完整平台中包含的部分规范和 API。**Jakarta EE
    网络配置文件**包含适合开发 Web 应用的部分规范和 API。**Jakarta EE 核心配置文件**包含更小的部分规范和 API，更适合开发微服务。
- en: 'The Jakarta EE core profile APIs include the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Jakarta EE 核心配置文件 API 包括以下内容：
- en: Jakarta Context and Dependency Injection Lite (CDI Lite)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta Context 和依赖注入轻量级 (CDI Lite)
- en: Jakarta RESTful Web Services
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta RESTful Web 服务
- en: Jakarta JSON Processing
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta JSON处理
- en: Jakarta JSON Binding
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta JSON绑定
- en: 'The version of Contexts and Dependency Injection API included in the core profile
    is a subset of the full specification. The Jakarta EE Web Profile APIs include
    the full CDI specification instead of CDI Lite, plus all other specifications
    and APIs in the core profile, along with some additional ones:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 核心配置文件中包含的Contexts and Dependency Injection API版本是完整规范的子集。Jakarta EE Web Profile
    API包括完整的CDI规范而不是CDI Lite，以及核心配置文件中的所有其他规范和API，以及一些额外的API：
- en: Jakarta Context and Dependency Injection
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta 上下文和依赖注入
- en: Jakarta Faces
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta Faces
- en: Jakarta Persistence
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta Persistence
- en: Jakarta WebSocket
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta WebSocket
- en: Jakarta Security
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta 安全性
- en: Jakarta Servlet
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta Servlet
- en: Jakarta Enterprise Beans Lite
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta 企业Bean Lite
- en: The version of Jakarta Enterprise Beans included in the Web Profile is a subset
    of the full enterprise beans specification.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Web Profile中包含的Jakarta 企业Bean版本是完整企业Bean规范的子集。
- en: 'The full Jakarta EE Platform includes the full Jakarta Enterprise Beans spec,
    plus all other specifications and APIs included in the Web Profile, along with
    some additional ones:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的Jakarta EE平台包括完整的企业Bean规范，以及Web Profile中包含的所有其他规范和API，以及一些额外的API：
- en: Jakarta Enterprise Beans
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta 企业Bean
- en: Jakarta Messaging
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta 消息传递
- en: Jakarta Enterprise Web Services
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jakarta 企业Web服务
- en: Full list of Jakarta EE APIs
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Jakarta EE API的完整列表
- en: The preceding list is not exhaustive, and only lists some of the most popular
    Jakarta EE APIs. For an exhaustive list of Jakarta EE APIs, please refer to [https://jakarta.ee/specifications/](https://jakarta.ee/specifications/).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的列表并不全面，仅列出了一些最流行的Jakarta EE API。要获取Jakarta EE API的完整列表，请参阅[https://jakarta.ee/specifications/](https://jakarta.ee/specifications/)。
- en: Application server vendors or the open-source community need to provide compatible
    implementations for each Jakarta EE API specification in the preceding list.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 应用服务器供应商或开源社区需要为前面列表中的每个Jakarta EE API规范提供兼容的实现。
- en: One standard, multiple implementations
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个标准，多个实现
- en: At its core, Jakarta EE is a specification, a piece of paper, if you will. Implementations
    of Jakarta EE specifications need to be developed so that application developers
    can actually develop server-side enterprise Java applications against the Jakarta
    EE standard.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在其核心，Jakarta EE是一个规范，如果你愿意，可以说是一张纸。Jakarta EE规范的实现需要开发，以便应用开发者可以针对Jakarta EE标准开发服务器端企业Java应用程序。
- en: Each Jakarta EE API can have multiple implementations. The popular Hibernate
    Object-Relational Mapping tool, for example, is an implementation of Jakarta Persistence,
    but it is by no means the only one. Other Jakarta Persistence implementations
    include EclipseLink and Open JPA. Similarly, there are multiple implementations
    of every single Jakarta EE specification.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Jakarta EE API可以有多个实现。例如，流行的Hibernate对象关系映射工具是Jakarta Persistence的实现，但绝不是唯一的。其他Jakarta
    Persistence实现包括EclipseLink和Open JPA。同样，每个Jakarta EE规范都有多个实现。
- en: Jakarta EE applications are typically deployed to an application server. Some
    popular application servers include JBoss, Websphere, Weblogic, and GlassFish.
    Each application server is considered to be a Jakarta EE implementation. Application
    server vendors either develop their own implementations of the several Jakarta
    EE specifications or choose to include an existing implementation.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Jakarta EE应用程序通常部署到应用服务器。一些流行的应用服务器包括JBoss、Websphere、Weblogic和GlassFish。每个应用服务器都被视为一个Jakarta
    EE实现。应用服务器供应商要么开发自己的一些Jakarta EE规范的实现，要么选择包含现有的实现。
- en: Application developers benefit from the Jakarta EE standard by not being tied
    to a specific Jakarta EE implementation. As long as an application is developed
    against the standard Jakarta EE APIs, it should be very portable across application
    server vendors.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 应用开发者通过不受特定Jakarta EE实现的限制而受益。只要应用程序是针对标准Jakarta EE API开发的，它应该非常易于在不同应用服务器供应商之间移植。
- en: Application server vendors then bundle a set of Jakarta EE API implementations
    together as part of their application server offerings. Since each implementation
    is compliant with the corresponding Jakarta EE specification, code developed against
    one implementation can run unmodified against any other implementation, avoiding
    a vendor lock-in.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 应用服务器供应商然后将一组Jakarta EE API实现捆绑在一起，作为其应用服务器产品的一部分。由于每个实现都符合相应的Jakarta EE规范，针对一个实现开发的代码可以在任何其他实现上无修改地运行，从而避免供应商锁定。
- en: 'The following table lists some popular Jakarta EE implementations:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了一些流行的 Jakarta EE 实现：
- en: '| **Jakarta** **EE Implementation** | **Vendor** | **License** | **URL** |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| **Jakarta** **EE 实现** | **供应商** | **许可** | **URL** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Apache Tomee | Tomitribe | Apache License, Version 2.0 | [https://tomee.apache.org/](https://tomee.apache.org/)
    |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| Apache Tomee | Tomitribe | Apache License, Version 2.0 | [https://tomee.apache.org/](https://tomee.apache.org/)
    |'
- en: '| Eclipse GlassFish | Eclipse Foundation | Eclipse Public License - v 2.0 |
    [https://glassfish.org/](https://glassfish.org/) |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| Eclipse GlassFish | Eclipse Foundation | Eclipse Public License - v 2.0 |
    [https://glassfish.org/](https://glassfish.org/) |'
- en: '| IBM Websphere Liberty | IBM | Commercial | [https://www.ibm.com/products/websphere-liberty](https://www.ibm.com/products/websphere-liberty)
    |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| IBM Websphere Liberty | IBM | 商业 | [https://www.ibm.com/products/websphere-liberty](https://www.ibm.com/products/websphere-liberty)
    |'
- en: '| JBoss Enterprise Application Platform | Red Hat | Commercial | [https://www.redhat.com/en/technologies/jboss-middleware/application-platform](https://www.redhat.com/en/technologies/jboss-middleware/application-platform)
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| JBoss Enterprise Application Platform | Red Hat | 商业 | [https://www.redhat.com/en/technologies/jboss-middleware/application-platform](https://www.redhat.com/en/technologies/jboss-middleware/application-platform)
    |'
- en: '| Open Liberty | IBM | Eclipse Public License 2.0 | [https://openliberty.io/](https://openliberty.io/)
    |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| Open Liberty | IBM | Eclipse Public License 2.0 | [https://openliberty.io/](https://openliberty.io/)
    |'
- en: '| Payara Server Community | Payara Services Ltd | Dual licensed :CDDL 1.1 /
    GPL v2 + Classpath Exception | [https://www.payara.fish/products/payara-platform-community/](https://www.payara.fish/products/payara-platform-community/)
    |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| Payara Server Community | Payara Services Ltd | 双许可：CDDL 1.1 / GPL v2 + Classpath
    Exception | [https://www.payara.fish/products/payara-platform-community/](https://www.payara.fish/products/payara-platform-community/)
    |'
- en: '| Payara Server Enterprise | Payara Services Ltd | Commercial | [https://www.payara.fish/products/payara-platform-community/](https://www.payara.fish/products/payara-platform-community/)
    |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| Payara Server Enterprise | Payara Services Ltd | 商业 | [https://www.payara.fish/products/payara-platform-community/](https://www.payara.fish/products/payara-platform-community/)
    |'
- en: '| Wildfly | Red Hat | LGPL v2.1 | [https://www.wildfly.org/](https://www.wildfly.org/)
    |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| Wildfly | Red Hat | LGPL v2.1 | [https://www.wildfly.org/](https://www.wildfly.org/)
    |'
- en: Table 1.1 – Popular Jakarta EE Implementations
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1.1 – 流行的 Jakarta EE 实现
- en: Note
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For the full list of Jakarta EE-compatible implementations, please refer to
    [https://jakarta.ee/compatibility/](https://jakarta.ee/compatibility/).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对于完整的 Jakarta EE 兼容实现列表，请参阅 [https://jakarta.ee/compatibility/](https://jakarta.ee/compatibility/)。
- en: For most examples in this book, we will be using **GlassFish** as our Jakarta
    EE runtime. This is because it is a high-quality, up-to-date, open-source implementation
    not tied to any particular vendor; all examples should be deployable to any Jakarta
    EE-compliant implementation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的大部分示例中，我们将使用 **GlassFish** 作为我们的 Jakarta EE 运行时。这是因为它是一个高质量、最新的开源实现，不受任何特定供应商的约束；所有示例都应可部署到任何符合
    Jakarta EE 的实现。
- en: Jakarta EE, Java EE, J2EE, and the Spring Framework
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jakarta EE、Java EE、J2EE 和 Spring 框架
- en: In 2017, Oracle donated **Java EE** to the Eclipse Foundation and as part of
    the process, Java EE was renamed Jakarta EE. The donation to the Eclipse Foundation
    meant that the Jakarta EE specification became truly vendor-neutral, with no single
    vendor having control over the specifications.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 2017 年，Oracle 将 **Java EE** 捐赠给了 Eclipse Foundation，作为该过程的一部分，Java EE 被更名为 Jakarta
    EE。向 Eclipse Foundation 的捐赠意味着 Jakarta EE 规范真正实现了供应商中立，没有任何单一供应商对规范拥有控制权。
- en: Java EE, in turn, was introduced back in 2006 by Sun Microsystems. The first
    version of Java EE was Java EE 5\. Java EE replaced **J2EE**; the last version
    of J2EE was J2EE 1.4, released back in 2003\. Even though J2EE can be considered
    obsolete technology, having been superseded by Java EE several years ago and then
    renamed Jakarta EE, the term *J2EE* refuses to die. Many individuals to this day
    still refer to Jakarta EE as J2EE and many companies advertise on their websites
    and job boards that they are looking for “J2EE developers”, seemingly unaware
    that they are referring to a technology that has been obsolete for several years.
    The current correct term for the technology is Jakarta EE.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 是由 Sun Microsystems 在 2006 年引入的。Java EE 的第一个版本是 Java EE 5。Java EE 取代了
    **J2EE**；J2EE 的最后一个版本是 J2EE 1.4，于 2003 年发布。尽管 J2EE 可以被认为是过时的技术，因为它几年前已被 Java EE
    取代，并更名为 Jakarta EE，但术语 *J2EE* 仍然没有消失。时至今日，许多人仍然将 Jakarta EE 称为 J2EE，许多公司在他们的网站和招聘公告上宣称正在寻找“J2EE
    开发者”，似乎没有意识到他们所指的技术已经过时了好几年。当前该技术的正确术语是 Jakarta EE。
- en: Additionally, the term J2EE has become a “catch-all” term for any server-side
    Java technology; frequently Spring applications are referred to as J2EE applications.
    **Spring** is not and never has been J2EE. As a matter of fact, Spring was created
    by Rod Johnson as an alternative to J2EE back in 2002\. Just as with Jakarta EE,
    Spring applications are frequently erroneously referred to as J2EE applications.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，术语J2EE已经成为任何服务器端Java技术的“万能”术语；通常Spring应用程序被称为J2EE应用程序。**Spring**并不是，也从未是J2EE。事实上，Spring是由Rod
    Johnson在2002年作为J2EE的替代品创建的。就像Jakarta EE一样，Spring应用程序经常被错误地称为J2EE应用程序。
- en: Summary
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we provided an introduction to Jakarta EE, outlining a list
    of several technologies and APIs included with Jakarta EE:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了Jakarta EE，概述了包含在Jakarta EE中的几个技术和API列表：
- en: We covered how Jakarta EE is openly developed both by software vendors and the
    Java community at large via the Eclipse Software Foundation
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们介绍了Jakarta EE是如何通过Eclipse软件基金会，由软件供应商和整个Java社区公开开发的
- en: We explained how there are multiple implementations of Jakarta EE, a fact that
    avoids vendor lock-in and allows us to easily migrate our Jakarta EE applications
    from one implementation to another
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们解释了Jakarta EE有多个实现，这一事实避免了供应商锁定，并允许我们轻松地将我们的Jakarta EE应用程序从一个实现迁移到另一个实现
- en: We cleared up the confusion between Jakarta EE, Java EE, J2EE, and Spring, explaining
    how Jakarta EE and Spring applications are frequently referred to as J2EE applications,
    even though J2EE has been obsolete for several years
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们澄清了Jakarta EE、Java EE、J2EE和Spring之间的混淆，解释了尽管J2EE已经过时多年，但Jakarta EE和Spring应用程序经常被错误地称为J2EE应用程序。
- en: Now that we’ve had a general overview of Jakarta EE, we are ready to start learning
    how to use Jakarta EE to develop our applications.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对Jakarta EE有了总体了解，我们准备开始学习如何使用Jakarta EE来开发我们的应用程序。
