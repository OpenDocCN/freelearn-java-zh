- en: Chapter 10. Deployment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章 部署
- en: In this chapter, we will first learn how to manually deploy GWT applications,
    so we can gain familiarity with all the artifacts that are part of the deployment.
    We will then automate this process by using Apache Ant.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先学习如何手动部署GWT应用程序，以便熟悉部署的所有组件。然后，我们将使用Apache Ant自动化这个过程。
- en: 'The tasks that we will address are:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要处理的任务是：
- en: Manual deployment in Tomcat
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Tomcat中手动部署
- en: Automated deployment using Ant
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ant进行自动部署
- en: Deployment from Eclipse
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Eclipse部署
- en: Manual Deployment in Tomcat
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Tomcat中手动部署
- en: We are going to take the `Samples` application that we have been working on
    in this book, and go through the various steps needed to have it manually deployed
    and running in Tomcat.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将采取在本书中一直在进行的`Samples`应用程序，并逐步进行手动部署并在Tomcat中运行所需的各种步骤。
- en: Time for Action—Deploying a GWT Application
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 行动时间-部署GWT应用程序
- en: 'Here are the steps required to manually deploy a GWT application to Tomcat:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是手动部署GWT应用程序到Tomcat所需的步骤：
- en: Download and install Apache Tomcat for your platform ([http://tomcat.apache.org](http://tomcat.apache.org)).
    Select the latest stable version from the 5.x series. I am going to refer to the
    directory where Tomcat is installed as `$TOMCAT_DIR`, and the directory that contains
    the `Samples` project as `$SAMPLES_DIR`.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并安装适用于您平台的Apache Tomcat（[http://tomcat.apache.org](http://tomcat.apache.org)）。从5.x系列中选择最新的稳定版本。我将把Tomcat安装的目录称为`$TOMCAT_DIR`，包含`Samples`项目的目录称为`$SAMPLES_DIR`。
- en: Run `$SAMPLES_DIR/Samples-compile` to compile the entire application. This will
    create a new directory named `www` under `$SAMPLES_DIR`.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`$SAMPLES_DIR/Samples-compile`来编译整个应用程序。这将在`$SAMPLES_DIR`下创建一个名为`www`的新目录。
- en: 'Create a new file named `web.xml` in the `$SAMPLES_DIR` directory. Add a display
    name and a description for our application:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`$SAMPLES_DIR`目录中创建一个名为`web.xml`的新文件。为我们的应用程序添加一个显示名称和描述：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The display name is displayed when you browse the list of deployed applications
    using the Tomcat manager.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 显示名称在使用Tomcat管理器浏览部署应用程序列表时显示。
- en: 'In the `web.xml` file created in the previous step, add entries for each of
    the RPC services we are using in our application and a corresponding servlet mapping
    for each entry. Add an entry for the live-search service:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上一步创建的`web.xml`文件中，为我们应用程序中使用的每个RPC服务添加条目，并为每个条目添加相应的servlet映射。为实时搜索服务添加一个条目：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Add an entry for the password-strength service:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为密码强度服务添加一个条目：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Add an entry for the auto-form-fill service:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为自动表单填充服务添加一个条目：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Add an entry for the dynamic-lists service:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为动态列表服务添加一个条目：
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Add an entry for the pageable-data service:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为可分页数据服务添加一个条目：
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Add an entry for the live-data-grid service:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为实时数据网格服务添加一个条目：
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Add an entry for the log-spy service:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为日志监听服务添加一个条目：
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Add an entry for the weather service:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为天气服务添加一个条目：
- en: '[PRE8]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Add an entry for the welcome file and set the welcome file to the main HTML
    page for our application—`Samples.html:`
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为欢迎文件添加一个条目，并将欢迎文件设置为我们应用程序的主HTML页面`Samples.html`：
- en: '[PRE9]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Create a new directory named `WEB-INF` under the `www/com.packtpub.gwtbook.samples.Samples`
    directory. Create two subdirectories `lib` and `classes` under the `WEB-INF` directory.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`www/com.packtpub.gwtbook.samples.Samples`目录下创建一个名为`WEB-INF`的新目录。在`WEB-INF`目录下创建两个子目录`lib`和`classes`。
- en: Copy the above `web.xml` file to the `WEB-INF` directory.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将上述`web.xml`文件复制到`WEB-INF`目录。
- en: Copy the contents of `$SAMPLES_DIR/bin` to the `WEB-INF/classes` directory.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`$SAMPLES_DIR/bin`目录的内容复制到`WEB-INF/classes`目录。
- en: Copy the contents of `$SAMPLES_DIR/lib` to the `WEB-INF/lib` directory.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`$SAMPLES_DIR/lib`目录的内容复制到`WEB-INF/lib`目录。
- en: Copy the `www/com.packtpub.gwtbook.samples.Samples` directory to `$TOMCAT_DIR/webapps`.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`www/com.packtpub.gwtbook.samples.Samples`目录复制到`$TOMCAT_DIR/webapps`。
- en: 'Start up Tomcat. Once it is up and running, navigate to the following URL to
    see the `Samples` application that we have created in this book:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Tomcat。一旦它启动，转到以下URL以查看我们在本书中创建的`Samples`应用程序：
- en: '`http://localhost:8080/com.packtpub.gwtbook.samples.Samples/`'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://localhost:8080/com.packtpub.gwtbook.samples.Samples/`'
- en: '![Time for Action—Deploying a GWT Application](img/1007_10_01.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间-部署GWT应用程序](img/1007_10_01.jpg)'
- en: What Just Happened?
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: Compiling a GWT application generates HTML and JavaScript for the application
    in the `www` directory. This contains all the artifacts needed for the user interface
    and can actually be run on any web server. However, if you are using any RPC services,
    then you need to ensure that any third-party JARs needed by the services along
    with the service and support classes are deployed to a servlet container along
    with the contents of the `www` directory. We have chosen Tomcat for this, as it
    is one of the most widely used servlet containers and is the reference implementation
    for the JSP and Servlet specifications. We can similarly deploy our application
    to any other container such as Geronimo, JBoss, WebSphere, JOnAS, or Weblogic.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 编译GWT应用程序会在`www`目录中生成应用程序的HTML和JavaScript。这包含了用户界面所需的所有组件，并且实际上可以在任何Web服务器上运行。但是，如果您使用了任何RPC服务，则需要确保服务所需的任何第三方JAR文件以及服务和支持类与`www`目录的内容一起部署到Servlet容器中。我们选择了Tomcat，因为它是最广泛使用的Servlet容器之一，并且是JSP和Servlet规范的参考实现。我们也可以将我们的应用程序部署到其他容器，如Geronimo、JBoss、WebSphere、JOnAS或Weblogic。
- en: Deploying to a servlet container such as Tomcat implies that we structure our
    deployment to mimic the WAR format. So we need to ensure that all the Java classes
    from our application are available in the `WEB-INF/classes` directory, and all
    the JAR files used by our application need to be in the `WEB-INF/lib` directory.
    Accordingly, we copy those artifacts to these directories. We also create a deployment
    descriptor that is needed for Tomcat to recognize our deployment. This file is
    `web.xml`, and it needs to be copied to the `WEB-INF` directory.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 部署到诸如Tomcat之类的servlet容器意味着我们需要结构化我们的部署以模仿WAR格式。因此，我们需要确保我们应用程序的所有Java类都在`WEB-INF/classes`目录中可用，并且我们应用程序使用的所有JAR文件都需要在`WEB-INF/lib`目录中。因此，我们将这些工件复制到这些目录。我们还创建一个部署描述符，Tomcat需要识别我们的部署。这个文件是`web.xml`，它需要被复制到`WEB-INF`目录中。
- en: Once we have everything in place in the `www/com.packtpub.gwtbook.samples.Samples`
    directory, we copy `com.packtpub.gwtbook.samples.Samples` to the web applications
    directory for Tomcat—`$TOMCAT_DIR/webapps`. Then we start Tomcat, which on startup
    will register the application from the `web.xml` file and make it available at
    the context—`com.packtpub.gwtbook.samples.Samples`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们在`www/com.packtpub.gwtbook.samples.Samples`目录中准备好一切，我们将`com.packtpub.gwtbook.samples.Samples`复制到Tomcat的Web应用程序目录`$TOMCAT_DIR/webapps`。然后我们启动Tomcat，启动时将从`web.xml`文件中注册应用程序，并使其在上下文`com.packtpub.gwtbook.samples.Samples`中可用。
- en: Automated Deployment Using Ant
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ant进行自动部署
- en: We are going to make things easier on ourselves and reduce the tedious work,
    by letting Ant handle the deployment of our GWT application. We will automate
    everything we did in the previous section by using Apache Ant.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过使用Apache Ant让Ant处理我们的GWT应用程序的部署，从而使我们的工作变得更加轻松，减少繁琐的工作。我们将通过使用Apache Ant自动化我们在上一节中所做的一切。
- en: Time for Action—Creating the Ant Build File
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作时间-创建Ant构建文件
- en: 'Here are the steps for automating the deployment to Tomcat:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是自动部署到Tomcat的步骤：
- en: 'We will modify the `$SAMPLES_DIR/Samples.ant.xml` file that was created when
    we ran `applicationCreator` to create our project in[Chapter 3](ch03.html "Chapter 3. Creating
    Services"). Create global properties to refer various directories:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将修改在[第3章](ch03.html "第3章。创建服务")中运行`applicationCreator`创建的`$SAMPLES_DIR/Samples.ant.xml`文件，以创建全局属性来引用各种目录：
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Add the JARs that we will need while compiling to the `classpath:`
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们在编译时需要的JAR文件添加到`classpath`中：
- en: '[PRE11]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Modify the `clean` target to include other artifacts to clean up:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`clean`目标以包括其他要清除的工件：
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Create a new target named `create-war:`
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`create-war:`的新目标。
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Create a new target named `deploy-war:`
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`deploy-war:`的新目标
- en: '[PRE14]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Install Apache Ant if you do not already have it ([http://ant.apache.org](http://ant.apache.org)).
    Make sure that the Ant binary is on your `path`.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有安装Apache Ant，请安装它（[http://ant.apache.org](http://ant.apache.org)）。确保Ant二进制文件在您的`path`上。
- en: 'Run Ant from `$SAMPLES_DIR` with these parameters:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下参数从`$SAMPLES_DIR`运行Ant：
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This will clean the build artifacts, compile the entire application, create
    a WAR file, and deploy the WAR file to Tomcat. You can access the deployed application
    at the URL `http://localhost:8080/Samples`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这将清除构建工件，编译整个应用程序，创建一个WAR文件，并将WAR文件部署到Tomcat。您可以在URL`http://localhost:8080/Samples`访问部署的应用程序。
- en: 'Here is the output when you run Ant:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行Ant时，这是输出：
- en: '![Time for Action—Creating the Ant Build File](img/1007_10_02.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间-创建Ant构建文件](img/1007_10_02.jpg)'
- en: What Just Happened?
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: Apache Ant provides a great way to automate deploying our application. We create
    targets for cleaning out the old build artifacts, creating a WAR file, and deploying
    this WAR file to the Tomcat `webapps` directory. The `applicationCreator` command
    has an option for generating a simple `build.xml` file. We used this option to
    generate a skeleton `build.xml` file for our `Samples` project in[Chapter 3](ch03.html
    "Chapter 3. Creating Services"). We took this generated file and modified it to
    add all the additional targets that we needed. We also packaged all the `class`
    files for our application into `Samples.jar` instead of copying the classes themselves.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Ant提供了一种很好的自动部署应用程序的方式。我们为清除旧的构建工件、创建WAR文件和将此WAR文件部署到Tomcat的`webapps`目录创建了目标。`applicationCreator`命令有一个选项用于生成一个简单的`build.xml`文件。我们使用此选项在[第3章](ch03.html
    "第3章。创建服务")中为我们的`Samples`项目生成了一个骨架`build.xml`文件。我们拿到这个生成的文件并修改它以添加我们需要的所有其他目标。我们还将我们应用程序的所有`class`文件打包到`Samples.jar`中，而不是复制类本身。
- en: Deployment from Eclipse
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Eclipse部署
- en: In the previous section, we created the build file that is used along with Ant
    to automate deployment of our application to Tomcat. However, we were running
    Ant from the command line. In this section, we will go through the steps needed
    to run Ant from inside Eclipse.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们创建了与Ant一起使用的构建文件，以自动部署我们的应用程序到Tomcat。但是，我们是从命令行运行Ant的。在本节中，我们将介绍从Eclipse内部运行Ant所需的步骤。
- en: Time for Action—Running Ant from Eclipse
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作时间-从Eclipse运行Ant
- en: 'Here are the steps for running our build file from inside Eclipse:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是从Eclipse内部运行我们的构建文件的步骤：
- en: Right-click the `Samples.ant.xml` file in the **Navigator** view in Eclipse.
    This will display the option for running Ant. Select **Run As | 1 Ant Build:**![Time
    for Action—Running Ant from Eclipse](img/1007_10_03.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Eclipse的**Navigator**视图中右键单击`Samples.ant.xml`文件。这将显示运行Ant的选项。选择**Run As | 1
    Ant Build:**![操作时间-从Eclipse运行Ant](img/1007_10_03.jpg)
- en: This will execute Ant and display the output by running the build in the **Console**
    view in Eclipse:![Time for Action—Running Ant from Eclipse](img/1007_10_04.jpg)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将执行Ant并通过在Eclipse的**Console**视图中运行构建来显示输出：![操作时间-从Eclipse运行Ant](img/1007_10_04.jpg)
- en: The previous screenshot shows the output of the `compile` target from the Ant
    script, which is the default target if you don't specify any other. Now we are
    going to run the `deploy-war` target. Right-click the `Samples.ant.xml` file again
    in the **Navigator** view in Eclipse. This time select **Run As | 2 Ant Build...**
    option, as shown in the following screenshot:![Time for Action—Running Ant from
    Eclipse](img/1007_10_05.jpg)
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上一张截图显示了Ant脚本中`compile`目标的输出，这是默认目标，如果您没有指定其他目标。现在我们将运行`deploy-war`目标。在Eclipse的**导航器**视图中再次右键单击`Samples.ant.xml`文件。这次选择**运行为|
    2 Ant构建...**选项，如下图所示：![操作时间-从Eclipse运行Ant](img/1007_10_05.jpg)
- en: This will display the window where you can select which target to execute:![Time
    for Action—Running Ant from Eclipse](img/1007_10_06.jpg)
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将显示一个窗口，您可以在其中选择要执行的目标：![操作时间-从Eclipse运行Ant](img/1007_10_06.jpg)
- en: Select `deploy-war` and click **Run** to run the Ant build. The output will
    be displayed in the **Console** view in Eclipse:![Time for Action—Running Ant
    from Eclipse](img/1007_10_07.jpg)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`deploy-war`并单击**运行**以运行Ant构建。输出将显示在Eclipse的**控制台**视图中：![操作时间-从Eclipse运行Ant](img/1007_10_07.jpg)
- en: Now we can run Ant from inside Eclipse and successfully deploy our application
    to Tomcat.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以从Eclipse内部运行Ant，并成功将应用程序部署到Tomcat。
- en: What Just Happened?
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: Eclipse provides excellent support for editing and running Ant build files.
    It recognizes `build.xml` files, and adds context actions to the various views
    so that you can right-click on a `build.xml` file and execute an Ant build. It
    also provides you with the option to run a specified target instead of just running
    the default target specified in the file. In this section, we learned how to use
    this support so that we can deploy to Tomcat directly from inside the Eclipse
    environment.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse为编辑和运行Ant构建文件提供了出色的支持。它识别`build.xml`文件，并在各个视图中添加上下文操作，以便您可以右键单击`build.xml`文件并执行Ant构建。它还为您提供了运行指定目标的选项，而不仅仅是运行文件中指定的默认目标。在本节中，我们学习了如何使用这种支持，以便我们可以直接从Eclipse环境中部署到Tomcat。
- en: Summary
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned to manually deploy our GWT application to Tomcat.
    Then, we saw how to automate the deployment with Ant, which lets us deploy our
    application from the command line.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学会了手动将GWT应用程序部署到Tomcat。然后，我们看到了如何使用Ant自动化部署，这使我们可以从命令行部署我们的应用程序。
- en: Finally, we leveraged Eclipse's built-in Ant support to run our Ant build file
    from inside Eclipse.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们利用了Eclipse内置的Ant支持，从Eclipse内部运行了我们的Ant构建文件。
