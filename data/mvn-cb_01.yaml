- en: Chapter 1. Getting Started
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 入门
- en: 'In this chapter, we will cover the basic tasks related to getting started with
    Apache Maven:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍与Apache Maven入门相关的基本任务：
- en: Installing Maven on Microsoft Windows
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Microsoft Windows上安装Maven
- en: Installing Maven on Mac OS X
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Mac OS X上安装Maven
- en: Installing Maven on Linux
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Linux上安装Maven
- en: Changing the JDK used by Maven
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改Maven使用的JDK
- en: Creating a simple project with Maven
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Maven创建一个简单的项目
- en: Building a simple project with Maven
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Maven构建一个简单的项目
- en: Changing the location of the Maven repository
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改Maven仓库的位置
- en: Running Maven behind an HTTP proxy server
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在HTTP代理服务器后面运行Maven
- en: Understanding the standard directory layout
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解标准目录结构
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Apache Maven is a popular tool for build automation, primarily Java projects.
    Maven addresses two aspects of building software. First, it describes how a software
    is built and, second, it describes its dependencies. It uses conventions for the
    build procedure. An XML file describes the software project being built, its dependencies
    on other external modules and components, the build order, directories, and required
    plugins. It comes with predefined targets to perform certain well-defined tasks,
    such as code compilation and its packaging. Maven dynamically downloads Java libraries
    and Maven plugins from one or more repositories, such as the **Maven Central Repository**,
    and stores them locally.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Maven是构建自动化领域的一个流行工具，主要用于Java项目。Maven解决了构建软件的两个方面。首先，它描述了软件是如何构建的，其次，它描述了其依赖关系。它使用约定来描述构建过程。一个XML文件描述了正在构建的软件项目，它对其他外部模块和组件的依赖关系，构建顺序，目录和所需的插件。它包含预定义的目标来执行某些定义明确的任务，例如代码编译和打包。Maven从一个或多个仓库（如**Maven
    Central Repository**）动态下载Java库和Maven插件，并将它们存储在本地。
- en: Ever since Maven 1.0 was released in 2004, it has gained popularity and is today
    the build tool for a large number of open source and commercial projects.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 自从2004年Maven 1.0版本发布以来，它已经获得了广泛的认可，并且如今已成为大量开源和商业项目的构建工具。
- en: If you are reading this book, then you are not here to understand why Maven
    is required. You are here to explore Maven and unleash the potential that it offers.
    The objective of this book is to make the reader aware of Maven's various features,
    which include installation, configuration, and simple to complex usage by means
    of examples, illustrations, and working projects.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在阅读这本书，那么你并不是来了解为什么需要Maven的。你是来探索Maven并释放它所提供的潜力的。本书的目标是让读者了解Maven的各种特性，包括安装、配置以及通过示例、插图和工作项目进行简单到复杂的用法。
- en: A brief comparison with other build automation tools
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与其他构建自动化工具的简要比较
- en: 'Let''s briefly discuss some build automation tools:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要讨论一些构建自动化工具：
- en: '**Make**: If you are from the C programming world, chances are you have used
    Make. Makefiles are not platform-independent. They are not natively compatible
    with Windows. Thus, they are unsuited to build Java projects.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Make**：如果你来自C编程世界，那么你很可能使用过Make。Makefiles不是平台无关的。它们与Windows原生不兼容。因此，它们不适合构建Java项目。'
- en: '**Ant**: This is modeled after Make and has targets and dependencies. Each
    target has a set of tasks. Ant doesn''t have any conventions. It is procedural
    and does not have the concept of a build lifecycle. Maven has conventions, is
    declarative, and has a lifecycle.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ant**：这是基于Make的，有目标和依赖关系。每个目标都有一组任务。Ant没有约定。它是过程性的，并且没有构建生命周期的概念。Maven有约定，是声明性的，并且有生命周期。'
- en: In this chapter, we will cover the basics of Maven—installing the software,
    verifying the installation, and creating, implementing, and building a simple
    Java project. We will also cover a few advanced items, such as changing the location
    of the repository or running Maven behind an HTTP proxy server as it could be
    relevant to those who have issues with the way Maven works by default.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍Maven的基础知识——安装软件、验证安装以及创建、实现和构建一个简单的Java项目。我们还将介绍一些高级主题，例如更改仓库位置或在HTTP代理服务器后面运行Maven，这对于那些对Maven默认工作方式有问题的用户可能是有用的。
- en: Let us start by setting up Maven. We will cover how to do this on the three
    popular operating systems, namely Microsoft Windows, Mac OS X, and Linux.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先设置Maven。我们将介绍如何在三个流行的操作系统上完成这一操作，即Microsoft Windows、Mac OS X和Linux。
- en: Installing Maven on Microsoft Windows
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Microsoft Windows上安装Maven
- en: At the time of writing this book, Microsoft Windows 8.1 is the latest version
    of Microsoft Windows. While the screenshots and output will be for Microsoft Windows
    8.1, the steps are similar for earlier (and possibly later) versions as well.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，Microsoft Windows 8.1 是 Microsoft Windows 的最新版本。虽然截图和输出将是针对 Microsoft
    Windows 8.1 的，但步骤对于早期（以及可能更晚）的版本也是相似的。
- en: Getting ready
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: As Maven requires a Java platform, first ensure that you have installed the
    Java environment on your system, **Java Development Kit** (**JDK**) specifically;
    **Java Runtime Environment** (**JRE**) is not sufficient.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Maven 需要一个 Java 平台，首先请确保您已经在系统上安装了 Java 环境，特别是**Java 开发工具包**（**JDK**）；**Java
    运行环境**（**JRE**）是不够的。
- en: 'You can verify whether Java is installed on your system by opening **Add or
    Remove Programs**. If you see something similar to the following screenshot, JDK
    is installed on your system:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过打开 **添加或删除程序** 来验证 Java 是否已安装在您的系统上。如果您看到以下截图类似的内容，JDK 已安装在您的系统上：
- en: '![Getting ready](img/6124OS_01_01.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/6124OS_01_01.jpg)'
- en: 'You can also verify the program folder structure from Microsoft Windows Explorer:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从 Microsoft Windows 资源管理器验证程序文件夹结构：
- en: '![Getting ready](img/6124OS_01_09.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/6124OS_01_09.jpg)'
- en: How to do it...
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s start installing Java and Maven by performing the following steps:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从执行以下步骤开始安装 Java 和 Maven：
- en: 'Set the variable `JAVA_HOME` to point to the Java installation that you want
    Maven to use; for example, you can do this by setting `JAVA_HOME` variable in
    the following way:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将变量 `JAVA_HOME` 设置为指向 Maven 要使用的 Java 安装；例如，您可以通过以下方式设置 `JAVA_HOME` 变量：
- en: '[PRE0]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that this setting will not be persisted once the command prompt is closed.
    To persist this, set **Environment Variables...** using the **Control Panel**
    option, as described later for the `M2_HOME` variable.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，此设置在关闭命令提示符后不会持久化。要持久化此设置，请使用 **控制面板** 选项中的 **环境变量...**，如稍后所述的 `M2_HOME`
    变量。
- en: If JDK is not installed on your system, now is the time to download and install
    it from the Oracle Java SE download page at [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的系统上未安装 JDK，现在是时候从 Oracle Java SE 下载页面 [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    下载并安装它了。
- en: Once it is installed, ensure `JAVA_HOME` is set as described earlier.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 安装完成后，请确保 `JAVA_HOME` 已按前面所述设置。
- en: Now that we have set up Java, let us download and set up Maven.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们已经设置了 Java，让我们下载并设置 Maven。
- en: Go to [http://maven.apache.org/](http://maven.apache.org/) and click on the
    **Download** link.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 [http://maven.apache.org/](http://maven.apache.org/) 并点击 **下载** 链接。
- en: The links to the latest stable versions of Maven are displayed.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示了 Maven 最新稳定版本的链接。
- en: The binaries are available in both, `.zip` and `.tar.gz` formats. Choose one
    of them.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 二进制文件以 `.zip` 和 `.tar.gz` 格式提供。选择其中之一。
- en: Extract the downloaded binary to a folder you want Maven to reside in. In this
    case I have chosen `C:\software`.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的二进制文件解压到您希望 Maven 存放的文件夹中。在这个例子中，我选择了 `C:\software`。
- en: Tip
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It is best to avoid folders with spaces as some features of Maven or its plugins
    might not work.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最好避免使用含有空格的文件夹，因为 Maven 或其插件的某些功能可能无法正常工作。
- en: Ensure the contents are similar to the following screenshot:![How to do it...](img/6124OS_01_02.jpg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保内容与以下截图类似：![如何操作...](img/6124OS_01_02.jpg)
- en: The preceding screenshot displays a list of directories contained in Maven.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图显示了 Maven 包含的目录列表。
- en: 'Now let''s briefly discuss what these directories contain:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们简要讨论一下这些目录包含的内容：
- en: The `bin` folder contains the batch files and shell scripts to run Maven on
    various platforms.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bin` 文件夹包含在各个平台上运行 Maven 所需的批处理文件和 shell 脚本。'
- en: The `boot` folder contains the jars required for Maven to start.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`boot` 文件夹包含 Maven 启动所需的 jar 文件。'
- en: The `conf` folder contains the default `settings.xml` file used by Maven.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`conf` 文件夹包含 Maven 使用的默认 `settings.xml` 文件。'
- en: The `lib` folder contains the libraries used by Maven. It also contains an `ext`
    folder in which third-party extensions, which can extend or override the default
    Maven implementation, can be placed.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lib` 文件夹包含 Maven 使用的库。它还包含一个 `ext` 文件夹，其中可以放置第三方扩展，这些扩展可以扩展或覆盖默认的 Maven 实现。'
- en: 'Now let us make sure we can run Maven from the command prompt by carrying out
    the following steps:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来确保可以从命令提示符运行 Maven，通过执行以下步骤：
- en: Open **Control Panel**:![How to do it...](img/6124OS_01_03.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 **控制面板**：![如何操作...](img/6124OS_01_03.jpg)
- en: Choose **Advanced system settings**:![How to do it...](img/6124OS_01_04.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **高级系统设置**：![如何操作...](img/6124OS_01_04.jpg)
- en: Click on **Environment Variables...**. Add the `M2_HOME` variable and set it
    to the folder where Maven was extracted.![How to do it...](img/6124OS_01_05.jpg)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **环境变量...**。添加 `M2_HOME` 变量并将其设置为 Maven 提取的文件夹。![如何操作...](img/6124OS_01_05.jpg)
- en: Edit the `PATH` variable to include Maven's `bin` folder:![How to do it...](img/6124OS_01_06.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 `PATH` 变量以包括 Maven 的 `bin` 文件夹。![如何操作...](img/6124OS_01_06.jpg)
- en: How it works...
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: A Maven installation is essentially a set of JAR files, configuration files,
    and a Microsoft Windows batch file, `mvn.bat`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 安装本质上是一组 JAR 文件、配置文件和一个 Microsoft Windows 批处理文件 `mvn.bat`。
- en: The `mvn` command essentially runs this batch file. It first checks for `JAVA_HOME`.
    This file is present in the `bin` folder of the Maven installation and, hence,
    it needs to be in `PATH`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`mvn` 命令本质上运行这个批处理文件。它首先检查 `JAVA_HOME`。此文件位于 Maven 安装的 `bin` 文件夹中，因此它需要位于 `PATH`
    中。'
- en: If the batch file does not find `JAVA_HOME`, it looks for `Java` in its `PATH`.
    This can lead to unexpected results, as typically the `Java` in `PATH` is usually
    the JRE and not the JDK.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果批处理文件找不到 `JAVA_HOME`，它会在其 `PATH` 中查找 `Java`。这可能导致意外结果，因为通常 `PATH` 中的 `Java`
    是 JRE 而不是 JDK。
- en: The batch file then looks for `M2_HOME`, which is the location of the Maven
    installation. It does this so that it can load the libraries that are present.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 批处理文件接着查找 `M2_HOME`，这是 Maven 安装的位置。它这样做是为了能够加载存在的库。
- en: Additionally, it also reads values specified in `MAVEN_OPTS`. This variable
    allows you to run Maven with an additional heap size and other Java parameters.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它还会读取在 `MAVEN_OPTS` 中指定的值。此变量允许您使用额外的堆大小和其他 Java 参数运行 Maven。
- en: Using the values for `JAVA_HOME`, `M2_HOME`, and `Maven_OPTS`, the batch file
    runs its main class `org.codehaus.plexus.classworlds.launcher.Launcher`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `JAVA_HOME`、`M2_HOME` 和 `Maven_OPTS` 的值，批处理文件会运行其主类 `org.codehaus.plexus.classworlds.launcher.Launcher`。
- en: There's more...
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'Verify your Maven installation using the following steps:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下步骤验证您的 Maven 安装：
- en: 'Open a command prompt in Microsoft Windows and run the following command:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Microsoft Windows 中打开命令提示符并运行以下命令：
- en: '[PRE1]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following output should be displayed:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该显示以下输出：
- en: '[PRE2]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: See also
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关阅读
- en: The *Creating a simple project with Maven* recipe in this chapter
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中 *使用 Maven 创建简单项目* 的配方
- en: Installing Maven on Mac OS X
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Mac OS X 上安装 Maven
- en: Let us look at the steps to install Maven on Mac OS X. This applies to the latest
    version of Mac OS X, namely Yosemite.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看在 Mac OS X 上安装 Maven 的步骤。这适用于最新的 Mac OS X 版本，即 Yosemite。
- en: Earlier, Apple provided Java for Mac, but stopped doing so from Java 7 onwards.
    Apple Java is not available on recent versions of Mac OS X.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，苹果为 Mac 提供了 Java，但从 Java 7 开始停止了这一做法。苹果 Java 不适用于最新的 Mac OS X 版本。
- en: Getting ready
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: 'Let us check if the Java environment is available on your Mac:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查您的 Mac 上是否有 Java 环境：
- en: 'Open the terminal and run the following command:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并运行以下命令：
- en: '[PRE3]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'See if you get an output similar to the following:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看您是否得到以下类似的输出：
- en: '[PRE4]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Run the following command to check if you have Java 8:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以检查您是否有 Java 8：
- en: '[PRE5]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This should give the following output if Java exists:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果存在 Java，这将给出以下输出：
- en: '[PRE6]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As you can see, my system has both Java 1.7 and 1.8.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您所见，我的系统上既有 Java 1.7 也有 1.8。
- en: 'Set `JAVA_HOME` to the desired JDK. This can be done in two ways, depending
    on what you desire:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `JAVA_HOME` 设置为所需的 JDK。这可以通过两种方式完成，具体取决于您的需求：
- en: 'If this is for the duration of the session, run the following command:'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果这是会话期间的临时设置，请运行以下命令：
- en: '[PRE7]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If this is permanent, add the preceding line in `.bash_profile` in your `HOME`
    folder
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果这是永久的，请将前面的行添加到您的 `HOME` 文件夹中的 `.bash_profile`。
- en: Tip
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Ensure you have the JDK installation and not JRE.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您有 JDK 安装而不是 JRE。
- en: If Java is not present, download and install Java from the Oracle Java download
    page at [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有 Java，请从 Oracle Java 下载页面 [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    下载并安装 Java。
- en: Once installed, verify the Java installation by following the preceding steps.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，按照前面的步骤验证 Java 安装。
- en: Now, let us set up Maven on Mac OS X.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在 Mac OS X 上设置 Maven。
- en: How to do it...
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s download Maven from its official website by performing the following
    steps:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤从其官方网站下载 Maven：
- en: Go to [http://maven.apache.org/](http://maven.apache.org/) and click on the
    **Download** link. Links to the latest stable versions of Maven will be displayed.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 [http://maven.apache.org/](http://maven.apache.org/) 并点击 **下载** 链接。将显示Maven的最新稳定版本的链接。
- en: The binaries are available in both `.zip` and `.tar.gz` formats. Choose one
    of them.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 二进制文件以 `.zip` 和 `.tar.gz` 格式提供。选择其中之一。
- en: Extract the downloaded binary to the folder you want Maven to reside in. The
    typical location for the Mac is `/usr/local` folder.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的二进制文件提取到你想让Maven存放的文件夹中。对于Mac来说，通常是 `/usr/local` 文件夹。
- en: You will need a super user (su) or administrator access to place the contents
    in the `/usr/local` folder. If you do not have access, you can place the contents
    in a subfolder of your `HOME` folder.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要超级用户（su）或管理员权限才能将内容放置在 `/usr/local` 文件夹中。如果没有权限，可以将内容放置在 `HOME` 文件夹的子文件夹中。
- en: 'Ensure the contents are similar to the following output by executing the following
    command:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令确保内容与以下输出类似：
- en: '[PRE8]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output is shown as:'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '[PRE9]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Set the `M2_HOME` variable as follows:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下设置 `M2_HOME` 变量：
- en: '[PRE10]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Update the `PATH` to include Maven''s `bin` folder:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `PATH` 更新为包括Maven的 `bin` 文件夹：
- en: '[PRE11]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Tip
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Like `JAVA_HOME`, the preceding settings can be persisted by updating `.bash_profile`
    with the preceding lines.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `JAVA_HOME` 一样，前面的设置可以通过更新 `.bash_profile` 中的前几行来持久化。
- en: 'In the preceding steps, we discussed the steps to download Maven from its official
    website. We will now discuss installing Maven using brew. Brew is a popular application
    on Mac OS X to install open source software. If you have brew installed on your
    Mac OS X, run the following command to install Maven:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的步骤中，我们讨论了从官方网站下载Maven的步骤。现在，我们将讨论使用brew安装Maven。Brew是Mac OS X上安装开源软件的流行应用程序。如果你在Mac
    OS X上安装了brew，运行以下命令来安装Maven：
- en: '[PRE12]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output for the preceding command will be displayed as shown in the following
    screenshot:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个命令的输出将显示如下截图：
- en: '![How to do it...](img/6124OS_01_10.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/6124OS_01_10.jpg)'
- en: How it works...
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Maven installation is essentially a set of JAR files, configuration files,
    and a Mac OS X shell script, namely `mvn`.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Maven安装本质上是一组JAR文件、配置文件和一个Mac OS X shell脚本，即 `mvn`。
- en: The `mvn` command essentially runs this script. It first checks for `JAVA_HOME`.
    This file is present in the `bin` folder of the Maven installation and, hence,
    it needs to be in `PATH`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`mvn` 命令本质上运行这个脚本。它首先检查 `JAVA_HOME`。这个文件位于Maven安装的 `bin` 文件夹中，因此它需要位于 `PATH`
    中。'
- en: If the shell script does not find `JAVA_HOME`, it looks for `Java` in its `PATH`.
    This can lead to unexpected results, as typically the `Java` in `PATH` is usually
    the JRE installation and not JDK.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果shell脚本找不到 `JAVA_HOME`，它会在其 `PATH` 中查找 `Java`。这可能会导致意外结果，因为通常 `PATH` 中的 `Java`
    是JRE安装，而不是JDK。
- en: The shell script then looks for `M2_HOME`, which is the location for the Maven
    installation. It does this so that it can load the libraries that are present.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 然后shell脚本会查找 `M2_HOME`，这是Maven安装的位置。这样做是为了能够加载现有的库。
- en: Additionally, it also reads values specified in `MAVEN_OPTS`. This variable
    allows you to run Maven with an additional heap size and other Java parameters.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它还会读取在 `MAVEN_OPTS` 中指定的值。这个变量允许你以额外的堆大小和其他Java参数运行Maven。
- en: Using the values for `JAVA_HOME`, `M2_HOME`, and `MAVEN_OPTS`, the shell script
    runs its main class `org.codehaus.plexus.classworlds.launcher.Launcher`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `JAVA_HOME`、`M2_HOME` 和 `MAVEN_OPTS` 的值，shell脚本运行其主类 `org.codehaus.plexus.classworlds.launcher.Launcher`。
- en: There's more...
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'Verify your Maven installation using the following steps:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下步骤验证你的Maven安装：
- en: 'Open a command prompt and run the following command:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符并运行以下命令：
- en: '[PRE13]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The output for the preceding command should be displayed as shown in the following
    screenshot:![There's more...](img/6124OS_01_11.jpg)
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前一个命令的输出应显示如下截图所示：![更多内容...](img/6124OS_01_11.jpg)
- en: See also
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Creating a simple project with Maven* recipe in this chapter
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中 *使用Maven创建简单项目* 的配方
- en: Installing Maven on Linux
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux上安装Maven
- en: Let us look at the steps to install Maven on Linux.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看在Linux上安装Maven的步骤。
- en: While there are many flavors of Linux (Ubuntu, Fedora, RHEL, SUSE, CentOS, and
    so on), the steps to set up Maven are similar.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有众多Linux版本（Ubuntu、Fedora、RHEL、SUSE、CentOS等），但设置Maven的步骤是相似的。
- en: Getting ready
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Maven needs Java, specifically the Java Development Kit (JDK). Using the following
    steps, let us check if it is installed in your Linux system, which is a bit tricky:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 需要 Java，特别是 Java 开发工具包 (JDK)。使用以下步骤，让我们检查它是否已安装在你的 Linux 系统中，这有点复杂：
- en: 'Open a terminal and run the following command:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并运行以下命令：
- en: '[PRE14]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'See if you get an output similar to the following:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查你是否得到了以下类似的输出：
- en: '[PRE15]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The preceding output will still not tell you where your Java is installed, which
    is required to set `JAVA_HOME`. You can get this information by performing the
    next set of steps.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前一个输出仍然无法告诉你 Java 的安装位置，这是设置 `JAVA_HOME` 所必需的。你可以通过执行以下步骤来获取这个信息。
- en: 'Check if `javac` works; it does only if JDK is installed, not JRE:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 `javac` 是否工作；它只有在 JDK 安装的情况下才会工作，而不是 JRE：
- en: '[PRE16]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output for the preceding command is shown as:'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前一个命令的输出如下所示：
- en: '[PRE17]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Find the location of the `javac` command:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找 `javac` 命令的位置：
- en: '[PRE18]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The output for the preceding command is shown as:'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前一个命令的输出如下所示：
- en: '[PRE19]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'In the preceding output, `javac` is a symbolic link to the actual location
    of the file. Try to determine this location in the following way:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前面的输出中，`javac` 是指向文件实际位置的符号链接。你可以通过以下方式尝试确定这个位置：
- en: '[PRE20]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The output for the preceding command is shown as:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前一个命令的输出如下所示：
- en: '[PRE21]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'By executing the preceding command, we again got the symbolic link. To get
    the path to the location of `javac`, we execute the following command again:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行前面的命令，我们再次得到了符号链接。要获取 `javac` 位置的路径，我们再次执行以下命令：
- en: '[PRE22]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The output for the preceding command is shown as:'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前一个命令的输出如下所示：
- en: '[PRE23]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We have now located the folder where JDK is installed:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在已经找到了 JDK 安装的文件夹：
- en: '[PRE24]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Set `JAVA_HOME` to the preceding folder. This can be done in two ways, depending
    on what you desire:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `JAVA_HOME` 设置为上一个文件夹。这可以通过两种方式完成，具体取决于你的需求：
- en: 'If it is for the duration of the session, run the following command:'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果这是会话期间的临时设置，请运行以下命令：
- en: '[PRE25]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: If this is permanent, add the preceding line in `.bash_profile` in your `HOME`
    folder.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果这是永久的，请将前面的行添加到你的 `HOME` 文件夹中的 `.bash_profile` 文件中。
- en: If Java is not present, download and install Java from the Oracle Java download
    page at [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Java 不存在，请从 Oracle Java 下载页面 [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    下载并安装 Java。
- en: If you have an rpm-based Linux distribution, you can download and install `rpm`.
    Otherwise, you can download the `.tar.gz` format of the distribution and extract
    it to a folder of your choice.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个基于 rpm 的 Linux 发行版，你可以下载并安装 `rpm`。否则，你可以下载发行版的 `.tar.gz` 格式并将其解压到你选择的文件夹中。
- en: In the earlier case, you know exactly where Java is installed and can set `JAVA_HOME`
    correspondingly. Once installed, verify the Java installation by following the
    preceding steps.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，你知道 Java 的确切安装位置，并可以相应地设置 `JAVA_HOME`。一旦安装，可以通过遵循前面的步骤来验证 Java 安装。
- en: Now, let us set up Maven on Linux.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在 Linux 上设置 Maven。
- en: How to do it...
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'To set up Maven on Linux, perform the following steps:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Linux 上设置 Maven，请执行以下步骤：
- en: Go to [http://maven.apache.org/](http://maven.apache.org/) and click on the
    **Download** link. The links to latest stable versions of Maven will be displayed.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 [http://maven.apache.org/](http://maven.apache.org/) 并点击 **下载** 链接。将显示 Maven
    最新稳定版本的链接。
- en: The binaries are available in both `.zip` and `.tar.gz` formats. For Mac OS
    X and Linux, the preferred download format is `.tar.gz`.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 二进制文件以 `.zip` 和 `.tar.gz` 格式提供。对于 Mac OS X 和 Linux，首选的下载格式是 `.tar.gz`。
- en: Extract the downloaded binary to a folder you want Maven to reside in. The typical
    location in Linux is the `/usr/local` folder.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的二进制文件解压到你希望 Maven 存放的文件夹中。在 Linux 中，典型的位置是 `/usr/local` 文件夹。
- en: Tip
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You will need a super user (su) or administrator access to place contents in
    the `/usr/local` folder. If you do not have access, you can place this in a subfolder
    of your `HOME` folder.
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你需要超级用户 (su) 或管理员权限才能将内容放置在 `/usr/local` 文件夹中。如果你没有权限，你可以在 `HOME` 文件夹的子文件夹中放置它。
- en: 'Execute the following command, and ensure the contents of the `apache-maven-3.2.5`
    folder are similar to the following output:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下命令，并确保 `apache-maven-3.2.5` 文件夹的内容与以下输出类似：
- en: '[PRE26]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The output for the preceding command is shown as:'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前一个命令的输出如下所示：
- en: '[PRE27]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Set the `M2_HOME` variable as follows:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `M2_HOME` 变量设置如下：
- en: '[PRE28]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Update `PATH` to include Maven''s `bin` folder:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `PATH` 以包括 Maven 的 `bin` 文件夹：
- en: '[PRE29]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Like `JAVA_HOME`, the preceding settings can be persisted by updating `.bash_profile`.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `JAVA_HOME` 类似，前面的设置可以通过更新 `.bash_profile` 来持久化。
- en: How it works...
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Maven installation is essentially a set of JAR files, configuration files,
    and a Linux shell script, namely `mvn`.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 的安装本质上是一组 JAR 文件、配置文件和一个 Linux shell 脚本，即 `mvn`。
- en: The `mvn` command essentially runs this script. It first checks for `JAVA_HOME`.
    This file is present in the `bin` folder of the Maven installation and hence needs
    to be in `PATH`.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`mvn` 命令本质上运行此脚本。它首先检查 `JAVA_HOME`。此文件位于 Maven 安装的 `bin` 文件夹中，因此需要位于 `PATH`
    中。'
- en: If the shell script does not find `JAVA_HOME`, it looks for `java` in its `PATH`.
    This can lead to unexpected results, as typically, the `Java` in `PATH` is usually
    JRE and not JDK.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 shell 脚本找不到 `JAVA_HOME`，它会在其 `PATH` 中查找 `java`。这可能会导致意外结果，因为通常 `PATH` 中的
    `Java` 是 JRE 而不是 JDK。
- en: The shell script then looks for `M2_HOME`, which is the location of the Maven
    installation. It does this so that it can load the libraries that are present.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: shell 脚本随后会查找 `M2_HOME`，这是 Maven 安装的位置。它这样做是为了能够加载现有的库。
- en: Additionally, it also reads values specified in `MAVEN_OPTS`. This variable
    allows you to run Maven with an additional heap size and other Java parameters.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它还会读取在 `MAVEN_OPTS` 中指定的值。此变量允许您使用额外的堆大小和其他 Java 参数运行 Maven。
- en: Using the values for `JAVA_HOME`, `M2_HOME`, and `MAVEN_OPTS`, the shell script
    runs its `org.codehaus.plexus.classworlds.launcher.Launcher` main class.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `JAVA_HOME`、`M2_HOME` 和 `MAVEN_OPTS` 的值，shell 脚本运行其 `org.codehaus.plexus.classworlds.launcher.Launcher`
    主类。
- en: There's more...
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Using the following steps, let''s confirm that Maven has been set up correctly,
    by running a Maven command:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下步骤，让我们通过运行 Maven 命令来确认 Maven 是否已正确设置：
- en: 'Open a command prompt and run the following command:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符并运行以下命令：
- en: '[PRE30]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The following output should be displayed:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应显示以下输出：
- en: '[PRE31]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: If you get an error, recheck the installation steps and repeat them.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您遇到错误，请重新检查安装步骤并重复执行。
- en: See also
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Creating a simple project with Maven* recipe in this chapter
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中 *使用 Maven 创建一个简单项目* 的配方
- en: Changing the JDK used by Maven
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改 Maven 使用的 JDK
- en: It is possible to have more than one version of JDK installed on your system.
    By following some simple steps, you can specify and/or change the JDK to be used
    by Maven.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 您的系统上可以安装多个 JDK 版本。通过遵循一些简单的步骤，您可以指定和/或更改 Maven 使用的 JDK。
- en: How to do it...
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'You will recall that, in the earlier section, we used Java SE 7\. Let us now
    change to Java SE 8\. To change the JDK version to Java SE 8 on Microsoft Windows,
    perform the following steps:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 您会记得，在早期部分，我们使用了 Java SE 7。现在让我们将其更改为 Java SE 8。要在 Microsoft Windows 上将 JDK
    版本更改为 Java SE 8，请执行以下步骤：
- en: 'From the command prompt, run the following command:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令提示符运行以下命令：
- en: '[PRE32]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'For Linux or Mac, the command will be:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 Linux 或 Mac，命令将是：
- en: '[PRE33]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now, run the following command to check the version of Maven installed:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行以下命令以检查已安装的 Maven 版本：
- en: '[PRE34]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'To check the version of Maven installed on Microsoft Windows, run the following
    command from the command prompt. You should get the following output. The output
    will be similar for Linux and Mac:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查 Microsoft Windows 上安装的 Maven 版本，请在命令提示符中运行以下命令。您应该得到以下输出。Linux 和 Mac 的输出将类似：
- en: '[PRE35]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The output for the preceding command is shown as:'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前一个命令的输出如下所示：
- en: '[PRE36]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: How it works...
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Maven always uses the JDK specified by `JAVA_HOME`, no matter how many JDK installations
    are available on the system. This allows the user the flexibility to change JDKs
    as required or based on the project.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 总是使用由 `JAVA_HOME` 指定的 JDK，无论系统上有多少 JDK 安装。这使用户能够根据需要或基于项目更改 JDK。
- en: Hence, it is important to ensure `JAVA_HOME` is defined. In the absence of this
    variable, Maven attempts to detect the presence of Java from `PATH`. This is typically
    JRE and not JDK.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，确保 `JAVA_HOME` 已定义非常重要。如果没有这个变量，Maven 将尝试从 `PATH` 中检测 Java 的存在。这通常是 JRE 而不是
    JDK。
- en: Creating a simple project with Maven
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Maven 创建一个简单的项目
- en: Now that we have set up Maven on our favorite operating system and verified
    that it works fine, it is time to create a simple Java project.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经在我们的首选操作系统上设置了 Maven 并验证了它运行良好，是时候创建一个简单的 Java 项目了。
- en: Maven makes it easy to bootstrap a new project by creating a bunch of files
    and folders following accepted conventions.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 通过创建一系列遵循接受惯例的文件和文件夹，使启动新项目变得容易。
- en: How to do it...
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s start creating the first simple project using Maven, by performing the
    following steps:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始使用Maven创建第一个简单项目，按照以下步骤操作：
- en: Open a command prompt and change the directory to the folder in which you want
    to create your first Maven project.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符，并将目录更改为你想要创建第一个Maven项目的文件夹。
- en: 'Run the following command:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE37]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: You can change the `groupId` and `artifactId` values in the preceding command
    as per your requirement.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以根据需要更改前面命令中的`groupId`和`artifactId`值。
- en: 'You will see Maven downloading a bunch of files:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到Maven下载了一堆文件：
- en: '[PRE38]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Then it will start generating sources:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，它将开始生成源代码：
- en: '[PRE39]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'When Maven has completed generating sources, it will create the project that
    we want:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当Maven完成生成源代码后，它将创建我们想要的项目：
- en: '[PRE40]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Tip
  id: totrans-228
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从[http://www.packtpub.com](http://www.packtpub.com)下载示例代码文件，这是你购买的所有Packt
    Publishing书籍的账户。如果你在其他地方购买了这本书，你可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给你。
- en: How it works...
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何工作...
- en: Did you get an while error running the preceding command to create your simple
    project?
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行前面命令创建简单项目时，你是否遇到了错误？
- en: One possibility is that your Maven is behind an HTTP proxy server. If so, see
    the *Running Maven behind an HTTP proxy server* recipe in this chapter.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 一种可能性是，你的Maven位于HTTP代理服务器后面。如果是这样，请参阅本章中的“在HTTP代理服务器后面运行Maven”配方。
- en: 'Let''s look at the folder structure that is created:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看创建的文件夹结构：
- en: '![How it works...](img/6124OS_01_07.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/6124OS_01_07.jpg)'
- en: 'You will notice the following things:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到以下事项：
- en: The Maven project configuration file `pom.xml` is created in the root of the
    `simple-project` folder. We will explore this file in detail in subsequent sections.
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maven项目配置文件`pom.xml`在`simple-project`文件夹的根目录下创建。我们将在后续章节中详细探讨这个文件。
- en: 'A bunch of folders are created:'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一堆文件夹：
- en: '`src\main\java`: This is for Java source files'
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src\main\java`：这是用于Java源文件的目录'
- en: '`src\test\java`: This is for Java test source files'
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src\test\java`：这是用于Java测试源文件的目录'
- en: '`src\main\resources`: This is for resource files for the project'
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src\main\resources`：这是用于项目的资源文件'
- en: '`src\test\resources`: This is for resource files for the test'
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src\test\resources`：这是用于测试的资源文件'
- en: Within each of the preceding folders, a folder structure corresponding to the
    `groupId` (`org.packt.cookbook`) is created.
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在上述每个文件夹中，创建了一个与`groupId`（`org.packt.cookbook`）相对应的文件夹结构。
- en: 'The following are essentially Maven conventions at work:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 以下基本上是Maven约定在起作用：
- en: Maven expects all Java source files to reside `in src\main\java`
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maven期望所有Java源文件都位于`src\main\java`
- en: Similarly, it expects all Java test files to reside in `src\test\java`
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同样，它期望所有Java测试文件都位于`src\test\java`
- en: It expects all project resources to reside in `src\main\resources` and test
    resources to reside in `src\test\resources`
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它期望所有项目资源都位于`src\main\resources`，测试资源位于`src\test\resources`
- en: It expects that source files will typically have the same package structure
    as the `groupId` parameter (though this is not mandatory)
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它期望源文件通常具有与`groupId`参数相同的包结构（尽管这不是强制性的）
- en: Two sample classes, namely `App.java` and `AppTest.java`, are also created and
    it is not expected that they will be used beyond testing how Maven works
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了两个示例类，分别是`App.java`和`AppTest.java`，并且预期它们不会用于测试Maven的工作之外
- en: The `mvn` command that we used in the *Creating a simple project with Maven*
    recipe in this chapter, tries to invoke the `generate` goal of the `archetype`
    plugin with the specified command-line parameters.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章的“使用Maven创建简单项目”配方中使用的`mvn`命令，试图使用指定的命令行参数调用`archetype`插件的`generate`目标。
- en: The default Maven installation has minimal features. All features of Maven are
    available as Maven plugins. When given a plugin name, Maven knows where to download
    it from and then run it.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的Maven安装具有最小功能。Maven的所有功能都作为Maven插件提供。当给出插件名称时，Maven知道从哪里下载它，然后运行它。
- en: In this case, Maven downloads the `archetype` plugin. This plugin, in turn,
    can depend on another plugin. In this case, the latter plugin gets downloaded.
    This happens in a recursive fashion and, at the end of the process, all the relevant
    plugins required to run the specified command are downloaded.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，Maven 下载了 `archetype` 插件。此插件反过来又可以依赖于另一个插件。在这种情况下，后者插件被下载。这以递归的方式发生，并且在过程结束时，下载了运行指定命令所需的所有相关插件。
- en: These plugins are placed in your local repository, which is a location in your
    system. Once downloaded, these are never downloaded again unless deleted.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这些插件被放置在你的本地仓库中，这是你的系统中的一个位置。一旦下载，除非被删除，否则将不再下载。
- en: See also
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关阅读
- en: The *Running Maven behind an HTTP proxy server* recipe in this chapter
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中关于*在 HTTP 代理服务器后面运行 Maven*的配方
- en: Building a simple project with Maven
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Maven 构建简单的项目
- en: Let us now build the project that was created in the preceding section.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在构建前面部分创建的项目。
- en: How to do it...
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To build the previously created simple project with Maven, perform the following
    steps:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Maven 构建之前创建的简单项目，执行以下步骤：
- en: 'Open the command prompt and run the following command, changing the directory
    to the folder the project was created:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符并运行以下命令，将目录更改为项目创建的文件夹：
- en: '[PRE41]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Observe the following things in the output:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在输出中观察以下内容：
- en: 'Notice the following warning (we will see how to resolve this later in this
    book):'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意以下警告（我们将在本书的后面部分看到如何解决它）：
- en: '[PRE42]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Check if the sources are compiled:'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 检查源是否已编译：
- en: '[PRE43]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Check if the tests are run:'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 检查测试是否已运行：
- en: '[PRE44]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: A JAR file is now created.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在已创建了一个 JAR 文件。
- en: How it works...
  id: totrans-270
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'In the `mvn package` command, the `package` parameter is a phase in the build
    lifecycle. Maven has a default build lifecycle that has a number of phases. Each
    phase will execute every phase prior to it in order along with the specified phase.
    In this case, the `package` phase executes in the following order:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `mvn package` 命令中，`package` 参数是构建生命周期中的一个阶段。Maven 有一个默认的构建生命周期，包含多个阶段。每个阶段将按顺序执行它之前的所有阶段以及指定的阶段。在这种情况下，`package`
    阶段按以下顺序执行：
- en: Validate
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证
- en: Compile
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译
- en: Test
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试
- en: Package
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包
- en: The `validate` phase makes sure that the project (specifically the `pom.xml`
    file that describes the project) is in order and all the necessary information
    to run the project is available.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '`validate` 阶段确保项目（特别是描述项目的 `pom.xml` 文件）处于良好状态，并且运行项目所需的所有必要信息都可用。'
- en: The `compile` phase compiles the sources.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '`compile` 阶段编译源代码。'
- en: The `test` phase compiles the test sources and then runs the test using a suitable
    test framework. In the earlier example, the **JUnit** framework is used to run
    the tests.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '`test` 阶段编译测试源代码，然后使用合适的测试框架运行测试。在早期示例中，使用 **JUnit** 框架运行测试。'
- en: The `package` phase packages the artifacts to the format specified in the `pom.xml`
    file.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '`package` 阶段将工件打包到 `pom.xml` 文件中指定的格式。'
- en: Changing the location of the Maven repository
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改 Maven 仓库的位置
- en: 'There are three types of Maven repositories:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种类型的 Maven 仓库：
- en: '**Local**: This is the repository in your computer filesystem'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地**：这是你的计算机文件系统中的仓库'
- en: '**Remote**: This is the repository from where the required Maven files get
    downloaded'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**远程**：这是下载所需 Maven 文件的仓库'
- en: '**Mirrors**: These are repository managers, such as **Nexus** and **Artifactory**,
    that mirror various repositories'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**镜像**：这些是仓库管理器，例如 **Nexus** 和 **Artifactory**，它们镜像各种仓库'
- en: 'You will have seen Maven downloading a number of files (called poms and jars).
    Let us see where they are located in your computer:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经看到 Maven 下载了许多文件（称为 poms 和 jars）。让我们看看它们在你的计算机中的位置：
- en: Go to your `HOME` folder (`C:\Users\username`) in the case of Microsoft Windows,
    `/Users/username` for Mac, and, `/home/username` (or a similar location) for Linux
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Microsoft Windows 中，转到你的 `HOME` 文件夹（`C:\Users\username`），对于 Mac 是 `/Users/username`，对于
    Linux 是 `/home/username`（或类似位置）
- en: You will notice the `.m2` folder and within that, a subfolder called `repository`
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将注意到 `.m2` 文件夹，在其中，有一个名为 `repository` 的子文件夹
- en: Tip
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Any folder that starts with a dot (`.`) is typically hidden from view. You will
    need to change your folder viewer settings to see it.
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 任何以点（`.`）开头的文件夹通常都会被隐藏起来。你需要更改文件夹查看器设置才能看到它。
- en: You will see a number of folders and files that are used by Maven
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将看到许多由 Maven 使用的文件夹和文件
- en: 'You may want to change this location for the following reasons:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能希望出于以下原因更改此位置：
- en: You may want to conserve space in the `C` drive and store these folders and
    files in the `D` drive on Microsoft Windows.
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可能想要在 Microsoft Windows 中节省 C 驱动器的空间，并将这些文件夹和文件存储在 D 驱动器上。
- en: You may want to take a back up of the contents. Backup software usually backs
    up contents in specific folders of the filesystem.
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可能想要备份内容。备份软件通常会在文件系统的特定文件夹中备份内容。
- en: Your organization may have a policy for all users to store a local repository
    in the same folder.
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的组织可能有一项政策，要求所有用户将本地仓库存储在同一个文件夹中。
- en: How to do it...
  id: totrans-295
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To change the location of the Maven repository, perform the following steps:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改 Maven 仓库的位置，请执行以下步骤：
- en: Create a file called `settings.xml` in the `.m2` folder.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `.m2` 文件夹中创建一个名为 `settings.xml` 的文件。
- en: 'Add the following contents to the settings.xml file that you just created:'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下内容添加到您刚刚创建的 settings.xml 文件中：
- en: '[PRE45]'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Notice the highlighted part of the preceding code. We have changed the location
    of the repository contents to C:\software\maven. You can change it to any valid
    folder name.
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意前面代码中高亮的部分。我们已经将仓库内容的位置更改为 C:\software\maven。您可以将它更改为任何有效的文件夹名称。
- en: Delete the `repository` subfolder and run the `mvn package` command again.
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除 `repository` 子文件夹，然后再次运行 `mvn package` 命令。
- en: You will now notice that the `repository` folder is not created in the `.m2`
    folder. Instead, it is created in `C:\software\maven`.
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您现在会注意到，`repository` 文件夹并没有创建在 `.m2` 文件夹中。相反，它被创建在 `C:\software\maven`。
- en: How it works...
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Maven determines the location of the local repository in the following way:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 以以下方式确定本地仓库的位置：
- en: If `settings.xml` exists in the user's `.m2` folder, which contains the `<localRepository>`
    tag, then Maven uses its contents to determine the location
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户 `.m2` 文件夹中存在 `settings.xml` 文件，其中包含 `<localRepository>` 标签，那么 Maven 将使用其内容来确定位置
- en: If not, Maven will check if `localRepository` is explicitly defined in the default
    `settings.xml`, present in the `conf` folder of the Maven installation
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果没有，Maven 将检查默认的 `settings.xml` 文件中是否明确定义了 `localRepository`，该文件位于 Maven 安装目录的
    `conf` 文件夹中。
- en: If it is not present there, Maven will use the default value for the local repository,
    which is the user's `.m2` folder
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果本地仓库不存在，Maven 将使用默认值，即用户的 `.m2` 文件夹
- en: Running Maven behind an HTTP proxy server
  id: totrans-308
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 HTTP 代理服务器后面运行 Maven
- en: Most organizations do not allow devices in their network to access the Internet
    directly for security and other reasons. In such cases, typically, a proxy server
    comes into picture. The proxy server details are specified in the browser or any
    other location where access to the Internet is required.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数组织出于安全和其它原因不允许其网络中的设备直接访问互联网。在这种情况下，通常会出现代理服务器。代理服务器的详细信息在浏览器或任何需要互联网访问的其他位置指定。
- en: How to do it...
  id: totrans-310
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s start running Maven behind an HTTP proxy server, by performing the following
    steps:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下步骤在 HTTP 代理服务器后面运行 Maven：
- en: Create a `settings.xml` file in the `.m2` folder in your `HOME` directory, if
    it does not exist already.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的 `HOME` 目录中的 `.m2` 文件夹中尚未创建 `settings.xml` 文件，请创建一个。
- en: 'Add the following code within the `settings` tag:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `settings` 标签内添加以下代码：
- en: '[PRE46]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: If the proxy server does not need authentication, the `username` and `password`
    tags can be omitted.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 如果代理服务器不需要身份验证，可以省略 `username` 和 `password` 标签。
- en: The `nonProxyHosts` tag allows you to specify locations that can be accessed
    directly (for instance, your intranet). This can be skipped if not relevant.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`nonProxyHosts` 标签允许您指定可以直接访问的位置（例如，您的内部网络）。如果不相关，可以跳过。'
- en: How it works...
  id: totrans-317
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Maven needs Internet access to download plugins and dependencies. When Maven
    runs, it reads the user's `settings.xml` file, if it exists. It checks for any
    active proxy settings and applies the same.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 需要互联网访问来下载插件和依赖项。当 Maven 运行时，它会读取用户的 `settings.xml` 文件（如果存在）。它会检查任何活动的代理设置并应用相同的设置。
- en: Maven uses the values in the proxy settings to download any artifacts from the
    repository. If there are no artifacts to be downloaded, then these values are
    not used.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 使用代理设置中的值从仓库下载任何工件。如果没有要下载的工件，则不使用这些值。
- en: Note
  id: totrans-320
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The HTTP proxy server may work only in your organization's network. If you are
    running Maven from a different network, you may want to turn off the HTTP proxy
    server. This can be done by setting the `active` tag to `false` in the preceding
    code.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP 代理服务器可能只在您的组织网络中工作。如果您从不同的网络运行 Maven，您可能希望关闭 HTTP 代理服务器。这可以通过在前面代码中将 `active`
    标签设置为 `false` 来完成。
- en: Understanding the standard directory layout
  id: totrans-322
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解标准目录布局
- en: When we built our sample Java project earlier, we saw files being compiled,
    tests being run, and a JAR being generated. We do not know where these artifacts
    were created.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们之前构建我们的示例 Java 项目时，我们看到了文件被编译、测试被执行，以及 JAR 文件被生成。我们不知道这些工件是在哪里创建的。
- en: How to do it...
  id: totrans-324
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s find where the artifacts were created by performing the following steps:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下步骤找到工件创建的位置：
- en: Go to the folder that has the sample Maven project.
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往包含示例 Maven 项目的文件夹。
- en: Open the `target` subfolder that was created:![How to do it...](img/6124OS_01_08.jpg)
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开创建的 `target` 子文件夹：![如何操作...](img/6124OS_01_08.jpg)
- en: How it works...
  id: totrans-328
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'When Maven runs, it puts all the contents that it generates into a separate
    folder. This is to distinguish it from any user-generated content. Let us examine
    the contents of this folder:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Maven 运行时，它会将所有生成的内容放入一个单独的文件夹中。这是为了将其与用户生成的任何内容区分开来。让我们检查这个文件夹的内容：
- en: 'The `classes` folder: Compiled source files are placed in this folder. This
    folder will also contain resources, such as XML and property files that are part
    of the source, placed in `src/main/resources`.'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`classes` 文件夹：编译后的源文件放置在这个文件夹中。这个文件夹还将包含资源，例如 XML 和属性文件，这些文件是源代码的一部分，放置在 `src/main/resources`
    中。'
- en: 'The `test-classes` folder: Compiled test source files are available in this
    folder. In addition, it also contains test resources, which are files required
    for the purpose of testing, but not for running the project.'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`test-classes` 文件夹：编译后的测试源文件存放在这个文件夹中。此外，它还包含测试资源，这些是用于测试目的但不是用于运行项目的文件。'
- en: 'The `surefire-reports` folder: Test reports are separately placed in this folder.
    Typically, both XML and HTML report formats are available. The latter can be opened
    in the browser, while the former can be integrated with a code coverage tool.'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`surefire-reports` 文件夹：测试报告被单独放置在这个文件夹中。通常，这里提供 XML 和 HTML 报告格式。后者可以在浏览器中打开，而前者可以与代码覆盖率工具集成。'
- en: 'The output `.jar` file: The generated project artifact is also present in this
    folder.'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出的 `.jar` 文件：生成的项目工件也存在于这个文件夹中。
- en: Two other folders—`maven-archiver` and `maven-status`—hold information used
    by Maven during the build.
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另外两个文件夹——`maven-archiver` 和 `maven-status`——包含 Maven 在构建过程中使用的信息。
