- en: Chapter 5. Getting Started with Spring Data Redis
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章. 使用Spring Data Redis入门
- en: Before the Spring Data Redis project was born, a normal way to communicate with
    Redis was to use client libraries that can be compared to the JDBC drivers of
    relational databases. The difference is that these clients do not implement a
    standard API that makes it hard to switch from one connector to another. Obviously,
    the million-dollar question is, how can Spring Data Redis make our life easier?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在Spring Data Redis项目诞生之前，与Redis通信的常规方式是使用可以与关系数据库的JDBC驱动程序进行比较的客户端库。不同之处在于这些客户端没有实现使得从一个连接器切换到另一个连接器变得困难的标准API。显然，百万美元的问题是，Spring
    Data Redis如何使我们的生活更轻松？
- en: Spring Data Redis hides the APIs of different client libraries behind a single
    API that is clean and easy to use. In theory, this ensures that we can change
    the used Redis connector without making any changes to our application. Even though
    this is indeed a useful feature if we have to change the used connector, it would
    be naive to claim that we should start using Spring Data Redis only because of
    this feature. We have to remember that we will most likely stick with one Redis
    connector throughout the life cycle of our application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Data Redis将不同客户端库的API隐藏在一个干净且易于使用的单一API后面。理论上，这确保我们可以在不对应用程序进行任何更改的情况下更改所使用的Redis连接器。尽管这确实是一个有用的功能，如果我们必须更改所使用的连接器，但如果仅因为这个功能就开始使用Spring
    Data Redis，这将是天真的。我们必须记住，我们很可能会在应用程序的生命周期中坚持使用一个Redis连接器。
- en: However, we must remember that applications are basically built by combining
    different components together. Spring Data Redis provides a seamless integration
    with the Spring framework that is a popular tool used to create enterprise applications.
    This is naturally a huge benefit for any developer who is writing a Spring-powered
    application that uses Redis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们必须记住，应用程序基本上是通过将不同组件组合在一起构建的。Spring Data Redis与Spring框架提供了无缝集成，后者是用于创建企业应用程序的流行工具。这对于任何使用Redis的Spring应用程序的开发人员来说自然是一个巨大的好处。
- en: Note
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information about Spring Data Redis and its features can be found at [http://www.springsource.org/spring-data/redis/](http://www.springsource.org/spring-data/redis/).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Spring Data Redis及其功能的更多信息，请访问[http://www.springsource.org/spring-data/redis/](http://www.springsource.org/spring-data/redis/)。
- en: 'This chapter will guide us through the initial configuration phase and help
    us to set up a web application project that uses Spring Data Redis. In this chapter,
    we will cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将指导我们通过初始配置阶段，并帮助我们设置一个使用Spring Data Redis的Web应用程序项目。在本章中，我们将涵盖以下主题：
- en: How we can install Redis to a computer running a Unix-like operating system
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在运行类Unix操作系统的计算机上安装Redis
- en: How we can get the required dependencies of Spring Data Redis by using Maven
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Maven获取Spring Data Redis所需的依赖
- en: How we can configure the application context of our application by using programmatic
    configuration
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何通过使用编程配置来配置我们应用程序的应用程序上下文
- en: How we can configure our Redis connection in an application context configuration
    class
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在应用程序上下文配置类中配置我们的Redis连接
- en: Installing Redis
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Redis
- en: Spring Data Redis requires that Redis 2.0 or above is used, and it recommends
    that Redis 2.2 is used. However, it is possible to use newer Redis versions even
    though the new features might not be supported yet. This book assumes that we
    are using Redis version 2.6.0-rc6.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Data Redis要求使用Redis 2.0或更高版本，并建议使用Redis 2.2。但是，即使可能使用更新的Redis版本，新功能可能尚不受支持。本书假定我们使用的是Redis版本2.6.0-rc6。
- en: At the moment Redis does not officially support Windows but there are some unofficial
    ports available. If you want to install Redis to a Windows computer, download
    one of the unofficial source packages and follow its installation instructions.
    The download links of the unofficial Windows ports are available at [http://redis.io/download](http://redis.io/download).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 目前Redis并不正式支持Windows，但有一些非官方的端口可用。如果要将Redis安装到Windows计算机上，请下载其中一个非官方源包，并按照其安装说明进行操作。非官方Windows端口的下载链接可在[http://redis.io/download](http://redis.io/download)上找到。
- en: Note
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The only dependencies of Redis are a working GCC compiler and libc. The best
    way to install these dependencies is to use the package manager of the used Linux
    distribution. If Redis is compiled on a computer that uses an OS X operating system,
    one should ensure that both Xcode and its command line tools are installed.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Redis的唯一依赖是一个可用的GCC编译器和libc。安装这些依赖的最佳方法是使用所用Linux发行版的软件包管理器。如果在使用OS X操作系统的计算机上编译Redis，则应确保安装了Xcode及其命令行工具。
- en: 'We can install Redis to a computer running a Unix-like operating system by
    following these steps:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下步骤将Redis安装到运行类Unix操作系统的计算机上：
- en: Download the Redis source package. We use a command line utility called `wget`
    for retrieving the source package.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载Redis源包。我们使用一个称为`wget`的命令行实用程序来检索源包。
- en: Decompress the source package.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压源包。
- en: Compile Redis.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编译Redis。
- en: 'We can finish the installation procedure by running these commands at the command
    line:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在命令行上运行以下命令来完成安装过程：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: At the moment the source packages are hosted on Google Code. If the packages
    are moved to a different host or if a different Redis version is installed, these
    commands must be modified accordingly.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，源包托管在Google Code上。如果包被移动到不同的主机上，或者安装了不同的Redis版本，这些命令必须相应地进行修改。
- en: 'After the compilation has finished successfully, we can start our Redis server
    by running the following command at the command prompt:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 编译成功后，我们可以通过在命令提示符下运行以下命令来启动Redis服务器：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If our installation was successful, we should see the output as shown in the
    following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的安装成功，我们应该看到如下截图所示的输出：
- en: '![Installing Redis](img/9045_05_01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![安装Redis](img/9045_05_01.jpg)'
- en: Note
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The official Redis homepage has a comprehensive documentation that offers more
    information about the usage and configuration of Redis. This documentation is
    available at [http://redis.io/documentation](http://redis.io/documentation).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 官方Redis主页有全面的文档，提供有关Redis的使用和配置的更多信息。此文档可在[http://redis.io/documentation](http://redis.io/documentation)上找到。
- en: Getting the required dependencies
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取所需的依赖项
- en: 'Getting the dependencies required by Spring Data Redis is rather easy. The
    only dependency that is required is Spring Data Redis, and we can get it by adding
    the following dependency declaration to the `pom.xml` file:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 获取Spring Data Redis所需的依赖项相当容易。唯一需要的依赖项是Spring Data Redis，我们可以通过将以下依赖声明添加到`pom.xml`文件中来获取它：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Configuring the Spring application context
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Spring应用程序上下文
- en: 'We will use the Java configuration for configuring the application context
    of our application. The name of our application context configuration class is
    `ApplicationContext`, and its implementation is explained in the following points:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Java配置来配置我们应用程序的应用程序上下文。我们应用程序上下文配置类的名称是`ApplicationContext`，其实现在以下几点中进行了解释：
- en: The `@Configuration` annotation is used to identify the class as an application
    context configuration class.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`@Configuration`注解用于将类标识为应用程序上下文配置类。'
- en: The `@ComponentScan` annotation is used to configure the base package of our
    controllers.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`@ComponentScan`注解用于配置我们控制器的基本包。'
- en: The `@EnableWebMvc` annotation is used to enable the Spring MVC.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`@EnableWebMvc`注解用于启用Spring MVC。'
- en: The values of the configuration parameters are fetched from a property file
    that is imported by using the `@PropertySource` annotation. The `Environment`
    interface is used to access the property values stored in this file.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置参数的值是从一个属性文件中获取的，该文件是通过使用`@PropertySource`注解导入的。`Environment`接口用于访问存储在该文件中的属性值。
- en: The `redisConnectionFactory()` method is used to configure the Redis connection
    factory bean. The implementation of this method depends on the used Redis connector.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`redisConnectionFactory()`方法用于配置Redis连接工厂bean。此方法的实现取决于所使用的Redis连接器。'
- en: 'The source code of our application context configuration skeleton class is
    given as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用程序上下文配置骨架类的源代码如下：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The contents of the `application.properties` file are as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`application.properties`文件的内容如下：'
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Configuring the Redis connection
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Redis连接
- en: 'Spring Data Redis supports four different connectors that can be used to interact
    with a Redis server. These connectors are described in the following table:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Data Redis支持四种不同的连接器，可用于与Redis服务器交互。这些连接器在以下表格中描述：
- en: '| Connector | Description |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 连接器 | 描述 |'
- en: '| --- | --- |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Jedis | Jedis is a Redis connector that is fully compatible with Redis 2.0.0
    commands. The project is hosted at GitHub, and more information about this found
    at [https://github.com/xetorthio/jedis](https://github.com/xetorthio/jedis). |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| Jedis | Jedis是与Redis 2.0.0命令完全兼容的Redis连接器。该项目托管在GitHub上，有关更多信息，请访问[https://github.com/xetorthio/jedis](https://github.com/xetorthio/jedis)。|'
- en: '| JRedis | JRedis is a Redis connector that does not yet have official support
    for Redis 2.x. However, it is possible to use a forked version of this library
    that adds support for Redis 2.x. The forked version of the JRedis library is hosted
    at GitHub, and its homepage is found at [https://github.com/anthonylauzon/jredis](https://github.com/anthonylauzon/jredis).
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| JRedis | JRedis是一个Redis连接器，尚未正式支持Redis 2.x。但是，可以使用此库的分支版本添加对Redis 2.x的支持。JRedis库的分支版本托管在GitHub上，其主页位于[https://github.com/anthonylauzon/jredis](https://github.com/anthonylauzon/jredis)。|'
- en: '| RJC | RJC is a Redis connector that is compatible with Redis 2.X. More information
    about the RJC connector is found at [https://github.com/e-mzungu/rjc](https://github.com/e-mzungu/rjc).
    |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| RJC | RJC是与Redis 2.X兼容的Redis连接器。有关RJC连接器的更多信息，请访问[https://github.com/e-mzungu/rjc](https://github.com/e-mzungu/rjc)。|'
- en: '| SRP | SRP is a Redis connector that supports Redis 2.6 commands. The project''s
    homepage is found at [https://github.com/spullara/redis-protocol](https://github.com/spullara/redis-protocol).
    |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| SRP | SRP是支持Redis 2.6命令的Redis连接器。该项目的主页位于[https://github.com/spullara/redis-protocol](https://github.com/spullara/redis-protocol)。|'
- en: Unfortunately, at the moment some of the supported connectors are at the early
    stage of development and they do not support all the available features of Redis.
    If the underlying connector does not support the performed operation, the exception,
    `UnsupportedOperationException`, is thrown.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，目前一些支持的连接器处于早期开发阶段，它们不支持Redis的所有可用功能。如果底层连接器不支持执行的操作，则会抛出异常`UnsupportedOperationException`。
- en: 'Also, the configuration options that we can use with Spring Data Redis depend
    on the used connector. The following table describes differences between the supported
    Redis connectors (X means that the configuration option is supported and - means
    that it is not):'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们可以使用的Spring Data Redis的配置选项取决于所使用的连接器。以下表格描述了支持的Redis连接器之间的差异（X表示支持配置选项，-表示不支持）：
- en: '| Connector | Password | Connection Pool |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 连接器 | 密码 | 连接池 |'
- en: '| --- | --- | --- |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Jedis | X | X |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| Jedis | X | X |'
- en: '| JRedis | X | X |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| JRedis | X | X |'
- en: '| RJC | X | X |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| RJC | X | X |'
- en: '| SRP | - | - |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| SRP | - | - |'
- en: Jedis is the default connector of Spring Data Redis and at the moment it should
    be our first choice because it is the most mature of the supported connectors
    and it is being actively developed. However, we will take a look at the configuration
    process of each supported connector because the situation might change in the
    future and if it does, we should know that we have other options as well.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Jedis是Spring Data Redis的默认连接器，目前应该是我们的首选，因为它是支持的连接器中最成熟的，并且正在积极开发。但是，我们将查看每个支持的连接器的配置过程，因为情况可能会在将来发生变化，如果发生变化，我们也应该知道我们还有其他选择。
- en: 'The configuration of each supported Redis connector always has the following
    two steps:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 每个支持的Redis连接器的配置始终有以下两个步骤：
- en: Configuring the correct Maven dependency.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置正确的Maven依赖项。
- en: Configuring the correct Redis connection factory bean in the `redisConnectionFactory()`
    method of the `ApplicationContext` class.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`ApplicationContext`类的`redisConnectionFactory()`方法中配置正确的Redis连接工厂bean。
- en: Configuring the Jedis connector
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置Jedis连接器
- en: 'Because Jedis is the default connector of Spring Data Redis, we don''t have
    to make any changes to our `pom.xml` file. The only thing that we have to do is
    to add the Redis connection factory bean in our application context configuration.
    The correct Redis connection factory bean class for the Jedis connector is the
    `JedisConnectionFactory` class, and it has the following configuration properties:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 因为Jedis是Spring Data Redis的默认连接器，我们不必对我们的`pom.xml`文件进行任何更改。我们唯一需要做的是在应用程序上下文配置中添加Redis连接工厂bean。Jedis连接器的正确Redis连接工厂bean类是`JedisConnectionFactory`类，它具有以下配置属性：
- en: '| Property | Description |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 描述 |'
- en: '| --- | --- |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `dataBase` | The index of the used database. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `dataBase` | 使用的数据库的索引。|'
- en: '| `hostName` | The hostname of the used Redis server. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `hostName` | 使用的Redis服务器的主机名。|'
- en: '| `password` | The password used for authenticating with the Redis server.
    |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `password` | 用于与Redis服务器进行身份验证的密码。|'
- en: '| `poolConfig` | The connection pool configuration that is given by using the
    `redis.clients.jedis.JedisPoolConf` `ig` class. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `poolConfig` | 通过使用`redis.clients.jedis.JedisPoolConf`类给出的连接池配置。|'
- en: '| `port` | The port of the used Redis server. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `port` | 使用的Redis服务器的端口。|'
- en: '| `shardInfo` | An alternative method for configuring the `JedisConnectionFactory`
    object. The configuration is given by using the `redis.clients.jedis.JedisShardInfo`
    class. This method has precedence over other colliding configuration properties.
    |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `shardInfo` | 配置`JedisConnectionFactory`对象的替代方法。通过使用`redis.clients.jedis.JedisShardInfo`类给出配置。此方法优先于其他冲突的配置属性。|'
- en: '| `timeout` | The connection timeout. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `timeout` | 连接超时。|'
- en: '| `usePool` | A `boolean` value describing if connection pooling is used. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| `usePool` | 描述是否使用连接池的`boolean`值。|'
- en: 'We will configure the Redis connection factory bean in the `redisConnectionFactory()`
    method of the `ApplicationContext` class. Our implementation includes the following
    steps:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`ApplicationContext`类的`redisConnectionFactory()`方法中配置Redis连接工厂bean。我们的实现包括以下步骤：
- en: Creating a new `JedisConnectionFactory` object.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的`JedisConnectionFactory`对象。
- en: Configuring the Redis connection factory bean.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置Redis连接工厂bean。
- en: Returning the created object.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回创建的对象。
- en: 'The source code of the implemented `redisConnectionFactory()` method is given
    as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 实现的`redisConnectionFactory()`方法的源代码如下：
- en: '[PRE5]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Configuring the JRedis connector
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置JRedis连接器
- en: 'The first step is to configure the Maven dependencies of JRedis. We can configure
    the required dependencies by following these steps:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是配置JRedis的Maven依赖项。我们可以通过以下步骤配置所需的依赖项：
- en: Exclude the transitive Jedis dependency from our build.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我们的构建中排除传递的Jedis依赖项。
- en: Add the forked JRedis connector as a dependency.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将分叉的JRedis连接器作为依赖项添加。
- en: 'After we have followed the described steps, we should have the following dependency
    declarations in the `pom.xml` file:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们按照描述的步骤进行之后，我们应该在`pom.xml`文件中有以下依赖声明：
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The second step is to configure the used Redis connection factory bean. Because
    we want to use the JRedis connector, we have to use the `JRedisConnectionFactory`
    class. The configuration properties of this class are described in following table:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步是配置使用的Redis连接工厂bean。因为我们想要使用JRedis连接器，我们必须使用`JRedisConnectionFactory`类。该类的配置属性在下表中描述：
- en: '| Property | Description |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 描述 |'
- en: '| --- | --- |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `dataBase` | The index of the used database. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `dataBase` | 使用的数据库的索引。|'
- en: '| `hostName` | The hostname of the used Redis server. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `hostName` | 使用的Redis服务器的主机名。|'
- en: '| `password` | The password user for authenticating with the Redis server.
    |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `password` | 用于与Redis服务器进行身份验证的密码。|'
- en: '| `poolSize` | The size of the connection pool. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `poolSize` | 连接池的大小。|'
- en: '| `port` | The port of the used Redis server. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `port` | 使用的Redis服务器的端口。|'
- en: '| `usePool` | A `boolean` value describing if connection pooling is used. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `usePool` | 描述是否使用连接池的`boolean`值。|'
- en: 'In order to configure the Redis connector, we have to add the implementation
    of the `redisConnectionFactory()` method to the `ApplicationContext` class. We
    can do this by following these steps:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了配置Redis连接器，我们必须将`redisConnectionFactory()`方法的实现添加到`ApplicationContext`类中。我们可以通过以下步骤来实现：
- en: Create a new `JRedisConnectionFactory` object.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的`JRedisConnectionFactory`对象。
- en: Configure the Redis connection factory bean.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置Redis连接工厂bean。
- en: Return the created object.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回创建的对象。
- en: 'The source code of our Redis connection factory bean configuration is given
    as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的Redis连接工厂bean配置的源代码如下：
- en: '[PRE7]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Configuring the RJC connector
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置RJC连接器
- en: 'First we have to configure the required Maven dependencies. This process includes
    the following steps:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须配置所需的Maven依赖项。此过程包括以下步骤：
- en: Exclude the transitive Jedis dependency from our build.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我们的构建中排除传递的Jedis依赖项。
- en: Add the RJC connector as a dependency.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将RJC连接器作为依赖项添加。
- en: 'The dependency declarations, which we must add to the dependencies section
    of our `pom.xml` file, are given as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 必须添加到我们的`pom.xml`文件的依赖声明如下：
- en: '[PRE8]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The last step is to add the configuration of the used Redis connection factory
    bean to our application context configuration class. Because we are using the
    RJC connector, the correct Redis connection factory class is `RjcConnectionFactory`.
    This class has the following configuration properties:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是将使用的Redis连接工厂bean的配置添加到我们的应用程序上下文配置类中。因为我们使用的是RJC连接器，正确的Redis连接工厂类是`RjcConnectionFactory`。该类具有以下配置属性：
- en: '| Property | Description |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 描述 |'
- en: '| --- | --- |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `dataBase` | The index of the used database. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| `dataBase` | 使用的数据库的索引。|'
- en: '| `hostName` | The hostname of the used Redis server. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| `hostName` | 使用的Redis服务器的主机名。|'
- en: '| `password` | The password that used for authenticating with the Redis server.
    |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| `password` | 用于与Redis服务器进行身份验证的密码。 |'
- en: '| `port` | The port of the used Redis server. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| `port` | 所使用的Redis服务器的端口。 |'
- en: '| `timeout` | The value for connection timeout. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| `timeout` | 连接超时的值。 |'
- en: '| `usePool` | A `boolean` value describing if connection pooling is used. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| `usePool` | 描述是否使用连接池的`boolean`值。 |'
- en: 'Our implementation of the `redisConnectionFactory()` method includes the following
    steps:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`redisConnectionFactory()`方法的实现包括以下步骤：
- en: Create a new `RjcConnectionFactory` object.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的`RjcConnectionFactory`对象。
- en: Configure the Redis connection factory bean.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置Redis连接工厂bean。
- en: Return the created object.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回创建的对象。
- en: 'The source code of our Redis connection factory bean configuration is given
    as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的Redis连接工厂bean配置的源代码如下：
- en: '[PRE9]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Configuring the SRP connector
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置SRP连接器
- en: 'The first step is to configure the Maven dependencies of the SRP Redis connector.
    We can configure the required dependencies by following these steps:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是配置SRP Redis连接器的Maven依赖项。我们可以通过以下步骤配置所需的依赖项：
- en: Exclude the transitive Jedis dependency from our build.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我们的构建中排除传递的Jedis依赖项。
- en: Add the SRP connector as a dependency.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将SRP连接器添加为依赖项。
- en: 'This leads into the following dependency declarations:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致以下依赖声明：
- en: '[PRE10]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The second step is to configure the Redis connection factory bean. The correct
    connection factory bean class for the SRP connector is `SrpConnectionFactory`,
    and it has the following configuration properties:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步是配置Redis连接工厂bean。SRP连接器的正确连接工厂bean类是`SrpConnectionFactory`，它具有以下配置属性：
- en: '| Property | Description |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 描述 |'
- en: '| --- | --- |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `hostName` | The hostname of the used Redis server. |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| `hostName` | 所使用的Redis服务器的主机名。 |'
- en: '| `port` | The port of the used Redis server. |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| `port` | 所使用的Redis服务器的端口。 |'
- en: 'We can configure the SRP connector by writing an implementation to the `redisConnectionFactory()`
    method. Our implementation has the following steps:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过编写一个实现`redisConnectionFactory()`方法的实现来配置SRP连接器。我们的实现有以下步骤：
- en: Create a new `SrpConnectionFactory` object.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的`SrpConnectionFactory`对象。
- en: Configure the Redis connection factory bean.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置Redis连接工厂bean。
- en: Return the created object.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回创建的对象。
- en: 'The source code of our Redis connection factory bean configuration is given
    as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的Redis连接工厂bean配置的源代码如下：
- en: '[PRE11]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Summary
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we have learned that:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经学到：
- en: Redis does not have complex dependencies, and it is easy to install Redis to
    a computer that runs a Unix-like operating system
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redis没有复杂的依赖关系，很容易将Redis安装到运行类Unix操作系统的计算机上
- en: Some of the supported connectors do not support all features of Redis yet
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些支持的连接器尚不支持Redis的所有功能
- en: The configuration options that we can use when we are configuring our Redis
    connection depend on the used connector
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在配置Redis连接时，我们可以使用的配置选项取决于所使用的连接器
- en: We should use the Jedis connector when we are writing applications by using
    Spring Data Redis
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们使用Spring Data Redis编写应用程序时，应该使用Jedis连接器
- en: We have now learned how can set up a web application project that uses Spring
    Data Redis. In the next chapter, we will write some code and implement a contact
    manager application by using Spring Data Redis.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经学会了如何设置使用Spring Data Redis的Web应用程序项目。在下一章中，我们将编写一些代码，并使用Spring Data Redis实现联系人管理应用程序。
