- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Microservice is an architecture style and pattern in which complex systems are
    decomposed into smaller services that work together to form larger business services.
    Microservices are services that are autonomous, self-contained, and independently
    deployable. In today's world, many enterprises use microservices as the default
    standard for building large, service-oriented enterprise applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 微服务是一种架构风格和模式，复杂系统被分解为较小的服务，这些服务共同形成更大的业务服务。微服务是自治的、独立的，可以独立部署的服务。在当今世界，许多企业将微服务作为构建大型面向服务的企业应用程序的默认标准。
- en: The Spring framework is a popular programming framework with the developer community
    for many years. Spring Boot removed the need to have a heavyweight application
    container and provided a means to deploy lightweight, server-less applications.
    Spring Cloud combines many Netflix OSS components and provides an ecosystem to
    run and manage large-scale microservices. It provides capabilities such as load
    balancing, service registry, monitoring, service gateway, and so on.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Spring框架是开发者社区多年来广受欢迎的编程框架。Spring Boot消除了需要使用笨重的应用容器，并提供了一种部署轻量级、无服务器应用程序的方法。Spring
    Cloud结合了许多Netflix OSS组件，并提供了一个运行和管理大规模微服务的生态系统。它提供了诸如负载平衡、服务注册、监控、服务网关等功能。
- en: However, microservices come with their own challenges, such as monitoring, managing,
    distributing, scaling, discovering, and so on, especially when deploying at scale.
    Adopting microservices without addressing the common microservices challenges
    would lead to catastrophic results. The most important part of this book is a
    technology-agnostic microservice capability model that helps address all the common
    microservice challenges.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，微服务也带来了自己的挑战，例如监控、管理、分发、扩展、发现等，特别是在大规模部署时。在不解决常见的微服务挑战的情况下采用微服务将导致灾难性的结果。本书最重要的部分是一个技术无关的微服务能力模型，它有助于解决所有常见的微服务挑战。
- en: The goal of this book is to enlighten readers with a pragmatic approach and
    guidelines for implementing responsive microservices at scale. This book will
    take readers on a deep dive into Spring Boot, Spring Cloud, Docker, Mesos, and
    Marathon. Readers of this book will understand how Spring Boot is used to deploy
    autonomous services server-less by removing the need to have a heavyweight application
    server. Readers will learn different Spring Cloud capabilities and also realize
    the use of Docker for containerization and of Mesos and Marathon for compute resource
    abstraction and cluster-wide control, respectively.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目标是以务实的方法和指南为读者提供在大规模实施响应式微服务时的启示。本书将带领读者深入了解Spring Boot、Spring Cloud、Docker、Mesos和Marathon。本书的读者将了解Spring
    Boot如何用于部署无服务器的自治服务，从而消除了使用笨重的应用服务器的需要。读者将学习不同的Spring Cloud功能，并了解Docker用于容器化以及Mesos和Marathon用于计算资源抽象和集群范围控制的用途。
- en: I am sure readers will enjoy each and every section of this book. Also, I honestly
    believe that this book adds tremendous value by successfully conceiving microservices
    in your business. Throughout this book, I have used practical aspects of microservices
    implementation by providing a number of examples, including a case study from
    the travel domain. In the end, you will have learned how to implement microservice
    architectures using the Spring framework, Spring Boot, and Spring Cloud. These
    are battle-tested, robust tools to develop and deploy scalable microservices.
    Written to the latest specifications of Spring, with the help of this book, you'll
    be able to build modern, Internet-scale Java applications in no time.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信读者会喜欢本书的每一部分。而且，我真诚地相信本书通过成功构思微服务为您的业务增添了巨大的价值。在整本书中，我通过提供许多例子，包括旅行领域的案例研究，使用了微服务实施的实际方面。最终，您将学会如何使用Spring框架、Spring
    Boot和Spring Cloud实施微服务架构。这些都是经过实战检验的强大工具，用于开发和部署可扩展的微服务。根据Spring的最新规范编写，借助本书的帮助，您将能够在短时间内构建现代的、互联网规模的Java应用程序。
- en: What this book covers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](ch01.html "Chapter 1. Demystifying Microservices"), *Demystifying
    Microservices*, gives you an introduction to microservices. This chapter covers
    the fundamental concepts of microservices, their evolution, and their relationship
    with service-oriented architecture, as well as the concepts of cloud native and
    Twelve-Factor applications.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 《第1章》《解密微服务》为您介绍了微服务。本章涵盖了微服务的基本概念、它们的演变以及它们与面向服务的架构的关系，以及云原生和十二要素应用的概念。
- en: '[Chapter 2](ch02.html "Chapter 2. Building Microservices with Spring Boot"),
    *Building Microservices with Spring Boot*, introduces building REST- and message-based
    microservices using the Spring framework and how to wrap them with Spring Boot.
    In addition, we will also explore some core capabilities of Spring Boot.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 《第2章》《使用Spring Boot构建微服务》介绍了如何使用Spring框架构建基于REST和消息的微服务，以及如何使用Spring Boot封装它们。此外，我们还将探索Spring
    Boot的一些核心功能。
- en: '[Chapter 3](ch03.html "Chapter 3. Applying Microservices Concepts"), *Applying
    Microservices Concepts*, explains the practical aspects of microservices implementation
    by detailing out the challenges that developers face with enterprise-grade microservices.
    This will also summarize the capabilities required to successfully manage a microservices
    ecosystem.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 《第3章》《应用微服务概念》详细解释了微服务实施的实际方面，详细说明了开发人员在企业级微服务中面临的挑战。这也将总结成功管理微服务生态系统所需的能力。
- en: '[Chapter 4](ch04.html "Chapter 4. Microservices Evolution – A Case Study"),
    *Microservices Evolution – A Case Study*, takes the readers into a real-world
    case study of microservices evolution by introducing BrownField Airline. Using
    the case study, this chapter explains how to apply the microservices concepts
    learned in previous chapters.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。微服务演进-案例研究")，“微服务演进-案例研究”，将读者带入了一个真实的微服务演进案例研究，介绍了BrownField航空公司。使用案例研究，本章解释了如何应用前几章学到的微服务概念。'
- en: '[Chapter 5](ch05.html "Chapter 5. Scaling Microservices with Spring Cloud"),
    *Scaling Microservices with Spring Cloud*, shows how to scale the previous example
    using Spring Cloud stack capabilities. It details out the architecture and different
    components of Spring Cloud and how they integrate together.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章。使用Spring Cloud扩展微服务")，“使用Spring Cloud扩展微服务”，展示了如何使用Spring
    Cloud堆栈功能扩展先前的示例。它详细介绍了Spring Cloud的架构和不同组件以及它们如何集成在一起。'
- en: '[Chapter 6](ch06.html "Chapter 6. Autoscaling Microservices"), *Autoscaling
    Microservices*, demonstrates the use of a simple life cycle manager to attain
    elasticity and the self-management of microservices by orchestrating services
    with service gateways. It explains how, in the real world, one can add intelligence
    to service gateways.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章。微服务的自动扩展")，“微服务的自动扩展”，演示了使用简单的生命周期管理器来实现弹性和微服务的自我管理，通过编排服务网关来编排服务。它解释了在现实世界中如何向服务网关添加智能。'
- en: '[Chapter 7](ch07.html "Chapter 7. Logging and Monitoring Microservices"), *Logging
    and Monitoring Microservices*, covers the importance of logging and monitoring
    aspects when developing microservices. Here, we will go into the details of some
    of the best practices when using microservices such as centralized logging and
    monitoring capabilities using open source tools and how to integrate them with
    Spring projects.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章。微服务的日志记录和监控")，“微服务的日志记录和监控”，涵盖了在开发微服务时日志记录和监控方面的重要性。在这里，我们将详细介绍使用微服务时一些最佳实践，如使用开源工具实现集中式日志记录和监控功能，以及如何将它们与Spring项目集成。'
- en: '[Chapter 8](ch08.html "Chapter 8. Containerizing Microservices with Docker"),
    *Containerizing Microservices with Docker*, explains containerization concepts
    in the context of microservices. Using Mesos and Marathon, this chapter demonstrates
    a next-level implementation to replace a custom life cycle manager for large deployments.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章。使用Docker容器化微服务")，“使用Docker容器化微服务”，解释了微服务上下文中的容器化概念。使用Mesos和Marathon，本章演示了一个替代自定义生命周期管理器用于大规模部署的下一级实现。'
- en: '[Chapter 9](ch09.html "Chapter 9. Managing Dockerized Microservices with Mesos
    and Marathon"), *Managing Dockerized Microservices with Mesos and Marathon*, explains
    the autoprovisioning and deployment of microservices. Here, you will also learn
    how to use Docker containers in the previous example for large-scale deployments.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。使用Mesos和Marathon管理Docker化的微服务")，“使用Mesos和Marathon管理Docker化的微服务”，解释了微服务的自动配置和部署。在这里，您还将学习如何在前面的示例中使用Docker容器进行大规模部署。'
- en: '[Chapter 10](ch10.html "Chapter 10. The Microservices Development Life Cycle"),
    *The Microservices Development Life Cycle*, covers the process and practices of
    microservices development. The importance of DevOps and continuous delivery pipelines
    is also explained in this chapter.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](ch10.html "第10章。微服务开发生命周期")，“微服务开发生命周期”，涵盖了微服务开发的过程和实践。本章还解释了DevOps和持续交付管道的重要性。'
- en: What you need for this book
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书需要什么
- en: '[Chapter 2](ch02.html "Chapter 2. Building Microservices with Spring Boot"),
    *Building Microservices with Spring Boot*, introduces Spring Boot, which requires
    the following software components to test the code:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。使用Spring Boot构建微服务")，“使用Spring Boot构建微服务”，介绍了Spring Boot，需要以下软件组件来测试代码：'
- en: JDK 1.8
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JDK 1.8
- en: Spring Tool Suite 3.7.2 (STS)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spring Tool Suite 3.7.2 (STS)
- en: Maven 3.3.1
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maven 3.3.1
- en: Spring Framework 4.2.6.RELEASE
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spring Framework 4.2.6.RELEASE
- en: Spring Boot 1.3.5.RELEASE
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spring Boot 1.3.5.RELEASE
- en: '`spring-boot-cli-1.3.5.RELEASE-bin.zip`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`spring-boot-cli-1.3.5.RELEASE-bin.zip`'
- en: RabbitMQ 3.5.6
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RabbitMQ 3.5.6
- en: FakeSMTP
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FakeSMTP
- en: 'In [Chapter 5](ch05.html "Chapter 5. Scaling Microservices with Spring Cloud"),
    *Scaling Microservices with Spring Cloud*, you will learn about the Spring Cloud
    project. This requires the following software components in addition to the previously
    mentioned ones:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第5章](ch05.html "第5章。使用Spring Cloud扩展微服务")，“使用Spring Cloud扩展微服务”，您将了解Spring
    Cloud项目。除了前面提到的软件组件外，还需要以下软件组件：
- en: Spring Cloud Brixton.RELEASE
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spring Cloud Brixton.RELEASE
- en: 'In [Chapter 7](ch07.html "Chapter 7. Logging and Monitoring Microservices"),
    *Logging and Monitoring Microservices*, we will take a look at how centralized
    logging can be implemented for microservices. This requires the following software
    stack:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](ch07.html "第7章。微服务的日志记录和监控")，“微服务的日志记录和监控”中，我们将看看如何为微服务实现集中式日志记录。这需要以下软件堆栈：
- en: Elasticsearch 1.5.2
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elasticsearch 1.5.2
- en: '`kibana-4.0.2-darwin-x64`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kibana-4.0.2-darwin-x64`'
- en: Logstash 2.1.2
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Logstash 2.1.2
- en: 'In [Chapter 8](ch08.html "Chapter 8. Containerizing Microservices with Docker"),
    *Containerizing Microservices with Docker*, we will demonstrate how we can use
    Docker for microservices deployments. This requires the following software components:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第8章](ch08.html "第8章。使用Docker容器化微服务")，“使用Docker容器化微服务”，我们将演示如何使用Docker进行微服务部署。这需要以下软件组件：
- en: Docker version 1.10.1
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker版本1.10.1
- en: Docker Hub
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Hub
- en: '[Chapter 9](ch09.html "Chapter 9. Managing Dockerized Microservices with Mesos
    and Marathon"), *Managing Dockerized Microservices with Mesos and Marathon*, uses
    Mesos and Marathon to deploy dockerized microservices into an autoscalable cloud.
    The following software components are required for this purpose:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。使用Mesos和Marathon管理Docker化的微服务")，“使用Mesos和Marathon管理Docker化的微服务”，使用Mesos和Marathon将docker化的微服务部署到可自动扩展的云中。为此需要以下软件组件：'
- en: Mesos version 0.27.1
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mesos版本0.27.1
- en: Docker version 1.6.2
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker版本1.6.2
- en: Marathon version 0.15.3
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书主要面向寻求构建云就绪的互联网规模应用程序以满足现代业务需求的Spring开发人员。本书将通过检查许多真实用例和实际代码示例，帮助开发人员了解微服务的确切含义以及它们为何在当今世界中如此重要。开发人员将了解如何构建简单的RESTful服务，并将其有机地发展成真正的企业级微服务生态系统。
- en: Who this book is for
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 马拉松版本0.15.3
- en: This book is primarily for Spring developers who are looking to build cloud-ready
    Internet-scale applications to meet modern business demands. The book will help
    developers to understand what exactly microservices are and why they are important
    in today's world by examining a number of real-world use cases and hands-on code
    samples. Developers will understand how to build simple RESTful services and organically
    grow them to truly enterprise-grade microservices ecosystem.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明以如下方式显示在一个框中。
- en: This book will be interesting to architects who are seeking help on designing
    robust Internet-scale microservices using the Spring framework, Spring Boot, and
    Spring Cloud and managing them using Docker, Mesos, and Marathon. The capability
    model will help architects devise solutions even beyond the tools and technologies
    discussed in this book.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会以如下方式出现在文本中：“点击**发出请求**按钮。”'
- en: Conventions
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中，您将找到许多文本样式，用于区分不同类型的信息。以下是这些样式的一些示例以及它们的含义解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    following properties can be set in `application.properties` to customize application-related
    information."     A block of code is set as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：“可以在`application.properties`中设置以下属性来自定义与应用程序相关的信息。”
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目以粗体设置：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Click on the **Make Request** button."'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合对象
- en: Note
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 约定
- en: Tip
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示和技巧以如下方式出现。
- en: Tips and tricks appear like this.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将对寻求使用Spring框架、Spring Boot和Spring Cloud设计强大的互联网规模微服务，并使用Docker、Mesos和Marathon进行管理的架构师感兴趣。能力模型将帮助架构师制定甚至超越本书讨论的工具和技术的解决方案。
