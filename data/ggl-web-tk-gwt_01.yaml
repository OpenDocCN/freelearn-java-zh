- en: Chapter 1. Getting Started
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。入门
- en: The **Google Web Toolkit** (**GWT**) is a revolutionary way to build **Asynchronous
    JavaScript and XML** (**AJAX**) applications that are comparable in responsiveness
    and look and feel to desktop applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**Google Web Toolkit**（**GWT**）是一种革命性的构建**异步JavaScript和XML**（**AJAX**）应用程序的方式，其响应速度和外观与桌面应用程序相媲美。'
- en: 'In this chapter, we will look at:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看到：
- en: An introduction to GWT
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GWT简介
- en: Downloading GWT
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载GWT
- en: Exploring the GWT samples
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索GWT示例
- en: The GWT License
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GWT许可证
- en: Introduction to GWT
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GWT简介
- en: '**AJAX** applications are great for creating web applications that are highly
    interactive and provide a great user experience, while being comparable to desktop
    applications in functionality, without the hassle of downloading or installing
    anything.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**AJAX**应用程序非常适合创建高度交互且提供出色用户体验的Web应用程序，同时在功能上与桌面应用程序相媲美，而无需下载或安装任何内容。'
- en: AJAX applications combine XML data interchange along with HTML and CSS for styling
    the interface, the `XMLHttpRequest` object for asynchronous communication with
    the server application, and JavaScript for dynamic interaction with the provided
    data. This enables one to build applications that are part of the Web 2.0 revolution—web
    applications that rival a desktop application in responsiveness. We can build
    web pages using AJAX to communicate with the server in the background, without
    reloading the page. We can even replace different sections of the displayed web
    page without refreshing the page. AJAX, finally enables us to take the traditional
    desktop-oriented applications, such as word processors, spreadsheets, and drawing
    programs, and serve them to users via the Web.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: AJAX应用程序将XML数据交换与HTML和CSS相结合，用于为界面设置样式，`XMLHttpRequest`对象用于与服务器应用程序进行异步通信，JavaScript用于与提供的数据进行动态交互。这使得我们能够构建Web
    2.0革命的一部分-与桌面应用程序相媲美的应用程序。我们可以使用AJAX构建与服务器在后台通信的Web页面，而无需重新加载页面。我们甚至可以在不刷新页面的情况下替换显示的网页的不同部分。最后，AJAX使我们能够将传统的面向桌面的应用程序（如文字处理器、电子表格和绘图程序）通过Web提供给用户。
- en: The GWT provides a Java-based development environment that enables you to build
    AJAX applications using the Java language. It encapsulates the `XMLHttpRequest`
    object API, and minimizes the cross-browser issues. So, you can quickly and efficiently
    build AJAX applications without worrying too much about tailoring your code to
    work in various browsers. It allows you to leverage the **Standard Widget Toolkit**
    (**SWT**) or Swing style programming by providing a framework that enables you
    to combine widgets into user interfaces. This is a great way to improve productivity
    and shorten your development time lines, by leveraging your knowledge of the Java
    programming language and your familiarity with the event-based interface development
    framework.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: GWT提供了一个基于Java的开发环境，使您能够使用Java语言构建AJAX应用程序。它封装了`XMLHttpRequest`对象API，并最小化了跨浏览器问题。因此，您可以快速高效地构建AJAX应用程序，而无需过多担心调整代码以在各种浏览器中运行。它允许您利用**标准小部件工具包**（**SWT**）或Swing样式编程，通过提供一个使您能够将小部件组合成用户界面的框架来提高生产力并缩短开发时间。这是一种通过利用您对Java编程语言的了解和对基于事件的接口开发框架的熟悉来提高生产力并缩短开发时间的好方法。
- en: GWT provides a set of ready-to-use user interface widgets that you can immediately
    utilize to create new applications. It also provides a simple way to create innovative
    widgets by combining the existing ones. You can use the Eclipse IDE to create,
    debug, and unit-test your AJAX applications. You can build RPC services to provide
    certain functionalities that can be accessed asynchronously from your web applications
    easily using the GWT RPC framework. GWT enables you to integrate easily with servers
    written in other languages, so you can quickly enhance your applications to provide
    a much better user experience by utilizing the AJAX framework.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: GWT提供了一组可立即使用的用户界面小部件，您可以立即利用它们来创建新的应用程序。它还提供了一种通过组合现有小部件来创建创新小部件的简单方法。您可以使用Eclipse
    IDE来创建、调试和单元测试您的AJAX应用程序。您可以构建RPC服务，以提供可以从您的Web应用程序异步访问的某些功能，使用GWT RPC框架非常容易。GWT使您能够轻松地与其他语言编写的服务器集成，因此您可以通过利用AJAX框架快速增强您的应用程序，从而提供更好的用户体验。
- en: 'By the end of this book you will:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 到本书结束时，您将：
- en: Learn how GWT works
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解GWT的工作原理
- en: Create effective AJAX applications quickly
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速创建有效的AJAX应用程序
- en: Create custom reusable widgets for your applications
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为您的应用程序创建自定义可重用小部件
- en: Create back-end RPC services that can be easily used from your AJAX applications
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建易于从AJAX应用程序中使用的后端RPC服务
- en: Basic Download
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本下载
- en: We are going to download GWT and its prerequisites, install them to the hard
    disk, and then run one of the sample applications shipped with the GWT distribution
    to ensure that it works correctly.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将下载GWT及其先决条件，将它们安装到硬盘上，然后运行GWT分发的一个示例应用程序，以确保它能正常工作。
- en: Time for Action—Downloading GWT
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 行动时间-下载GWT
- en: In order to use the GWT, you will need to have Java SDK installed. If you do
    not already have the Java SDK, you can download the latest version from [http://java.sun.com/javase/downloads/](http://java.sun.com/javase/downloads/).
    Install the SDK using the instructions provided by the download for your platform.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用GWT，您需要安装Java SDK。如果您还没有安装Java SDK，可以从[http://java.sun.com/javase/downloads/](http://java.sun.com/javase/downloads/)下载最新版本。按照下载提供的说明在您的平台上安装SDK。
- en: Note
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Java 1.4.2 is the safest version of Java to use with GWT, as it is completely
    compatible with this version, and you can be sure that your application code will
    compile correctly. GWT also works with the two newer versions of the Java platform—1.5
    and 1.6; however, you will not be able to use any of the newer features of the
    Java language introduced in these versions in your GWT application code
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Java 1.4.2是与GWT一起使用的最安全的Java版本，因为它与该版本完全兼容，您可以确保您的应用程序代码将正确编译。GWT还适用于Java平台的两个较新版本-1.5和1.6；但是，您将无法在GWT应用程序代码中使用这些版本中引入的任何新功能。
- en: 'Now, you are ready to download GWT:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经准备好下载GWT：
- en: GWT is available for Windows XP/2000, Linux, and Mac OS X platforms from the
    GWT download page ([http://code.google.com/webtoolkit/download.html](http://code.google.com/webtoolkit/download.html)).
    This download includes the GWT compiler, hosted web browser, GWT class libraries,
    and several sample applications.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GWT可从GWT下载页面（[http://code.google.com/webtoolkit/download.html](http://code.google.com/webtoolkit/download.html)）下载，适用于Windows
    XP/2000、Linux和Mac OS X平台。此下载包括GWT编译器、托管Web浏览器、GWT类库和几个示例应用程序。
- en: 'Please read the Terms and Conditions of usage before downloading it. The latest
    version available is 1.3 RC 1, released December 12, 2006\. Select the file for
    your platform. Here is a sample window showing the versions available for GWT:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 请在下载之前阅读使用条款和条件。最新版本是1.3 RC 1，发布于2006年12月12日。选择适合您平台的文件。以下是显示GWT可用版本的示例窗口：
- en: '![Time for Action—Downloading GWT](img/1007_01_01.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![下载GWT的时间到了](img/1007_01_01.jpg)'
- en: Unzip the downloaded GWT distribution to your hard disk. It will create a directory
    named `gwt-windows-xxx` on Windows and `gwt-linux-xxx` on Linux, where `xxx` is
    the version number of the downloaded distribution. We will refer to the directory
    that contains the unzipped distribution as `GWT_HOME`. The `GWT_HOME` directory
    contains a `samples` folder with seven applications.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的GWT分发文件解压到硬盘上。它将在Windows上创建一个名为`gwt-windows-xxx`的目录，在Linux上创建一个名为`gwt-linux-xxx`的目录，其中`xxx`是下载分发的版本号。我们将把包含解压分发的目录称为`GWT_HOME`。`GWT_HOME`目录包含一个包含七个应用程序的`samples`文件夹。
- en: In order to ensure that the GWT is correctly installed, run the `Hello` sample
    application for your platform by executing the startup script for your platform
    (the executable scripts for Windows have the extension `.cmd` and the ones for
    Linux have the extension `.sh`).
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了确保GWT已正确安装，请通过执行平台的启动脚本（Windows的可执行脚本扩展名为`.cmd`，Linux的为`.sh`）来运行平台的`Hello`示例应用程序。
- en: 'Execute the `Hello-shell` script for your platform. Here is a screenshot of
    the `Hello` application running successfully in the hosted GWT browser:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为您的平台执行`Hello-shell`脚本。以下是托管GWT浏览器中成功运行`Hello`应用程序的屏幕截图：
- en: '![Time for Action—Downloading GWT](img/1007_01_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![下载GWT的时间到了](img/1007_01_02.jpg)'
- en: 'Click on the **Click me** button and you will get a dialog box as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 单击**点击我**按钮，您将会得到一个对话框，如下所示：
- en: '![Time for Action—Downloading GWT](img/1007_01_03.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![下载GWT的时间到了](img/1007_01_03.jpg)'
- en: What Just Happened?
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: 'The `GWT_HOME` directory contains all the scripts, files, and libraries needed
    for GWT development, which are as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`GWT_HOME`目录包含GWT开发所需的所有脚本、文件和库，如下所示：'
- en: '`doc:` This directory contains the API documentation for the various GWT classes.
    The API documentation is provided in two formats—the Google custom format and
    the familiar `javadoc` format.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`doc：`该目录包含各种GWT类的API文档。API文档以两种格式提供——Google自定义格式和熟悉的`javadoc`格式。'
- en: '`samples:` A directory that contains the sample applications.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`samples：`包含示例应用程序的目录。'
- en: '`gwt-*.jar:` These are the Java libraries that contain the GWT classes.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gwt-*.jar：`这些是包含GWT类的Java库。'
- en: '`index.html:` This file is used as Readme for the GWT. It also provides a starting
    point for the GWT documentation along with pointers to other sources of information.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.html：`该文件用作GWT的自述文件。它还提供了GWT文档的起点，以及指向其他信息来源的指针。'
- en: '`gwt-ll.dll` and `swt-win32-3235.dll:` These are Windows'' shared libraries
    (Windows only).'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gwt-ll.dll`和`swt-win32-3235.dll：`这些是Windows的共享库（仅限Windows）。'
- en: '`libgwt-11.so, libswt-gtk-3235.so, libswt-mozilla17-profile-gcc3-gtk-3235.so,
    libswt-mozilla17-profile-gtk-3235.so, libswt-mozilla-gcc3-gtk-3235.so, libswt-mozilla-gtk-3235.so`,
    and `libswt-pi-gtk-3235.so:` These are Linux shared libraries (Linux only).'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libgwt-11.so, libswt-gtk-3235.so, libswt-mozilla17-profile-gcc3-gtk-3235.so,
    libswt-mozilla17-profile-gtk-3235.so, libswt-mozilla-gcc3-gtk-3235.so, libswt-mozilla-gtk-3235.so`和`libswt-pi-gtk-3235.so：`这些是Linux共享库（仅限Linux）。'
- en: '`applicationCreator:` This is a Script file for creating a new application.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`applicationCreator：`这是一个用于创建新应用程序的脚本文件。'
- en: '`junitCreator:` This is a Script file for creating a new JUnit test.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`junitCreator：`这是一个用于创建新的JUnit测试的脚本文件。'
- en: '`projectCreator:` This is a Script file for creating a new project.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`projectCreator：`这是一个用于创建新项目的脚本文件。'
- en: '`i18nCreator:` This is a Script file for creating internationalization scripts.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i18nCreator：`这是一个用于创建国际化脚本的脚本文件。'
- en: When you executed `Hello-shell.cmd`, you started up the GWT development shell
    and provided the `Hello.html` file as a parameter to it. The development shell
    then launched a special hosted web browser and displayed the `Hello.html` file
    in it. The hosted web browser is an embedded SWT web browser that has hooks into
    the Java Virtual Machine (JVM). This makes it possible to debug the Java code
    for the application, using a Java development environment such as Eclipse.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当您执行`Hello-shell.cmd`时，您启动了GWT开发shell，并将`Hello.html`文件作为其参数提供。开发shell然后启动了一个特殊的托管Web浏览器，并在其中显示了`Hello.html`文件。托管Web浏览器是一个嵌入式SWT
    Web浏览器，它与Java虚拟机（JVM）有关联。这使得可以使用Java开发环境（如Eclipse）来调试应用程序的Java代码。
- en: 'Here is a screenshot of the development shell that starts up first:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这是启动的开发shell的屏幕截图：
- en: '![What Just Happened?](img/1007_01_04.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![刚刚发生了什么？](img/1007_01_04.jpg)'
- en: There's More!
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 还有更多！
- en: 'You can customize several of the options provided to the GWT development shell
    on startup. Run the development shell, from a command prompt, in the `GWT_HOME`
    directory to see the various options available:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在启动时自定义GWT开发shell提供的几个选项。从命令提示符中在`GWT_HOME`目录下运行开发shell，以查看各种可用选项：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You will see a screen similar to this one:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到类似于这样的屏幕：
- en: '![There''s More!](img/1007_01_05.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多！](img/1007_01_05.jpg)'
- en: If you want to try out different settings, such as a different port numbers,
    you can modify the `Hello-shell.cmd` file to use these options.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想尝试不同的设置，比如不同的端口号，您可以修改`Hello-shell.cmd`文件以使用这些选项。
- en: 'The Linux version of GWT contains 32-bit SWT library bindings that are used
    by the hosted web browser. In order to run the samples or use the GWT hosted browser
    on a 64-bit platform such as AMD64, you need to do the following:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: GWT 的 Linux 版本包含了用于托管 Web 浏览器的 32 位 SWT 库绑定。为了在 AMD64 等 64 位平台上运行示例或使用 GWT 托管的浏览器，您需要执行以下操作：
- en: Use a 32-bit JDK with 32-bit binary compatibility enabled.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用启用了 32 位二进制兼容性的 32 位 JDK。
- en: Set the environment variable `LD_LIBRARY_PATH` to the Mozilla directory in your
    GWT distribution, before starting the GWT shell.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在启动 GWT shell 之前，将环境变量 `LD_LIBRARY_PATH` 设置为您的 GWT 发行版中的 Mozilla 目录。
- en: Exploring the GWT Samples
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 GWT 示例
- en: Google provides a set of sample applications with the GWT distribution, which
    demonstrate several of its features. This task will explain how to run one of
    these samples—the `KitchenSink` application.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Google 提供了一组示例应用程序，演示了 GWT 的几个功能。本任务将解释如何运行这些示例之一——`KitchenSink` 应用程序。
- en: Time for Action—Getting into KitchenSink
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 行动时间——进入 KitchenSink
- en: There are seven sample applications provided with the GWT distribution—`Hello,
    DynaTable, I18N, JSON, KitchenSink, SimpleXML`, and `Mail`, each of which demonstrates
    a set of GWT features. In this task, we will explore the `KitchenSink` sample
    application, as it demonstrates all of the user-interface widgets that are provided
    with GWT. So, let's get into `KitchenSink:`
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: GWT 发行版提供了七个示例应用程序——`Hello, DynaTable, I18N, JSON, KitchenSink, SimpleXML` 和
    `Mail`，每个应用程序都演示了一组 GWT 功能。在这个任务中，我们将探索 `KitchenSink` 示例应用程序，因为它演示了 GWT 提供的所有用户界面小部件。所以，让我们进入
    `KitchenSink`：
- en: Run the `KitchenSink` application for your platform by executing the `KitchenSink-shell`
    script in the `GWT_HOME/samples/KitchenSink` directory. Here is the `KitchenSink`
    application:![Time for Action—Getting into KitchenSink](img/1007_01_06.jpg)
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在 `GWT_HOME/samples/KitchenSink` 目录中执行 `KitchenSink-shell` 脚本来为您的平台运行 `KitchenSink`
    应用程序。这是 `KitchenSink` 应用程序：![Time for Action—Getting into KitchenSink](img/1007_01_06.jpg)
- en: Click on the **Compile/Browse** button. The `KitchenSink` application will be
    automatically compiled and the system browser for your platform will start up
    and display the `KitchenSink` application.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**编译/浏览**按钮。`KitchenSink` 应用程序将自动编译，并且系统浏览器将启动并显示 `KitchenSink` 应用程序。
- en: Explore the application by clicking on each of the widget names in the navigation
    tree on the left. The frame on the right will display the selected widget and
    its variations. We will be using most of these widgets to build AJAX applications
    in later tasks.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击左侧导航树中的每个小部件名称来探索应用程序。右侧的框架将显示所选小部件及其变体。我们将在以后的任务中使用大多数这些小部件来构建 AJAX 应用程序。
- en: You can add the `KitchenSink` sample as an Eclipse project to your workspace
    and browse the Java source code that is eventually compiled into HTML and JavaScript
    by the GWT compiler. We can use the `projectCreator` file helper script provided
    by GWT to generate the Eclipse project files for the `KitchenSink` application.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以将 `KitchenSink` 示例作为 Eclipse 项目添加到您的工作区，并浏览最终由 GWT 编译成 HTML 和 JavaScript
    的 Java 源代码。我们可以使用 GWT 提供的 `projectCreator` 文件辅助脚本来生成 `KitchenSink` 应用程序的 Eclipse
    项目文件。
- en: Navigate to your `GWT_HOME` directory and run the following command in a command
    prompt.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的 `GWT_HOME` 目录，并在命令提示符中运行以下命令。
- en: '[PRE1]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will create the Eclipse platform project files, which can be imported into
    your Eclipse workspace. We will learn more about this script in the next chapter,
    when we create a new application from scratch.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建 Eclipse 平台项目文件，可以导入到您的 Eclipse 工作区中。在下一章中，当我们从头开始创建一个新应用程序时，我们将更多地了解这个脚本。
- en: Import the `samples/KitchenSink/.project` file into your Eclipse workspace.
    You can follow the above steps for each of the sample projects to generate their
    Eclipse project files, and then import them into your workspace. Here is an Eclipse
    workspace displaying the `KitchenSink.java` file:![Time for Action—Getting into
    KitchenSink](img/1007_01_07.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `samples/KitchenSink/.project` 文件导入到您的 Eclipse 工作区中。您可以按照上述步骤为每个示例项目生成其 Eclipse
    项目文件，然后将其导入到您的工作区。这是一个显示 `KitchenSink.java` 文件的 Eclipse 工作区：![Time for Action—Getting
    into KitchenSink](img/1007_01_07.jpg)
- en: If you know how to program in Java, you can build an AJAX application using
    GWT, without any exposure to the complexities of either the `XMLHttpRequest` object
    API or the variations in the various browser implementations of the `XMLHttpRequest`
    object API.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您知道如何使用 Java 编程，您可以使用 GWT 构建 AJAX 应用程序，而不需要了解 `XMLHttpRequest` 对象 API 的复杂性，也不需要了解
    `XMLHttpRequest` 对象 API 在各种浏览器中的差异。
- en: What Just Happened?
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: The GWT development shell starts up, and runs the hosted web browser with the
    `KitchenSink` application running in it. The shell contains an embedded version
    of the Tomcat servlet container that listens on port 8888\. When you run in the
    web mode, the application is compiled into HTML and JavaScript from Java. The
    compiled application is stored in the `KitchenSink/www` directory, and this directory
    itself is registered as a web application with Tomcat. This is how Tomcat is able
    to serve up the application to requesting web browsers.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: GWT 开发 shell 启动，并在其中运行托管 Web 浏览器，其中运行着 `KitchenSink` 应用程序。该 shell 包含一个嵌入式版本的
    Tomcat servlet 容器，监听在端口 8888 上。当您在 Web 模式下运行时，应用程序将从 Java 编译为 HTML 和 JavaScript。编译后的应用程序存储在
    `KitchenSink/www` 目录中，并且该目录本身被注册为 Tomcat 的 Web 应用程序。这就是 Tomcat 能够为请求的 Web 浏览器提供应用程序的原因。
- en: As long as the development shell is running, you can even use other external
    web browsers to connect to the `KitchenSink` application by using the URL `http://localhost:8888/com.google.gwt.sample.kitchensink.KitchenSink/KitchenSink.html`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 只要开发 shell 在运行，您甚至可以使用其他外部 Web 浏览器通过 URL `http://localhost:8888/com.google.gwt.sample.kitchensink.KitchenSink/KitchenSink.html`
    连接到 `KitchenSink` 应用程序。
- en: However, when we use an external browser to connect to the development shell,
    we cannot use breakpoints, and thus lose the debug capabilities provided when
    we run the application using the hosted browser. In order to access the application
    from another computer, ensure that you use either a DNS-resolvable machine name
    or the machine's IP address instead of localhost.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当我们使用外部浏览器连接到开发shell时，我们无法使用断点，因此失去了在使用托管浏览器运行应用程序时提供的调试功能。为了从另一台计算机访问应用程序，请确保您使用可解析DNS的机器名称或机器的IP地址，而不是localhost。
- en: 'GWT consists of four main components that are layered together to provide the
    framework for writing AJAX applications using the toolkit:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: GWT由四个主要组件组成，这些组件层叠在一起，为使用工具包编写AJAX应用程序提供了框架：
- en: '**GWT Java-to-JavaScript Compiler:** You use the GWT compiler to compile your
    GWT applications to JavaScript. The application can then be deployed to a web
    container. This is referred to as running in web mode. When you click on the **Compile/Browse**
    button, the Java code for the `KitchenSink` project is compiled by the Java-to-JavaScript
    compiler into pure HTML and JavaScript. The resulting artifacts are copied automatically
    to the `KitchenSink/www` folder.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GWT Java-to-JavaScript编译器：**您可以使用GWT编译器将GWT应用程序编译为JavaScript。然后可以将应用程序部署到Web容器。这被称为在Web模式下运行。当您单击**编译/浏览**按钮时，`KitchenSink`项目的Java代码将被Java-to-JavaScript编译器编译为纯HTML和JavaScript。生成的构件会自动复制到`KitchenSink/www`文件夹中。'
- en: '**GWT Hosted Web Browser:** This enables you to run and execute your GWT applications
    as Java in the Java Virtual Machine (JVM) without compiling to JavaScript first.
    This is referred to as running in hosted mode. GWT accomplishes this by embedding
    a special SWT browser control that contains hooks into the JVM. This special browser
    utilizes an Internet Explorer control on Windows or a Mozilla control on Linux.
    When you run the `KitchenSink` sample, the embedded SWT browser is what you see
    displaying the application.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GWT托管Web浏览器：**这使您可以在Java虚拟机（JVM）中运行和执行GWT应用程序，而无需首先编译为JavaScript。这被称为在托管模式下运行。GWT通过嵌入一个特殊的SWT浏览器控件来实现这一点，该控件包含对JVM的钩子。这个特殊的浏览器在Windows上使用Internet
    Explorer控件，在Linux上使用Mozilla控件。当您运行`KitchenSink`示例时，嵌入的SWT浏览器就是您看到显示应用程序的内容。'
- en: '**JRE emulation library:** This contains JavaScript implementations of most
    of the widely used classes of the `java.lang` and `java.util` packages from the
    Java standard class library. Only some of the commonly used classes from these
    two packages are supported. None of the other Java packages in the JDK are currently
    part of this emulation library. These are the only classes that can be used by
    you for the client side of the AJAX application. You are of course free to use
    the entire Java class library for the server-side implementation. The Java code
    in the `KitchenSink` project is compiled into JavaScript using this emulation
    library.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JRE仿真库：**这包含了`java.lang`和`java.util`包中大多数常用类的JavaScript实现，来自Java标准类库。这两个包中的一些常用类得到了支持。JDK中的其他Java包目前不包括在此仿真库中。这些是您可以在AJAX应用程序的客户端使用的唯一类。当然，您可以自由地在服务器端实现中使用整个Java类库。`KitchenSink`项目中的Java代码使用此仿真库编译为JavaScript。'
- en: '**GWT Web UI class library:** This provides a set of custom interfaces and
    classes that enable you to create various widgets such as buttons, text boxes,
    images, and text. GWT ships with most of the widgets commonly used in web applications.
    This is the class library that provides the Java widgets that are used in the
    `KitchenSink` application.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GWT Web UI类库：**这提供了一组自定义接口和类，使您能够创建各种小部件，如按钮、文本框、图像和文本。GWT附带了大多数在Web应用程序中常用的小部件。这是提供了`KitchenSink`应用程序中使用的Java小部件的类库。'
- en: GWT License
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GWT许可证
- en: 'Check if the GWT license is appropriate for you. These are the main features
    that you need to keep in mind:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 检查GWT许可证是否适合您。这些是您需要牢记的主要功能：
- en: The GWT is open source and provided under an Apache Open Source License 2.0—
    [http://www.apache.org/licenses/](http://www.apache.org/licenses/).
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GWT是开源的，并在Apache开源许可证2.0下提供- [http://www.apache.org/licenses/](http://www.apache.org/licenses/)。
- en: The third-party libraries and products that are bundled with the GWT distribution
    are provided under licensing detailed on this page— [http://code.google.com/webtoolkit/terms.html#licenses](http://code.google.com/webtoolkit/terms.html#licenses).
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与GWT分发捆绑在一起的第三方库和产品是根据此页面上详细说明的许可证提供的- [http://code.google.com/webtoolkit/terms.html#licenses](http://code.google.com/webtoolkit/terms.html#licenses)。
- en: You can use GWT for building any kind of applications (commercial or non commercial).
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以使用GWT构建任何类型的应用程序（商业或非商业）。
- en: The application and the code for the application belong to the application's
    developer and Google does not have any rights to it.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序和应用程序的代码属于应用程序的开发人员，Google对此没有任何权利。
- en: You can use GWT to build any application you want and distribute the application
    under any license. You can also distribute the Java, HTML, JavaScript, and any
    other content generated by the GWT, along with the GWT tools that were used to
    generate that content, as long as you follow the terms of the Apache License.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用GWT构建任何应用程序，并在任何许可下分发该应用程序。您还可以分发由GWT生成的Java、HTML、JavaScript和任何其他内容，以及用于生成该内容的GWT工具，只要您遵循Apache许可证的条款。
- en: Summary
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about the basic components of GWT. We saw how to
    download and install GWT, and explored the GWT sample application. Finally, we
    discussed the licensing terms for GWT.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了GWT的基本组件。我们看到了如何下载和安装GWT，并探索了GWT示例应用程序。最后，我们讨论了GWT的许可条款。
- en: In the next chapter, we will learn how to create a new GWT application from
    scratch.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何从头开始创建一个新的GWT应用程序。
