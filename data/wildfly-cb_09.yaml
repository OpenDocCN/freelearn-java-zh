- en: Chapter 9. Conquering the CLI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章. 克服CLI
- en: 'In this chapter, you will learn the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习以下食谱：
- en: Invoking server stop, start, and reload
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用服务器停止、启动和重新加载
- en: Invoking server group stop, start, restart, and reload
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用服务器组停止、启动、重启和重新加载
- en: Creating a server group
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建服务器组
- en: Creating a server
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建服务器
- en: Managing an application – deploy, undeploy
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理应用程序 – 部署、卸载
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, you will learn how to use the CLI to alter the system's state.
    That is, changing different settings such as deployments and creating new servers.
    In the previous chapter, we saw how to grab information out of the CLI. The CLI
    also provides a method to execute the commands outside it, by specifying the WildFly
    to connect to and the command to execute.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何使用CLI来改变系统的状态。也就是说，改变不同的设置，如部署和创建新服务器。在前一章中，我们看到了如何从CLI中获取信息。CLI还提供了一个方法来执行它外的命令，通过指定要连接的WildFly和要执行的命令。
- en: Furthermore, WildFly provides you with an HTTP API, which can be used to perform
    actions and to retrieve information (most of these APIs are used to perform system
    monitoring analysis). In the previous chapter, we were using the CLI to grab information;
    thus via HTTP we have been using the GET verb of the HTTP protocol. In the following
    recipes, we will alter the state of the server by using the POST verb, along with
    the parameters that the WildFly HTTP API needs. The HTTP API only accepts JSON
    data, so we need to send the data that way.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，WildFly为你提供了一个HTTP API，可以用来执行操作和检索信息（大多数这些API用于执行系统监控分析）。在前一章中，我们使用CLI来获取信息；因此，通过HTTP，我们使用了HTTP协议的GET动词。在下面的食谱中，我们将使用POST动词以及WildFly
    HTTP API需要的参数来改变服务器的状态。HTTP API只接受JSON数据，因此我们需要以这种方式发送数据。
- en: We will use methods within both the operational modes— standalone and domain—whenever
    it makes sense, because with regard to the operational mode, you may have different
    entry points.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当有道理时，我们将使用两种操作模式中的方法——独立模式和域模式，因为关于操作模式，你可能有不同的入口点。
- en: In this chapter, we will simulate/use remote WildFly instances, just as in the
    real scenario where you can apply the following recipes to connect to remote servers.
    It does not make sense to try the recipes in `localhost`, without seeing any authentication
    and authorization issues.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将模拟/使用远程WildFly实例，就像在实际场景中一样，你可以应用以下食谱来连接到远程服务器。在没有看到任何身份验证和授权问题的情况下，尝试`localhost`上的食谱是没有意义的。
- en: To simulate a remote server, you can eventually use VirtualBox or Docker, and
    then install WildFly as described in the first chapter.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了模拟远程服务器，你最终可以使用VirtualBox或Docker，然后按照第一章中描述的方式安装WildFly。
- en: I'm going to use WildFly running on a Linux container using the Docker tool
    version 1.5\. You can obviously use a real remote server— it would be the same;
    what really counts is the WildFly platform being exposed.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用Docker工具版本1.5在Linux容器上运行的WildFly。显然，你可以使用真实的远程服务器——那将是相同的；真正重要的是WildFly平台是否被暴露。
- en: By the way, the last chapter of this book is all about running WildFly within
    a Linux container, using Docker. So if you are totally new to Docker (where have
    you been hiding?), have a look at the last chapter of this book, or grab the excellent
    Docker book, *The Docker Book*, *James Turnbull* at [http://www.dockerbook.com](http://www.dockerbook.com).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一句，这本书的最后一章全是关于在Linux容器中使用Docker运行WildFly的内容。所以如果你对Docker一无所知（你一直躲在哪里？），可以看看这本书的最后一章，或者获取优秀的Docker书籍，《Docker
    Book》，作者*詹姆斯·特布尔*，[http://www.dockerbook.com](http://www.dockerbook.com)。
- en: 'My Docker configuration says the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我的Docker配置如下：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Thus, my remote WildFly instance will be bound to that IP along with the usual
    WildFly ports, such as `8080`, `9990,` and `9999`. The management user is the
    same throughout the book with `wildfly` as the username and `cookbook.2015` as
    the password.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我的远程WildFly实例将绑定到该IP，以及WildFly的常用端口，如`8080`、`9990`和`9999`。本书中管理用户保持不变，用户名为`wildfly`，密码为`cookbook.2015`。
- en: Invoking server stop, start, and reload
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调用服务器停止、启动和重新加载
- en: In this recipe, we will learn how to stop, start and reload a WildFly instance
    by invoking a command to the CLI. You may need to stop a server manually to correct
    a misconfiguration or to redeploy an application. Thus, knowing how to stop, start
    and reload a server is a must.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将学习如何通过向CLI发出命令来停止、启动和重新加载一个WildFly实例。你可能需要手动停止服务器来纠正错误配置或重新部署应用程序。因此，了解如何停止、启动和重新加载服务器是必须的。
- en: Getting ready
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember, I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行WildFly，绑定到`192.168.59.103`作为IP。WildFly已经启动并运行。
- en: How to do it…
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: We will walk through the `stop`, `start`, `restart`, and `reload` commands separately
    to better explain their invocation, and eventually, the differences. For example,
    the `start` command only makes sense when running in the domain mode, as starting
    WildFly in the standalone mode is a manual operation.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分别介绍`stop`、`start`、`restart`和`reload`命令，以更好地解释它们的调用方式，并最终解释它们之间的差异。例如，`start`命令只在域模式下有意义，因为在独立模式下启动WildFly是一个手动操作。
- en: Stop
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 停止
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Obviously, after this command you need to start up WildFly manually. This is
    because the host-controller process went down along with the WildFly instance,
    and therefore, you cannot access the management interface to control your instance.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，在这个命令之后，你需要手动启动WildFly。这是因为主机控制器进程与WildFly实例一起关闭了，因此，你无法访问管理界面来控制你的实例。
- en: 'In case you are running WildFly in the domain mode, you first need to identify
    the host and the server that you want to stop, and then invoke the stop method,
    as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在域模式下运行WildFly，你首先需要确定你想要停止的主机和服务器，然后调用停止方法，如下所示：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Start
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动
- en: This command only makes sense in the domain mode, where you connect to the domain
    controller. Then you can push commands to the various active host-controllers,
    which bring WildFly instances up or down, as shown next.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令只在域模式下有意义，其中你连接到域控制器。然后你可以向各个活动的主机控制器推送命令，如以下所示，来启动或关闭WildFly实例。
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Restart
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重新启动
- en: 'Open a new terminal window and run the following code:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并运行以下代码：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As you were probably wondering in the preceding `stop` section, passing the
    `restart` argument set as `true` to the `shutdown` method would have probably
    restarted the WildFly instance and, in fact, it did.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的`stop`部分，你可能想知道，将`restart`参数设置为`true`传递给`shutdown`方法可能会重新启动WildFly实例，实际上它确实这样做了。
- en: By the way, there is no counterpart to the domain mode. It would only be applicable
    for a server group, which is discussed later in this chapter.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一句，没有与域模式对应的模式。它只适用于服务器组，这在本章后面会讨论。
- en: Reload
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重新加载
- en: 'Open a new terminal window and execute the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下操作：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `reload` method just shuts down all active WildFly services, unbinds resources,
    and then brings them all up back again, reloading the configuration.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`reload`方法只是关闭所有活动的WildFly服务，解绑资源，然后再次启动它们，重新加载配置。'
- en: 'If you are running WildFly in the domain mode, the purpose of the invocation
    remains the same— to reload the server configuration; you can do as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在域模式下运行WildFly，调用的目的仍然是相同的——重新加载服务器配置；你可以这样做：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: How it works…
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Here, we are telling the `jboss-cli.sh` script to execute the command that we
    define in the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在告诉`jboss-cli.sh`脚本来执行我们在`--command`参数中定义的命令，并将结果返回到标准输出。
- en: There's more…
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly提供另一个API，即HTTP API。让我们用一些网络命令行工具，如`curl`来尝试它。
- en: Curl
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Curl
- en: 'With a running WildFly instance, open a new terminal window and give the following
    commands:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个运行的WildFly实例中，打开一个新的终端窗口并输入以下命令：
- en: '[PRE7]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You should get the following output:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE8]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: As you can see, `curl` complains about a digest authentication for `ManagementRealm`,
    which is the one used by the WildFly management interfaces.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正如你所看到的，`curl`对`ManagementRealm`的摘要认证提出了抱怨，这是WildFly管理接口所使用的。
- en: 'Let''s give the username and password to the command, as follows:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们给命令提供用户名和密码，如下所示：
- en: '[PRE9]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You should get the following output:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE10]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Okay, it works; now remove the `--verbose` flag and execute the command again.
    You should get just the JSON output, after entering the password, as follows:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，它工作了；现在移除`--verbose`标志并再次执行命令。在输入密码后，你应该得到以下JSON输出：
- en: '[PRE11]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: I chose the `reload` method just to show you how to do it using the HTTP API.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我选择`reload`方法只是为了向你展示如何使用HTTP API来做这件事。
- en: Invoking server group stop, start, restart, and reload
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调用服务器组停止、启动、重启和重新加载
- en: In this recipe, we will learn how to stop, start, restart, and reload a WildFly
    server group, by invoking a command to the CLI. As you should know by now, you
    can stop, start, restart, and reload a single server belonging to a server group.
    We will see all these commands using the CLI.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将学习如何通过向 CLI 发送命令来停止、启动、重启和重新加载 WildFly 服务器组。正如你所知，你可以停止、启动、重启和重新加载属于服务器组的单个服务器。我们将使用
    CLI 查看所有这些命令。
- en: As we are talking about a server group, this recipe only makes sense with WildFly
    running in the domain mode.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在讨论服务器组，这个菜谱只有在 WildFly 以域模式运行时才有意义。
- en: Getting ready
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember, I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行 WildFly，绑定到 IP `192.168.59.103`。WildFly 已经启动并运行。
- en: How to do it…
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: We will walk through the `stop`, `start`, `restart,` and `reload` commands separately
    to better explain their invocation and eventual differences.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分别介绍 `stop`、`start`、`restart` 和 `reload` 命令，以更好地解释它们的调用和最终差异。
- en: Stop
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 停止
- en: 'Open a new terminal window and execute the following code:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下代码：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Start
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始
- en: 'Open a new terminal window and run the following commands:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并运行以下命令：
- en: '[PRE13]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Restart
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重启
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE14]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Reload
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重新加载
- en: 'Open a new terminal window and run the following code:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并运行以下代码：
- en: '[PRE15]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How it works…
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Here, we are telling the `jboss-cli.sh` script to execute the command that we
    define in the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在告诉 `jboss-cli.sh` 脚本执行我们在 `--command` 参数中定义的命令，并将结果返回到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 CLI，操作如下：
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The same applies for the other methods: `start-servers()`, `restart-servers()`,
    and `reload-servers()`.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的，其他方法也适用：`start-servers()`、`restart-servers()` 和 `reload-servers()`。
- en: There's more…
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools such as `curl`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 提供了一个额外的 API，即 HTTP API。让我们用一些网络命令行工具，如 `curl` 来尝试它。
- en: Curl
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Curl
- en: 'With a running WildFly instance, open a new terminal window and execute the
    following code:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个运行的 WildFly 实例中，打开一个新的终端窗口并执行以下代码：
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: That's it!
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: Creating a server group
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建服务器组
- en: In this recipe, you will learn how to create a server group, by invoking a command
    to the CLI. This applies only within the domain mode.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，你将学习如何通过向 CLI 发送命令来创建服务器组。这仅适用于域模式。
- en: Getting ready
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember, I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行 WildFly，绑定到 IP `192.168.59.103`。WildFly 已经启动并运行。
- en: How to do it…
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Open a new terminal window and run the following code:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并运行以下代码：
- en: '[PRE18]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The server group is ready to use without requiring any reload or restart. This
    means that it can be used to add servers to it. For the moment, it is just an
    empty server group. Later in this chapter, we will see how to add a server to
    a server group, using the CLI.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器组已准备好使用，无需重新加载或重启。这意味着可以将其用于添加服务器。目前，它只是一个空的服务器组。在本章的后面部分，我们将看到如何使用 CLI 将服务器添加到服务器组。
- en: 'In case you need to remove the server group, just use the `remove` method on
    it, as follows:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要删除服务器组，只需使用其上的 `remove` 方法，如下所示：
- en: '[PRE19]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works…
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Here, we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在告诉 `jboss-cli.sh` 脚本执行我们在 `--command` 参数中定义的命令，并将结果返回到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 CLI，操作如下：
- en: '[PRE20]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: There's more…
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tool, such as `curl`.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 提供了一个额外的 API，即 HTTP API。让我们用一些网络命令行工具，如 `curl` 来尝试它。
- en: 'With a running WildFly instance, open a new terminal window and run the following
    code:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个运行的 WildFly 实例中，打开一个新的终端窗口并运行以下代码：
- en: '[PRE21]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Creating a server
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建服务器
- en: In this recipe, we will learn how to create a server by invoking a command to
    the CLI. This applies only to the domain mode.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将学习如何通过向 CLI 发送命令来创建服务器。这仅适用于域模式。
- en: Getting ready
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember, I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行 WildFly，绑定到 IP `192.168.59.103`。WildFly 已经启动并运行。
- en: How to do it…
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Open a new terminal window and execute the following commands:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并执行以下命令：
- en: '[PRE22]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now the server is ready, you just need to start it manually. This can be achieved
    by starting the servers of the server group that your new server belongs to, in
    this case, `main-server-group`. Run the following code:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现在服务器已准备就绪，你只需手动启动它。这可以通过启动你的新服务器所属的服务器组的服务来实现，在这种情况下，`main-server-group`。运行以下代码：
- en: '[PRE23]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The preceding command just starts the servers in the `STOPPED` state.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令只是启动了处于 `STOPPED` 状态的服务器。
- en: How it works…
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Here, we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们正在告诉 `jboss-cli.sh` 脚本执行我们在 `--command` 参数中定义的命令，并将结果输出到标准输出。
- en: 'Using the CLI, it would be as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 CLI，它将是这样的：
- en: '[PRE24]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: There's more…
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools, such as `curl`.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 提供了一个额外的 API，即 HTTP API。让我们用一些网络命令行工具，如 `curl` 来试试。
- en: Curl
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cURL
- en: 'With a running WildFly instance, open a new terminal window and execute the
    following commands:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个正在运行的 WildFly 实例中，打开一个新的终端窗口并执行以下命令：
- en: '[PRE25]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Managing an application – deploy, undeploy
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理应用程序 – 部署、卸载
- en: In this recipe, we will learn how to deploy and undeploy an application, and
    to check its status, on a running WildFly instance, by invoking a command to the
    CLI.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将学习如何在运行中的 WildFly 实例上通过向 CLI 发送命令来部署和卸载应用程序，并检查其状态。
- en: Getting ready
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Remember, I'm running WildFly remotely, bound to `192.168.59.103` as IP. WildFly
    is already up and running.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我正在远程运行 WildFly，绑定到 IP `192.168.59.103`。WildFly 已经启动并运行。
- en: For this recipe, we will need the application named `example`, which you can
    find in my GitHub repository. If you skipped the *Managing applications using
    the deployments folder* recipe of [Chapter 2](ch02.html "Chapter 2. Running WildFly
    in Standalone Mode"), *Running WildFly in Standalone Mode*, please refer to it
    to download all the source code and projects that you will need.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们需要一个名为 `example` 的应用程序，你可以在我的 GitHub 仓库中找到它。如果你跳过了[第2章](ch02.html "第2章。以独立模式运行
    WildFly")中关于“使用部署文件夹管理应用程序”的食谱，请参阅它以下载你需要的所有源代码和项目。
- en: 'To build the application, give the following commands:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建应用程序，请给出以下命令：
- en: '[PRE26]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Once done, copy the artifact `example.war` into your local `$WILDFLY_HOME` folder.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，将工件 `example.war` 复制到你的本地 `$WILDFLY_HOME` 文件夹。
- en: How to do it…
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: We will walk through the `deploy`, `status`, and `undeploy` commands separately
    to better explain their differences when dealing with the standalone and domain
    modes.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分别介绍 `deploy`、`status` 和 `undeploy` 命令，以更好地解释它们在处理独立模式和域模式时的区别。
- en: Deploy
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署
- en: 'Open a new terminal window and run the following commands:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口并运行以下命令：
- en: '[PRE27]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你以域模式运行 WildFly，调用方式如下：
- en: '[PRE28]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Status
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 状态
- en: 'If you need to check the deployment, you can execute the following code:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要检查部署，可以执行以下代码：
- en: '[PRE29]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If you are running WildFly in the domain mode, we first need to know the server
    group that the application belongs to. We can do that by issuing the following
    command:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你以域模式运行 WildFly，我们首先需要知道应用程序所属的服务器组。我们可以通过以下命令来实现：
- en: '[PRE30]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'If you already know the server group, you can check the deployment status directly
    to check the server it belongs to by invoking the following command:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经知道服务器组，你可以直接通过调用以下命令来检查部署状态，以查看它所属的服务器：
- en: '[PRE31]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Undeploy
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 卸载
- en: 'In case you need to undeploy your application, just hit the following command:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要卸载你的应用程序，只需按下以下命令：
- en: '[PRE32]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'In case you are running WildFly in the domain mode, the invocation is as follows:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你以域模式运行 WildFly，调用方式如下：
- en: '[PRE33]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: That's it!
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: How it works…
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Here, we are telling the `jboss-cli.sh` script to execute the command that we
    define within the `--command` parameter, and to return the result in the standard
    output.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们正在告诉 `jboss-cli.sh` 脚本执行我们在 `--command` 参数中定义的命令，并将结果输出到标准输出。
- en: Deploy
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署
- en: 'Use the CLI as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式使用 CLI：
- en: '[PRE34]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Within the domain mode, you will have the following command:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在域模式下，你将拥有以下命令：
- en: '[PRE35]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: By the way, you cannot manipulate the output.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，你不能操作输出。
- en: Status
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 状态
- en: 'Use the CLI as follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式使用 CLI：
- en: '[PRE36]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Undeploy
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 卸载
- en: 'Use the CLI as follows:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式使用 CLI：
- en: '[PRE37]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Within the domain mode, give the following command:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在域模式下，请执行以下命令：
- en: '[PRE38]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: By the way, you cannot manipulate the output.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，你无法操作输出。
- en: There's more…
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: WildFly provides one more API, which is the HTTP API. Let's try it with some
    network command-line tools, such as `curl`.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: WildFly 提供了一个额外的 API，即 HTTP API。让我们用一些网络命令行工具，如 `curl` 来试试。
- en: Curl deployment
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Curl 部署
- en: 'Let''s deploy using `curl`:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 `curl` 进行部署：
- en: 'With a running WildFly instance, open a new terminal window and execute the
    following command:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在运行 WildFly 实例的情况下，打开一个新的终端窗口并执行以下命令：
- en: '[PRE39]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Note
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The file `example.war` should be placed in the same folder from which you are
    invoking the command.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文件 `example.war` 应该放在你调用命令的同一文件夹中。
- en: 'Okay, it works. But we just uploaded our file, we haven''t deployed it yet.
    To deploy it, we need to grab the hash code that resulted from the `upload` command,
    and use it in the next one as follows:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，它工作了。但我们只是上传了文件，还没有部署。要部署，我们需要获取 `upload` 命令产生的哈希码，并在下一个命令中使用它，如下所示：
- en: '[PRE40]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: There you go! We have successfully deployed our interstellar web application.
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 看这里！我们已经成功部署了我们的星际网络应用程序。
- en: 'If you are running WildFly in the domain mode, the upload method is the same;
    thus, for effectively deploying the application, you can hit the following command:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你以域模式运行 WildFly，上传方法相同；因此，为了有效地部署应用程序，你可以执行以下命令：
- en: '[PRE41]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: That's it!
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样了！
- en: Status
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 状态
- en: 'To check the status of your deployment, execute the following command:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查部署状态，请执行以下命令：
- en: '[PRE42]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'If you are running WildFly in the domain mode, you can run the following code:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你以域模式运行 WildFly，你可以运行以下代码：
- en: '[PRE43]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: And that's all.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些了。
- en: Curl undeployment
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Curl 卸载
- en: 'Let''s undeploy using `curl`:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 `curl` 进行卸载：
- en: '[PRE44]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: That's it!
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样了！
