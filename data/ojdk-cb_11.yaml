- en: Chapter 11. Troubleshooting
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章。故障排除
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Navigating through the process workflow
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在流程工作流程中导航
- en: Submitting a defect to the OpenJDK bug systems
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向OpenJDK错误系统提交缺陷
- en: Creating a patch using NetBeans
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用NetBeans创建补丁
- en: Creating a code review
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建代码审查
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: OpenJDK's openness is its most valuable feature in our fast-paced world. We
    can be sure that it will never vanish and be forgotten when it is needed. If its
    support is discontinued, we can support it ourselves. We could fix bugs independently,
    since the code is open.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK的开放性是我们快节奏世界中最有价值的特性。我们可以确信，当需要时，它永远不会消失并被遗忘。如果其支持被终止，我们可以自己支持它。由于代码是开放的，我们可以独立修复错误。
- en: However, OpenJDK, as well as the Oracle Java implementation, still contains
    a lot of issues. Some of them are security issues and should be fixed as soon
    as possible. Some of the issues may be almost invisible or even valuable only
    for a virtually nonexistent percent of customers. They might never be fixed in
    production JDK, but everyone has an opportunity to try to do it for himself/herself.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，OpenJDK以及Oracle Java实现仍然存在许多问题。其中一些是安全问题，应尽快修复。一些问题可能几乎看不见，甚至只对几乎不存在的百分之一的客户有价值。它们可能在生产JDK中永远不会被修复，但每个人都有机会尝试自己修复。
- en: OpenJDK in the past used a Bugzilla bug tracker to track bugs. Bugzilla is a
    well-known, but morally outdated project, initially written in 1998 by Terry Weissman.
    It was open source from the beginning, and it is used even now by thousands of
    people around the world. It is very simple and easy to use.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 过去的OpenJDK使用Bugzilla错误跟踪器来跟踪错误。Bugzilla是一个知名但道德上过时的项目，最初由Terry Weissman于1998年编写。它从一开始就是开源的，现在全世界有成千上万的人在使用它。它非常简单且易于使用。
- en: However, some time ago, the OpenJDK foundation decided to switch from Bugzilla
    to JIRA, a proprietary but powerful bug tracking system mostly written in Java.
    JIRA provides support for different types of workflow, such as Scrum, Kanban,
    and custom Agile workflows, as well as incorporating all the Bugzilla features.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在一段时间前，OpenJDK基金会决定从Bugzilla切换到JIRA，这是一个私有但强大的错误跟踪系统，主要用Java编写。JIRA支持不同的工作流程类型，如Scrum、Kanban以及自定义敏捷工作流程，同时还包含了所有Bugzilla的功能。
- en: Sometimes there are opportunities to enlarge the OpenJDK functionality and create
    a fully-functioning JSR prototype to contribute to OpenJDK development with great
    benefits to your projects. Sometimes you need to switch to other implementations,
    such as GNU classpath, or even merge some solutions into your specific version.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有时有机会扩展OpenJDK的功能，并创建一个功能齐全的JSR原型，以对OpenJDK开发做出贡献，这对你的项目有很大好处。有时你需要切换到其他实现，如GNU类路径，甚至将一些解决方案合并到你的特定版本中。
- en: In this chapter, we will see how the process workflow is organized, what steps
    are needed to be followed, and how to cope with the community process. Also, we
    will see how to submit a bug, and create a patch on it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将了解流程工作流程是如何组织的，需要遵循哪些步骤，以及如何应对社区流程。我们还将了解如何提交错误，并在其上创建补丁。
- en: Navigating through the process workflow
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在流程工作流程中导航
- en: The knowledge of process workflows, and of how things are done in complex projects
    like OpenJDK, is critical for a developer. In this recipe, we will explain how
    things are done while contributing to OpenJDK. We will explain how the work is
    organized, and how the team co-operates.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于开发者来说，了解流程工作流程以及像OpenJDK这样的复杂项目中是如何做事的至关重要。在本食谱中，我们将解释在贡献OpenJDK时是如何做事的。我们将解释工作是如何组织的，团队是如何合作的。
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will need an Internet connection and a browser.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个互联网连接和一个浏览器。
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will go through the OpenJDK process workflow and see what to do to contribute
    to OpenJDK. There are a few initial steps to be followed before you start with
    the workflow:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将遍历OpenJDK流程工作流程，看看如何为OpenJDK做出贡献。在开始工作流程之前，你需要遵循一些初步步骤：
- en: Firstly, you need to become a contributor. To do so, you need to sign an Oracle
    Contributor Agreement, and e-mail it to Oracle.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你需要成为一名贡献者。为此，你需要签署一份Oracle贡献者协议，并将其电子邮件发送给Oracle。
- en: Note
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'You may find these links useful:'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可能会发现以下链接很有用：
- en: How to become a contributor at [http://openjdk.java.net/contribute/](http://openjdk.java.net/contribute/)
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如何成为[http://openjdk.java.net/contribute/](http://openjdk.java.net/contribute/)的贡献者
- en: Know what is discussed at [http://mail.openjdk.java.net/mailman/listinfo](http://mail.openjdk.java.net/mailman/listinfo)
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 了解在 [http://mail.openjdk.java.net/mailman/listinfo](http://mail.openjdk.java.net/mailman/listinfo)
    上讨论的内容。
- en: Then you need to find something interesting to work with.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你需要找到一些有趣的事情来工作。
- en: Now, you are free to discuss and submit patches using the JIRA bug tracking
    system.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以自由地使用 JIRA 缺陷跟踪系统讨论和提交补丁。
- en: 'Let''s suppose that you''ve found a bug:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你发现了一个缺陷：
- en: When the bug is found, check whether it's already in JIRA.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当发现缺陷时，检查它是否已经在 JIRA 中。
- en: Click on **Issues** and search for issues. You will see the following screen:![How
    to do it...](img/8405OT_11_01.jpg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **问题** 并搜索问题。你将看到以下屏幕：![如何操作...](img/8405OT_11_01.jpg)
- en: In the highlighted section, you can see a filter panel. Use it in combination
    with the keyword search. Also, notice the **Switch to Advanced** link in the right
    corner.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在高亮部分，你可以看到一个过滤器面板。结合关键字搜索使用它。注意右下角的 **切换到高级** 链接。
- en: If the bug is not present already in JIRA, create a JIRA issue.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果缺陷尚未在 JIRA 中存在，请创建一个 JIRA 问题。
- en: Tip
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: JIRA is a commonly used bug tracker tool. You can find how to add issues at
    [https://confluence.atlassian.com/display/JIRA/](https://confluence.atlassian.com/display/JIRA/).
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: JIRA 是一个常用的缺陷跟踪工具。你可以在 [https://confluence.atlassian.com/display/JIRA/](https://confluence.atlassian.com/display/JIRA/)
    找到如何添加问题的方法。
- en: If you don't know how to resolve the issue, this is the successful ending of
    your involvement here. The OpenJDK team will be grateful to know all usable information
    about this problem. If you have anything to add, you are welcome to post information
    in comments.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不知道如何解决这个问题，这是你参与的圆满结局。OpenJDK 团队将感激了解有关此问题的所有可用信息。如果你有任何补充，欢迎在评论中发布信息。
- en: However, if you feel that you can resolve the issue, comment on it and indicate
    that you are working on the solution. In some circumstances, you need to wait
    until the JIRA ticket is assigned to you. Individual workflows use different approaches
    in this regards.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然而，如果你觉得你可以解决这个问题，请在评论中说明，并指出你正在努力解决解决方案。在某些情况下，你可能需要等待 JIRA 工单分配给你。个人工作流程在这方面采用不同的方法。
- en: Then, resolve the solution and create the patch.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，解决解决方案并创建补丁。
- en: The patch creating process is described in the *Creating a patch using NetBeans*
    recipe in this chapter. you will also find some useful information about building,
    debugging, and editing OpenJDK code in [Chapter 8](ch08.html "Chapter 8. Hacking
    OpenJDK"), *Hacking OpenJDK*.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 补丁创建过程在本章的 *使用 NetBeans 创建补丁* 菜单中描述。你还可以在 [第 8 章](ch08.html "第 8 章。Hacking OpenJDK")
    中找到有关构建、调试和编辑 OpenJDK 代码的一些有用信息，*Hacking OpenJDK*。
- en: If you are a committer (for example, you have the commit right to the OpenJDK
    repository), you are free to create a code review using webrev (use information
    from [https://bitbucket.org/adoptopenjdk/betterrev](https://bitbucket.org/adoptopenjdk/betterrev)
    to learn how to create a code review). When it is approved, you may commit your
    changes to the repository and mark your issue as resolved.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你是一个提交者（例如，你有提交权限到 OpenJDK 仓库），你可以自由地使用 webrev 创建代码审查（使用 [https://bitbucket.org/adoptopenjdk/betterrev](https://bitbucket.org/adoptopenjdk/betterrev)
    中的信息来学习如何创建代码审查）。当它被批准后，你可以将你的更改提交到仓库，并将你的问题标记为已解决。
- en: If you are not a committer, you can also create a webrev review, but the commit
    process differs slightly. You might push your code changes to the Bitbucket repository
    along with a `pull` request. It is described in detail in the *Creating a code
    review* recipe. Read more about the OpenJDK testing process in [Chapter 9](ch09.html
    "Chapter 9. Testing OpenJDK"), *Testing OpenJDK*.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不是提交者，你也可以创建一个 webrev 审查，但提交过程略有不同。你可能需要将你的代码更改推送到 Bitbucket 仓库，并附带一个 `pull`
    请求。这已经在 *创建代码审查* 菜单中详细描述。更多关于 OpenJDK 测试过程的信息，请参阅 [第 9 章](ch09.html "第 9 章。测试
    OpenJDK")，*测试 OpenJDK*。
- en: How it works…
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: OpenJDK has an established workflow, which can differ from one project to another.
    In all cases, though there are rules of teamwork, one should follow them in order
    to make the work productive.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 有一个既定的工作流程，这可能会因项目而异。尽管所有情况下都有团队合作规则，但为了使工作富有成效，每个人都应该遵循这些规则。
- en: Under the hood of this process, there are other team members whose function
    is to review and test the changes.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程的底层，还有其他团队成员，他们的职能是审查和测试这些更改。
- en: Submitting a defect to the OpenJDK bug systems
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向 OpenJDK 缺陷系统提交缺陷
- en: This recipe will show you how to submit a defect to OpenJDK bug systems. This
    bug system is used by people who do not have developer access to OpenJDK. For
    OpenJDK developers, there is JIRA.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南将向您展示如何向 OpenJDK 错误系统提交缺陷。此错误系统供没有 OpenJDK 开发者访问权限的人使用。对于 OpenJDK 开发者，有 JIRA。
- en: How to do it...
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: We will consider the necessary steps to submit a defect to OpenJDK.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将考虑提交缺陷到 OpenJDK 的必要步骤。
- en: 'First, we will describe some prerequisites to fill a bug report:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将描述填写错误报告的一些先决条件：
- en: First, do a quick search for bugs. It is possible that a similar or even identical
    bug has already been created. Even if you have something more to say on the subject,
    please do it in the existing topic without creating a new one.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，快速搜索错误。可能已经创建了类似甚至相同的错误。即使您对这个主题有更多要说的，也请在现有主题中发表，而不要创建新的主题。
- en: Then, think about the defect's reproducibility. There is a need to describe
    in detail how to reproduce your defect and cases in which it can and cannot be
    reproduced.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，考虑缺陷的可重现性。需要详细描述如何重现您的缺陷以及可以和不可以重现的情况。
- en: Also, you can make and add logs, traces, and other debug information.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，您还可以创建并添加日志、跟踪和其他调试信息。
- en: Tip
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Please include the fullest possible logs, without cutouts. Even one string in
    the log may be critical.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请包括尽可能完整的日志，不要有删减。日志中的任何字符串都可能至关重要。
- en: Also, you may include screenshots along with your logs, especially when you
    are describing an UI issue.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，您还可以将截图与日志一起包含，尤其是在您描述 UI 问题的时候。
- en: Try to include as much system information as possible. For example, for the
    *Sumatra* project, even your graphics card driver version may be helpful.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尽可能多地包含系统信息。例如，对于 *Sumatra* 项目，甚至您的显卡驱动程序版本也可能有帮助。
- en: 'If we need to report an issue without referring to code pieces to describe
    it generally and not specifically, we can fill the standard bug report as shown
    here:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要报告一个问题，而不需要引用代码片段来描述它，而是一般性地描述，不具体说明，我们可以填写标准错误报告，如下所示：
- en: Fill the fields as shown in the following screenshot:![How to do it...](img/8405OT_11_02.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下截图所示填写字段：![如何操作...](img/8405OT_11_02.jpg)
- en: Then click on **Continue**.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击**继续**。
- en: 'You will then be required to provide some information to receive the feedback
    from the team:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要提供一些信息以获得团队的反馈：
- en: '![How to do it...](img/8405OT_11_03.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/8405OT_11_03.jpg)'
- en: How it works…
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The OpenJDK project has a bug report system for non-developers to which you
    can submit your changes where it's convenient. However, it has a JIRA bug tracker,
    which is used by developers to work in more complex ways with various bugs.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 项目有一个非开发者错误报告系统，您可以在其中提交您的更改，方便地提交更改。然而，它有一个 JIRA 错误跟踪器，开发者使用它以更复杂的方式处理各种错误。
- en: Creating a patch using NetBeans
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 NetBeans 创建补丁
- en: This section will show you how to create a patch of the OpenJDK project using
    NetBeans.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将向您展示如何使用 NetBeans 创建 OpenJDK 项目的补丁。
- en: Getting ready
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need a configured development environment. It is preferable that you
    use NetBeans since NetBeans is a standard tool for developing and debugging OpenJDK.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个配置好的开发环境。最好使用 NetBeans，因为 NetBeans 是开发 OpenJDK 和调试的标准工具。
- en: How to do it...
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will do a simple patch creation with Mercurial and NetBeans by following
    these steps:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过以下步骤使用 Mercurial 和 NetBeans 进行简单的补丁创建：
- en: Open the OpenJDK project with NetBeans.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 NetBeans 打开 OpenJDK 项目。
- en: Make some changes in the project code as shown:![How to do it...](img/8405OT_11_04.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下截图所示在项目代码中进行一些更改：![如何操作...](img/8405OT_11_04.jpg)
- en: Then, follow the chain of context menus, as shown in the preceding screenshot.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，按照前面截图所示的上下文菜单链进行操作。
- en: Click on the **OK** button.![How to do it...](img/8405OT_11_05.jpg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮。![如何操作...](img/8405OT_11_05.jpg)
- en: Your patch will be saved to the specified directory. Later, you can apply patches
    using the **Apply Diff Patch** item in the Mercurial context menu.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的补丁将保存到指定的目录。稍后，您可以使用 Mercurial 上下文菜单中的 **应用差异补丁** 项应用补丁。
- en: How it works
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的
- en: NetBeans calls a program that exports a diff (your uncommitted changes versus
    the head revision in the repository) to a file that can be read and applied when
    needed.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: NetBeans 调用一个程序，该程序将差异（您的未提交更改与存储库中的最新版本）导出到一个文件，可以在需要时读取和应用。
- en: See also...
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅...
- en: 'Also, diffs between different divisions can also be exported. To do that, simply
    click on the highlighted item:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，不同分支之间的差异也可以导出。要这样做，只需单击突出显示的项目：
- en: '![See also...](img/8405OT_11_06.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![另请参阅...](img/8405OT_11_06.jpg)'
- en: Creating a code review
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建代码审查
- en: OpenJDK uses webrev as the code review tool. The process of creating a code
    review and handling lies on the shoulders of the AdoptOpenJDK community, which
    developed a web tool called **Betterrev**. Review Board along with the Mercurial
    plugin can be used as well. It automatically generates code reviews, synchronizes
    with Oracle repository, and performs other useful tasks.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJDK 使用 webrev 作为代码审查工具。创建代码审查和处理过程由 AdoptOpenJDK 社区承担，该社区开发了一个名为 **Betterrev**
    的网络工具。也可以使用 Review Board 以及 Mercurial 插件。它自动生成代码审查，与 Oracle 仓库同步，并执行其他有用任务。
- en: Getting ready
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will need a computer capable of building OpenJDK and which can handle a large
    amount of code. Also, we will need a development environment installed, as described
    in [Chapter 8](ch08.html "Chapter 8. Hacking OpenJDK"), *Hacking OpenJDK*. We
    will also need Internet access.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个能够构建 OpenJDK 且能够处理大量代码的计算机。此外，我们还需要安装一个开发环境，如[第8章](ch08.html "第8章。黑客OpenJDK")中所述的*黑客OpenJDK*，以及互联网接入。
- en: How to do it...
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will create a code review using the Betterrev tool, by following the given
    steps:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过遵循给定的步骤使用 Betterrev 工具创建代码审查：
- en: First, let's clone a repository from Bitbucket.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们从 Bitbucket 克隆一个仓库。
- en: Go to the Betterrev Bitbucket at [https://bitbucket.org/adoptopenjdk/betterrev/src](https://bitbucket.org/adoptopenjdk/betterrev/src):![How
    to do it...](img/8405OT_11_07.jpg)
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 Betterrev Bitbucket 网址 [https://bitbucket.org/adoptopenjdk/betterrev/src](https://bitbucket.org/adoptopenjdk/betterrev/src)：![如何操作...](img/8405OT_11_07.jpg)
- en: Fork it, using the highlighted button:![How to do it...](img/8405OT_11_08.jpg)
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用高亮按钮进行Fork操作：![如何操作...](img/8405OT_11_08.jpg)
- en: Specify the repository name in the **Name** field, and add a description if
    needed.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **名称** 字段中指定仓库名称，如有需要，添加描述。
- en: Check the **This is a private repository** checkbox if you want to make your
    repository private.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想使您的仓库私有，请勾选 **这是一个私有仓库** 复选框。
- en: Click on the **Fork repository** button.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Fork 仓库** 按钮。
- en: You will see the following screen for a while. It will take some time, but don't
    worry, all is going well.![How to do it...](img/8405OT_11_09.jpg)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到以下界面一段时间。这需要一些时间，但请放心，一切都在顺利进行。![如何操作...](img/8405OT_11_09.jpg)
- en: Make changes that has to be reviewed in the code.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对代码中需要审查的更改进行修改。
- en: Commit them to your local repository.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将它们提交到您的本地仓库。
- en: Perform a pull request as shown:![How to do it...](img/8405OT_11_10.jpg)
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照所示进行拉取请求：![如何操作...](img/8405OT_11_10.jpg)
- en: Betterrev will automatically generate a review for your issue.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Betterrev 将自动为您的问题生成一个审查。
