- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: Chapter 1
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章
- en: '**Answer 1**: Spring Boot is Java-based web application framework that is based
    on Spring. With Spring Boot you can develop stand-alone web applications with
    embedded application server.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：Spring Boot是基于Java的Web应用程序框架，基于Spring。使用Spring Boot，您可以开发独立的Web应用程序，带有嵌入式应用服务器。
- en: '**Answer 2**: Eclipse is open source **integrated development environment**
    (**IDE**) and it is mostly used for Java programming, but it supports multiple
    other programming languages as well.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：Eclipse是开源的**集成开发环境**（**IDE**），主要用于Java编程，但也支持多种其他编程语言。
- en: '**Answer 3**: Maven is open source software project management tool. Maven
    can manage builds, documentation, testing, and more in the software development
    project.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：Maven是开源软件项目管理工具。Maven可以管理软件开发项目中的构建、文档、测试等。
- en: '**Answer 4**: The easiest way to start a new Spring Boot project is to create
    it with Spring Initializr web page. That creates a skeleton for your project with
    the modules that you need.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 答案4：开始一个新的Spring Boot项目最简单的方法是在Spring Initializr网页上创建它。这将为您的项目创建一个包含所需模块的框架。
- en: '**Answer 5**: If you are using the Eclipse IDE you just activate you main class
    and press Run button. You can also use Maven command **`mvn spring-boot:run`**
    to run an application.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 答案5：如果您使用Eclipse IDE，只需激活主类并点击运行按钮。您也可以使用Maven命令**`mvn spring-boot:run`**来运行应用程序。
- en: '**Answer 6**: Spring Boot starter package provides logging features for you.
    You can define the level of logging in the `application.properties` settings file.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 答案6：Spring Boot starter包为您提供日志记录功能。您可以在`application.properties`设置文件中定义日志记录级别。
- en: '**Answer 7**: The error and log messages can be seen in the Eclipse IDE console
    after you run the application.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 答案7：在运行应用程序后，您可以在Eclipse IDE控制台中看到错误和日志消息。
- en: Chapter 2
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章
- en: '**Answer 1**: ORM is a technique that allows you to fetch and manipulate from
    a database using an object-oriented programming paradigm. JPA provides object-relational
    mapping for Java developers. Hibernate is Java-based JPA implementation.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：ORM是一种技术，允许您使用面向对象的编程范式从数据库中提取和操作数据。JPA为Java开发人员提供了对象关系映射。Hibernate是基于Java的JPA实现。
- en: '**Answer 2**: Entity class is just standard java class that is annotated with
    the `@Entity` annotation. Inside the class you have to implement constructors,
    fields, getters and setters. The field(s) that will be the unique id is annotated
    with the `@Id` annotation.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：实体类只是一个标准的带有`@Entity`注解的Java类。在类内部，您必须实现构造函数、字段、getter和setter。将作为唯一id的字段用`@Id`注解标注。
- en: '**Answer 3**: You have to create a new interface that extends Spring Data `CrudRepository`
    interface. In the type arguments you define the entity and the type of the `id`
    field, for example, `<Car, Long>`.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：您必须创建一个新的接口，该接口扩展Spring Data的`CrudRepository`接口。在类型参数中，您定义实体和`id`字段的类型，例如，`<Car,
    Long>`。
- en: '**Answer 4**: `CrudRepository` provides all CRUD operations to your entity.
    You can create, read, update, and delete your entities using the `CrudRepository`.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 答案4：`CrudRepository`为您的实体提供了所有CRUD操作。您可以使用`CrudRepository`创建、读取、更新和删除实体。
- en: '**Answer 5**: You have to create entity classes and link the entities using
    the `@OneToMany` and the `@ManyToOne` annotations.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 答案5：您必须创建实体类并使用`@OneToMany`和`@ManyToOne`注解链接实体。
- en: '**Answer 6**: You can add demo data in your main application class using `CommandLineRunner`.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 答案6：您可以在主应用程序类中使用`CommandLineRunner`添加演示数据。
- en: '**Answer 7**: Define the endpoint for the H2 console in your `application.properties`
    file and enable it. Then you can access the H2 console by navigating to the defined
    endpoint with a web browser.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 答案7：在您的`application.properties`文件中定义H2控制台的端点并启用它。然后您可以通过浏览器访问定义的端点来访问H2控制台。
- en: '**Answer 8**: You have to add MariaDB dependency to the `pom.xml` file and
    define the database connection settings in the `application.properties` file.
    Remove the H2 database dependency from the `pom.xml` file, if you have used that.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 答案8：您必须在`pom.xml`文件中添加MariaDB依赖，并在`application.properties`文件中定义数据库连接设置。如果您使用了H2数据库依赖，还需要从`pom.xml`文件中删除它。
- en: Chapter 3
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章
- en: '**Answer 1**: REST is an architectural style for creating web services and
    it defines a set of constraints.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：REST是一种用于创建Web服务的架构风格，并定义了一组约束。
- en: '**Answer 2**: The easiest way to create RESTful web service with Spring Boot
    is to use Spring Data REST starter package. By default, the Spring Data REST finds
    all public repositories and creates automatically RESTful Web Services for your
    entities.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：使用Spring Data REST starter包是使用Spring Boot创建RESTful web服务的最简单方法。默认情况下，Spring
    Data REST会找到所有公共存储库，并为您的实体自动创建RESTful Web服务。
- en: '**Answer 3**: By sending a `GET` request to the endpoint of the entity. For
    example, if you have entity class called `Car` the Spring Data REST creates the
    endpoint called `/cars` that can be used to fetch all cars.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：通过向实体的端点发送`GET`请求。例如，如果您有一个名为`Car`的实体类，Spring Data REST将创建一个名为`/cars`的端点，用于获取所有汽车。
- en: '**Answer 4**: By sending a `DELETE` request to the endpoint of the individual
    entity item. For example, `/cars/1` deletes an car with id `1`.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 答案4：通过向单个实体项目的端点发送`DELETE`请求。例如，`/cars/1`删除id为`1`的汽车。
- en: '**Answer 5**: By sending a `POST` request to the endpoint of the entity. The
    header must contain the `Content-Type` field with the value `application/json`
    and the new item will be embedded in the request body.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 答案5：通过向实体的端点发送`POST`请求。标头必须包含`Content-Type`字段，值为`application/json`，新项目将嵌入在请求体中。
- en: '**Answer 6**: By sending a `PATCH` request to the endpoint of the entity. The
    header must contain the `Content-Type` field with the value `application/json` and
    the updated item will be embedded in the request body.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 答案6：通过向实体的端点发送`PATCH`请求。标头必须包含`Content-Type`字段，值为`application/json`，更新的项目将嵌入在请求体中。
- en: '**Answer 7**: You have to annotate your repository using the `@RepositoryRestResource`
    annotation. The query parameters  are annotated using the `@Param` annotation.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案7**：您必须使用`@RepositoryRestResource`注解注释您的存储库。使用`@Param`注解注释查询参数。'
- en: Chapter 4
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章
- en: '**Answer 1**: Spring Security provides security services for Java-based web
    applications.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案1**：Spring Security为基于Java的Web应用程序提供安全服务。'
- en: '**Answer 2**: You have to add Spring Security started package dependency to
    your `pom.xml` file. You can configure Spring Security by creating a security
    configuration class.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案2**：您必须将Spring Security启动包依赖添加到您的`pom.xml`文件中。您可以通过创建安全配置类来配置Spring Security。'
- en: '**Answer 3**: **JWT** (**JSON Web Token**) is a compact way to implement authentication
    in modern web applications. The size of the token is small and therefore it can
    be sent in the URL, in the `POST` parameter or inside the header.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案3**：**JWT**（**JSON Web Token**）是在现代Web应用程序中实现身份验证的一种紧凑方式。令牌的大小很小，因此可以在URL中、`POST`参数中或标头中发送。'
- en: '**Answer 4**: You can use the Java JWT library that is the JSON web Token library
    for Java. The authentication service class adds and reads the token. The filter
    classes handles the login and authentication process.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案4**：您可以使用Java JWT库，这是Java的JSON Web Token库。认证服务类添加和读取令牌。过滤器类处理登录和认证过程。'
- en: '**Answer 5**: You have to add Spring Boot test starter package to your `pom.xml`
    file. Spring Boot test starter package provides a lot of nice testing utilities,
    for example JUnit, AssertJ, and Mockito. When using the JUnit, the basic test
    classes are annotated with the `@SpringBootTest` annotation and the test methods
    should start with `@Test` annotation.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案5**：您必须将Spring Boot测试启动器包添加到您的`pom.xml`文件中。Spring Boot测试启动器包提供了许多很好的测试工具，例如JUnit，AssertJ和Mockito。使用JUnit时，基本测试类使用`@SpringBootTest`注解，并且测试方法应该以`@Test`注解开头。'
- en: '**Answer 6**: The test cases can be easily executed with the Eclipse IDE by
    running the test classes (Run | JUnit test). The test results can be seen in the
    JUnit tab.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案6**：可以通过在Eclipse IDE中运行测试类（Run | JUnit test）轻松执行测试用例。测试结果可以在JUnit选项卡中看到。'
- en: Chapter 5
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章
- en: '**Answer 1**: Node.js is an open source JavaScript-based server side environment.
    Npm is a package manager for JavaScript.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案1**：Node.js是一个基于JavaScript的开源服务器端环境。Npm是JavaScript的包管理器。'
- en: '**Answer 2**: You can find the installation packages and instructions for multiple
    operating systems from [https://nodejs.org/en/download](https://nodejs.org/en/download).'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案2**：您可以从[https://nodejs.org/en/download](https://nodejs.org/en/download)找到多个操作系统的安装包和说明。'
- en: '**Answer 3**: **Visual Studio Code** (**VSCode**) is an open source code editor
    for multiple programming languages.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案3**：**Visual Studio Code**（**VSCode**）是一个面向多种编程语言的开源代码编辑器。'
- en: '**Answer 4**: You can find the installation packages and instructions for multiple
    operating systems from [https://code.visualstudio.com](https://code.visualstudio.com).'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案4**：您可以从[https://code.visualstudio.com](https://code.visualstudio.com)找到多个操作系统的安装包和说明。'
- en: '**Answer 5**: You have to install `create-react-app` globally using the npm.
    Then you create an app using the following command **`create-react-app projectname`**.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案5**：您必须使用npm全局安装`create-react-app`。然后使用以下命令创建一个应用程序**`create-react-app
    projectname`**。'
- en: '**Answer 6**: You can run the app using the following command `npm start` or
    **`yarn start`**.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案6**：您可以使用以下命令运行应用程序`npm start`或**`yarn start`**。'
- en: '**Answer 7**: You can start by modifying the `App.js` file and when you save
    the modification, you can see the changes immediately in the web browser.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案7**：您可以通过修改`App.js`文件开始，当您保存修改时，可以立即在Web浏览器中看到更改。'
- en: Chapter 6
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章
- en: '**Answer 1**: The components are the basic building blocks of the React apps.
    The React component can be created using a JavaScript function or ES6 class.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案1**：组件是React应用程序的基本构建块。React组件可以使用JavaScript函数或ES6类创建。'
- en: '**Answer 2**: The props and state are the input data for rendering the component.
    They are JavaScript objects and the component is re-rendered when the props or
    the state are changing.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案2**：props和state是呈现组件的输入数据。它们是JavaScript对象，当props或state发生变化时，组件会重新呈现。'
- en: '**Answer 3**: The data flow is going from the parent component to child.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案3**：数据流从父组件到子组件。'
- en: '**Answer 4**: The components that have only props are called stateless components.
    The components that have both the props and the state are called stateful components.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案4**：只有props的组件称为无状态组件。既有props又有状态的组件称为有状态组件。'
- en: '**Answer 5**: JSX is the syntax extension for JavaScript and it is recommended
    to use with React.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案5**：JSX是JavaScript的语法扩展，建议与React一起使用。'
- en: '**Answer 6**: The component life cycle methods are executed at the certain
    phases of the component''s life cycle.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案6**：组件生命周期方法在组件生命周期的特定阶段执行。'
- en: '**Answer 7**: It is similar to handling DOM element events. The difference
    in React is that event naming uses camelCase naming convention for example, `onClick`
    or `onSubmit` .'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案7**：处理DOM元素事件类似。React中的区别在于事件命名使用驼峰命名约定，例如`onClick`或`onSubmit`。'
- en: '**Answer 8**: The common case is that we want to invoke a JavaScript function
    that has access to form data after the form submission. Therefore we have to disable
    default behavior using `preventDefault()` function. You can use input field''s
    `onChange` event handler to save the values from a input fields to the state.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案8**：通常情况下，我们希望在表单提交后调用具有对表单数据的访问权限的JavaScript函数。因此，我们必须使用`preventDefault()`函数禁用默认行为。您可以使用输入字段的`onChange`事件处理程序将输入字段的值保存到状态中。'
- en: Chapter 7
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章
- en: '**Answer 1**: A promise is an object the represents the result of an asynchronous
    operation. The use of promises simplifies the code when doing asynchronous calls.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案1**：Promise是表示异步操作结果的对象。使用Promise在进行异步调用时简化了代码。'
- en: '**Answer 2**: The Fetch API provides `fetch()` method that you can use to make
    asynchronous calls using the JavaScript.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：Fetch API提供了`fetch()`方法，您可以使用它来使用JavaScript进行异步调用。
- en: '**Answer 3**: The REST API  `fetch()` call is recommended to do inside the
    `componentDidMount()` life cycle method that is invoked when the component has
    been mounted.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：REST API的`fetch()`调用建议在`componentDidMount()`生命周期方法中执行，该方法在组件挂载后被调用。
- en: '**Answer 4**: You can access the response data using the promises with the
    `fetch()` method. The data from the response is saved to the state and the component
    is re-rendered when the state has changed.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 答案4：您可以使用`fetch()`方法的promises访问响应数据。响应中的数据保存到状态中，当状态改变时组件重新渲染。
- en: Chapter 8
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章
- en: '**Answer 1**: You can find the React component from multiple sources for example,
    [https://js.coach/](https://js.coach/) or [https://github.com/brillout/awesome-react-components](https://github.com/brillout/awesome-react-components).'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：您可以从多个来源找到React组件，例如，[https://js.coach/](https://js.coach/)或[https://github.com/brillout/awesome-react-components](https://github.com/brillout/awesome-react-components)。
- en: '**Answer 2**: You can install React components using the npm or yarn package
    managers. When using npm, here is the command we use, **`npm install <componentname>`**.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：您可以使用npm或yarn软件包管理器安装React组件。使用npm时，我们使用以下命令**`npm install <componentname>`**。
- en: '**Answer 3**: You have to install React Table component. After the installation
    you can use the `ReactTable` component in the `render()` method. You have to define
    the data and the columns using the `ReactTable` props. The data can be an object
    or an array.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：您必须安装React Table组件。安装后，您可以在`render()`方法中使用`ReactTable`组件。您必须使用`ReactTable`的props定义数据和列。数据可以是对象或数组。
- en: '**Answer 4**: One way to create modal forms in React app is to use React Skylight
    component ([https://marcio.github.io/react-skylight/](https://marcio.github.io/react-skylight/)).'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 答案4：在React应用中创建模态表单的一种方法是使用React Skylight组件（[https://marcio.github.io/react-skylight/](https://marcio.github.io/react-skylight/)）。
- en: '**Answer 5**: You have to install Material-UI component library using the following
    command `npm install @material-ui/core`. After the library installation you can
    start to use components. The documentation of the different components can be
    found from [https://material-ui.com](https://material-ui.com).'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 答案5：您必须使用以下命令`npm install @material-ui/core`安装Material-UI组件库。安装库后，您可以开始使用组件。不同组件的文档可以在[https://material-ui.com](https://material-ui.com)找到。
- en: '**Answer 6**: Routing can be implemented using the React Router component ([https://github.com/ReactTraining/react-router](https://github.com/ReactTraining/react-router)).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 答案6：可以使用React Router组件（[https://github.com/ReactTraining/react-router](https://github.com/ReactTraining/react-router)）来实现路由。
- en: Chapter 9
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章
- en: '**Answer 1**: With the mock-up, it is much easier to discuss needs with the
    client before you start to write any actual code. Changes to the mock-up are really
    easy and fast to do, compared to modifications with real frontend source code.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：通过模拟，与客户讨论需求要比在开始编写任何实际代码之前更容易。与真实前端源代码相比，对模拟的修改非常容易和快速。
- en: '**Answer 2**: There is lot of suitable applications available to do mock-ups
    easily. You can also use paper and pencil to create mock-up.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：有很多适合的应用程序可以轻松进行模拟。您也可以使用纸和铅笔来创建模拟。
- en: '**Answer 3**: You can modify the security configuration class to allow access
    to all endpoints without authentication.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：您可以修改安全配置类以允许在没有身份验证的情况下访问所有端点。
- en: Chapter 10
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章
- en: '**Answer 1**: First you have to call REST API using the  `fetch()` method.
    Then, you can access the response data using the promises with the `fetch()` method.
    The data from the response is saved to the state and the component is re-rendered
    when the state has changed.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：首先，您必须使用`fetch()`方法调用REST API。然后，您可以使用`fetch()`方法的promises访问响应数据。响应中的数据保存到状态中，当状态改变时组件重新渲染。
- en: '**Answer 2**: You have to send a `DELETE` method request using the `fetch()`
    method. The endpoint of the call is the link to the item that you want to delete.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：您必须使用`fetch()`方法发送`DELETE`方法请求。调用的端点是您想要删除的项目的链接。
- en: '**Answer 3**: You have to send a `POST` method request using the `fetch()` method
    to the entity endpoint. The added item should be embedded in the body and you
    have to add `Content-Type` header with `application/json` value.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：您必须使用`fetch()`方法发送`POST`方法请求到实体端点。添加的项目应嵌入在请求体中，并且您必须使用`Content-Type`头和`application/json`值。
- en: '**Answer 4**: You have to send a `PATCH` method request using the `fetch()` method. 
    The endpoint of the call is the link to the item that you want to update. The
    updated item should be embedded in the body and you have to add `Content-Type`
    header with `application/json` value.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 答案4：您必须使用`fetch()`方法发送`PATCH`方法请求。调用的端点是您想要更新的项目的链接。更新的项目应嵌入在请求体中，并且您必须使用`Content-Type`头和`application/json`值。
- en: '**Answer 5**: You can use some third-party React component to show toast messages
    like React Toastify.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 答案5：您可以使用一些第三方React组件来显示类似React Toastify的提示消息。
- en: '**Answer 6**: You can use some 3rd party React component to export data to
    CSV file like React CSV.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 答案6：您可以使用一些第三方React组件将数据导出到CSV文件，例如React CSV。
- en: Chapter 11
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章
- en: '**Answer 1**: Material-UI is the component library for React and it implement
    the Google''s Material Design.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：Material-UI是用于React的组件库，它实现了Google的Material Design。
- en: '**Answer 2**: First you have to install Material-UI library using the following
    command `npm install @material-ui/core`. Then you can start to use component from
    the library. The documentation of the different components can be found from [https://material-ui.com/](https://material-ui.com/).'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：首先，您必须使用以下命令安装Material-UI库`npm install @material-ui/core`。然后，您可以开始使用库中的组件。不同组件的文档可以在[https://material-ui.com/](https://material-ui.com/)找到。
- en: '**Answer 3**: You can remove a component using the following npm command **`npm
    remove <componentname>`**.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：您可以使用以下npm命令删除组件**`npm remove <componentname>`**。
- en: Chapter 12
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章
- en: '**Answer 1**: Jest is a test library for JavaScript and it is developed by
    Facebook.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：Jest是Facebook开发的JavaScript测试库。
- en: '**Answer 2**: Create a test file using the `.test.js` extension. Implement
    your test cases inside the file and you can run the tests using the following
    command **`npm test`**.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：使用`.test.js`扩展名创建一个测试文件。在文件中实现您的测试用例，您可以使用以下命令运行测试**`npm test`**。
- en: '**Answer 3**: For the snapshot testing you have to install `react-test-render`
    package and you have to import `renderer` to you test file. Implement your snapshot
    test cases inside the file and you can run the tests using the following command **`npm
    test`**.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：对于快照测试，您必须安装`react-test-render`包，并将`renderer`导入到您的测试文件中。在文件中实现您的快照测试用例，您可以使用以下命令运行测试**`npm
    test`**。
- en: '**Answer 4**: Enzyme is a JavaScript library for testing the React component''s
    output.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 答案4：Enzyme是一个用于测试React组件输出的JavaScript库。
- en: '**Answer 5**: Using the following npm command **`npm install enzyme enzyme-adapter-react-16
    --save-dev`**.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 答案5：使用以下npm命令 **`npm install enzyme enzyme-adapter-react-16 --save-dev`**。
- en: '**Answer 6**: You have to import `Enzyme` and `Adapter` components to your
    test file. Then you can create you test cases to render a component. With the
    Enzyme, you can use Jest for assertions.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 答案6：您必须将`Enzyme`和`Adapter`组件导入到您的测试文件中。然后，您可以创建测试用例来呈现一个组件。使用Enzyme，您可以使用Jest进行断言。
- en: '**Answer 7**: Enzyme provides the `simulate` method that can be used to test
    events.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 答案7：Enzyme提供了`simulate`方法，可用于测试事件。
- en: Chapter 13
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章
- en: '**Answer 1**: You have to create a new component that renders input fields
    for the username and the password. The component contains also a button that calls
    `/login` endpoint when the button is pressed.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：您必须创建一个新的组件，用于呈现用户名和密码的输入字段。该组件还包含一个按钮，当按钮被按下时调用`/login`端点。
- en: '**Answer 2**: The call from the login component is made using the `POST` method
    and an user object is embedded in the body. If the authentication is succeeded,
    the backend sends the token back in the Authorization header.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：登录组件的调用是使用`POST`方法进行的，并且用户对象嵌入在主体中。如果身份验证成功，后端将在授权标头中发送令牌回来。
- en: '**Answer 3**: The token can be saved to session storage using the `sessionStorage.setItem()`
    method.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：可以使用`sessionStorage.setItem()`方法将令牌保存到会话存储中。
- en: '**Answer 4**: The token have to be included to the request''s `Authorization`
    header.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 答案4：令牌必须包含在请求的`Authorization`标头中。
- en: Chapter 14
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章
- en: '**Answer 1**: You can create an executable JAR file by using the following
    Maven command **`mvn clean install`**.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：您可以使用以下Maven命令创建可执行的JAR文件 **`mvn clean install`**。
- en: '**Answer 2**: The easiest way to deploy Spring Boot application is to push
    your application source code to the GitHub and use GitHub link from the Heroku.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：部署Spring Boot应用程序的最简单方法是将应用程序源代码推送到GitHub，并从Heroku使用GitHub链接。
- en: '**Answer 3**: The easiest way to deploy the React app to Heroku is to use the
    Heroku Buildpack for create-react-app ([https://github.com/mars/create-react-app-buildpack](https://github.com/mars/create-react-app-buildpack)).'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：将React应用程序部署到Heroku的最简单方法是使用Heroku Buildpack for create-react-app ([https://github.com/mars/create-react-app-buildpack](https://github.com/mars/create-react-app-buildpack))。
- en: '**Answer 4**: Docker is a container platform that makes software development,
    deployment, and shipping easier. Containers are lightweight and executable software
    packages that include everything that is needed to run software.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 答案4：Docker是一个容器平台，使软件开发、部署和交付更容易。容器是轻量级和可执行的软件包，包括运行软件所需的一切。
- en: '**Answer 5**: The Spring Boot application is just an executable JAR file that
    can be executed with Java. Therefore, you can create Docker container for Spring
    Boot application similar way than you create for any Java JAR application.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 答案5：Spring Boot应用程序只是一个可执行的JAR文件，可以使用Java执行。因此，您可以为Spring Boot应用程序创建Docker容器，方式与为任何Java
    JAR应用程序创建方式相似。
- en: '**Answer 6**: You can pull the latest MariaDB container from the Docker Hub
    using the following Docker command **`docker pull mariadb:latest`**.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 答案6：您可以使用以下Docker命令从Docker Hub拉取最新的MariaDB容器**`docker pull mariadb:latest`**。
- en: Chapter 15
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第15章
- en: '**Answer 1**: It makes code more readable and easier to maintain. It also makes
    team work much easier because everyone are using the same structure in the coding.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 答案1：这使得代码更易读和更易于维护。它还使团队合作更容易，因为每个人在编码中都使用相同的结构。
- en: '**Answer 2**: It makes code more readable and easier to maintain. The testing
    of the code is easier.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 答案2：这使得代码更易读和更易于维护。代码的测试更容易。
- en: '**Answer 3**: It makes code more readable and easier to maintain. It also makes
    team work much easier because everyone are using the same naming convention in
    the coding.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 答案3：这使得代码更易读和更易于维护。它还使团队合作更容易，因为每个人在编码中都使用相同的命名约定。
