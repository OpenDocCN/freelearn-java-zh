- en: Chapter 1. What's New in Java EE 7
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. Java EE 7 的新特性
- en: Because of their use, distributed applications require some non functional services
    such as remote access, security, transaction management, concurrency, and robustness,
    among others. Unless you have APIs that offer these types of services, you need
    to implement them all from scratch and therefore, increase the number of bugs,
    reduce software quality, and increase production costs and time. The Java EE platform
    was set up to save the developer from these concerns. It is made up of a set of
    APIs that facilitate the development and deployment of distributed, robust, scalable,
    and interoperable applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其使用，分布式应用程序需要一些非功能性服务，例如远程访问、安全性、事务管理、并发性和健壮性等。除非你有提供这些类型服务的 API，否则你需要从头开始实现它们，因此会增加错误数量，降低软件质量，并增加生产成本和时间。Java
    EE 平台旨在让开发者摆脱这些担忧。它由一组促进分布式、健壮、可扩展和互操作应用程序的开发和部署的 API 组成。
- en: 'Since its first release in 1999, the Java EE platform has evolved over time
    by offering a newer, richer, and simpler version than the previous one. In order
    for you to have an overview of the improvements in Java EE 7, this chapter addresses
    the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 自 1999 年首次发布以来，Java EE 平台通过提供比之前版本更新、更丰富、更简单的版本而不断发展。为了让你对 Java EE 7 的改进有一个概述，本章讨论以下主题：
- en: A brief history of Java EE
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java EE 简史
- en: The main goals of Java EE 7
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java EE 7 的主要目标
- en: Novelties of Java EE 7
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java EE 7 的创新之处
- en: A brief history of Java EE
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java EE 简史
- en: Formerly called J2EE, the first version of Java EE platform was officially released
    in December 1999 with 10 specifications. Among these specifications, there were
    Servlets and JavaServer Pages (JSP) for data presentation, **Enterprise JavaBeans**
    (**EJB**) for the management of persistent data, remote access to business services
    through RMI-IIOP (Remote Method Invocation over Internet Inter-ORB Protocol),
    and the JMS (Java Message Service) specification, which was used to send messages.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以前称为 J2EE，Java EE 平台的第一版于 1999 年 12 月正式发布，包含 10 个规范。在这些规范中，有用于数据展示的 Servlets
    和 JavaServer Pages (JSP)，用于持久数据管理的 **Enterprise JavaBeans** (**EJB**)，通过 RMI-IIOP
    (远程方法调用跨 Internet Inter-ORB 协议) 远程访问业务服务，以及用于发送消息的 JMS (Java 消息服务) 规范。
- en: Despite efforts and many contributions, early versions of Java EE were too complex
    and difficult to implement. This led to much criticism and caused the rise of
    competing frameworks such as Spring Framework.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有努力和许多贡献，Java EE 的早期版本过于复杂且难以实现。这导致了大量批评，并引发了像 Spring 框架这样的竞争框架的兴起。
- en: Having drawn lessons from its previous failures, the platform has considerably
    evolved over time until the production of Java EE 5, which permitted the platform
    to regain its lost esteem. From this version, Java EE continues to provide easier,
    richer, and more powerful versions of the platform.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的失败中吸取了教训，该平台在时间上经历了相当大的演变，直到 Java EE 5 的推出，这使得平台能够恢复其失去的声誉。从这个版本开始，Java
    EE 继续提供更简单、更丰富、更强大的平台版本。
- en: '![A brief history of Java EE](img/9235OT_01_01(a).jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![Java EE 简史](img/9235OT_01_01(a).jpg)'
- en: The preceding diagram gives an overview of the important changes made to Java
    EE platform since the release of the first version in December 1999\. This diagram
    highlights the release dates, updates, and major improvements in each version.
    It also allows us to have an idea about the central theme behind each version.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表概述了自 1999 年 12 月发布第一个版本以来对 Java EE 平台所做的重大更改。此图表突出了每个版本的发布日期、更新和主要改进。它还让我们对每个版本背后的中心主题有一个了解。
- en: The main goals of Java EE 7
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java EE 7 的主要目标
- en: Since May 2006, the Java EE platform has known remarkable evolution in terms
    of implementation. First, with Java EE 5, it greatly simplified the development
    of applications by allowing the transformation of a simple Java class (POJO class)
    into a business object through annotations or XML descriptions. Still in the line
    of simplification, Java EE 6 helps enrich annotations and introduces new concepts
    such as pruning, RESTful Web Services, CDI, EJB Lite, and configuration by exception
    and web profiles. This allows the platform to provide many easy-to-deploy and
    consume services. After the success of Java EE 6, the JCP (Java Community Process)
    envisaged turning the platform into a service by providing an infrastructure for
    cloud support. But, due to lack of significant progress in the concerned specifications,
    it revised its objectives. It is from the perspective of preparing the migration
    of the Java EE platform to the cloud that Java EE 7 focuses on productivity and
    HTML5 support. Having missed the big goal (that is, the migration to the cloud),
    it will reach its new goals through completion of Java EE 6 features and addition
    of some new specifications.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 自2006年5月以来，Java EE 平台在实现方面经历了显著的演变。首先，在 Java EE 5 中，它通过允许将简单的 Java 类（POJO 类）通过注解或
    XML 描述转换为业务对象，极大地简化了应用程序的开发。在简化的道路上，Java EE 6 帮助丰富了注解，并引入了诸如修剪、RESTful Web 服务、CDI、EJB
    Lite、异常配置和Web配置文件等新概念。这使得平台能够提供许多易于部署和消费的服务。在 Java EE 6 的成功之后，JCP（Java 社区进程）设想通过提供云支持的基础设施，将平台转变为一个服务。但是，由于相关规范缺乏显著进展，它修订了其目标。正是从为
    Java EE 平台向云迁移做准备的角度，Java EE 7 专注于生产力和 HTML5 支持。由于错过了大目标（即迁移到云），它将通过完成 Java EE
    6 特性和添加一些新规范来实现其新目标。
- en: Productivity
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生产力
- en: Productivity in Java EE 7 has been improved upon in many ways. By simplifying
    some APIs such as JMS and JAX-RS, Java EE 7 platform significantly reduces boilerplate
    code. As you will notice in the chapters that follow, sending a JMS message can
    fit on one line and no longer requires the creation of several objects as was
    the case with JMS 1.1, where it was first necessary to create a `Connection`,
    `Session`, `MessageProducer`, and `TextMessage`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7 在许多方面提高了生产力。通过简化诸如 JMS 和 JAX-RS 之类的某些 API，Java EE 7 平台显著减少了样板代码。正如您将在接下来的章节中注意到的那样，发送一个
    JMS 消息可以只占用一行，并且不再需要创建多个对象，正如 JMS 1.1 的情况，那时首先需要创建一个 `Connection`、`Session`、`MessageProducer`
    和 `TextMessage`。
- en: Java EE 7 has integrated new APIs to better address the needs of enterprise
    applications relative to the processing of large amounts of data. We have, for
    example, the **concurrency utilities**, which allow the creation of managed threads
    within a container and give developers the ability to break down large processes
    into smaller units that can be computed concurrently. Similarly, there is a Java
    API for batch processing to manage bulk and long-running jobs.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7 集成了新的 API，以更好地满足企业应用程序在处理大量数据方面的需求。例如，我们有 **并发实用工具**，它允许在容器内创建托管线程，并使开发者能够将大型过程分解为可以并发计算的小单元。同样，还有一个用于批处理的
    Java API，用于管理大量和长时间运行的任务。
- en: Finally, Java EE 7 is enriched in annotations and has set a focus on configuration
    by exception. Whether it is for data source or batch processing, compatible Java
    EE 7 containers provide a number of default objects. It is even possible to produce
    complex applications with minor configuration.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Java EE 7 在注解方面得到了丰富，并侧重于异常配置。无论是数据源还是批处理，兼容的 Java EE 7 容器都提供了一系列默认对象。甚至可以仅通过少量配置就生成复杂的应用程序。
- en: In short, the new platform frees the developer from performing a number of tasks
    and the creation of several types of objects that are required for setting up
    an application.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，新平台使开发者免于执行许多任务和创建多种类型的对象，这些对象对于设置应用程序是必需的。
- en: HTML5 support
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML5 支持
- en: 'Some people might wonder why the support of HTML5 is so important. The answer
    is simple: HTML5 is the latest release of the HTML standard. More so, it offers
    new features that ease the building of more powerful and suitable web applications.
    For example, via the `<audio>` and `<video>` elements of HTML5, you can play,
    pause, and resume audio and video media content without the use of a third-party
    plugin such as Flash. Through the canvas element and WebGL library (a subset of
    OpenGL), you can easily integrate 2D and 3D graphics in your website. With regards
    to communication between the client and server, the perfect integration of WebSocket
    protocol in HTML5 allows us to build a web application with full-duplex P2P communication
    and get over some limitations of HTTP for real-time communication. Using this
    protocol, you will have no difficulty in realizing chat applications or other
    web applications that require real-time communication between the client and server,
    such as trading and e-commerce platforms. In terms of data exchange, the native
    support of JSON format in HTML5 simplifies processing of information and reduces
    the size of documents. Many other areas have been improved, but for now we will
    only mention these ones.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人可能会 wonder 为什么对HTML5的支持如此重要。答案是简单的：HTML5是HTML标准的最新版本。更重要的是，它提供了新的功能，简化了更强大和适合的Web应用程序的构建。例如，通过HTML5的`<audio>`和`<video>`元素，您可以在不使用第三方插件（如Flash）的情况下播放、暂停和恢复音频和视频媒体内容。通过画布元素和WebGL库（OpenGL的一个子集），您可以在网站上轻松集成2D和3D图形。在客户端和服务器之间的通信方面，HTML5中WebSocket协议的完美集成使我们能够构建具有全双工P2P通信的Web应用程序，并克服HTTP在实时通信中的某些限制。使用此协议，您将不会在实现需要客户端和服务器之间实时通信的聊天应用程序或其他Web应用程序时遇到困难，例如交易平台和电子商务平台。在数据交换方面，HTML5对JSON格式的原生支持简化了信息处理并减少了文档的大小。许多其他领域也得到了改进，但在此我们只提及这些。
- en: Given all these innovations, the support for HTML5 features was added in JSF
    (JavaServer Faces), a new API was added to Java EE 7 platform to build WebSocket-driven
    applications and another API to process JSON data format.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些创新的基础上，JSF（JavaServer Faces）中增加了对HTML5特性的支持，Java EE 7平台添加了一个新的API来构建WebSocket驱动的应用程序，并添加了另一个API来处理JSON数据格式。
- en: Novelties of Java EE 7
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java EE 7的新特性
- en: The Java EE 7 was developed as a Java Specification Request (JSR 342). It has
    a total of 31 specifications including 4 new specifications, 10 major releases,
    and 9 MRs (Maintenance Releases). All these specifications are taken into account
    by the GlassFish Server 4.0 (accessible via the address [https://glassfish.java.net/download.html](https://glassfish.java.net/download.html)),
    which is the reference implementation of Java EE 7.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE 7是作为一个Java规范请求（JSR 342）开发的。它总共有31个规范，包括4个新规范、10个主要版本和9个MR（维护版本）。所有这些规范都由GlassFish
    Server 4.0（可通过地址[https://glassfish.java.net/download.html](https://glassfish.java.net/download.html)访问）考虑在内，它是Java
    EE 7的参考实现。
- en: 'The new specifications introduced in Java EE are as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Java EE中引入的新规范如下：
- en: Concurrency Utilities for Java EE 1.0 ([http://jcp.org/en/jsr/detail?id=236](http://jcp.org/en/jsr/detail?id=236)),
    for asynchronous processing and multi-threaded tasks in Java EE application components.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java EE 1.0并发实用工具([http://jcp.org/en/jsr/detail?id=236](http://jcp.org/en/jsr/detail?id=236))，用于Java
    EE应用程序组件中的异步处理和多线程任务。
- en: Batch Applications for the Java Platform 1.0 ([http://jcp.org/en/jsr/detail?id=352](http://jcp.org/en/jsr/detail?id=352)),
    to perform long-running tasks and bulk operations.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java平台批处理应用程序1.0 ([http://jcp.org/en/jsr/detail?id=352](http://jcp.org/en/jsr/detail?id=352))，用于执行长时间运行的任务和批量操作。
- en: Java API for JSON Processing 1.0 ([http://jcp.org/en/jsr/detail?id=353](http://jcp.org/en/jsr/detail?id=353)),
    which provides support for JSON processing. It offers Java EE components the ability
    to parse, generate, transform, and query JSON format.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java API for JSON Processing 1.0 ([http://jcp.org/en/jsr/detail?id=353](http://jcp.org/en/jsr/detail?id=353))，它为JSON处理提供支持。它为Java
    EE组件提供了解析、生成、转换和查询JSON格式的功能。
- en: Java API for WebSocket 1.0 ([http://jcp.org/en/jsr/detail?id=356](http://jcp.org/en/jsr/detail?id=356)),
    to build WebSocket applications.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java API for WebSocket 1.0 ([http://jcp.org/en/jsr/detail?id=356](http://jcp.org/en/jsr/detail?id=356))，用于构建WebSocket应用程序。
- en: 'APIs inherited from the Java EE 6 platform that have undergone major changes
    are the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 经历了重大变更的从Java EE 6平台继承的API如下：
- en: Java Platform, Enterprise Edition 7 (Java EE 7) Specification ([http://jcp.org/en/jsr/detail?id=342](http://jcp.org/en/jsr/detail?id=342)),
    when compared to Java EE 6, further simplifies development, adds support for HTML5,
    and prepares the platform to migrate to the cloud
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 平台，企业版 7 (Java EE 7) 规范 ([http://jcp.org/en/jsr/detail?id=342](http://jcp.org/en/jsr/detail?id=342))，与
    Java EE 6 相比，进一步简化了开发，增加了对 HTML5 的支持，并为平台迁移到云做好了准备
- en: Java Servlet 3.1 Specification ([http://jcp.org/en/jsr/detail?id=340](http://jcp.org/en/jsr/detail?id=340))
    introduces some features such as non blocking I/O API and protocol upgrade processing
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java Servlet 3.1 规范 ([http://jcp.org/en/jsr/detail?id=340](http://jcp.org/en/jsr/detail?id=340))
    引入了一些特性，例如非阻塞 I/O API 和协议升级处理
- en: Expression Language 3.0 ([http://jcp.org/en/jsr/detail?id=341](http://jcp.org/en/jsr/detail?id=341))
    was separated from JSP specification request, and it came with many changes including
    an API for standalone environments, lambda expressions, and collections objects
    support
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表达式语言 3.0 ([http://jcp.org/en/jsr/detail?id=341](http://jcp.org/en/jsr/detail?id=341))
    已从 JSP 规范请求中分离出来，并带来了许多变化，包括用于独立环境的 API、lambda 表达式和集合对象支持
- en: JavaServer Faces 2.2 ([http://jcp.org/en/jsr/detail?id=344](http://jcp.org/en/jsr/detail?id=344))
    integrates the support for the HTML5 standard and brings features such as resource
    library contracts, Faces Flow, and stateless views
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaServer Faces 2.2 ([http://jcp.org/en/jsr/detail?id=344](http://jcp.org/en/jsr/detail?id=344))
    集成了对 HTML5 标准的支持，并带来了资源库合同、Faces Flow 和无状态视图等特性
- en: Java Persistence 2.1 ([http://jcp.org/en/jsr/detail?id=338](http://jcp.org/en/jsr/detail?id=338))
    brings us the opportunity to execute Stored Procedures, create named queries at
    runtime, construct bulk update/delete via the Criteria API, override or change
    the fetch setting at runtime, and make explicit joins as in SQL
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 持久化 2.1 ([http://jcp.org/en/jsr/detail?id=338](http://jcp.org/en/jsr/detail?id=338))
    为我们带来了执行存储过程、运行时创建命名查询、通过 Criteria API 构建批量更新/删除、运行时覆盖或更改获取设置以及像 SQL 一样进行显式连接的机会
- en: Enterprise JavaBeans 3.2 ([http://jcp.org/en/jsr/detail?id=345](http://jcp.org/en/jsr/detail?id=345))
    introduces the ability to manually disable the passivation of stateful session
    beans and has also relaxed rules to define the default local or remote business
    interface
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业 JavaBeans 3.2 ([http://jcp.org/en/jsr/detail?id=345](http://jcp.org/en/jsr/detail?id=345))
    引入了手动禁用有状态会话 Bean 消息化的能力，并且放宽了定义默认本地或远程业务接口的规则
- en: Java Message Service 2.0 ([http://jcp.org/en/jsr/detail?id=343](http://jcp.org/en/jsr/detail?id=343))
    simplifies the API
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 消息服务 2.0 ([http://jcp.org/en/jsr/detail?id=343](http://jcp.org/en/jsr/detail?id=343))
    简化了 API
- en: 'JAX-RS 2.0: The Java API for RESTful Web Services ([http://jcp.org/en/jsr/detail?id=339](http://jcp.org/en/jsr/detail?id=339))
    simplifies the implementation of RESTful Web Services and introduces new features
    including Client API, asynchronous processing, filters, and interceptors'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JAX-RS 2.0：Java RESTful Web 服务 API ([http://jcp.org/en/jsr/detail?id=339](http://jcp.org/en/jsr/detail?id=339))
    简化了 RESTful Web 服务的实现，并引入了包括客户端 API、异步处理、过滤器和中继器等新特性
- en: Contexts and Dependency Injection for Java EE 1.1 ([http://jcp.org/en/jsr/detail?id=346](http://jcp.org/en/jsr/detail?id=346))
    introduces many changes, some of which are access to the current CDI container,
    access to the non contexual instances of a bean, and the ability to explicitly
    destroy bean instances
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java EE 1.1 的上下文和依赖注入 ([http://jcp.org/en/jsr/detail?id=346](http://jcp.org/en/jsr/detail?id=346))
    引入了许多变化，其中一些是访问当前 CDI 容器、访问 Bean 的非上下文实例以及显式销毁 Bean 实例的能力
- en: Bean Validation 1.1 ([http://jcp.org/en/jsr/detail?id=349](http://jcp.org/en/jsr/detail?id=349))
    introduces support for method and constructor validation, group conversion, and
    message interpolation using expression language
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bean 验证 1.1 ([http://jcp.org/en/jsr/detail?id=349](http://jcp.org/en/jsr/detail?id=349))
    引入了方法构造函数验证、分组转换和使用表达式语言的消息插值支持
- en: 'Only the following APIs are affected by maintenance releases:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 只有以下 API 受维护版本的影响：
- en: Web Services for Java EE 1.4 ([http://jcp.org/en/jsr/detail?id=109](http://jcp.org/en/jsr/detail?id=109))
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java EE 1.4 中的 Web 服务 ([http://jcp.org/en/jsr/detail?id=109](http://jcp.org/en/jsr/detail?id=109))
- en: Java Authorization Service Provider Contract for Containers 1.5 (JACC 1.5) ([http://jcp.org/en/jsr/detail?id=115](http://jcp.org/en/jsr/detail?id=115))
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 容器授权服务提供者合同 1.5 (JACC 1.5) ([http://jcp.org/en/jsr/detail?id=115](http://jcp.org/en/jsr/detail?id=115))
- en: Java Authentication Service Provider Interface for Containers 1.1 (JASPIC 1.1)
    ([http://jcp.org/en/jsr/detail?id=196](http://jcp.org/en/jsr/detail?id=196)) standardizes
    the use of some aspects of the specification
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 容器认证服务提供者接口 1.1 (JASPIC 1.1) ([http://jcp.org/en/jsr/detail?id=196](http://jcp.org/en/jsr/detail?id=196))
    标准化了规范的一些方面的使用
- en: JavaServer Pages 2.3 ([http://jcp.org/en/jsr/detail?id=245](http://jcp.org/en/jsr/detail?id=245))
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaServer Pages 2.3 ([http://jcp.org/en/jsr/detail?id=245](http://jcp.org/en/jsr/detail?id=245))
- en: Common Annotations for the Java Platform 1.2 ([http://jcp.org/en/jsr/detail?id=250](http://jcp.org/en/jsr/detail?id=250))
    adds a new annotation for managing priorities
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 平台通用注解 1.2 ([http://jcp.org/en/jsr/detail?id=250](http://jcp.org/en/jsr/detail?id=250))
    添加了一个用于管理优先级的新的注解
- en: Interceptors 1.2 ([http://jcp.org/en/jsr/detail?id=318](http://jcp.org/en/jsr/detail?id=318))
    adds standard annotation for managing the execution order of interceptors
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拦截器 1.2 ([http://jcp.org/en/jsr/detail?id=318](http://jcp.org/en/jsr/detail?id=318))
    添加了用于管理拦截器执行顺序的标准注解
- en: Java EE Connector Architecture 1.7 ([http://jcp.org/en/jsr/detail?id=322](http://jcp.org/en/jsr/detail?id=322))
    adds two annotations for defining and configuring the resource adapter's resources
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java EE 连接器架构 1.7 ([http://jcp.org/en/jsr/detail?id=322](http://jcp.org/en/jsr/detail?id=322))
    为定义和配置资源适配器的资源添加了两个注解
- en: Java Transaction API 1.2 ([http://jcp.org/en/jsr/detail?id=907](http://jcp.org/en/jsr/detail?id=907))
    provides the possibility to demarcate transactions declaratively and define beans
    whose lifecycle is identical to the current transaction
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 事务 API 1.2 ([http://jcp.org/en/jsr/detail?id=907](http://jcp.org/en/jsr/detail?id=907))
    提供了声明性标记事务的可能性和定义与当前事务生命周期相同的 bean
- en: JavaMail 1.5 ([http://jcp.org/en/jsr/detail?id=919](http://jcp.org/en/jsr/detail?id=919))
    slightly simplifies the development of sending an e-mail by adding annotations
    and methods
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaMail 1.5 ([http://jcp.org/en/jsr/detail?id=919](http://jcp.org/en/jsr/detail?id=919))
    通过添加注解和方法略微简化了发送电子邮件的开发
- en: Summary
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: After briefly introducing the evolution of Java EE and analyzing the objectives
    of the latest platform, we listed all the specifications that were improved upon
    or added in Java EE 7\. In the next chapter, we will focus on new specifications
    to highlight their usefulness and show how they can be implemented.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在简要介绍 Java EE 的演变并分析最新平台的目标后，我们列出了在 Java EE 7 中改进或添加的所有规范。在下一章中，我们将重点关注新规范，以突出其有用性并展示它们如何实现。
