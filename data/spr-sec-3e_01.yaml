- en: Anatomy of an Unsafe Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不安全应用程序的解剖
- en: Security is arguably one of the most critical architectural components of any
    web-based application written in the 21^(st) century. In an era where malware,
    criminals, and rogue employees are always present and actively testing software
    for exploits, smart and comprehensive use of security is a key element to any
    project for which you'll be responsible.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性可以说是21世纪任何基于web的应用程序最关键的架构组件之一。在一个恶意软件、犯罪分子和流氓员工始终存在并积极测试软件漏洞的时代，明智而全面地使用安全性是您将负责的任何项目的关键要素。
- en: This book is written to follow a pattern of development that, we feel, provides
    a useful premise for tackling a complex subject-taking a web-based application
    with a Spring 4.2 foundation, and understanding the core concepts and strategies
    for securing it with Spring Security 4.2\. We complement this approach by providing
    sample code for each chapter in the form of complete web applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是为了遵循一种我们认为是解决复杂主题的有用前提的发展模式-以Spring 4.2为基础的基于web的应用程序，并理解使用Spring Security
    4.2对其进行安全保护的核心概念和策略。我们通过为每个章节提供完整的web应用程序样例代码来补充这种方法。
- en: 'Whether you''re already using Spring Security or are interested in taking your
    basic use of the software to the next level of complexity, you''ll find something
    to help you in this book. During the course of this chapter, we will cover the
    following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是否已经使用Spring Security，或者对将软件的基本使用提升到更复杂的下一个级别感兴趣，您在这本书中都能找到帮助。在本章中，我们将涵盖以下主题：
- en: The results of a fictional security audit
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚构安全审计的结果
- en: Some common security problems of web-based applications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于web的应用程序的一些常见安全问题
- en: Several core software security terms and concepts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几个核心软件安全术语和概念
- en: If you are already familiar with basic security terminology, you may skip to
    [Chapter 2](02.html), *Getting Started with Spring Security*, where we start using
    the basic functionality of the framework.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经熟悉基本的安全术语，您可以跳到[第2章](02.html)，*开始使用Spring Security*，我们从框架的基本功能开始使用。
- en: Security audit
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全审计
- en: 'It''s early in the morning at your job as a software developer for the **Jim
    Bob Circle Pants Online Calendar** (JBCPCalendar.com), and you''re halfway through
    your first cup of coffee when you get the following email from your supervisor:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在你作为**吉姆·鲍勃圆形裤子在线日历**（JBCPCalendar.com）的软件开发人员的工作中，早晨很早，你在喝第一杯咖啡的过程中收到了以下来自你上司的电子邮件：
- en: '![](img/51413d3d-040c-4ddb-92d3-5675974fe30f.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](img/51413d3d-040c-4ddb-92d3-5675974fe30f.png)'
- en: What? You didn't think about security when you designed the application? In
    fact, at this point, you are not even sure what a security audit is. Sounds like
    you'll have a lot to learn from the security auditors! Later in this chapter,
    we will review what an audit is, along with the results of an audit. First, let's
    spend a bit of time examining the application that's under review.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 什么？你在设计应用程序时没有考虑到安全性？实际上，到目前为止，你甚至不确定什么是安全审计。听起来你从安全审计师那里还有很多要学习的！在本章的后部分，我们将回顾什么是审计以及审计的结果。首先，让我们花一点时间检查一下正在审查的应用程序。
- en: About the sample application
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于示例应用程序
- en: 'Although we''ll be working through a contrived scenario as we progress through
    this book, the design of the application and the changes that we''ll make to it
    are drawn from the real-world usage of Spring-based applications. The calendar
    application allows users to create and view events:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们在本书中逐步进行的一个虚构场景，但应用程序的设计和我们对其所做的更改是基于Spring-based应用程序的真实世界使用情况。日历应用程序允许用户创建和查看事件：
- en: '![](img/3dc74ed3-37c8-48c0-aac1-8659979d294e.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3dc74ed3-37c8-48c0-aac1-8659979d294e.png)'
- en: 'After entering the details for a new event, you will be presented with the
    following screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在输入新事件的详细信息后，您将看到以下屏幕截图：
- en: '![](img/e20fb523-9636-4b9d-bfc5-d136234b9bdc.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e20fb523-9636-4b9d-bfc5-d136234b9bdc.png)'
- en: The application is designed to be simplistic, to allow us to focus on the important
    aspects of security and not get tied up in the details of **object-relational
    mapping** (**ORM**) and complex UI techniques. We expect you to refer to other
    supplementary materials in the Appendix, *Additional Reference Material* (in the
    *Supplementary Materials* section of this book) to cover some of the baseline
    functionality that is provided as part of the sample code.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序被设计为简单，以便我们可以专注于安全的重要方面，而不是陷入**对象关系映射** (**ORM**)和复杂UI技术的细节中。我们期待你会参考附录中的其他补充材料（本书*补充材料*部分）来覆盖作为示例代码一部分提供的一些基本功能。
- en: The code is written in Spring and Spring Security 4.2, but it would be relatively
    easy to adapt many of the examples to other versions of Spring Security. Refer
    to the discussion about the detailed changes between Spring Security 3 and 4.2
    in [Chapter 16](16.html), *Migration to Spring Security 4.2*, for assistance in
    translating the examples to the Spring Security 4 syntax.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 代码是用Spring和Spring Security 4.2编写的，但将许多示例适应到Spring Security的其他版本相对容易。参考第16章[16.html](16.html)、*迁移到Spring
    Security 4.2*中的讨论，了解Spring Security 3和4.2之间的详细变化，以帮助将示例翻译为Spring Security 4的语法。
- en: Please don't use this application as a baseline to build a real online calendar
    application. It has been purposely structured to be simple and to focus on the
    concepts and configuration that we illustrate in this book.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要将这个应用程序作为构建真实在线日历应用程序的基础。它故意被构建为简单，并专注于我们在本书中说明的概念和配置。
- en: The JBCP calendar application architecture
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JBCP日历应用程序架构
- en: 'The web application follows a standard three-tier architecture consisting of
    a web, service, and data access layer, as indicated in the following diagram:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 网络应用程序遵循标准的三层架构，包括Web、服务和服务访问层，如下面的图表所示：
- en: '![](img/c82c2b5d-2303-47fd-aa94-14d7a8bc4ca5.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c82c2b5d-2303-47fd-aa94-14d7a8bc4ca5.png)'
- en: You can find additional material about MVC architectures in the *Supplementary
    Materials* section of the Appendix, *Additional Reference Material*.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在附录的*补充材料*部分找到有关MVC架构的额外材料。
- en: The web layer encapsulates MVC code and functionality. In this sample application,
    we will use the Spring MVC framework, but we could just as easily use **Spring
    Web Flow** (**SWF**), **Apache Struts**, or even a Spring-friendly web stack,
    such as **Apache Wicket**.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Web层封装了MVC代码和功能。在这个示例应用程序中，我们将使用Spring MVC框架，但我们同样可以轻松地使用**Spring Web Flow**
    (**SWF**)、**Apache Struts**，甚至是像**Apache Wicket**这样的Spring友好的Web堆栈。
- en: In a typical web application, leveraging Spring Security, the web layer is where
    much of the configuration and augmentation of code takes place. For example, the
    `EventsController` class is used to transform an HTTP request into persisting
    an event into the database. If you haven't had a lot of experience with web applications
    and Spring MVC specifically, it would be wise to review the baseline code closely
    and make sure you understand it before we move on to more complex subjects. Again,
    we've tried to make the website as simple as possible, and the construct of a
    calendar application is used just to provide a sensible title and light structure
    to the site.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的利用Spring Security的网络应用程序中，Web层是许多配置和代码增强发生的地方。例如，`EventsController`类用于将HTTP请求转换为将事件持久化到数据库中。如果你没有太多Web应用程序和Spring
    MVC的经验，仔细审查基线代码并确保你理解它是明智的，在我们进入更复杂的主题之前。再次强调，我们试图使网站尽可能简单，日历应用程序的构建只是为了提供一个合理的标题和轻量级的结构。
- en: You can find detailed instructions on setting up the sample application within
    the *Appendix*, *Additional Reference Material*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在*附录*、*附加参考资料*中找到设置示例应用程序的详细说明。
- en: The service layer encapsulates the business logic for the application. In our
    sample application, we use `DefaultCalendarService` as a very light facade over
    the data access layer, to illustrate particular points about securing application
    service methods. The service layer is also used to operate on both Spring Security
    APIs and our Calendar APIs within a single method call. We will discuss this in
    greater detail in [Chapter 3](03.html), *Custom Authentication*.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 服务层封装了应用程序的业务逻辑。在我们的示例应用程序中，我们使用`DefaultCalendarService`作为非常轻量级的外观，覆盖数据访问层，以说明关于保护应用程序服务方法的特定要点。服务层还用于在单个方法调用内操作Spring
    Security API和我们的日历API。我们将在第3章[03.html](03.html)、*自定义认证*中详细讨论这一点。
- en: In a typical web application, this layer would incorporate business rule validation,
    composition and decomposition of business objects, and cross-cutting concerns
    such as auditing.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个典型的Web应用程序中，这个层次将包含业务规则验证、业务对象的组合和分解，以及诸如审计的交叉关注点。
- en: The data access layer encapsulates the code responsible for manipulating the
    contents of database tables. In many Spring applications, this is where you would
    see the use of ORM, such as Hibernate or JPA. It exposes an object-based API to
    the service layer. In our sample application, we use basic JDBC functionality
    to achieve persistence to the in-memory H2 database. For example, `JdbcEventDao`
    is used to save event objects to the database.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 数据访问层封装了负责操作数据库表内容的代码。在许多Spring应用程序中，这就是您会看到ORM（如Hibernate或JPA）使用的地方。它向服务层暴露基于对象的API。在我们的示例应用程序中，我们使用基本的JDBC功能来实现对内存中H2数据库的持久化。例如，`JdbcEventDao`用于将事件对象保存到数据库中。
- en: In a typical web application, a more comprehensive data access solution would
    be utilized. As ORM, and more generally data access, tends to be confusing for
    some developers, this is an area we have chosen to simplify as much as possible
    for the purposes of clarity.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个典型的Web应用程序中，会使用更全面的数据访问解决方案。由于ORM（对象关系映射），以及更一般的数据访问，对一些开发者来说可能比较困惑，因此这是我们选择尽可能简化清晰明了的区域。
- en: Application technology
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序技术
- en: We have endeavored to make the application as easy to run as possible by focusing
    on some basic tools and technologies that almost every Spring developer would
    have on their development machine. Nevertheless, we have provided the *Getting
    started* section as supplementary information in the Append, *Getting Started
    with JBCP Calendar Sample Code*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们努力使应用程序尽可能容易运行，通过专注于几乎每个Spring开发者都会在其开发机器上拥有的基本工具和技术。尽管如此，我们还是在附录中提供了*入门*部分，作为补充信息，即*使用JBCP日历示例代码入门*。
- en: The primary method for integrating with the sample code is providing Gradle--compatible
    projects. Since many IDEs have rich integration with Gradle, users should be able
    to import the code into any IDE that supports Gradle. As many developers use Gradle,
    we felt this was the most straightforward method of packaging the examples. Whatever
    development environment you are familiar with, hopefully, you will find a way
    to work through the examples in this book.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 与示例代码集成的主要方法是提供与Gradle兼容的项目。由于许多IDE与Gradle集成丰富，用户应该能够将代码导入支持Gradle的任何IDE。由于许多开发者使用Gradle，我们认为这是包装示例的最直接方法。无论您熟悉的开发环境是什么，希望您能找到一种方法来完成这本书中的示例。
- en: Many IDEs provide Gradle tooling that can automatically download the Spring
    and Spring Security 4.2 Javadoc and source code for you. However, there may be
    times when this is not possible. In such cases, you'll want to download the full
    releases of both Spring 4.2 and Spring Security 4.2\. The Javadoc and source code
    are top-notch. If you get confused or want more information, the samples can provide
    an additional level of support or reassurance for your learning. Visit the *Supplementary
    Materials* section, in Appendix, *Additional Reference Material* to find additional
    information about Gradle, including running the samples, obtaining the source
    code and Javadoc, and the alternatives for building your projects without Gradle.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 许多IDE提供Gradle工具，可以自动为您下载Spring和Spring Security 4.2的Javadoc和源代码。然而，可能有时这是不可能的。在这种情况下，您需要下载Spring
    4.2和Spring Security 4.2的完整版本。Javadoc和源代码是顶级的。如果您感到困惑或需要更多信息，示例可以为您提供额外的支持或信心，以帮助您的学习。访问附录中的*补充材料*部分，即*附加参考资料*，以查找有关Gradle的额外信息，包括运行示例、获取源代码和Javadoc，以及不使用Gradle构建项目的替代方案。
- en: Reviewing the audit results
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查审计结果
- en: 'Let''s return to our email and see how the audit is progressing. Uh-oh, the
    results don''t look good:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们的电子邮件，看看审计进展如何。哦哦，结果看起来不太好：
- en: '![](img/403f0d84-959f-4e01-bfc9-68d113c2e554.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/403f0d84-959f-4e01-bfc9-68d113c2e554.png)'
- en: '**APPLICATION AUDIT RESULTS**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用程序审计结果**'
- en: 'This application exhibits the following insecure behavior:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这个应用程序表现出以下不安全行为：
- en: Inadvertent privilege escalation due to lack of URL protection and general authentication
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于缺乏URL保护和一般认证，不经意的权限提升
- en: Inappropriate or non-existent use of authorization
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不当或不存在授权使用
- en: Missing database credential security
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺少数据库凭据安全
- en: Personally-identifiable or sensitive information is easily accessible or unencrypted
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 个人身份信息或敏感信息容易访问或未加密
- en: Insecure transport-level protection due to lack of SSL encryption
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于缺乏SSL加密，传输层保护不安全。
- en: Risk level is high
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 风险等级：高
- en: We recommend that this application should be taken offline until these issues
    can be resolved.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议，在这些问题得到解决之前，该应用程序应下线。
- en: Ouch! This result looks bad for our company. We'd better work to resolve these
    issues as quickly as possible.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！这个结果对我们公司来说看起来很糟糕。我们最好尽快解决这些问题。
- en: Third-party security specialists are often hired by companies (or their partners
    or customers) to audit the effectiveness of their software security, through a
    combination of white hat hacking, source code review, and formal or informal conversations
    with application developers and architects.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 第三方安全专家通常被公司（或其合作伙伴或客户）雇佣，通过结合白帽黑客、源代码审查和与应用程序开发人员和架构师正式或非正式的交谈，审计他们软件安全的效果。
- en: '**White hat hacking** or **ethical hacking** is done by professionals who are
    hired to instruct companies on how to protect themselves better, rather than with
    the intent to be malicious.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**白帽黑客**或**道德黑客**是由专业人士进行的，他们受雇于公司，指导公司如何更好地保护自己，而不是出于恶意的目的。'
- en: Typically, the goal of security audits is to provide management or clients with
    the assurance that basic secure development practices have been followed, to ensure
    the integrity and safety of the customer's data and system functions. Depending
    on the industry the software is targeted at, the auditor may also test it using
    industry-specific standards or compliance metrics.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，安全审计的目的是为了向管理层或客户提供信心，确保已经遵循了基本的安全开发实践，以确保客户数据和系统功能的完整性和安全性。根据软件目标行业的不同，审计员还可能使用行业特定的标准或合规性指标对其进行测试。
- en: Two specific security standards that you're likely to run into at some point
    in your career are the **Payment Card Industry Data Security Standard** (**PCI**
    **DSS**) and the **Health Insurance Privacy and Accountability Act** (**HIPAA**)
    privacy rules. Both these standards are intended to ensure the safety of specific
    sensitive information (such as credit card and medical information) through a
    combination of process and software controls. Many other industries and countries
    have similar rules about sensitive or **Personally Identifiable Information**
    (**PII**). Failure to follow these standards is not only bad practice but also
    something that could expose you or your company to significant liability (not
    to mention bad press) in the event of a security breach.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的职业生涯中某个时候可能会遇到的两个具体安全标准是**支付卡行业数据安全标准**（**PCI DSS**）和**健康保险隐私和责任法案**（**HIPAA**）隐私规则。这两个标准旨在通过结合流程和软件控制来确保特定敏感信息（如信用卡和医疗信息）的安全。许多其他行业和国家有关于敏感信息或**个人可识别信息**（**PII**）类似的规则。不遵循这些标准不仅是不好的实践，还可能在你或你的公司发生安全漏洞时暴露你或你的公司承担重大责任（更不用说坏新闻了）。
- en: Receiving the results of a security audit can be an eye-opening experience.
    Following through with the required software improvements can be the perfect opportunity
    for self-education and software improvement, and can allow you to implement practices
    and policies that lead to secure software.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 收到安全审计的结果可能是一次大开眼界的经历。按照要求改进软件可以是一个自我教育和软件改进的完美机会，并允许您实施导致安全软件的实践和政策。
- en: Let's review the auditor's findings, and come up with a plan to address them
    in detail.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下审计员的调查结果，并详细制定一个解决它们的计划。
- en: Authentication
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 认证
- en: 'Authentication is one of two key security concepts that you must internalize
    when developing secure applications (the other being authorization). **Authentication**
    identifies who is attempting to request a resource. You may be familiar with authentication
    in your daily online and offline life, in very different contexts, as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 认证是开发安全应用程序时必须深入理解的两个关键安全概念之一（另一个是授权）。**认证**的目的是确定谁正在尝试请求资源。你可能在日常生活中在线和离线环境下对认证熟悉，如下所述：
- en: '**Credential-based authentication**: When you log in to your web-based email
    account, you most likely provide your username and password. The email provider
    matches your username with a known user in its database and verifies that your
    password matches what they have on record. These credentials are what the email
    system uses to validate that you are a valid user of the system. First, we''ll
    use this type of authentication to secure sensitive areas of the JBCP calendar
    application. Technically speaking, the email system can check credentials not
    only in the database but anywhere, for example, a corporate directory server such
    as **Microsoft Active Directory**. A number of these types of integrations are
    covered throughout this book.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于凭证的认证**：当你登录基于网页的邮箱账户时，你很可能会提供你的用户名和密码。邮箱提供商将其用户名与数据库中的已知用户匹配，并验证你的密码与他们的记录相符。这些凭证是邮箱系统用来验证你是系统有效用户的东西。首先，我们将使用这种认证方式来保护JBCP日历应用程序的敏感区域。从技术上讲，邮箱系统不仅可以在数据库中检查凭证，还可以在任何地方进行检查，例如，企业目录服务器如**微软活动目录**。本书涵盖了这类集成的大部分内容。'
- en: '**Two-factor authentication**: When you withdraw money from your bank''s automated
    teller machine, you swipe your ID card and enter your personal identification
    number before you are allowed to retrieve cash or conduct other transactions.
    This type of authentication is similar to the username and password authentication,
    except that the username is encoded on the card''s magnetic strip. The combination
    of the physical card and user-entered PIN allows the bank to ensure that you should
    have access to the account. The combination of a password and a physical device
    (your plastic ATM card) is a ubiquitous form of two-factor authentication. In
    a professional, security-conscious environment, it''s common to see these types
    of devices in regular use for access to highly secure systems, especially dealing
    with finance or personally identifiable information. A hardware device, such as
    **RSA SecurID**, combines a time-based hardware device with server-based authentication
    software, making the environment extremely difficult to compromise.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**双因素认证**：当你从银行的自动取款机取款时，你需要刷一下你的身份证，并输入你的个人识别码，然后才能取出现金或进行其他交易。这种认证方式与用户名和密码认证相似，不同之处在于用户名编码在卡的磁条上。物理卡片和用户输入的PIN码的组合使得银行能够确保你应该有权限访问该账户。密码和物理设备（你的塑料ATM卡）的组合是双因素认证的一种普遍形式。在一个专业、注重安全的环境中，这种类型的设备经常用于访问高度安全的系统，尤其是与财务或个人身份信息有关的系统。例如**RSA
    SecurID**这样的硬件设备，结合基于时间硬件设备和基于服务器的认证软件，使得环境极端难以被妥协。'
- en: '**Hardware authentication**: When you start your car in the morning, you slip
    your metal key into the ignition and turn it to get the car started. Although
    it may not feel similar to the other two examples, the correct match of the bumps
    on the key and the tumblers in the ignition switch function as a form of hardware
    authentication.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬件认证**：早上启动你的车时，你将金属钥匙插入点火器并转动它来启动汽车。虽然这可能感觉与另外两个例子不同，但是钥匙上的凸起和点火开关中的滚珠正确匹配，作为一种硬件认证形式。'
- en: There are literally dozens of forms of authentication that can be applied to
    the problem of software and hardware security, each with their own pros and cons.
    We'll review some of these methods as they apply to Spring Security throughout
    the first half of this book. Our application lacks any type of authentication,
    which is why the audit included the risk of inadvertent privilege escalation.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上有数十种认证方式可以应用于软件和硬件安全问题，每种方式都有其优缺点。我们将在本书的第一半部分回顾这些方法，并将其应用于Spring Security。我们的应用程序缺乏任何类型的认证，这就是审计包括无意中提升权限风险的原因。
- en: 'Typically, a software system will be divided into two high-level realms, such
    as unauthenticated (or anonymous) and authenticated, as shown in the following
    screenshot:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个软件系统会被划分为两个高层次领域，例如未认证（或匿名）和已认证，如下面的屏幕截图所示：
- en: '![](img/08cae274-5a44-48c3-8c1e-9878fa0b607f.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/08cae274-5a44-48c3-8c1e-9878fa0b607f.png)'
- en: Application functionality in the anonymous realm is the functionality that is
    independent of a user's identity (think of a welcome page for an online application).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 匿名区域的应用程序功能是独立于用户身份的功能（想想一个在线应用程序的欢迎页面）。
- en: 'Anonymous areas do not do the following:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 匿名区域不会做以下这些事情：
- en: Require a user to log in to the system or otherwise identify themselves to be
    usable
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求用户登录系统或以其他方式识别自己才能使用
- en: Display sensitive information, such as names, addresses, credit cards, and orders
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示敏感信息，如姓名、地址、信用卡和订单
- en: Provide functionality to manipulate the overall state of the system or its data
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供操作系统或其数据整体状态的功能
- en: Unauthenticated areas of the system are intended for use by everyone, even by
    users who we haven't specifically identified yet. However, it may be that additional
    functionality appears to identified users in these areas (for example, the ubiquitous
    `Welcome {First Name}` text). The selective displaying of content to authenticated
    users is fully supported through the use of the Spring Security tag library and
    is covered in [Chapter 11](12.html), *Fine-Grained Access Control*.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的未认证区域旨在供所有人使用，甚至是那些我们尚未明确识别的用户。然而，可能是在这些区域出现了对已识别用户的其他功能（例如，无处不在的`欢迎 {First
    Name}`文本）。通过使用Spring Security标签库，完全支持向已认证用户显示内容的选择性，并在第[11章](11.html) *细粒度访问控制*
    中进行了介绍。
- en: We'll resolve this finding and implement form-based authentication using the
    automatic configuration capability of Spring Security in [Chapter 2](02.html),
    *Getting Started with Spring Security*. Afterwards, we will explore various other
    means of performing authentication (which usually revolves around system integration
    with enterprise or other external authentication stores).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在第[2章](02.html) *开始使用Spring Security* 中解决这个问题，并使用Spring Security的自动配置能力实现基于表单的认证。之后，我们将探讨执行认证的各种其他方式（这通常涉及与企业或其他外部认证存储系统的集成）。
- en: Authorization
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 授权
- en: Inappropriate or non-existent use of authorization
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 不当或不存在使用授权
- en: Authorization is the second of two core security concepts that are crucial in
    implementing and understanding application security. **Authorization** uses the
    information that was validated during authentication to determine whether access
    should be granted to a particular resource. Built around the authorization model
    for the application, authorization partitions the application functionality and
    data so that the availability of these items can be controlled by matching the
    combination of privileges, functionality, and data to users. Our application's
    failure at this point of the audit indicates that the application's functionality
    isn't restricted by the user role. Imagine if you were running an e-commerce site
    and the ability to view, cancel, or modify orders and customer information was
    available to any user of the site!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 授权是两个核心安全概念中的第二个，对于实现和理解应用程序安全至关重要。**授权**使用在身份验证过程中验证的信息来确定是否应授予对特定资源的访问权限。围绕应用程序的授权模型，授权将应用程序功能和数据分区，以便这些项目的可用性可以通过将特权、功能和数据的组合与用户匹配来控制。我们应用程序在审计此阶段的失败表明应用程序的功能不受用户角色的限制。想象一下，如果你正在运营一个电子商务网站，而查看、取消或修改订单和客户信息的能力对网站上的任何用户都可用！
- en: 'Authorization typically involves the following two separate aspects that combine
    to describe the accessibility of the secured system:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 授权通常涉及以下两个方面，这两个方面结合在一起描述了受保护系统的可访问性：
- en: The first is the mapping of an authenticated principal to one or more authorities
    (often called **roles**). For example, a casual user of your website might be
    viewed as having visitor authority, while a site administrator might be assigned
    administrative authority.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个方面是将一个已认证的主体映射到一个或多个权限（通常称为**角色**）。例如，您网站的临时用户可能被视为具有访客权限，而网站管理员可能被分配管理权限。
- en: The second is the assignment of authority checks to secured resources of the
    system. This is typically done at the time a system is developed, either through
    an explicit declaration in code or through configuration parameters. For example,
    the screen that allows for the viewing of other users' events should be made available
    only to those users with administrative authority.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个方面是将权限检查分配给系统的受保护资源。这通常在系统开发时完成，要么通过代码中的显式声明，要么通过配置参数。例如，允许查看其他用户事件的屏幕应该只对具有管理权限的用户可用。
- en: A secured resource may be any aspect of the system that should be conditionally
    available based on the authority of the user.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一个受保护的资源可能是系统中应基于用户权限而有条件地可用的任何方面。
- en: Secured resources of a web-based application could be individual web pages,
    entire portions of the website, or portions of individual pages. Conversely, secured
    business resources might be method calls on classes or individual business objects.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 基于Web的应用程序的安全资源可能是个别Web页面，网站的整个部分，或个别页面的部分。相反，安全业务资源可能是类上的方法调用或个别业务对象。
- en: You might imagine an authority check that would examine the principal, look
    up its user account, and determine whether the principal is, in fact, an administrator.
    If this authority check determines that the principal who is attempting to access
    the secured area is, in fact, an administrator, then the request will succeed.
    If, however, the principal does not have the sufficient authority, the request
    should be denied.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想象有一个权限检查，它会检查主体，查找其用户账户，并确定主体是否实际上是管理员。如果这个权限检查确定试图访问受保护区域的主体实际上是管理员，那么请求将会成功。然而，如果主体没有足够的权限，请求应该被拒绝。
- en: Let's take a closer look at an example of a particular secured resource, the
    All Events page. The All Events page requires administrative access (after all,
    we don't want regular users viewing other users' events), and as such, looks for
    a certain level of authority in the principal accessing it.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们 closer look at a particular example of a secured resource, the All Events
    page. The All Events page requires administrative access (after all, we don't
    want regular users viewing other users' events), and as such, looks for a certain
    level of authority in the principal accessing it.
- en: 'If we think about how a decision might be made when a site administrator attempts
    to access the protected resource, we''d imagine that the examination of the actual
    authority versus the required authority might be expressed concisely in terms
    of the set theory. We might then choose to represent this decision as a **Venn**
    diagram for the administrative user:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们思考当一个网站管理员试图访问受保护资源时决策可能是如何做出的，我们会想象实际权限与所需权限的检查可以用集合论简洁地表达。我们可能会选择用**维恩**图表示这个决定：
- en: '![](img/d707087e-ad79-4d75-8be8-a96cc9e19536.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d707087e-ad79-4d75-8be8-a96cc9e19536.png)'
- en: There is an intersection between **User Authorities** (users and administrators)
    and **Required Authorities** (administrators) for the page, so the user is provided
    with access.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户权限**（用户和管理员）和**所需权限**（管理员）之间有一个交集，所以用户被提供访问权限。'
- en: 'Contrast this with an unauthorized user, as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 与未经授权的用户相比如下：
- en: '![](img/096a10f5-387e-4b85-b339-49ee85fe483a.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/096a10f5-387e-4b85-b339-49ee85fe483a.png)'
- en: The sets of authorities are disjointed and have no common elements. So, the
    user is denied access to the page. Thus, we have demonstrated the basic principle
    of the authorization of access to resources.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 权限集合是分开的，没有公共元素。所以，用户被拒绝访问页面。因此，我们已经演示了访问资源授权的基本原则。
- en: In reality, there's real code making this decision, with the consequence that
    the user is granted or denied access to the requested protected resource. We'll
    address the basic authorization problem with the authorization infrastructure
    of Spring Security in [Chapter 2](02.html), *Getting Started with Spring Security*,
    followed by more advanced authorization in [Chapter 12](12.html), *Access Control
    Lists*, and [Chapter 13](13.html), *Custom Authorization*.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实中，有真实的代码在做这个决定，其结果是用户被授权或拒绝访问请求的保护资源。我们将在[第2章](02.html)，*Spring Security入门*中讨论基本授权问题，随后在第12章[访问控制列表](12.html)和第13章[自定义授权](13.html)中讨论更高级的授权。
- en: Database credential security
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库凭据安全
- en: Database credentials are not secure or easily accessible. Through the examination
    of the application source code and configuration files, the auditors noted that
    user passwords were stored in plain text in the configuration files, making it
    very easy for a malicious user with access to the server to gain access to the
    application.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库凭据不安全或容易访问。通过检查应用程序源代码和配置文件，审计员注意到用户密码以明文形式存储在配置文件中，这使得恶意用户能够轻松访问服务器并访问应用程序。
- en: As the application contains personal and financial data, a rogue user being
    able to access any data could expose the company to identity theft or tampering.
    Protecting access to the credentials used to access the application should be
    a top priority for us, and an important first step is ensuring that one point
    of failure in security does not compromise the entire system.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 由于应用程序包含个人和财务数据，恶意用户能够访问任何数据可能会使公司面临身份盗窃或篡改的风险。对我们来说，保护访问应用程序所使用的凭据应该是首要任务，并且确保安全的一个关键一步是确保一个失败点不会使整个系统受到威胁。
- en: We'll examine the configuration of database access layers in Spring Security
    for credential storage, which requires JDBC connectivity, in [Chapter 4](04.html),
    *JDBC-Based Authentication*. In the same chapter, we'll also look at built-in
    techniques to increase the security of passwords stored in the database.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将检查 Spring Security 中用于凭据存储的数据库访问层配置，这在[第 4 章](04.html)“*基于 JDBC 的认证*”中讨论。在这一章中，我们还将探讨内置技术以提高存储在数据库中的密码的安全性。
- en: Sensitive information
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 敏感信息
- en: Personally identifiable or sensitive information is easily accessible or unencrypted.
    The auditors noted that some significant and sensitive pieces of data were completely
    unencrypted or masked anywhere in the system. Fortunately, there are some simple
    design patterns and tools that allow us to protect this information securely,
    with annotation-based AOP support in Spring Security.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 可识别或敏感信息容易访问或未加密。审计员注意到系统中一些重要且敏感的数据完全是未加密或未在任何地方遮蔽的。幸运的是，有一些简单的设计模式和工具可以让我们安全地保护这些信息，并且
    Spring Security 支持基于注解的 AOP。
- en: Transport-level protection
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 传输层保护
- en: There is insecure transport-level protection due to lack of SSL encryption.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 由于缺乏 SSL 加密，存在不安全的传输层保护。
- en: While, in the real world, it's unthinkable that an online application containing
    private information would operate without SSL protection, unfortunately, the JBCP
    calendar is in just this situation. SSL protection ensures that communication
    between the browser client and the web application server are secure against many
    kinds of tampering and snooping.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在线应用程序包含私人信息，在现实世界中，没有 SSL 保护的运行是不可想象的，不幸的是，JBCP 日历正是这种情况。SSL 保护确保浏览器客户端与
    Web 应用程序服务器之间的通信安全，防止多种篡改和窥探。
- en: In the *HTTPS Setup in Tomcat* section, in Appendix, *Additional Reference Material*,
    we'll review the basic options for using transport-level security as part of the
    definition of the secured structure of the application.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在“*Tomcat 中的 HTTPS 设置*”部分，附录中的“*附加参考资料*”中，我们将回顾使用传输层安全作为应用程序安全结构定义的一部分的基本选项。
- en: Using Spring Security 4.2 to address security concerns
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Spring Security 4.2 解决安全问题
- en: Spring Security 4.2 provides a wealth of resources that allow for many common
    security practices to be declared or configured in a straightforward manner. In
    the coming chapters, we'll apply a combination of source code and application
    configuration changes to address all of the concerns raised by the security auditors
    (and more), to give ourselves the confidence that our calendar application is
    secure.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Security 4.2 提供了丰富的资源，使得许多常见的安 全实践可以简单地声明或配置。在接下来的章节中，我们将结合源代码和应用程序配置的更改来解决安全审计员提出（还有更多）的所有关注问题，从而确信我们的日历应用程序是安全的。
- en: 'With Spring Security 4.2, we''ll be able to make the following changes to increase
    our application''s security:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Spring Security 4.2，我们将能够做出以下更改来增加我们应用程序的安全性：
- en: Segment users of the system into user classes
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将系统中的用户划分为用户类
- en: Assign levels of authorization to user roles
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为用户角色分配授权级别
- en: Assign user roles to user classes
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为用户类分配用户角色
- en: Apply authentication rules globally across application resources
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在全球范围内对应用程序资源应用认证规则
- en: Apply authorization rules at all levels of the application architecture
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在应用程序架构的所有层次上应用授权规则
- en: Prevent common types of attacks intended to manipulate or steal a user's session
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防止旨在操纵或窃取用户会话的常见攻击
- en: Why Spring Security?
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么使用 Spring Security？
- en: Spring Security exists to fill a gap in the universe of Java third-party libraries,
    much as the Spring Framework originally did when it was first introduced. Standards
    such as **Java Authentication and Authorization Service** (**JAAS**) or **Java
    EE Security** do offer some ways of performing some of the same authentication
    and authorization functions, but Spring Security is a winner because it includes
    everything you need to implement a top-to-bottom application security solution
    in a concise and sensible way.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Security存在于Java第三方库的宇宙中，填补了Spring Framework最初引入时所填补的空白。像**Java Authentication
    and Authorization Service** (**JAAS**)或**Java EE Security**这样的标准确实提供了一些执行某些认证和授权功能的方法，但Spring
    Security之所以获胜，是因为它以简洁和合理的方式包含了您需要实现端到端应用程序安全解决方案的所有内容。
- en: Additionally, Spring Security appeals to many, because it offers out-of-the-box
    integration with many common enterprise authentication systems; so it's adaptable
    to most situations with little effort (beyond configuration) on the part of the
    developer.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Spring Security吸引了许多人，因为它提供了与许多常见企业认证系统的外盒集成；因此，它可以在很少的努力（超出配置）下适应大多数情况。
- en: It's in wide use because there's really no other mainstream framework quite
    like it!
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 它被广泛使用，因为没有其他主流框架真正像它这样！
- en: Summary
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have reviewed the common points of risk in an unsecured
    web application and the basic architecture of the sample application. We have
    also discussed the strategies for securing the application.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们回顾了一个未受保护的Web应用程序的常见风险点和示例应用程序的基本架构。我们还讨论了保护应用程序的策略。
- en: In the next chapter, we'll explore how to get Spring Security set up quickly
    and get a basic understanding of how it works.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨如何快速设置Spring Security并了解它的工作原理。
