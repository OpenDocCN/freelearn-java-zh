- en: Chapter 2. Spring Security with Struts 2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。Struts 2中的Spring Security
- en: 'In this chapter we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Integrating Struts 2 with Spring Security
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Struts 2与Spring Security集成
- en: Struts 2 application with basic Spring Security
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有基本Spring Security的Struts 2应用程序
- en: Using Struts 2 with digest/hashing-based Spring Security
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Struts 2中使用基于摘要/哈希的Spring Security
- en: Using Spring Security logout with Struts 2
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Struts 2中使用Spring Security注销
- en: Authenticating databases with Struts 2 and Spring Security
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Struts 2和Spring Security进行数据库身份验证
- en: Getting the logged-in user info in Struts 2 with Spring Security
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Struts 2中使用Spring Security获取已登录用户信息
- en: Displaying custom error messages in Struts 2 for authentication failure
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Struts 2中显示自定义错误消息以处理身份验证失败
- en: Authenticating with ApacheDS with Spring Security and Struts 2 application
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用ApacheDS进行Spring Security和Struts 2应用程序的身份验证
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: We learned the basics of security in [Chapter 1](ch01.html "Chapter 1. Basic
    Security"), *Basic Security*, which helped us to understand Spring Security better
    and also the origin of the Spring Security component in the Spring Framework.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[第1章](ch01.html "第1章.基本安全")中学习了安全的基础知识，*基本安全*，这有助于我们更好地理解Spring Security，也了解了Spring框架中Spring
    Security组件的起源。
- en: In this chapter, let's see how Spring Security can be used to authenticate users
    in a Struts 2 framework-based web application.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，让我们看看如何在基于Struts 2框架的Web应用程序中使用Spring Security来对用户进行身份验证。
- en: Apache Struts 2 can be integrated with JSF and Spring. It is a very flexible
    POJO Action-based MVC framework. POJO itself performs the role of an action class
    to fulfill the requests. Struts 2 is derived from another framework called WebWork
    and it works with servlet filters, which intercept the request and response.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Struts 2可以与JSF和Spring集成。它是一个非常灵活的基于POJO Action的MVC框架。POJO本身扮演一个动作类的角色来满足请求。Struts
    2源自另一个称为WebWork的框架，它与Servlet过滤器一起工作，拦截请求和响应。
- en: '**Exploring the Spring package**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**探索Spring包**'
- en: You can download the JARs from MAVEN directly or add the dependency in your
    POM file.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接从MAVEN下载JAR文件，或者在您的POM文件中添加依赖项。
- en: 'We prefer to use the latest JARs 3.1.4 from [http://mvnrepository.com/artifact/org.springframework.security/spring-security-core/](http://mvnrepository.com/artifact/org.springframework.security/spring-security-core/):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们更喜欢使用最新的JAR文件3.1.4，从[http://mvnrepository.com/artifact/org.springframework.security/spring-security-core/](http://mvnrepository.com/artifact/org.springframework.security/spring-security-core/)下载：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Main packages in Spring Security**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**Spring Security中的主要包**'
- en: '`org.springframework.security.authentication`: This is our area of interest'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`org.springframework.security.authentication`：这是我们感兴趣的领域'
- en: '`org.springframework.security.crypto`: This is used for encryption and decryption'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`org.springframework.security.crypto`：这用于加密和解密'
- en: '`org.springframework.security.util`: This is a general utility class used by
    the Spring Security API'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`org.springframework.security.util`：这是Spring Security API中使用的通用实用程序类'
- en: '`org.springframework.security.core`: This contains security core classes related
    to authentication and authorizations'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`org.springframework.security.core`：这包含与身份验证和授权相关的安全核心类'
- en: '`org.springframework.security.access`: This contains voter-based security access
    control annotations and decision making interfaces'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`org.springframework.security.access`：这包含基于投票者的安全访问控制注释和决策接口'
- en: '`org.springframework.security.provisioning`: This contains user and group provisioning
    interfaces'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`org.springframework.security.provisioning`：这包含用户和组配置接口'
- en: '**Key Spring Security features**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Spring Security的关键特性**'
- en: Supports JAAS.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持JAAS。
- en: Supports database.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持数据库。
- en: Supports MongoDB authentication.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持MongoDB身份验证。
- en: Provides authentication with OpenID.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供OpenID身份验证。
- en: Demonstrates multitenancy.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演示多租户。
- en: Provides basic authentication.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供基本身份验证。
- en: Provides digest authentication.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供摘要身份验证。
- en: Spring Security works like an independent module. Authentication code is handled
    independently by the Spring Security framework.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spring Security像一个独立的模块一样工作。身份验证代码由Spring Security框架独立处理。
- en: Supports authentication with ApacheDS.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持与ApacheDS进行身份验证。
- en: Supports authentication with Open LDAP.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持Open LDAP身份验证。
- en: '**Authentication mechanism**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**身份验证机制**'
- en: User submits their credentials to the system; that is, a username and password.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户提交他们的凭据到系统中；也就是说，用户名和密码。
- en: '`org.springframework.security.authentication.UsernamePasswordAuthenticationToken`
    accepts the credentials and passes them to `org.springframework.security.authentication.AuthenticationManager`
    for validation.'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`org.springframework.security.authentication.UsernamePasswordAuthenticationToken`接受凭据并将它们传递给`org.springframework.security.authentication.AuthenticationManager`进行验证。'
- en: System authenticates the user.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统对用户进行身份验证。
- en: 'Credential flows as follows: `UsernamePasswordAuthenticationToken` | `AuthenticationManager`
    | `Authentication`.'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 凭据流如下：`UsernamePasswordAuthenticationToken` | `AuthenticationManager` | `Authentication`。
- en: Finally a fully loaded authentication instance is returned.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后返回一个完全加载的身份验证实例。
- en: '`SecurityContextHolder` accepts the authentication instance.'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`SecurityContextHolder`接受身份验证实例。'
- en: The system also checks for authorization of roles or groups.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统还会检查角色或组的授权。
- en: Finally, the user is allowed to access the system based on his authorization.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，根据用户的授权，允许用户访问系统。
- en: Integrating Struts 2 with Spring Security
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Struts 2与Spring Security集成
- en: Let's first set up a Struts 2 application and integrate Spring Security with
    it.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先设置一个Struts 2应用程序，并将Spring Security与其集成。
- en: Getting ready
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Eclipse Indigo or higher version
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse Indigo或更高版本
- en: JBoss as server
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JBoss作为服务器
- en: 'Struts 2 JARs: 2.1.x'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Struts 2 JARs：2.1.x
- en: Spring-core JARs 3.1.4\. Release and Spring-Security 3.1.4.Release
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spring-core JAR文件3.1.4。发布和Spring-Security 3.1.4。发布
- en: Struts 2 Spring plugin jar
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Struts 2 Spring插件jar
- en: How to do it...
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In this section, we will learn how to set up the Struts 2 application with
    form-based Spring Security:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何使用基于表单的Spring Security设置Struts 2应用程序：
- en: In your Eclipse IDE, create a dynamic web project and name it `Spring_Security_Struts2`.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Eclipse IDE中，创建一个动态Web项目并命名为`Spring_Security_Struts2`。
- en: Create a source folder at `src/main/java`.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`src/main/java`下创建一个源文件夹。
- en: Create a `struts.xml` file under the source folder `src/main/java`.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在源文件夹`src/main/java`下创建一个`struts.xml`文件。
- en: To integrate Struts 2 with the Spring application, add the `application-context.xml`
    file reference here.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将Struts 2与Spring应用程序集成，需要在此处添加`application-context.xml`文件引用。
- en: Add the Struts filter mapping in `web.xml`. Spring listener also needs to be
    added to the `web.xml` file. The listener entry should be above the Struts 2 filter
    entry.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`web.xml`中添加Struts过滤器映射。还需要在`web.xml`文件中添加Spring监听器。监听器条目应位于Struts 2过滤器条目之上。
- en: The `contextLoaderListener` will tell the `servletcontainer` about the `springcontextLoader`
    and it will track events. This also allows the developers to create `BeanListeners`,
    which allow it to track events in the Bean.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`contextLoaderListener`将告诉`servletcontainer`有关`springcontextLoader`，并且它将跟踪事件。这还允许开发人员创建`BeanListeners`，以便跟踪Bean中的事件。'
- en: 'In the `web.xml` file, add the following code:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`web.xml`文件中，添加以下代码：
- en: '[PRE1]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To set up form-based security, we need to create `login.jsp`. The form action
    is `j_spring_security_check`:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要设置基于表单的安全性，我们需要创建`login.jsp`。表单操作为`j_spring_security_check`：
- en: '[PRE2]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Create a folder and name it `secure/hello.jsp`.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`secure/hello.jsp`的文件夹。
- en: Map the `login` action with `login.jsp`.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`login`操作与`login.jsp`进行映射。
- en: Map the `loginfailed` action with `login.jsp?error=true`.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`loginfailed`操作与`login.jsp?error=true`进行映射。
- en: 'Map the `welcome` action with `secure/hello.jsp` with the action class-`HelloWorld`:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`welcome`操作与`secure/hello.jsp`进行映射，操作类为`HelloWorld`：
- en: '`struts.xml`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`struts.xml`：'
- en: '[PRE3]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `login page` URL is mapped with the Struts 2 action `'/login'`.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`login page` URL与Struts 2操作`''/login''`进行了映射。'
- en: Security is applied on the Struts 2 action `'/welcome'`.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安全性应用于Struts 2操作`'/welcome'`。
- en: The user will be prompted to login.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户将被提示登录。
- en: The user with `role_user` will be authorized to access the pages
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 具有`role_user`的用户将被授权访问页面
- en: '`Applicationcontext-security.xml`:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`Applicationcontext-security.xml`：'
- en: '[PRE4]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: How it works...
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Just run the application. You will be provided with a link to access the secured
    page. On clicking on the link you will be prompted to log in. This is actually
    a form-based login.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 只需运行应用程序。您将获得一个链接来访问受保护的页面。点击链接后，将提示您登录。这实际上是基于表单的登录。
- en: Here on submit, the action is sent to the Spring Framework which authenticates
    the user.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在提交后，操作被发送到Spring框架进行用户身份验证。
- en: On success, the user will see the authenticated page.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 成功后，用户将看到经过身份验证的页面。
- en: The Struts 2 framework easily gels with the Spring Framework and its modules
    with very minor modification.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Struts 2框架与Spring框架及其模块非常容易融合，只需进行非常小的修改。
- en: '![How it works...](img/7525OS_02_01.jpg)![How it works...](img/7525OS_02_02.jpg)![How
    it works...](img/7525OS_02_03.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7525OS_02_01.jpg)![工作原理...](img/7525OS_02_02.jpg)![工作原理...](img/7525OS_02_03.jpg)'
- en: See also
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Struts 2 application with basic Spring Security* recipe
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*具有基本Spring Security的Struts 2应用程序*配方'
- en: The *Using Struts 2 with digest/hashing-based Spring Security* recipe
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用基于摘要/哈希的Spring Security与Struts 2*配方'
- en: The *Displaying custom error messages in Struts 2 for authentication failure*
    recipe
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中显示自定义身份验证失败消息*配方'
- en: The *Authenticating databases with Struts 2 and Spring Security* recipe
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Struts 2和Spring Security进行数据库身份验证*配方'
- en: The *Authenticating with ApacheDS with Spring Security and Struts 2 application*
    recipe
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Spring Security和Struts 2应用程序进行ApacheDS身份验证*配方'
- en: The *Using Spring Security logout with Struts 2* recipe
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Spring Security与Struts 2进行注销*配方'
- en: The *Getting the logged-in user info in Struts 2 with Spring Security* recipe
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中获取Spring Security中已登录用户信息*配方'
- en: Struts 2 application with basic Spring Security
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 具有基本Spring Security的Struts 2应用程序
- en: In this section we will demonstrate basic Spring Security authentication with
    Struts 2\. We will create a sample Struts 2 application and add Spring Security
    features to the action to make it secured. Only authenticated authorized users
    can access it.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将演示如何在Struts 2中进行基本的Spring Security身份验证。我们将创建一个示例Struts 2应用程序，并向操作添加Spring
    Security功能，使其受到保护。只有经过身份验证的授权用户才能访问它。
- en: Getting ready
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Update the `Applicationcontext-security.xml` file
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新`Applicationcontext-security.xml`文件
- en: 'Create a new dynamic project in Eclipse: `Struts2_Spring_BASIC_Security_Recipe2`'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Eclipse中创建一个新的动态项目：`Struts2_Spring_BASIC_Security_Recipe2`
- en: How to do it...
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Perform the following steps for integrating the Struts 2 application with Spring
    Security to implement basic authentication:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤，将Struts 2应用程序与Spring Security集成以实现基本身份验证：
- en: 'Modify the `applicationcontext-security.xml` file to support basic security:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`applicationcontext-security.xml`文件以支持基本安全性：
- en: '`Applicationcontext-security.xml`:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`Applicationcontext-security.xml`：'
- en: '[PRE5]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How it works...
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: When the user runs the Struts 2 application and tries to access the secured
    resource, the Spring Security context is initialized and the Struts 2 action is
    interrupted with Spring's login dialog box, which will request the username and
    password. On successful authentication, the user will be redirected to the Struts
    2 action page.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户运行Struts 2应用程序并尝试访问受保护的资源时，Spring Security上下文将被初始化，并且Spring的登录对话框将中断Struts
    2操作，该对话框将请求用户名和密码。验证成功后，用户将被重定向到Struts 2操作页面。
- en: 'The following is the workflow of the application:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是应用程序的工作流程：
- en: 'Struts 2 and Spring basic security on browser:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器上的Struts 2和Spring基本安全性：
- en: '![How it works...](img/7525OS_02_04.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7525OS_02_04.jpg)'
- en: See also
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Using Struts 2 with digest/hashing-based Spring Security* recipe
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用基于摘要/哈希的Spring Security与Struts 2*配方'
- en: Using Struts 2 with digest/hashing-based Spring Security
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用基于摘要/哈希的Spring Security与Struts 2
- en: Using the form-based or basic authentication doesn't make the Struts 2-based
    application secure since the passwords are exposed to the user as plain text.
    There is a crypto package available in Spring Security JAR. The package can decrypt
    the encrypted password, but we need to tell the Spring Security API about the
    algorithm used for encryption.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 使用基于表单或基本身份验证并不会使Struts 2应用程序变得安全，因为密码会以明文形式暴露给用户。Spring Security JAR中有一个加密包。该包可以解密加密的密码，但我们需要告诉Spring
    Security API有关加密算法的信息。
- en: Getting ready
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a dynamic web project in Eclipse
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Eclipse中创建一个动态Web项目
- en: Add the Struts 2 JARs
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加Struts 2 JAR包
- en: Add Spring Security related JARs
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加与Spring Security相关的JAR包
- en: The `web.xml`, `struts2.xml`, and JSP settings remain the same as the previous
    application
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`web.xml`，`struts2.xml`和JSP设置与先前的应用程序相同'
- en: How to do it...
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s encrypt the password: `packt123456`.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们加密密码：`packt123456`。
- en: We need to use an external JAR, `JACKSUM`, which means Java checksum. It supports
    both MD5 and SHA1 encryption.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要使用外部JAR，`JACKSUM`，这意味着Java校验和。它支持MD5和SHA1加密。
- en: Download the `jacksum.zip` file ([http://www.jonelo.de/java/jacksum/#Download](http://www.jonelo.de/java/jacksum/#Download))
    and extract the ZIP folder.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 下载`jacksum.zip`文件（[http://www.jonelo.de/java/jacksum/#Download](http://www.jonelo.de/java/jacksum/#Download)）并解压缩ZIP文件。
- en: '[PRE6]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![How to do it...](img/7525OS_02_05.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/7525OS_02_05.jpg)'
- en: 'Update the `applicationcontext-security.xml` file:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 更新`applicationcontext-security.xml`文件：
- en: '[PRE7]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How it works...
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We need to update the `Applicationcontext-security.xml` file. Observe that the
    type of authentication is basic but the password is hashed using the algorithm.
    We want the Spring Security to decrypt it using the SHA algorithm and authenticate
    the user.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要更新`Applicationcontext-security.xml`文件。注意，认证类型是基本的，但密码是使用算法进行哈希处理。我们希望Spring
    Security使用SHA算法对其进行解密并对用户进行身份验证。
- en: Spring Security is very flexible in handling digest authentication. You can
    also see that there is no container-based dependency.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Security在处理摘要身份验证方面非常灵活。您还可以看到没有基于容器的依赖关系。
- en: 'Basic authentication from the browser can be seen in the following screenshot:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在以下截图中看到来自浏览器的基本身份验证：
- en: '![How it works...](img/7525OS_02_06.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7525OS_02_06.jpg)'
- en: 'Spring has authenticated the user by decrypting the password:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Spring已通过解密密码对用户进行了身份验证：
- en: '![How it works...](img/7525OS_02_07.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7525OS_02_07.jpg)'
- en: See also
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Displaying custom error messages in Struts 2 for authentication failure*
    recipe
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中显示自定义错误消息以处理身份验证失败*配方'
- en: The *Authenticating databases with Struts 2 and Spring Security* recipe
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Struts 2和Spring Security进行身份验证数据库*配方'
- en: The *Authenticating with ApacheDS with Spring Security and Struts 2 application*
    recipe
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Spring Security和Struts 2应用程序进行ApacheDS身份验证*配方'
- en: The *Using Spring Security logout with Struts 2* recipe
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中使用Spring Security注销*配方'
- en: The *Getting the logged-in user info in Struts 2 with Spring Security* recipe
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中使用Spring Security获取已登录用户信息*配方'
- en: Using Spring Security logout with Struts 2
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Struts 2中使用Spring Security注销
- en: In this section let us implement a logout scenario, where the logged-in user
    will be logged out of the application. The logout action will be handled by the
    Spring Security framework. We need to configure the `struts.xml` file to handle
    the `j_spring_security_logout` action.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，让我们实现一个注销场景，已登录用户将从应用程序中注销。注销操作将由Spring Security框架处理。我们需要配置`struts.xml`文件以处理`j_spring_security_logout`操作。
- en: Getting ready
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a dynamic web project in Eclipse
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Eclipse中创建一个动态Web项目
- en: Add the Struts 2 related JARs
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加与Struts 2相关的JAR包
- en: Add Spring Security-related JARs
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加与Spring Security相关的JAR包
- en: The `web.xml`, `struts2.xml`, and JSP settings remain the same as the previous
    application
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`web.xml`，`struts2.xml`和JSP设置与先前的应用程序相同'
- en: How to do it...
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s update the secure page, `hello.jsp`:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们更新安全页面`hello.jsp`：
- en: '[PRE8]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Let''s map the `j_spring_security_logout` with the `struts.xml` file:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将`j_spring_security_logout`与`struts.xml`文件进行映射：
- en: When the user clicks on **logout**, the user will be logged out and will be
    redirected to `index.jsp`.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击**注销**时，用户将被注销并重定向到`index.jsp`。
- en: '[PRE9]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Update the `applicationcontext-security.xml` file:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`applicationcontext-security.xml`文件：
- en: '[PRE10]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works...
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Spring Security also provides options to handle logout. When the user clicks
    on **logout**, the user is directed to the assigned page.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Security还提供了处理注销的选项。当用户点击**注销**时，用户将被重定向到指定页面。
- en: '`j_spring_secuurity_logout` provides the logout option for the Struts 2 application.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`j_spring_secuurity_logout`为Struts 2应用程序提供了注销选项。'
- en: The Struts 2 application has the map and the URL with its action.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Struts 2应用程序具有其操作的地图和URL。
- en: The logout option is usually given in the secured pages.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 注销选项通常在受保护的页面中提供。
- en: There's more...
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Till now we have stored the authentication information in the `.xml` file. We
    have also hashed the password. How about storing the information on the external
    system and getting it? Let's see how Struts 2 works with this database authentication
    in the following section.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已将身份验证信息存储在`.xml`文件中。我们还对密码进行了哈希处理。如何在外部系统上存储信息并获取它呢？让我们看看Struts 2如何在以下部分与此数据库身份验证一起工作。
- en: See also
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Displaying custom error messages in Struts 2 for authentication failure*
    recipe
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中显示自定义错误消息以处理身份验证失败*配方'
- en: The *Authenticating databases with Struts 2 and Spring Security* recipe
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中使用Spring Security进行身份验证数据库*配方'
- en: The *Authenticating with ApacheDS with Spring Security and Struts 2 application*
    recipe
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Spring Security和Struts 2应用程序进行ApacheDS身份验证*配方'
- en: The *Getting the logged-in user info in Struts 2 with Spring Security* recipe
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中使用Spring Security获取已登录用户信息*配方'
- en: Authenticating databases with Struts 2 and Spring Security
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Struts 2和Spring Security进行身份验证数据库
- en: In this section, let us authorize the user who logs into the Struts 2 application
    using the information stored in the database. Spring Security needs to be configured
    in Struts 2 application such that it gets to know the location of the database
    and SQL that needs to be executed to authenticate the user using Spring Security.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，让我们使用存储在数据库中的信息对登录到Struts 2应用程序的用户进行授权。Spring Security需要在Struts 2应用程序中进行配置，以便它了解数据库的位置和需要执行的SQL，以使用Spring
    Security对用户进行身份验证。
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Create a dynamic web project in Eclipse: `Struts2_Spring_DBAuthentication_Recipe4`'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Eclipse中创建一个动态Web项目：`Struts2_Spring_DBAuthentication_Recipe4`
- en: Copy the `struts.xml` file to `src/main/java`
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`struts.xml`文件复制到`src/main/java`
- en: Add the `db-beans.xml` file to `WEB-INF`
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`db-beans.xml`文件添加到`WEB-INF`
- en: Copy the `webContent` folder from the previous recipe
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从上一个配方中复制`webContent`文件夹
- en: 'Add the following JARs into the `lib` folder or update your POM file if you
    are using maven:'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将以下JAR文件添加到`lib`文件夹中，或者如果使用maven，则更新您的POM文件：
- en: spring-jdbc-3.0.7.RELEASE
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: spring-jdbc-3.0.7.RELEASE
- en: mysql-connector-java-5.1.17
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mysql-connector-java-5.1.17
- en: commons-dbcp
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: commons-dbcp
- en: commons-pool-1.5.4
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: commons-pool-1.5.4
- en: How to do it...
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To perform database authentication with Struts 2 and Spring, we need to create
    a `db-beans.xml` file. The `db-beans.xml` file will have database information:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用Struts 2和Spring进行数据库身份验证，我们需要创建一个`db-beans.xml`文件。`db-beans.xml`文件将包含数据库信息：
- en: '[PRE11]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Add the `db-beans.xml` file in the same place as `applicationcontext-security.xml`.
    Update the `web.xml` file to read the `db-beans.xml` file:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与`applicationcontext-security.xml`相同的位置添加`db-beans.xml`文件。更新`web.xml`文件以读取`db-beans.xml`文件：
- en: '[PRE12]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Run the following SQL script in your database:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据库中运行以下SQL脚本：
- en: '[PRE13]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Update the `applicationContext-security.xml` file to read the database configuration:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`applicationContext-security.xml`文件以读取数据库配置：
- en: '[PRE14]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How it works...
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Struts 2 Framework gives a link to access the secured page. But the Spring Security
    framework interrupts and gives an authentication dialog box .The authentication
    is done by Spring Security Framework by querying the database. The authentication
    manager is configured with the datasource ref, which will load information for
    the security framework to authenticate the user based on the query.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Struts 2框架提供了一个链接来访问受保护的页面。但是Spring Security框架会中断并提供身份验证对话框。身份验证由Spring Security框架通过查询数据库完成。身份验证管理器配置了数据源引用，该引用将加载用于基于查询对用户进行身份验证的安全框架的信息。
- en: There's more...
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: So far we applied security with just a JSP file, which is mapped without action
    in `struts2.xml`. Let's see how we can map an action class with JSP, and then
    integrate with Spring Security. Ideally it should work in the same way. Let's
    get the logged-in user information in the action class and display it on the browser.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只是在JSP文件中应用了安全性，该文件在`struts2.xml`中没有操作映射。让我们看看如何将操作类与JSP映射，然后与Spring
    Security集成。理想情况下，它应该以相同的方式工作。让我们在操作类中获取已登录用户的信息并在浏览器上显示出来。
- en: See also
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Displaying custom error messages in Struts 2 for authentication failure*
    recipe
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中显示身份验证失败的自定义错误消息*示例'
- en: The *Authenticating with ApacheDS with Spring Security and Struts 2 application*
    recipe
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Spring Security和Struts 2应用程序进行ApacheDS身份验证*示例'
- en: The *Getting the logged-in user info in Struts 2 with Spring Security* recipe
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中使用Spring Security获取已登录用户信息*示例'
- en: Getting the logged-in user info in Struts 2 with Spring Security
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Struts 2中使用Spring Security获取已登录用户信息
- en: So far in our examples we have not used any Struts 2 action class.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在我们的示例中，我们还没有使用任何Struts 2操作类。
- en: Let's create an action class and see how Security behaves with this action class.
    We will use form-based authentication with this recipe.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个操作类并查看安全性如何与此操作类一起运行。我们将在此示例中使用基于表单的身份验证。
- en: Getting ready
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: So far in our examples we have not used any Struts 2 action class.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在我们的示例中，我们还没有使用任何Struts 2操作类。
- en: 'Let''s create an action class and see how security behaves with this action
    class. We will use form-based authentication with this recipe:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个操作类并查看安全性如何与此操作类一起运行。我们将在此示例中使用基于表单的身份验证：
- en: 'Create a dynamic web project: `Struts2_Spring_Security_Recipe5`'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个动态Web项目：`Struts2_Spring_Security_Recipe5`
- en: 'Create a package: `com.packt.action`'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个包：`com.packt.action`
- en: Copy the `struts.xml` file from the previous recipe in `src/main/java`
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从上一个示例中复制`struts.xml`文件到`src/main/java`
- en: Also copy the `WebContent` folder
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还要复制`WebContent`文件夹
- en: We need to add an action class to the package
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要向包中添加一个操作类
- en: Update the `struts.xml` file
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新`struts.xml`文件
- en: How to do it...
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The `HelloAction` file is as follows:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`HelloAction`文件如下：'
- en: '[PRE15]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Update the `Struts.xml` file with `HelloAction`. So when the user is authenticated,
    it will pass the request to the action class which will execute the `execute()`
    method, and then will be redirected to `hello.jsp`:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`HelloAction`更新`Struts.xml`文件。因此，当用户经过身份验证时，它将将请求传递给操作类，该操作类将执行`execute()`方法，然后将重定向到`hello.jsp`：
- en: '[PRE16]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Getting the logged in user:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取已登录用户：
- en: We can get the logged in username in the action class and we can display it
    on the page or use it further in our application.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在操作类中获取已登录的用户名，并在页面上显示它，或者在我们的应用程序中进一步使用它。
- en: We can use `request.getUserPrincipal` in our action class to get the logged
    in user information.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在我们的操作类中使用`request.getUserPrincipal`来获取已登录用户的信息。
- en: 'For the project setup:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于项目设置：
- en: 'Create a dynamic web project in Eclipse: `Struts2_Spring_Security_Recipe6`'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Eclipse中创建一个动态Web项目：`Struts2_Spring_Security_Recipe6`
- en: Copy the `src/main/java` folder from the previous recipe
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从上一个示例中复制`src/main/java`文件夹
- en: Copy the `Web content` folder from the previous recipe
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从上一个示例中复制`Web content`文件夹
- en: Modify the `HelloAction.java` file
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改`HelloAction.java`文件
- en: '[PRE17]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Modify the `secure/Hello.jsp` file:'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改`secure/Hello.jsp`文件：
- en: '[PRE18]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: How it works...
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The user information is stored in principal:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 用户信息存储在principal中：
- en: '![How it works...](img/7525OS_02_08.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7525OS_02_08.jpg)'
- en: 'Displaying the logged in user on the browser:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器上显示已登录用户：
- en: '![How it works...](img/7525OS_02_09.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7525OS_02_09.jpg)'
- en: There's more...
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: After displaying the user information, we can display the custom error message
    to the user on authentication failure.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 显示用户信息后，我们可以在身份验证失败时向用户显示自定义错误消息。
- en: See also
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Displaying custom error messages in Struts 2 for authentication failure*
    recipe
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Struts 2中显示身份验证失败的自定义错误消息*示例'
- en: The *Authenticating with ApacheDS with Spring Security and Struts 2 application*
    recipe
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Spring Security和Struts 2应用程序进行ApacheDS身份验证*示例'
- en: Displaying custom error messages in Struts 2 for authentication failure
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Struts 2中显示身份验证失败的自定义错误消息
- en: In this section, we will capture the authentication failure message from Spring
    Security in our Struts 2 application and see how this can be displayed to the
    user.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将在Struts 2应用程序中捕获Spring Security的身份验证失败消息，并查看如何将其显示给用户。
- en: Getting ready
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Redirect to failure action on authentication failure
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在身份验证失败时重定向到失败操作
- en: Display a custom message to the user
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向用户显示自定义消息
- en: How to do it...
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Perform the following steps for capturing Spring Security''s authentication
    failure messages in the JSP application:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以捕获Spring Security在JSP应用程序中的身份验证失败消息：
- en: 'In the `applicationcontext.xml` file, we can redirect the URL to another action:
    `Authentication-failure-url="/loginfailed? error=true"`.'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`applicationcontext.xml`文件中，我们可以将URL重定向到另一个操作：`Authentication-failure-url="/loginfailed?
    error=true"`。
- en: '[PRE19]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Update the `login.jsp` page with the following code:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码更新`login.jsp`页面：
- en: '[PRE20]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: How it works...
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Login failed action is mapped with the `login.jsp` file in `struts2.xml`. The
    `authentication-failure-url` is added in the `application-context.xml`. When the
    user enters the wrong credentials, authentication fails and the user is redirected
    to the login page with an error message.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 登录失败操作与`struts2.xml`中的`login.jsp`文件进行了映射。`application-context.xml`中添加了`authentication-failure-url`。当用户输入错误的凭据时，身份验证失败，用户将被重定向到带有错误消息的登录页面。
- en: The error message configuration is done in the JSP file.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 错误消息配置在JSP文件中完成。
- en: '![How it works...](img/7525OS_02_10.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7525OS_02_10.jpg)'
- en: See also
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Authenticating with ApacheDS with Spring Security and Struts 2 application*
    recipe
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Spring Security和Struts 2应用程序进行ApacheDS身份验证的食谱
- en: Authenticating with ApacheDS with Spring Security and Struts 2 application
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Spring Security和Struts 2应用程序进行ApacheDS身份验证
- en: In this section, we will be storing the user credentials and role information
    in the Apache directory server. Spring Security has to locate the server and log
    in to the server. It should authenticate the user by comparing the credentials
    submitted by the user and the credentials and role information present in the
    Apache directory server.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将在Apache目录服务器中存储用户凭据和角色信息。Spring Security必须找到服务器并登录到服务器。它应该通过比较用户提交的凭据和Apache目录服务器中存在的凭据和角色信息来对用户进行身份验证。
- en: Getting ready
  id: totrans-249
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Create a dynamic web project in Eclipse
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Eclipse中创建一个动态Web项目
- en: The `src/main/java` folder and the `WebContent` Folder remain the same
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src/main/java`文件夹和`WebContent`文件夹保持不变'
- en: 'Install Apache directory studio: 1.5.3'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Apache目录工作室：1.5.3
- en: 'Install Apache directory server: 2.0'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Apache目录服务器：2.0
- en: 10389 is the apache-ds port
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10389是apache-ds端口
- en: Add LDAP-related security JARs to the `WebContent Lib` folder
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将与LDAP相关的安全JAR添加到`WebContent Lib`文件夹中。
- en: spring-ldap-core-tiger-1.3.X release
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: spring-ldap-core-tiger-1.3.X版本
- en: spring-ldap-odm-1.3.X release
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: spring-ldap-odm-1.3.X版本
- en: spring-security-ldap-1.3.X release
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: spring-security-ldap-1.3.X版本
- en: spring-ldap-ldif-batch-1.3.X release
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: spring-ldap-ldif-batch-1.3.X版本
- en: spring-ldap-test-1.3.X release
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: spring-ldap-test-1.3.X版本
- en: spring-ldap-core-1.3.X release
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: spring-ldap-core-1.3.X版本
- en: spring-ldap-ldif-core-1.3.X release
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: spring-ldap-ldif-core-1.3.X版本
- en: How to do it...
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Perform the following steps to set up Apache directory to authenticate users
    in the Struts 2 application using Spring Security:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤设置Apache目录以使用Spring Security在Struts 2应用程序中对用户进行身份验证：
- en: Configure the Apache DS Server after installing the mentioned prerequisites.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装了上述先决条件之后配置Apache DS服务器。
- en: 'Create a partition using the following steps:'
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下步骤创建一个分区：
- en: 'Open the `server.xml` file: `C:\Program Files\Apache Directory Server\instances\default\conf\server.xml`.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开`server.xml`文件：`C:\Program Files\Apache Directory Server\instances\default\conf\server.xml`。
- en: 'Add JDM partition: `<jdbmPartition id="packt" suffix="o=packt"/>`.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加JDM分区：`<jdbmPartition id="packt" suffix="o=packt"/>`。
- en: You can restart the Apache DS Server to see the changes. Then connect to Apache
    DS using the Apache Directory Studio. Right Click on **DIT**. Create **Entry**
    from **Scratch**. Select **Organization**, select **o** and in the **Value** enter
    `packt`. Select **Finish** and refresh the **DIT** to see the updates.
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以重新启动Apache DS服务器以查看更改。然后使用Apache目录工作室连接到Apache DS。右键单击**DIT**。从**Scratch**创建**Entry**。选择**Organization**，选择**o**，在**Value**中输入`packt`。选择**Finish**并刷新**DIT**以查看更新。
- en: Configure Apache Directory studio.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置Apache目录工作室。
- en: Connect to the Apache directory server.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到Apache目录服务器。
- en: Apache DS runs on 10389.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Apache DS运行在10389端口。
- en: Create two groups `ou=groups` and `ou=user`.![How to do it...](img/7525OS_02_11.jpg)![How
    to do it...](img/7525OS_02_12.jpg)![How to do it...](img/7525OS_02_13.jpg)
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建两个组`ou=groups`和`ou=user`。![如何做...](img/7525OS_02_11.jpg)![如何做...](img/7525OS_02_12.jpg)![如何做...](img/7525OS_02_13.jpg)
- en: Here, object class is for adding entries to `ou=groups`, since this maintains
    the role:![How to do it...](img/7525OS_02_14.jpg)
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，对象类是用于向`ou=groups`添加条目，因为这维护了角色：![如何做...](img/7525OS_02_14.jpg)
- en: Here, object class is to add entries to `ou=people`:![How to do it...](img/7525OS_02_15.jpg)
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，对象类是为了向`ou=people`添加条目：![如何做...](img/7525OS_02_15.jpg)
- en: Assign roles to users by adding `UniqueMember` to `cn=admin`.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过向`cn=admin`添加`UniqueMember`为用户分配角色。
- en: '`Spring-security-ldap.xml`:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '`Spring-security-ldap.xml`：'
- en: '[PRE21]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How it works...
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`Spring Security-ldap.xml` will contain details on the server location and
    the domain. It should connect to retrieve the user information. The domain is
    `sevenSeas`. 1039 is the port number for the LDAP server. Spring Security uses
    the `ldap-server` tag to give the information on LDAP. It also gives the password
    and the domain on which it will connect. The Struts 2 request will be interrupted
    by Spring Security and, for authentication, the user information will be received
    from the login page. Spring Security requires the LDAP for the username; on success,
    the user is given access to the secured resources.'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '`Spring Security-ldap.xml`将包含有关服务器位置和域的详细信息。它应该连接以检索用户信息。域是`sevenSeas`。1039是LDAP服务器的端口号。Spring
    Security使用`ldap-server`标签提供LDAP信息。它还提供密码和将连接的域。Struts 2请求将被Spring Security中断，并且对于身份验证，将从登录页面接收用户信息。Spring
    Security需要LDAP来获取用户名；成功后，用户将获得对受保护资源的访问权限。'
- en: See also
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[Chapter 3](ch03.html "Chapter 3. Spring Security with JSF"), *Spring Security
    with JSF*'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章。使用JSF的Spring安全性"), *使用JSF的Spring安全性*'
