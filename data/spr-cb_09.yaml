- en: Chapter 9. Handling Mobiles and Tablets
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。处理手机和平板
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下配方：
- en: Installing Spring Mobile
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Spring Mobile
- en: Detecting mobiles and tablets
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测手机和平板
- en: Switching to the normal view on mobiles
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在手机上切换到正常视图
- en: Using different JSP views for mobiles automatically
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动为手机使用不同的JSP视图
- en: Using a `.mobi` domain name on mobiles
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在手机上使用`.mobi`域名
- en: Using an `m.` subdomain on mobiles
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在手机上使用`m.`子域名
- en: Using a different domain name on mobiles
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在手机上使用不同的域名
- en: Using a subfolder path on mobiles
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在手机上使用子文件夹路径
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'To build a mobile-friendly website, the current trend is to use responsive
    design where the page adapts to the screen width. This way, the same page is nicely
    displayed on all devices: computers, tablets and mobiles.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建一个适合移动设备的网站，当前趋势是使用响应式设计，其中页面会适应屏幕宽度。这样，同一页面可以在所有设备上很好地显示：电脑、平板和手机。
- en: 'Another approach, which this chapter covers, is to build a separate website
    for mobile devices. This requires building two pages (different HTML and distinct
    URLs) for each page of the website: one for the computer and one for the mobile.
    This extra work makes sense when:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍的一种另一种方法是为移动设备构建一个独立的网站。这需要为网站的每一页构建两个页面（不同的HTML和不同的URL）：一个用于电脑，一个用于手机。当：
- en: Performance is important. For example, the loading time of a responsive website
    like [https://www.flickr.com/](https://www.flickr.com/) would be too long on mobile
    devices because of the high-resolution images of the desktop version. A separate
    mobile website makes it easier to optimize the user experience on mobile devices.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能很重要。例如，像[https://www.flickr.com/](https://www.flickr.com/)这样的响应式网站的加载时间在移动设备上会太长，因为桌面版本的图片分辨率很高。一个独立的移动网站可以更容易地优化移动设备上的用户体验。
- en: The computer version of the website already exists; in this case, it's usually
    much simpler to build a separate mobile website.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站的电脑版本已经存在；在这种情况下，通常更简单的是构建一个独立的移动网站。
- en: In this chapter, we'll cover how to serve different pages to mobile devices
    using Spring Mobile, a Spring project.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍如何使用Spring Mobile（一个Spring项目）为移动设备提供不同的页面。
- en: Installing Spring Mobile
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Spring Mobile
- en: In this recipe, you'll learn how to install Spring Mobile and prepare the Spring
    configuration class for the other recipes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，你将学习如何安装Spring Mobile并为其他配方准备Spring配置类。
- en: How to do it…
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Here are the steps to install Spring Mobile:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Spring Mobile的步骤如下：
- en: 'Add the Maven dependency for Spring Mobile in `pom.xml`:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`pom.xml`中添加Spring Mobile的Maven依赖项：
- en: '[PRE0]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Make the Spring configuration class extend `WebMvcConfigurerAdapter`:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使Spring配置类继承`WebMvcConfigurerAdapter`：
- en: '[PRE1]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Override the `addInterceptors()` method from `WebMvcConfigurerAdapter`:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 覆盖`WebMvcConfigurerAdapter`中的`addInterceptors()`方法：
- en: '[PRE2]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How it works…
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `addInterceptors()` method will be used in the following recipes to register
    various interceptors.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下配方中，`addInterceptors()`方法将用于注册各种拦截器。
- en: There's more…
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: For more information about interceptors, refer to the *Executing some code before
    and after controllers using interceptors* recipe in [Chapter 3](ch03.html "Chapter 3. Using
    Controllers and Views"), *Using Controllers and Views*.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 关于拦截器的更多信息，请参考[第3章](ch03.html "第3章。使用控制器和视图")中的*在控制器和视图之前和之后执行代码使用拦截器*配方，*使用控制器和视图*。
- en: Detecting mobiles and tablets
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测手机和平板
- en: In this recipe, you'll learn how, from a controller method, you can detect whether
    the current HTTP request has come from a desktop computer, mobile, or tablet.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，你将学习如何从控制器方法中检测当前HTTP请求是否来自桌面电脑、手机或平板。
- en: How to do it…
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Register a `DeviceResolverHandlerInterceptor` interceptor and use `DeviceUtils`
    in the controller method:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制器方法中注册`DeviceResolverHandlerInterceptor`拦截器并使用`DeviceUtils`：
- en: 'In the Spring configuration class, declare a `DeviceResolverHandlerInterceptor`
    bean:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Spring配置类中，声明一个`DeviceResolverHandlerInterceptor`豆：
- en: '[PRE3]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Register the `DeviceResolverHandlerInterceptor` bean as an interceptor in the
    `addInterceptors()` method:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`addInterceptors()`方法中将`DeviceResolverHandlerInterceptor`豆注册为拦截器：
- en: '[PRE4]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Add an `HttpServletRequest` argument to your controller method:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的控制器方法中添加一个`HttpServletRequest`参数：
- en: '[PRE5]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Use `DeviceUtils.getCurrentDevice()` to generate a `Device` object from `HttpServletRequest`:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`DeviceUtils.getCurrentDevice()`从`HttpServletRequest`生成一个`Device`对象：
- en: '[PRE6]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Use the `Device` object to detect the type of device that sent the request:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`Device`对象来检测发送请求的设备类型：
- en: '[PRE7]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How it works…
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `DeviceResolverHandlerInterceptor` interceptor generates a `Device` object
    from the HTTP request and stores it in `HttpServletRequest`, passed to the controller
    method. `DeviceUtils.getCurrentDevice()` is a convenient method to retrieve the
    `Device` object.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`DeviceResolverHandlerInterceptor`拦截器从HTTP请求生成`Device`对象，并将其存储在传递给控制器方法的`HttpServletRequest`中。`DeviceUtils.getCurrentDevice()`是一个方便的方法来检索`Device`对象。'
- en: You can then choose to display different JSPs based on the `Device` type.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以选择根据`Device`类型显示不同的JSP。
- en: To generate the `Device` object, `DeviceResolverHandlerInterceptor` uses `LiteDeviceResolver`
    by default, which uses the **User-Agent** header of the HTTP request. The algorithm
    is based on WordPress Mobile Pack's detection algorithm.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为了生成`Device`对象，`DeviceResolverHandlerInterceptor`默认使用`LiteDeviceResolver`，它使用HTTP请求的**User-Agent**头。该算法基于WordPress
    Mobile Pack的检测算法。
- en: Switching to the normal view on mobiles
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在移动设备上切换到普通视图
- en: A mobile user gets the mobile version of the website by default, but he/she
    may want to access some contents displayed only on the normal version. Spring
    Mobile offers the `SitePreference` object for that purpose, which is to be used
    instead of the `Device` object used in the previous recipe.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 移动用户默认获取网站的移动版本，但他/她可能想访问仅在普通版本上显示的内容。Spring Mobile为此提供了`SitePreference`对象，该对象应替代之前菜谱中使用的`Device`对象。
- en: How to do it…
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to create links, to switch between the normal version and
    the mobile version of a website:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建链接，在网站的普通版本和移动版本之间切换：
- en: 'In the Spring configuration class, declare a `DeviceResolverHandlerInterceptor`
    bean and a `SitePreferenceHandlerInterceptor` bean and register them as interceptors:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Spring配置类中，声明一个`DeviceResolverHandlerInterceptor` bean和一个`SitePreferenceHandlerInterceptor`
    bean，并将它们注册为拦截器：
- en: '[PRE8]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In your controller method, add an `HttpServletRequest` argument:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的控制器方法中，添加一个`HttpServletRequest`参数：
- en: '[PRE9]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Use `SitePreferenceUtils.getCurrentSitePreference()` to generate a `SitePreference`
    object:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`SitePreferenceUtils.getCurrentSitePreference()`生成一个`SitePreference`对象：
- en: '[PRE10]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Use the `SitePreference` object to detect the version of the page to be displayed:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`SitePreference`对象来检测将要显示的页面版本：
- en: '[PRE11]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In the view, add links to the two versions of the page:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在视图中，添加到页面两个版本的链接：
- en: '[PRE12]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works…
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Spring Mobile automatically detects the `site_preference` parameter (via the
    `SitePreferenceHandlerInterceptor` interceptor) and adjusts the `SitePreference`
    value accordingly.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Mobile自动检测`site_preference`参数（通过`SitePreferenceHandlerInterceptor`拦截器）并相应地调整`SitePreference`值。
- en: By default, the `SitePreference` value is the same as `Device`. For example,
    a *mobile* preference for a *mobile* device. When the user clicks on a link containing
    a `site_preference` parameter, the site preference is changed, but the device
    type remains the same. For example, a *normal* preference for a *mobile* device.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`SitePreference`值与`Device`相同。例如，对于*移动*设备，有一个*移动*偏好。当用户点击包含`site_preference`参数的链接时，站点偏好会改变，但设备类型保持不变。例如，对于*移动*设备，有一个*普通*偏好。
- en: There's more…
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: Spring Mobile supports a *tablet* site preference. Some websites provide pages
    optimized for tablets; Google Search, for example, provides a page optimized for
    tablets.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Spring Mobile支持*平板*站点偏好。一些网站提供针对平板优化的页面；例如，Google Search提供了针对平板优化的页面。
- en: Using different JSP views for mobiles automatically
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动使用不同的JSP视图为移动设备
- en: Instead of having to manually select the correct JSP in each controller method
    depending on the request device or site preference, use `LiteDeviceDelegatingViewResolver`
    provided by Spring Mobile.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是在每个控制器方法中手动选择正确的JSP，根据请求设备或站点偏好，使用Spring Mobile提供的`LiteDeviceDelegatingViewResolver`。
- en: How to do it…
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In the Spring configuration class, replace any existing `ViewResolver` bean
    with a `LiteDeviceDelegatingViewResolver` bean:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在Spring配置类中，将任何现有的`ViewResolver` bean替换为`LiteDeviceDelegatingViewResolver` bean：
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: How it works…
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: For a controller returning the `userList` String, the `/WEB-INF/userList.jsp`
    JSP view will be used if the site preference is *normal*. The `/WEB-INF/mobile/userList.jsp`
    JSP view will be used if the site preference is *mobile*.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于返回`userList`字符串的控制器，如果站点偏好是*普通*，则将使用`/WEB-INF/userList.jsp` JSP视图。如果站点偏好是*移动*，则将使用`/WEB-INF/mobile/userList.jsp`
    JSP视图。
- en: 'If the site preference is *mobile* and `/WEB-INF/mobile/userList.jsp` doesn''t
    exist, `/WEB-INF/userList.jsp` will be used as a fallback instead. This is enabled
    by the line:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果站点偏好是*移动*，并且`/WEB-INF/mobile/userList.jsp`不存在，则将使用`/WEB-INF/userList.jsp`作为后备。这是通过以下行启用的：
- en: '[PRE14]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: There's more…
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: '`LiteDeviceDelegatingViewResolver` supports custom JSP views for tablets:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`LiteDeviceDelegatingViewResolver` 支持平板电脑的自定义 JSP 视图：'
- en: '[PRE15]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Using a .mobi domain name on mobiles
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在手机上使用 .mobi 域名
- en: 'In this recipe, you''ll learn how to use a top-level `.mobi` domain name for
    the mobile pages of your website. For example:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，您将学习如何为网站的移动页面使用顶级 `.mobi` 域名。例如：
- en: '`mysite.com` for the normal website'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mysite.com` 为正常网站'
- en: '`mysite.mobi` for the mobile version'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mysite.mobi` 为移动版本'
- en: The top-level domain name `.mobi` has been created to enable visitors of a website
    to ask explicitly for its mobile version. For example, [http://google.mobi](http://google.mobi).
    Google, Microsoft, Nokia, and Samsung originally sponsored it.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最高级域名 `.mobi` 的创建是为了让网站的访客明确地请求其移动版本。例如，[http://google.mobi](http://google.mobi)。Google、Microsoft、Nokia
    和 Samsung 最初赞助了它。
- en: Getting ready
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure that the `SitePreferenceHandlerInterceptor` interceptor is declared
    in the Spring configuration. Refer to the *Switching to the normal view on mobiles*
    recipe in this chapter.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在 Spring 配置中声明了 `SitePreferenceHandlerInterceptor` 拦截器。参考本章中的 *在手机上切换到正常视图*
    菜单。
- en: How to do it…
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to use a `.mobi` domain name for the mobile version of the
    website:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤为网站的移动版本使用 `.mobi` 域名：
- en: 'In the Spring configuration, declare a `SiteSwitcherHandlerInterceptor` bean
    initialized with the `dotMobi()` method with your main domain name as a parameter:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Spring 配置中，声明一个使用 `dotMobi()` 方法初始化的 `SiteSwitcherHandlerInterceptor` 实例，并将您的域名作为参数：
- en: '[PRE16]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Declare that bean as an interceptor:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将该实例声明为拦截器：
- en: '[PRE17]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How it works…
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Behind the scenes, `SiteSwitcherHandlerInterceptor` reads the current `SitePreference`
    value (*normal*, *tablet*, or *mobile*) and performs a redirect to the correct
    domain name if necessary. For example, an HTTP request from a mobile device for
    `mywebsite.com` will be automatically redirected to `mywebsite.mobi`. A tablet
    will go to the normal website.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，`SiteSwitcherHandlerInterceptor` 读取当前的 `SitePreference` 值（*正常*、*平板*或*移动*），并在必要时执行重定向到正确的域名。例如，来自移动设备的对
    `mywebsite.com` 的 HTTP 请求将被自动重定向到 `mywebsite.mobi`。平板电脑将访问正常网站。
- en: Using an m. subdomain on mobiles
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在手机上使用 m. 子域名
- en: 'In this recipe, you''ll learn how to use an `m.` subdomain for the mobile pages
    of your website. For example:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，您将学习如何为网站的移动页面使用 `m.` 子域名。例如：
- en: '`mysite.com` for the normal website'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mysite.com` 为正常网站'
- en: '`m.mysite.com` for the mobile version'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`m.mysite.com` 为移动版本'
- en: 'Some advantages of an `m.` subdomain are:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`m.` 子域名的某些优点是：'
- en: No need to purchase another domain name (and another SSL certificate if you're
    using HTTPS)
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需购买另一个域名（如果您使用 HTTPS，则无需购买另一个 SSL 证书）
- en: It is easy to remember for the user
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对用户来说很容易记住
- en: Getting ready
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure that the `SitePreferenceHandlerInterceptor` interceptor is declared
    in the Spring configuration. Refer to the *Switching to the normal view on mobiles*
    recipe in this chapter.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在 Spring 配置中声明了 `SitePreferenceHandlerInterceptor` 拦截器。参考本章中的 *在手机上切换到正常视图*
    菜单。
- en: How to do it…
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to use a `m.` subdomain for the mobile version of the website:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤为网站的移动版本使用 `m.` 子域名：
- en: 'In the Spring configuration, declare a `SiteSwitcherHandlerInterceptor` bean
    initialized with the `mDot()` method with your main domain name as a parameter:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Spring 配置中，声明一个使用 `mDot()` 方法初始化的 `SiteSwitcherHandlerInterceptor` 实例，并将您的域名作为参数：
- en: '[PRE18]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Declare that bean as an interceptor:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将该实例声明为拦截器：
- en: '[PRE19]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works…
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Behind the scenes, `SiteSwitcherHandlerInterceptor` reads the current `SitePreference`
    value (*normal*, *tablet*, or *mobile*) and performs a redirect to the correct
    domain name if necessary. For example, an HTTP request from a mobile device for
    `mywebsite.com` will be automatically redirected to `m.mywebsite.com`. A tablet
    will go to the normal website.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，`SiteSwitcherHandlerInterceptor` 读取当前的 `SitePreference` 值（*正常*、*平板*或*移动*），并在必要时执行重定向到正确的域名。例如，来自移动设备的对
    `mywebsite.com` 的 HTTP 请求将被自动重定向到 `m.mywebsite.com`。平板电脑将访问正常网站。
- en: Using a different domain name on mobiles
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在手机上使用不同的域名
- en: 'In this recipe, you''ll learn how to use a different domain name for the mobile
    pages of your website. For example:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，您将学习如何为网站的移动页面使用不同的域名。例如：
- en: '`mysite.com` for the normal website'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mysite.com` 为正常网站'
- en: '`mymobilesite.com` for the mobile version'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mymobilesite.com` 为移动版本'
- en: Getting ready
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure that the `SitePreferenceHandlerInterceptor` interceptor is declared
    in the Spring configuration. Refer to the *Switching to the normal view on mobiles*
    recipe in this chapter.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在Spring配置中声明了`SitePreferenceHandlerInterceptor`拦截器。参考本章中的*在移动设备上切换到正常视图*配方。
- en: How to do it…
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to use a different domain name for the mobile version of
    the website:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤为网站的移动版本使用不同的域名：
- en: 'In the Spring configuration, declare a `SiteSwitcherHandlerInterceptor` bean
    initialized with the `standard()` method with your main domain name, mobile domain
    name, and the value for the `Set-Cookie` HTTP header field:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Spring配置中，声明一个使用`standard()`方法初始化的`SiteSwitcherHandlerInterceptor` bean，并指定你的主域名、移动域名以及`Set-Cookie`
    HTTP头字段的值：
- en: '[PRE20]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Declare that bean as an interceptor:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将该bean声明为拦截器：
- en: '[PRE21]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How it works…
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Behind the scenes, `SiteSwitcherHandlerInterceptor` reads the current `SitePreference`
    value (*normal*, *tablet*, or *mobile*) and performs a redirect to the correct
    domain name if necessary. For example, an HTTP request from a mobile device for
    `mywebsite.com` will be redirected automatically to `mymobilewebsite.com`. A tablet
    will go to the normal website.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，`SiteSwitcherHandlerInterceptor`读取当前的`SitePreference`值（*normal*、*tablet*或*mobile*）并在必要时重定向到正确的域名。例如，来自移动设备的对`mywebsite.com`的HTTP请求将被自动重定向到`mymobilewebsite.com`。平板电脑将访问正常网站。
- en: The `Set-Cookie` HTTP header field contains the `SitePreference` value. The
    cookie allows us to share that value with subdomains. In this recipe, `.mywebsite.com`
    makes the `SitePreference` value available to `www.mywebsite.com`, for example.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`Set-Cookie` HTTP头字段包含`SitePreference`值。该cookie允许我们与子域共享该值。在这个配方中，`.mywebsite.com`使得`SitePreference`值对`www.mywebsite.com`等可用。'
- en: Using a subfolder path on mobiles
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在移动设备上使用子文件夹路径
- en: 'In this recipe, you''ll learn how to use a subfolder in the URL for the mobile
    pages of your website. For example:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，你将学习如何使用URL中的子文件夹来为你的网站创建移动页面。例如：
- en: '`mysite.com` for the normal website'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为正常网站指定`mysite.com`
- en: '`mysite.com/mobile` for the mobile version'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为移动版本指定`mysite.com/mobile`
- en: Getting ready
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure that the `SitePreferenceHandlerInterceptor` interceptor is declared
    in the Spring configuration. Refer to the *Switching to the normal view on mobiles*
    recipe in this chapter.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在Spring配置中声明了`SitePreferenceHandlerInterceptor`拦截器。参考本章中的*在移动设备上切换到正常视图*配方。
- en: How to do it…
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to use a subfolder path for the mobile version of the website:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤为网站的移动版本使用子文件夹路径：
- en: 'In the Spring configuration, declare a `SiteSwitcherHandlerInterceptor` bean
    initialized with the `urlPath()` method with the subfolder name and the web application
    root path if necessary:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Spring配置中，声明一个使用`urlPath()`方法初始化的`SiteSwitcherHandlerInterceptor` bean，并指定子文件夹名称以及必要时使用的Web应用程序根路径：
- en: '[PRE22]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Declare that bean as an interceptor:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将该bean声明为拦截器：
- en: '[PRE23]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Add the controller method for the URL with the `mobile` subfolder:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为带有`mobile`子文件夹的URL添加控制器方法：
- en: '[PRE24]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: How it works…
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Behind the scenes, `SiteSwitcherHandlerInterceptor` reads the current `SitePreference`
    value (*normal*, *tablet*, or *mobile*) and performs a redirect to add or remove
    the `mobile` subfolder to the URL if necessary. For example, an HTTP request from
    a mobile device for `mywebsite.com` will be automatically redirected to `mywebsite.com/mobile`.
    A tablet will go to the normal website.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，`SiteSwitcherHandlerInterceptor`读取当前的`SitePreference`值（*normal*、*tablet*或*mobile*）并在必要时对URL进行重定向以添加或删除`mobile`子文件夹。例如，来自移动设备的对`mywebsite.com`的HTTP请求将被自动重定向到`mywebsite.com/mobile`。平板电脑将访问正常网站。
